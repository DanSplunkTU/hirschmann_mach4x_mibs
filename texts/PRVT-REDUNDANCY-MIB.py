#
# PySNMP MIB module PRVT-REDUNDANCY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-REDUNDANCY-MIB
# Produced by pysmi-1.1.8 at Tue Jan 11 21:46:31 2022
# On host fv-az121-779 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
software, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "software")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Integer32, TimeTicks, Gauge32, Counter32, IpAddress, NotificationType, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, ObjectIdentity, iso, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "TimeTicks", "Gauge32", "Counter32", "IpAddress", "NotificationType", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "ObjectIdentity", "iso", "Unsigned32", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
prvtRedundancyMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 111, 5))
prvtRedundancyMIB.setRevisions(('2013-12-17 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: prvtRedundancyMIB.setRevisionsDescriptions(('Initial version.',))
if mibBuilder.loadTexts: prvtRedundancyMIB.setLastUpdated('201312170000Z')
if mibBuilder.loadTexts: prvtRedundancyMIB.setOrganization('BATM Advanced Communication')
if mibBuilder.loadTexts: prvtRedundancyMIB.setContactInfo('BATM/Telco Systems Support team\n         Email:\n         For North America: techsupport@telco.com\n         For North Europe: support@batm.de, info@batm.de\n         For the rest of the world: techsupport@telco.com')
if mibBuilder.loadTexts: prvtRedundancyMIB.setDescription('Monitoring of components redundancy protection')
prvtRedundancyNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 0))
prvtRedundancyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1))
prvtRedundancyChassisTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1, 1), )
if mibBuilder.loadTexts: prvtRedundancyChassisTable.setStatus('current')
if mibBuilder.loadTexts: prvtRedundancyChassisTable.setDescription('A list of slots in the chassis')
prvtRedundancyChassisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1, 1, 1), ).setIndexNames((0, "PRVT-REDUNDANCY-MIB", "prvtRedundancyChassisSlotId"))
if mibBuilder.loadTexts: prvtRedundancyChassisEntry.setStatus('current')
if mibBuilder.loadTexts: prvtRedundancyChassisEntry.setDescription('Entry in prvtRedundancyChassisTable')
prvtRedundancyChassisSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: prvtRedundancyChassisSlotId.setStatus('current')
if mibBuilder.loadTexts: prvtRedundancyChassisSlotId.setDescription('Index in the table.')
prvtRedundancyChassisLICType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 19, 20))).clone(namedValues=NamedValues(("lc-unknown", 1), ("lc-8020-10GE", 3), ("lc-8064-1GE", 4), ("lc-8032-1GE", 19), ("lc-8062-1GE", 20)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtRedundancyChassisLICType.setStatus('current')
if mibBuilder.loadTexts: prvtRedundancyChassisLICType.setDescription('LIC type')
prvtRedundancyChassisStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("protected", 0), ("notProtected", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtRedundancyChassisStatus.setStatus('current')
if mibBuilder.loadTexts: prvtRedundancyChassisStatus.setDescription('Chassis status')
prvtRedundancyChassisEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("extracted", 0), ("inserted", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtRedundancyChassisEntryStatus.setStatus('current')
if mibBuilder.loadTexts: prvtRedundancyChassisEntryStatus.setDescription('Chassis Entry status')
licStatus = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 0, 1)).setObjects(("PRVT-REDUNDANCY-MIB", "prvtRedundancyChassisEntryStatus"))
if mibBuilder.loadTexts: licStatus.setStatus('current')
if mibBuilder.loadTexts: licStatus.setDescription('LIC  prvtRedundancyChassisEntryStatus has been changed.\n         Card slotId is present as a key.')
switchover = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 0, 2))
if mibBuilder.loadTexts: switchover.setStatus('current')
if mibBuilder.loadTexts: switchover.setDescription('Switchover has happend - link between Active and Standby HUB is broken.')
redundancyStatus = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 0, 3)).setObjects(("PRVT-REDUNDANCY-MIB", "prvtRedundancyChassisStatus"))
if mibBuilder.loadTexts: redundancyStatus.setStatus('current')
if mibBuilder.loadTexts: redundancyStatus.setDescription('Chassis redundancy-status')
mibBuilder.exportSymbols("PRVT-REDUNDANCY-MIB", prvtRedundancyNotifications=prvtRedundancyNotifications, switchover=switchover, prvtRedundancyMIB=prvtRedundancyMIB, prvtRedundancyChassisSlotId=prvtRedundancyChassisSlotId, prvtRedundancyChassisStatus=prvtRedundancyChassisStatus, prvtRedundancyChassisEntryStatus=prvtRedundancyChassisEntryStatus, prvtRedundancyObjects=prvtRedundancyObjects, prvtRedundancyChassisTable=prvtRedundancyChassisTable, redundancyStatus=redundancyStatus, PYSNMP_MODULE_ID=prvtRedundancyMIB, prvtRedundancyChassisEntry=prvtRedundancyChassisEntry, prvtRedundancyChassisLICType=prvtRedundancyChassisLICType, licStatus=licStatus)
