#
# PySNMP MIB module T11-ZONE-SERVER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/T11-ZONE-SERVER-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 15:51:16 2022
# On host fv-az135-792 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
FcNameIdOrZero, fcmSwitchIndex, fcmInstanceIndex, FcDomainIdOrZero = mibBuilder.importSymbols("FC-MGMT-MIB", "FcNameIdOrZero", "fcmSwitchIndex", "fcmInstanceIndex", "FcDomainIdOrZero")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Gauge32, Counter64, Bits, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ObjectIdentity, mib_2, Counter32, iso, TimeTicks, Unsigned32, ModuleIdentity, MibIdentifier, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter64", "Bits", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ObjectIdentity", "mib-2", "Counter32", "iso", "TimeTicks", "Unsigned32", "ModuleIdentity", "MibIdentifier", "Integer32")
TextualConvention, DisplayString, RowStatus, TruthValue, TimeStamp, StorageType = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "TruthValue", "TimeStamp", "StorageType")
t11FamLocalSwitchWwn, = mibBuilder.importSymbols("T11-FC-FABRIC-ADDR-MGR-MIB", "t11FamLocalSwitchWwn")
T11NsGs4RejectReasonCode, = mibBuilder.importSymbols("T11-FC-NAME-SERVER-MIB", "T11NsGs4RejectReasonCode")
T11FabricIndex, = mibBuilder.importSymbols("T11-TC-MIB", "T11FabricIndex")
t11ZoneServerMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 1))
t11ZoneServerMIB.setRevisions(('2005-10-13 00:00', '2005-10-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: t11ZoneServerMIB.setRevisionsDescriptions(('Initial version of this MIB.\n           Copyright (C) The Internet Society (2005).  This version\n           of this MIB module is part of RFC yyyy;  see the RFC\n           itself for full legal notices.', 'Initial version of this MIB module, published as RFCyyyy.',))
if mibBuilder.loadTexts: t11ZoneServerMIB.setLastUpdated('200510130000Z')
if mibBuilder.loadTexts: t11ZoneServerMIB.setOrganization('T11')
if mibBuilder.loadTexts: t11ZoneServerMIB.setContactInfo('     Claudio DeSanti\n                   Cisco Systems, Inc.\n                   170 West Tasman Drive\n                   San Jose, CA 95134 USA\n                   EMail: cds@cisco.com\n                   Keith McCloghrie\n                   Cisco Systems, Inc.\n                   170 West Tasman Drive\n                   San Jose, CA 95134 USA\n                   Email: kzm@cisco.com')
if mibBuilder.loadTexts: t11ZoneServerMIB.setDescription("The MIB module for the management of Fibre Channel\n           Zoning Servers, both for Basic Zoning Management\n           and for Enhanced Zoning Management, as defined in\n           the FC-GS-5 specification.\n\n           When this MIB is used for Enhanced Zoning Management,\n           operations which request the modification of zoning\n           definitions will be rejected if they are not issued\n           within the context of a GS-5 Server session -- see the\n           related MIB module: T11-GS-SERVER-SESSION-MIB.  For\n           changes to a Zone Set Database made by SNMP SetRequests\n           within the context of a GS-5 Server session, a Zone Server\n           (in Enhanced mode) keeps track of such changes but does not\n           update its Zone Set Database unless and until a 'commit'\n           operation.  To model this behaviour, this MIB assumes that\n           a Zone Server (in Enhanced mode) takes a snapshot of its\n           Zone Set Database when a session is established so as to\n           create what is herein called the 'copy' database.  It is\n           this 'copy' database which is then updated by SNMP\n           SetRequests within that session.  If and when a 'commit'\n           operation is requested in the session, the 'copy' database\n           is then used to overwrite the committed contents of the Zone\n           Set database, and the new Zone Set database is distributed\n           to all other switches in the fabric.  If the session\n           is ended without a successful commit, the updates made\n           during the session (or, since any last previous commit\n           in the same session) are discarded.\n\n           When this MIB is used for Basic Zoning Management, the same\n           set of MIBs objects as used for Enhanced mode are used to\n           make changes to the Database of a Zone Server on a\n           particular switch, but the changes take immediate effect at\n           that switch without an explicit commit.  The distribution of\n           those changes to Zone Servers on other switches in the\n           fabric is subsequently requested through the use of a\n           separate set of MIB objects.")
t11ZsMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 1, 1))
t11ZsMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 1, 2))
t11ZsMIBNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 1, 0))
t11ZsConfiguration = MibIdentifier((1, 3, 6, 1, 2, 1, 1, 1, 1))
t11ZsStatistics = MibIdentifier((1, 3, 6, 1, 2, 1, 1, 1, 2))
class T11ZsZoneMemberType(TextualConvention, Unsigned32):
    reference = 'ANSI INCITS xxx/200x, T11/Project 1677-D/Rev 8.2,\n           Fibre Channel - Generic Services-5 (FC-GS-5),\n           4 October 2005, section 6.4.8.3.6.'
    description = 'Represents the addressing mechanism by\n           which a member is identified:\n\n                01 - N_Port_Name\n                02 - Domain_ID and physical port\n                03 - N_Port_ID\n                04 - Node_Name\n                05 - Alias Name\n                06 - F_Port_Name\n                E0-FF (hex) - Vendor Specific.\n           '
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

class T11ZsRejectReasonExplanation(TextualConvention, Integer32):
    reference = 'ANSI INCITS xxx/200x, T11/Project 1677-D/Rev 8.2,\n           Fibre Channel - Generic Services-5 (FC-GS-5),\n           4 October 2005, section 6.4.9.'
    description = "The reason code explanation when rejecting a\n           Zone Server request:\n              'other'\n                  - e.g., a reason code assigned too recently\n                    to be included in this version of this MIB\n              'noAdditionalExplanation'\n                  - there is no additional explanation\n              'zonesNotSupported'\n                  - Zones are not supported\n              'zoneSetNameUnknown'\n                  - Zone Set name is not known\n              'noZoneSetActive'\n                  - no Zone Set is currently active\n              'zoneNameUnknown'\n                  - Zone name is unknown\n              'zoneStateUnknown'\n                  - state of the Zone is not known\n              'incorrectPayloadLen'\n                  - payload length is not correct\n              'tooLargeZoneSet'\n                  - Zone Set is larger than permitted size\n              'deactivateZoneSetFailed'\n                  - deactivation of Zone Set failed\n              'reqNotSupported'\n                  - request is not supported\n              'capabilityNotSupported'\n                  - capability is not supported\n              'zoneMemberIDTypeNotSupp'\n                  - Zone Member Identifier Type is not supported\n              'invalidZoneSetDefinition'\n                  - Zone Set definition is invalid\n              'enhancedZoningCmdsNotSupported'\n                  - Enhanced Zoning commands are not supported\n              'zoneSetExists'\n                  - Zone Set already exists\n              'zoneExists'\n                  - Zone already exists\n              'aliasExists'\n                  - Zone Alias already exists\n              'zoneSetUnknown'\n                  - Zone Set unknown\n              'zoneUnknown'\n                  - Zone unknown\n              'aliasUnknown'\n                  - Zone Alias unknown\n              'zoneAliasTypeUnknown'\n                  - unknown Zone attribute type\n\n              'unableEnhancedMode'\n                  - fabric unable to work in Enhanced Mode\n              'basicZoningCmdsNotSupported'\n                  - Basic Zoning commands are not supported\n              'zoneAttribObjectExists'\n                  - Zone attribute object already exists\n              'zoneAttribObjectUnknown'\n                  - Zone attribute object unknown\n              'requestInProcess'\n                  - request in process\n              'cmitInProcess'\n                  - CMIT in process\n              'hardEnforcementFailed'\n                  - hard enforcement failed\n              'unresolvedReferences'\n                  - unresolved references in the Zone Set Database\n              'consistencyChecksFailed'\n                  - consistency checks failed."
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31))
    namedValues = NamedValues(("other", 1), ("noAdditionalExplanation", 2), ("zonesNotSupported", 3), ("zoneSetNameUnknown", 4), ("noZoneSetActive", 5), ("zoneNameUnknown", 6), ("zoneStateUnknown", 7), ("incorrectPayloadLen", 8), ("tooLargeZoneSet", 9), ("deactivateZoneSetFailed", 10), ("reqNotSupported", 11), ("capabilityNotSupported", 12), ("zoneMemberIDTypeNotSupp", 13), ("invalidZoneSetDefinition", 14), ("enhancedZoningCmdsNotSupported", 15), ("zoneSetExists", 16), ("zoneExists", 17), ("aliasExists", 18), ("zoneSetUnknown", 19), ("zoneUnknown", 20), ("aliasUnknown", 21), ("zoneAliasTypeUnknown", 22), ("unableEnhancedMode", 23), ("basicZoningCmdsNotSupported", 24), ("zoneAttribObjectExists", 25), ("zoneAttribObjectUnknown", 26), ("requestInProcess", 27), ("cmitInProcess", 28), ("hardEnforcementFailed", 29), ("unresolvedReferences", 30), ("consistencyChecksFailed", 31))

class T11ZoningName(TextualConvention, OctetString):
    reference = 'ANSI INCITS xxx/200x, T11/Project 1677-D/Rev 8.2,\n           Fibre Channel - Generic Services-5 (FC-GS-5),\n           4 October 2005, section 6.4.8.1.'
    description = 'This datatype is a refinement of an SnmpAdminString,\n           and is used to represent a name stored in a Fibre\n           Channel Zoning Data Structure.\n\n           The value begins with a letter (upper or lower case)\n           followed by zero or more characters from the set:\n           lower case letters, upper case letters, numbers, and\n           the symbols ($-^_).\n\n           The value does not include fill bytes.'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 64)

t11ZsServerTable = MibTable((1, 3, 6, 1, 2, 1, 1, 1, 1, 1), )
if mibBuilder.loadTexts: t11ZsServerTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerTable.setDescription('A table containing information about the Zone Servers\n           on each fabric in one or more switches, and providing\n           the capability to perform operations on their Zone\n           Server databases.')
t11ZsServerEntry = MibTableRow((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"))
if mibBuilder.loadTexts: t11ZsServerEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerEntry.setDescription('Each entry contains information specific to a\n           Zone Server for a particular fabric (identified by\n           the value of t11ZsServerFabricIndex) on a particular\n           switch (identified by values of fcmInstanceIndex\n           and fcmSwitchIndex).')
t11ZsServerFabricIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1, 1), T11FabricIndex())
if mibBuilder.loadTexts: t11ZsServerFabricIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerFabricIndex.setDescription('A unique index value which uniquely identifies a\n           particular fabric.\n\n           In a fabric conformant to FC-SW-4, multiple Virtual Fabrics\n           can operate within one (or more) physical infrastructures,\n           and this index value is used to uniquely identify a\n           particular (physical or virtual) fabric within a physical\n           infrastructure.\n           In a fabric conformant to versions earlier than FC-SW-4,\n           only a single fabric could operate within a physical\n           infrastructure, and thus, the value of this fabric index\n           was defined to always be 1.')
t11ZsServerCapabilityObject = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1, 2), Bits().clone(namedValues=NamedValues(("enhancedMode", 0), ("zonesetDb", 1), ("activateDirect", 2), ("hardZoning", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsServerCapabilityObject.setReference('Fibre Channel - Switch Fabric - 4 (FC-SW-4),\n           T11/Project 1674-D/Rev 7.6, November 2005,\n           section 6.1.23.4.4')
if mibBuilder.loadTexts: t11ZsServerCapabilityObject.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerCapabilityObject.setDescription("This bitmap represents the capability of the switch\n           on this fabric:\n\n               'enhancedMode' - able to support enhanced Zoning\n                                mode of operation.\n\n               'zonesetDb'    - able to support maintaining of\n                                a Zone Set Database.\n\n               'activateDirect' - able to support the Activate\n                                  Direct command.\n\n               'hardZoning'   - able to support Hard Zoning.")
t11ZsServerDatabaseStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1, 3), StorageType().clone('nonVolatile')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsServerDatabaseStorageType.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerDatabaseStorageType.setDescription("This object specifies the memory realization, on a\n           particular switch, of the Zone Set database for a\n           particular fabric.  Specifically, each row in the\n           following tables:\n                      t11ZsSetTable\n                      t11ZsZoneTable\n                      t11ZsSetZoneTable\n                      t11ZsAliasTable\n                      t11ZsZoneMemberTable\n                      t11ZsAttribBlockTable\n                      t11ZsAttribTable\n\n           has a StorageType as specified by the instance of\n           this object which is INDEX-ed by the same values of\n           fcmInstanceIndex, fcmSwitchIndex and\n           t11ZsServerFabricIndex.\n\n           This value of this object is also used to indicate\n           the persistence across reboots of writable values in\n           its row of the t11ZsServerTable, as well as the\n           corresponding row in the t11ZsNotifyControlTable.\n\n           If an instance of this object has the value\n           'permanent(4)', the Zone Set database for the given\n           fabric on the given switch is not required to be\n           writeable.")
t11ZsServerDistribute = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noop", 1), ("zonesetDb", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsServerDistribute.setReference('Fibre Channel - Switch Fabric - 4 (FC-SW-4),\n           T11/Project 1674-D/Rev 7.6, November 2005,\n           section 6.1.19.1.')
if mibBuilder.loadTexts: t11ZsServerDistribute.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerDistribute.setDescription("This object can be set only in Basic mode.  When set\n           to the value 'zonesetDb', it requests that the Zone Set\n           database of a particular switch for a particular fabric\n           be distributed to every other switch in that fabric,\n           e.g., by using Stage Fabric Configuration Update (SFC)\n           requests.\n\n           Setting this object to 'noop' has no effect.\n           When read, the value of this object is always 'noop'.\n\n           Setting this object will fail if the corresponding\n           instance of t11ZsServerOperationMode has the value\n           'enhanced', or if the corresponding instance of\n           t11ZsZoneSetDistributeResult has the value 'inProgress'.")
t11ZsServerDistributeResult = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("inProgress", 2), ("success", 3), ("rejectFailure", 4), ("otherFailure", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsServerDistributeResult.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerDistributeResult.setDescription("The status/result of the last distribution of the Zone\n           Set database which was invoked via the corresponding\n           instance of t11ZsZoneSetDistribute, e.g., the\n           status/result of Stage Fabric Configuration Update\n           (SFC) request(s) used to implement the setting of\n           t11ZsZoneSetDistribute.\n\n             'none'          - no distribution has been invoked via\n                               the corresponding instance of\n                               t11ZsZoneSetDistribute.\n             'inProgress'    - distribution is still in progress.\n             'success'       - distribution completely successfully.\n             'rejectFailure' - distribution failed due to a SW-RJT.\n             'otherFailure'  - distribution failed for some other\n                               reason.\n\n           When the value is 'rejectFailure', the corresponding\n           instance of t11ZsServerDistributeFailReason contains the\n           reason code and reason code explanation.\n\n           While in Enhanced mode, the value of this object is\n           always 'none'.")
t11ZsServerDistributeFailReason = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsServerDistributeFailReason.setReference('Fibre Channel - Switch Fabric - 4 (FC-SW-4), Rev 7.6,\n           November 2005, section 6.1.3 and tables 4, 5 & 6.')
if mibBuilder.loadTexts: t11ZsServerDistributeFailReason.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerDistributeFailReason.setDescription("When the corresponding instance of\n           t11ZsZoneSetDistributeResult has the value\n           'rejectFailure', this object contains the 4-byte code\n           contained in the SW_RJT.  The four bytes are formatted\n           to be: 'Reserved', 'Reason Code', 'Reason Code\n           Explanation', and 'Vendor Specific', respectively, as\n           specified in FC-SW-4.\n\n           When the corresponding instance of\n           t11ZsZoneSetDistributeResult has a value other than\n           'rejectFailure', this object should contain the\n           zero-length string.\n\n           While in Enhanced mode, the value of this object is\n           the zero-length string.")
t11ZsServerLastChange = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsServerLastChange.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerLastChange.setDescription('The value of sysUpTime at the time of the last change\n           (creation, modification or deletion) to the Zone Set\n           database for the Zone Server for a particular fabric.\n           If said Zone Set database has not changed since the\n           last re-initialization of the local network management\n           system, then this object will contain a zero value.')
t11ZsServerHardZoning = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsServerHardZoning.setReference('ANSI INCITS xxx/200x, T11/Project 1677-D/Rev 8.2,\n           Fibre Channel - Generic Services-5 (FC-GS-5),\n           4 October 2005, section 6.4.10.3.2.')
if mibBuilder.loadTexts: t11ZsServerHardZoning.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerHardZoning.setDescription('This object indicates whether this switch, if and when it\n           is in Basic mode, enforces Hard Zoning on this fabric.')
t11ZsServerReadFromDatabase = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("committedDB", 1), ("copyDB", 2))).clone('committedDB')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsServerReadFromDatabase.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerReadFromDatabase.setDescription("In Enhanced mode, this object specifies whether\n           subsequent SNMP Responses (generated by the local SNMP\n           agent) to operations which read the configuration of\n           Zone Sets, Zones, Members, Aliases and Attributes will\n           reflect the values stored in the current (committed)\n           Zone Set database, or those stored in the 'copy'\n           database.\n\n           In Basic mode, the value of this object is always\n           'committedDB' (since there is no 'copy' database in\n           Basic mode).")
t11ZsServerOperationMode = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("basic", 1), ("enhanced", 2))).clone('basic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsServerOperationMode.setReference('ANSI INCITS xxx/200x, T11/Project 1677-D/Rev 8.2,\n           Fibre Channel - Generic Services-5 (FC-GS-5),\n           4 October 2005, sections 6.4.10.1.1 and 6.4.10.1.2.')
if mibBuilder.loadTexts: t11ZsServerOperationMode.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerOperationMode.setDescription("The operational mode of the Zone Server.\n\n           Setting this object to 'enhanced' requests the mode of\n           operation of the Zone Server be Enhanced mode.\n           Such a set can succeed only if all devices in the Fibre\n           Channel fabric are capable of working in Enhanced mode.\n           If not, the request will fail and the corresponding value\n           of t11ZsServerChangeModeResult will so indicate.\n\n           Setting this object to 'basic' requests the mode of\n           operation of the Zone Server be Basic mode.  However,\n           such a set may fail while operating in Enhanced mode,\n           since FC-GS-5 makes no provision for changing (back)\n           to Basic mode.\n\n           Note that setting this object does not cause or require\n           the setup of a 'session'.")
t11ZsServerChangeModeResult = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("success", 1), ("failure", 2), ("inProgress", 3), ("none", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsServerChangeModeResult.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerChangeModeResult.setDescription("When this object has the value of 'success' or\n           'failure', the value indicates the outcome of the most\n           recent request, invoked via t11ZsServerOperationMode,\n           to change the mode of operation of the Zone Server.\n           When such a request is in progress, this object has the\n           value 'inProgress'.  Prior to the first such request,\n           the value of this object is 'none'.")
t11ZsServerDefaultZoneSetting = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2))).clone('deny')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsServerDefaultZoneSetting.setReference('ANSI INCITS xxx/200x, T11/Project 1677-D/Rev 8.2,\n           Fibre Channel - Generic Services-5 (FC-GS-5),\n           4 October 2005, section 6.4.10.1.1.')
if mibBuilder.loadTexts: t11ZsServerDefaultZoneSetting.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerDefaultZoneSetting.setDescription("This object controls the Enhanced Zoning flag which\n           governs the behaviour of the Default Zone on this fabric.\n\n           If this object is set to 'permit', then the members of\n           the Default Zone on this fabric can communicate with\n           each other.\n\n           If this object is set to 'deny', then the members of the\n           Default Zone on this fabric cannot communicate with each\n           other.")
t11ZsServerMergeControlSetting = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("allow", 1), ("restrict", 2))).clone('allow')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsServerMergeControlSetting.setReference('ANSI INCITS xxx/200x, T11/Project 1677-D/Rev 8.2,\n           Fibre Channel - Generic Services-5 (FC-GS-5),\n           4 October 2005, section 6.4.10.1.1.')
if mibBuilder.loadTexts: t11ZsServerMergeControlSetting.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerMergeControlSetting.setDescription("This object controls the Enhanced Zoning flag which\n           indicates the Merge Control Setting for this fabric:\n\n               'allow'    - a switch may join the fabric only if\n                            its Zoning Database is able to merge\n                            with the fabric's Zoning Database.\n               'restrict' - a switch may join the fabric only if\n                            its Zoning Database is equal to the\n                            fabric's Zoning Database.")
t11ZsServerDefZoneBroadcast = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1, 14), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsServerDefZoneBroadcast.setReference('ANSI INCITS xxx/200x, T11/Project 1677-D/Rev 8.2,\n           Fibre Channel - Generic Services-5 (FC-GS-5),\n           4 October 2005, section 6.4.7.2.2.')
if mibBuilder.loadTexts: t11ZsServerDefZoneBroadcast.setStatus('current')
if mibBuilder.loadTexts: t11ZsServerDefZoneBroadcast.setDescription("This object controls an Enhanced Zoning capability:\n           it indicates whether Broadcast Zoning is enabled on\n           the Default Zone on this fabric. If this object is\n           set to 'true', then it is enabled. If this object is\n           set to 'false', then it is disabled.\n\n           If broadcast Zoning is enabled on a Default Zone,\n           then broadcast frames generated by a member in that\n           Default Zone will be restricted to members in that\n           Default Zone.")
t11ZsSetTable = MibTable((1, 3, 6, 1, 2, 1, 1, 1, 1, 2), )
if mibBuilder.loadTexts: t11ZsSetTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsSetTable.setDescription("A table containing information on every Zone\n           Set in the Zone Set database of the Zone Servers\n           on each fabric in one or more switches.\n\n           In Enhanced mode, changes to a database made via this\n           table are always made to the 'copy' database, but\n           values read from this table reflect the contents of\n           either the 'copy' database or the current (committed)\n           database as indicated by the corresponding value of\n           t11ZsServerReadFromDatabase.")
t11ZsSetEntry = MibTableRow((1, 3, 6, 1, 2, 1, 1, 1, 1, 2, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsSetIndex"))
if mibBuilder.loadTexts: t11ZsSetEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsSetEntry.setDescription('Each entry contains information about a Zone Set\n           in the Zone Set database of a particular fabric\n           (identified by the value of t11ZsServerFabricIndex)\n           on a particular switch (identified by values of\n           fcmInstanceIndex and fcmSwitchIndex).\n\n           A Zone Set is created containing zero or more\n           existing Zones.  As and when new Zones are created\n           (as rows in the t11ZsZoneTable), they can be added\n           to a Zone Set by creating an entry for each in the\n           t11ZsSetZoneTable.\n\n           The StorageType of a row in this table is specified by\n           the instance of t11ZsServerDatabaseStorageType which is\n           INDEX-ed by the same values of fcmInstanceIndex,\n           fcmSwitchIndex and t11ZsServerFabricIndex.')
t11ZsSetIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsSetIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsSetIndex.setDescription('The index of a Zone Set. This object uniquely\n           identifies a Zone Set in the Zone Set database\n           for a particular fabric on a particular switch.')
t11ZsSetName = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 2, 1, 2), T11ZoningName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsSetName.setStatus('current')
if mibBuilder.loadTexts: t11ZsSetName.setDescription('The name of this Zone Set. The t11ZsSetName should\n           be unique within a fabric.\n\n           The Zone Set can be renamed by setting this object\n           to a new value.')
t11ZsSetRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsSetRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11ZsSetRowStatus.setDescription("The status of this conceptual row.\n\n           This object can not be set to 'active' unless the\n           corresponding value of t11ZsSetName is unique within\n           the fabric's Zone Server database on this switch.")
t11ZsZoneTable = MibTable((1, 3, 6, 1, 2, 1, 1, 1, 1, 3), )
if mibBuilder.loadTexts: t11ZsZoneTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneTable.setDescription("This table gives information on all the Zones in the\n           Zone Set database of the Zone Servers on each fabric\n           in one or more switches.\n\n           In Enhanced mode, changes to a database made via this\n           table are always made to the 'copy' database, but\n           values read from this table reflect the contents of\n           either the 'copy' database or the current (committed)\n           database as indicated by the corresponding value of\n           t11ZsServerReadFromDatabase.")
t11ZsZoneEntry = MibTableRow((1, 3, 6, 1, 2, 1, 1, 1, 1, 3, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsZoneIndex"))
if mibBuilder.loadTexts: t11ZsZoneEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneEntry.setDescription('Each entry contains information about a Zone\n           in the Zone Set database of a particular fabric\n           (identified by the value of t11ZsServerFabricIndex)\n           on a particular switch (identified by values of\n           fcmInstanceIndex and fcmSwitchIndex).\n\n           To create a Zone, first create an entry in this table,\n           and then add members to it by creating entries in the\n           t11ZsZoneMemberTable.\n\n           The StorageType of a row in this table is specified by\n           the instance of t11ZsServerDatabaseStorageType which is\n           INDEX-ed by the same values of fcmInstanceIndex,\n           fcmSwitchIndex and t11ZsServerFabricIndex.')
t11ZsZoneIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsZoneIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneIndex.setDescription("An index value which uniquely identifies this\n           Zone within a particular fabric's Zone Set database\n           on a particular switch.")
t11ZsZoneName = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 3, 1, 2), T11ZoningName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsZoneName.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneName.setDescription('The name of this Zone. The t11ZsZoneName should be\n           unique within a fabric.\n\n           The Zone can be renamed by setting this object\n           to a new value.')
t11ZsZoneAttribBlock = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsZoneAttribBlock.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneAttribBlock.setDescription('This object specifies the index value of the\n           Zone Attribute Block which contains the Attributes\n           of this Zone.\n           In Enhanced mode, a value of zero indicates this\n           Zone has no Zone Attributes.  In Basic mode, this\n           object always has the value of zero.')
t11ZsZoneRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsZoneRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneRowStatus.setDescription("The status of this conceptual row.\n\n           This object can not be set to 'active' unless the\n           corresponding value of t11ZsZoneName is unique within\n           the fabric's Zone Server database on this switch.")
t11ZsSetZoneTable = MibTable((1, 3, 6, 1, 2, 1, 1, 1, 1, 4), )
if mibBuilder.loadTexts: t11ZsSetZoneTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsSetZoneTable.setDescription('This table specifies which Zones belong to which Zone\n           Sets in the Zone Set database of the Zone Servers\n           on each fabric in one or more switches.')
t11ZsSetZoneEntry = MibTableRow((1, 3, 6, 1, 2, 1, 1, 1, 1, 4, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsSetIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsZoneIndex"))
if mibBuilder.loadTexts: t11ZsSetZoneEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsSetZoneEntry.setDescription('Each entry specifies that a particular Zone (identified\n           by the value of t11ZsZoneIndex) is one of the Zones\n           which form a particular Zone Set (identified by the\n           value of t11ZsSetIndex) in the Zone Set database of a\n           particular fabric (identified by the value of\n           t11ZsServerFabricIndex) on a particular switch\n           (identified by values of fcmInstanceIndex and\n           fcmSwitchIndex).\n           The StorageType of a row in this table is specified by\n           the instance of t11ZsServerDatabaseStorageType which is\n           INDEX-ed by the same values of fcmInstanceIndex,\n           fcmSwitchIndex and t11ZsServerFabricIndex.')
t11ZsSetZoneRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 4, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsSetZoneRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11ZsSetZoneRowStatus.setDescription('The status of this conceptual row.')
t11ZsAliasTable = MibTable((1, 3, 6, 1, 2, 1, 1, 1, 1, 5), )
if mibBuilder.loadTexts: t11ZsAliasTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsAliasTable.setDescription("This table contains information about the Zone Aliases\n           in the Zone Set database of the Zone Servers on each\n           fabric in one or more switches.\n\n           In Enhanced mode, changes to a database made via this\n           table are always made to the 'copy' database, but\n           values read from this table reflect the contents of\n           either the 'copy' database or the current (committed)\n           database as indicated by the corresponding value of\n           t11ZsServerReadFromDatabase.")
t11ZsAliasEntry = MibTableRow((1, 3, 6, 1, 2, 1, 1, 1, 1, 5, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsAliasIndex"))
if mibBuilder.loadTexts: t11ZsAliasEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsAliasEntry.setDescription("Each entry contains information about a Zone Alias in\n           the Zone Set database of a particular fabric\n           (identified by the value of t11ZsServerFabricIndex) on\n           a particular switch (identified by values of\n           fcmInstanceIndex and fcmSwitchIndex).\n\n           A Zone Member is added to a Zone Alias by creating\n           an entry in the t11ZsZoneMemberTable pointing to a\n           row of this table via t11ZsAliasIndex, i.e.,:\n\n            - t11ZsZoneMemberParentType = 'alias',\n            - t11ZsZoneMemberParentIndex = Alias's t11ZsAliasIndex,\n            - t11ZsZoneMemberFormat != '05 - Alias Name', and\n            - t11ZsZoneMemberID = Member's identifier.\n\n           A Zone Alias is added to a Zone by creating\n           an entry in the t11ZsZoneMemberTable pointing to a\n           row of this table via t11ZsAliasName, i.e.,:\n\n            - t11ZsZoneMemberParentType = 'zone',  and\n            - t11ZsZoneMemberParentIndex = Zone's t11ZsZoneIndex,\n            - t11ZsZoneMemberFormat = '05 - Alias Name',\n            - t11ZsZoneMemberID = Alias's t11ZsAliasName.\n\n           The StorageType of a row in this table is specified by\n           the instance of t11ZsServerDatabaseStorageType which is\n           INDEX-ed by the same values of fcmInstanceIndex,\n           fcmSwitchIndex and t11ZsServerFabricIndex.")
t11ZsAliasIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsAliasIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsAliasIndex.setDescription('An index value which uniquely identifies this Zone\n           Alias within the Zone Set database of a particular\n           fabric on a particular switch.')
t11ZsAliasName = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 5, 1, 2), T11ZoningName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsAliasName.setStatus('current')
if mibBuilder.loadTexts: t11ZsAliasName.setDescription('The name of this Zone Alias.  The name of the Zone\n           Alias should be unique within a fabric.\n\n           The Zone Alias can be renamed by setting this object\n           to a new value if and when it is not in a Zone, i.e.,\n           if and only if the current name is not the value of\n           any t11ZsZoneMemberID in the same Zone Set database.')
t11ZsAliasRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsAliasRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11ZsAliasRowStatus.setDescription("The status of this conceptual row.\n\n           This object can not be set to 'active' unless the\n           corresponding value of t11ZsAliasName is unique within\n           the fabric's Zone Server database on this switch.")
t11ZsZoneMemberTable = MibTable((1, 3, 6, 1, 2, 1, 1, 1, 1, 6), )
if mibBuilder.loadTexts: t11ZsZoneMemberTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneMemberTable.setDescription("This table contains all members of a Zone/Zone Alias\n           and information about those members in the Zone Set\n           database of the Zone Servers on each fabric in one or\n           more switches.\n           In Enhanced mode, changes to a database made via this\n           table are always made to the 'copy' database, but\n           values read from this table reflect the contents of\n           either the 'copy' database or the current (committed)\n           database as indicated by the corresponding value of\n           t11ZsServerReadFromDatabase.")
t11ZsZoneMemberEntry = MibTableRow((1, 3, 6, 1, 2, 1, 1, 1, 1, 6, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsZoneMemberParentType"), (0, "T11-ZONE-SERVER-MIB", "t11ZsZoneMemberParentIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsZoneMemberIndex"))
if mibBuilder.loadTexts: t11ZsZoneMemberEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneMemberEntry.setDescription("Each entry represents the relationship between a\n           member and (one of) its 'parent(s)', i.e., a Zone\n           or Zone Alias to which the member belongs, within\n           a particular fabric (identified by the value of\n           t11ZsServerFabricIndex) on a particular switch\n           (identified by values of fcmInstanceIndex and\n           fcmSwitchIndex).\n\n           A Zone member (other than an alias) is added to a\n           Zone by creating an entry in this table having:\n\n            - t11ZsZoneMemberParentType = 'zone',  and\n            - t11ZsZoneMemberParentIndex = Zone's t11ZsZoneIndex,\n            - t11ZsZoneMemberFormat != '05 - Alias Name',\n            - t11ZsZoneMemberID = Member's identifier.\n\n           The StorageType of a row in this table is specified by\n           the instance of t11ZsServerDatabaseStorageType which is\n           INDEX-ed by the same values of fcmInstanceIndex,\n           fcmSwitchIndex and t11ZsServerFabricIndex.")
t11ZsZoneMemberParentType = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("zone", 1), ("alias", 2))))
if mibBuilder.loadTexts: t11ZsZoneMemberParentType.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneMemberParentType.setDescription('This object determines whether this member belongs\n           to a Zone or an Zone Alias.')
t11ZsZoneMemberParentIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsZoneMemberParentIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneMemberParentIndex.setDescription("This object contains the index value of the Zone or\n           Zone Alias to which this member belongs.\n\n           If the value of the corresponding instance of\n           t11ZsZoneMemberParentType is 'zone', then this object\n           will contain the value of the t11ZsZoneIndex object of\n           the Zone to which this member belongs.\n\n           If the value of the corresponding instance of\n           t11ZsZoneMemberParentType is 'alias', then this object\n           will contain the value of the t11ZsAliasIndex object\n           of the Zone Alias to which this member belongs.")
t11ZsZoneMemberIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsZoneMemberIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneMemberIndex.setDescription('An index value which uniquely identifies this Zone\n           Member amongst all Zone Members in the Zone Set\n           database of a particular fabric on a particular switch.')
t11ZsZoneMemberFormat = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 6, 1, 4), T11ZsZoneMemberType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsZoneMemberFormat.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneMemberFormat.setDescription("This object identifies the format of the\n           Zone/Zone Alias member's identifier contained in\n           t11ZsZoneMemberID.\n\n           This object can not be modified while the corresponding\n           value of t11ZsZoneMemberRowStatus object is 'active'.")
t11ZsZoneMemberID = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 6, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsZoneMemberID.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneMemberID.setDescription("This object contains the Member Identifier of the\n           Zone or Alias. The interpretation of this object\n           depends on the value of the corresponding instance\n           of t11ZsZoneMemberFormat:\n\n             - if t11ZsZoneMemberFormat is 'N_Port_Name', then\n               this object contains a N_Port_Name.\n\n             - if t11ZsZoneMemberFormat is 'Domain_ID and physical\n               port', then this object contains a 4-octet value in\n               network-byte order.  The first octet is zero,\n               the second octet contains the Domain_ID, and the\n               last two octets contain the physical port number.\n\n             - if t11ZsZoneMemberFormat is 'N_Port_ID', then this\n               object contains the 3-octet Nx_Port FC_ID.\n\n             - if t11ZsZoneMemberFormat is 'Alias Name', then\n               this object contains the value of t11ZsAliasName\n               for some Alias in the same Zone Set database.\n\n             - if t11ZsZoneMemberFormat is 'Node_Name', then\n               this object contains an 8-octet Node_Name.\n\n             - if t11ZsZoneMemberFormat is 'F_Port_Name', then\n               this object contains an 8-octet F_Port_Name.\n\n             - if t11ZsZoneMemberFormat is one of the 'Vendor\n               Specific' values, then this object contains a 1 to\n               255 octet value in a format defined by the relevant\n               vendor.\n\n           This object cannot be modified while the corresponding\n           value of t11ZsZoneMemberRowStatus object is 'active'.")
t11ZsZoneMemberRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 6, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsZoneMemberRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11ZsZoneMemberRowStatus.setDescription("The status of this conceptual row.\n\n           The corresponding instances of t11ZsZoneMemberID and\n           t11ZsZoneMemberFormat objects MUST be set before or\n           concurrently with setting this object to 'active'.")
t11ZsAttribBlockTable = MibTable((1, 3, 6, 1, 2, 1, 1, 1, 1, 7), )
if mibBuilder.loadTexts: t11ZsAttribBlockTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribBlockTable.setDescription("This table gives information on all the Zone\n           Attributes in the Zone Set database of the Zone\n           Servers on each fabric in one or more switches.\n\n           In Enhanced mode, changes to a database made via this\n           table are always made to the 'copy' database, but\n           values read from this table reflect the contents of\n           either the 'copy' database or the current (committed)\n           database as indicated by the corresponding value of\n           t11ZsServerReadFromDatabase.")
t11ZsAttribBlockEntry = MibTableRow((1, 3, 6, 1, 2, 1, 1, 1, 1, 7, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsAttribBlockIndex"))
if mibBuilder.loadTexts: t11ZsAttribBlockEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribBlockEntry.setDescription('Each entry contains information about a Zone Attribute\n           Block (of Zone Attributes) in the Zone Set database\n           of a particular fabric (identified by the value of\n           t11ZsServerFabricIndex) on a particular switch\n           (identified by values of fcmInstanceIndex and\n           fcmSwitchIndex).\n\n           Deleting an entry in this table deletes all\n           associated entries in the t11ZsAttribTable.\n\n           The StorageType of a row in this table is specified by\n           the instance of t11ZsServerDatabaseStorageType which is\n           INDEX-ed by the same values of fcmInstanceIndex,\n           fcmSwitchIndex and t11ZsServerFabricIndex.')
t11ZsAttribBlockIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsAttribBlockIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribBlockIndex.setDescription('An index value which uniquely identifies this Zone\n           Attribute within the Zone Set database of a particular\n           fabric on a particular switch.')
t11ZsAttribBlockName = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 7, 1, 2), T11ZoningName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsAttribBlockName.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribBlockName.setDescription('The name of this Zone Attribute Block, which should\n           be unique within the fabric.')
t11ZsAttribBlockRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 7, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsAttribBlockRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribBlockRowStatus.setDescription('The status of this conceptual row.')
t11ZsAttribTable = MibTable((1, 3, 6, 1, 2, 1, 1, 1, 1, 8), )
if mibBuilder.loadTexts: t11ZsAttribTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribTable.setDescription("This table gives information on the Zone Attributes\n           within the Zone Attribute Blocks in the Zone Set\n           database of the Zone Servers on each fabric in one\n           or more switches.\n\n           In Enhanced mode, changes to a database made via this\n           table are always made to the 'copy' database, but\n           values read from this table reflect the contents of\n           either the 'copy' database or the current (committed)\n           database as indicated by the corresponding value of\n           t11ZsServerReadFromDatabase.")
t11ZsAttribEntry = MibTableRow((1, 3, 6, 1, 2, 1, 1, 1, 1, 8, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsAttribBlockIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsAttribIndex"))
if mibBuilder.loadTexts: t11ZsAttribEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribEntry.setDescription('Each entry contains information about a Zone\n           Attribute in a Zone Attribute Block (identified by\n           t11ZsAttribBlockIndex) in the Zone Set database of\n           a particular fabric (identified by the value of\n           t11ZsServerFabricIndex) on a particular switch\n           (identified by values of fcmInstanceIndex and\n           fcmSwitchIndex).\n\n           An entry in this table cannot be created prior to\n           its associated entry in the t11ZsAttribBlockTable.\n\n           The StorageType of a row in this table is specified by\n           the instance of t11ZsServerDatabaseStorageType which is\n           INDEX-ed by the same values of fcmInstanceIndex,\n           fcmSwitchIndex and t11ZsServerFabricIndex.')
t11ZsAttribIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsAttribIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribIndex.setDescription('An index value which uniquely identifies this\n           Zone Attribute within its Zone Attribute Block in\n           the Zone Set database of a particular fabric on a\n           particular switch.')
t11ZsAttribType = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 8, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsAttribType.setReference('ANSI INCITS xxx/200x, T11/Project 1677-D/Rev 8.2,\n           Fibre Channel - Generic Services-5 (FC-GS-5),\n           4 October 2005, section 6.4.8.3.8, table 267.')
if mibBuilder.loadTexts: t11ZsAttribType.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribType.setDescription('The type of attribute:\n\n                0001       - Protocol\n                0002       - Broadcast Zone\n                0003       - Hard Zone\n                00E0 (hex) - Vendor Specific.')
t11ZsAttribValue = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 8, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsAttribValue.setReference('ANSI INCITS xxx/200x, T11/Project 1677-D/Rev 8.2,\n           Fibre Channel - Generic Services-5 (FC-GS-5),\n           4 October 2005, section 6.4.8.3.8, table 268.')
if mibBuilder.loadTexts: t11ZsAttribValue.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribValue.setDescription('The value of the attribute, formatted as specified\n           in FC-GS-5 for the type given by the corresponding\n           instance of t11ZsAttribType.')
t11ZsAttribRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 8, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11ZsAttribRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11ZsAttribRowStatus.setDescription('The status of this conceptual row.')
t11ZsActivateTable = MibTable((1, 3, 6, 1, 2, 1, 1, 1, 1, 9), )
if mibBuilder.loadTexts: t11ZsActivateTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsActivateTable.setDescription('This table provides a mechanism to allow a Zone Set\n           to be activated on a fabric.')
t11ZsActivateEntry = MibTableRow((1, 3, 6, 1, 2, 1, 1, 1, 1, 9, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"))
if mibBuilder.loadTexts: t11ZsActivateEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsActivateEntry.setDescription('Each entry reflects the state of the activation of a\n           Zone Set by a particular switch (identified by values\n           of fcmInstanceIndex and fcmSwitchIndex) on a particular\n           fabric (identified by the value of\n           t11ZsServerFabricIndex).')
t11ZsActivateRequest = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsActivateRequest.setStatus('current')
if mibBuilder.loadTexts: t11ZsActivateRequest.setDescription('Setting this object to a value is a request for a\n           Zone Set to be activated on the fabric which is\n           represented by this row.  The Zone Set to be\n           activated is the one for which t11ZsSetIndex has\n           the same value.\n\n           If a Zone Set is already active on a fabric when a\n           request is made to activate a different one on that\n           fabric, then the existing Zone Set is automatically\n           deactivated and the specified Zone Set is activated\n           in its place.\n\n           The value of this object when read is always 0.')
t11ZsActivateDeactivate = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("deactivate", 1), ("noop", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsActivateDeactivate.setStatus('current')
if mibBuilder.loadTexts: t11ZsActivateDeactivate.setDescription("Setting this object to 'deactivate' is a request\n           to deactivate the currently active Zone Set on\n           a fabric.\n\n           Note that the deactivation of the active Zone Set\n           allows all ports to communicate or no ports to\n           communicate depending on the current Default Zone\n           behaviour.\n\n           No action is taken if this object is set to 'noop'.\n           When read, the value of this object is always 'noop'.")
t11ZsActivateResult = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("activateSuccess", 1), ("activateFailure", 2), ("deactivateSuccess", 3), ("deactivateFailure", 4), ("inProgress", 5), ("none", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActivateResult.setStatus('current')
if mibBuilder.loadTexts: t11ZsActivateResult.setDescription("This object indicates the outcome of the most recent\n           activation/deactivation using this entry.\n\n           When the value of this object is 'inProgress', the\n           values of the corresponding instances of\n           t11ZsActivateRequest and t11ZsActivateDeactivate\n           cannot be modified.\n\n           The value 'none' indicates activation/de-activation\n           has not been attempted.")
t11ZsActivateFailCause = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 9, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActivateFailCause.setStatus('current')
if mibBuilder.loadTexts: t11ZsActivateFailCause.setDescription("A textual message indicating the reason for the\n           most recent failure of a Zone Set activation or\n           de-activation, or the zero-length string if no\n           information is available.\n\n           When the corresponding instance of\n           t11ZsActivateResult is either 'activateFailure'\n           or 'deactivateFailure', the value of this object\n           indicates the reason for that failure.")
t11ZsActivateFailDomainId = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 9, 1, 5), FcDomainIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActivateFailDomainId.setStatus('current')
if mibBuilder.loadTexts: t11ZsActivateFailDomainId.setDescription('If the failure cause (as indicated by\n           t11ZsSetFailCause) was specific to a particular\n           device, this object contains the Domain_ID of that\n           device.  Otherwise, this object contains zero.')
t11ZsActiveTable = MibTable((1, 3, 6, 1, 2, 1, 1, 1, 1, 10), )
if mibBuilder.loadTexts: t11ZsActiveTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveTable.setDescription('A table containing information on the currently\n           enforced/active Zone Set on each fabric.\n           An active Zone Set cannot be modified.\n           This table will be empty when no Zone Set is\n           activated.')
t11ZsActiveEntry = MibTableRow((1, 3, 6, 1, 2, 1, 1, 1, 1, 10, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"))
if mibBuilder.loadTexts: t11ZsActiveEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveEntry.setDescription('Each entry represents an active Zone Set of a\n           particular fabric (identified by the value of\n           t11ZsServerFabricIndex), according to a particular\n           switch (identified by values of fcmInstanceIndex and\n           fcmSwitchIndex).')
t11ZsActiveZoneSetName = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 10, 1, 1), T11ZoningName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActiveZoneSetName.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneSetName.setDescription('The name of this Zone Set on this fabric.')
t11ZsActiveActivateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 10, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActiveActivateTime.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveActivateTime.setDescription('The value of sysUpTime at which this entry was most\n           recently activated.  If this row was activated prior to\n           the last re-initialization of the local network management\n           system, then this object will contain a zero value.')
t11ZsActiveZoneTable = MibTable((1, 3, 6, 1, 2, 1, 1, 1, 1, 11), )
if mibBuilder.loadTexts: t11ZsActiveZoneTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneTable.setDescription('This table contains all the Zones that are present in\n           the active Zone Sets on all fabrics.')
t11ZsActiveZoneEntry = MibTableRow((1, 3, 6, 1, 2, 1, 1, 1, 1, 11, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsActiveZoneIndex"))
if mibBuilder.loadTexts: t11ZsActiveZoneEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneEntry.setDescription('Each entry represents a Zone in the active Zone Set\n           of a particular fabric (identified by the value of\n           t11ZsServerFabricIndex), according to a particular\n           switch (identified by values of fcmInstanceIndex and\n           fcmSwitchIndex).')
t11ZsActiveZoneIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsActiveZoneIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneIndex.setDescription('An index value which uniquely identifies this\n           this Zone within the active Zone Set on a\n           particular fabric.')
t11ZsActiveZoneName = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 11, 1, 2), T11ZoningName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActiveZoneName.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneName.setDescription('The name of this Zone.')
t11ZsActiveBroadcast = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 11, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActiveBroadcast.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveBroadcast.setDescription('This object indicates whether broadcast Zoning is\n           enabled on this Zone.  If broadcast Zoning is enabled,\n           then broadcast frames generated by a member in this\n           Zone will be restricted to members in this Zone.\n\n           This object is only instantiated in Enhanced mode.')
t11ZsActiveHardZoning = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 11, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActiveHardZoning.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveHardZoning.setDescription('This object indicates whether hard Zoning is\n           enabled on this Zone.\n           This object is only instantiated in Enhanced mode.')
t11ZsActiveZoneMemberTable = MibTable((1, 3, 6, 1, 2, 1, 1, 1, 1, 12), )
if mibBuilder.loadTexts: t11ZsActiveZoneMemberTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneMemberTable.setDescription('This table contains all members of all Zones\n           within the active Zone Set on any fabric.')
t11ZsActiveZoneMemberEntry = MibTableRow((1, 3, 6, 1, 2, 1, 1, 1, 1, 12, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsActiveZoneIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsActiveZoneMemberIndex"))
if mibBuilder.loadTexts: t11ZsActiveZoneMemberEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneMemberEntry.setDescription('Each entry represents a member of a Zone in the active\n           Zone Set of a particular fabric (identified by the value\n           t11ZsServerFabricIndex), according to a particular\n           switch (identified by values of fcmInstanceIndex and\n           fcmSwitchIndex).')
t11ZsActiveZoneMemberIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsActiveZoneMemberIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneMemberIndex.setDescription('An index value which uniquely identifies this\n           member amongst the members of a particular Zone\n           in the active Zone Set on a particular fabric.')
t11ZsActiveZoneMemberFormat = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 12, 1, 2), T11ZsZoneMemberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActiveZoneMemberFormat.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneMemberFormat.setDescription('This object identifies the identifier format of the\n           corresponding instance of t11ZsActiveZoneMemberID.')
t11ZsActiveZoneMemberID = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 12, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActiveZoneMemberID.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveZoneMemberID.setDescription('This value of this object identifies the member\n           using the format specified in the corresponding\n           instance of t11ZsActiveZoneMemberFormat.')
t11ZsActiveAttribTable = MibTable((1, 3, 6, 1, 2, 1, 1, 1, 1, 13), )
if mibBuilder.loadTexts: t11ZsActiveAttribTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveAttribTable.setDescription('This table contains information about some of the\n           Attributes of the Zones within the active Zone Set\n           on each fabric.\n\n           This table contains all the types of attributes\n           which might apply zero, one, or more times to a Zone.\n           Attributes which apply once and only to a Zone are\n           specified in the t11ZsActiveZoneTable.\n\n           This table will always be empty in Basic mode.\n           It will also be empty if there are no Zones in\n           any active Zone Set having any of the applicable\n           types of attributes.')
t11ZsActiveAttribEntry = MibTableRow((1, 3, 6, 1, 2, 1, 1, 1, 1, 13, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsActiveZoneIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsActiveAttribIndex"))
if mibBuilder.loadTexts: t11ZsActiveAttribEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveAttribEntry.setDescription('Each entry contains an Attribute of a particular\n           Zone in the active Zone Set of a particular fabric\n           (identified by the value of t11ZsServerFabricIndex),\n           according to a particular switch (identified by\n           values of fcmInstanceIndex and fcmSwitchIndex).')
t11ZsActiveAttribIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11ZsActiveAttribIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveAttribIndex.setDescription('An index value which uniquely identifies this\n           attribute amongst the other attributes for a\n           particular Zone in the active Zone Set on a\n           particular fabric.')
t11ZsActiveAttribType = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActiveAttribType.setReference('ANSI INCITS xxx/200x, T11/Project 1677-D/Rev 8.2,\n           Fibre Channel - Generic Services-5 (FC-GS-5),\n           4 October 2005, section 6.4.8.3.8, table 267.')
if mibBuilder.loadTexts: t11ZsActiveAttribType.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveAttribType.setDescription('The type of attribute:\n\n                0001       - Protocol\n                00E0 (hex) - Vendor Specific\n\n           Note that type 2 (Hard) and type 3 (Broadcast)\n           do not need to be represented here, because they\n           are represented by t11ZsActiveBroadcast and\n           t11ZsActiveHardZoning.')
t11ZsActiveAttribValue = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 13, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 252))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsActiveAttribValue.setReference('ANSI INCITS xxx/200x, T11/Project 1677-D/Rev 8.2,\n           Fibre Channel - Generic Services-5 (FC-GS-5),\n           4 October 2005, section 6.4.8.3.8, tables 268 & 269.')
if mibBuilder.loadTexts: t11ZsActiveAttribValue.setStatus('current')
if mibBuilder.loadTexts: t11ZsActiveAttribValue.setDescription('The value of the attribute, formatted according to\n           its type as indicated by the corresponding instance\n           of t11ZsActiveAttribType.\n\n           As specified in FC-GS-5, the length of an attribute\n           value is at least 4 bytes, and if necessary, the value\n           is appended with zero bytes so that the length is a\n           multiple of four.  For a Vendor Specific attribute\n           value, the first 8 bytes contains the T10 Vendor ID\n           as described in FC-GS-5.')
t11ZsStatsTable = MibTable((1, 3, 6, 1, 2, 1, 1, 1, 2, 1), )
if mibBuilder.loadTexts: t11ZsStatsTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsStatsTable.setDescription('A table of statistics maintained by Zone Servers.')
t11ZsStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 1, 1, 2, 1, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"))
if mibBuilder.loadTexts: t11ZsStatsEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsStatsEntry.setDescription('A set of statistics for a Zone Server on a\n           particular fabric (identified by the value of\n           t11ZsServerFabricIndex) on a particular switch\n           (identified by values of fcmInstanceIndex and\n           fcmSwitchIndex).')
t11ZsTxMergeRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsTxMergeRequests.setStatus('current')
if mibBuilder.loadTexts: t11ZsTxMergeRequests.setDescription("The number of Merge Request Frames sent by this Zone\n           Server to other Zone Servers in the same fabric.\n\n           This counter has no discontinuities other than those\n           which all Counter32's have when sysUpTime=0.")
t11ZsRxMergeAccepts = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsRxMergeAccepts.setStatus('current')
if mibBuilder.loadTexts: t11ZsRxMergeAccepts.setDescription("The number of Merge Accept Frames received by this Zone\n           Server from other Zone Servers in the same fabric.\n\n           This counter has no discontinuities other than those\n           which all Counter32's have when sysUpTime=0.")
t11ZsRxMergeRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsRxMergeRequests.setStatus('current')
if mibBuilder.loadTexts: t11ZsRxMergeRequests.setDescription("The number of Merge Request Frames received by this Zone\n           Server from other Zone Servers in the same fabric.\n\n           This counter has no discontinuities other than those\n           which all Counter32's have when sysUpTime=0.")
t11ZsTxMergeAccepts = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsTxMergeAccepts.setStatus('current')
if mibBuilder.loadTexts: t11ZsTxMergeAccepts.setDescription("The number of Merge Accept Frames sent by this Zone\n           Server to other Zone Servers in the same fabric.\n\n           This counter has no discontinuities other than those\n           which all Counter32's have when sysUpTime=0.")
t11ZsTxChangeRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsTxChangeRequests.setReference('Fibre Channel - Switch Fabric - 4 (FC-SW-4), Rev 7.6,\n           November 2005, section 10.6.')
if mibBuilder.loadTexts: t11ZsTxChangeRequests.setStatus('current')
if mibBuilder.loadTexts: t11ZsTxChangeRequests.setDescription("The number of change requests sent (via the Fabric\n           Management Session Protocol) by this Zone\n           Server to other Zone Servers in the same fabric.\n\n           This includes Acquire Change Authorization\n           requests, Stage Fabric Config Update requests,\n           Update Fabric Config requests and Release Change\n           Authorization requests.\n\n           This counter has no discontinuities other than those\n           which all Counter32's have when sysUpTime=0.")
t11ZsRxChangeAccepts = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsRxChangeAccepts.setReference('Fibre Channel - Switch Fabric - 4 (FC-SW-4), Rev 7.6,\n           November 2005, section 10.6.')
if mibBuilder.loadTexts: t11ZsRxChangeAccepts.setStatus('current')
if mibBuilder.loadTexts: t11ZsRxChangeAccepts.setDescription("The number of SW_ACC messages received from other Zone\n           Servers in the same fabric (according to the Fabric\n           Management Session Protocol) in response to change\n           requests by this Zone Server.\n\n           This includes SW_ACC messages received in response to\n           Acquire Change Authorization requests, to Stage Fabric\n           Config Update requests, to Update Fabric Config requests\n           and to Release Change Authorization requests.\n\n           This counter has no discontinuities other than those\n           which all Counter32's have when sysUpTime=0.")
t11ZsRxChangeRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsRxChangeRequests.setReference('Fibre Channel - Switch Fabric - 4 (FC-SW-4), Rev 7.6,\n           November 2005, section 10.6.')
if mibBuilder.loadTexts: t11ZsRxChangeRequests.setStatus('current')
if mibBuilder.loadTexts: t11ZsRxChangeRequests.setDescription("The number of change requests received (via the Fabric\n           Management Session Protocol) by this Zone Server from\n           other Zone Servers in the same fabric.\n\n           This includes Acquire Change Authorization requests,\n           Stage Fabric Config Update requests, Update Fabric\n           Config requests and Release Change Authorization\n           requests.\n\n           This counter has no discontinuities other than those\n           which all Counter32's have when sysUpTime=0.")
t11ZsTxChangeAccepts = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsTxChangeAccepts.setReference('Fibre Channel - Switch Fabric - 4 (FC-SW-4), Rev 7.6,\n           November 2005, section 10.6.')
if mibBuilder.loadTexts: t11ZsTxChangeAccepts.setStatus('current')
if mibBuilder.loadTexts: t11ZsTxChangeAccepts.setDescription("The number of SW_ACC messages sent by this Zone Server\n           (according to the Fabric Management Session Protocol) in\n           response to change requests from other Zone Servers in\n           the same fabric.\n\n           This includes SW_ACC messages sent in response to\n           Acquire Change Authorization requests, to Stage Fabric\n           Config Update requests, to Update Fabric Config requests\n           and to Release Change Authorization requests.\n\n           This counter has no discontinuities other than those\n           which all Counter32's have when sysUpTime=0.")
t11ZsRxGS5Requests = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsRxGS5Requests.setStatus('current')
if mibBuilder.loadTexts: t11ZsRxGS5Requests.setDescription("The total number of GS-5 requests received by this Zone\n           Server on this fabric.\n\n           This counter has no discontinuities other than those\n           which all Counter32's have when sysUpTime=0.")
t11ZsTxGS5Rejects = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsTxGS5Rejects.setStatus('current')
if mibBuilder.loadTexts: t11ZsTxGS5Rejects.setDescription("The number of GS-5 requests rejected by this Zone\n           Server on this fabric.\n\n           This counter has no discontinuities other than those\n           which all Counter32's have when sysUpTime=0.")
t11ZsNotifyControlTable = MibTable((1, 3, 6, 1, 2, 1, 1, 1, 1, 14), )
if mibBuilder.loadTexts: t11ZsNotifyControlTable.setStatus('current')
if mibBuilder.loadTexts: t11ZsNotifyControlTable.setDescription('A table of control information for notifications\n           generated due to Zone Server events.')
t11ZsNotifyControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 1, 1, 1, 14, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-ZONE-SERVER-MIB", "t11ZsServerFabricIndex"))
if mibBuilder.loadTexts: t11ZsNotifyControlEntry.setStatus('current')
if mibBuilder.loadTexts: t11ZsNotifyControlEntry.setDescription('Each entry contains notification control information\n           specific to a Zone Server for a particular fabric\n           (identified by the value of t11ZsServerFabricIndex)\n           on a particular switch (identified by values of\n           fcmInstanceIndex and fcmSwitchIndex).')
t11ZsNotifyRequestRejectEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 14, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsNotifyRequestRejectEnable.setStatus('current')
if mibBuilder.loadTexts: t11ZsNotifyRequestRejectEnable.setDescription('This object specifies whether t11ZsRequestRejectNotify\n           notifications should be generated by the Zone Server\n           for this fabric.')
t11ZsNotifyMergeFailureEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 14, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsNotifyMergeFailureEnable.setStatus('current')
if mibBuilder.loadTexts: t11ZsNotifyMergeFailureEnable.setDescription('This object specifies whether t11ZsMergeFailureNotify\n           notifications should be generated by the Zone Server\n           for this fabric.')
t11ZsNotifyMergeSuccessEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 14, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsNotifyMergeSuccessEnable.setStatus('current')
if mibBuilder.loadTexts: t11ZsNotifyMergeSuccessEnable.setDescription('This object specifies whether t11ZsMergeSuccessNotify\n           notifications should be generated by the Zone Server\n           for this fabric.')
t11ZsNotifyDefZoneChangeEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 14, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsNotifyDefZoneChangeEnable.setStatus('current')
if mibBuilder.loadTexts: t11ZsNotifyDefZoneChangeEnable.setDescription('This object specifies whether t11ZsDefZoneChangeNotify\n           notifications should be generated by the Zone Server\n           for this fabric.')
t11ZsNotifyActivateEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 14, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11ZsNotifyActivateEnable.setStatus('current')
if mibBuilder.loadTexts: t11ZsNotifyActivateEnable.setDescription('This object specifies whether t11ZsActivateNotify\n           notifications should be generated by the Zone Server\n           for this fabric.')
t11ZsRejectCtCommandString = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 14, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsRejectCtCommandString.setStatus('current')
if mibBuilder.loadTexts: t11ZsRejectCtCommandString.setDescription("The binary content of the Zone Server request,\n           formatted as an octet string (in network byte\n           order) containing the CT_IU, as described in\n           Table 2 of [FC-GS-5] (including the preamble),\n           which was most recently rejected by the\n           Zone Server for this fabric.\n\n           This object contains the zero-length string\n           if and when the CT-IU's content is unavailable.\n\n           When the length of this object is 255 octets, it\n           contains the first 255 octets of the CT-IU (in\n           network-byte order).")
t11ZsRejectRequestSource = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 14, 1, 7), FcNameIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsRejectRequestSource.setStatus('current')
if mibBuilder.loadTexts: t11ZsRejectRequestSource.setDescription('The WWN which was the source of the CT_IU\n           contained in the corresponding instance of\n           t11ZsRejectCtCommandString.')
t11ZsRejectReasonCode = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 14, 1, 8), T11NsGs4RejectReasonCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsRejectReasonCode.setStatus('current')
if mibBuilder.loadTexts: t11ZsRejectReasonCode.setDescription('The reason code corresponding to the most recent\n           rejection of a request by the Zone Server for\n           this fabric.')
t11ZsRejectReasonCodeExp = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 14, 1, 9), T11ZsRejectReasonExplanation()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11ZsRejectReasonCodeExp.setStatus('current')
if mibBuilder.loadTexts: t11ZsRejectReasonCodeExp.setDescription("When the value of t11ZsRejectReasonCode is\n           'Unable to perform command request', this\n           object contains the corresponding reason code\n           explanation.")
t11ZsFabricIndex = MibScalar((1, 3, 6, 1, 2, 1, 1, 1, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: t11ZsFabricIndex.setStatus('current')
if mibBuilder.loadTexts: t11ZsFabricIndex.setDescription('This object contains either a value of\n           T11FabricIndex to identify the fabric on which\n           some occurrence has caused a notification to be\n           generated, or it has the value 4096 to indicate\n           all applicable fabrics.')
t11ZsRequestRejectNotify = NotificationType((1, 3, 6, 1, 2, 1, 1, 0, 1)).setObjects(("T11-FC-FABRIC-ADDR-MGR-MIB", "t11FamLocalSwitchWwn"), ("T11-ZONE-SERVER-MIB", "t11ZsRejectRequestSource"), ("T11-ZONE-SERVER-MIB", "t11ZsRejectCtCommandString"), ("T11-ZONE-SERVER-MIB", "t11ZsRejectReasonCode"), ("T11-ZONE-SERVER-MIB", "t11ZsRejectReasonCodeExp"))
if mibBuilder.loadTexts: t11ZsRequestRejectNotify.setStatus('current')
if mibBuilder.loadTexts: t11ZsRequestRejectNotify.setDescription('This notification is generated whenever a Zone Server\n           (indicated by the value of t11FamLocalSwitchWwn)\n           rejects a request.\n\n           The value of t11ZsRejectCtCommandString indicates\n           the rejected request, and the values of\n           t11ZsRejectReasonCode and t11ZsRejectReasonCodeExp\n           indicate the reason for the rejection.  The value\n           of t11ZsRequestClient indicates the source of the\n           request.')
t11ZsMergeFailureNotify = NotificationType((1, 3, 6, 1, 2, 1, 1, 0, 2)).setObjects(("IF-MIB", "ifIndex"), ("T11-ZONE-SERVER-MIB", "t11ZsFabricIndex"))
if mibBuilder.loadTexts: t11ZsMergeFailureNotify.setStatus('current')
if mibBuilder.loadTexts: t11ZsMergeFailureNotify.setDescription('This notification indicates that a Zone merge\n           failure has occurred on the fabric indicated by the\n           value of t11ZsFabricIndex, on the interface\n           indicated by the value of ifIndex.\n\n           If multiple Virtual Fabrics are configured on an\n           interface, and all have a Zone merge failure\n           at the same time, then just one notification is\n           generated and t11ZsFabricIndex has the value 4096.')
t11ZsMergeSuccessNotify = NotificationType((1, 3, 6, 1, 2, 1, 1, 0, 3)).setObjects(("IF-MIB", "ifIndex"), ("T11-ZONE-SERVER-MIB", "t11ZsFabricIndex"))
if mibBuilder.loadTexts: t11ZsMergeSuccessNotify.setStatus('current')
if mibBuilder.loadTexts: t11ZsMergeSuccessNotify.setDescription('This notification indicates that a successful Zone\n           merge has occurred on the fabric indicated by the\n           value of t11ZsFabricIndex, on the interface\n           indicated by the value of ifIndex.\n\n           If multiple Virtual Fabrics are configured on an\n           interface, and all have a successful Zone Merge\n           at the same time, then just one notification is\n           generated and t11ZsFabricIndex has the value 4096.')
t11ZsDefZoneChangeNotify = NotificationType((1, 3, 6, 1, 2, 1, 1, 0, 4)).setObjects(("T11-ZONE-SERVER-MIB", "t11ZsServerDefaultZoneSetting"))
if mibBuilder.loadTexts: t11ZsDefZoneChangeNotify.setStatus('current')
if mibBuilder.loadTexts: t11ZsDefZoneChangeNotify.setDescription('This notification indicates that the\n           value of a Default Zone Setting has changed.\n           The value of t11ZsServerDefaultZoneSetting\n           contains the value after the change.')
t11ZsActivateNotify = NotificationType((1, 3, 6, 1, 2, 1, 1, 0, 5)).setObjects(("T11-FC-FABRIC-ADDR-MGR-MIB", "t11FamLocalSwitchWwn"), ("T11-ZONE-SERVER-MIB", "t11ZsActivateResult"))
if mibBuilder.loadTexts: t11ZsActivateNotify.setStatus('current')
if mibBuilder.loadTexts: t11ZsActivateNotify.setDescription('This notification is generated whenever a switch\n           (indicated by the value of t11FamLocalSwitchWwn)\n           activates/deactivates a Zone Set on a fabric.\n           The t11ZsActivateResult object denotes the outcome\n           of the activation/deactivation.')
t11ZsMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 1, 2, 1))
t11ZsMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 1, 2, 2))
t11ZsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 1, 2, 1, 1)).setObjects(("T11-ZONE-SERVER-MIB", "t11ZsBasicGroup"), ("T11-ZONE-SERVER-MIB", "t11ZsNotificationControlGroup"), ("T11-ZONE-SERVER-MIB", "t11ZsNotificationGroup"), ("T11-ZONE-SERVER-MIB", "t11ZsEnhancedModeGroup"), ("T11-ZONE-SERVER-MIB", "t11ZsActivateGroup"), ("T11-ZONE-SERVER-MIB", "t11ZsStatisticsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11ZsMIBCompliance = t11ZsMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: t11ZsMIBCompliance.setDescription('The compliance statement for entities which\n           implement the Zone Server.')
t11ZsBasicGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 1, 2, 2, 1)).setObjects(("T11-ZONE-SERVER-MIB", "t11ZsServerCapabilityObject"), ("T11-ZONE-SERVER-MIB", "t11ZsServerDatabaseStorageType"), ("T11-ZONE-SERVER-MIB", "t11ZsServerDistribute"), ("T11-ZONE-SERVER-MIB", "t11ZsServerDistributeResult"), ("T11-ZONE-SERVER-MIB", "t11ZsServerDistributeFailReason"), ("T11-ZONE-SERVER-MIB", "t11ZsServerLastChange"), ("T11-ZONE-SERVER-MIB", "t11ZsServerHardZoning"), ("T11-ZONE-SERVER-MIB", "t11ZsServerReadFromDatabase"), ("T11-ZONE-SERVER-MIB", "t11ZsServerOperationMode"), ("T11-ZONE-SERVER-MIB", "t11ZsSetName"), ("T11-ZONE-SERVER-MIB", "t11ZsSetRowStatus"), ("T11-ZONE-SERVER-MIB", "t11ZsZoneName"), ("T11-ZONE-SERVER-MIB", "t11ZsZoneAttribBlock"), ("T11-ZONE-SERVER-MIB", "t11ZsZoneRowStatus"), ("T11-ZONE-SERVER-MIB", "t11ZsSetZoneRowStatus"), ("T11-ZONE-SERVER-MIB", "t11ZsZoneMemberFormat"), ("T11-ZONE-SERVER-MIB", "t11ZsZoneMemberID"), ("T11-ZONE-SERVER-MIB", "t11ZsZoneMemberRowStatus"), ("T11-ZONE-SERVER-MIB", "t11ZsActiveZoneSetName"), ("T11-ZONE-SERVER-MIB", "t11ZsActiveActivateTime"), ("T11-ZONE-SERVER-MIB", "t11ZsActiveZoneName"), ("T11-ZONE-SERVER-MIB", "t11ZsActiveZoneMemberFormat"), ("T11-ZONE-SERVER-MIB", "t11ZsActiveZoneMemberID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11ZsBasicGroup = t11ZsBasicGroup.setStatus('current')
if mibBuilder.loadTexts: t11ZsBasicGroup.setDescription('A collection of objects for displaying and updating\n           the Zone configuration of a Zone Server capable of\n           operating in Basic mode.')
t11ZsEnhancedModeGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 1, 2, 2, 2)).setObjects(("T11-ZONE-SERVER-MIB", "t11ZsServerChangeModeResult"), ("T11-ZONE-SERVER-MIB", "t11ZsServerDefaultZoneSetting"), ("T11-ZONE-SERVER-MIB", "t11ZsServerMergeControlSetting"), ("T11-ZONE-SERVER-MIB", "t11ZsServerDefZoneBroadcast"), ("T11-ZONE-SERVER-MIB", "t11ZsAliasName"), ("T11-ZONE-SERVER-MIB", "t11ZsAliasRowStatus"), ("T11-ZONE-SERVER-MIB", "t11ZsAttribBlockName"), ("T11-ZONE-SERVER-MIB", "t11ZsAttribBlockRowStatus"), ("T11-ZONE-SERVER-MIB", "t11ZsAttribType"), ("T11-ZONE-SERVER-MIB", "t11ZsAttribValue"), ("T11-ZONE-SERVER-MIB", "t11ZsAttribRowStatus"), ("T11-ZONE-SERVER-MIB", "t11ZsActiveBroadcast"), ("T11-ZONE-SERVER-MIB", "t11ZsActiveHardZoning"), ("T11-ZONE-SERVER-MIB", "t11ZsActiveAttribType"), ("T11-ZONE-SERVER-MIB", "t11ZsActiveAttribValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11ZsEnhancedModeGroup = t11ZsEnhancedModeGroup.setStatus('current')
if mibBuilder.loadTexts: t11ZsEnhancedModeGroup.setDescription('A collection of additional objects for displaying\n           and updating the Zone configuration of a Zone Server\n           capable of operating in Enhanced mode.')
t11ZsStatisticsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 1, 2, 2, 3)).setObjects(("T11-ZONE-SERVER-MIB", "t11ZsTxMergeRequests"), ("T11-ZONE-SERVER-MIB", "t11ZsRxMergeAccepts"), ("T11-ZONE-SERVER-MIB", "t11ZsRxMergeRequests"), ("T11-ZONE-SERVER-MIB", "t11ZsTxMergeAccepts"), ("T11-ZONE-SERVER-MIB", "t11ZsTxChangeRequests"), ("T11-ZONE-SERVER-MIB", "t11ZsRxChangeAccepts"), ("T11-ZONE-SERVER-MIB", "t11ZsRxChangeRequests"), ("T11-ZONE-SERVER-MIB", "t11ZsTxChangeAccepts"), ("T11-ZONE-SERVER-MIB", "t11ZsRxGS5Requests"), ("T11-ZONE-SERVER-MIB", "t11ZsTxGS5Rejects"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11ZsStatisticsGroup = t11ZsStatisticsGroup.setStatus('current')
if mibBuilder.loadTexts: t11ZsStatisticsGroup.setDescription('A collection of objects for collecting the Zone\n           Server statistics information.')
t11ZsNotificationControlGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 1, 2, 2, 4)).setObjects(("T11-ZONE-SERVER-MIB", "t11ZsNotifyRequestRejectEnable"), ("T11-ZONE-SERVER-MIB", "t11ZsNotifyMergeFailureEnable"), ("T11-ZONE-SERVER-MIB", "t11ZsNotifyMergeSuccessEnable"), ("T11-ZONE-SERVER-MIB", "t11ZsNotifyDefZoneChangeEnable"), ("T11-ZONE-SERVER-MIB", "t11ZsNotifyActivateEnable"), ("T11-ZONE-SERVER-MIB", "t11ZsRejectCtCommandString"), ("T11-ZONE-SERVER-MIB", "t11ZsRejectRequestSource"), ("T11-ZONE-SERVER-MIB", "t11ZsRejectReasonCode"), ("T11-ZONE-SERVER-MIB", "t11ZsRejectReasonCodeExp"), ("T11-ZONE-SERVER-MIB", "t11ZsFabricIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11ZsNotificationControlGroup = t11ZsNotificationControlGroup.setStatus('current')
if mibBuilder.loadTexts: t11ZsNotificationControlGroup.setDescription('A collection of notification control and\n           notification information objects for monitoring\n           Zone Server request rejection and Zone merge\n           failures.')
t11ZsActivateGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 1, 2, 2, 5)).setObjects(("T11-ZONE-SERVER-MIB", "t11ZsActivateRequest"), ("T11-ZONE-SERVER-MIB", "t11ZsActivateDeactivate"), ("T11-ZONE-SERVER-MIB", "t11ZsActivateResult"), ("T11-ZONE-SERVER-MIB", "t11ZsActivateFailCause"), ("T11-ZONE-SERVER-MIB", "t11ZsActivateFailDomainId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11ZsActivateGroup = t11ZsActivateGroup.setStatus('current')
if mibBuilder.loadTexts: t11ZsActivateGroup.setDescription('A collection of objects which allow a Zone Set to\n           be activated via SNMP SetRequests and provide the\n           status and result of such an activation.')
t11ZsNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 1, 2, 2, 6)).setObjects(("T11-ZONE-SERVER-MIB", "t11ZsRequestRejectNotify"), ("T11-ZONE-SERVER-MIB", "t11ZsMergeFailureNotify"), ("T11-ZONE-SERVER-MIB", "t11ZsMergeSuccessNotify"), ("T11-ZONE-SERVER-MIB", "t11ZsDefZoneChangeNotify"), ("T11-ZONE-SERVER-MIB", "t11ZsActivateNotify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11ZsNotificationGroup = t11ZsNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: t11ZsNotificationGroup.setDescription('A collection of notification(s) for monitoring\n           Zone Server request rejection, Zone merge\n           failures and successes and Default Zoning\n           behavioural changes.')
mibBuilder.exportSymbols("T11-ZONE-SERVER-MIB", t11ZsAttribType=t11ZsAttribType, t11ZsTxMergeRequests=t11ZsTxMergeRequests, t11ZsNotifyRequestRejectEnable=t11ZsNotifyRequestRejectEnable, t11ZsServerEntry=t11ZsServerEntry, t11ZsAttribTable=t11ZsAttribTable, t11ZsServerFabricIndex=t11ZsServerFabricIndex, t11ZsRxMergeRequests=t11ZsRxMergeRequests, t11ZsTxChangeRequests=t11ZsTxChangeRequests, t11ZsAttribBlockEntry=t11ZsAttribBlockEntry, t11ZsMIBCompliances=t11ZsMIBCompliances, t11ZsBasicGroup=t11ZsBasicGroup, PYSNMP_MODULE_ID=t11ZoneServerMIB, t11ZsAliasName=t11ZsAliasName, t11ZsZoneMemberID=t11ZsZoneMemberID, t11ZsStatisticsGroup=t11ZsStatisticsGroup, t11ZsActivateFailDomainId=t11ZsActivateFailDomainId, t11ZsZoneMemberParentIndex=t11ZsZoneMemberParentIndex, t11ZsAliasIndex=t11ZsAliasIndex, t11ZsMIBConformance=t11ZsMIBConformance, t11ZsZoneMemberRowStatus=t11ZsZoneMemberRowStatus, t11ZsServerDefaultZoneSetting=t11ZsServerDefaultZoneSetting, t11ZsActivateEntry=t11ZsActivateEntry, T11ZoningName=T11ZoningName, t11ZsZoneName=t11ZsZoneName, t11ZsDefZoneChangeNotify=t11ZsDefZoneChangeNotify, t11ZsNotificationGroup=t11ZsNotificationGroup, t11ZsAliasRowStatus=t11ZsAliasRowStatus, t11ZsActiveZoneTable=t11ZsActiveZoneTable, t11ZsNotifyActivateEnable=t11ZsNotifyActivateEnable, t11ZsActiveBroadcast=t11ZsActiveBroadcast, t11ZsServerTable=t11ZsServerTable, t11ZsRejectReasonCode=t11ZsRejectReasonCode, t11ZsActiveZoneName=t11ZsActiveZoneName, t11ZsEnhancedModeGroup=t11ZsEnhancedModeGroup, t11ZsStatsTable=t11ZsStatsTable, t11ZsSetZoneTable=t11ZsSetZoneTable, t11ZsMergeFailureNotify=t11ZsMergeFailureNotify, t11ZsTxChangeAccepts=t11ZsTxChangeAccepts, t11ZsActiveHardZoning=t11ZsActiveHardZoning, t11ZsSetEntry=t11ZsSetEntry, t11ZsRxGS5Requests=t11ZsRxGS5Requests, t11ZsZoneTable=t11ZsZoneTable, t11ZsActiveAttribTable=t11ZsActiveAttribTable, t11ZsNotifyMergeSuccessEnable=t11ZsNotifyMergeSuccessEnable, t11ZsZoneIndex=t11ZsZoneIndex, t11ZsServerCapabilityObject=t11ZsServerCapabilityObject, t11ZsActiveZoneMemberTable=t11ZsActiveZoneMemberTable, t11ZsRxChangeAccepts=t11ZsRxChangeAccepts, t11ZsActiveEntry=t11ZsActiveEntry, t11ZsZoneMemberFormat=t11ZsZoneMemberFormat, t11ZsAttribRowStatus=t11ZsAttribRowStatus, t11ZsActiveActivateTime=t11ZsActiveActivateTime, t11ZsActiveZoneMemberID=t11ZsActiveZoneMemberID, t11ZsRejectReasonCodeExp=t11ZsRejectReasonCodeExp, t11ZsNotifyMergeFailureEnable=t11ZsNotifyMergeFailureEnable, t11ZsAliasTable=t11ZsAliasTable, t11ZsSetTable=t11ZsSetTable, t11ZsServerOperationMode=t11ZsServerOperationMode, t11ZsSetIndex=t11ZsSetIndex, t11ZsAttribBlockName=t11ZsAttribBlockName, t11ZsSetZoneRowStatus=t11ZsSetZoneRowStatus, t11ZsNotifyControlTable=t11ZsNotifyControlTable, t11ZsActiveZoneIndex=t11ZsActiveZoneIndex, t11ZsZoneMemberTable=t11ZsZoneMemberTable, t11ZsZoneMemberEntry=t11ZsZoneMemberEntry, t11ZsZoneMemberIndex=t11ZsZoneMemberIndex, t11ZsRejectCtCommandString=t11ZsRejectCtCommandString, t11ZsServerReadFromDatabase=t11ZsServerReadFromDatabase, t11ZsZoneEntry=t11ZsZoneEntry, t11ZsTxGS5Rejects=t11ZsTxGS5Rejects, t11ZsMIBCompliance=t11ZsMIBCompliance, t11ZsSetName=t11ZsSetName, t11ZsServerDefZoneBroadcast=t11ZsServerDefZoneBroadcast, t11ZsSetZoneEntry=t11ZsSetZoneEntry, t11ZsActiveAttribEntry=t11ZsActiveAttribEntry, t11ZsAttribBlockRowStatus=t11ZsAttribBlockRowStatus, t11ZoneServerMIB=t11ZoneServerMIB, T11ZsRejectReasonExplanation=T11ZsRejectReasonExplanation, t11ZsRxMergeAccepts=t11ZsRxMergeAccepts, t11ZsServerDistribute=t11ZsServerDistribute, t11ZsAttribBlockIndex=t11ZsAttribBlockIndex, t11ZsActiveTable=t11ZsActiveTable, t11ZsActivateNotify=t11ZsActivateNotify, t11ZsMIBGroups=t11ZsMIBGroups, t11ZsMIBObjects=t11ZsMIBObjects, t11ZsActiveAttribIndex=t11ZsActiveAttribIndex, t11ZsAttribIndex=t11ZsAttribIndex, t11ZsActiveZoneSetName=t11ZsActiveZoneSetName, t11ZsActivateFailCause=t11ZsActivateFailCause, t11ZsAttribEntry=t11ZsAttribEntry, t11ZsAttribValue=t11ZsAttribValue, t11ZsNotificationControlGroup=t11ZsNotificationControlGroup, t11ZsServerDatabaseStorageType=t11ZsServerDatabaseStorageType, t11ZsActiveZoneMemberIndex=t11ZsActiveZoneMemberIndex, t11ZsZoneAttribBlock=t11ZsZoneAttribBlock, t11ZsMergeSuccessNotify=t11ZsMergeSuccessNotify, t11ZsActiveAttribValue=t11ZsActiveAttribValue, t11ZsServerHardZoning=t11ZsServerHardZoning, t11ZsRejectRequestSource=t11ZsRejectRequestSource, t11ZsTxMergeAccepts=t11ZsTxMergeAccepts, t11ZsConfiguration=t11ZsConfiguration, t11ZsFabricIndex=t11ZsFabricIndex, t11ZsStatsEntry=t11ZsStatsEntry, t11ZsMIBNotifications=t11ZsMIBNotifications, t11ZsServerChangeModeResult=t11ZsServerChangeModeResult, t11ZsNotifyDefZoneChangeEnable=t11ZsNotifyDefZoneChangeEnable, t11ZsActivateTable=t11ZsActivateTable, t11ZsActiveZoneMemberFormat=t11ZsActiveZoneMemberFormat, t11ZsActivateRequest=t11ZsActivateRequest, t11ZsAttribBlockTable=t11ZsAttribBlockTable, t11ZsActiveZoneMemberEntry=t11ZsActiveZoneMemberEntry, t11ZsActivateResult=t11ZsActivateResult, t11ZsActivateDeactivate=t11ZsActivateDeactivate, t11ZsRequestRejectNotify=t11ZsRequestRejectNotify, t11ZsStatistics=t11ZsStatistics, t11ZsZoneMemberParentType=t11ZsZoneMemberParentType, T11ZsZoneMemberType=T11ZsZoneMemberType, t11ZsActiveZoneEntry=t11ZsActiveZoneEntry, t11ZsActiveAttribType=t11ZsActiveAttribType, t11ZsNotifyControlEntry=t11ZsNotifyControlEntry, t11ZsServerDistributeFailReason=t11ZsServerDistributeFailReason, t11ZsServerLastChange=t11ZsServerLastChange, t11ZsSetRowStatus=t11ZsSetRowStatus, t11ZsActivateGroup=t11ZsActivateGroup, t11ZsAliasEntry=t11ZsAliasEntry, t11ZsZoneRowStatus=t11ZsZoneRowStatus, t11ZsRxChangeRequests=t11ZsRxChangeRequests, t11ZsServerMergeControlSetting=t11ZsServerMergeControlSetting, t11ZsServerDistributeResult=t11ZsServerDistributeResult)
