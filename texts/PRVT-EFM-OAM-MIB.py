#
# PySNMP MIB module PRVT-EFM-OAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-EFM-OAM-MIB
# Produced by pysmi-1.1.3 at Mon Nov 22 11:54:27 2021
# On host fv-az33-360 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
switch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "switch")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, Counter64, Integer32, Unsigned32, NotificationType, Gauge32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ObjectIdentity, Counter32, ModuleIdentity, iso, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter64", "Integer32", "Unsigned32", "NotificationType", "Gauge32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ObjectIdentity", "Counter32", "ModuleIdentity", "iso", "TimeTicks")
RowStatus, MacAddress, TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "MacAddress", "TextualConvention", "DisplayString", "TruthValue")
prvtEfmOamMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 5, 133))
prvtEfmOamMIB.setRevisions(('2010-01-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: prvtEfmOamMIB.setRevisionsDescriptions(('Initial version',))
if mibBuilder.loadTexts: prvtEfmOamMIB.setLastUpdated('201001100000Z')
if mibBuilder.loadTexts: prvtEfmOamMIB.setOrganization('BATM Advanced Communication')
if mibBuilder.loadTexts: prvtEfmOamMIB.setContactInfo('BATM/Telco Systems Support team\n         Email:\n         For North America: techsupport@telco.com\n         For North Europe: support@batm.de, info@batm.de\n         For the rest of the world: techsupport@telco.com')
if mibBuilder.loadTexts: prvtEfmOamMIB.setDescription('This MIB should provide general configuration and\n         reports of this protocol that are not available in\n         the standard DOT3-OAM-MIB, such as Enabling and Timers,\n         as well as the ability to control private\n         extensions added to the EFM OAM.')
prvtEfmOamNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 0))
prvtEfmOamObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1))
prvtEfmOamEnable = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamEnable.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEnable.setDescription('Enable/disable the EFM OAM on the device')
prvtEfmOamMultiPduCount = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamMultiPduCount.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamMultiPduCount.setDescription('Number of OAM PDUs that will be sent when\n         protocol ask to send multiple subsequent\n         messages.')
prvtEfmOamRemoteEvent = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamRemoteEvent.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamRemoteEvent.setDescription('Enable or disable sending the local\n         event notifications to the remote device.')
prvtEfmOamLogEvents = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamLogEvents.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLogEvents.setDescription('Disable/enable sending of Event Notification\n         OAM PDU to the local Syslog daemon.')
prvtEfmOamPriority = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamPriority.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPriority.setDescription('Priority of the sent OAM PDUs.')
prvtEfmOamPriorityEnable = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamPriorityEnable.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPriorityEnable.setDescription('Enable/disable EFM-OAM PDU priority')
prvtEfmOamKeepAliveInterval = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(200, 15000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamKeepAliveInterval.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamKeepAliveInterval.setDescription('Aging interval (in miliseconds)of the last heard\n         neighbouring device.')
prvtEfmOamHelloInterval = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 5000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamHelloInterval.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamHelloInterval.setDescription('Maximal interval between a pair of PDUs in milliseconds.')
prvtEfmOamHistoryLimit = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamHistoryLimit.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamHistoryLimit.setDescription('Number of entries in EFM_OAM history.')
prvtEfmOamHistoryCount = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamHistoryCount.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamHistoryCount.setDescription('Number of entries in efm-oam history.')
prvtEfmOamHistoryClear = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamHistoryClear.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamHistoryClear.setDescription('Clear efm-oam history.')
prvtEfmOamPacketSent = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPacketSent.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPacketSent.setDescription("Efm-oam PDU's sent.")
prvtEfmOamPacketReceived = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPacketReceived.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPacketReceived.setDescription("Efm-oam PDU's received.")
prvtEfmOamLocalMac = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamLocalMac.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLocalMac.setDescription('Local mac address.')
prvtEfmOamPingTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 15), )
if mibBuilder.loadTexts: prvtEfmOamPingTable.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPingTable.setDescription('This table let the EFM-OAM non-intrusive monitoring\n         on the specific interface by querying a number\n         of time aFramesTransmittedOK parameter, ping requests,\n         using the variable retrieval EFM OAM PDU.\n         Ping operation procedure:\n         1. Set prvtEfmOamPingRowStatus to CreateandWait\n         2. Configure parameters that are different from default\n         3. Set prvtEfmOamPingStatus to startPing\n         4. Set prvtEfmOamPingRowStatus to Active to start the operation. \n         \n         If the operation is performed from cli, at the end prvtEfmOamPingStatus \n         is set to stopPing and if is perfomed from SNMP  \n         prvtEfmOamPingStatus is set to startPing.')
prvtEfmOamPingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 15, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtEfmOamPingEntry.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPingEntry.setDescription('prvtEfmOamPingEntry')
prvtEfmOamPingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 15, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtEfmOamPingRowStatus.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPingRowStatus.setDescription('Creation/delete/edit of the ping test.')
prvtEfmOamPingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("startPing", 1), ("stopPing", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtEfmOamPingStatus.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPingStatus.setDescription('Ping status.')
prvtEfmOamPingEchoNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 15, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtEfmOamPingEchoNumber.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPingEchoNumber.setDescription('The number of echo packets to send.')
prvtEfmOamPingDelayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 15, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtEfmOamPingDelayTime.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPingDelayTime.setDescription('The delay in seconds between packets.')
prvtEfmOamPingTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 15, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 600))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtEfmOamPingTimeOut.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPingTimeOut.setDescription('The time in seconds which the ping\n         should wait for the response.')
prvtEfmOamPingResultClear = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("clear", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtEfmOamPingResultClear.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPingResultClear.setDescription('Delete per interface entries in prvtEfmOamPingResultTable.')
prvtEfmOamPingResultTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 16), )
if mibBuilder.loadTexts: prvtEfmOamPingResultTable.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPingResultTable.setDescription('Ping results table.')
prvtEfmOamPingResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 16, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtEfmOamPingResultEntry.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPingResultEntry.setDescription('prvtEfmOamPingResultEntry')
prvtEfmOamPingResultStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noPing", 1), ("running", 2), ("terminated", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPingResultStatus.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPingResultStatus.setDescription('Current ping operation status.')
prvtEfmOamPingResultSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 16, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPingResultSentPackets.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPingResultSentPackets.setDescription('Sent packets')
prvtEfmOamPingResultReceivedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 16, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPingResultReceivedPackets.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPingResultReceivedPackets.setDescription('Received packets')
prvtEfmOamPingResultReceiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 16, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPingResultReceiveRate.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPingResultReceiveRate.setDescription('Received rate')
prvtEfmOamPingResultTimeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 16, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPingResultTimeMin.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPingResultTimeMin.setDescription('Ping minimum time.')
prvtEfmOamPingResultTimeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 16, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPingResultTimeMax.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPingResultTimeMax.setDescription('Ping maximum time.')
prvtEfmOamPingResultAverageTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 16, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPingResultAverageTime.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPingResultAverageTime.setDescription('Ping average time - Integer part.')
prvtEfmOamLoopbackTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 17), )
if mibBuilder.loadTexts: prvtEfmOamLoopbackTable.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackTable.setDescription('This table should permit to perform EFM-OAM\n         intrusive monitoring on the specific interface\n         by setting the remote device into loopback state\n         and generating test traffic.\n         It should support:\n         Storm operation, an operation that sets\n         remote loopback, stops local data flow to the\n         remote box and generates a packet burst by CPU.\n         When the burst is received back it is validated\n         and statistics are displayed. Burst operation,\n         an operation that sets remote loopback, stops\n         local data flow to the remote box and generates\n         a packet test burst by the hardware (when available).\n         It means a single packet generated by CPU is\n         repetitively sent by the hardware. When the\n         burst is received back it is ignored and only\n         counters are displayed.\n         Loopback storm operation procedure:\n         1. Set prvtEfmOamLoopbackRowStatus to CreateandWait\n         2. Configure prvtEfmOamLoopbackType to set the operation\n         3. Configure other parameters that are different from default\n         4. Set prvtEfmOamLoopbackStatus to initiatingLoopback\n         5. Set prvtEfmOamLoopbackRowStatus to Active to start the operation. \n         \n         If the operation is performed from cli, at the end prvtEfmOamLoopbackStatus \n         is set to terminatingLoopback and if is perfomed from SNMP  \n         prvtEfmOamLoopbackStatus is set to initiatingLoopback.')
prvtEfmOamLoopbackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 17, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtEfmOamLoopbackEntry.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackEntry.setDescription('prvtEfmOamLoopbackEntry')
prvtEfmOamLoopbackRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 17, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtEfmOamLoopbackRowStatus.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackRowStatus.setDescription('Entry rowStatus')
prvtEfmOamLoopbackType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 17, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("storm", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtEfmOamLoopbackType.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackType.setDescription('Loopback type')
prvtEfmOamLoopbackStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 4))).clone(namedValues=NamedValues(("initiatingLoopback", 2), ("terminatingLoopback", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtEfmOamLoopbackStatus.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackStatus.setDescription('Loopback status')
prvtEfmOamLoopbackCount = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 17, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtEfmOamLoopbackCount.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackCount.setDescription('Represent the count of packets to send in storm operation.')
prvtEfmOamLoopbackPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 17, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 1512))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtEfmOamLoopbackPacketSize.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackPacketSize.setDescription('Represent the size of the test packet to use.')
prvtEfmOamLoopbackDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 17, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtEfmOamLoopbackDelay.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackDelay.setDescription('Represent the delay between packets in seconds.\n         The default value is 0 and represents no delay.')
prvtEfmOamLoopbackTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 17, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 600))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtEfmOamLoopbackTimeout.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackTimeout.setDescription('Represent the wait for response in seconds.')
prvtEfmOamLoopbackResultsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 17, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("clear", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultsClear.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultsClear.setDescription('Clear loopback results for this ifIndex.')
prvtEfmOamLoopbackResultTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 18), )
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultTable.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultTable.setDescription('Loopback results.')
prvtEfmOamLoopbackResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 18, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultEntry.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultEntry.setDescription('Entry in prvtEfmOamLoopbackResultTable')
prvtEfmOamLoopbackResultStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("noLoopback", 1), ("startCmdSent", 2), ("startFail", 3), ("dataStarted", 4), ("stopCmdSent", 5), ("terminated", 6), ("remoteFailure", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultStatus.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultStatus.setDescription('Loopback result status')
prvtEfmOamLoopbackResultSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 18, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultSentPackets.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultSentPackets.setDescription('Sent packets')
prvtEfmOamLoopbackResultReceivedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 18, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultReceivedPackets.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultReceivedPackets.setDescription('Received packets')
prvtEfmOamLoopbackResultRateBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 18, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultRateBurst.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultRateBurst.setDescription('Loopback burst rate')
prvtEfmOamLoopbackResultLocalInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 18, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalInOctets.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalInOctets.setDescription('Local inoctets.')
prvtEfmOamLoopbackResultLocalOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 18, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalOutOctets.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalOutOctets.setDescription('Local outoctets')
prvtEfmOamLoopbackResultLocalInUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 18, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalInUcastPkts.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalInUcastPkts.setDescription('Local inucastpkts')
prvtEfmOamLoopbackResultLocalOutUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 18, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalOutUcastPkts.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalOutUcastPkts.setDescription('Local outucastpkts')
prvtEfmOamLoopbackResultLocalInNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 18, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalInNUcastPkts.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalInNUcastPkts.setDescription('Local innucastpkts')
prvtEfmOamLoopbackResultLocalOutNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 18, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalOutNUcastPkts.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalOutNUcastPkts.setDescription('Local outnucastpkts')
prvtEfmOamLoopbackResultLocalInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 18, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalInDiscards.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalInDiscards.setDescription('Local indiscards')
prvtEfmOamLoopbackResultLocalOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 18, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalOutDiscards.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalOutDiscards.setDescription('Local outdiscards')
prvtEfmOamLoopbackResultLocalInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 18, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalInErrors.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalInErrors.setDescription('Local inerrors')
prvtEfmOamLoopbackResultLocalOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 18, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalOutErrors.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultLocalOutErrors.setDescription('Local outerrors')
prvtEfmOamPeerTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 19), )
if mibBuilder.loadTexts: prvtEfmOamPeerTable.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPeerTable.setDescription('This table holds the peer extended information\n         available only when local interface is set in\n         enhanced mode (see prvtOamEnhanceMode) and the\n         remote is detected as enhanced-mode device. This table\n         shall containg an entry per physical interface,\n         indexed by the corresponding ifIndex from IF-MIB.')
prvtEfmOamPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 19, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtEfmOamPeerEntry.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPeerEntry.setDescription('prvtEfmOamPeerEntry')
prvtEfmOamPeerMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 19, 1, 1), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPeerMacAddress.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPeerMacAddress.setDescription('prvtEfmOamPeerMacAddress')
prvtEfmOamPeerVendorOui = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 19, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPeerVendorOui.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPeerVendorOui.setDescription('prvtEfmOamPeerVendorOui')
prvtEfmOamPeerVendorInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 19, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPeerVendorInfo.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPeerVendorInfo.setDescription('prvtEfmOamPeerVendorInfo')
prvtEfmOamPeerRole = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 19, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("passive", 1), ("active", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPeerRole.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPeerRole.setDescription('prvtEfmOamPeerRole')
prvtEfmOamPeerMaxOamPduSize = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 19, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPeerMaxOamPduSize.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPeerMaxOamPduSize.setDescription('prvtEfmOamPeerMaxOamPduSize')
prvtEfmOamPeerConfigRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 19, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPeerConfigRevision.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPeerConfigRevision.setDescription('prvtEfmOamPeerConfigRevision')
prvtEfmOamPeerFunctionsSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 19, 1, 7), Bits().clone(namedValues=NamedValues(("unidirectionalSupport", 0), ("loopbackSupport", 1), ("eventSupport", 2), ("variableSupport", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPeerFunctionsSupported.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPeerFunctionsSupported.setDescription('prvtEfmOamPeerFunctionsSupprted')
prvtEfmOamPeerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 19, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPeerPort.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPeerPort.setDescription('prvtEfmOamPeerPort')
prvtEfmOamPeerName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 19, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPeerName.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPeerName.setDescription('prvtEfmOamPeerName')
prvtEfmOamPeerMode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 19, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("basic", 1), ("enhanced", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPeerMode.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamPeerMode.setDescription('Enhanced mode.')
prvtEfmOamStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 20), )
if mibBuilder.loadTexts: prvtEfmOamStatisticsTable.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamStatisticsTable.setDescription('prvtEfmOamStatisticsTable')
prvtEfmOamStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 20, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtEfmOamStatisticsEntry.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamStatisticsEntry.setDescription('prvtEfmOamStatisticsEntry')
prvtEfmOamStatisticsInformationTx = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 20, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamStatisticsInformationTx.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamStatisticsInformationTx.setDescription('prvtEfmOamStatisticsInformationTx')
prvtEfmOamStatisticsInformationRx = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 20, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamStatisticsInformationRx.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamStatisticsInformationRx.setDescription('prvtEfmOamStatisticsInformationRx')
prvtEfmOamStatisticsUniqueEventNotificationTx = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 20, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamStatisticsUniqueEventNotificationTx.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamStatisticsUniqueEventNotificationTx.setDescription('prvtEfmOamStatisticsUniqueEventNotificationTx')
prvtEfmOamStatisticsUniqueEventNotificationRx = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 20, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamStatisticsUniqueEventNotificationRx.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamStatisticsUniqueEventNotificationRx.setDescription('prvtEfmOamStatisticsUniqueEventNotificationRx')
prvtEfmOamStatisticsDuplicateEventNotificationTx = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 20, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamStatisticsDuplicateEventNotificationTx.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamStatisticsDuplicateEventNotificationTx.setDescription('prvtEfmOamStatisticsDuplicateEventNotificationTx')
prvtEfmOamStatisticsDuplicateEventNotificationRx = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 20, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamStatisticsDuplicateEventNotificationRx.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamStatisticsDuplicateEventNotificationRx.setDescription('prvtEfmOamStatisticsDuplicateEventNotificationRx')
prvtEfmOamStatisticsLoopbackControlTx = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 20, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamStatisticsLoopbackControlTx.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamStatisticsLoopbackControlTx.setDescription('prvtEfmOamStatisticsLoopbackControlTx')
prvtEfmOamStatisticsLoopbackControlRx = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 20, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamStatisticsLoopbackControlRx.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamStatisticsLoopbackControlRx.setDescription('prvtEfmOamStatisticsLoopbackControlRx')
prvtEfmOamStatisticsVariableRequestTx = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 20, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamStatisticsVariableRequestTx.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamStatisticsVariableRequestTx.setDescription('prvtEfmOamStatisticsVariableRequestTx')
prvtEfmOamStatisticsVariableRequestRx = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 20, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamStatisticsVariableRequestRx.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamStatisticsVariableRequestRx.setDescription('prvtEfmOamStatisticsVariableRequestRx')
prvtEfmOamStatisticsVariableResponseTx = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 20, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamStatisticsVariableResponseTx.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamStatisticsVariableResponseTx.setDescription('prvtEfmOamStatisticsVariableResponseTx')
prvtEfmOamStatisticsVariableResponseRx = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 20, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamStatisticsVariableResponseRx.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamStatisticsVariableResponseRx.setDescription('prvtEfmOamStatisticsVariableResponseRx')
prvtEfmOamStatisticsOrganizationSpecificTx = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 20, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamStatisticsOrganizationSpecificTx.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamStatisticsOrganizationSpecificTx.setDescription('prvtEfmOamStatisticsOrganizationSpecificTx')
prvtEfmOamStatisticsOrganizationSpecificRx = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 20, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamStatisticsOrganizationSpecificRx.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamStatisticsOrganizationSpecificRx.setDescription('prvtEfmOamStatisticsOrganizationSpecificRx')
prvtEfmOamStatisticsUnsupportedCodesTx = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 20, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamStatisticsUnsupportedCodesTx.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamStatisticsUnsupportedCodesTx.setDescription('prvtEfmOamStatisticsUnsupportedCodesTx')
prvtEfmOamStatisticsUnsupportedCodesRx = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 20, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamStatisticsUnsupportedCodesRx.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamStatisticsUnsupportedCodesRx.setDescription('prvtEfmOamStatisticsUnsupportedCodesRx')
prvtEfmOamStatisticsFramesLostDueToOam = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 20, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamStatisticsFramesLostDueToOam.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamStatisticsFramesLostDueToOam.setDescription('prvtEfmOamStatisticsFramesLostDueToOam')
prvtEfmOamEventConfigTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 21), )
if mibBuilder.loadTexts: prvtEfmOamEventConfigTable.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventConfigTable.setDescription('Enable Event Notifications and configure the thresholds.')
prvtEfmOamEventConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 21, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtEfmOamEventConfigEntry.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventConfigEntry.setDescription('An entry containing management information\n         applicable to a particular interface')
prvtEfmOamEventConfigErrorSymbolPeriodWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 21, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamEventConfigErrorSymbolPeriodWindow.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventConfigErrorSymbolPeriodWindow.setDescription('If prvtEfmOamEventConfigErrorSymbolPeriodThreshold symbol\n         errors occur within a window of prvtEfmOamEventConfigErrorSymbolPeriodWindow\n         symbols, an Event Notification OAMPDU should be\n         generated with an Errored Symbol Period Event TLV\n         indicating that the threshold has been crossed in this window.')
prvtEfmOamEventConfigErrorSymbolPeriodThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 21, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamEventConfigErrorSymbolPeriodThreshold.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventConfigErrorSymbolPeriodThreshold.setDescription('If prvtEfmOamEventConfigErrorSymbolPeriodThreshold symbol\n         errors occur within a window of prvtEfmOamEventConfigErrorSymbolPeriodWindow\n         symbols, an Event Notification OAMPDU should be generated with an Errored Symbol\n         Period Event TLV indicating that the threshold has been\n         crossed in this window.')
prvtEfmOamEventConfigErrorSymbolPeriodEventNotificationEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 21, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamEventConfigErrorSymbolPeriodEventNotificationEnable.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventConfigErrorSymbolPeriodEventNotificationEnable.setDescription('If true, the OAM entity should send an Event Notification\n         OAMPDU when an Errored Symbol Period Event occurs.')
prvtEfmOamEventConfigErrorFrameWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 21, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamEventConfigErrorFrameWindow.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventConfigErrorFrameWindow.setDescription('Symbol period monitor interval in seconds')
prvtEfmOamEventConfigErrorFrameThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 21, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamEventConfigErrorFrameThreshold.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventConfigErrorFrameThreshold.setDescription('The amount of time over which the\n         threshold is defined.')
prvtEfmOamEventConfigErrorFrameEventNotificationEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 21, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamEventConfigErrorFrameEventNotificationEnable.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventConfigErrorFrameEventNotificationEnable.setDescription('If true, the OAM entity should send an Event\n         Notification OAMPDU when an Errored Frame Event occurs')
prvtEfmOamEventConfigDyingGaspEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 21, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamEventConfigDyingGaspEnable.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventConfigDyingGaspEnable.setDescription('If true, the local OAM entity should attempt to indicate a\n         dying gasp via the OAMPDU flags field to its peer OAM entity\n         when a dying gasp event occurs.')
prvtEfmOamEventLogTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 22), )
if mibBuilder.loadTexts: prvtEfmOamEventLogTable.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventLogTable.setDescription('prvtEfmOamEventLogTable')
prvtEfmOamEventLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 22, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "PRVT-EFM-OAM-MIB", "prvtEfmOamEventLogId"))
if mibBuilder.loadTexts: prvtEfmOamEventLogEntry.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventLogEntry.setDescription('prvtEfmOamEventLogEntry')
prvtEfmOamEventLogId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 22, 1, 1), Unsigned32())
if mibBuilder.loadTexts: prvtEfmOamEventLogId.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventLogId.setDescription('prvtEfmOamEventLogId')
prvtEfmOamEventLogTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 22, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamEventLogTimeStamp.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventLogTimeStamp.setDescription('prvtEfmOamEventLogTimeStamp')
prvtEfmOamEventLogOui = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 22, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamEventLogOui.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventLogOui.setDescription('prvtEfmOamEventLogOui')
prvtEfmOamEventLogType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 22, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 256, 257, 258))).clone(namedValues=NamedValues(("erroredSymbolEvent", 1), ("erroredFramePeriodEvent", 2), ("erroredFrameEvent", 3), ("erroredFrameSecondsEvent", 4), ("linkFault", 256), ("dyingGaspEvent", 257), ("criticalEvent", 258)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamEventLogType.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventLogType.setDescription('prvtEfmOamEventLogType')
prvtEfmOamEventLogLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 22, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamEventLogLocation.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventLogLocation.setDescription('prvtEfmOamEventLogLocation')
prvtEfmOamEventLogWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 22, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamEventLogWindow.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventLogWindow.setDescription('prvtEfmOamEventLogWindow')
prvtEfmOamEventLogThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 22, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamEventLogThreshold.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventLogThreshold.setDescription('prvtEfmOamEventLogThreshold')
prvtEfmOamEventLogValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 22, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamEventLogValue.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventLogValue.setDescription('prvtEfmOamEventLogValue')
prvtEfmOamEventLogRunningTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 22, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamEventLogRunningTotal.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventLogRunningTotal.setDescription('prvtEfmOamEventLogRunningTotal')
prvtEfmOamEventLogEventTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 22, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamEventLogEventTotal.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventLogEventTotal.setDescription('prvtEfmOamEventLogEventTotal')
prvtEfmOamInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 23), )
if mibBuilder.loadTexts: prvtEfmOamInterfaceTable.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamInterfaceTable.setDescription('prvtEfmOamInterfaceTable')
prvtEfmOamInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 23, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtEfmOamInterfaceEntry.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamInterfaceEntry.setDescription('prvtEfmOamInterfaceEntry')
prvtEfmOamInterfaceEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 23, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamInterfaceEnable.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamInterfaceEnable.setDescription('Enable/disable efm-oam protocol per port.')
prvtEfmOamInterfaceOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 23, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("disabled", 1), ("linkFault", 2), ("passiveWait", 3), ("activeSendLocal", 4), ("sendLocalAndRemote", 5), ("sendLocalAndRemoteOk", 6), ("oamPeeringLocallyRejected", 7), ("oamPeeringRemoteRejected", 8), ("operational", 9), ("nonOperHalfDuplex", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamInterfaceOperStatus.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamInterfaceOperStatus.setDescription('Interface efm-oam operational status')
prvtEfmOamInterfaceRole = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 23, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("passive", 1), ("active", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamInterfaceRole.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamInterfaceRole.setDescription('Interface efm-oam mode.')
prvtEfmOamInterfaceMaxPduSize = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 23, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamInterfaceMaxPduSize.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamInterfaceMaxPduSize.setDescription('Efm-oam max PDU size.')
prvtEfmOamInterfaceConfigRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 23, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamInterfaceConfigRevision.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamInterfaceConfigRevision.setDescription('Config revision.')
prvtEfmOamInterfaceFunctionsSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 23, 1, 6), Bits().clone(namedValues=NamedValues(("unidirectionalSupport", 0), ("loopbackSupport", 1), ("eventSupport", 2), ("variableSupport", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamInterfaceFunctionsSupported.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamInterfaceFunctionsSupported.setDescription('Supported functions.')
prvtEfmOamInterfacePacketSent = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 23, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamInterfacePacketSent.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamInterfacePacketSent.setDescription("Efm-oam PDU's sent.")
prvtEfmOamInterfacePacketReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 23, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamInterfacePacketReceived.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamInterfacePacketReceived.setDescription("Efm-oam PDU's received.")
prvtEfmOamInterfaceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 23, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("basic", 1), ("enhanced", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamInterfaceMode.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamInterfaceMode.setDescription('Efm-oam enhanced mode.')
prvtEfmOamInterfaceLoopbackStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 23, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noLoopback", 1), ("initiatingLoopback", 2), ("remoteLoopback", 3), ("terminatingLoopback", 4), ("localLoopback", 5), ("unknownLoopback", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamInterfaceLoopbackStatus.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamInterfaceLoopbackStatus.setDescription('Efm-oam interface loopback status')
prvtEfmOamInterfaceAcceptLoopbackCommands = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 23, 1, 11), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamInterfaceAcceptLoopbackCommands.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamInterfaceAcceptLoopbackCommands.setDescription('Efm-oam interface accept loopback commands')
prvtEfmOamInterfaceEventReturnShutdown = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 23, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamInterfaceEventReturnShutdown.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamInterfaceEventReturnShutdown.setDescription('The number of handshaking attempts before shutting down the port (value 0 disable it).')
prvtEfmOamEventForwardStatusTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 24), )
if mibBuilder.loadTexts: prvtEfmOamEventForwardStatusTable.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventForwardStatusTable.setDescription('Forward event status table.')
prvtEfmOamEventForwardStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 24, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "PRVT-EFM-OAM-MIB", "prvtEfmOamEventForwardStatusIdx"))
if mibBuilder.loadTexts: prvtEfmOamEventForwardStatusEntry.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventForwardStatusEntry.setDescription('Entry in EventForwardStatusTable')
prvtEfmOamEventForwardStatusIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 24, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: prvtEfmOamEventForwardStatusIdx.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventForwardStatusIdx.setDescription('Interface to which status will be forwarded')
prvtEfmOamEventForwardStatusRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 24, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtEfmOamEventForwardStatusRowStatus.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventForwardStatusRowStatus.setDescription('RowStatus of prvtEfmOamEventForwardStatusEntry ')
prvtEfmOamEventForwardShutdownTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 25), )
if mibBuilder.loadTexts: prvtEfmOamEventForwardShutdownTable.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventForwardShutdownTable.setDescription('Forward event status table.')
prvtEfmOamEventForwardShutdownEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 25, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "PRVT-EFM-OAM-MIB", "prvtEfmOamEventForwardShutdownIdx"))
if mibBuilder.loadTexts: prvtEfmOamEventForwardShutdownEntry.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventForwardShutdownEntry.setDescription('Entry in EventForwardShutdownTable')
prvtEfmOamEventForwardShutdownIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 25, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: prvtEfmOamEventForwardShutdownIdx.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventForwardShutdownIdx.setDescription('Interface to which status will be forwarded')
prvtEfmOamEventForwardShutdownRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 1, 25, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtEfmOamEventForwardShutdownRowStatus.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamEventForwardShutdownRowStatus.setDescription('RowStatus of prvtEfmOamEventForwardShutdownEntry ')
prvtEfmOamLoopBackState = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 0, 1)).setObjects(("PRVT-EFM-OAM-MIB", "prvtEfmOamInterfaceEnable"), ("PRVT-EFM-OAM-MIB", "prvtEfmOamInterfaceRole"), ("PRVT-EFM-OAM-MIB", "prvtEfmOamInterfaceLoopbackStatus"))
if mibBuilder.loadTexts: prvtEfmOamLoopBackState.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamLoopBackState.setDescription('This trap should be sent whenever the loopback\n         state has been change from remote, when\n         prvtEfmOamInterfaceRole is passive or\n         prvtEfmOamInterfaceEnable is false the\n         interface cannot be on remoteLoopback state\n         and should send this trap.')
prvtEfmOamDyingGasp = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 0, 2))
if mibBuilder.loadTexts: prvtEfmOamDyingGasp.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamDyingGasp.setDescription('The notification alarms for a failure due to\n         loss of local power - Dying Gasp')
prvtEfmOamThresholdEvent = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 0, 3)).setObjects(("PRVT-EFM-OAM-MIB", "prvtEfmOamEventLogTimeStamp"), ("PRVT-EFM-OAM-MIB", "prvtEfmOamEventLogOui"), ("PRVT-EFM-OAM-MIB", "prvtEfmOamEventLogType"), ("PRVT-EFM-OAM-MIB", "prvtEfmOamEventLogLocation"), ("PRVT-EFM-OAM-MIB", "prvtEfmOamEventLogWindow"), ("PRVT-EFM-OAM-MIB", "prvtEfmOamEventLogThreshold"), ("PRVT-EFM-OAM-MIB", "prvtEfmOamEventLogValue"), ("PRVT-EFM-OAM-MIB", "prvtEfmOamEventLogRunningTotal"), ("PRVT-EFM-OAM-MIB", "prvtEfmOamEventLogEventTotal"))
if mibBuilder.loadTexts: prvtEfmOamThresholdEvent.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamThresholdEvent.setDescription('A prvtEfmOamThresholdEvent notification is sent when a local or\n         remote threshold crossing event is detected. A local\n         threshold crossing event is detected by the local entity,\n         while a remote threshold crossing event is detected by the\n         reception of an Ethernet OAM Event Notification OAMPDU\n         that indicates a threshold event.\n         \n         The OAM entity can be derived from extracting the ifIndex from\n         the variable bindings. The objects in the notification\n         correspond to the values in a row instance in the\n         prvtEfmOamEventLogTable.\n         \n         The management entity should periodically check\n         prvtEfmOamEventLogTable to detect any missed events.')
prvtEfmOamNonThresholdEvent = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 133, 0, 4)).setObjects(("PRVT-EFM-OAM-MIB", "prvtEfmOamEventLogTimeStamp"), ("PRVT-EFM-OAM-MIB", "prvtEfmOamEventLogOui"), ("PRVT-EFM-OAM-MIB", "prvtEfmOamEventLogType"), ("PRVT-EFM-OAM-MIB", "prvtEfmOamEventLogLocation"), ("PRVT-EFM-OAM-MIB", "prvtEfmOamEventLogEventTotal"))
if mibBuilder.loadTexts: prvtEfmOamNonThresholdEvent.setStatus('current')
if mibBuilder.loadTexts: prvtEfmOamNonThresholdEvent.setDescription('A prvtEfmOamNonThresholdEvent notification is sent when a local\n         or remote non-threshold crossing event is detected. A local\n         event is detected by the local entity, while a remote event is\n         detected by the reception of an Ethernet OAM Event\n         Notification OAMPDU that indicates a non-threshold crossing\n         event.\n         \n         The OAM entity can be derived from extracting the ifIndex from\n         the variable bindings. The objects in the notification\n         correspond to the values in a row instance of the\n         prvtEfmOamEventLogTable.\n         \n         The management entity should periodically check\n         prvtEfmOamEventLogTable to detect any missed events.')
mibBuilder.exportSymbols("PRVT-EFM-OAM-MIB", prvtEfmOamInterfaceTable=prvtEfmOamInterfaceTable, prvtEfmOamLoopbackResultTable=prvtEfmOamLoopbackResultTable, prvtEfmOamEventConfigErrorSymbolPeriodEventNotificationEnable=prvtEfmOamEventConfigErrorSymbolPeriodEventNotificationEnable, prvtEfmOamEventForwardStatusEntry=prvtEfmOamEventForwardStatusEntry, prvtEfmOamLoopbackResultLocalOutNUcastPkts=prvtEfmOamLoopbackResultLocalOutNUcastPkts, prvtEfmOamNonThresholdEvent=prvtEfmOamNonThresholdEvent, prvtEfmOamHelloInterval=prvtEfmOamHelloInterval, prvtEfmOamStatisticsDuplicateEventNotificationTx=prvtEfmOamStatisticsDuplicateEventNotificationTx, prvtEfmOamPingResultStatus=prvtEfmOamPingResultStatus, prvtEfmOamLoopbackPacketSize=prvtEfmOamLoopbackPacketSize, prvtEfmOamInterfaceMaxPduSize=prvtEfmOamInterfaceMaxPduSize, prvtEfmOamStatisticsVariableResponseRx=prvtEfmOamStatisticsVariableResponseRx, prvtEfmOamLoopbackResultSentPackets=prvtEfmOamLoopbackResultSentPackets, prvtEfmOamEventForwardShutdownTable=prvtEfmOamEventForwardShutdownTable, prvtEfmOamLoopbackResultStatus=prvtEfmOamLoopbackResultStatus, prvtEfmOamInterfaceOperStatus=prvtEfmOamInterfaceOperStatus, prvtEfmOamLoopbackCount=prvtEfmOamLoopbackCount, prvtEfmOamPeerMacAddress=prvtEfmOamPeerMacAddress, prvtEfmOamLoopbackResultReceivedPackets=prvtEfmOamLoopbackResultReceivedPackets, prvtEfmOamEventForwardStatusRowStatus=prvtEfmOamEventForwardStatusRowStatus, prvtEfmOamDyingGasp=prvtEfmOamDyingGasp, prvtEfmOamLoopbackResultLocalInErrors=prvtEfmOamLoopbackResultLocalInErrors, prvtEfmOamEventLogEventTotal=prvtEfmOamEventLogEventTotal, prvtEfmOamEventLogId=prvtEfmOamEventLogId, prvtEfmOamPingResultEntry=prvtEfmOamPingResultEntry, prvtEfmOamLoopbackResultLocalOutUcastPkts=prvtEfmOamLoopbackResultLocalOutUcastPkts, prvtEfmOamEnable=prvtEfmOamEnable, prvtEfmOamInterfacePacketReceived=prvtEfmOamInterfacePacketReceived, prvtEfmOamEventConfigErrorSymbolPeriodThreshold=prvtEfmOamEventConfigErrorSymbolPeriodThreshold, prvtEfmOamNotifications=prvtEfmOamNotifications, prvtEfmOamLoopbackType=prvtEfmOamLoopbackType, prvtEfmOamStatisticsDuplicateEventNotificationRx=prvtEfmOamStatisticsDuplicateEventNotificationRx, prvtEfmOamEventLogType=prvtEfmOamEventLogType, prvtEfmOamMIB=prvtEfmOamMIB, prvtEfmOamStatisticsUniqueEventNotificationRx=prvtEfmOamStatisticsUniqueEventNotificationRx, prvtEfmOamLoopBackState=prvtEfmOamLoopBackState, prvtEfmOamEventForwardShutdownRowStatus=prvtEfmOamEventForwardShutdownRowStatus, prvtEfmOamEventConfigDyingGaspEnable=prvtEfmOamEventConfigDyingGaspEnable, prvtEfmOamPriorityEnable=prvtEfmOamPriorityEnable, prvtEfmOamLoopbackResultLocalInDiscards=prvtEfmOamLoopbackResultLocalInDiscards, prvtEfmOamMultiPduCount=prvtEfmOamMultiPduCount, prvtEfmOamPacketReceived=prvtEfmOamPacketReceived, prvtEfmOamHistoryCount=prvtEfmOamHistoryCount, prvtEfmOamLoopbackResultLocalOutOctets=prvtEfmOamLoopbackResultLocalOutOctets, prvtEfmOamInterfaceEventReturnShutdown=prvtEfmOamInterfaceEventReturnShutdown, prvtEfmOamInterfaceEnable=prvtEfmOamInterfaceEnable, prvtEfmOamPingResultSentPackets=prvtEfmOamPingResultSentPackets, prvtEfmOamInterfaceAcceptLoopbackCommands=prvtEfmOamInterfaceAcceptLoopbackCommands, prvtEfmOamLoopbackResultEntry=prvtEfmOamLoopbackResultEntry, prvtEfmOamInterfacePacketSent=prvtEfmOamInterfacePacketSent, prvtEfmOamPeerVendorOui=prvtEfmOamPeerVendorOui, prvtEfmOamEventLogWindow=prvtEfmOamEventLogWindow, prvtEfmOamEventForwardStatusIdx=prvtEfmOamEventForwardStatusIdx, prvtEfmOamPingTable=prvtEfmOamPingTable, prvtEfmOamPingTimeOut=prvtEfmOamPingTimeOut, prvtEfmOamLoopbackDelay=prvtEfmOamLoopbackDelay, prvtEfmOamPeerFunctionsSupported=prvtEfmOamPeerFunctionsSupported, prvtEfmOamEventConfigErrorFrameThreshold=prvtEfmOamEventConfigErrorFrameThreshold, prvtEfmOamPeerConfigRevision=prvtEfmOamPeerConfigRevision, prvtEfmOamStatisticsTable=prvtEfmOamStatisticsTable, prvtEfmOamEventForwardShutdownIdx=prvtEfmOamEventForwardShutdownIdx, prvtEfmOamThresholdEvent=prvtEfmOamThresholdEvent, prvtEfmOamPacketSent=prvtEfmOamPacketSent, prvtEfmOamPingResultTimeMin=prvtEfmOamPingResultTimeMin, prvtEfmOamLoopbackResultLocalInNUcastPkts=prvtEfmOamLoopbackResultLocalInNUcastPkts, prvtEfmOamStatisticsOrganizationSpecificTx=prvtEfmOamStatisticsOrganizationSpecificTx, prvtEfmOamStatisticsEntry=prvtEfmOamStatisticsEntry, prvtEfmOamPingResultReceiveRate=prvtEfmOamPingResultReceiveRate, prvtEfmOamPeerEntry=prvtEfmOamPeerEntry, prvtEfmOamLoopbackRowStatus=prvtEfmOamLoopbackRowStatus, prvtEfmOamEventLogLocation=prvtEfmOamEventLogLocation, prvtEfmOamPeerName=prvtEfmOamPeerName, prvtEfmOamStatisticsUnsupportedCodesRx=prvtEfmOamStatisticsUnsupportedCodesRx, prvtEfmOamStatisticsFramesLostDueToOam=prvtEfmOamStatisticsFramesLostDueToOam, prvtEfmOamPriority=prvtEfmOamPriority, prvtEfmOamPingResultTimeMax=prvtEfmOamPingResultTimeMax, prvtEfmOamRemoteEvent=prvtEfmOamRemoteEvent, prvtEfmOamHistoryClear=prvtEfmOamHistoryClear, prvtEfmOamEventLogValue=prvtEfmOamEventLogValue, prvtEfmOamInterfaceEntry=prvtEfmOamInterfaceEntry, prvtEfmOamLogEvents=prvtEfmOamLogEvents, prvtEfmOamPeerRole=prvtEfmOamPeerRole, prvtEfmOamPingEntry=prvtEfmOamPingEntry, prvtEfmOamStatisticsVariableRequestTx=prvtEfmOamStatisticsVariableRequestTx, prvtEfmOamEventForwardShutdownEntry=prvtEfmOamEventForwardShutdownEntry, prvtEfmOamStatisticsInformationTx=prvtEfmOamStatisticsInformationTx, prvtEfmOamEventConfigErrorFrameWindow=prvtEfmOamEventConfigErrorFrameWindow, prvtEfmOamPingRowStatus=prvtEfmOamPingRowStatus, prvtEfmOamEventLogOui=prvtEfmOamEventLogOui, prvtEfmOamStatisticsLoopbackControlRx=prvtEfmOamStatisticsLoopbackControlRx, prvtEfmOamEventLogTimeStamp=prvtEfmOamEventLogTimeStamp, prvtEfmOamLoopbackResultLocalInOctets=prvtEfmOamLoopbackResultLocalInOctets, prvtEfmOamPingResultClear=prvtEfmOamPingResultClear, prvtEfmOamEventConfigErrorFrameEventNotificationEnable=prvtEfmOamEventConfigErrorFrameEventNotificationEnable, prvtEfmOamLoopbackTimeout=prvtEfmOamLoopbackTimeout, prvtEfmOamEventLogTable=prvtEfmOamEventLogTable, prvtEfmOamLoopbackResultLocalOutDiscards=prvtEfmOamLoopbackResultLocalOutDiscards, prvtEfmOamEventLogEntry=prvtEfmOamEventLogEntry, prvtEfmOamStatisticsUniqueEventNotificationTx=prvtEfmOamStatisticsUniqueEventNotificationTx, prvtEfmOamObjects=prvtEfmOamObjects, prvtEfmOamEventLogThreshold=prvtEfmOamEventLogThreshold, prvtEfmOamStatisticsVariableRequestRx=prvtEfmOamStatisticsVariableRequestRx, prvtEfmOamPeerMode=prvtEfmOamPeerMode, prvtEfmOamHistoryLimit=prvtEfmOamHistoryLimit, prvtEfmOamLoopbackTable=prvtEfmOamLoopbackTable, prvtEfmOamStatisticsLoopbackControlTx=prvtEfmOamStatisticsLoopbackControlTx, prvtEfmOamLoopbackEntry=prvtEfmOamLoopbackEntry, prvtEfmOamPeerMaxOamPduSize=prvtEfmOamPeerMaxOamPduSize, prvtEfmOamInterfaceRole=prvtEfmOamInterfaceRole, PYSNMP_MODULE_ID=prvtEfmOamMIB, prvtEfmOamPeerVendorInfo=prvtEfmOamPeerVendorInfo, prvtEfmOamEventConfigEntry=prvtEfmOamEventConfigEntry, prvtEfmOamEventConfigErrorSymbolPeriodWindow=prvtEfmOamEventConfigErrorSymbolPeriodWindow, prvtEfmOamPingStatus=prvtEfmOamPingStatus, prvtEfmOamPingEchoNumber=prvtEfmOamPingEchoNumber, prvtEfmOamEventLogRunningTotal=prvtEfmOamEventLogRunningTotal, prvtEfmOamInterfaceFunctionsSupported=prvtEfmOamInterfaceFunctionsSupported, prvtEfmOamPingResultAverageTime=prvtEfmOamPingResultAverageTime, prvtEfmOamLoopbackResultsClear=prvtEfmOamLoopbackResultsClear, prvtEfmOamPeerTable=prvtEfmOamPeerTable, prvtEfmOamStatisticsOrganizationSpecificRx=prvtEfmOamStatisticsOrganizationSpecificRx, prvtEfmOamStatisticsUnsupportedCodesTx=prvtEfmOamStatisticsUnsupportedCodesTx, prvtEfmOamPeerPort=prvtEfmOamPeerPort, prvtEfmOamPingResultTable=prvtEfmOamPingResultTable, prvtEfmOamLoopbackStatus=prvtEfmOamLoopbackStatus, prvtEfmOamStatisticsInformationRx=prvtEfmOamStatisticsInformationRx, prvtEfmOamStatisticsVariableResponseTx=prvtEfmOamStatisticsVariableResponseTx, prvtEfmOamInterfaceLoopbackStatus=prvtEfmOamInterfaceLoopbackStatus, prvtEfmOamInterfaceMode=prvtEfmOamInterfaceMode, prvtEfmOamLoopbackResultLocalInUcastPkts=prvtEfmOamLoopbackResultLocalInUcastPkts, prvtEfmOamEventForwardStatusTable=prvtEfmOamEventForwardStatusTable, prvtEfmOamEventConfigTable=prvtEfmOamEventConfigTable, prvtEfmOamKeepAliveInterval=prvtEfmOamKeepAliveInterval, prvtEfmOamLocalMac=prvtEfmOamLocalMac, prvtEfmOamPingDelayTime=prvtEfmOamPingDelayTime, prvtEfmOamPingResultReceivedPackets=prvtEfmOamPingResultReceivedPackets, prvtEfmOamLoopbackResultRateBurst=prvtEfmOamLoopbackResultRateBurst, prvtEfmOamLoopbackResultLocalOutErrors=prvtEfmOamLoopbackResultLocalOutErrors, prvtEfmOamInterfaceConfigRevision=prvtEfmOamInterfaceConfigRevision)
