#
# PySNMP MIB module ALCATEL-IND1-GLOBALROUTETABLE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-GLOBALROUTETABLE-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 00:33:45 2022
# On host fv-az77-763 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
routingIND1GlobalRouteTable, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "routingIND1GlobalRouteTable")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
Ipv6Address, Ipv6IfIndex = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address", "Ipv6IfIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Bits, MibIdentifier, ModuleIdentity, Unsigned32, Counter64, NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, IpAddress, Integer32, Counter32, Gauge32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibIdentifier", "ModuleIdentity", "Unsigned32", "Counter64", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "IpAddress", "Integer32", "Counter32", "Gauge32", "TimeTicks")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
alcatelIND1GRTMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1))
alcatelIND1GRTMIB.setRevisions(('2014-02-07 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: alcatelIND1GRTMIB.setRevisionsDescriptions(('Add IPv6 Global Route Table',))
if mibBuilder.loadTexts: alcatelIND1GRTMIB.setLastUpdated('201402070000Z')
if mibBuilder.loadTexts: alcatelIND1GRTMIB.setOrganization('Alcatel-Lucent')
if mibBuilder.loadTexts: alcatelIND1GRTMIB.setContactInfo('Please consult with Customer Service to ensure the most appropriate\n         version of this document is used with the products in question:\n\n                    Alcatel-Lucent, Enterprise Solutions Division\n                   (Formerly Alcatel Internetworking, Incorporated)\n                           26801 West Agoura Road\n                        Agoura Hills, CA  91301-5122\n                          United States Of America\n\n        Telephone:               North America  +1 800 995 2696\n                                 Latin America  +1 877 919 9526\n                                 Europe         +31 23 556 0100\n                                 Asia           +65 394 7933\n                                 All Other      +1 818 878 4507\n\n        Electronic Mail:         support@ind.alcatel.com\n        World Wide Web:          http://alcatel-lucent.com/wps/portal/enterprise\n        File Transfer Protocol:  ftp://ftp.ind.alcatel.com/pub/products/mibs')
if mibBuilder.loadTexts: alcatelIND1GRTMIB.setDescription('This module describes an authoritative enterprise-specific Simple\n         Network Management Protocol (SNMP) Management Information Base (MIB):\n\n             This proprietary MIB contains management information for\n             the configuration of the Global Route Table parameters.\n\n         The right to make changes in specification and other information\n         contained in this document without prior notice is reserved.\n\n         No liability shall be assumed for any incidental, indirect, special, or\n         consequential damages whatsoever arising from or related to this\n         document or the information contained herein.\n\n         Vendors, end-users, and other interested parties are granted\n         non-exclusive license to use this specification in connection with\n         management of the products for which it is intended to be used.\n\n                     Copyright (C) 1995-2011 Alcatel-Lucent\n                         ALL RIGHTS RESERVED WORLDWIDE')
alcatelIND1GRTMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1))
alaGrtConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1))
class AlaGrtRouteDistinguisher(TextualConvention, OctetString):
    description = 'Syntax for a route distinguisher and route target\n         as defined in [RFC4346].'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 256)

alaGrtRouteTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 1), )
if mibBuilder.loadTexts: alaGrtRouteTable.setStatus('current')
if mibBuilder.loadTexts: alaGrtRouteTable.setDescription('The Global IPv4 Routing Table.')
alaGrtRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-GLOBALROUTETABLE-MIB", "alaGrtRouteDistinguisher"), (0, "ALCATEL-IND1-GLOBALROUTETABLE-MIB", "alaGrtRouteDest"), (0, "ALCATEL-IND1-GLOBALROUTETABLE-MIB", "alaGrtRouteMaskLen"), (0, "ALCATEL-IND1-GLOBALROUTETABLE-MIB", "alaGrtRouteNextHop"))
if mibBuilder.loadTexts: alaGrtRouteEntry.setStatus('current')
if mibBuilder.loadTexts: alaGrtRouteEntry.setDescription('A particular route in the Global Route Table')
alaGrtRouteDistinguisher = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 1, 1, 1), AlaGrtRouteDistinguisher())
if mibBuilder.loadTexts: alaGrtRouteDistinguisher.setStatus('current')
if mibBuilder.loadTexts: alaGrtRouteDistinguisher.setDescription('The route distinguisher of a global route.')
alaGrtRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: alaGrtRouteDest.setStatus('current')
if mibBuilder.loadTexts: alaGrtRouteDest.setDescription('The destination IP address of this route.')
alaGrtRouteMaskLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: alaGrtRouteMaskLen.setStatus('current')
if mibBuilder.loadTexts: alaGrtRouteMaskLen.setDescription('The destination mask length of this route')
alaGrtRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 1, 1, 4), IpAddress())
if mibBuilder.loadTexts: alaGrtRouteNextHop.setStatus('current')
if mibBuilder.loadTexts: alaGrtRouteNextHop.setDescription('The Gateway for this route')
alaGrtRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGrtRouteMetric.setStatus('current')
if mibBuilder.loadTexts: alaGrtRouteMetric.setDescription('The metric for this route')
alaGrtRouteTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGrtRouteTag.setStatus('current')
if mibBuilder.loadTexts: alaGrtRouteTag.setDescription('The tag for this route')
alaGrtRouteVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGrtRouteVrfName.setStatus('current')
if mibBuilder.loadTexts: alaGrtRouteVrfName.setDescription('The name of the VRF this route came from')
alaGrtRouteIsid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGrtRouteIsid.setStatus('current')
if mibBuilder.loadTexts: alaGrtRouteIsid.setDescription('The isid number this route came from')
alaGrt6RouteTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 2), )
if mibBuilder.loadTexts: alaGrt6RouteTable.setStatus('current')
if mibBuilder.loadTexts: alaGrt6RouteTable.setDescription('The IPv6 Global Routing Table.')
alaGrt6RouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-GLOBALROUTETABLE-MIB", "alaGrt6RouteDistinguisher"), (0, "ALCATEL-IND1-GLOBALROUTETABLE-MIB", "alaGrt6RouteDest"), (0, "ALCATEL-IND1-GLOBALROUTETABLE-MIB", "alaGrt6RouteMaskLen"), (0, "ALCATEL-IND1-GLOBALROUTETABLE-MIB", "alaGrt6RouteNextHop"), (0, "ALCATEL-IND1-GLOBALROUTETABLE-MIB", "alaGrt6RouteIfIndex"))
if mibBuilder.loadTexts: alaGrt6RouteEntry.setStatus('current')
if mibBuilder.loadTexts: alaGrt6RouteEntry.setDescription('A particular route in the IPv6 Global Route Table')
alaGrt6RouteDistinguisher = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 2, 1, 1), AlaGrtRouteDistinguisher())
if mibBuilder.loadTexts: alaGrt6RouteDistinguisher.setStatus('current')
if mibBuilder.loadTexts: alaGrt6RouteDistinguisher.setDescription('The route distinguisher of an IPv6 global route.')
alaGrt6RouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 2, 1, 2), Ipv6Address())
if mibBuilder.loadTexts: alaGrt6RouteDest.setStatus('current')
if mibBuilder.loadTexts: alaGrt6RouteDest.setDescription('The destination address of this route.')
alaGrt6RouteMaskLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 2, 1, 3), Unsigned32())
if mibBuilder.loadTexts: alaGrt6RouteMaskLen.setStatus('current')
if mibBuilder.loadTexts: alaGrt6RouteMaskLen.setDescription('The destination mask length of this route')
alaGrt6RouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 2, 1, 4), Ipv6Address())
if mibBuilder.loadTexts: alaGrt6RouteNextHop.setStatus('current')
if mibBuilder.loadTexts: alaGrt6RouteNextHop.setDescription('The gateway for this route')
alaGrt6RouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 2, 1, 5), Ipv6IfIndex())
if mibBuilder.loadTexts: alaGrt6RouteIfIndex.setStatus('current')
if mibBuilder.loadTexts: alaGrt6RouteIfIndex.setDescription('The index value which uniquely identifies the local\n        interface through which the next hop of this\n        route should be reached.')
alaGrt6RouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGrt6RouteMetric.setStatus('current')
if mibBuilder.loadTexts: alaGrt6RouteMetric.setDescription('The metric for this route')
alaGrt6RouteTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGrt6RouteTag.setStatus('current')
if mibBuilder.loadTexts: alaGrt6RouteTag.setDescription('The tag for this route')
alaGrt6RouteVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 1, 1, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaGrt6RouteVrfName.setStatus('current')
if mibBuilder.loadTexts: alaGrt6RouteVrfName.setDescription('The name of the VRF this route came from')
alcatelIND1GRTMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 2))
alcatelIND1GRTMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 2, 1))
alcatelIND1GRTMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 2, 2))
alaGrtCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-GLOBALROUTETABLE-MIB", "alaGrtConfigMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaGrtCompliance = alaGrtCompliance.setStatus('current')
if mibBuilder.loadTexts: alaGrtCompliance.setDescription('The compliance statement for routers using the \n            Global Route Manager and implementing the \n            ALCATEL-IND1-GlobalRouteTable MIB.')
alaGrtConfigMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 16, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-GLOBALROUTETABLE-MIB", "alaGrtRouteMetric"), ("ALCATEL-IND1-GLOBALROUTETABLE-MIB", "alaGrtRouteTag"), ("ALCATEL-IND1-GLOBALROUTETABLE-MIB", "alaGrtRouteVrfName"), ("ALCATEL-IND1-GLOBALROUTETABLE-MIB", "alaGrtRouteIsid"), ("ALCATEL-IND1-GLOBALROUTETABLE-MIB", "alaGrt6RouteMetric"), ("ALCATEL-IND1-GLOBALROUTETABLE-MIB", "alaGrt6RouteTag"), ("ALCATEL-IND1-GLOBALROUTETABLE-MIB", "alaGrt6RouteVrfName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaGrtConfigMIBGroup = alaGrtConfigMIBGroup.setStatus('current')
if mibBuilder.loadTexts: alaGrtConfigMIBGroup.setDescription('A collection of objects to support management of the Global\n            Route Table configuration parameters.')
mibBuilder.exportSymbols("ALCATEL-IND1-GLOBALROUTETABLE-MIB", alaGrtRouteNextHop=alaGrtRouteNextHop, alaGrt6RouteMetric=alaGrt6RouteMetric, alcatelIND1GRTMIBCompliances=alcatelIND1GRTMIBCompliances, PYSNMP_MODULE_ID=alcatelIND1GRTMIB, alaGrtRouteDistinguisher=alaGrtRouteDistinguisher, alaGrtRouteMaskLen=alaGrtRouteMaskLen, alaGrtRouteMetric=alaGrtRouteMetric, alaGrt6RouteDest=alaGrt6RouteDest, alaGrtRouteTable=alaGrtRouteTable, alaGrt6RouteVrfName=alaGrt6RouteVrfName, alaGrtConfigMIBGroup=alaGrtConfigMIBGroup, alcatelIND1GRTMIBGroups=alcatelIND1GRTMIBGroups, alcatelIND1GRTMIB=alcatelIND1GRTMIB, alaGrtRouteEntry=alaGrtRouteEntry, alcatelIND1GRTMIBObjects=alcatelIND1GRTMIBObjects, alaGrtRouteVrfName=alaGrtRouteVrfName, alaGrt6RouteTag=alaGrt6RouteTag, alaGrt6RouteTable=alaGrt6RouteTable, alaGrtCompliance=alaGrtCompliance, alaGrt6RouteMaskLen=alaGrt6RouteMaskLen, alaGrtRouteDest=alaGrtRouteDest, alaGrt6RouteEntry=alaGrt6RouteEntry, alaGrt6RouteNextHop=alaGrt6RouteNextHop, alaGrtConfig=alaGrtConfig, alaGrtRouteTag=alaGrtRouteTag, alcatelIND1GRTMIBConformance=alcatelIND1GRTMIBConformance, alaGrt6RouteDistinguisher=alaGrt6RouteDistinguisher, alaGrt6RouteIfIndex=alaGrt6RouteIfIndex, alaGrtRouteIsid=alaGrtRouteIsid, AlaGrtRouteDistinguisher=AlaGrtRouteDistinguisher)
