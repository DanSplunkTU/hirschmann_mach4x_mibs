#
# PySNMP MIB module T11-GS-SERVER-SESSION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/T11-GS-SERVER-SESSION-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 15:51:03 2022
# On host fv-az77-763 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
fcmInstanceIndex, fcmSwitchIndex = mibBuilder.importSymbols("FC-MGMT-MIB", "fcmInstanceIndex", "fcmSwitchIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter32, TimeTicks, MibIdentifier, mib_2, Bits, NotificationType, Gauge32, IpAddress, Unsigned32, Counter64, ObjectIdentity, iso, ModuleIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "TimeTicks", "MibIdentifier", "mib-2", "Bits", "NotificationType", "Gauge32", "IpAddress", "Unsigned32", "Counter64", "ObjectIdentity", "iso", "ModuleIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
T11FabricIndex, = mibBuilder.importSymbols("T11-TC-MIB", "T11FabricIndex")
t11GsServerSessionMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 1))
t11GsServerSessionMIB.setRevisions(('2005-10-13 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: t11GsServerSessionMIB.setRevisionsDescriptions(('Initial version of this MIB.',))
if mibBuilder.loadTexts: t11GsServerSessionMIB.setLastUpdated('200510130000Z')
if mibBuilder.loadTexts: t11GsServerSessionMIB.setOrganization('T11')
if mibBuilder.loadTexts: t11GsServerSessionMIB.setContactInfo('     Claudio DeSanti\n                   Cisco Systems, Inc.\n                   170 West Tasman Drive\n                   San Jose, CA 95134 USA\n                   EMail: cds@cisco.com\n\n                   Keith McCloghrie\n                   Cisco Systems, Inc.\n                   170 West Tasman Drive\n                   San Jose, CA 95134 USA\n                   Email: kzm@cisco.com')
if mibBuilder.loadTexts: t11GsServerSessionMIB.setDescription("The MIB module for the management of Fibre Channel\n             Server Sessions as defined generically in FC-GS-5\n             to represent a collection of one or more requests\n             for the session's server.  Such a session is\n             started by a Server Session Begin (SSB) request and\n             terminated by a Server Session End (SSE) request.\n             In particular, GS-5 Server Sessions are used by\n             Enhanced Zoning Management.")
t11GssMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 1, 1))
t11GssMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 1, 2))
t11GssMIBNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 1, 0))
t11GssConfiguration = MibIdentifier((1, 3, 6, 1, 2, 1, 1, 1, 1))
t11GssSessionTable = MibTable((1, 3, 6, 1, 2, 1, 1, 1, 1, 1), )
if mibBuilder.loadTexts: t11GssSessionTable.setReference('ANSI INCITS xxx/200x, T11/Project 1677-D/Rev 8.2,\n              Fibre Channel - Generic Services-5 (FC-GS-5),\n              4 October 2005, sections 4.9.5 and 6.4.10.2.')
if mibBuilder.loadTexts: t11GssSessionTable.setStatus('current')
if mibBuilder.loadTexts: t11GssSessionTable.setDescription('A table containing information about the active\n             GS-5 Server sessions on one or more switches on\n             all fabrics known to those switches.')
t11GssSessionEntry = MibTableRow((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-GS-SERVER-SESSION-MIB", "t11GssSessionFabricIndex"))
if mibBuilder.loadTexts: t11GssSessionEntry.setReference('ANSI INCITS xxx/200x, T11/Project 1677-D/Rev 8.2,\n              Fibre Channel - Generic Services-5 (FC-GS-5),\n              4 October 2005, sections 4.9.5.5.')
if mibBuilder.loadTexts: t11GssSessionEntry.setStatus('current')
if mibBuilder.loadTexts: t11GssSessionEntry.setDescription("Each entry contains information specific to a\n             GS-5 Server session for a particular fabric on\n             a particular switch (identified by values of\n             fcmInstanceIndex and fcmSwitchIndex).  Note that\n             each switch can have at most one Server session\n             per fabric.\n\n             Several different types of Servers are defined in\n             FC-GS-5.  The behavior of a Server with respect to\n             commands received within a Server session is specified for\n             each type of Server.  For some types, parameter changes\n             can only be made within the context of a session.  That\n             is, some types of changes can only made while a session is\n             established.  So, in order to make such changes via an\n             SNMP SetRequest, some types of Servers require that a\n             corresponding entry in this table exist, and in such\n             cases, the required entry in this table is created\n             implicitly (by the agent on receipt of the SetRequest)\n             as and when necessary, with t11GssSessionOwnerType\n             having a value of 'snmp'.")
t11GssSessionFabricIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1, 1), T11FabricIndex())
if mibBuilder.loadTexts: t11GssSessionFabricIndex.setStatus('current')
if mibBuilder.loadTexts: t11GssSessionFabricIndex.setDescription('A unique index value which uniquely identifies a\n           particular fabric.\n\n           In a fabric conformant to FC-SW-4, multiple Virtual Fabrics\n           can operate within one (or more) physical infrastructures,\n           and this index value is used to uniquely identify a\n           particular (physical or virtual) fabric within a physical\n           infrastructure.\n\n           In a fabric conformant to versions earlier than FC-SW-4,\n           only a single fabric could operate within a physical\n           infrastructure, and thus, the value of this fabric index\n           was defined to always be 1.')
t11GssSessionOwnerType = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("gsClient", 2), ("cli", 3), ("snmp", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11GssSessionOwnerType.setStatus('current')
if mibBuilder.loadTexts: t11GssSessionOwnerType.setDescription('This object specifies the owner type for this\n             session:\n\n               other     - none of the following.\n               gsClient  - a Fibre Channel Generic Services\n                           (e.g., GS-5) client.\n               cli       - Command Line Interface (CLI).\n               snmp      - this session was established due to\n                           an SNMP SetRequest.\n            ')
t11GssSessionOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11GssSessionOwner.setReference('ANSI INCITS xxx/200x, T11/Project 1677-D/Rev 8.2,\n             Fibre Channel - Generic Services-5 (FC-GS-5),\n             4 October 2005, section 4.9.5.2.\n\n             RFC 3513, Internet Protocol Version 6 (IPv6)\n             Addressing Architecture, April 2003.')
if mibBuilder.loadTexts: t11GssSessionOwner.setStatus('current')
if mibBuilder.loadTexts: t11GssSessionOwner.setDescription("This object specifies the owner for this session.\n\n             If the value of the corresponding instance\n             of t11GssSessionOwnerType is 'gs5Client', this\n             object will contain the FC_ID of the GS-5 client\n             which issued the Server Session Begin (SSB)\n             which initiated this session.\n\n             If the value of the corresponding instance\n             of t11GssSessionOwnerType object is 'cli', this\n             object will contain the user name of the CLI\n             (Command Line Interface) user on whose behalf\n             the session was setup.\n\n             If the value of the corresponding instance\n             of t11GssSessionOwnerType is 'snmp', this object\n             will contain the source IP address of the SNMP\n             SetRequests which initiated the setup of this\n             session, in the form: for IPv4, n.n.n.n, or,\n             for IPv6, in any of the three conventional forms\n             listed in section 2.2 of RFC 3513.")
t11GssSessionControl = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("commitZoneChanges", 1), ("terminateSession", 2), ("noop", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11GssSessionControl.setReference('ANSI INCITS xxx/200x, T11/Project 1677-D/Rev 8.2,\n              Fibre Channel - Generic Services-5 (FC-GS-5),\n              4 October 2005, section 6.4.10.2.')
if mibBuilder.loadTexts: t11GssSessionControl.setStatus('current')
if mibBuilder.loadTexts: t11GssSessionControl.setDescription("This object can not be modified unless the corresponding\n             instance of t11GssSessionOwnerType has the value 'snmp',\n             and even then, only by the SNMP entity identified by the\n             value of t11GssSessionOwner.  A particular Server may\n             impose additional constraints, e.g., a Zone Server will\n             reject a commit when it is operating in Basic mode.\n\n             Setting the object requests an action:\n\n              commitZoneChanges - requests that the changes made\n                                  within this session to the Zone\n                                  Set Database be committed.\n              terminateSession  - requests that the session be\n                                  terminated, with any outstanding\n                                  changes made within this session\n                                  being discarded.\n              noop              - requests nothing.\n\n             When read, the value is always 'noop'.")
t11GssSessionCommitResult = MibTableColumn((1, 3, 6, 1, 2, 1, 1, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("commitSuccessful", 1), ("commitInProgress", 2), ("commitFailed", 3), ("none", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11GssSessionCommitResult.setReference('ANSI INCITS xxx/200x, T11/Project 1677-D/Rev 8.2,\n              Fibre Channel - Generic Services-5 (FC-GS-5),\n              4 October 2005, section 6.4.10.2.3.')
if mibBuilder.loadTexts: t11GssSessionCommitResult.setStatus('current')
if mibBuilder.loadTexts: t11GssSessionCommitResult.setDescription("This object indicates the current state/outcome of the\n             most recent 'commitChanges' request which was invoked via\n             the corresponding instance of t11GssSessionControl:\n\n              'commitSuccessful' -- commit successful,\n              'commitInProgress' -- commit still in progress,\n              'commitFailed'     -- commit failed,\n              'none'             -- no request has been invoked\n                                    via the corresponding instance\n                                    of t11GssSessionControl.")
t11GssMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 1, 2, 1))
t11GssMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 1, 2, 2))
t11GssMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 1, 2, 1, 1)).setObjects(("T11-GS-SERVER-SESSION-MIB", "t11GssActiveGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11GssMIBCompliance = t11GssMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: t11GssMIBCompliance.setDescription('The compliance statement for entities which support\n             GS-5 Server sessions.')
t11GssActiveGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 1, 2, 2, 1)).setObjects(("T11-GS-SERVER-SESSION-MIB", "t11GssSessionOwnerType"), ("T11-GS-SERVER-SESSION-MIB", "t11GssSessionOwner"), ("T11-GS-SERVER-SESSION-MIB", "t11GssSessionControl"), ("T11-GS-SERVER-SESSION-MIB", "t11GssSessionCommitResult"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11GssActiveGroup = t11GssActiveGroup.setStatus('current')
if mibBuilder.loadTexts: t11GssActiveGroup.setDescription('A collection of objects containing information\n             about active GS-5 Server sessions.')
mibBuilder.exportSymbols("T11-GS-SERVER-SESSION-MIB", t11GssSessionEntry=t11GssSessionEntry, t11GssSessionOwnerType=t11GssSessionOwnerType, PYSNMP_MODULE_ID=t11GsServerSessionMIB, t11GssMIBNotifications=t11GssMIBNotifications, t11GssSessionTable=t11GssSessionTable, t11GssSessionFabricIndex=t11GssSessionFabricIndex, t11GssMIBCompliance=t11GssMIBCompliance, t11GssSessionOwner=t11GssSessionOwner, t11GssSessionControl=t11GssSessionControl, t11GssMIBGroups=t11GssMIBGroups, t11GssConfiguration=t11GssConfiguration, t11GssActiveGroup=t11GssActiveGroup, t11GssSessionCommitResult=t11GssSessionCommitResult, t11GssMIBObjects=t11GssMIBObjects, t11GsServerSessionMIB=t11GsServerSessionMIB, t11GssMIBConformance=t11GssMIBConformance, t11GssMIBCompliances=t11GssMIBCompliances)
