#
# PySNMP MIB module ALCATEL-IND1-TIMETRA-GLOBAL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-TIMETRA-GLOBAL-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 15:33:31 2022
# On host fv-az42-180 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, MibIdentifier, Unsigned32, iso, Counter32, Bits, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, enterprises, Counter64, Integer32, ModuleIdentity, TimeTicks, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "Unsigned32", "iso", "Counter32", "Bits", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "enterprises", "Counter64", "Integer32", "ModuleIdentity", "TimeTicks", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
timetraGlobalMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 1, 1))
timetraGlobalMIBModule.setRevisions(('1908-01-01 00:00', '1907-01-01 00:00', '1905-08-31 00:00', '1905-01-24 00:00', '1904-01-15 00:00', '1903-01-20 00:00', '1900-08-14 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: timetraGlobalMIBModule.setRevisionsDescriptions(('Rev 6.0                01 Jan 2008 00:00\n                         6.0 release of the TIMETRA-GLOBAL-MIB.', 'Rev 5.0                01 Jan 2007 00:00\n                         5.0 release of the TIMETRA-GLOBAL-MIB.', 'Rev 3.0                31 Aug 2005 00:00\n                         3.0 release of the TIMETRA-GLOBAL-MIB.', 'Rev 2.1                24 Jan 2005 00:00\n                         2.1 release of the TIMETRA-GLOBAL-MIB.', 'Rev 2.0                15 Jan 2004 00:00\n                         2.0 release of the TIMETRA-GLOBAL-MIB.', 'Rev 1.0                20 Jan 2003 00:00\n                This is the 1.0 release of the TIMETRA-GLOBAL-MIB.', 'Rev 0.1                14 Aug 2000 00:00\n                This is the initial version of the TIMETRA-GLOBAL-MIB.',))
if mibBuilder.loadTexts: timetraGlobalMIBModule.setLastUpdated('0801010000Z')
if mibBuilder.loadTexts: timetraGlobalMIBModule.setOrganization('Alcatel')
if mibBuilder.loadTexts: timetraGlobalMIBModule.setContactInfo('Alcatel 7x50 Support\n         Web: http://www.alcatel.com/comps/pages/carrier_support.jhtml')
if mibBuilder.loadTexts: timetraGlobalMIBModule.setDescription("This  document  is the SNMP MIB module for central registration\n        of object identifiers defined under the Alcatel 'timetra' branch\n        for the Alcatel 7x50 SR series SNMP MIBs.\n\n        Copyright  2003-2008  Alcatel-Lucent. All rights reserved.\n        Reproduction of  this document is  authorized  on  the condition\n        that the foregoing copyright notice is included.\n\n        This   SNMP   MIB   module  (Specification)  embodies  Alcatel's\n        proprietary intellectual property. Alcatel retains all title and\n        ownership in the Specification, including any revisions.\n\n        Alcatel grants all interested parties a non-exclusive license to\n        use  and  distribute an unmodified copy of this Specification in\n        connection with management of Alcatel products, and without fee,\n        provided this copyright notice and license appear on all copies.\n\n        This  Specification  is  supplied  `as is', and Alcatel makes no\n        warranty,  either  express or implied, as to the use, operation,\n        condition, or performance of the Specification.")
timetra = MibIdentifier((1, 3, 6, 1, 4, 1, 6527))
timetraReg = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 1))
timetraModules = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 1, 1))
timetraSRMIBModules = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 1, 1, 3))
timetraCapabilityModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 1, 1, 4))
timetra7750CapModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 1, 1, 4, 1))
timetra7450CapModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 1, 1, 4, 2))
timetra7710CapModule = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 1, 1, 4, 3))
alcatelCommonMIBModules = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 1, 1, 5))
timetraServiceRouters = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 1, 3))
tmnxModelSR1Reg = ObjectIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 3, 1))
if mibBuilder.loadTexts: tmnxModelSR1Reg.setStatus('current')
if mibBuilder.loadTexts: tmnxModelSR1Reg.setDescription('This objectID is to be used as the mib-2 sysObjectID to\n                identify the Alcatel 7750 SR-1 device.')
tmnxModelSR4Reg = ObjectIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 3, 2))
if mibBuilder.loadTexts: tmnxModelSR4Reg.setStatus('current')
if mibBuilder.loadTexts: tmnxModelSR4Reg.setDescription('This objectID is to be used as the mib-2 sysObjectID to\n                 identify the Alcatel 7750 SR-4 device.')
tmnxModelSR12Reg = ObjectIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 3, 3))
if mibBuilder.loadTexts: tmnxModelSR12Reg.setStatus('current')
if mibBuilder.loadTexts: tmnxModelSR12Reg.setDescription('This objectID is to be used as the mib-2 sysObjectID to\n                 identify the Alcatel 7750 SR-12 device.')
tmnxModelSR7Reg = ObjectIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 3, 4))
if mibBuilder.loadTexts: tmnxModelSR7Reg.setStatus('current')
if mibBuilder.loadTexts: tmnxModelSR7Reg.setDescription('This objectID is to be used as the mib-2 sysObjectID to\n                 identify the Alcatel 7750 SR-7 device.')
tmnxModelSR6Reg = ObjectIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 3, 5))
if mibBuilder.loadTexts: tmnxModelSR6Reg.setStatus('current')
if mibBuilder.loadTexts: tmnxModelSR6Reg.setDescription('This objectID is to be used as the mib-2 sysObjectID to\n                 identify the Alcatel 7750 SR-6 device.')
timetraServiceSwitches = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 1, 6))
tmnxModelESS1Reg = ObjectIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 6, 1))
if mibBuilder.loadTexts: tmnxModelESS1Reg.setStatus('current')
if mibBuilder.loadTexts: tmnxModelESS1Reg.setDescription('This objectID is to be used as the mib-2 sysObjectID to\n                 identify the Alcatel 7450 ESS-1 device.')
tmnxModelESS4Reg = ObjectIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 6, 2))
if mibBuilder.loadTexts: tmnxModelESS4Reg.setStatus('current')
if mibBuilder.loadTexts: tmnxModelESS4Reg.setDescription('This objectID is to be used as the mib-2 sysObjectID to\n                 identify the Alcatel 7450 ESS-4 device.')
tmnxModelESS7Reg = ObjectIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 6, 3))
if mibBuilder.loadTexts: tmnxModelESS7Reg.setStatus('current')
if mibBuilder.loadTexts: tmnxModelESS7Reg.setDescription('This objectID is to be used as the mib-2 sysObjectID to\n                 identify the Alcatel 7450 ESS-7 device.')
tmnxModelESS12Reg = ObjectIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 6, 4))
if mibBuilder.loadTexts: tmnxModelESS12Reg.setStatus('current')
if mibBuilder.loadTexts: tmnxModelESS12Reg.setDescription('This objectID is to be used as the mib-2 sysObjectID to\n                 identify the Alcatel 7450 ESS-12 device.')
tmnxModelESS6Reg = ObjectIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 6, 5))
if mibBuilder.loadTexts: tmnxModelESS6Reg.setStatus('current')
if mibBuilder.loadTexts: tmnxModelESS6Reg.setDescription('This objectID is to be used as the mib-2 sysObjectID to\n                 identify the Alcatel 7450 ESS-6 device.')
tmnxModelESS6vReg = ObjectIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 6, 6))
if mibBuilder.loadTexts: tmnxModelESS6vReg.setStatus('current')
if mibBuilder.loadTexts: tmnxModelESS6vReg.setDescription('This objectID is to be used as the mib-2 sysObjectID to\n                 identify the Alcatel 7450 ESS-6V device.')
alcatel7710ServiceRouters = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 1, 9))
tmnxModel7710SRc12Reg = ObjectIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 9, 1))
if mibBuilder.loadTexts: tmnxModel7710SRc12Reg.setStatus('current')
if mibBuilder.loadTexts: tmnxModel7710SRc12Reg.setDescription('This objectID is to be used as the mib-2 sysObjectID to\n                 identify the Alcatel 7710 SR-c12 (12 Compact MDA slots)\n                 device.')
tmnxModel7710SRc4Reg = ObjectIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 9, 2))
if mibBuilder.loadTexts: tmnxModel7710SRc4Reg.setStatus('current')
if mibBuilder.loadTexts: tmnxModel7710SRc4Reg.setDescription('This objectID is to be used as the mib-2 sysObjectID to\n                 identify the Alcatel 7710 SR-c4 (4 Compact MDA slots)\n                 device.')
timetraGeneric = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 2))
timetraProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3))
tmnxSRMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1))
tmnxSRConfs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1))
tmnxSRObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2))
tmnxSRNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3))
tmnxESSMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 2))
tmnxESSConfs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 2, 1))
tmnxESSObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 2, 2))
tmnxESSNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 2, 3))
alcatelCommonMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 3))
alcatelConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 3, 1))
alcatelObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 3, 2))
alcatelNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 3, 3))
tmnxAgentCapability = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 4))
tmnx7750AgentCapability = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 4, 1))
tmnx7450AgentCapability = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 4, 2))
tmnx7710AgentCapability = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 4, 3))
tmnxProductCapability = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 5))
tmnx7750Capability = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 5, 1))
tmnx7750V3v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 5, 1, 1))
tmnx7750V4v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 5, 1, 2))
tmnx7750V5v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 5, 1, 3))
tmnx7750V6v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 5, 1, 4))
tmnx7450Capability = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 5, 2))
tmnx7450V3v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 5, 2, 1))
tmnx7450V4v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 5, 2, 2))
tmnx7450V5v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 5, 2, 3))
tmnx7450V6v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 5, 2, 4))
tmnx7710Capability = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 5, 3))
tmnx7710V3v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 5, 3, 1))
tmnx7710V4v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 5, 3, 2))
tmnx7710V5v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 5, 3, 3))
tmnx7710V6v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 5, 3, 4))
mibBuilder.exportSymbols("ALCATEL-IND1-TIMETRA-GLOBAL-MIB", tmnx7750V5v0=tmnx7750V5v0, timetra7450CapModule=timetra7450CapModule, tmnxSRNotifyPrefix=tmnxSRNotifyPrefix, alcatelConformance=alcatelConformance, tmnxModelSR7Reg=tmnxModelSR7Reg, tmnxModelESS6Reg=tmnxModelESS6Reg, tmnx7450V5v0=tmnx7450V5v0, timetraGeneric=timetraGeneric, timetra7710CapModule=timetra7710CapModule, tmnx7710Capability=tmnx7710Capability, tmnx7750V3v0=tmnx7750V3v0, tmnx7710V6v0=tmnx7710V6v0, tmnxModelESS1Reg=tmnxModelESS1Reg, tmnx7750AgentCapability=tmnx7750AgentCapability, tmnxModelESS4Reg=tmnxModelESS4Reg, timetraServiceRouters=timetraServiceRouters, timetraGlobalMIBModule=timetraGlobalMIBModule, tmnxModelSR1Reg=tmnxModelSR1Reg, tmnxSRObjs=tmnxSRObjs, timetraReg=timetraReg, tmnxModelSR12Reg=tmnxModelSR12Reg, timetraCapabilityModule=timetraCapabilityModule, alcatel7710ServiceRouters=alcatel7710ServiceRouters, tmnxModel7710SRc12Reg=tmnxModel7710SRc12Reg, tmnxESSObjs=tmnxESSObjs, tmnx7750V4v0=tmnx7750V4v0, tmnx7710V4v0=tmnx7710V4v0, timetraModules=timetraModules, tmnxSRConfs=tmnxSRConfs, tmnxAgentCapability=tmnxAgentCapability, tmnxModelSR6Reg=tmnxModelSR6Reg, PYSNMP_MODULE_ID=timetraGlobalMIBModule, timetraServiceSwitches=timetraServiceSwitches, tmnx7710AgentCapability=tmnx7710AgentCapability, tmnxModel7710SRc4Reg=tmnxModel7710SRc4Reg, alcatelCommonMIB=alcatelCommonMIB, tmnx7450AgentCapability=tmnx7450AgentCapability, tmnx7450Capability=tmnx7450Capability, alcatelObjects=alcatelObjects, timetra=timetra, timetraProducts=timetraProducts, tmnxSRMIB=tmnxSRMIB, timetraSRMIBModules=timetraSRMIBModules, tmnxESSMIB=tmnxESSMIB, tmnx7750Capability=tmnx7750Capability, timetra7750CapModule=timetra7750CapModule, tmnxESSNotifyPrefix=tmnxESSNotifyPrefix, tmnxModelSR4Reg=tmnxModelSR4Reg, alcatelCommonMIBModules=alcatelCommonMIBModules, tmnxModelESS12Reg=tmnxModelESS12Reg, tmnxProductCapability=tmnxProductCapability, tmnx7710V5v0=tmnx7710V5v0, tmnx7750V6v0=tmnx7750V6v0, tmnxModelESS7Reg=tmnxModelESS7Reg, tmnxModelESS6vReg=tmnxModelESS6vReg, tmnxESSConfs=tmnxESSConfs, tmnx7710V3v0=tmnx7710V3v0, tmnx7450V4v0=tmnx7450V4v0, alcatelNotifyPrefix=alcatelNotifyPrefix, tmnx7450V6v0=tmnx7450V6v0, tmnx7450V3v0=tmnx7450V3v0)
