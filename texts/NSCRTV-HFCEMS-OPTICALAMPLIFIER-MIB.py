#
# PySNMP MIB module NSCRTV-HFCEMS-OPTICALAMPLIFIER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/glassway/NSCRTV-HFCEMS-OPTICALAMPLIFIER-MIB
# Produced by pysmi-1.1.3 at Mon Nov 22 11:36:26 2021
# On host fv-az33-360 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
oaIdent, = mibBuilder.importSymbols("NSCRTV-ROOT", "oaIdent")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, NotificationType, Gauge32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ModuleIdentity, ObjectIdentity, Integer32, MibIdentifier, IpAddress, TimeTicks, iso, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "NotificationType", "Gauge32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ModuleIdentity", "ObjectIdentity", "Integer32", "MibIdentifier", "IpAddress", "TimeTicks", "iso", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
oaVendorOID = MibScalar((1, 3, 6, 1, 4, 1, 17409, 1, 11, 1), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaVendorOID.setStatus('optional')
if mibBuilder.loadTexts: oaVendorOID.setDescription('˶ṩ̶ԹŴMIB䡣ʱ˶ӦָŴڵoaIdent')
oaOutputOpticalPower = MibScalar((1, 3, 6, 1, 4, 1, 17409, 1, 11, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaOutputOpticalPower.setStatus('mandatory')
if mibBuilder.loadTexts: oaOutputOpticalPower.setDescription('\u2e66,λΪ0.1dBm,˶ҪMIBеǼһĿ')
oaInputOpticalPower = MibScalar((1, 3, 6, 1, 4, 1, 17409, 1, 11, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaInputOpticalPower.setStatus('mandatory')
if mibBuilder.loadTexts: oaInputOpticalPower.setDescription('\u2e66,λΪ0.1dBm,˶ҪMIBеǼһĿ')
oaPumpTable = MibTable((1, 3, 6, 1, 4, 1, 17409, 1, 11, 4), )
if mibBuilder.loadTexts: oaPumpTable.setStatus('mandatory')
if mibBuilder.loadTexts: oaPumpTable.setDescription('Ϣ')
oaPumpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17409, 1, 11, 4, 1), ).setIndexNames((0, "NSCRTV-HFCEMS-OPTICALAMPLIFIER-MIB", "oaPumpIndex"))
if mibBuilder.loadTexts: oaPumpEntry.setStatus('mandatory')
if mibBuilder.loadTexts: oaPumpEntry.setDescription('ÿŴֵϢĿ')
oaPumpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 11, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaPumpIndex.setStatus('mandatory')
if mibBuilder.loadTexts: oaPumpIndex.setDescription('Ŵֵ')
oaPumpBIAS = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 11, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaPumpBIAS.setStatus('mandatory')
if mibBuilder.loadTexts: oaPumpBIAS.setDescription('ƫõ,λΪmA,˶ҪMIBеǼһĿ')
oaPumpTEC = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 11, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaPumpTEC.setStatus('optional')
if mibBuilder.loadTexts: oaPumpTEC.setDescription(',λΪ0.01A,˶ҪMIBеǼһĿ')
oaPumpTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 11, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32768))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaPumpTemp.setStatus('mandatory')
if mibBuilder.loadTexts: oaPumpTemp.setDescription('¶,λΪ0.1϶,˶ҪMIBеǼһĿ')
oaNumberDCPowerSupply = MibScalar((1, 3, 6, 1, 4, 1, 17409, 1, 11, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaNumberDCPowerSupply.setStatus('mandatory')
if mibBuilder.loadTexts: oaNumberDCPowerSupply.setDescription("ڲֱԴĿ'0'ʾӦִ֧˹ܡ")
oaDCPowerSupplyMode = MibScalar((1, 3, 6, 1, 4, 1, 17409, 1, 11, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("loadsharing", 1), ("switchedRedundant", 2), ("aloneSupply", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDCPowerSupplyMode.setStatus('optional')
if mibBuilder.loadTexts: oaDCPowerSupplyMode.setDescription('Դģʽطֵл硣')
oaDCPowerTable = MibTable((1, 3, 6, 1, 4, 1, 17409, 1, 11, 7), )
if mibBuilder.loadTexts: oaDCPowerTable.setStatus('mandatory')
if mibBuilder.loadTexts: oaDCPowerTable.setDescription('ֱԴϢ')
oaDCPowerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17409, 1, 11, 7, 1), ).setIndexNames((0, "NSCRTV-HFCEMS-OPTICALAMPLIFIER-MIB", "oaDCPowerIndex"))
if mibBuilder.loadTexts: oaDCPowerEntry.setStatus('mandatory')
if mibBuilder.loadTexts: oaDCPowerEntry.setDescription('ֱԴϢĿ')
oaDCPowerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 11, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDCPowerIndex.setStatus('mandatory')
if mibBuilder.loadTexts: oaDCPowerIndex.setDescription('ֱԴ')
oaDCPowerVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 11, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-32768, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDCPowerVoltage.setStatus('mandatory')
if mibBuilder.loadTexts: oaDCPowerVoltage.setDescription('ԴѹλΪ0.1V˶ҪMIBеǼһĿ')
oaDCPowerCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 11, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDCPowerCurrent.setStatus('mandatory')
if mibBuilder.loadTexts: oaDCPowerCurrent.setDescription('ԴĵλΪ0.1A˶ҪMIBеǼһĿ')
oaDCPowerName = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 11, 7, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oaDCPowerName.setStatus('mandatory')
if mibBuilder.loadTexts: oaDCPowerName.setDescription('õԴƣ磺24VֱԴ\n            ֵֶû涨ӦѹԴ\u0ee5ֿ\n            ˱еĶ澯ʱ˶ӦŽhfcAlarmEventalarmText\uf863')
mibBuilder.exportSymbols("NSCRTV-HFCEMS-OPTICALAMPLIFIER-MIB", oaDCPowerTable=oaDCPowerTable, oaVendorOID=oaVendorOID, oaDCPowerSupplyMode=oaDCPowerSupplyMode, oaDCPowerVoltage=oaDCPowerVoltage, oaOutputOpticalPower=oaOutputOpticalPower, oaPumpTable=oaPumpTable, oaDCPowerCurrent=oaDCPowerCurrent, oaPumpIndex=oaPumpIndex, oaDCPowerEntry=oaDCPowerEntry, oaDCPowerIndex=oaDCPowerIndex, oaPumpEntry=oaPumpEntry, oaPumpTEC=oaPumpTEC, oaNumberDCPowerSupply=oaNumberDCPowerSupply, oaInputOpticalPower=oaInputOpticalPower, oaPumpBIAS=oaPumpBIAS, oaPumpTemp=oaPumpTemp, oaDCPowerName=oaDCPowerName)
