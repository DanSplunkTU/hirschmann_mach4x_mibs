#
# PySNMP MIB module PRVT-RESILIENT-LINK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binos/PRVT-RESILIENT-LINK-MIB
# Produced by pysmi-1.1.8 at Tue Jan 11 20:54:44 2022
# On host fv-az42-180 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
switch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "switch")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, Counter32, TimeTicks, Bits, ObjectIdentity, Integer32, Unsigned32, iso, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, IpAddress, MibIdentifier, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Counter32", "TimeTicks", "Bits", "ObjectIdentity", "Integer32", "Unsigned32", "iso", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "IpAddress", "MibIdentifier", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
prvtResilientLinkMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 1, 5, 102))
prvtResilientLinkMib.setRevisions(('2005-02-16 00:00', '2003-05-06 00:00', '2002-01-28 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: prvtResilientLinkMib.setRevisionsDescriptions(('Fixed spelling errors and changed the contact info.', 'Move to SMI-V2.', 'Initial version.',))
if mibBuilder.loadTexts: prvtResilientLinkMib.setLastUpdated('200502160000Z')
if mibBuilder.loadTexts: prvtResilientLinkMib.setOrganization('BATM Advanced Communication')
if mibBuilder.loadTexts: prvtResilientLinkMib.setContactInfo('BATM/Telco Systems Support team\n\t\t\t\tEmail: \n\t\t\t\tFor North America: techsupport@telco.com\n\t\t\t\tFor North Europe: support@batm.de, info@batm.de\n\t\t\t\tFor the rest of the world: techsupport@telco.com')
if mibBuilder.loadTexts: prvtResilientLinkMib.setDescription('The Resilient Link MIB module for managing switch or ipSwitch \n         resilient link')
prvtResilientLinkNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 102, 0))
resilientLinkConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 102, 1))
resilientLinkStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 102, 2))
prvtResilientLinkConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 102, 3))
resilientLinkConfigTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 102, 1, 1), )
if mibBuilder.loadTexts: resilientLinkConfigTable.setStatus('current')
if mibBuilder.loadTexts: resilientLinkConfigTable.setDescription('This table contains the resilient link configuration.')
resilientLinkConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 102, 1, 1, 1), ).setIndexNames((0, "PRVT-RESILIENT-LINK-MIB", "resilientLinkIndex"))
if mibBuilder.loadTexts: resilientLinkConfigEntry.setStatus('current')
if mibBuilder.loadTexts: resilientLinkConfigEntry.setDescription('resilientLinkIndex')
resilientLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 102, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: resilientLinkIndex.setStatus('current')
if mibBuilder.loadTexts: resilientLinkIndex.setDescription('This object identifies the resilient link')
resilientLinkEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 102, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resilientLinkEnable.setStatus('current')
if mibBuilder.loadTexts: resilientLinkEnable.setDescription('This object enables or disables the resilient link')
resilientLinkPort1ifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 102, 1, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resilientLinkPort1ifIndex.setStatus('current')
if mibBuilder.loadTexts: resilientLinkPort1ifIndex.setDescription('This object identifies the first port belonging to this\n             resilient link; zero means no port is selected')
resilientLinkPort2ifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 102, 1, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resilientLinkPort2ifIndex.setStatus('current')
if mibBuilder.loadTexts: resilientLinkPort2ifIndex.setDescription('This object identifies the second port belonging to this\n             resilient link; zero means no port is selected')
resilientLinkPreferredPort = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 102, 1, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resilientLinkPreferredPort.setStatus('current')
if mibBuilder.loadTexts: resilientLinkPreferredPort.setDescription('This object identifies the preferred port (1 or 2) in this\n             resilient link; zero means no port is preferred')
resilientLinkActivePort = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 102, 1, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resilientLinkActivePort.setStatus('current')
if mibBuilder.loadTexts: resilientLinkActivePort.setDescription('This object identifies the active port (1 or 2) in this\n             resilient link. Only ports with link up can be configured as active \n             ports.')
resilientLinkStatusTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 102, 2, 2), )
if mibBuilder.loadTexts: resilientLinkStatusTable.setStatus('current')
if mibBuilder.loadTexts: resilientLinkStatusTable.setDescription('This table contains the resilient link status.')
resilientLinkStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 102, 2, 2, 1), ).setIndexNames((0, "PRVT-RESILIENT-LINK-MIB", "resilientLinkIndex"))
if mibBuilder.loadTexts: resilientLinkStatusEntry.setStatus('current')
if mibBuilder.loadTexts: resilientLinkStatusEntry.setDescription('resilientLinkIndex')
resilientLinkConnectedPort = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 102, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notConnected", 1), ("port1Connected", 2), ("port2Connected", 3), ("port1and2Connected", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: resilientLinkConnectedPort.setStatus('current')
if mibBuilder.loadTexts: resilientLinkConnectedPort.setDescription('This object shows the connected ports in the resilient link')
resilientLinkCurrentActivePort = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 102, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noActivePort", 1), ("port1Active", 2), ("port2Active", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: resilientLinkCurrentActivePort.setStatus('current')
if mibBuilder.loadTexts: resilientLinkCurrentActivePort.setDescription('This object identifies the active port (1 or 2) in this\n             resilient link. Only ports with link up can be configured as active \n             ports.')
resilientLinkStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 5, 102, 0, 1)).setObjects(("PRVT-RESILIENT-LINK-MIB", "resilientLinkIndex"), ("PRVT-RESILIENT-LINK-MIB", "resilientLinkConnectedPort"), ("PRVT-RESILIENT-LINK-MIB", "resilientLinkCurrentActivePort"))
if mibBuilder.loadTexts: resilientLinkStatusChange.setStatus('current')
if mibBuilder.loadTexts: resilientLinkStatusChange.setDescription('The resilientLinkStatusChange trap indicates that \n                 the sending agent monitor detected a change in the status of the\n                 resilient link, identified by resilientLinkIndex.')
prvtResilientLinkMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 102, 3, 2))
resilientLinkNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 738, 1, 5, 102, 3, 2, 3)).setObjects(("PRVT-RESILIENT-LINK-MIB", "resilientLinkStatusChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    resilientLinkNotificationGroup = resilientLinkNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: resilientLinkNotificationGroup.setDescription('Private Notification Group.')
mibBuilder.exportSymbols("PRVT-RESILIENT-LINK-MIB", PYSNMP_MODULE_ID=prvtResilientLinkMib, prvtResilientLinkNotifications=prvtResilientLinkNotifications, prvtResilientLinkConformance=prvtResilientLinkConformance, resilientLinkConfig=resilientLinkConfig, prvtResilientLinkMIBGroups=prvtResilientLinkMIBGroups, resilientLinkStatusChange=resilientLinkStatusChange, resilientLinkIndex=resilientLinkIndex, resilientLinkActivePort=resilientLinkActivePort, resilientLinkConfigTable=resilientLinkConfigTable, resilientLinkStatusEntry=resilientLinkStatusEntry, resilientLinkStatusTable=resilientLinkStatusTable, prvtResilientLinkMib=prvtResilientLinkMib, resilientLinkConfigEntry=resilientLinkConfigEntry, resilientLinkStatus=resilientLinkStatus, resilientLinkPreferredPort=resilientLinkPreferredPort, resilientLinkPort1ifIndex=resilientLinkPort1ifIndex, resilientLinkNotificationGroup=resilientLinkNotificationGroup, resilientLinkPort2ifIndex=resilientLinkPort2ifIndex, resilientLinkEnable=resilientLinkEnable, resilientLinkCurrentActivePort=resilientLinkCurrentActivePort, resilientLinkConnectedPort=resilientLinkConnectedPort)
