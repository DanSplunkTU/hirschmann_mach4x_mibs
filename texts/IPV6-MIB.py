#
# PySNMP MIB module IPV6-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/IPV6-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 00:53:20 2022
# On host fv-az74-997 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
Ipv6IfIndex, Ipv6IfIndexOrZero, Ipv6Address, Ipv6AddressPrefix, Ipv6AddressIfIdentifier = mibBuilder.importSymbols("IPV6-TC", "Ipv6IfIndex", "Ipv6IfIndexOrZero", "Ipv6Address", "Ipv6AddressPrefix", "Ipv6AddressIfIdentifier")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
mib_2, Unsigned32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Gauge32, iso, Counter64, Counter32, Bits, IpAddress, TimeTicks, ObjectIdentity, Integer32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "mib-2", "Unsigned32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Gauge32", "iso", "Counter64", "Counter32", "Bits", "IpAddress", "TimeTicks", "ObjectIdentity", "Integer32", "NotificationType")
TextualConvention, TimeStamp, RowPointer, DisplayString, PhysAddress, VariablePointer, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeStamp", "RowPointer", "DisplayString", "PhysAddress", "VariablePointer", "TruthValue")
ipv6MIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 55))
ipv6MIB.setRevisions(('2017-02-22 00:00', '1998-02-05 21:55',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: ipv6MIB.setRevisionsDescriptions(('Obsoleting this MIB module; it has been replaced by\n       the revised IP-MIB (RFC 4293) and IP-FORWARD-MIB\n       (RFC 4292).', 'First revision, published as RFC 2465',))
if mibBuilder.loadTexts: ipv6MIB.setLastUpdated('201702220000Z')
if mibBuilder.loadTexts: ipv6MIB.setOrganization('IETF IPv6 Working Group')
if mibBuilder.loadTexts: ipv6MIB.setContactInfo('           Dimitry Haskin\n\n           Postal: Bay Networks, Inc.\n                   660 Technology Park Drive.\n                   Billerica, MA  01821\n\n                   US\n\n              Tel: +1-978-916-8124\n           E-mail: dhaskin@baynetworks.com\n\n                   Steve Onishi\n\n           Postal: Bay Networks, Inc.\n                   3 Federal Street\n                   Billerica, MA 01821\n                   US\n\n              Tel: +1-978-916-3816\n           E-mail: sonishi@baynetworks.com')
if mibBuilder.loadTexts: ipv6MIB.setDescription("The obsolete MIB module for entities implementing the IPv6\n        protocol.  Use the IP-MIB or IP-FORWARD-MIB instead.\n\n        Copyright (c) 2017 IETF Trust and the persons identified\n        as authors of the code. All rights reserved.\n\n        Redistribution and use in source and binary forms, with or\n        without modification, is permitted pursuant to, and subject\n        to the license terms contained in, the Simplified BSD License\n        set forth in Section 4.c of the IETF Trust's Legal Provisions\n        Relating to IETF Documents\n        (http://trustee.ietf.org/license-info).")
ipv6MIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 55, 1))
ipv6Forwarding = MibScalar((1, 3, 6, 1, 2, 1, 55, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("forwarding", 1), ("notForwarding", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipv6Forwarding.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6Forwarding.setDescription("The indication of whether this entity is acting\n        as an IPv6 router in respect to the forwarding of\n        datagrams received by, but not addressed to, this\n        entity.  IPv6 routers forward datagrams.  IPv6\n        hosts do not (except those source-routed via the\n        host).\n\n        Note that for some managed nodes, this object may\n        take on only a subset of the values possible.\n        Accordingly, it is appropriate for an agent to\n        return a `wrongValue' response if a management\n        station attempts to change this object to an\n        inappropriate value.\n\n        This object is obsoleted by IP-MIB::ipv6IpForwarding.")
ipv6DefaultHopLimit = MibScalar((1, 3, 6, 1, 2, 1, 55, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipv6DefaultHopLimit.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6DefaultHopLimit.setDescription('The default value inserted into the Hop Limit\n        field of the IPv6 header of datagrams originated\n        at this entity, whenever a Hop Limit value is not\n        supplied by the transport layer protocol.\n\n        This object is obsoleted by IP-MIB::ipv6IpDefaultHopLimit.')
ipv6Interfaces = MibScalar((1, 3, 6, 1, 2, 1, 55, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6Interfaces.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6Interfaces.setDescription('The number of IPv6 interfaces (regardless of\n        their current state) present on this system.\n\n        This object is obsolete; there is no direct replacement,\n        but its value can be derived from the number of rows\n        in the IP-MIB::ipv6InterfaceTable.')
ipv6IfTableLastChange = MibScalar((1, 3, 6, 1, 2, 1, 55, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfTableLastChange.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfTableLastChange.setDescription('The value of sysUpTime at the time of the last\n       insertion or removal of an entry in the\n       ipv6IfTable.  If the number of entries has been\n       unchanged since the last re-initialization of\n       the local network management subsystem, then this\n       object contains a zero value.\n\n       This object is obsoleted by\n       IP-MIB::ipv6InterfaceTableLastChange.')
ipv6IfTable = MibTable((1, 3, 6, 1, 2, 1, 55, 1, 5), )
if mibBuilder.loadTexts: ipv6IfTable.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfTable.setDescription("The IPv6 Interfaces table contains information\n       on the entity's internetwork-layer interfaces.\n       An IPv6 interface constitutes a logical network\n       layer attachment to the layer immediately below\n\n       IPv6 including internet layer 'tunnels', such as\n       tunnels over IPv4 or IPv6 itself.\n\n       This table is obsoleted by IP-MIB::ipv6InterfaceTable.")
ipv6IfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 55, 1, 5, 1), ).setIndexNames((0, "IPV6-MIB", "ipv6IfIndex"))
if mibBuilder.loadTexts: ipv6IfEntry.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfEntry.setDescription('An interface entry containing objects\n        about a particular IPv6 interface.\n\n        This object is obsoleted by IP-MIB::ipv6InterfaceEntry.')
ipv6IfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 5, 1, 1), Ipv6IfIndex())
if mibBuilder.loadTexts: ipv6IfIndex.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfIndex.setDescription('A unique non-zero value identifying\n        the particular IPv6 interface.\n\n        This object is obsoleted.  In the IP-MIB,\n        interfaces are simply identified by IfIndex.')
ipv6IfDescr = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipv6IfDescr.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfDescr.setDescription('A textual string containing information about the\n       interface.  This string may be set by the network\n       management system.\n\n       This object is obsoleted by IF-MIB::ifDescr.')
ipv6IfLowerLayer = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 5, 1, 3), VariablePointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfLowerLayer.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfLowerLayer.setDescription('This object identifies the protocol layer over\n       which this network interface operates.  If this\n       network interface operates over the data-link\n       layer, then the value of this object refers to an\n       instance of ifIndex [RFC1573].  If this network interface\n       operates over an IPv4 interface, the value of this\n       object refers to an instance of ipAdEntAddr [RFC1213].\n\n       If this network interface operates over another\n       IPv6 interface, the value of this object refers to\n       an instance of ipv6IfIndex.  If this network\n       interface is not currently operating over an active\n       protocol layer, then the value of this object\n       should be set to the OBJECT ID { 0 0 }.\n\n       This object is obsolete.  The IF-STACK-TABLE may\n       be used to express relationships between interfaces.')
ipv6IfEffectiveMtu = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 5, 1, 4), Unsigned32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfEffectiveMtu.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfEffectiveMtu.setDescription('The size of the largest IPv6 packet which can be\n      sent/received on the interface, specified in\n      octets.\n\n      This object is obsolete.  The value of IF-MIB::ifMtu\n      for the corresponding value of ifIndex represents the\n      MTU of the interface.')
ipv6IfReasmMaxSize = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 5, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfReasmMaxSize.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfReasmMaxSize.setDescription('The size of the largest IPv6 datagram which this\n      entity can re-assemble from incoming IPv6 fragmented\n      datagrams received on this interface.\n\n      This object is obsoleted by IP-MIB::ipv6InterfaceReasmMaxSize.')
ipv6IfIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 5, 1, 6), Ipv6AddressIfIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipv6IfIdentifier.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfIdentifier.setDescription('The Interface Identifier for this interface that\n        is (at least) unique on the link this interface is\n        attached to.  The Interface Identifier is combined\n        with an address prefix to form an interface address.\n\n        By default, the Interface Identifier is autoconfigured\n        according to the rules of the link type this\n        interface is attached to.\n\n        This object is obsoleted by IP-MIB::ipv6InterfaceIdentifier.')
ipv6IfIdentifierLength = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setUnits('bits').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipv6IfIdentifierLength.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfIdentifierLength.setDescription('The length of the Interface Identifier in bits.\n\n       This object is obsolete.  It can be derived from the length\n       of IP-MIB::ipv6InterfaceIdentifier; Interface Identifiers\n       that are not an even number of octets are not supported.')
ipv6IfPhysicalAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 5, 1, 8), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfPhysicalAddress.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfPhysicalAddress.setDescription("The interface's physical address.  For example, for\n       an IPv6 interface attached to an 802.x link, this\n       object normally contains a MAC address.  Note that\n       in some cases this address may differ from the\n       address of the interface's protocol sub-layer.  The\n       interface's media-specific MIB must define the bit\n       and byte ordering and the format of the value of\n       this object.  For interfaces which do not have such\n       an address (e.g., a serial line), this object should\n       contain an octet string of zero length.\n\n       This object is obsoleted by IF-MIB::ifPhysAddress.")
ipv6IfAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipv6IfAdminStatus.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfAdminStatus.setDescription('The desired state of the interface.  When a managed\n      system initializes, all IPv6 interfaces start with\n      ipv6IfAdminStatus in the down(2) state.  As a result\n      of either explicit management action or per\n      configuration information retained by the managed\n      system, ipv6IfAdminStatus is then changed to\n      the up(1) state (or remains in the down(2) state).\n\n      This object is obsolete.  IPv6 does not have a\n      separate admin status; the admin status of the\n      interface is represented by IF-MIB::ifAdminStatus.')
ipv6IfOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("noIfIdentifier", 3), ("unknown", 4), ("notPresent", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfOperStatus.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfOperStatus.setDescription('The current operational state of the interface.\n      The noIfIdentifier(3) state indicates that no valid\n      Interface Identifier is assigned to the interface.\n      This state usually indicates that the link-local\n      interface address failed Duplicate Address Detection.\n      If ipv6IfAdminStatus is down(2) then ipv6IfOperStatus\n      should be down(2).  If ipv6IfAdminStatus is changed\n      to up(1) then ipv6IfOperStatus should change to up(1)\n      if the interface is ready to transmit and receive\n      network traffic; it should remain in the down(2) or\n      noIfIdentifier(3) state if and only if there is a\n      fault that prevents it from going to the up(1) state;\n      it should remain in the notPresent(5) state if\n      the interface has missing (typically, lower layer)\n      components.\n\n      This object is obsolete.  IPv6 does not have a\n      separate operational status; the operational status of the\n      interface is represented by IF-MIB::ifOperStatus.')
ipv6IfLastChange = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 5, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfLastChange.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfLastChange.setDescription('The value of sysUpTime at the time the interface\n        entered its current operational state.  If the\n        current state was entered prior to the last\n        re-initialization of the local network management\n        subsystem, then this object contains a zero\n        value.\n\n        This object is obsolete.  The last change of\n        IF-MIB::ifOperStatus is represented by IF-MIB::ifLastChange.')
ipv6IfStatsTable = MibTable((1, 3, 6, 1, 2, 1, 55, 1, 6), )
if mibBuilder.loadTexts: ipv6IfStatsTable.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsTable.setDescription('IPv6 interface traffic statistics.\n\n         This table is obsoleted by the IP-MIB::ipIfStatsTable.')
ipv6IfStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 55, 1, 6, 1), )
ipv6IfEntry.registerAugmentions(("IPV6-MIB", "ipv6IfStatsEntry"))
ipv6IfStatsEntry.setIndexNames(*ipv6IfEntry.getIndexNames())
if mibBuilder.loadTexts: ipv6IfStatsEntry.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsEntry.setDescription('An interface statistics entry containing objects\n         at a particular IPv6 interface.\n\n         This object is obsoleted by the IP-MIB::ipIfStatsEntry.')
ipv6IfStatsInReceives = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsInReceives.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsInReceives.setDescription('The total number of input datagrams received by\n        the interface, including those received in error.\n\n        This object is obsoleted by IP-MIB::ipIfStatsHCInReceives.')
ipv6IfStatsInHdrErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsInHdrErrors.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsInHdrErrors.setDescription('The number of input datagrams discarded due to\n        errors in their IPv6 headers, including version\n        number mismatch, other format errors, hop count\n        exceeded, errors discovered in processing their\n        IPv6 options, etc.\n\n        This object is obsoleted by IP-MIB::ipIfStatsInHdrErrors.')
ipv6IfStatsInTooBigErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsInTooBigErrors.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsInTooBigErrors.setDescription('The number of input datagrams that could not be\n\n       forwarded because their size exceeded the link MTU\n       of outgoing interface.\n\n       This object is obsoleted.  It was not replicated in the\n       IP-MIB due to feedback that systems did not retain the\n       incoming interface of a packet that failed fragmentation.')
ipv6IfStatsInNoRoutes = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsInNoRoutes.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsInNoRoutes.setDescription('The number of input datagrams discarded because no\n         route could be found to transmit them to their\n         destination.\n\n         This object is obsoleted by IP-MIB::ipIfStatsInNoRoutes.')
ipv6IfStatsInAddrErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsInAddrErrors.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsInAddrErrors.setDescription("The number of input datagrams discarded because\n        the IPv6 address in their IPv6 header's destination\n        field was not a valid address to be received at\n        this entity.  This count includes invalid\n        addresses (e.g., ::0) and unsupported addresses\n        (e.g., addresses with unallocated prefixes).  For\n        entities which are not IPv6 routers and therefore\n        do not forward datagrams, this counter includes\n        datagrams discarded because the destination address\n        was not a local address.\n\n        This object is obsoleted by IP-MIB::ipIfStatsInAddrErrors.")
ipv6IfStatsInUnknownProtos = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsInUnknownProtos.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsInUnknownProtos.setDescription('The number of locally-addressed datagrams\n        received successfully but discarded because of an\n        unknown or unsupported protocol.  This counter is\n        incremented at the interface to which these\n\n        datagrams were addressed which might not be\n        necessarily the input interface for some of\n        the datagrams.\n\n        This object is obsoleted by IP-MIB::ipIfStatsInUnknownProtos.')
ipv6IfStatsInTruncatedPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsInTruncatedPkts.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsInTruncatedPkts.setDescription("The number of input datagrams discarded because\n         datagram frame didn't carry enough data.\n\n         This object is obsoleted by IP-MIB::ipIfStatsInTruncatedPkts.")
ipv6IfStatsInDiscards = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsInDiscards.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsInDiscards.setDescription('The number of input IPv6 datagrams for which no\n        problems were encountered to prevent their\n        continued processing, but which were discarded\n        (e.g., for lack of buffer space).  Note that this\n        counter does not include any datagrams discarded\n        while awaiting re-assembly.\n\n        This object is obsoleted by IP-MIB::ipIfStatsInDiscards.')
ipv6IfStatsInDelivers = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsInDelivers.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsInDelivers.setDescription('The total number of datagrams successfully\n      delivered to IPv6 user-protocols (including ICMP).\n      This counter is incremented at the interface to\n      which these datagrams were addressed which might\n      not be necessarily the input interface for some of\n      the datagrams.\n\n      This object is obsoleted by IP-MIB::ipIfStatsHCInDelivers.')
ipv6IfStatsOutForwDatagrams = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsOutForwDatagrams.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsOutForwDatagrams.setDescription('The number of output datagrams which this\n        entity received and forwarded to their final\n        destinations.  In entities which do not act\n        as IPv6 routers, this counter will include\n        only those packets which were Source-Routed\n        via this entity, and the Source-Route\n        processing was successful.  Note that for\n        a successfully forwarded datagram the counter\n        of the outgoing interface is incremented.\n\n        This object is obsoleted by\n        IP-MIB::ipIfStatsHCOutForwDatagrams.')
ipv6IfStatsOutRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsOutRequests.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsOutRequests.setDescription('The total number of IPv6 datagrams which local IPv6\n      user-protocols (including ICMP) supplied to IPv6 in\n      requests for transmission.  Note that this counter\n      does not include any datagrams counted in\n      ipv6IfStatsOutForwDatagrams.\n\n      This object is obsoleted by IP-MIB::ipIfStatsHCOutRequests.')
ipv6IfStatsOutDiscards = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsOutDiscards.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsOutDiscards.setDescription('The number of output IPv6 datagrams for which no\n         problem was encountered to prevent their\n         transmission to their destination, but which were\n         discarded (e.g., for lack of buffer space).  Note\n         that this counter would include datagrams counted\n         in ipv6IfStatsOutForwDatagrams if any such packets\n         met this (discretionary) discard criterion.\n\n         This object is obsoleted by IP-MIB::ipIfStatsOutDiscards.')
ipv6IfStatsOutFragOKs = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsOutFragOKs.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsOutFragOKs.setDescription('The number of IPv6 datagrams that have been\n         successfully fragmented at this output interface.\n\n         This object is obsoleted by IP-MIB::ipIfStatsOutFragOKs.')
ipv6IfStatsOutFragFails = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsOutFragFails.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsOutFragFails.setDescription('The number of IPv6 datagrams that have been\n         discarded because they needed to be fragmented\n         at this output interface but could not be.\n\n         This object is obsoleted by IP-MIB::ipIfStatsOutFragFails.')
ipv6IfStatsOutFragCreates = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsOutFragCreates.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsOutFragCreates.setDescription('The number of output datagram fragments that have\n         been generated as a result of fragmentation at\n         this output interface.\n\n         This object is obsoleted by IP-MIB::ipIfStatsOutFragCreates.')
ipv6IfStatsReasmReqds = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsReasmReqds.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsReasmReqds.setDescription('The number of IPv6 fragments received which needed\n         to be reassembled at this interface.  Note that this\n         counter is incremented at the interface to which\n         these fragments were addressed which might not\n         be necessarily the input interface for some of\n         the fragments.\n\n         This object is obsoleted by IP-MIB::ipIfStatsReasmReqds.')
ipv6IfStatsReasmOKs = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsReasmOKs.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsReasmOKs.setDescription('The number of IPv6 datagrams successfully\n       reassembled.  Note that this counter is incremented\n       at the interface to which these datagrams were\n       addressed which might not be necessarily the input\n       interface for some of the fragments.\n\n       This object is obsoleted by IP-MIB::ipIfStatsReasmOKs.')
ipv6IfStatsReasmFails = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsReasmFails.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsReasmFails.setDescription('The number of failures detected by the IPv6 re-\n        assembly algorithm (for whatever reason: timed\n        out, errors, etc.).  Note that this is not\n        necessarily a count of discarded IPv6 fragments\n        since some algorithms (notably the algorithm in\n        RFC 815) can lose track of the number of fragments\n        by combining them as they are received.\n        This counter is incremented at the interface to which\n        these fragments were addressed which might not be\n        necessarily the input interface for some of the\n        fragments.\n\n        This object is obsoleted by IP-MIB::ipIfStatsReasmFails.')
ipv6IfStatsInMcastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsInMcastPkts.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsInMcastPkts.setDescription('The number of multicast packets received\n         by the interface\n\n         This object is obsoleted by IP-MIB::ipIfStatsHCInMcastPkts.')
ipv6IfStatsOutMcastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 6, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfStatsOutMcastPkts.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStatsOutMcastPkts.setDescription('The number of multicast packets transmitted\n         by the interface\n\n         This object is obsoleted by IP-MIB::ipIfStatsHCOutMcastPkts.')
ipv6AddrPrefixTable = MibTable((1, 3, 6, 1, 2, 1, 55, 1, 7), )
if mibBuilder.loadTexts: ipv6AddrPrefixTable.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6AddrPrefixTable.setDescription('The list of IPv6 address prefixes of\n         IPv6 interfaces.\n\n         This table is obsoleted by IP-MIB::ipAddressPrefixTable.')
ipv6AddrPrefixEntry = MibTableRow((1, 3, 6, 1, 2, 1, 55, 1, 7, 1), ).setIndexNames((0, "IPV6-MIB", "ipv6IfIndex"), (0, "IPV6-MIB", "ipv6AddrPrefix"), (0, "IPV6-MIB", "ipv6AddrPrefixLength"))
if mibBuilder.loadTexts: ipv6AddrPrefixEntry.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6AddrPrefixEntry.setDescription('An interface entry containing objects of\n         a particular IPv6 address prefix.\n\n         This entry is obsoleted by IP-MIB::ipAddressPrefixEntry.')
ipv6AddrPrefix = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 7, 1, 1), Ipv6AddressPrefix())
if mibBuilder.loadTexts: ipv6AddrPrefix.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6AddrPrefix.setDescription('The prefix associated with the this interface.\n\n       This object is obsoleted by IP-MIB::ipAddressPrefixPrefix.')
ipv6AddrPrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setUnits('bits')
if mibBuilder.loadTexts: ipv6AddrPrefixLength.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6AddrPrefixLength.setDescription('The length of the prefix (in bits).\n\n       This object is obsoleted by IP-MIB::ipAddressPrefixLength.')
ipv6AddrPrefixOnLinkFlag = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 7, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6AddrPrefixOnLinkFlag.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6AddrPrefixOnLinkFlag.setDescription("This object has the value 'true(1)', if this\n       prefix can be used for on-link determination\n       and the value 'false(2)' otherwise.\n\n       This object is obsoleted by IP-MIB::ipAddressPrefixOnLinkFlag.")
ipv6AddrPrefixAutonomousFlag = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 7, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6AddrPrefixAutonomousFlag.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6AddrPrefixAutonomousFlag.setDescription('Autonomous address configuration flag.  When\n       true(1), indicates that this prefix can be used\n       for autonomous address configuration (i.e. can\n       be used to form a local interface address).\n       If false(2), it is not used to autoconfigure\n       a local interface address.\n\n       This object is obsoleted by\n\n       IP-MIB::ipAddressPrefixAutonomousFlag.')
ipv6AddrPrefixAdvPreferredLifetime = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 7, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6AddrPrefixAdvPreferredLifetime.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6AddrPrefixAdvPreferredLifetime.setDescription('It is the length of time in seconds that this\n        prefix will remain preferred, i.e. time until\n        deprecation.  A value of 4,294,967,295 represents\n        infinity.\n\n        The address generated from a deprecated prefix\n        should no longer be used as a source address in\n        new communications, but packets received on such\n        an interface are processed as expected.\n\n        This object is obsoleted by\n        IP-MIB::ipAddressPrefixAdvPreferredLifetime.')
ipv6AddrPrefixAdvValidLifetime = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 7, 1, 6), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6AddrPrefixAdvValidLifetime.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6AddrPrefixAdvValidLifetime.setDescription('It is the length of time in seconds that this\n       prefix will remain valid, i.e. time until\n       invalidation.  A value of 4,294,967,295 represents\n       infinity.\n\n       The address generated from an invalidated prefix\n       should not appear as the destination or source\n       address of a packet.\n\n       This object is obsoleted by\n       IP-MIB::ipAddressPrefixAdvValidLifetime.')
ipv6AddrTable = MibTable((1, 3, 6, 1, 2, 1, 55, 1, 8), )
if mibBuilder.loadTexts: ipv6AddrTable.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6AddrTable.setDescription("The table of addressing information relevant to\n      this node's interface addresses.\n\n      This table is obsoleted by IP-MIB::ipAddressTable.")
ipv6AddrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 55, 1, 8, 1), ).setIndexNames((0, "IPV6-MIB", "ipv6IfIndex"), (0, "IPV6-MIB", "ipv6AddrAddress"))
if mibBuilder.loadTexts: ipv6AddrEntry.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6AddrEntry.setDescription("The addressing information for one of this\n        node's interface addresses.\n\n        This entry is obsoleted by IP-MIB::ipAddressEntry.")
ipv6AddrAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 8, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: ipv6AddrAddress.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6AddrAddress.setDescription("The IPv6 address to which this entry's addressing\n      information pertains.\n\n      This object is obsoleted by IP-MIB::ipAddressAddr.")
ipv6AddrPfxLength = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6AddrPfxLength.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6AddrPfxLength.setDescription('The length of the prefix (in bits) associated with\n      the IPv6 address of this entry.\n\n      This object is obsoleted by the IP-MIB::ipAddressPrefixLength\n      in the row of the IP-MIB::ipAddressPrefixTable to which the\n      IP-MIB::ipAddressPrefix points.')
ipv6AddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("stateless", 1), ("stateful", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6AddrType.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6AddrType.setDescription("The type of address.  Note that 'stateless(1)'\n       refers to an address that was statelessly\n       autoconfigured; 'stateful(2)' refers to a address\n       which was acquired by via a stateful protocol\n       (e.g. DHCPv6, manual configuration).\n\n       This object is obsoleted by IP-MIB::ipAddressOrigin.")
ipv6AddrAnycastFlag = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 8, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6AddrAnycastFlag.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6AddrAnycastFlag.setDescription("This object has the value 'true(1)', if this\n       address is an anycast address and the value\n       'false(2)' otherwise.\n\n       This object is obsoleted by a value of 'anycast(2)'\n       in IP-MIB::ipAddressType.")
ipv6AddrStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("preferred", 1), ("deprecated", 2), ("invalid", 3), ("inaccessible", 4), ("unknown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6AddrStatus.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6AddrStatus.setDescription('Address status.  The preferred(1) state indicates\n      that this is a valid address that can appear as\n      the destination or source address of a packet.\n      The deprecated(2) state indicates that this is\n      a valid but deprecated address that should no longer\n      be used as a source address in new communications,\n      but packets addressed to such an address are\n      processed as expected.  The invalid(3) state indicates\n      that this is not valid address which should not\n      appear as the destination or source address of\n      a packet.  The inaccessible(4) state indicates that\n      the address is not accessible because the interface\n      to which this address is assigned is not operational.\n\n      This object is obsoleted by IP-MIB::ipAddressStatus.')
ipv6RouteNumber = MibScalar((1, 3, 6, 1, 2, 1, 55, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RouteNumber.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6RouteNumber.setDescription('The number of current ipv6RouteTable entries.\n       This is primarily to avoid having to read\n       the table in order to determine this number.\n\n       This object is obsoleted by IP-FORWARD-MIB::inetCidrRouteNumber.')
ipv6DiscardedRoutes = MibScalar((1, 3, 6, 1, 2, 1, 55, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6DiscardedRoutes.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6DiscardedRoutes.setDescription('The number of routing entries which were chosen\n\n        to be discarded even though they are valid.  One\n        possible reason for discarding such an entry could\n        be to free-up buffer space for other routing\n        entries.\n\n        This object is obsoleted by\n        IP-FORWARD-MIB::inetCidrRouteDiscards.')
ipv6RouteTable = MibTable((1, 3, 6, 1, 2, 1, 55, 1, 11), )
if mibBuilder.loadTexts: ipv6RouteTable.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6RouteTable.setDescription('IPv6 Routing table.  This table contains\n       an entry for each valid IPv6 unicast route\n       that can be used for packet forwarding\n       determination.\n\n       This table is obsoleted by IP-FORWARD-MIB::inetCidrRouteTable.')
ipv6RouteEntry = MibTableRow((1, 3, 6, 1, 2, 1, 55, 1, 11, 1), ).setIndexNames((0, "IPV6-MIB", "ipv6RouteDest"), (0, "IPV6-MIB", "ipv6RoutePfxLength"), (0, "IPV6-MIB", "ipv6RouteIndex"))
if mibBuilder.loadTexts: ipv6RouteEntry.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6RouteEntry.setDescription('A routing entry.\n\n             This entry is obsoleted by\n             IP-FORWARD-MIB::inetCidrRouteEntry.')
ipv6RouteDest = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 11, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: ipv6RouteDest.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6RouteDest.setDescription('The destination IPv6 address of this route.\n       This object may not take a Multicast address\n       value.\n\n       This object is obsoleted by IP-FORWARD-MIB::inetCidrRouteDest.')
ipv6RoutePfxLength = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setUnits('bits')
if mibBuilder.loadTexts: ipv6RoutePfxLength.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6RoutePfxLength.setDescription('Indicates the prefix length of the destination\n       address.\n\n       This object is obsoleted by IP-FORWARD-MIB::inetCidrRoutePfxLen.')
ipv6RouteIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 11, 1, 3), Unsigned32())
if mibBuilder.loadTexts: ipv6RouteIndex.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6RouteIndex.setDescription('The value which uniquely identifies the route\n       among the routes to the same network layer\n       destination.  The way this value is chosen is\n       implementation specific but it must be unique for\n       ipv6RouteDest/ipv6RoutePfxLength pair and remain\n       constant for the life of the route.\n\n       This object is obsoleted by IP-FORWARD-MIB::inetCidrRoutePolicy.')
ipv6RouteIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 11, 1, 4), Ipv6IfIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RouteIfIndex.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6RouteIfIndex.setDescription('The index value which uniquely identifies the local\n       interface through which the next hop of this\n       route should be reached.  The interface identified\n       by a particular value of this index is the same\n       interface as identified by the same value of\n       ipv6IfIndex.  For routes of the discard type this\n       value can be zero.\n\n       This object is obsoleted by\n       IP-FORWARD-MIB::inetCidrRouteIfIndex.')
ipv6RouteNextHop = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 11, 1, 5), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RouteNextHop.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6RouteNextHop.setDescription("On remote routes, the address of the next\n       system en route;  otherwise, ::0\n       ('00000000000000000000000000000000'H in ASN.1\n       string representation).\n\n       This object is obsoleted by\n       IP-FORWARD-MIB::inetCidrRouteNextHop.")
ipv6RouteType = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("discard", 2), ("local", 3), ("remote", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RouteType.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6RouteType.setDescription("The type of route.  Note that 'local(3)' refers\n        to a route for which the next hop is the final\n        destination; 'remote(4)' refers to a route for\n        which the next hop is not the final\n        destination; 'discard(2)' refers to a route\n        indicating that packets to destinations matching\n        this route are to be discarded (sometimes called\n        black-hole route).\n\n        This object is obsoleted by IP-FORWARD-MIB::inetCidrRouteType.")
ipv6RouteProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("netmgmt", 3), ("ndisc", 4), ("rip", 5), ("ospf", 6), ("bgp", 7), ("idrp", 8), ("igrp", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RouteProtocol.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6RouteProtocol.setDescription('The routing mechanism via which this route was\n       learned.\n\n       This object is obsoleted by IP-FORWARD-MIB::inetCidrRouteProto.')
ipv6RoutePolicy = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 11, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RoutePolicy.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6RoutePolicy.setDescription("The general set of conditions that would cause the\n      selection of one multipath route (set of next hops\n      for a given destination) is referred to as 'policy'.\n      Unless the mechanism indicated by ipv6RouteProtocol\n      specified otherwise, the policy specifier is the\n      8-bit Traffic Class field of the IPv6 packet header\n      that is zero extended at the left to a 32-bit value.\n\n      Protocols defining 'policy' otherwise must either\n      define a set of values which are valid for\n      this object or must implement an integer-\n      instanced policy table for which this object's\n      value acts as an index.\n\n      This object is obsoleted by IP-FORWARD-MIB::inetCidrRoutePolicy.")
ipv6RouteAge = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 11, 1, 9), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RouteAge.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6RouteAge.setDescription("The number of seconds since this route was last\n        updated or otherwise determined to be correct.\n        Note that no semantics of `too old' can be implied\n        except through knowledge of the routing protocol\n        by which the route was learned.\n\n        This object is obsoleted by IP-FORWARD-MIB::inetCidrRouteAge.")
ipv6RouteNextHopRDI = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 11, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RouteNextHopRDI.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6RouteNextHopRDI.setDescription("The Routing Domain ID of the Next Hop.\n        The semantics of this object are determined by\n        the routing-protocol specified in the route's\n        ipv6RouteProtocol value.  When this object is\n        unknown or not relevant its value should be set\n        to zero.\n\n        This object is obsolete, and it has no replacement.\n        The Routing Domain ID concept did not catch on.")
ipv6RouteMetric = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 11, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RouteMetric.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6RouteMetric.setDescription("The routing metric for this route.  The\n        semantics of this metric are determined by the\n        routing protocol specified in the route's\n        ipv6RouteProtocol value.  When this is unknown\n        or not relevant to the protocol indicated by\n        ipv6RouteProtocol, the object value should be\n        set to its maximum value (4,294,967,295).\n\n        This object is obsoleted by\n        IP-FORWARD-MIB::inetCidrRouteMetric1.")
ipv6RouteWeight = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 11, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RouteWeight.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6RouteWeight.setDescription('The system internal weight value for this route.\n        The semantics of this value are determined by\n        the implementation specific rules.  Generally,\n        within routes with the same ipv6RoutePolicy value,\n        the lower the weight value the more preferred is\n        the route.\n\n        This object is obsoleted, and it has not been replaced.')
ipv6RouteInfo = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 11, 1, 13), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6RouteInfo.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6RouteInfo.setDescription("A reference to MIB definitions specific to the\n        particular routing protocol which is responsible\n        for this route, as determined by the value\n        specified in the route's ipv6RouteProto value.\n        If this information is not present, its value\n        should be set to the OBJECT ID { 0 0 },\n        which is a syntactically valid object identifier,\n        and any implementation conforming to ASN.1\n        and the Basic Encoding Rules must be able to\n        generate and recognize this value.\n\n        This object is obsoleted, and it has not been replaced.")
ipv6RouteValid = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 11, 1, 14), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipv6RouteValid.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6RouteValid.setDescription("Setting this object to the value 'false(2)' has\n        the effect of invalidating the corresponding entry\n        in the ipv6RouteTable object.  That is, it\n        effectively disassociates the destination\n        identified with said entry from the route\n        identified with said entry.  It is an\n        implementation-specific matter as to whether the\n        agent removes an invalidated entry from the table.\n        Accordingly, management stations must be prepared\n        to receive tabular information from agents that\n        corresponds to entries not currently in use.\n        Proper interpretation of such entries requires\n        examination of the relevant ipv6RouteValid\n        object.\n\n        This object is obsoleted by\n        IP-FORWARD-MIB::inetCidrRouteStatus.")
ipv6NetToMediaTable = MibTable((1, 3, 6, 1, 2, 1, 55, 1, 12), )
if mibBuilder.loadTexts: ipv6NetToMediaTable.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6NetToMediaTable.setDescription("The IPv6 Address Translation table used for\n       mapping from IPv6 addresses to physical addresses.\n\n       The IPv6 address translation table contain the\n       Ipv6Address to `physical' address equivalencies.\n       Some interfaces do not use translation tables\n       for determining address equivalencies; if all\n       interfaces are of this type, then the Address\n       Translation table is empty, i.e., has zero\n       entries.\n\n       This table is obsoleted by IP-MIB::ipNetToPhysicalTable.")
ipv6NetToMediaEntry = MibTableRow((1, 3, 6, 1, 2, 1, 55, 1, 12, 1), ).setIndexNames((0, "IPV6-MIB", "ipv6IfIndex"), (0, "IPV6-MIB", "ipv6NetToMediaNetAddress"))
if mibBuilder.loadTexts: ipv6NetToMediaEntry.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6NetToMediaEntry.setDescription("Each entry contains one IPv6 address to `physical'\n       address equivalence.\n\n       This entry is obsoleted by IP-MIB::ipNetToPhysicalEntry.")
ipv6NetToMediaNetAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 12, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: ipv6NetToMediaNetAddress.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6NetToMediaNetAddress.setDescription("The IPv6 Address corresponding to\n        the media-dependent `physical' address.\n\n        This object is obsoleted by IP-MIB::ipNetToPhysicalNetAddress.")
ipv6NetToMediaPhysAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 12, 1, 2), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6NetToMediaPhysAddress.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6NetToMediaPhysAddress.setDescription("The media-dependent `physical' address.\n\n       This object is obsoleted by IP-MIB::ipNetToPhysicalPhysAddress.")
ipv6NetToMediaType = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("dynamic", 2), ("static", 3), ("local", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6NetToMediaType.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6NetToMediaType.setDescription("The type of the mapping.  The 'dynamic(2)' type\n             indicates that the IPv6 address to physical\n             addresses mapping has been dynamically\n             resolved using the IPv6 Neighbor Discovery\n             protocol.  The static(3)' types indicates that\n             the mapping has been statically configured.\n             The local(4) indicates that the mapping is\n             provided for an entity's own interface address.\n\n             This object is obsoleted by IP-MIB::ipNetToPhysicalType.")
ipv6IfNetToMediaState = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("reachable", 1), ("stale", 2), ("delay", 3), ("probe", 4), ("invalid", 5), ("unknown", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfNetToMediaState.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfNetToMediaState.setDescription('The Neighbor Unreachability Detection [RFC2461] state\n        for the interface when the address mapping in\n        this entry is used.\n\n        This object is obsoleted by IP-MIB::ipNetToPhysicalState.')
ipv6IfNetToMediaLastUpdated = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 12, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipv6IfNetToMediaLastUpdated.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfNetToMediaLastUpdated.setDescription('The value of sysUpTime at the time this entry\n        was last updated.  If this entry was updated prior\n        to the last re-initialization of the local network\n        management subsystem, then this object contains\n        a zero value.\n\n        This object is obsoleted by IP-MIB::ipNetToPhysicalLastUpdated.')
ipv6NetToMediaValid = MibTableColumn((1, 3, 6, 1, 2, 1, 55, 1, 12, 1, 6), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipv6NetToMediaValid.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6NetToMediaValid.setDescription("Setting this object to the value 'false(2)' has\n      the effect of invalidating the corresponding entry\n      in the ipv6NetToMediaTable.  That is, it effectively\n      disassociates the interface identified with said\n      entry from the mapping identified with said entry.\n      It is an implementation-specific matter as to\n      whether the agent removes an invalidated entry\n      from the table.  Accordingly, management stations\n      must be prepared to receive tabular information\n      from agents that corresponds to entries not\n      currently in use.  Proper interpretation of such\n      entries requires examination of the relevant\n      ipv6NetToMediaValid object.\n\n      This object is obsoleted by IP-MIB::ipNetToPhysicalRowStatus.")
ipv6Notifications = MibIdentifier((1, 3, 6, 1, 2, 1, 55, 2))
ipv6NotificationPrefix = MibIdentifier((1, 3, 6, 1, 2, 1, 55, 2, 0))
ipv6IfStateChange = NotificationType((1, 3, 6, 1, 2, 1, 55, 2, 0, 1)).setObjects(("IPV6-MIB", "ipv6IfDescr"), ("IPV6-MIB", "ipv6IfOperStatus"))
if mibBuilder.loadTexts: ipv6IfStateChange.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6IfStateChange.setDescription("An ipv6IfStateChange notification signifies\n        that there has been a change in the state of\n        an ipv6 interface.  This notification should\n        be generated when the interface's operational\n        status transitions to or from the up(1) state.\n\n        This object is obsoleted by IF-MIB::linkUp\n        and IF-MIB::linkDown notifications.")
ipv6Conformance = MibIdentifier((1, 3, 6, 1, 2, 1, 55, 3))
ipv6Compliances = MibIdentifier((1, 3, 6, 1, 2, 1, 55, 3, 1))
ipv6Groups = MibIdentifier((1, 3, 6, 1, 2, 1, 55, 3, 2))
ipv6Compliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 55, 3, 1, 1)).setObjects(("IPV6-MIB", "ipv6GeneralGroup"), ("IPV6-MIB", "ipv6NotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipv6Compliance = ipv6Compliance.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6Compliance.setDescription('The compliance statement for SNMPv2 entities which\n      implement ipv6 MIB.\n\n      This compliance statement is obsoleted by\n      IP-MIB::ipMIBCompliance2.')
ipv6GeneralGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 55, 3, 2, 1)).setObjects(("IPV6-MIB", "ipv6Forwarding"), ("IPV6-MIB", "ipv6DefaultHopLimit"), ("IPV6-MIB", "ipv6Interfaces"), ("IPV6-MIB", "ipv6IfTableLastChange"), ("IPV6-MIB", "ipv6IfDescr"), ("IPV6-MIB", "ipv6IfLowerLayer"), ("IPV6-MIB", "ipv6IfEffectiveMtu"), ("IPV6-MIB", "ipv6IfReasmMaxSize"), ("IPV6-MIB", "ipv6IfIdentifier"), ("IPV6-MIB", "ipv6IfIdentifierLength"), ("IPV6-MIB", "ipv6IfPhysicalAddress"), ("IPV6-MIB", "ipv6IfAdminStatus"), ("IPV6-MIB", "ipv6IfOperStatus"), ("IPV6-MIB", "ipv6IfLastChange"), ("IPV6-MIB", "ipv6IfStatsInReceives"), ("IPV6-MIB", "ipv6IfStatsInHdrErrors"), ("IPV6-MIB", "ipv6IfStatsInTooBigErrors"), ("IPV6-MIB", "ipv6IfStatsInNoRoutes"), ("IPV6-MIB", "ipv6IfStatsInAddrErrors"), ("IPV6-MIB", "ipv6IfStatsInUnknownProtos"), ("IPV6-MIB", "ipv6IfStatsInTruncatedPkts"), ("IPV6-MIB", "ipv6IfStatsInDiscards"), ("IPV6-MIB", "ipv6IfStatsInDelivers"), ("IPV6-MIB", "ipv6IfStatsOutForwDatagrams"), ("IPV6-MIB", "ipv6IfStatsOutRequests"), ("IPV6-MIB", "ipv6IfStatsOutDiscards"), ("IPV6-MIB", "ipv6IfStatsOutFragOKs"), ("IPV6-MIB", "ipv6IfStatsOutFragFails"), ("IPV6-MIB", "ipv6IfStatsOutFragCreates"), ("IPV6-MIB", "ipv6IfStatsReasmReqds"), ("IPV6-MIB", "ipv6IfStatsReasmOKs"), ("IPV6-MIB", "ipv6IfStatsReasmFails"), ("IPV6-MIB", "ipv6IfStatsInMcastPkts"), ("IPV6-MIB", "ipv6IfStatsOutMcastPkts"), ("IPV6-MIB", "ipv6AddrPrefixOnLinkFlag"), ("IPV6-MIB", "ipv6AddrPrefixAutonomousFlag"), ("IPV6-MIB", "ipv6AddrPrefixAdvPreferredLifetime"), ("IPV6-MIB", "ipv6AddrPrefixAdvValidLifetime"), ("IPV6-MIB", "ipv6AddrPfxLength"), ("IPV6-MIB", "ipv6AddrType"), ("IPV6-MIB", "ipv6AddrAnycastFlag"), ("IPV6-MIB", "ipv6AddrStatus"), ("IPV6-MIB", "ipv6RouteNumber"), ("IPV6-MIB", "ipv6DiscardedRoutes"), ("IPV6-MIB", "ipv6RouteIfIndex"), ("IPV6-MIB", "ipv6RouteNextHop"), ("IPV6-MIB", "ipv6RouteType"), ("IPV6-MIB", "ipv6RouteProtocol"), ("IPV6-MIB", "ipv6RoutePolicy"), ("IPV6-MIB", "ipv6RouteAge"), ("IPV6-MIB", "ipv6RouteNextHopRDI"), ("IPV6-MIB", "ipv6RouteMetric"), ("IPV6-MIB", "ipv6RouteWeight"), ("IPV6-MIB", "ipv6RouteInfo"), ("IPV6-MIB", "ipv6RouteValid"), ("IPV6-MIB", "ipv6NetToMediaPhysAddress"), ("IPV6-MIB", "ipv6NetToMediaType"), ("IPV6-MIB", "ipv6IfNetToMediaState"), ("IPV6-MIB", "ipv6IfNetToMediaLastUpdated"), ("IPV6-MIB", "ipv6NetToMediaValid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipv6GeneralGroup = ipv6GeneralGroup.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6GeneralGroup.setDescription('The IPv6 group of objects providing for basic\n\n          management of IPv6 entities.\n\n          This group is obsoleted by various groups in\n          IP-MIB.')
ipv6NotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 55, 3, 2, 2)).setObjects(("IPV6-MIB", "ipv6IfStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ipv6NotificationGroup = ipv6NotificationGroup.setStatus('obsolete')
if mibBuilder.loadTexts: ipv6NotificationGroup.setDescription('The notification that an IPv6 entity is required\n          to implement.\n\n          This group is obsoleted by\n          IF-MIB::linkUpDownNotificationsGroup.')
mibBuilder.exportSymbols("IPV6-MIB", ipv6IfEffectiveMtu=ipv6IfEffectiveMtu, ipv6IfEntry=ipv6IfEntry, ipv6RouteProtocol=ipv6RouteProtocol, ipv6IfAdminStatus=ipv6IfAdminStatus, ipv6MIB=ipv6MIB, ipv6AddrAddress=ipv6AddrAddress, ipv6RouteNumber=ipv6RouteNumber, ipv6IfStatsInTruncatedPkts=ipv6IfStatsInTruncatedPkts, ipv6RouteWeight=ipv6RouteWeight, ipv6IfOperStatus=ipv6IfOperStatus, ipv6IfStatsTable=ipv6IfStatsTable, ipv6AddrTable=ipv6AddrTable, ipv6AddrPrefix=ipv6AddrPrefix, ipv6AddrPrefixAdvValidLifetime=ipv6AddrPrefixAdvValidLifetime, ipv6IfPhysicalAddress=ipv6IfPhysicalAddress, ipv6AddrPrefixTable=ipv6AddrPrefixTable, ipv6IfStatsInDiscards=ipv6IfStatsInDiscards, ipv6IfIdentifierLength=ipv6IfIdentifierLength, ipv6RoutePfxLength=ipv6RoutePfxLength, ipv6IfStatsInHdrErrors=ipv6IfStatsInHdrErrors, ipv6IfStatsEntry=ipv6IfStatsEntry, ipv6RouteAge=ipv6RouteAge, ipv6Compliances=ipv6Compliances, ipv6Interfaces=ipv6Interfaces, ipv6DefaultHopLimit=ipv6DefaultHopLimit, ipv6IfStatsReasmFails=ipv6IfStatsReasmFails, ipv6RouteMetric=ipv6RouteMetric, ipv6Forwarding=ipv6Forwarding, ipv6DiscardedRoutes=ipv6DiscardedRoutes, ipv6AddrPrefixEntry=ipv6AddrPrefixEntry, ipv6NotificationPrefix=ipv6NotificationPrefix, ipv6RouteNextHop=ipv6RouteNextHop, ipv6MIBObjects=ipv6MIBObjects, ipv6AddrEntry=ipv6AddrEntry, ipv6Notifications=ipv6Notifications, ipv6IfLastChange=ipv6IfLastChange, ipv6IfStatsReasmReqds=ipv6IfStatsReasmReqds, ipv6RouteEntry=ipv6RouteEntry, ipv6IfStatsInDelivers=ipv6IfStatsInDelivers, ipv6RouteDest=ipv6RouteDest, ipv6IfStateChange=ipv6IfStateChange, ipv6RouteTable=ipv6RouteTable, ipv6GeneralGroup=ipv6GeneralGroup, ipv6Conformance=ipv6Conformance, ipv6IfStatsOutFragOKs=ipv6IfStatsOutFragOKs, ipv6IfStatsOutDiscards=ipv6IfStatsOutDiscards, ipv6NetToMediaPhysAddress=ipv6NetToMediaPhysAddress, ipv6IfLowerLayer=ipv6IfLowerLayer, ipv6RouteValid=ipv6RouteValid, ipv6IfStatsInMcastPkts=ipv6IfStatsInMcastPkts, ipv6NetToMediaNetAddress=ipv6NetToMediaNetAddress, ipv6Compliance=ipv6Compliance, ipv6IfStatsInAddrErrors=ipv6IfStatsInAddrErrors, ipv6IfStatsInUnknownProtos=ipv6IfStatsInUnknownProtos, ipv6IfDescr=ipv6IfDescr, ipv6AddrPrefixOnLinkFlag=ipv6AddrPrefixOnLinkFlag, ipv6NetToMediaTable=ipv6NetToMediaTable, ipv6AddrPrefixAutonomousFlag=ipv6AddrPrefixAutonomousFlag, ipv6RouteIfIndex=ipv6RouteIfIndex, ipv6IfNetToMediaState=ipv6IfNetToMediaState, ipv6AddrAnycastFlag=ipv6AddrAnycastFlag, ipv6NetToMediaType=ipv6NetToMediaType, ipv6IfTable=ipv6IfTable, PYSNMP_MODULE_ID=ipv6MIB, ipv6IfIndex=ipv6IfIndex, ipv6RouteIndex=ipv6RouteIndex, ipv6RouteNextHopRDI=ipv6RouteNextHopRDI, ipv6IfNetToMediaLastUpdated=ipv6IfNetToMediaLastUpdated, ipv6IfStatsInTooBigErrors=ipv6IfStatsInTooBigErrors, ipv6NotificationGroup=ipv6NotificationGroup, ipv6IfStatsInReceives=ipv6IfStatsInReceives, ipv6IfStatsOutMcastPkts=ipv6IfStatsOutMcastPkts, ipv6AddrPrefixLength=ipv6AddrPrefixLength, ipv6IfStatsOutFragCreates=ipv6IfStatsOutFragCreates, ipv6IfStatsInNoRoutes=ipv6IfStatsInNoRoutes, ipv6IfStatsOutRequests=ipv6IfStatsOutRequests, ipv6AddrStatus=ipv6AddrStatus, ipv6AddrPfxLength=ipv6AddrPfxLength, ipv6IfStatsOutFragFails=ipv6IfStatsOutFragFails, ipv6AddrType=ipv6AddrType, ipv6IfReasmMaxSize=ipv6IfReasmMaxSize, ipv6RoutePolicy=ipv6RoutePolicy, ipv6IfStatsReasmOKs=ipv6IfStatsReasmOKs, ipv6RouteType=ipv6RouteType, ipv6Groups=ipv6Groups, ipv6NetToMediaEntry=ipv6NetToMediaEntry, ipv6RouteInfo=ipv6RouteInfo, ipv6IfIdentifier=ipv6IfIdentifier, ipv6AddrPrefixAdvPreferredLifetime=ipv6AddrPrefixAdvPreferredLifetime, ipv6IfTableLastChange=ipv6IfTableLastChange, ipv6NetToMediaValid=ipv6NetToMediaValid, ipv6IfStatsOutForwDatagrams=ipv6IfStatsOutForwDatagrams)
