#
# PySNMP MIB module ALCATEL-IND1-DOT3-OAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-DOT3-OAM-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 16:20:35 2022
# On host fv-az135-792 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
softentIND1Dot3Oam, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1Dot3Oam")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
dot3OamEventLogTimestamp, dot3OamEventLogValue, dot3OamEventLogThresholdHi, dot3OamLoopbackEntry, dot3OamEventLogType, dot3OamEventLogWindowLo, dot3OamEventLogThresholdLo, dot3OamEntry, dot3OamEventLogRunningTotal, dot3OamEventLogWindowHi, dot3OamEventLogLocation, dot3OamEventLogOui, dot3OamEventLogEventTotal, dot3OamStatsEntry = mibBuilder.importSymbols("DOT3-OAM-MIB", "dot3OamEventLogTimestamp", "dot3OamEventLogValue", "dot3OamEventLogThresholdHi", "dot3OamLoopbackEntry", "dot3OamEventLogType", "dot3OamEventLogWindowLo", "dot3OamEventLogThresholdLo", "dot3OamEntry", "dot3OamEventLogRunningTotal", "dot3OamEventLogWindowHi", "dot3OamEventLogLocation", "dot3OamEventLogOui", "dot3OamEventLogEventTotal", "dot3OamStatsEntry")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, MibIdentifier, Gauge32, Counter32, TimeTicks, Unsigned32, Counter64, iso, IpAddress, Bits, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibIdentifier", "Gauge32", "Counter32", "TimeTicks", "Unsigned32", "Counter64", "iso", "IpAddress", "Bits", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Integer32")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
alcatelIND1Dot3OamMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1))
alcatelIND1Dot3OamMIB.setRevisions(('2009-02-25 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: alcatelIND1Dot3OamMIB.setRevisionsDescriptions(('Ethernet in First Mile (EFM) module for managing IEEE 802.3ah.\n                This 802.3ah (EFM) OAM MIB extends standard 802.3ah.\n\n                The set of objects defined in this MIB, do not duplicate,\n                nor conflict with any MIB object definitions defined in\n                the RFC 4878 MIB (dot3-oam-mib.mib).',))
if mibBuilder.loadTexts: alcatelIND1Dot3OamMIB.setLastUpdated('200902250000Z')
if mibBuilder.loadTexts: alcatelIND1Dot3OamMIB.setOrganization('Alcatel - Architects Of An Internet World')
if mibBuilder.loadTexts: alcatelIND1Dot3OamMIB.setContactInfo('Please consult with Customer Service to insure the most appropriate\n                 version of this document is used with the products in question:\n\n                        Alcatel Internetworking, Incorporated\n                       (Division 1, Formerly XYLAN Corporation)\n                               26801 West Agoura Road\n                            Agoura Hills, CA  91301-5122\n                              United States Of America\n\n                Telephone:               North America  +1 800 995 2696\n                                     Latin America  +1 877 919 9526\n                                     Europe         +31 23 556 0100\n                                     Asia           +65 394 7933\n                                     All Other      +1 818 878 4507\n\n                Electronic Mail:         support@ind.alcatel.com\n                World Wide Web:          http://www.ind.alcatel.com\n                File Transfer Protocol:  ftp://ftp.ind.alcatel.com/pub/products/mibs')
if mibBuilder.loadTexts: alcatelIND1Dot3OamMIB.setDescription('This module describes an authoritative enterprise-\n                specific Simple Network Management Protocol (SNMP) Management\n                Information Base (MIB):\n\n                For the Birds Of Prey Product Line\n                Ethernet in First Mile OAM.\n\n\n                The right to make changes in specification and other information\n                contained in this document without prior notice is reserved.\n\n                No liability shall be assumed for any incidental, indirect,\n                special, or consequential damages whatsoever arising from or\n                related to this document or the information contained herein.\n\n                Vendors, end-users, and other interested parties are granted\n                non-exclusive license to use this specification in connection with\n                management of the products for which it is intended to be used.\n\n                Copyright (C) 1995-2002 Alcatel Internetworking, Incorporated\n                             ALL RIGHTS RESERVED WORLDWIDE')
alcatelIND1Dot3OamNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 0))
if mibBuilder.loadTexts: alcatelIND1Dot3OamNotifications.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1Dot3OamNotifications.setDescription('Branch for 802.3ah OAM Notifications.')
alcatelIND1Dot3OamMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1))
if mibBuilder.loadTexts: alcatelIND1Dot3OamMIBObjects.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1Dot3OamMIBObjects.setDescription('Branch For 802.3ah OAM Objects.')
alcatelIND1Dot3OamMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 2))
if mibBuilder.loadTexts: alcatelIND1Dot3OamMIBConformance.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1Dot3OamMIBConformance.setDescription('Branch for 802.3ah Module MIB Subsystem Conformance Information.')
alcatelIND1Dot3OamMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1Dot3OamMIBGroups.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1Dot3OamMIBGroups.setDescription('Branch for 802.3ah Module MIB Subsystem Units of Conformance.')
alcatelIND1Dot3OamMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1Dot3OamMIBCompliances.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1Dot3OamMIBCompliances.setDescription('Branch for 802.3ah Module MIB Subsystem Compliance Statements.')
alaDot3OamStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot3OamStatus.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamStatus.setDescription('The administrative status requested by management for\n        802.3ah.  The value enabled(1) indicates that 802.3ah should\n        be enabled on this device, on all ports for which it has\n        not been specifically disabled.  When disabled(2), 802.3ah\n        is disabled on all ports and all 802.3ah packets will be\n        dropped.  A transition from disabled(2) to enabled(1) will\n        cause a reset of all 802.3ah state machines on all ports.')
alaDot3OamGlobalClearStats = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("reset", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot3OamGlobalClearStats.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamGlobalClearStats.setDescription('Defines the global clear statistics control for Dot3OAM.\n        The value reset (1) indicates that clear all statistic counters\n        related to all ports in the system. By default, this object\n        contains a zero value.')
alaDot3OamGlobalClearEventLogs = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("reset", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot3OamGlobalClearEventLogs.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamGlobalClearEventLogs.setDescription('Defines the global clear event logs control for Dot3OAM.\n        The value reset (1) indicates that clear all event logs\n        related to all ports in the system. By default, this object\n        contains a zero value.')
alaDot3OamGlobalClearVariableTransactions = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("reset", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot3OamGlobalClearVariableTransactions.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamGlobalClearVariableTransactions.setDescription('Defines the global clear variable transactions control for\n        Dot3OAM. The value reset (1) indicates that clear all\n        transactions related to all ports in the system. By default,\n        this object contains a zero value.')
alaDot3OamMultiplePduCount = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot3OamMultiplePduCount.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamMultiplePduCount.setDescription('This object is used to set the number of PDUs that will be\n          sent, when OAM needs to send multiple event notification PDUs.\n          ')
alaDot3OamPortConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 8))
alaDot3OamTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 8, 1), )
if mibBuilder.loadTexts: alaDot3OamTable.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamTable.setDescription('This table contains the primary controls and status for the\n          OAM capabilities of an Ethernet like interface.  There will be\n          one row in this table for each Ethernet like interface in the\n          system that supports the OAM functions defined in [802.3ah].\n          ')
alaDot3OamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 8, 1, 1), )
dot3OamEntry.registerAugmentions(("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamEntry"))
alaDot3OamEntry.setIndexNames(*dot3OamEntry.getIndexNames())
if mibBuilder.loadTexts: alaDot3OamEntry.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamEntry.setDescription('An entry in the table, containing information on the Ethernet\n          OAM function for a single Ethernet like interface. Entries in\n          the table are created automatically for each interface\n          supporting Ethernet OAM. The status of the row entry can be\n          determined from dot3OamOperStatus.\n\n          A alaDot3OamEntry is indexed in the alaDot3OamTable by the\n          ifIndex object of the Interfaces MIB.\n          ')
alaDot3OamKeepAliveInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 120)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot3OamKeepAliveInterval.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamKeepAliveInterval.setDescription('This object is used to set the timer in seconds to restart the\n          discovery process if no PDUs are received in this time frame.\n          ')
alaDot3OamHelloInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot3OamHelloInterval.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamHelloInterval.setDescription('This object is used to set the interval between two OAMPDUs\n          ')
alaDot3OamNextTransactionId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot3OamNextTransactionId.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamNextTransactionId.setDescription("This object is used to fetch the next available transaction id\n          required for MIB variable retrieval requests on this interface.\n          To read the remote entity's MIB variables, a unique transaction\n          id is generated for each request. The administrator first needs\n          to get the next available transaction id for the interface, and\n          provide this as index to the alaDot3OamRetrieveRequestTable.\n          ")
alaDot3OamPortLoopbackControl = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 9))
alaDot3OamLoopbackTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 9, 1), )
if mibBuilder.loadTexts: alaDot3OamLoopbackTable.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamLoopbackTable.setDescription('This table contains controls for the loopback state of the\n          local link as well as indicating the status of the loopback\n          function.  There is one entry in this table for each entry in\n          dot3OamTable that supports loopback functionality (where\n          dot3OamFunctionsSupported includes the loopbackSupport bit\n          set).\n          ')
alaDot3OamLoopbackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 9, 1, 1), )
dot3OamLoopbackEntry.registerAugmentions(("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamLoopbackEntry"))
alaDot3OamLoopbackEntry.setIndexNames(*dot3OamLoopbackEntry.getIndexNames())
if mibBuilder.loadTexts: alaDot3OamLoopbackEntry.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamLoopbackEntry.setDescription('An entry in the table, containing information on the L1 ping.\n           One record/entry shall be maintained per interface. This record\n           shall be automatically created when L1 ping is initiated for the\n           first time on the interface. Subsequent ping operations shall\n           replace the record. Loopback capabilities of the interface can\n           be determined from the dot3OamLoopbackStatus object.\n          ')
alaDot3OamPortL1PingFramesConf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot3OamPortL1PingFramesConf.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamPortL1PingFramesConf.setDescription('This object is used to set the number of frames to be transmitted\n           from the interface during L1 ping.\n          ')
alaDot3OamPortL1PingFramesDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 1000)).clone(1000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot3OamPortL1PingFramesDelay.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamPortL1PingFramesDelay.setDescription('This object is used to set the delay between two\n           frames transmitted during L1 ping.\n          ')
alaDot3OamPortL1PingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("default", 0), ("start", 1), ("running", 2), ("operationSuccessful", 3), ("operationUnsuccessful", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot3OamPortL1PingStatus.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamPortL1PingStatus.setDescription('This object is used to start the L1 ping operation. Operator\n           can set only start(1) value and setting of start(1) value is not valid\n           if object value is start(1) or running(2).\n           Whenever efm gets enabled on any port, this object has default(0) value.\n           Default(0) value implies that loopback session has not been started even\n           for a single time. Running(2) is corresponding to the state, when L1 ping\n           is going on, operationSuccessful(3) is corresponding to the state, when L1\n           ping operation is done successfully. operationUnsuccessful(4) is corresponding\n           to state when operation gets failed due to some reason.\n          ')
alaDot3OamPortL1PingFramesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 9, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot3OamPortL1PingFramesSent.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamPortL1PingFramesSent.setDescription('This object is used to keep the actual frames sent during\n           last L1 ping operation.\n          ')
alaDot3OamPortL1PingFramesReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 9, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot3OamPortL1PingFramesReceived.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamPortL1PingFramesReceived.setDescription('This object is used to keep the number of frames received\n           during last L1 ping operation.\n          ')
alaDot3OamPortL1PingAverageRoundTripDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 9, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot3OamPortL1PingAverageRoundTripDelay.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamPortL1PingAverageRoundTripDelay.setDescription('This object is used to keep the average delay taken by frames\n           during last L1 ping.\n          ')
alaDot3OamPortStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 10))
alaDot3OamStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 10, 1), )
if mibBuilder.loadTexts: alaDot3OamStatsTable.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamStatsTable.setDescription('This table contains statistics for the OAM function on a\n          particular Ethernet like interface. There is an entry in the\n          table for every entry in the dot3OamStatsTable.\n\n          The counters in this table are defined as 32-bit entries to\n          match the counter size as defined in [802.3ah].  Given the OA\n          protocol is a slow protocol, the counters increment at a slow\n          rate.\n          ')
alaDot3OamStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 10, 1, 1), )
dot3OamStatsEntry.registerAugmentions(("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamStatsEntry"))
alaDot3OamStatsEntry.setIndexNames(*dot3OamStatsEntry.getIndexNames())
if mibBuilder.loadTexts: alaDot3OamStatsEntry.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamStatsEntry.setDescription('An entry in the table, containing statistics information on\n          the Ethernet OAM function for a single Ethernet like\n          interface.  Entries are automatically created for every entry\n          in the dot3OamStatsTable.  Counters are maintained across\n          transitions in dot3OamOperStatus.\n          ')
alaDot3OamPortClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("reset", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot3OamPortClearStats.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamPortClearStats.setDescription('Reset all statistics parameters corresponding to this port\n          By default, this objects contains a zero value.\n          ')
alaDot3OamPortEventLogs = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 11))
alaDot3OamEventLogTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 11, 1), )
if mibBuilder.loadTexts: alaDot3OamEventLogTable.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamEventLogTable.setDescription('This table records a history of the events that have occurred\n          at the Ethernet OAM level.  These events can include locally\n          detected events, which may result in locally generated\n          OAMPDUs, and remotely detected events, which are detected by\n          the OAM peer entity and signaled to the local entity via\n          Ethernet OAM.  Ethernet OAM events can be signaled by Event\n          Notification OAMPDUs or by the flags field in any OAMPDU.\n          ')
alaDot3OamEventLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 11, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: alaDot3OamEventLogEntry.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamEventLogEntry.setDescription('An entry in the dot3OamEventLogTable.  Entries are\n          automatically created whenever Ethernet OAM events occur at\n          the local OAM entity, and when Event Notification OAMPDUs are\n          received at the local OAM entity (indicating events have\n          occurred at the peer OAM entity).  The size of the table is\n          implementation dependent, but when the table becomes full,\n          older events are automatically deleted to make room for newer\n          events.  The table index dot3OamEventLogIndex increments for\n          each new entry, and when the maximum value is reached the\n          value restarts at zero.\n          ')
alaDot3OamPortClearEventLogs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("reset", 1))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDot3OamPortClearEventLogs.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamPortClearEventLogs.setDescription('Reset all event logs corresponding to this port\n          By default, this objects contains a zero value.\n          ')
alaDot3OamRetrieveRequest = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 12))
alaDot3OamRetrieveRequestTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 12, 1), )
if mibBuilder.loadTexts: alaDot3OamRetrieveRequestTable.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamRetrieveRequestTable.setDescription('A table containing MIB variable retrieval request\n            information')
alaDot3OamRetrieveRequestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 12, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamTransactionId"), (0, "ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamVariableRequestBranch"), (0, "ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamVariableRequestLeaf"))
if mibBuilder.loadTexts: alaDot3OamRetrieveRequestEntry.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamRetrieveRequestEntry.setDescription('A 802.3ah MIB variable retrieval request entry.')
alaDot3OamTransactionId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: alaDot3OamTransactionId.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamTransactionId.setDescription('This object is used to set the available transaction id for\n          retrieving the remote MIB variable for this interface. The\n          value for this is obtained from alaDot3OamNextTransactionId,\n          which is part of alaDot3OamTable.\n          ')
alaDot3OamVariableRequestBranch = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 12, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 7))).clone(namedValues=NamedValues(("object", 3), ("package", 4), ("attribute", 7))).clone('attribute'))
if mibBuilder.loadTexts: alaDot3OamVariableRequestBranch.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamVariableRequestBranch.setDescription('This object is used to set the branch to reference the MIB\n          object to be retrieved. This is set to attribute, package or\n          object depending upon the request for getting the MIB variables.\n          ')
alaDot3OamVariableRequestLeaf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: alaDot3OamVariableRequestLeaf.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamVariableRequestLeaf.setDescription('This object is used to set the leaf to reference the MIB\n          object to be retrieved.\n          ')
alaDot3OamVariableRequestRetrieveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("failed", 2), ("success", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot3OamVariableRequestRetrieveStatus.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamVariableRequestRetrieveStatus.setDescription('This object is used to check the status of a MIB request,\n          Active means that the request is currently in progress),\n          failed means that the request has failed, and success\n          means that the request returned successfully.\n          ')
alaDot3OamVariableRequestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 12, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDot3OamVariableRequestRowStatus.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamVariableRequestRowStatus.setDescription('Row Status for initiating a MIB retrieval request.\n          ')
alaDot3OamPortClearVariableTransactions = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 12, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("reset", 1))).clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDot3OamPortClearVariableTransactions.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamPortClearVariableTransactions.setDescription('Reset all variable transactions corresponding to this port\n        By default, this objects contains a zero value.\n        ')
alaDot3OamRetrieveResponse = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 13))
alaDot3OamRetrieveResponseTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 13, 1), )
if mibBuilder.loadTexts: alaDot3OamRetrieveResponseTable.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamRetrieveResponseTable.setDescription('A table containing MIB variable retrieval response\n            information')
alaDot3OamRetrieveResponseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 13, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamTransactionId"), (0, "ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamVariableResponseBranch"), (0, "ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamVariableResponseLeaf"))
if mibBuilder.loadTexts: alaDot3OamRetrieveResponseEntry.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamRetrieveResponseEntry.setDescription('A 802.3ah MIB variable retrieval response entry.')
alaDot3OamVariableResponseBranch = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 7))).clone(namedValues=NamedValues(("object", 3), ("package", 4), ("attribute", 7))))
if mibBuilder.loadTexts: alaDot3OamVariableResponseBranch.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamVariableResponseBranch.setDescription('The branch to reference the MIB object retrieved.\n          ')
alaDot3OamVariableResponseLeaf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 13, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: alaDot3OamVariableResponseLeaf.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamVariableResponseLeaf.setDescription('The leaf to reference the MIB object retrieved.\n          ')
alaDot3OamVariableResponseValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 1, 13, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDot3OamVariableResponseValue.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamVariableResponseValue.setDescription('The value of the retrived attribute.\n          ')
alaDot3OamThresholdEventClear = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 0, 1)).setObjects(("DOT3-OAM-MIB", "dot3OamEventLogTimestamp"), ("DOT3-OAM-MIB", "dot3OamEventLogOui"), ("DOT3-OAM-MIB", "dot3OamEventLogType"), ("DOT3-OAM-MIB", "dot3OamEventLogLocation"), ("DOT3-OAM-MIB", "dot3OamEventLogWindowHi"), ("DOT3-OAM-MIB", "dot3OamEventLogWindowLo"), ("DOT3-OAM-MIB", "dot3OamEventLogThresholdHi"), ("DOT3-OAM-MIB", "dot3OamEventLogThresholdLo"), ("DOT3-OAM-MIB", "dot3OamEventLogValue"), ("DOT3-OAM-MIB", "dot3OamEventLogRunningTotal"), ("DOT3-OAM-MIB", "dot3OamEventLogEventTotal"))
if mibBuilder.loadTexts: alaDot3OamThresholdEventClear.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamThresholdEventClear.setDescription('A alaDot3OamThresholdEventClear notification is sent when a local or\n          remote threshold crossing event is recovered.\n\n          The OAM entity can be derived from extracting the ifIndex from\n          the variable bindings.  The objects in the notification\n          correspond to the values in a row instance in the\n          dot3OamEventLogTable.')
alaDot3OamNonThresholdEventClear = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 0, 2)).setObjects(("DOT3-OAM-MIB", "dot3OamEventLogTimestamp"), ("DOT3-OAM-MIB", "dot3OamEventLogOui"), ("DOT3-OAM-MIB", "dot3OamEventLogType"), ("DOT3-OAM-MIB", "dot3OamEventLogLocation"), ("DOT3-OAM-MIB", "dot3OamEventLogEventTotal"))
if mibBuilder.loadTexts: alaDot3OamNonThresholdEventClear.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamNonThresholdEventClear.setDescription('A alaDot3OamNonThresholdEventClear notification is sent when a local\n          or remote non-threshold crossing event is recovered.\n\n          The OAM entity can be derived from extracting the ifIndex from\n          the variable bindings.  The objects in the notification\n          correspond to the values in a row instance of the\n          dot3OamEventLogTable.')
alcatelIND1Dot3OamMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamBaseGroup"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamPortConfigGroup"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamPortLoopbackControlGroup"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamPortStatsGroup"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamPortEventLogsGroup"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamRetrieveRequestGroup"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamRetrieveResponseGroup"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1Dot3OamMIBCompliance = alcatelIND1Dot3OamMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: alcatelIND1Dot3OamMIBCompliance.setDescription('Compliance statement for 802.3ah.')
alaDot3OamBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamStatus"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamGlobalClearStats"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamGlobalClearEventLogs"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamGlobalClearVariableTransactions"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamMultiplePduCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDot3OamBaseGroup = alaDot3OamBaseGroup.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamBaseGroup.setDescription('Collection of objects for management of 802.3ah Base Group.')
alaDot3OamPortConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamKeepAliveInterval"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamHelloInterval"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamNextTransactionId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDot3OamPortConfigGroup = alaDot3OamPortConfigGroup.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamPortConfigGroup.setDescription('Collection of objects for management of 802.3ah Port Configuration Table.')
alaDot3OamPortLoopbackControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamPortL1PingFramesConf"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamPortL1PingFramesDelay"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamPortL1PingStatus"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamPortL1PingFramesSent"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamPortL1PingFramesReceived"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamPortL1PingAverageRoundTripDelay"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDot3OamPortLoopbackControlGroup = alaDot3OamPortLoopbackControlGroup.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamPortLoopbackControlGroup.setDescription('Collection of objects for management of 802.3ah Loopback Table.')
alaDot3OamPortStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamPortClearStats"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDot3OamPortStatsGroup = alaDot3OamPortStatsGroup.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamPortStatsGroup.setDescription('Collection of objects for management of 802.3ah Statistics Table.')
alaDot3OamPortEventLogsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamPortClearEventLogs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDot3OamPortEventLogsGroup = alaDot3OamPortEventLogsGroup.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamPortEventLogsGroup.setDescription('Collection of objects for management of 802.3ah Event Log Table.')
alaDot3OamRetrieveRequestGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamVariableRequestRetrieveStatus"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamVariableRequestRowStatus"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamPortClearVariableTransactions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDot3OamRetrieveRequestGroup = alaDot3OamRetrieveRequestGroup.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamRetrieveRequestGroup.setDescription('Collection of objects for management of 802.3ah Retrieve Request Table.')
alaDot3OamRetrieveResponseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 2, 1, 7)).setObjects(("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamVariableResponseValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDot3OamRetrieveResponseGroup = alaDot3OamRetrieveResponseGroup.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamRetrieveResponseGroup.setDescription('Collection of objects for management of 802.3ah Retrieve Response Table.')
alaDot3OamNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 52, 1, 2, 1, 8)).setObjects(("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamThresholdEventClear"), ("ALCATEL-IND1-DOT3-OAM-MIB", "alaDot3OamNonThresholdEventClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDot3OamNotificationGroup = alaDot3OamNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: alaDot3OamNotificationGroup.setDescription('A collection of notifications used by 802.3ah to signal\n         to a management entity that local or remote events have\n         recovered on a specified Ethernet link. ')
mibBuilder.exportSymbols("ALCATEL-IND1-DOT3-OAM-MIB", alcatelIND1Dot3OamMIBConformance=alcatelIND1Dot3OamMIBConformance, PYSNMP_MODULE_ID=alcatelIND1Dot3OamMIB, alcatelIND1Dot3OamMIBCompliances=alcatelIND1Dot3OamMIBCompliances, alaDot3OamPortLoopbackControl=alaDot3OamPortLoopbackControl, alaDot3OamVariableResponseBranch=alaDot3OamVariableResponseBranch, alaDot3OamVariableResponseValue=alaDot3OamVariableResponseValue, alaDot3OamPortConfigGroup=alaDot3OamPortConfigGroup, alaDot3OamVariableResponseLeaf=alaDot3OamVariableResponseLeaf, alaDot3OamStatus=alaDot3OamStatus, alaDot3OamPortL1PingAverageRoundTripDelay=alaDot3OamPortL1PingAverageRoundTripDelay, alcatelIND1Dot3OamMIB=alcatelIND1Dot3OamMIB, alaDot3OamGlobalClearEventLogs=alaDot3OamGlobalClearEventLogs, alaDot3OamVariableRequestLeaf=alaDot3OamVariableRequestLeaf, alaDot3OamTransactionId=alaDot3OamTransactionId, alaDot3OamPortConfig=alaDot3OamPortConfig, alaDot3OamStatsTable=alaDot3OamStatsTable, alaDot3OamNextTransactionId=alaDot3OamNextTransactionId, alaDot3OamPortLoopbackControlGroup=alaDot3OamPortLoopbackControlGroup, alaDot3OamGlobalClearVariableTransactions=alaDot3OamGlobalClearVariableTransactions, alaDot3OamRetrieveRequestTable=alaDot3OamRetrieveRequestTable, alaDot3OamPortL1PingStatus=alaDot3OamPortL1PingStatus, alaDot3OamStatsEntry=alaDot3OamStatsEntry, alaDot3OamBaseGroup=alaDot3OamBaseGroup, alaDot3OamEventLogTable=alaDot3OamEventLogTable, alaDot3OamRetrieveResponseGroup=alaDot3OamRetrieveResponseGroup, alcatelIND1Dot3OamMIBGroups=alcatelIND1Dot3OamMIBGroups, alaDot3OamPortL1PingFramesDelay=alaDot3OamPortL1PingFramesDelay, alaDot3OamRetrieveRequest=alaDot3OamRetrieveRequest, alaDot3OamPortClearEventLogs=alaDot3OamPortClearEventLogs, alaDot3OamPortClearVariableTransactions=alaDot3OamPortClearVariableTransactions, alaDot3OamPortStatsGroup=alaDot3OamPortStatsGroup, alaDot3OamPortL1PingFramesConf=alaDot3OamPortL1PingFramesConf, alaDot3OamRetrieveRequestGroup=alaDot3OamRetrieveRequestGroup, alcatelIND1Dot3OamMIBCompliance=alcatelIND1Dot3OamMIBCompliance, alaDot3OamHelloInterval=alaDot3OamHelloInterval, alaDot3OamNotificationGroup=alaDot3OamNotificationGroup, alaDot3OamPortL1PingFramesSent=alaDot3OamPortL1PingFramesSent, alaDot3OamPortEventLogs=alaDot3OamPortEventLogs, alaDot3OamEventLogEntry=alaDot3OamEventLogEntry, alaDot3OamVariableRequestRowStatus=alaDot3OamVariableRequestRowStatus, alaDot3OamRetrieveResponseTable=alaDot3OamRetrieveResponseTable, alaDot3OamPortL1PingFramesReceived=alaDot3OamPortL1PingFramesReceived, alaDot3OamEntry=alaDot3OamEntry, alaDot3OamVariableRequestBranch=alaDot3OamVariableRequestBranch, alaDot3OamTable=alaDot3OamTable, alaDot3OamNonThresholdEventClear=alaDot3OamNonThresholdEventClear, alaDot3OamVariableRequestRetrieveStatus=alaDot3OamVariableRequestRetrieveStatus, alaDot3OamPortStats=alaDot3OamPortStats, alaDot3OamPortClearStats=alaDot3OamPortClearStats, alaDot3OamMultiplePduCount=alaDot3OamMultiplePduCount, alaDot3OamGlobalClearStats=alaDot3OamGlobalClearStats, alaDot3OamRetrieveResponseEntry=alaDot3OamRetrieveResponseEntry, alcatelIND1Dot3OamMIBObjects=alcatelIND1Dot3OamMIBObjects, alaDot3OamThresholdEventClear=alaDot3OamThresholdEventClear, alaDot3OamLoopbackTable=alaDot3OamLoopbackTable, alaDot3OamPortEventLogsGroup=alaDot3OamPortEventLogsGroup, alaDot3OamKeepAliveInterval=alaDot3OamKeepAliveInterval, alaDot3OamRetrieveRequestEntry=alaDot3OamRetrieveRequestEntry, alcatelIND1Dot3OamNotifications=alcatelIND1Dot3OamNotifications, alaDot3OamLoopbackEntry=alaDot3OamLoopbackEntry, alaDot3OamRetrieveResponse=alaDot3OamRetrieveResponse)
