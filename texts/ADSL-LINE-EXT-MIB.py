#
# PySNMP MIB module ADSL-LINE-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/ADSL-LINE-EXT-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 16:50:08 2022
# On host fv-az135-792 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
adslAturIntervalEntry, adslAtucIntervalEntry, adslAtucPerfDataEntry, adslLineConfProfileEntry, adslAturPerfDataEntry, adslMIB, adslLineEntry, adslLineAlarmConfProfileEntry = mibBuilder.importSymbols("ADSL-LINE-MIB", "adslAturIntervalEntry", "adslAtucIntervalEntry", "adslAtucPerfDataEntry", "adslLineConfProfileEntry", "adslAturPerfDataEntry", "adslMIB", "adslLineEntry", "adslLineAlarmConfProfileEntry")
AdslPerfCurrDayCount, AdslPerfPrevDayCount = mibBuilder.importSymbols("ADSL-TC-MIB", "AdslPerfCurrDayCount", "AdslPerfPrevDayCount")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
PerfIntervalCount, PerfCurrentCount = mibBuilder.importSymbols("PerfHist-TC-MIB", "PerfIntervalCount", "PerfCurrentCount")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Integer32, Bits, iso, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter64, ModuleIdentity, NotificationType, ObjectIdentity, MibIdentifier, IpAddress, Gauge32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "Bits", "iso", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter64", "ModuleIdentity", "NotificationType", "ObjectIdentity", "MibIdentifier", "IpAddress", "Gauge32", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
adslExtMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 94, 3))
adslExtMIB.setRevisions(('2002-12-10 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: adslExtMIB.setRevisionsDescriptions(('Initial Version, published as RFC 3440. This MIB\n                 module supplements the ADSL-LINE-MIB [RFC2662].',))
if mibBuilder.loadTexts: adslExtMIB.setLastUpdated('200212100000Z')
if mibBuilder.loadTexts: adslExtMIB.setOrganization('IETF ADSL MIB Working Group')
if mibBuilder.loadTexts: adslExtMIB.setContactInfo('\n          Faye Ly\n          Pedestal Networks\n          6503 Dumbarton Circle,\n          Fremont, CA 94555\n          Tel: +1 510-578-0158\n          Fax: +1 510-744-5152\n          E-Mail: faye@pedestalnetworks.com\n\n          Gregory Bathrick\n          Nokia Networks\n          2235 Mercury Way,\n          Fax: +1 707-535-7300\n          E-Mail: greg.bathrick@nokia.com\n\n          General Discussion:adslmib@ietf.org\n          To Subscribe: https://www1.ietf.org/mailman/listinfo/adslmib\n          Archive: https://www1.ietf.org/mailman/listinfo/adslmib\n          ')
if mibBuilder.loadTexts: adslExtMIB.setDescription('Copyright (C) The Internet Society (2002). This version of\n           this MIB module is part of RFC 3440; see the RFC itself for\n           full legal notices.\n\n           This MIB Module is a supplement to the ADSL-LINE-MIB\n           [RFC2662].')
adslExtMibObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 3, 1))
class AdslTransmissionModeType(TextualConvention, Bits):
    description = 'A set of ADSL line transmission modes, with one bit\n                per mode.  The notes (F) and (L) denote Full-Rate\n                and G.Lite respectively:\n                  Bit 00 : Regional Std. (ANSI T1.413) (F)\n                  Bit 01 : Regional Std. (ETSI DTS/TM06006) (F)\n                  Bit 02 : G.992.1 POTS non-overlapped (F)\n                  Bit 03 : G.992.1 POTS overlapped (F)\n                  Bit 04 : G.992.1 ISDN non-overlapped (F)\n                  Bit 05 : G.992.1 ISDN overlapped (F)\n                  Bit 06 : G.992.1 TCM-ISDN non-overlapped (F)\n                  Bit 07 : G.992.1 TCM-ISDN overlapped (F)\n                  Bit 08 : G.992.2 POTS non-overlapped (L)\n                  Bit 09 : G.992.2 POTS overlapped (L)\n                  Bit 10 : G.992.2 with TCM-ISDN non-overlapped (L)\n                  Bit 11 : G.992.2 with TCM-ISDN overlapped (L)\n                  Bit 12 : G.992.1 TCM-ISDN symmetric (F)\n               '
    status = 'current'
    namedValues = NamedValues(("ansit1413", 0), ("etsi", 1), ("q9921PotsNonOverlapped", 2), ("q9921PotsOverlapped", 3), ("q9921IsdnNonOverlapped", 4), ("q9921isdnOverlapped", 5), ("q9921tcmIsdnNonOverlapped", 6), ("q9921tcmIsdnOverlapped", 7), ("q9922potsNonOverlapeed", 8), ("q9922potsOverlapped", 9), ("q9922tcmIsdnNonOverlapped", 10), ("q9922tcmIsdnOverlapped", 11), ("q9921tcmIsdnSymmetric", 12))

adslLineExtTable = MibTable((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 17), )
if mibBuilder.loadTexts: adslLineExtTable.setStatus('current')
if mibBuilder.loadTexts: adslLineExtTable.setDescription("This table is an extension of RFC 2662.  It\n                  contains ADSL line configuration and\n                  monitoring information. This includes the ADSL\n                  line's capabilities and actual ADSL transmission\n                  system.")
adslLineExtEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 17, 1), )
adslLineEntry.registerAugmentions(("ADSL-LINE-EXT-MIB", "adslLineExtEntry"))
adslLineExtEntry.setIndexNames(*adslLineEntry.getIndexNames())
if mibBuilder.loadTexts: adslLineExtEntry.setStatus('current')
if mibBuilder.loadTexts: adslLineExtEntry.setDescription('An entry extends the adslLineEntry defined in\n                  [RFC2662].  Each entry corresponds to an ADSL\n                  line.')
adslLineTransAtucCap = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 17, 1, 1), AdslTransmissionModeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslLineTransAtucCap.setReference('Section 7.3.2 ITU G.997.1')
if mibBuilder.loadTexts: adslLineTransAtucCap.setStatus('current')
if mibBuilder.loadTexts: adslLineTransAtucCap.setDescription('The transmission modes, represented by a\n                  bitmask that the ATU-C is capable of\n                  supporting.  The modes available are limited\n                  by the design of the equipment.')
adslLineTransAtucConfig = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 17, 1, 2), AdslTransmissionModeType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adslLineTransAtucConfig.setReference('Section 7.3.2 ITU G.997.1')
if mibBuilder.loadTexts: adslLineTransAtucConfig.setStatus('current')
if mibBuilder.loadTexts: adslLineTransAtucConfig.setDescription("The transmission modes, represented by a bitmask,\n                  currently enabled by the ATU-C.  The manager can\n                  only set those modes that are supported by the\n\n\n                  ATU-C.  An ATU-C's supported modes are provided by\n                  AdslLineTransAtucCap.")
adslLineTransAtucActual = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 17, 1, 3), AdslTransmissionModeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslLineTransAtucActual.setReference('Section 7.3.2 ITU G.997.1 ')
if mibBuilder.loadTexts: adslLineTransAtucActual.setStatus('current')
if mibBuilder.loadTexts: adslLineTransAtucActual.setDescription("The actual transmission mode of the ATU-C.\n                  During ADSL line initialization, the ADSL\n                  Transceiver Unit - Remote terminal end (ATU-R)\n                  will determine the mode used for the link.\n                  This value will be limited a single transmission\n                  mode that is a subset of those modes enabled\n                  by the ATU-C and denoted by\n                  adslLineTransAtucConfig. After an initialization\n                  has occurred, its mode is saved as the 'Current'\n                  mode and is persistence should the link go\n                  down. This object returns 0 (i.e. BITS with no\n                  mode bit set) if the mode is not known.")
adslLineGlitePowerState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("l0", 2), ("l1", 3), ("l3", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: adslLineGlitePowerState.setStatus('current')
if mibBuilder.loadTexts: adslLineGlitePowerState.setDescription('The value of this object specifies the power\n                  state of this interface.  L0 is power on, L1 is\n                  power on but reduced and L3 is power off.  Power\n                  state cannot be configured by an operator but it\n                  can be viewed via the ifOperStatus object for the\n                  managed ADSL interface.  The value of the object\n                  ifOperStatus is set to down(2) if the ADSL\n                  interface is in power state L3 and is set to up(1)\n                  if the ADSL line interface is in power state L0 or\n                  L1. If the object adslLineTransAtucActual is set to\n                  a G.992.2 (G.Lite)-type transmission mode, the\n                  value of this object will be one of the valid power\n                  states: L0(2), L1(3), or L3(4).  Otherwise, its\n\n\n                  value will be none(1).')
adslLineConfProfileDualLite = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 17, 1, 5), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: adslLineConfProfileDualLite.setReference('Section 5.4 Profiles, RFC 2662')
if mibBuilder.loadTexts: adslLineConfProfileDualLite.setStatus('current')
if mibBuilder.loadTexts: adslLineConfProfileDualLite.setDescription("This object extends the definition an ADSL line and\n                  associated channels (when applicable) for cases\n                  when it is configured in dual mode, and operating\n                  in a G.Lite-type mode as denoted by\n                  adslLineTransAtucActual.  Dual mode exists when the\n                  object, adslLineTransAtucConfig, is configured with\n                  one or more full-rate modes and one or more G.Lite\n                  modes simultaneously.\n\n                  When 'dynamic' profiles are implemented, the value\n                  of object is equal to the index of the applicable\n                  row in the ADSL Line Configuration Profile Table,\n                  AdslLineConfProfileTable defined in ADSL-MIB\n                  [RFC2662].\n\n                  In the case when dual-mode has not been enabled,\n                  the value of the object will be equal to the value\n                  of the object adslLineConfProfile [RFC2662].\n\n                  When `static' profiles are implemented, in much\n                  like the case of the object,\n                  adslLineConfProfileName [RFC2662], this object's\n                  value will need to algorithmically represent the\n                  characteristics of the line.  In this case, the\n                  value of the line's ifIndex plus a value indicating\n                  the line mode type (e.g., G.Lite, Full-rate) will\n                  be used. Therefore, the profile's name is a string\n                  concatenating the ifIndex and one of the follow\n                  values: Full or Lite. This string will be\n                  fixed-length (i.e., 14) with leading zero(s).  For\n                  example, the profile name for ifIndex that equals\n                  '15' and is a full rate line, it will be\n                  '0000000015Full'.")
adslAtucPerfDataExtTable = MibTable((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18), )
if mibBuilder.loadTexts: adslAtucPerfDataExtTable.setStatus('current')
if mibBuilder.loadTexts: adslAtucPerfDataExtTable.setDescription('This table extends adslAtucPerfDataTable [RFC2662]\n                  with additional ADSL physical line counter\n                  information such as unavailable seconds-line and\n                  severely errored seconds-line.')
adslAtucPerfDataExtEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1), )
adslAtucPerfDataEntry.registerAugmentions(("ADSL-LINE-EXT-MIB", "adslAtucPerfDataExtEntry"))
adslAtucPerfDataExtEntry.setIndexNames(*adslAtucPerfDataEntry.getIndexNames())
if mibBuilder.loadTexts: adslAtucPerfDataExtEntry.setStatus('current')
if mibBuilder.loadTexts: adslAtucPerfDataExtEntry.setDescription('An entry extends the adslAtucPerfDataEntry defined\n                  in [RFC2662].  Each entry corresponds to an ADSL\n                  line.')
adslAtucPerfStatFastR = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 1), Counter32()).setUnits('line retrains').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucPerfStatFastR.setReference('ITU G.997.1 Section 7.4.15.1 ')
if mibBuilder.loadTexts: adslAtucPerfStatFastR.setStatus('current')
if mibBuilder.loadTexts: adslAtucPerfStatFastR.setDescription('The value of this object reports the count of\n                  the number of fast line bs since last\n                  agent reset.')
adslAtucPerfStatFailedFastR = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 2), Counter32()).setUnits('line retrains').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucPerfStatFailedFastR.setReference('ITU G.997.1 Section 7.4.15.2 ')
if mibBuilder.loadTexts: adslAtucPerfStatFailedFastR.setStatus('current')
if mibBuilder.loadTexts: adslAtucPerfStatFailedFastR.setDescription('The value of this object reports the count of\n                  the number of failed fast line retrains since\n                  last agent reset.')
adslAtucPerfStatSesL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 3), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucPerfStatSesL.setReference('ITU G.997.1 Section 7.2.1.1.7 ')
if mibBuilder.loadTexts: adslAtucPerfStatSesL.setStatus('current')
if mibBuilder.loadTexts: adslAtucPerfStatSesL.setDescription('The value of this object reports the count of\n                  the number of severely errored seconds-line since\n                  last agent reset.')
adslAtucPerfStatUasL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 4), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucPerfStatUasL.setReference('ITU G.997.1 Section 7.2.1.1.9 ')
if mibBuilder.loadTexts: adslAtucPerfStatUasL.setStatus('current')
if mibBuilder.loadTexts: adslAtucPerfStatUasL.setDescription('The value of this object reports the count of\n                  the number of unavailable seconds-line since\n                  last agent reset.')
adslAtucPerfCurr15MinFastR = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 5), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucPerfCurr15MinFastR.setReference('ITU G.997.1 Section 7.4.15.1 ')
if mibBuilder.loadTexts: adslAtucPerfCurr15MinFastR.setStatus('current')
if mibBuilder.loadTexts: adslAtucPerfCurr15MinFastR.setDescription('For the current 15-minute interval,\n                  adslAtucPerfCurr15MinFastR reports the current\n                  number of seconds during which there have been\n\n\n                  fast retrains.')
adslAtucPerfCurr15MinFailedFastR = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 6), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucPerfCurr15MinFailedFastR.setReference('ITU G.997.1 Section 7.4.15.2 ')
if mibBuilder.loadTexts: adslAtucPerfCurr15MinFailedFastR.setStatus('current')
if mibBuilder.loadTexts: adslAtucPerfCurr15MinFailedFastR.setDescription('For the current 15-minute interval,\n                  adslAtucPerfCurr15MinFailedFastR reports the\n                  current number of seconds during which there\n                  have been failed fast retrains.')
adslAtucPerfCurr15MinSesL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 7), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucPerfCurr15MinSesL.setReference('ITU G.997.1 Section 7.2.1.1.7 ')
if mibBuilder.loadTexts: adslAtucPerfCurr15MinSesL.setStatus('current')
if mibBuilder.loadTexts: adslAtucPerfCurr15MinSesL.setDescription('For the current 15-minute interval,\n                  adslAtucPerfCurr15MinSesL reports the current\n                  number of seconds during which there have been\n                  severely errored seconds-line.')
adslAtucPerfCurr15MinUasL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 8), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucPerfCurr15MinUasL.setReference('ITU G.997.1 Section 7.2.1.1.9 ')
if mibBuilder.loadTexts: adslAtucPerfCurr15MinUasL.setStatus('current')
if mibBuilder.loadTexts: adslAtucPerfCurr15MinUasL.setDescription('For the current 15-minute interval,\n                  adslAtucPerfCurr15MinUasL reports the current\n                  number of seconds during which there have been\n                  unavailable seconds-line.')
adslAtucPerfCurr1DayFastR = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 9), AdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucPerfCurr1DayFastR.setReference('ITU G.997.1 Section 7.4.15.1 ')
if mibBuilder.loadTexts: adslAtucPerfCurr1DayFastR.setStatus('current')
if mibBuilder.loadTexts: adslAtucPerfCurr1DayFastR.setDescription('For the current day as measured by\n                  adslAtucPerfCurr1DayTimeElapsed [RFC2662],\n                  adslAtucPerfCurr1DayFastR reports the number\n                  of seconds during which there have been\n                  fast retrains.')
adslAtucPerfCurr1DayFailedFastR = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 10), AdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucPerfCurr1DayFailedFastR.setReference('ITU G.997.1 Section 7.4.15.2 ')
if mibBuilder.loadTexts: adslAtucPerfCurr1DayFailedFastR.setStatus('current')
if mibBuilder.loadTexts: adslAtucPerfCurr1DayFailedFastR.setDescription('For the current day as measured by\n                  adslAtucPerfCurr1DayTimeElapsed [RFC2662],\n                  adslAtucPerfCurr1DayFailedFastR reports the\n                  number of seconds during which there have been\n                  failed fast retrains.')
adslAtucPerfCurr1DaySesL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 11), AdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucPerfCurr1DaySesL.setReference('ITU G.997.1 Section 7.2.1.1.7 ')
if mibBuilder.loadTexts: adslAtucPerfCurr1DaySesL.setStatus('current')
if mibBuilder.loadTexts: adslAtucPerfCurr1DaySesL.setDescription('For the current day as measured by\n                  adslAtucPerfCurr1DayTimeElapsed [RFC2662],\n                  adslAtucPerfCurr1DaySesL reports the\n                  number of seconds during which there have been\n                  severely errored seconds-line.')
adslAtucPerfCurr1DayUasL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 12), AdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucPerfCurr1DayUasL.setReference('ITU G.997.1 Section 7.2.1.1.9 ')
if mibBuilder.loadTexts: adslAtucPerfCurr1DayUasL.setStatus('current')
if mibBuilder.loadTexts: adslAtucPerfCurr1DayUasL.setDescription('For the current day as measured by\n                  adslAtucPerfCurr1DayTimeElapsed [RFC2662],\n                  adslAtucPerfCurr1DayUasL reports the\n                  number of seconds during which there have been\n                  unavailable seconds-line.')
adslAtucPerfPrev1DayFastR = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 13), AdslPerfPrevDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucPerfPrev1DayFastR.setReference('ITU G.997.1 Section 7.4.15.1 ')
if mibBuilder.loadTexts: adslAtucPerfPrev1DayFastR.setStatus('current')
if mibBuilder.loadTexts: adslAtucPerfPrev1DayFastR.setDescription('For the previous day, adslAtucPerfPrev1DayFastR\n                  reports the number of seconds during which there\n                  were fast retrains.')
adslAtucPerfPrev1DayFailedFastR = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 14), AdslPerfPrevDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucPerfPrev1DayFailedFastR.setReference('ITU G.997.1 Section 7.4.15.2 ')
if mibBuilder.loadTexts: adslAtucPerfPrev1DayFailedFastR.setStatus('current')
if mibBuilder.loadTexts: adslAtucPerfPrev1DayFailedFastR.setDescription('For the previous day,\n                  adslAtucPerfPrev1DayFailedFastR reports the number\n                  of seconds during which there were failed fast\n                  retrains.')
adslAtucPerfPrev1DaySesL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 15), AdslPerfPrevDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucPerfPrev1DaySesL.setReference('ITU G.997.1 Section 7.2.1.1.7 ')
if mibBuilder.loadTexts: adslAtucPerfPrev1DaySesL.setStatus('current')
if mibBuilder.loadTexts: adslAtucPerfPrev1DaySesL.setDescription('For the previous day, adslAtucPerfPrev1DaySesL\n                  reports the number of seconds during which there\n                  were severely errored seconds-line.')
adslAtucPerfPrev1DayUasL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 18, 1, 16), AdslPerfPrevDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucPerfPrev1DayUasL.setReference('ITU G.997.1 Section 7.2.1.1.9 ')
if mibBuilder.loadTexts: adslAtucPerfPrev1DayUasL.setStatus('current')
if mibBuilder.loadTexts: adslAtucPerfPrev1DayUasL.setDescription('For the previous day, adslAtucPerfPrev1DayUasL\n                  reports the number of seconds during which there\n\n\n                  were unavailable seconds-line.')
adslAtucIntervalExtTable = MibTable((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 19), )
if mibBuilder.loadTexts: adslAtucIntervalExtTable.setStatus('current')
if mibBuilder.loadTexts: adslAtucIntervalExtTable.setDescription("This table provides one row for each ATU-C\n                  performance data collection interval for\n                  ADSL physical interfaces whose\n                  IfEntries' ifType is equal to adsl(94).")
adslAtucIntervalExtEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 19, 1), )
adslAtucIntervalEntry.registerAugmentions(("ADSL-LINE-EXT-MIB", "adslAtucIntervalExtEntry"))
adslAtucIntervalExtEntry.setIndexNames(*adslAtucIntervalEntry.getIndexNames())
if mibBuilder.loadTexts: adslAtucIntervalExtEntry.setStatus('current')
if mibBuilder.loadTexts: adslAtucIntervalExtEntry.setDescription('An entry in the\n                              adslAtucIntervalExtTable.')
adslAtucIntervalFastR = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 19, 1, 1), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucIntervalFastR.setStatus('current')
if mibBuilder.loadTexts: adslAtucIntervalFastR.setDescription('For the current interval, adslAtucIntervalFastR\n                  reports the current number of seconds during which\n                  there have been fast retrains.')
adslAtucIntervalFailedFastR = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 19, 1, 2), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucIntervalFailedFastR.setStatus('current')
if mibBuilder.loadTexts: adslAtucIntervalFailedFastR.setDescription('For the each interval, adslAtucIntervalFailedFastR\n                  reports the number of seconds during which\n                  there have been failed fast retrains.')
adslAtucIntervalSesL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 19, 1, 3), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucIntervalSesL.setStatus('current')
if mibBuilder.loadTexts: adslAtucIntervalSesL.setDescription('For the each interval, adslAtucIntervalSesL\n                  reports the number of seconds during which\n                  there have been severely errored seconds-line.')
adslAtucIntervalUasL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 19, 1, 4), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAtucIntervalUasL.setStatus('current')
if mibBuilder.loadTexts: adslAtucIntervalUasL.setDescription('For the each interval, adslAtucIntervalUasL\n                  reports the number of seconds during which\n                  there have been unavailable seconds-line.')
adslAturPerfDataExtTable = MibTable((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 20), )
if mibBuilder.loadTexts: adslAturPerfDataExtTable.setStatus('current')
if mibBuilder.loadTexts: adslAturPerfDataExtTable.setDescription('This table contains ADSL physical line counters\n                  not defined in the adslAturPerfDataTable\n                  from the ADSL-LINE-MIB [RFC2662].')
adslAturPerfDataExtEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 20, 1), )
adslAturPerfDataEntry.registerAugmentions(("ADSL-LINE-EXT-MIB", "adslAturPerfDataExtEntry"))
adslAturPerfDataExtEntry.setIndexNames(*adslAturPerfDataEntry.getIndexNames())
if mibBuilder.loadTexts: adslAturPerfDataExtEntry.setStatus('current')
if mibBuilder.loadTexts: adslAturPerfDataExtEntry.setDescription('An entry extends the adslAturPerfDataEntry defined\n                  in [RFC2662].  Each entry corresponds to an ADSL\n                  line.')
adslAturPerfStatSesL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 20, 1, 1), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAturPerfStatSesL.setReference('ITU G.997.1 Section 7.2.1.1.7 ')
if mibBuilder.loadTexts: adslAturPerfStatSesL.setStatus('current')
if mibBuilder.loadTexts: adslAturPerfStatSesL.setDescription('The value of this object reports the count of\n                  severely errored second-line since the last agent\n                  reset.')
adslAturPerfStatUasL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 20, 1, 2), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAturPerfStatUasL.setReference('ITU G.997.1 Section 7.2.1.2.9 ')
if mibBuilder.loadTexts: adslAturPerfStatUasL.setStatus('current')
if mibBuilder.loadTexts: adslAturPerfStatUasL.setDescription('The value of this object reports the count of\n                  unavailable seconds-line since the last agent\n                  reset.')
adslAturPerfCurr15MinSesL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 20, 1, 3), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAturPerfCurr15MinSesL.setReference('ITU G.997.1 Section 7.2.1.2.7 ')
if mibBuilder.loadTexts: adslAturPerfCurr15MinSesL.setStatus('current')
if mibBuilder.loadTexts: adslAturPerfCurr15MinSesL.setDescription('For the current 15-minute interval,\n                  adslAturPerfCurr15MinSesL reports the current\n                  number of seconds during which there have been\n                  severely errored seconds-line.')
adslAturPerfCurr15MinUasL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 20, 1, 4), PerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAturPerfCurr15MinUasL.setReference('ITU G.997.1 Section 7.2.1.2.9 ')
if mibBuilder.loadTexts: adslAturPerfCurr15MinUasL.setStatus('current')
if mibBuilder.loadTexts: adslAturPerfCurr15MinUasL.setDescription('For the current 15-minute interval,\n                  adslAturPerfCurr15MinUasL reports the current\n                  number of seconds during which there have been\n                  available seconds-line.')
adslAturPerfCurr1DaySesL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 20, 1, 5), AdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAturPerfCurr1DaySesL.setReference('ITU G.997.1 Section 7.2.1.2.7 ')
if mibBuilder.loadTexts: adslAturPerfCurr1DaySesL.setStatus('current')
if mibBuilder.loadTexts: adslAturPerfCurr1DaySesL.setDescription('For the current day as measured by\n                  adslAturPerfCurr1DayTimeElapsed [RFC2662],\n                  adslAturPerfCurr1DaySesL reports the\n                  number of seconds during which there have been\n                  severely errored seconds-line.')
adslAturPerfCurr1DayUasL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 20, 1, 6), AdslPerfCurrDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAturPerfCurr1DayUasL.setReference('ITU G.997.1 Section 7.2.1.2.9 ')
if mibBuilder.loadTexts: adslAturPerfCurr1DayUasL.setStatus('current')
if mibBuilder.loadTexts: adslAturPerfCurr1DayUasL.setDescription('For the current day as measured by\n                  adslAturPerfCurr1DayTimeElapsed [RFC2662],\n                  adslAturPerfCurr1DayUasL reports the\n                  number of seconds during which there have been\n                  unavailable seconds-line.')
adslAturPerfPrev1DaySesL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 20, 1, 7), AdslPerfPrevDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAturPerfPrev1DaySesL.setReference('ITU G.997.1 Section 7.2.1.2.7 ')
if mibBuilder.loadTexts: adslAturPerfPrev1DaySesL.setStatus('current')
if mibBuilder.loadTexts: adslAturPerfPrev1DaySesL.setDescription('For the previous day, adslAturPerfPrev1DaySesL\n                  reports the number of seconds during which there\n                  were severely errored seconds-line.')
adslAturPerfPrev1DayUasL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 20, 1, 8), AdslPerfPrevDayCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAturPerfPrev1DayUasL.setReference('ITU G.997.1 Section 7.2.1.2.9 ')
if mibBuilder.loadTexts: adslAturPerfPrev1DayUasL.setStatus('current')
if mibBuilder.loadTexts: adslAturPerfPrev1DayUasL.setDescription('For the previous day, adslAturPerfPrev1DayUasL\n                  reports the number of seconds during which there\n                  were severely errored seconds-line.')
adslAturIntervalExtTable = MibTable((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 21), )
if mibBuilder.loadTexts: adslAturIntervalExtTable.setStatus('current')
if mibBuilder.loadTexts: adslAturIntervalExtTable.setDescription("This table provides one row for each ATU-R\n                  performance data collection interval for\n                  ADSL physical interfaces whose\n                  IfEntries' ifType is equal to adsl(94).")
adslAturIntervalExtEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 21, 1), )
adslAturIntervalEntry.registerAugmentions(("ADSL-LINE-EXT-MIB", "adslAturIntervalExtEntry"))
adslAturIntervalExtEntry.setIndexNames(*adslAturIntervalEntry.getIndexNames())
if mibBuilder.loadTexts: adslAturIntervalExtEntry.setStatus('current')
if mibBuilder.loadTexts: adslAturIntervalExtEntry.setDescription('An entry in the\n                              adslAturIntervalExtTable.')
adslAturIntervalSesL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 21, 1, 1), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAturIntervalSesL.setStatus('current')
if mibBuilder.loadTexts: adslAturIntervalSesL.setDescription('For the each interval, adslAturIntervalSesL\n                  reports the number of seconds during which\n                  there have been severely errored seconds-line.')
adslAturIntervalUasL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 21, 1, 2), PerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: adslAturIntervalUasL.setStatus('current')
if mibBuilder.loadTexts: adslAturIntervalUasL.setDescription('For the each interval, adslAturIntervalUasL\n                  reports the number of seconds during which\n                  there have been unavailable seconds-line.')
adslConfProfileExtTable = MibTable((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 22), )
if mibBuilder.loadTexts: adslConfProfileExtTable.setStatus('current')
if mibBuilder.loadTexts: adslConfProfileExtTable.setDescription('The adslConfProfileExtTable extends the ADSL line\n                  profile configuration information in the\n                  adslLineConfProfileTable from the ADSL-LINE-MIB\n                  [RFC2662] by adding the ability to configure the\n                  ADSL physical line mode.')
adslConfProfileExtEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 22, 1), )
adslLineConfProfileEntry.registerAugmentions(("ADSL-LINE-EXT-MIB", "adslConfProfileExtEntry"))
adslConfProfileExtEntry.setIndexNames(*adslLineConfProfileEntry.getIndexNames())
if mibBuilder.loadTexts: adslConfProfileExtEntry.setStatus('current')
if mibBuilder.loadTexts: adslConfProfileExtEntry.setDescription('An entry extends the adslLineConfProfileEntry\n                  defined in [RFC2662].  Each entry corresponds to an\n                  ADSL line profile.')
adslConfProfileLineType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 22, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noChannel", 1), ("fastOnly", 2), ("interleavedOnly", 3), ("fastOrInterleaved", 4), ("fastAndInterleaved", 5))).clone('fastOnly')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: adslConfProfileLineType.setStatus('current')
if mibBuilder.loadTexts: adslConfProfileLineType.setDescription('This object is used to configure the ADSL physical\n                  line mode.  It has following valid values:\n\n                  noChannel(1), when no channels exist.\n                  fastOnly(2), when only fast channel exists.\n                  interleavedOnly(3), when only interleaved channel\n                      exist.\n                  fastOrInterleaved(4), when either fast or\n                      interleaved channels can exist, but only one\n                      at any time.\n                  fastAndInterleaved(5), when both the fast channel\n                      and the interleaved channel exist.\n\n                  In the case when no value has been set, the default\n                  Value is noChannel(1).\n                  ')
adslAlarmConfProfileExtTable = MibTable((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 23), )
if mibBuilder.loadTexts: adslAlarmConfProfileExtTable.setStatus('current')
if mibBuilder.loadTexts: adslAlarmConfProfileExtTable.setDescription('This table extends the\n                  adslLineAlarmConfProfileTable and provides\n                  threshold parameters for all the counters defined\n                  in this MIB module.')
adslAlarmConfProfileExtEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 23, 1), )
adslLineAlarmConfProfileEntry.registerAugmentions(("ADSL-LINE-EXT-MIB", "adslAlarmConfProfileExtEntry"))
adslAlarmConfProfileExtEntry.setIndexNames(*adslLineAlarmConfProfileEntry.getIndexNames())
if mibBuilder.loadTexts: adslAlarmConfProfileExtEntry.setStatus('current')
if mibBuilder.loadTexts: adslAlarmConfProfileExtEntry.setDescription('An entry extends the adslLineAlarmConfProfileTable\n                  defined in [RFC2662].  Each entry corresponds to\n                  an ADSL alarm profile.')
adslAtucThreshold15MinFailedFastR = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 23, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: adslAtucThreshold15MinFailedFastR.setStatus('current')
if mibBuilder.loadTexts: adslAtucThreshold15MinFailedFastR.setDescription("The first time the value of the corresponding\n                  instance of adslAtucPerfCurr15MinFailedFastR\n                  reaches or exceeds this value within a given\n                  15-minute performance data collection period,\n                  an adslAtucFailedFastRThreshTrap  notification\n                  will be generated. The value '0' will disable\n                  the notification. The default value of this\n                  object is '0'.")
adslAtucThreshold15MinSesL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 23, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: adslAtucThreshold15MinSesL.setStatus('current')
if mibBuilder.loadTexts: adslAtucThreshold15MinSesL.setDescription("The first time the value of the corresponding\n                  instance of adslAtucPerf15MinSesL reaches or\n                  exceeds this value within a given 15-minute\n                  performance data collection period, an\n                  adslAtucSesLThreshTrap notification will be\n                  generated. The value '0' will disable the\n                  notification.  The default value of this\n                  object is '0'.")
adslAtucThreshold15MinUasL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 23, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: adslAtucThreshold15MinUasL.setStatus('current')
if mibBuilder.loadTexts: adslAtucThreshold15MinUasL.setDescription("The first time the value of the corresponding\n                  instance of adslAtucPerf15MinUasL reaches or\n                  exceeds this value within a given 15-minute\n                  performance data collection period, an\n                  adslAtucUasLThreshTrap notification will be\n                  generated. The value '0' will disable the\n                  notification.  The default value of this\n                  object is '0'.")
adslAturThreshold15MinSesL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 23, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: adslAturThreshold15MinSesL.setStatus('current')
if mibBuilder.loadTexts: adslAturThreshold15MinSesL.setDescription("The first time the value of the corresponding\n                  instance of adslAturPerf15MinSesL reaches or\n                  exceeds this value within a given 15-minute\n                  performance data collection period, an\n                  adslAturSesLThreshTrap notification will be\n                  generated. The value '0' will disable the\n                  notification.  The default value of this\n                  object is '0'.")
adslAturThreshold15MinUasL = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 23, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 900))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: adslAturThreshold15MinUasL.setStatus('current')
if mibBuilder.loadTexts: adslAturThreshold15MinUasL.setDescription("The first time the value of the corresponding\n                  instance of adslAturPerf15MinUasL reaches or\n                  exceeds this value within a given 15-minute\n                  performance data collection period, an\n\n\n                  adslAturUasLThreshTrap notification will be\n                  generated. The value '0' will disable the\n                  notification.  The default value of this\n                  object is '0'.")
adslExtTraps = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24))
adslExtAtucTraps = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24, 1))
adslExtAtucTrapsPrefix = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24, 1, 0))
adslAtucFailedFastRThreshTrap = NotificationType((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24, 1, 0, 1)).setObjects(("ADSL-LINE-EXT-MIB", "adslAtucPerfCurr15MinFailedFastR"))
if mibBuilder.loadTexts: adslAtucFailedFastRThreshTrap.setStatus('current')
if mibBuilder.loadTexts: adslAtucFailedFastRThreshTrap.setDescription('Failed Fast Retrains 15-minute threshold reached.')
adslAtucSesLThreshTrap = NotificationType((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24, 1, 0, 2)).setObjects(("ADSL-LINE-EXT-MIB", "adslAtucPerfCurr15MinSesL"))
if mibBuilder.loadTexts: adslAtucSesLThreshTrap.setStatus('current')
if mibBuilder.loadTexts: adslAtucSesLThreshTrap.setDescription('Severely errored seconds-line 15-minute threshold\n                  reached.')
adslAtucUasLThreshTrap = NotificationType((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24, 1, 0, 3)).setObjects(("ADSL-LINE-EXT-MIB", "adslAtucPerfCurr15MinUasL"))
if mibBuilder.loadTexts: adslAtucUasLThreshTrap.setStatus('current')
if mibBuilder.loadTexts: adslAtucUasLThreshTrap.setDescription('Unavailable seconds-line 15-minute threshold\n                  reached.')
adslExtAturTraps = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24, 2))
adslExtAturTrapsPrefix = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24, 2, 0))
adslAturSesLThreshTrap = NotificationType((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24, 2, 0, 1)).setObjects(("ADSL-LINE-EXT-MIB", "adslAturPerfCurr15MinSesL"))
if mibBuilder.loadTexts: adslAturSesLThreshTrap.setStatus('current')
if mibBuilder.loadTexts: adslAturSesLThreshTrap.setDescription('Severely errored seconds-line 15-minute threshold\n                  reached.')
adslAturUasLThreshTrap = NotificationType((1, 3, 6, 1, 2, 1, 10, 94, 3, 1, 24, 2, 0, 2)).setObjects(("ADSL-LINE-EXT-MIB", "adslAturPerfCurr15MinUasL"))
if mibBuilder.loadTexts: adslAturUasLThreshTrap.setStatus('current')
if mibBuilder.loadTexts: adslAturUasLThreshTrap.setDescription('Unavailable seconds-line 15-minute threshold\n                  reached.')
adslExtConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 3, 2))
adslExtGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 3, 2, 1))
adslExtCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 94, 3, 2, 2))
adslExtLineMibAtucCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 94, 3, 2, 2, 1)).setObjects(("ADSL-LINE-EXT-MIB", "adslExtLineGroup"), ("ADSL-LINE-EXT-MIB", "adslExtLineConfProfileControlGroup"), ("ADSL-LINE-EXT-MIB", "adslExtLineAlarmConfProfileGroup"), ("ADSL-LINE-EXT-MIB", "adslExtAtucPhysPerfCounterGroup"), ("ADSL-LINE-EXT-MIB", "adslExtAturPhysPerfCounterGroup"), ("ADSL-LINE-EXT-MIB", "adslExtNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adslExtLineMibAtucCompliance = adslExtLineMibAtucCompliance.setStatus('current')
if mibBuilder.loadTexts: adslExtLineMibAtucCompliance.setDescription('The compliance statement for SNMP entities which\n                  represent ADSL ATU-C interfaces.')
adslExtLineGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 94, 3, 2, 1, 1)).setObjects(("ADSL-LINE-EXT-MIB", "adslLineConfProfileDualLite"), ("ADSL-LINE-EXT-MIB", "adslLineTransAtucCap"), ("ADSL-LINE-EXT-MIB", "adslLineTransAtucConfig"), ("ADSL-LINE-EXT-MIB", "adslLineTransAtucActual"), ("ADSL-LINE-EXT-MIB", "adslLineGlitePowerState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adslExtLineGroup = adslExtLineGroup.setStatus('current')
if mibBuilder.loadTexts: adslExtLineGroup.setDescription('A collection of objects providing extended\n                 configuration information about an ADSL Line.')
adslExtAtucPhysPerfCounterGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 94, 3, 2, 1, 2)).setObjects(("ADSL-LINE-EXT-MIB", "adslAtucPerfStatFastR"), ("ADSL-LINE-EXT-MIB", "adslAtucPerfStatFailedFastR"), ("ADSL-LINE-EXT-MIB", "adslAtucPerfCurr15MinFastR"), ("ADSL-LINE-EXT-MIB", "adslAtucPerfCurr15MinFailedFastR"), ("ADSL-LINE-EXT-MIB", "adslAtucPerfCurr1DayFastR"), ("ADSL-LINE-EXT-MIB", "adslAtucPerfCurr1DayFailedFastR"), ("ADSL-LINE-EXT-MIB", "adslAtucPerfPrev1DayFastR"), ("ADSL-LINE-EXT-MIB", "adslAtucPerfPrev1DayFailedFastR"), ("ADSL-LINE-EXT-MIB", "adslAtucPerfStatSesL"), ("ADSL-LINE-EXT-MIB", "adslAtucPerfStatUasL"), ("ADSL-LINE-EXT-MIB", "adslAtucPerfCurr15MinSesL"), ("ADSL-LINE-EXT-MIB", "adslAtucPerfCurr15MinUasL"), ("ADSL-LINE-EXT-MIB", "adslAtucPerfCurr1DaySesL"), ("ADSL-LINE-EXT-MIB", "adslAtucPerfCurr1DayUasL"), ("ADSL-LINE-EXT-MIB", "adslAtucPerfPrev1DaySesL"), ("ADSL-LINE-EXT-MIB", "adslAtucPerfPrev1DayUasL"), ("ADSL-LINE-EXT-MIB", "adslAtucIntervalFastR"), ("ADSL-LINE-EXT-MIB", "adslAtucIntervalFailedFastR"), ("ADSL-LINE-EXT-MIB", "adslAtucIntervalSesL"), ("ADSL-LINE-EXT-MIB", "adslAtucIntervalUasL"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adslExtAtucPhysPerfCounterGroup = adslExtAtucPhysPerfCounterGroup.setStatus('current')
if mibBuilder.loadTexts: adslExtAtucPhysPerfCounterGroup.setDescription('A collection of objects providing raw performance\n                 counts on an ADSL Line (ATU-C end).')
adslExtAturPhysPerfCounterGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 94, 3, 2, 1, 3)).setObjects(("ADSL-LINE-EXT-MIB", "adslAturPerfStatSesL"), ("ADSL-LINE-EXT-MIB", "adslAturPerfStatUasL"), ("ADSL-LINE-EXT-MIB", "adslAturPerfCurr15MinSesL"), ("ADSL-LINE-EXT-MIB", "adslAturPerfCurr15MinUasL"), ("ADSL-LINE-EXT-MIB", "adslAturPerfCurr1DaySesL"), ("ADSL-LINE-EXT-MIB", "adslAturPerfCurr1DayUasL"), ("ADSL-LINE-EXT-MIB", "adslAturPerfPrev1DaySesL"), ("ADSL-LINE-EXT-MIB", "adslAturPerfPrev1DayUasL"), ("ADSL-LINE-EXT-MIB", "adslAturIntervalSesL"), ("ADSL-LINE-EXT-MIB", "adslAturIntervalUasL"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adslExtAturPhysPerfCounterGroup = adslExtAturPhysPerfCounterGroup.setStatus('current')
if mibBuilder.loadTexts: adslExtAturPhysPerfCounterGroup.setDescription('A collection of objects providing raw performance\n                 counts on an ADSL Line (ATU-C end).')
adslExtLineConfProfileControlGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 94, 3, 2, 1, 4)).setObjects(("ADSL-LINE-EXT-MIB", "adslConfProfileLineType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adslExtLineConfProfileControlGroup = adslExtLineConfProfileControlGroup.setStatus('current')
if mibBuilder.loadTexts: adslExtLineConfProfileControlGroup.setDescription('A collection of objects providing profile\n                 control for the ADSL system.')
adslExtLineAlarmConfProfileGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 94, 3, 2, 1, 5)).setObjects(("ADSL-LINE-EXT-MIB", "adslAtucThreshold15MinFailedFastR"), ("ADSL-LINE-EXT-MIB", "adslAtucThreshold15MinSesL"), ("ADSL-LINE-EXT-MIB", "adslAtucThreshold15MinUasL"), ("ADSL-LINE-EXT-MIB", "adslAturThreshold15MinSesL"), ("ADSL-LINE-EXT-MIB", "adslAturThreshold15MinUasL"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adslExtLineAlarmConfProfileGroup = adslExtLineAlarmConfProfileGroup.setStatus('current')
if mibBuilder.loadTexts: adslExtLineAlarmConfProfileGroup.setDescription('A collection of objects providing alarm profile\n                 control for the ADSL system.')
adslExtNotificationsGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 10, 94, 3, 2, 1, 6)).setObjects(("ADSL-LINE-EXT-MIB", "adslAtucFailedFastRThreshTrap"), ("ADSL-LINE-EXT-MIB", "adslAtucSesLThreshTrap"), ("ADSL-LINE-EXT-MIB", "adslAtucUasLThreshTrap"), ("ADSL-LINE-EXT-MIB", "adslAturSesLThreshTrap"), ("ADSL-LINE-EXT-MIB", "adslAturUasLThreshTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adslExtNotificationsGroup = adslExtNotificationsGroup.setStatus('current')
if mibBuilder.loadTexts: adslExtNotificationsGroup.setDescription('The collection of ADSL extension notifications.')
mibBuilder.exportSymbols("ADSL-LINE-EXT-MIB", adslAtucPerfCurr1DayUasL=adslAtucPerfCurr1DayUasL, adslAtucIntervalExtTable=adslAtucIntervalExtTable, adslAtucPerfCurr15MinFailedFastR=adslAtucPerfCurr15MinFailedFastR, adslLineConfProfileDualLite=adslLineConfProfileDualLite, adslLineGlitePowerState=adslLineGlitePowerState, adslAtucPerfCurr1DaySesL=adslAtucPerfCurr1DaySesL, adslAtucThreshold15MinSesL=adslAtucThreshold15MinSesL, adslAtucIntervalUasL=adslAtucIntervalUasL, adslExtMibObjects=adslExtMibObjects, adslExtAturTrapsPrefix=adslExtAturTrapsPrefix, adslAtucPerfStatFailedFastR=adslAtucPerfStatFailedFastR, AdslTransmissionModeType=AdslTransmissionModeType, adslAtucPerfStatUasL=adslAtucPerfStatUasL, adslAturPerfPrev1DayUasL=adslAturPerfPrev1DayUasL, adslAtucThreshold15MinUasL=adslAtucThreshold15MinUasL, adslAtucSesLThreshTrap=adslAtucSesLThreshTrap, adslExtAturPhysPerfCounterGroup=adslExtAturPhysPerfCounterGroup, adslAtucUasLThreshTrap=adslAtucUasLThreshTrap, adslExtGroups=adslExtGroups, adslAtucPerfDataExtTable=adslAtucPerfDataExtTable, adslAturPerfCurr15MinUasL=adslAturPerfCurr15MinUasL, adslAtucPerfCurr15MinSesL=adslAtucPerfCurr15MinSesL, adslAturIntervalExtEntry=adslAturIntervalExtEntry, adslAturPerfCurr15MinSesL=adslAturPerfCurr15MinSesL, adslExtAturTraps=adslExtAturTraps, adslConfProfileExtEntry=adslConfProfileExtEntry, adslAturIntervalUasL=adslAturIntervalUasL, adslExtConformance=adslExtConformance, adslExtLineConfProfileControlGroup=adslExtLineConfProfileControlGroup, adslAtucPerfCurr1DayFailedFastR=adslAtucPerfCurr1DayFailedFastR, adslAturPerfPrev1DaySesL=adslAturPerfPrev1DaySesL, adslAtucPerfDataExtEntry=adslAtucPerfDataExtEntry, adslAtucPerfCurr15MinFastR=adslAtucPerfCurr15MinFastR, adslAlarmConfProfileExtEntry=adslAlarmConfProfileExtEntry, adslExtLineMibAtucCompliance=adslExtLineMibAtucCompliance, adslExtAtucTraps=adslExtAtucTraps, adslAturPerfStatUasL=adslAturPerfStatUasL, adslAtucPerfCurr1DayFastR=adslAtucPerfCurr1DayFastR, adslAtucThreshold15MinFailedFastR=adslAtucThreshold15MinFailedFastR, adslExtMIB=adslExtMIB, adslExtLineAlarmConfProfileGroup=adslExtLineAlarmConfProfileGroup, adslAturThreshold15MinSesL=adslAturThreshold15MinSesL, adslAtucIntervalExtEntry=adslAtucIntervalExtEntry, adslLineTransAtucConfig=adslLineTransAtucConfig, adslConfProfileExtTable=adslConfProfileExtTable, adslAtucPerfPrev1DaySesL=adslAtucPerfPrev1DaySesL, adslAturSesLThreshTrap=adslAturSesLThreshTrap, adslAturPerfCurr1DaySesL=adslAturPerfCurr1DaySesL, adslConfProfileLineType=adslConfProfileLineType, adslAturPerfDataExtEntry=adslAturPerfDataExtEntry, adslAturPerfStatSesL=adslAturPerfStatSesL, adslAturThreshold15MinUasL=adslAturThreshold15MinUasL, adslAturPerfDataExtTable=adslAturPerfDataExtTable, adslAturUasLThreshTrap=adslAturUasLThreshTrap, adslLineTransAtucCap=adslLineTransAtucCap, adslAtucPerfPrev1DayFailedFastR=adslAtucPerfPrev1DayFailedFastR, adslExtAtucPhysPerfCounterGroup=adslExtAtucPhysPerfCounterGroup, adslAtucIntervalFailedFastR=adslAtucIntervalFailedFastR, adslAturPerfCurr1DayUasL=adslAturPerfCurr1DayUasL, adslExtLineGroup=adslExtLineGroup, adslExtAtucTrapsPrefix=adslExtAtucTrapsPrefix, adslLineExtTable=adslLineExtTable, adslAturIntervalExtTable=adslAturIntervalExtTable, adslExtNotificationsGroup=adslExtNotificationsGroup, adslExtTraps=adslExtTraps, adslAtucPerfStatFastR=adslAtucPerfStatFastR, adslLineTransAtucActual=adslLineTransAtucActual, adslAtucPerfPrev1DayFastR=adslAtucPerfPrev1DayFastR, adslAtucPerfStatSesL=adslAtucPerfStatSesL, adslAturIntervalSesL=adslAturIntervalSesL, adslAtucPerfPrev1DayUasL=adslAtucPerfPrev1DayUasL, adslAlarmConfProfileExtTable=adslAlarmConfProfileExtTable, PYSNMP_MODULE_ID=adslExtMIB, adslExtCompliances=adslExtCompliances, adslAtucIntervalSesL=adslAtucIntervalSesL, adslAtucPerfCurr15MinUasL=adslAtucPerfCurr15MinUasL, adslLineExtEntry=adslLineExtEntry, adslAtucFailedFastRThreshTrap=adslAtucFailedFastRThreshTrap, adslAtucIntervalFastR=adslAtucIntervalFastR)
