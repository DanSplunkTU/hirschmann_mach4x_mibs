#
# PySNMP MIB module F5-BIGIP-WAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/f5/F5-BIGIP-WAM-MIB
# Produced by pysmi-1.1.0 at Tue Nov 16 11:40:00 2021
# On host fv-az77-509 platform Linux version 5.11.0-1020-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
bigipGroups, LongDisplayString, bigipCompliances, bigipTrafficMgmt = mibBuilder.importSymbols("F5-BIGIP-COMMON-MIB", "bigipGroups", "LongDisplayString", "bigipCompliances", "bigipTrafficMgmt")
InetPortNumber, InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter64, Bits, Counter32, iso, ObjectIdentity, NotificationType, TimeTicks, enterprises, Opaque, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Integer32, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Bits", "Counter32", "iso", "ObjectIdentity", "NotificationType", "TimeTicks", "enterprises", "Opaque", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Integer32", "IpAddress", "Gauge32")
TextualConvention, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "MacAddress")
bigipWAM = ModuleIdentity((1, 3, 6, 1, 4, 1, 3375, 2, 7))
if mibBuilder.loadTexts: bigipWAM.setLastUpdated('201609211918Z')
if mibBuilder.loadTexts: bigipWAM.setOrganization('F5 Networks, Inc.')
if mibBuilder.loadTexts: bigipWAM.setContactInfo('postal: F5 Networks, Inc. \n\t \t  401 Elliott Ave. West \n                  Seattle, WA 98119\n          phone:  (206) 272-5555\n          email:  support@f5.com')
if mibBuilder.loadTexts: bigipWAM.setDescription('Top-level infrastructure of the F5 enterprise MIB tree.')
wamAppStat = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1))
wamAppStatResetStats = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wamAppStatResetStats.setStatus('current')
if mibBuilder.loadTexts: wamAppStatResetStats.setDescription('The action to reset resettable statistics data in wamAppStat.\n\t\t Setting this value to 1 will reset statistics data.\n\t\t Note, some statistics data may not be reset including data that are incremental counters.')
wamAppStatNumber = MibScalar((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatNumber.setStatus('current')
if mibBuilder.loadTexts: wamAppStatNumber.setDescription('The number of wamAppStat entries in the table.')
wamAppStatTable = MibTable((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3), )
if mibBuilder.loadTexts: wamAppStatTable.setStatus('current')
if mibBuilder.loadTexts: wamAppStatTable.setDescription('A table containing per application statistics for the web accelerator module')
wamAppStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1), ).setIndexNames((0, "F5-BIGIP-WAM-MIB", "wamAppStatName"))
if mibBuilder.loadTexts: wamAppStatEntry.setStatus('current')
if mibBuilder.loadTexts: wamAppStatEntry.setDescription('Columns in the wamAppStat Table')
wamAppStatName = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 1), LongDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatName.setStatus('current')
if mibBuilder.loadTexts: wamAppStatName.setDescription('The name of the web accelerator application.')
wamAppStatVsName = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 2), LongDisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatVsName.setStatus('current')
if mibBuilder.loadTexts: wamAppStatVsName.setDescription('The name of the virtual server.')
wamAppStatRqstTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatRqstTotal.setStatus('current')
if mibBuilder.loadTexts: wamAppStatRqstTotal.setDescription('The total number of requests made to this web accelerator\n\t     application.')
wamAppStatProxied = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxied.setStatus('current')
if mibBuilder.loadTexts: wamAppStatProxied.setDescription('The total number of requests proxied by this web accelerator\n\t     application.')
wamAppStatProxiedBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxiedBytes.setStatus('current')
if mibBuilder.loadTexts: wamAppStatProxiedBytes.setDescription('The total number of requests proxied by this web accelerator\n\t     application measured in bytes.')
wamAppStatProxied1500 = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxied1500.setStatus('current')
if mibBuilder.loadTexts: wamAppStatProxied1500.setDescription('The total number of requests between 0 and 1500 bytes proxied\n\t     by this web accelerator application.')
wamAppStatProxied10k = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxied10k.setStatus('current')
if mibBuilder.loadTexts: wamAppStatProxied10k.setDescription('The total number of requests between 1500 and 10K bytes proxied\n\t     by this web accelerator application.')
wamAppStatProxied50k = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxied50k.setStatus('current')
if mibBuilder.loadTexts: wamAppStatProxied50k.setDescription('The total number of requests between 10K and 50K bytes proxied\n\t     by this web accelerator application.')
wamAppStatProxied100k = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxied100k.setStatus('current')
if mibBuilder.loadTexts: wamAppStatProxied100k.setDescription('The total number of requests between 50K and 100K bytes proxied\n\t     by this web accelerator application.')
wamAppStatProxied500k = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxied500k.setStatus('current')
if mibBuilder.loadTexts: wamAppStatProxied500k.setDescription('The total number of requests between 100K and 500K bytes proxied\n\t     by this web accelerator application.')
wamAppStatProxied1m = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxied1m.setStatus('current')
if mibBuilder.loadTexts: wamAppStatProxied1m.setDescription('The total number of requests between 500k and 1M bytes proxied\n\t     by this web accelerator application.')
wamAppStatProxied5m = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxied5m.setStatus('current')
if mibBuilder.loadTexts: wamAppStatProxied5m.setDescription('The total number of requests between 1M and 5M bytes proxied\n\t     by this web accelerator application.')
wamAppStatProxiedLarge = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxiedLarge.setStatus('current')
if mibBuilder.loadTexts: wamAppStatProxiedLarge.setDescription('The total number of requests larger than 5M bytes proxied\n\t     by this web accelerator application.')
wamAppStatProxiedNew = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxiedNew.setStatus('current')
if mibBuilder.loadTexts: wamAppStatProxiedNew.setDescription('The total number of new requests proxied by this\n\t     web accelerator application.')
wamAppStatProxiedExpired = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxiedExpired.setStatus('current')
if mibBuilder.loadTexts: wamAppStatProxiedExpired.setDescription('The total number of expired requests proxied by this\n\t     web accelerator application.')
wamAppStatProxiedPerPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxiedPerPolicy.setStatus('current')
if mibBuilder.loadTexts: wamAppStatProxiedPerPolicy.setDescription('The total number of requests proxied per policy by this\n\t     web accelerator application.')
wamAppStatProxiedPerIrule = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxiedPerIrule.setStatus('current')
if mibBuilder.loadTexts: wamAppStatProxiedPerIrule.setDescription('The total number of requests proxied per iRule by this\n\t     web accelerator application.')
wamAppStatProxiedPerInvalidation = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxiedPerInvalidation.setStatus('current')
if mibBuilder.loadTexts: wamAppStatProxiedPerInvalidation.setDescription('The total number of requests proxied by invalidation rules by this\n\t     web accelerator application.')
wamAppStatProxiedPerClientRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxiedPerClientRequest.setStatus('current')
if mibBuilder.loadTexts: wamAppStatProxiedPerClientRequest.setDescription('The total number of requests proxied by client request headers by this\n\t    web accelerator application.')
wamAppStatProxiedBypass = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatProxiedBypass.setStatus('current')
if mibBuilder.loadTexts: wamAppStatProxiedBypass.setDescription('The total number of proxy requests bypassed by this\n\t     web accelerator application.')
wamAppStatFromCache = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCache.setStatus('current')
if mibBuilder.loadTexts: wamAppStatFromCache.setDescription('The total number of requests served from cache by this\n\t     web accelerator application.')
wamAppStatFromCacheBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCacheBytes.setStatus('current')
if mibBuilder.loadTexts: wamAppStatFromCacheBytes.setDescription('The total number of request bytes served from cache by this\n\t     web accelerator application.')
wamAppStatFromCache1500 = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCache1500.setStatus('current')
if mibBuilder.loadTexts: wamAppStatFromCache1500.setDescription('The total number of requests between 0 and 1500 bytes served\n\t     from cache by this web accelerator application.')
wamAppStatFromCache10k = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCache10k.setStatus('current')
if mibBuilder.loadTexts: wamAppStatFromCache10k.setDescription('The total number of requests between 1500 and 10K bytes served\n\t     from cache by this web accelerator application.')
wamAppStatFromCache50k = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCache50k.setStatus('current')
if mibBuilder.loadTexts: wamAppStatFromCache50k.setDescription('The total number of requests between 10K and 50K bytes served\n\t     from cache by this web accelerator application.')
wamAppStatFromCache100k = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCache100k.setStatus('current')
if mibBuilder.loadTexts: wamAppStatFromCache100k.setDescription('The total number of requests between 50K and 100K bytes served\n\t     from cache by this web accelerator application.')
wamAppStatFromCache500k = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCache500k.setStatus('current')
if mibBuilder.loadTexts: wamAppStatFromCache500k.setDescription('The total number of requests between 100K and 500K bytes served\n\t     from cache by this web accelerator application.')
wamAppStatFromCache1m = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCache1m.setStatus('current')
if mibBuilder.loadTexts: wamAppStatFromCache1m.setDescription('The total number of requests between 500k and 1M bytes served\n\t     from cache by this web accelerator application.')
wamAppStatFromCache5m = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCache5m.setStatus('current')
if mibBuilder.loadTexts: wamAppStatFromCache5m.setDescription('The total number of requests between 1M and 5M bytes served\n\t     from cache by this web accelerator application.')
wamAppStatFromCacheLarge = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatFromCacheLarge.setStatus('current')
if mibBuilder.loadTexts: wamAppStatFromCacheLarge.setDescription('The total number of requests larger than 5M bytes served\n\t     from cache by this web accelerator application.')
wamAppStatOws2xx = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatOws2xx.setStatus('current')
if mibBuilder.loadTexts: wamAppStatOws2xx.setDescription('The number of origin web server responses in the range of\n\t     200 to 206 (successful responses).')
wamAppStatOws3xx = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatOws3xx.setStatus('current')
if mibBuilder.loadTexts: wamAppStatOws3xx.setDescription('The number of origin web server responses in the range of\n\t     300 to 307 (redirection responses).')
wamAppStatOws4xx = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatOws4xx.setStatus('current')
if mibBuilder.loadTexts: wamAppStatOws4xx.setDescription('The number of origin web server responses in the range of\n\t     400 to 417 (client errors).')
wamAppStatOws5xx = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatOws5xx.setStatus('current')
if mibBuilder.loadTexts: wamAppStatOws5xx.setDescription('The number of origin web server responses in the range of\n\t    500 to 505 (server errors).')
wamAppStatOwsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatOwsDropped.setStatus('current')
if mibBuilder.loadTexts: wamAppStatOwsDropped.setDescription('The number of requests dropped by origin web server.')
wamAppStatOwsRejected = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatOwsRejected.setStatus('current')
if mibBuilder.loadTexts: wamAppStatOwsRejected.setDescription('The number of requests rejected by origin web server.')
wamAppStatWam2xx = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatWam2xx.setStatus('current')
if mibBuilder.loadTexts: wamAppStatWam2xx.setDescription('The number of responses in the range of 200 to 206 \n\t     (successful responses) served by this web accelerator application.')
wamAppStatWam3xx = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatWam3xx.setStatus('current')
if mibBuilder.loadTexts: wamAppStatWam3xx.setDescription('The number of responses in the range of 300 to 307\n\t     (redirection responses) served by this web accelerator application.')
wamAppStatWam4xx = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatWam4xx.setStatus('current')
if mibBuilder.loadTexts: wamAppStatWam4xx.setDescription('The number of responses in the range of 400 to 417\n\t     (client errors) served by this web accelerator application.')
wamAppStatWam5xx = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatWam5xx.setStatus('current')
if mibBuilder.loadTexts: wamAppStatWam5xx.setDescription('The number of responses in the range of 500 to 505\n\t     (server errors) served by this web accelerator application.')
wamAppStatWam503 = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatWam503.setStatus('current')
if mibBuilder.loadTexts: wamAppStatWam503.setDescription('The number of 503 response served by this web accelerator application.')
wamAppStatWamDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 3375, 2, 7, 1, 3, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wamAppStatWamDropped.setStatus('current')
if mibBuilder.loadTexts: wamAppStatWamDropped.setDescription('The number of requests dropped by this web accelerator application.')
bigipWAMCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 3375, 2, 5, 1, 7)).setObjects(("F5-BIGIP-WAM-MIB", "bigipWAMGroups"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    bigipWAMCompliance = bigipWAMCompliance.setStatus('current')
if mibBuilder.loadTexts: bigipWAMCompliance.setDescription('This specifies the objects that are required to claim \n                 compliance to F5 Traffic Management System.')
bigipWAMGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 3375, 2, 5, 2, 7))
wamAppStatGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 3375, 2, 5, 2, 7, 1)).setObjects(("F5-BIGIP-WAM-MIB", "wamAppStatResetStats"), ("F5-BIGIP-WAM-MIB", "wamAppStatNumber"), ("F5-BIGIP-WAM-MIB", "wamAppStatName"), ("F5-BIGIP-WAM-MIB", "wamAppStatVsName"), ("F5-BIGIP-WAM-MIB", "wamAppStatRqstTotal"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxied"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxiedBytes"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxied1500"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxied10k"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxied50k"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxied100k"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxied500k"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxied1m"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxied5m"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxiedLarge"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxiedNew"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxiedExpired"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxiedPerPolicy"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxiedPerIrule"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxiedPerInvalidation"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxiedPerClientRequest"), ("F5-BIGIP-WAM-MIB", "wamAppStatProxiedBypass"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCache"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCacheBytes"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCache1500"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCache10k"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCache50k"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCache100k"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCache500k"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCache1m"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCache5m"), ("F5-BIGIP-WAM-MIB", "wamAppStatFromCacheLarge"), ("F5-BIGIP-WAM-MIB", "wamAppStatOws2xx"), ("F5-BIGIP-WAM-MIB", "wamAppStatOws3xx"), ("F5-BIGIP-WAM-MIB", "wamAppStatOws4xx"), ("F5-BIGIP-WAM-MIB", "wamAppStatOws5xx"), ("F5-BIGIP-WAM-MIB", "wamAppStatOwsDropped"), ("F5-BIGIP-WAM-MIB", "wamAppStatOwsRejected"), ("F5-BIGIP-WAM-MIB", "wamAppStatWam2xx"), ("F5-BIGIP-WAM-MIB", "wamAppStatWam3xx"), ("F5-BIGIP-WAM-MIB", "wamAppStatWam4xx"), ("F5-BIGIP-WAM-MIB", "wamAppStatWam5xx"), ("F5-BIGIP-WAM-MIB", "wamAppStatWam503"), ("F5-BIGIP-WAM-MIB", "wamAppStatWamDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    wamAppStatGroup = wamAppStatGroup.setStatus('current')
if mibBuilder.loadTexts: wamAppStatGroup.setDescription('A collection of objects of wamAppStat MIB.')
mibBuilder.exportSymbols("F5-BIGIP-WAM-MIB", wamAppStatFromCache10k=wamAppStatFromCache10k, wamAppStatGroup=wamAppStatGroup, bigipWAMCompliance=bigipWAMCompliance, wamAppStatFromCache100k=wamAppStatFromCache100k, wamAppStatVsName=wamAppStatVsName, wamAppStatFromCache1m=wamAppStatFromCache1m, wamAppStatWam2xx=wamAppStatWam2xx, wamAppStatEntry=wamAppStatEntry, wamAppStatName=wamAppStatName, wamAppStatProxiedExpired=wamAppStatProxiedExpired, wamAppStatProxiedPerIrule=wamAppStatProxiedPerIrule, wamAppStatOws3xx=wamAppStatOws3xx, wamAppStatFromCache1500=wamAppStatFromCache1500, wamAppStatOws5xx=wamAppStatOws5xx, wamAppStat=wamAppStat, wamAppStatProxied100k=wamAppStatProxied100k, wamAppStatFromCache50k=wamAppStatFromCache50k, wamAppStatRqstTotal=wamAppStatRqstTotal, wamAppStatProxied1m=wamAppStatProxied1m, wamAppStatFromCache5m=wamAppStatFromCache5m, wamAppStatWamDropped=wamAppStatWamDropped, wamAppStatTable=wamAppStatTable, PYSNMP_MODULE_ID=bigipWAM, wamAppStatProxied=wamAppStatProxied, wamAppStatProxied10k=wamAppStatProxied10k, bigipWAMGroups=bigipWAMGroups, wamAppStatResetStats=wamAppStatResetStats, wamAppStatFromCache=wamAppStatFromCache, wamAppStatFromCacheBytes=wamAppStatFromCacheBytes, wamAppStatOwsDropped=wamAppStatOwsDropped, bigipWAM=bigipWAM, wamAppStatOws4xx=wamAppStatOws4xx, wamAppStatFromCache500k=wamAppStatFromCache500k, wamAppStatProxiedPerPolicy=wamAppStatProxiedPerPolicy, wamAppStatProxied5m=wamAppStatProxied5m, wamAppStatWam503=wamAppStatWam503, wamAppStatProxiedNew=wamAppStatProxiedNew, wamAppStatProxied50k=wamAppStatProxied50k, wamAppStatWam3xx=wamAppStatWam3xx, wamAppStatFromCacheLarge=wamAppStatFromCacheLarge, wamAppStatOws2xx=wamAppStatOws2xx, wamAppStatProxiedBytes=wamAppStatProxiedBytes, wamAppStatProxiedLarge=wamAppStatProxiedLarge, wamAppStatOwsRejected=wamAppStatOwsRejected, wamAppStatProxied500k=wamAppStatProxied500k, wamAppStatWam5xx=wamAppStatWam5xx, wamAppStatNumber=wamAppStatNumber, wamAppStatProxied1500=wamAppStatProxied1500, wamAppStatProxiedPerInvalidation=wamAppStatProxiedPerInvalidation, wamAppStatProxiedBypass=wamAppStatProxiedBypass, wamAppStatProxiedPerClientRequest=wamAppStatProxiedPerClientRequest, wamAppStatWam4xx=wamAppStatWam4xx)
