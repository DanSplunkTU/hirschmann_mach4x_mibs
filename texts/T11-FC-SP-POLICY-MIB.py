#
# PySNMP MIB module T11-FC-SP-POLICY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/T11-FC-SP-POLICY-MIB
# Produced by pysmi-1.1.8 at Sat Jan 15 04:27:53 2022
# On host fv-az83-73 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
FcNameIdOrZero, FcDomainIdOrZero, fcmInstanceIndex = mibBuilder.importSymbols("FC-MGMT-MIB", "FcNameIdOrZero", "FcDomainIdOrZero", "fcmInstanceIndex")
InetPortNumber, InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Counter32, ObjectIdentity, mib_2, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ModuleIdentity, iso, IpAddress, NotificationType, Bits, Gauge32, Counter64, Integer32, MibIdentifier, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "mib-2", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ModuleIdentity", "iso", "IpAddress", "NotificationType", "Bits", "Gauge32", "Counter64", "Integer32", "MibIdentifier", "Unsigned32")
TextualConvention, TruthValue, RowStatus, StorageType, TimeStamp, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "RowStatus", "StorageType", "TimeStamp", "DisplayString")
T11NsGs4RejectReasonCode, = mibBuilder.importSymbols("T11-FC-NAME-SERVER-MIB", "T11NsGs4RejectReasonCode")
T11FcSpPolicyObjectType, T11FcSpAlphaNumNameOrAbsent, T11FcSpAlphaNumName, T11FcSpPolicyHashFormat, T11FcSpPolicyHashValue, T11FcSpPolicyNameType, T11FcSpHashCalculationStatus, T11FcSpPolicyName = mibBuilder.importSymbols("T11-FC-SP-TC-MIB", "T11FcSpPolicyObjectType", "T11FcSpAlphaNumNameOrAbsent", "T11FcSpAlphaNumName", "T11FcSpPolicyHashFormat", "T11FcSpPolicyHashValue", "T11FcSpPolicyNameType", "T11FcSpHashCalculationStatus", "T11FcSpPolicyName")
T11FabricIndex, = mibBuilder.importSymbols("T11-TC-MIB", "T11FabricIndex")
t11FcSpPolicyMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 178))
t11FcSpPolicyMIB.setRevisions(('2008-08-20 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: t11FcSpPolicyMIB.setRevisionsDescriptions(('Initial version of this MIB module, published as RFC 5324.',))
if mibBuilder.loadTexts: t11FcSpPolicyMIB.setLastUpdated('200808200000Z')
if mibBuilder.loadTexts: t11FcSpPolicyMIB.setOrganization('This MIB module was developed through the\n                  coordinated effort of two organizations:\n                  T11 began the development and the IETF (in\n                  the IMSS Working Group) finished it.')
if mibBuilder.loadTexts: t11FcSpPolicyMIB.setContactInfo('     Claudio DeSanti\n                  Cisco Systems, Inc.\n                  170 West Tasman Drive\n                  San Jose, CA 95134 USA\n                  EMail: cds@cisco.com\n\n                  Keith McCloghrie\n                  Cisco Systems, Inc.\n                  170 West Tasman Drive\n                  San Jose, CA 95134 USA\n                  Email: kzm@cisco.com')
if mibBuilder.loadTexts: t11FcSpPolicyMIB.setDescription("This MIB module specifies the management information\n           required to manage Fabric Policies as defined by Fibre\n           Channel's FC-SP specification.\n\n           FC-SP uses the term 'Policy Objects', sometimes abbreviated\n           to just 'Objects', to refer to containers used to hold the\n           data by which Fabric Policies are specified/stored.  This\n           obviously has the potential to cause confusion between\n           'Policy Objects' and 'MIB objects'.  The DESCRIPTIONs in\n           this MIB module attempt to avoid such confusion by the use\n           of different adjectives and capitalization, even though such\n           mechanisms are less effective when used in descriptors.\n\n           Some types of Policy Objects contain multiple items of\n           information, each of which are held in the same format\n           within the Policy Object.  In such cases, FC-SP uses the\n           term 'Entry' to describe each instance of the common format.\n           For example, FC-SP defines an Attribute Policy Object as\n           containing one or more 'Attribute Entries'.  Again, this MIB\n           module attempts to avoid confusion by the use of adjectives\n           and capitalization to distinguish an Entry within a Policy\n           Object from an entry within a MIB table.\n\n           A Fabric's database of Policy Objects consists of a set of\n           active Objects that are to be enforced by that Fabric, as\n           well as non-active Objects that are not enforced.\n           Operations defined (in FC-SP) for Policy Management are:\n\n            - Add/Get/Remove operations on individual non-active\n              Policy Objects,\n            - Activate/Deactivate operations on a Policy Summary\n              Object, and\n            - Get operations on the active Policy Summary Object\n              and/or on individual active Policy Objects.\n\n           This MIB module has five parts:\n\n            1) Active Policy Objects - read-only MIB objects\n               representing the set of active Policy Objects for\n               each Fabric,\n            2) Activate/Deactivate Operations\n\n               - a read-write MIB object to invoke an Activate\n                 operation of the policies specified via a non-active\n                 Policy Summary Object, and\n               - a read-write MIB object to invoke a Deactivate\n                 operation.\n\n            3) Non-active Policy Objects\n               - read-create MIB objects to allow the creation of\n                 non-active Policy Summary Objects (which reference\n                 non-active Policy Objects), and\n               - read-create MIB objects representing non-active\n                 Policy Objects.\n\n            4) Statistics\n\n            5) Control information and Notifications\n\n           Copyright (C) The IETF Trust (2008).  This version\n           of this MIB module is part of RFC 5324;  see the RFC\n           itself for full legal notices.")
t11FcSpPoMIBNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 178, 0))
t11FcSpPoMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 178, 1))
t11FcSpPoMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 178, 2))
t11FcSpPoActive = MibIdentifier((1, 3, 6, 1, 2, 1, 178, 1, 1))
t11FcSpPoOperations = MibIdentifier((1, 3, 6, 1, 2, 1, 178, 1, 2))
t11FcSpPoNonActive = MibIdentifier((1, 3, 6, 1, 2, 1, 178, 1, 3))
t11FcSpPoStatistics = MibIdentifier((1, 3, 6, 1, 2, 1, 178, 1, 4))
t11FcSpPoControl = MibIdentifier((1, 3, 6, 1, 2, 1, 178, 1, 5))
t11FcSpPoTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 1, 1), )
if mibBuilder.loadTexts: t11FcSpPoTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoTable.setDescription('A table containing top-level information about active\n           FC-SP policies on various Fabrics.')
t11FcSpPoEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 1, 1, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"))
if mibBuilder.loadTexts: t11FcSpPoEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoEntry.setDescription('Each entry contains information about active FC-SP policies\n           for a particular Fabric, managed as part of the Fibre\n           Channel management instance identified by fcmInstanceIndex.')
t11FcSpPoFabricIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 1, 1, 1), T11FabricIndex())
if mibBuilder.loadTexts: t11FcSpPoFabricIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoFabricIndex.setDescription('An index value that uniquely identifies a particular\n           Fabric.')
t11FcSpPoPolicySummaryObjName = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 1, 1, 2), T11FcSpAlphaNumName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoPolicySummaryObjName.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.3 and table 104.')
if mibBuilder.loadTexts: t11FcSpPoPolicySummaryObjName.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoPolicySummaryObjName.setDescription("The name of this Fabric's (active) Policy Summary Object.")
t11FcSpPoAdminFabricName = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 1, 1, 3), FcNameIdOrZero().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoAdminFabricName.setReference("- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 108.\n            - Fibre Channel - Switch Fabric-4 (FC-SW-4),\n              ANSI INCITS 418-2006, April 2006, section 7.1.\n            - Fibre Channel Fabric Address Manager MIB', RFC 4439,\n              March 2006.")
if mibBuilder.loadTexts: t11FcSpPoAdminFabricName.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoAdminFabricName.setDescription("The administratively-specified name for this Fabric, as\n           specified in the active Switch Membership List Object.\n           This value is meaningful only when Static Domain_IDs are\n           in use in a Fabric (see FC-SW-4).  Static Domain_IDs are\n           administratively enabled by a setting of the Switch Flags\n\n           in each Switch Entry in the Switch Membership List Object.\n           If Static Domain_IDs are not in use, this value might be\n           '0000000000000000'h.\n\n           The t11FamEnable, t11FamFabricName, and\n           t11FamConfigDomainIdType objects defined in the\n           T11-FC-FABRIC-ADDR-MGR-MIB module are also concerned with\n           the use of an administratively-specified name for a Fabric\n           and Static Domain_IDs.  When FC-SP Policy is in use in a\n           Fabric, the values of t11FamEnable, t11FamFabricName, and\n           t11FamConfigDomainIdType must be read-only and reflect the\n           active Policy Objects.  For example, the value of\n           t11FamFabricName must reflect the value of\n           t11FcSpPoAdminFabricName.")
t11FcSpPoActivatedTimeStamp = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 1, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoActivatedTimeStamp.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoActivatedTimeStamp.setDescription("The value of sysUpTime at which this Fabric's Policy\n           Summary Object was last activated, or zero if the same\n           Policy Summary Object has been active since the last\n           restart of the management system.")
t11FcSpPoSummaryTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 1, 2), )
if mibBuilder.loadTexts: t11FcSpPoSummaryTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSummaryTable.setDescription('A table of information about active Policy Objects listed\n           within FC-SP Policy Summary Objects.')
t11FcSpPoSummaryEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 1, 2, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoSummaryPolicyNameType"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoSummaryPolicyName"))
if mibBuilder.loadTexts: t11FcSpPoSummaryEntry.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.3 and table 104.')
if mibBuilder.loadTexts: t11FcSpPoSummaryEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSummaryEntry.setDescription('Each entry contains information about one of the active\n           Policy Objects listed within the Policy Summary Object for\n           the Fabric identified by t11FcSpPoFabricIndex and managed\n           within the Fibre Channel management instance identified by\n           fcmInstanceIndex.\n\n           How many Policy Objects of a given type can be active at\n           any one time for a given Fabric depends on the type, as\n           specified in FC-SP.  For some types, it is one per Fabric;\n           for other types, more than one can be active per Fabric.\n           In both of these cases, the absence of any entries in this\n           table for a particular type is equivalent to there being one\n           Policy Object of that type that is empty, e.g., a Switch\n           Membership List Object that identifies zero Switches.')
t11FcSpPoSummaryPolicyNameType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 2, 1, 1), T11FcSpPolicyNameType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 7))).clone(namedValues=NamedValues(("nodeName", 1), ("alphaNumericName", 7))))
if mibBuilder.loadTexts: t11FcSpPoSummaryPolicyNameType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSummaryPolicyNameType.setDescription("The combination of t11FcSpPoSummaryPolicyNameType and\n           t11FcSpPoSummaryPolicyName specify the name of the Policy\n           Object contained in the Policy Summary Object.\n\n           The type of name is 'nodeName' if the value of the\n           corresponding instance of t11FcSpPoSummaryPolicyType is\n           'switchConnectivity', or 'alphaNumericName' otherwise.")
t11FcSpPoSummaryPolicyName = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 2, 1, 2), T11FcSpPolicyName())
if mibBuilder.loadTexts: t11FcSpPoSummaryPolicyName.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSummaryPolicyName.setDescription('The combination of t11FcSpPoSummaryPolicyNameType and\n           t11FcSpPoSummaryPolicyName specify the name of the Policy\n           Object contained in the Policy Summary Object.')
t11FcSpPoSummaryPolicyType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 2, 1, 3), T11FcSpPolicyObjectType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoSummaryPolicyType.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.3.1 and table 104.')
if mibBuilder.loadTexts: t11FcSpPoSummaryPolicyType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSummaryPolicyType.setDescription("The 'Identifier' that specifies the type of this\n           Policy Object.")
t11FcSpPoSummaryHashFormat = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 2, 1, 4), T11FcSpPolicyHashFormat()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoSummaryHashFormat.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSummaryHashFormat.setDescription("The format of this Policy Object's hash value as\n           contained in the corresponding instance of the\n           t11FcSpPoSummaryHashValue object.")
t11FcSpPoSummaryHashValue = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 2, 1, 5), T11FcSpPolicyHashValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoSummaryHashValue.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSummaryHashValue.setDescription('The hash value of this Policy Object, in the format\n           identified by the corresponding instance of the\n           t11FcSpPoSummaryHashFormat object.')
t11FcSpPoSwMembTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 1, 3), )
if mibBuilder.loadTexts: t11FcSpPoSwMembTable.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 110.')
if mibBuilder.loadTexts: t11FcSpPoSwMembTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSwMembTable.setDescription('A table of Switch Entries in active Switch Membership List\n           Objects.\n\n           One Switch Membership List Object is represented by all\n           of the rows of this table that have the same values\n           of fcmInstanceIndex and t11FcSpPoFabricIndex.')
t11FcSpPoSwMembEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 1, 3, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoSwMembSwitchNameType"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoSwMembSwitchName"))
if mibBuilder.loadTexts: t11FcSpPoSwMembEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSwMembEntry.setDescription('Each entry contains information about one Switch Entry\n           within the active Switch Membership List Object for the\n           Fabric identified by t11FcSpPoFabricIndex and managed\n           within the Fibre Channel management instance identified\n           by fcmInstanceIndex.')
t11FcSpPoSwMembSwitchNameType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 3, 1, 1), T11FcSpPolicyNameType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 5, 6))).clone(namedValues=NamedValues(("nodeName", 1), ("restrictedNodeName", 2), ("wildcard", 5), ("restrictedWildcard", 6))))
if mibBuilder.loadTexts: t11FcSpPoSwMembSwitchNameType.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 110.')
if mibBuilder.loadTexts: t11FcSpPoSwMembSwitchNameType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSwMembSwitchNameType.setDescription("If the value of this object is 'nodeName' or\n           'restrictedNodeName', then the combination of\n           this object and t11FcSpPoSwMembSwitchName specify the\n           Switch Name of this Switch Entry.\n\n           The membership is restricted or unrestricted based on the\n           name type.  Restricted membership means that the Switch is\n           not allowed to be part of the Fabric unless allowed by a\n           specific Switch Connectivity Object.  Unrestricted\n           membership means that the Switch is allowed to be part of\n           the Fabric unless disallowed by a specific Switch\n           Connectivity Object.\n\n           The values of 'wildcard' and 'restrictedWildcard' provide\n           the means to specify whether to allow/deny membership for\n           Switches not explicitly named in the Switch Membership\n           List Object.")
t11FcSpPoSwMembSwitchName = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 3, 1, 2), FcNameIdOrZero().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8))
if mibBuilder.loadTexts: t11FcSpPoSwMembSwitchName.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 110.')
if mibBuilder.loadTexts: t11FcSpPoSwMembSwitchName.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSwMembSwitchName.setDescription("When the value of t11FcSpPoSwMembSwitchNameType is\n           'wildcard' or 'restrictedWildcard', this object has the\n           value '0000000000000000'h.\n\n           Otherwise, the combination of t11FcSpPoSwMembSwitchNameType\n           and this object specify the Switch Name of this Switch\n           Entry.")
t11FcSpPoSwMembSwitchFlags = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 3, 1, 3), Bits().clone(namedValues=NamedValues(("staticDomainID", 0), ("insistentDomainID", 1), ("serialPortsAccess", 2), ("physicalPortsAccess", 3), ("managerRole", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoSwMembSwitchFlags.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 112.\n            - Fibre Channel - Switch Fabric-4 (FC-SW-4),\n              ANSI INCITS 418-2006, April 2006, section 7.1.\n            - t11FamConfigDomainIdType, T11-FC-FABRIC-ADDR-MGR-MIB,\n              Fibre Channel Fabric Address Manager MIB, RFC 4439.')
if mibBuilder.loadTexts: t11FcSpPoSwMembSwitchFlags.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSwMembSwitchFlags.setDescription("Configurable options in respect to the administration\n           of Policy Objects at this Switch:\n\n              'staticDomainID'      - if this bit is set, the Switch\n           uses the 'Static Domain_IDs behavior' (as defined in\n           FC-SW-4).  This bit needs to have the same setting for all\n           Switches in a Fabric's Switch Membership List Object, or\n           else the Fabric will partition.  If this bit is set, the\n           Domain_ID for the Switch is given by the corresponding\n           instance of t11FcSpPoSwMembDomainID.\n\n              'insistentDomainID'   -  if this bit is set, the\n           Switch uses the 'Insistent Domain_ID behavior' (see\n           t11FamConfigDomainId of T11-FC-FABRIC-ADDR-MGR-MIB), the\n           Domain_ID for the Switch is given by the corresponding\n           instance of t11FcSpPoSwMembDomainID.\n\n              'serialPortsAccess'   - the Switch allows management\n           through serial ports when and only when this bit is set.\n\n              'physicalPortsAccess' - the Switch allows management\n           through the physical panel when and only when this bit\n           is set.\n\n              'managerRole'         - the Switch is allowed to change\n           the Fabric Policy configuration (on receipt of any of the\n           EACA, Enhanced Stage Fabric Configuration (ESFC), Enhanced\n           Update Fabric Configuration (EUFC), ACA, SFC, or UFC\n           SW_ILSs) if and only if this bit is set.\n\n           Whenever a Fabric has Active Policy Objects, the value of\n           the t11FamConfigDomainIdType object defined in the\n           T11-FC-FABRIC-ADDR-MGR-MIB module must be read-only and\n           reflect the values of the 'staticDomainID' and\n           'insistentDomainID' bits of this object.")
t11FcSpPoSwMembDomainID = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 3, 1, 4), FcDomainIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoSwMembDomainID.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and tables 111 and 112.\n            - t11FamConfigDomainId, T11-FC-FABRIC-ADDR-MGR-MIB,\n              Fibre Channel Fabric Address Manager MIB, RFC 4439.')
if mibBuilder.loadTexts: t11FcSpPoSwMembDomainID.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSwMembDomainID.setDescription("The specified Domain_ID value when either of the\n           'staticDomainID' or 'insistentDomainID' bits are set in\n           the corresponding instance of t11FcSpPoSwMembSwitchFlags.\n\n           Whenever a Fabric has Active Policy Objects, the value\n           of the t11FamConfigDomainId object defined in the\n           T11-FC-FABRIC-ADDR-MGR-MIB module must be read-only and\n           reflect the value of this object.")
t11FcSpPoSwMembPolicyDataRole = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("client", 1), ("autonomous", 2), ("server", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoSwMembPolicyDataRole.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 113.')
if mibBuilder.loadTexts: t11FcSpPoSwMembPolicyDataRole.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSwMembPolicyDataRole.setDescription("The role of the Switch in terms of which Policy data\n           it retains/maintains:\n\n             'client' - the Switch operates as a Client Switch.\n           A Client Switch maintains its own Switch Connectivity\n           Object and all Fabric-wide List Objects.  If FC-SP\n           Zoning is used, a Client Switch maintains only the\n           subset of the Active Zone Set that it requires to\n           enforce the current Fabric Zoning configuration.\n\n             'autonomous' -  the Switch operates as an Autonomous\n           Switch.  An Autonomous Switch maintains its own Switch\n           Connectivity Object and all Fabric-wide List Objects.\n           This is the same as 'client' except that if FC-SP Zoning\n           is used, an Autonomous Switch maintains a complete copy\n           of the Fabric Zoning Database.\n\n             'server' - the Switch operates as a Server Switch.\n           A Server Switch maintains all Fabric-wide List Objects\n           and the Switch Connectivity Objects of each Switch in\n           the Fabric.  If FC-SP Zoning is used, a Server Switch\n           maintains a complete copy of the Fabric Zoning Database.")
t11FcSpPoSwMembAuthBehaviour = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 3, 1, 6), Bits().clone(namedValues=NamedValues(("mustAuthenticate", 0), ("rejectIsFailure", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoSwMembAuthBehaviour.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 114.')
if mibBuilder.loadTexts: t11FcSpPoSwMembAuthBehaviour.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSwMembAuthBehaviour.setDescription("The authentication behaviour of the Switch:\n\n             'mustAuthenticate' - if this bit is set, all connections\n           between this Switch and neighbor Switches must be\n           authenticated.\n\n             'rejectIsFailure' - if this bit is set, the rejection of\n           an AUTH_Negotiate message must be considered as an\n           authentication failure by this Switch.")
t11FcSpPoSwMembAttribute = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 3, 1, 7), T11FcSpAlphaNumNameOrAbsent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoSwMembAttribute.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 110.')
if mibBuilder.loadTexts: t11FcSpPoSwMembAttribute.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSwMembAttribute.setDescription('The name of an active Attribute Policy Object that is\n           defined for this Switch, or the zero-length string.  The\n\n           zero-length string indicates that no Attribute Policy\n           Object is defined for this Switch.')
t11FcSpPoNoMembTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 1, 4), )
if mibBuilder.loadTexts: t11FcSpPoNoMembTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNoMembTable.setDescription('A table of Node Entries in active Node Membership List\n           Objects.\n\n           One Node Membership List Object is represented by all\n           of the rows of this table that have the same values\n           of fcmInstanceIndex and t11FcSpPoFabricIndex.')
t11FcSpPoNoMembEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 1, 4, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNoMembNodeNameType"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNoMembNodeName"))
if mibBuilder.loadTexts: t11FcSpPoNoMembEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNoMembEntry.setDescription('Each entry contains information about one Node Entry\n           within the active Node Membership List Object for the\n           Fabric identified by t11FcSpPoFabricIndex and managed\n           within the Fibre Channel management instance identified\n           by fcmInstanceIndex.')
t11FcSpPoNoMembNodeNameType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 4, 1, 1), T11FcSpPolicyNameType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("nodeName", 1), ("restrictedNodeName", 2), ("portName", 3), ("restrictedPortName", 4), ("wildcard", 5), ("restrictedWildcard", 6))))
if mibBuilder.loadTexts: t11FcSpPoNoMembNodeNameType.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 116.')
if mibBuilder.loadTexts: t11FcSpPoNoMembNodeNameType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNoMembNodeNameType.setDescription("If the value of this object is 'wildcard' or\n           'restrictedWildcard', this Node Entry applies to Nodes not\n           explicitly named in the Node Membership List Object.\n\n           Otherwise, the combination of this object and\n           t11FcSpPoNoMembNodeName specify the name of this Node Entry\n           in the active Node Membership List Object.  A Node is\n           identified by its Node Name or by one or more of its Port\n           Names.\n\n           Restricted membership means that a Node is not allowed to be\n           connected to the Fabric unless allowed by a specific Switch\n           Connectivity Object.  Unrestricted membership means that a\n           Node is allowed to be connected to the Fabric unless\n           disallowed by a specific Switch Connectivity Object.")
t11FcSpPoNoMembNodeName = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 4, 1, 2), FcNameIdOrZero().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8))
if mibBuilder.loadTexts: t11FcSpPoNoMembNodeName.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 116.')
if mibBuilder.loadTexts: t11FcSpPoNoMembNodeName.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNoMembNodeName.setDescription("If the value of t11FcSpPoNoMembNodeNameType is\n           'wildcard' or 'restrictedWildcard', this object has the\n           value '0000000000000000'h.\n\n           Otherwise, the combination of t11FcSpPoNoMembNodeNameType\n           and this object specify the name of this Node Entry is the\n           active Node Membership List Object.")
t11FcSpPoNoMembFlags = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 4, 1, 3), Bits().clone(namedValues=NamedValues(("scsiEnclosureAccess", 0), ("authenticationRequired", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoNoMembFlags.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 118.')
if mibBuilder.loadTexts: t11FcSpPoNoMembFlags.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNoMembFlags.setDescription("Configurable options in respect to the administration\n           of Policy Objects at this Node:\n\n                'scsiEnclosureAccess'      - the Node is allowed to\n           control any Switch through SCSI Enclosure Services if this\n           bit is set.  If a Switch does not support SCSI Enclosure\n           Services, this bit is ignored.\n\n                'authenticationRequired'   - the Node is required to\n           authenticate itself to any Switch to which it is connected\n           if and only if this bit is set.")
t11FcSpPoNoMembCtAccessIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoNoMembCtAccessIndex.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP), February 2007,\n              section 7.1.4.1 and tables 118/119/120/121.')
if mibBuilder.loadTexts: t11FcSpPoNoMembCtAccessIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNoMembCtAccessIndex.setDescription('If the value of this object is zero, then access by this\n           Node to Generic Services is not limited by a Common\n           Transport Access Specifier.\n\n           Otherwise, the limits are specified by the set of Common\n           Transport Access Descriptors contained in those rows of\n           the t11FcSpPoCtDescrTable for the same Fabric and for which\n           the value of t11FcSpPoCtDescrSpecifierIndex is the same as\n           the value of this object.')
t11FcSpPoNoMembAttribute = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 4, 1, 5), T11FcSpAlphaNumNameOrAbsent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoNoMembAttribute.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 116.')
if mibBuilder.loadTexts: t11FcSpPoNoMembAttribute.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNoMembAttribute.setDescription('The name of an active Attribute Policy Object that is\n           defined for this Node, or the zero-length string.  The\n           zero-length string indicates that no Attribute Policy\n           Object is defined for this Node.')
t11FcSpPoCtDescrTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 1, 5), )
if mibBuilder.loadTexts: t11FcSpPoCtDescrTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoCtDescrTable.setDescription('A table of Common Transport Access Descriptors being used\n           within active Policy Objects.\n\n           A Common Transport Access Specifier is a list of Common\n           Transport Access Descriptors that specify whether a Node\n           is allowed to access a Generic Service or Sub-Server.\n\n           An active Common Transport Access Specifier is represented\n           by all rows of this table that have the same values of\n           fcmInstanceIndex, t11FcSpPoFabricIndex, and\n           t11FcSpPoCtDescrSpecifierIndex.')
t11FcSpPoCtDescrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 1, 5, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoCtDescrSpecifierIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoCtDescrIndex"))
if mibBuilder.loadTexts: t11FcSpPoCtDescrEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoCtDescrEntry.setDescription('Each entry contains information about one Common\n           Transport Access Descriptor of an active Common Transport\n           Access Specifier used within the Fabric identified by\n           t11FcSpPoFabricIndex and managed within the Fibre Channel\n           management instance identified by fcmInstanceIndex.')
t11FcSpPoCtDescrSpecifierIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FcSpPoCtDescrSpecifierIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoCtDescrSpecifierIndex.setDescription('An index value that uniquely identifies a particular\n           Common Transport Access Specifier within a Fabric.')
t11FcSpPoCtDescrIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FcSpPoCtDescrIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoCtDescrIndex.setDescription('An index value that uniquely identifies a particular\n           Common Transport Access Descriptor within a Common Transport\n           Access Specifier.')
t11FcSpPoCtDescrFlags = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 5, 1, 3), Bits().clone(namedValues=NamedValues(("allow", 0), ("gsTypeWildcard", 1), ("gsSubTypeWildcard", 2), ("readOnly", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoCtDescrFlags.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoCtDescrFlags.setDescription('The flag bits that specify how access is to be limited by\n           this Common Transport Access Descriptor:\n\n            - allow -- access to the specified Generic Service and\n              Server is allowed if this bit is set, and is to be denied\n              if this bit is not set.\n\n            - gsTypeWildcard -- if this bit is set, the Generic Service\n\n              to be allowed/denied is specified by the value of\n              t11FcSpPoCtDescrGsType.  If this bit is set, then the\n              gsSubTypeWildcard bit must not be set.\n\n            - gsSubTypeWildcard -- if this bit is set, the Generic\n              Service to be allowed/denied is specified by the value of\n              t11FcSpPoCtDescrGsSubType.  If this bit is set, then the\n              gsTypeWildcard bit must not be set.\n\n            - readOnly -- if this bit is set, then access is to be\n              granted only for reading.')
t11FcSpPoCtDescrGsType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoCtDescrGsType.setReference('- Fibre Channel - Generic Services-5 (FC-GS-5),\n              ANSI INCITS 427-2006, section 4.3.2.4.')
if mibBuilder.loadTexts: t11FcSpPoCtDescrGsType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoCtDescrGsType.setDescription('The GS_Type of the Generic Service (e.g., the FC-GS-5\n           Management Service) that is subject to access control.\n           This value is ignored if the gsTypeWildcard bit is not set\n           in the corresponding value of t11FcSpPoCtDescrFlags.')
t11FcSpPoCtDescrGsSubType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoCtDescrGsSubType.setReference('- Fibre Channel - Generic Services-5 (FC-GS-5),\n              ANSI INCITS 427-2006, section 4.3.2.5.')
if mibBuilder.loadTexts: t11FcSpPoCtDescrGsSubType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoCtDescrGsSubType.setDescription('The GS_Subtype of the Generic Server (e.g., the Fabric Zone\n           Server) that is subject to access control.  This value is\n           ignored if the gsSubTypeWildcard bit is not set in the\n           corresponding value of t11FcSpPoCtDescrFlags.')
t11FcSpPoSwConnTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 1, 6), )
if mibBuilder.loadTexts: t11FcSpPoSwConnTable.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.6.1, tables 123/124.')
if mibBuilder.loadTexts: t11FcSpPoSwConnTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSwConnTable.setDescription('A table of active Switch Connectivity Objects.\n\n           A Switch Connectivity Object defines to which other\n           Switches or Nodes a particular Switch may/may not be\n           connected at the Node level and/or at the Port level.')
t11FcSpPoSwConnEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 1, 6, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoSwConnSwitchName"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoSwConnAllowedType"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoSwConnPortNameOrAll"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoSwConnAllowedIndex"))
if mibBuilder.loadTexts: t11FcSpPoSwConnEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSwConnEntry.setDescription('Each entry contains the name of either a Switch or a Node\n           with which any port of a particular Switch, or a particular\n           port of that Switch, is allowed or not allowed to be\n           connected.\n\n           The particular Switch is on the Fabric identified by\n           t11FcSpPoFabricIndex and managed within the Fibre Channel\n           management instance identified by fcmInstanceIndex.')
t11FcSpPoSwConnSwitchName = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 6, 1, 1), FcNameIdOrZero().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8))
if mibBuilder.loadTexts: t11FcSpPoSwConnSwitchName.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSwConnSwitchName.setDescription('The name of the particular Switch for which this Switch\n\n           Connectivity Object specifies topology restrictions.')
t11FcSpPoSwConnAllowedType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("switch", 1), ("node", 2))))
if mibBuilder.loadTexts: t11FcSpPoSwConnAllowedType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSwConnAllowedType.setDescription('This object specifies whether this row refers to\n           Switch-to-Switch or Switch-to-Node connectivity, i.e.,\n           whether the corresponding instance of\n           t11FcSpPoSwConnAllowedName specifies the name of a Switch\n           or the name of a Node.')
t11FcSpPoSwConnPortNameOrAll = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 6, 1, 3), FcNameIdOrZero().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), )))
if mibBuilder.loadTexts: t11FcSpPoSwConnPortNameOrAll.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.6.1, tables 123/124.')
if mibBuilder.loadTexts: t11FcSpPoSwConnPortNameOrAll.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSwConnPortNameOrAll.setDescription('This object specifies either the particular port to which\n           this topology restriction applies, or if the value is the\n           zero-length string, that the topology restriction applies\n           to all ports on the particular Switch.\n\n           In the FC-SP Policy Database, restrictions for a particular\n           port are formatted within a Port Connectivity Entry of a\n           Switch Connectivity Object, whereas restrictions for all\n           ports on the Switch are specified in the main part of a\n           Switch Connectivity Object, i.e., not in a Port Connectivity\n           Entry.')
t11FcSpPoSwConnAllowedIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 6, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FcSpPoSwConnAllowedIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSwConnAllowedIndex.setDescription("When multiple rows in this table apply to the same\n           port(s) in the same Switch's Switch Connectivity Object,\n           this object provides a unique index value to distinguish\n           between such rows.")
t11FcSpPoSwConnAllowedNameType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 6, 1, 5), T11FcSpPolicyNameType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("nodeName", 1), ("restrictedNodeName", 2), ("portName", 3), ("restrictedPortName", 4), ("wildcard", 5), ("restrictedWildcard", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoSwConnAllowedNameType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSwConnAllowedNameType.setDescription("If the value of this object is 'wildcard' or\n           'restrictedWildcard', this row specifies whether\n           connectivity is allowed/not allowed with entities not\n           explicitly named by other rows.\n\n           Otherwise, the combination of t11FcSpPoSwConnAllowedNameType\n           and t11FcSpPoSwConnAllowedName specify the name of:\n\n           - a Switch (if t11FcSpPoSwConnAllowedType = 'switch'), or\n           - a Node (if t11FcSpPoSwConnAllowedType = 'node')\n\n           to which connectivity is:\n\n            - allowed by 'nodeName' and 'portName',\n            - not allowed by 'restrictedNodeName' and\n              'restrictedPortName'.")
t11FcSpPoSwConnAllowedName = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 6, 1, 6), T11FcSpPolicyName().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoSwConnAllowedName.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoSwConnAllowedName.setDescription("If the value of t11FcSpPoSwConnAllowedNameType is\n           'wildcard' or 'restrictedWildcard', this object has the\n           value '0000000000000000'h.\n\n           Otherwise, the combination of t11FcSpPoSwConnAllowedNameType\n           and t11FcSpPoSwConnAllowedName specify the name of:\n\n           - a Switch (if t11FcSpPoSwConnAllowedType = 'switch'), or\n           - a Node (if t11FcSpPoSwConnAllowedType = 'node')\n\n           to which connectivity is allowed/restricted.")
t11FcSpPoIpMgmtTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 1, 7), )
if mibBuilder.loadTexts: t11FcSpPoIpMgmtTable.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.7')
if mibBuilder.loadTexts: t11FcSpPoIpMgmtTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoIpMgmtTable.setDescription('A table of IP Management Entries in active IP Management\n           List Objects.  An IP Management List Object is a\n           Fabric-wide Policy Object that describes which IP hosts\n           are allowed to manage a Fabric.\n\n           One IP Management List Object is represented by all\n           of the rows of this table that have the same values\n           of fcmInstanceIndex and t11FcSpPoFabricIndex.')
t11FcSpPoIpMgmtEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 1, 7, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoIpMgmtEntryNameType"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoIpMgmtEntryNameLow"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoIpMgmtEntryNameHigh"))
if mibBuilder.loadTexts: t11FcSpPoIpMgmtEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoIpMgmtEntry.setDescription("Each entry contains information about one IP Management\n           Entry within the active IP Management List Object for the\n           Fabric identified by t11FcSpPoFabricIndex and managed\n           within the Fibre Channel management instance identified\n           by fcmInstanceIndex.\n\n           The Policy Object Name of an IP Management Entry Policy\n           Object is either an IPv6 Address Range or an IPv4 Address\n           Range, where in each case, the range is specified as two\n           addresses: the low and high ends of the range.  In\n           particular, since the Policy Object Name in this situation\n           can only be an IPv6 Address Range or an IPv4 Address Range,\n           it is represented here by three MIB objects defined as a\n           (InetAddressType, InetAddress, InetAddress) tuple, in which\n           the first address is the low end of the range, the second\n           address is the high end of the range, and both addresses are\n           of the type designated by InetAddressType.\n\n           In theory, the use of t11FcSpPoIpMgmtEntryNameLow and\n           t11FcSpPoIpMgmtEntryNameHigh (which both have the syntax\n\n           of InetAddress) in the INDEX could cause the need for\n           excessively long OIDs.  In practice, this can't happen\n           because FC-SP doesn't allow these objects to be specified\n           as DNS names.")
t11FcSpPoIpMgmtEntryNameType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 7, 1, 1), InetAddressType())
if mibBuilder.loadTexts: t11FcSpPoIpMgmtEntryNameType.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP), February 2007,\n              sections 7.1.7.1 & 7.1.2, tables 103/126.')
if mibBuilder.loadTexts: t11FcSpPoIpMgmtEntryNameType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoIpMgmtEntryNameType.setDescription("The combination of t11FcSpPoIpMgmtNameType,\n           t11FcSpPoIpMgmtNameLow, and t11FcSpPoIpMgmtNameHigh\n           specify the Internet address range of this IP Management\n           Entry in the IP Management List Object.\n\n           The FC-SP specification does not allow the use of a\n           DNS domain name to specify the address at the lower end\n           or at the higher end of the Internet address range, nor does\n           it allow the specification of a zone index.  Therefore, the\n           type of address must be one of: 'ipv4', or 'ipv6'.")
t11FcSpPoIpMgmtEntryNameLow = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 7, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: t11FcSpPoIpMgmtEntryNameLow.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP), February 2007,\n              sections 7.1.7.1 & 7.1.2, tables 103/126.')
if mibBuilder.loadTexts: t11FcSpPoIpMgmtEntryNameLow.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoIpMgmtEntryNameLow.setDescription('The lower end of an Internet address range.  The type\n           of this address is given by the corresponding instance\n           of t11FcSpPoIpMgmtEntryNameType.\n\n           The combination of t11FcSpPoIpMgmtNameType,\n           t11FcSpPoIpMgmtNameLow, and t11FcSpPoIpMgmtNameHigh\n           specify the Internet address range of this IP Management\n           Entry in the IP Management List Object.')
t11FcSpPoIpMgmtEntryNameHigh = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 7, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: t11FcSpPoIpMgmtEntryNameHigh.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, sections 7.1.7.1 & 7.1.2, tables 103/126.')
if mibBuilder.loadTexts: t11FcSpPoIpMgmtEntryNameHigh.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoIpMgmtEntryNameHigh.setDescription('The higher end of an Internet address range.  The type\n           of this address is given by the corresponding instance\n           of t11FcSpPoIpMgmtEntryNameType.\n\n           The combination of t11FcSpPoIpMgmtNameType,\n           t11FcSpPoIpMgmtNameLow, and t11FcSpPoIpMgmtNameHigh\n           specify the Internet address range of this IP Management\n           Entry in the IP Management List Object.')
t11FcSpPoIpMgmtWkpIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 7, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoIpMgmtWkpIndex.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.7.1 and tables 127/129.')
if mibBuilder.loadTexts: t11FcSpPoIpMgmtWkpIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoIpMgmtWkpIndex.setDescription('This object identifies the restrictions for IP management\n           access by IP hosts in this range of IP addresses, specified\n           as the set of Well-Known Protocols Access Descriptors\n           contained in those rows of the t11FcSpPoWkpDescrTable for\n           which the value of t11FcSpPoWkpDescrSpecifierIndex is the\n           same as the value of this object.  A value of zero indicates\n           that this IP Management Entry does not identify a Well-Known\n           Protocols Access Specifier.')
t11FcSpPoIpMgmtAttribute = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 7, 1, 5), T11FcSpAlphaNumNameOrAbsent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoIpMgmtAttribute.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.7.1 and table 128.')
if mibBuilder.loadTexts: t11FcSpPoIpMgmtAttribute.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoIpMgmtAttribute.setDescription('The name of an active Attribute Policy Object that is\n           defined for this IP Management entry or the zero-length\n           string.  The zero-length string indicates that no Attribute\n           Policy Object is defined for this IP Management entry.')
t11FcSpPoWkpDescrTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 1, 8), )
if mibBuilder.loadTexts: t11FcSpPoWkpDescrTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoWkpDescrTable.setDescription('A table of the Well-Known Protocol Access Descriptors\n           being used within active Policy Objects.\n\n           A Well-Known Protocol Access Specifier is a list of\n           Well-Known Protocol Access Descriptors each of which\n           specifies a protocol number, a port number, and/or various\n           flags specifying how IP management access is restricted.\n\n           A Well-Known Protocol Transport Access Specifier is\n           represented by all rows of this table that have the\n           same values of fcmInstanceIndex, t11FcSpPoFabricIndex,\n           and t11FcSpPoWkpDescrSpecifierIndex.')
t11FcSpPoWkpDescrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 1, 8, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoWkpDescrSpecifierIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoWkpDescrIndex"))
if mibBuilder.loadTexts: t11FcSpPoWkpDescrEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoWkpDescrEntry.setDescription('Each entry contains information about one Well-Known\n           Protocol Access Descriptor of a Well-Known Protocol\n           Access Specifier used within the Fabric identified by\n           t11FcSpPoFabricIndex and managed within the Fibre Channel\n           management instance identified by fcmInstanceIndex.')
t11FcSpPoWkpDescrSpecifierIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FcSpPoWkpDescrSpecifierIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoWkpDescrSpecifierIndex.setDescription('An index value that uniquely identifies a particular\n           Well-Known Protocol Access Specifier within a Fabric.')
t11FcSpPoWkpDescrIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 8, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FcSpPoWkpDescrIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoWkpDescrIndex.setDescription('An index value that uniquely identifies a particular\n           Well-Known Protocol Access Descriptor within a Well-Known\n           Protocol Access Specifier.')
t11FcSpPoWkpDescrFlags = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 8, 1, 3), Bits().clone(namedValues=NamedValues(("allow", 0), ("wkpWildcard", 1), ("destPortWildcard", 2), ("readOnly", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoWkpDescrFlags.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.7.1 and table 131.')
if mibBuilder.loadTexts: t11FcSpPoWkpDescrFlags.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoWkpDescrFlags.setDescription('The flag bits that specify how access is to be limited by\n           this Well-Known Protocol Access Descriptor:\n\n            - allow -- IP management access using this protocol/port\n              is allowed if this bit is set, and to be denied if this\n              bit is not set.\n\n            - wkpWildcard -- if this bit is set, the IP Protocol number\n              of the Well-Known Protocol to be allowed/denied is\n              specified by the value of t11FcSpPoWkpDescrWkpNumber.\n\n            - destPortWildcard -- if this bit is set, the Destination\n              (TCP/UDP) Port number of the Well-Known Protocol to be\n              allowed/denied is specified by the value of\n              t11FcSpPoWkpDescrDestPort.\n\n            - readOnly -- if this bit is set, then access is to be\n              granted only for reading.')
t11FcSpPoWkpDescrWkpNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 8, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoWkpDescrWkpNumber.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.7.1 and table 131.\n            - http://www.iana.org/assignments/protocol-numbers.')
if mibBuilder.loadTexts: t11FcSpPoWkpDescrWkpNumber.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoWkpDescrWkpNumber.setDescription("When the 'wkpWildcard' bit is set in the corresponding\n           instance of t11FcSpPoWkpDescrFlags, this object specifies\n           the IP protocol number of the Well-Known Protocol.")
t11FcSpPoWkpDescrDestPort = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 8, 1, 5), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoWkpDescrDestPort.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.7.1 and table 131.\n            - http://www.iana.org/assignments/port-numbers.')
if mibBuilder.loadTexts: t11FcSpPoWkpDescrDestPort.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoWkpDescrDestPort.setDescription("When the 'destPortWildcard' bit is set in the corresponding\n           instance of t11FcSpPoWkpDescrFlags, this object specifies\n           the Destination (TCP/UDP) Port number of the Well-Known\n           Protocol.  When the 'destPortWildcard' bit is reset, this\n           object is ignored (and can have the value zero).")
t11FcSpPoAttribTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 1, 9), )
if mibBuilder.loadTexts: t11FcSpPoAttribTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoAttribTable.setDescription('A table of the Attribute Policy Objects being used within\n           active Policy Objects.  In the FC-SP Policy Database, each\n           Attribute Policy Object consists of an Attribute Object Name\n           and a set of Attribute Entries.\n\n           An active Attribute Policy Object is represented by all the\n           Attribute Entries in this table that have the same value\n           of t11FcSpPoAttribName.')
t11FcSpPoAttribEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 1, 9, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoAttribName"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoAttribEntryIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoAttribPartIndex"))
if mibBuilder.loadTexts: t11FcSpPoAttribEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoAttribEntry.setDescription("Each row contains information specific to an Attribute\n           Entry contained within an Attribute Policy Object that is\n           active within the Fabric identified by t11FcSpPoFabricIndex\n           and managed within the Fibre Channel management instance\n           identified by fcmInstanceIndex.\n\n           For some types of Attribute Policy Objects, it is valuable\n           to break out some semantically significant parts of the\n           Policy Object's value into their own individual MIB\n           objects; for example, to extract the one or more individual\n           Authentication Protocol Identifiers and associated\n           Authentication Protocol Parameters out of an Attribute\n           Object containing a 'AUTH_Negotiate Message Payload'.\n           For such types, another MIB table is defined to hold the\n           extracted values in MIB objects specific to the Attribute\n           Policy Object's type.  In such cases, the\n           t11FcSpPoAttribExtension object in this table points to the\n           other MIB table.\n\n           If the value of one Attribute Entry is too large (more than\n           256 bytes) to be contained within the value of one instance\n           of t11FcSpPoAttribValue, then one row in this table contains\n           the first 256 bytes, and one (or more) other row(s) in this\n           table contain the rest of the value.")
t11FcSpPoAttribName = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 9, 1, 1), T11FcSpAlphaNumName())
if mibBuilder.loadTexts: t11FcSpPoAttribName.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.8.1 and table 133.')
if mibBuilder.loadTexts: t11FcSpPoAttribName.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoAttribName.setDescription('The name of the Attribute Policy Object containing one\n           or more Attribute Entries.')
t11FcSpPoAttribEntryIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 9, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FcSpPoAttribEntryIndex.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.8.1, tables 133/134.')
if mibBuilder.loadTexts: t11FcSpPoAttribEntryIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoAttribEntryIndex.setDescription('A unique value to distinguish this Attribute Entry\n           from other Attribute Entries contained in the same\n           Attribute Policy Object.')
t11FcSpPoAttribPartIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 9, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FcSpPoAttribPartIndex.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.8.1, tables 134/135.')
if mibBuilder.loadTexts: t11FcSpPoAttribPartIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoAttribPartIndex.setDescription('When the value of an Attribute Entry is shorter than 257\n           bytes, the whole value is contained in one instance of\n\n           t11FcSpPoAttribValue, and the value of this object is 1.\n\n           If the value of an Attribute Entry is longer than 256 bytes,\n           then that value is divided up on 256-byte boundaries such\n           that all parts are 256 bytes long except the last part, which\n           is shorter if necessary, with each such part contained in\n           a separate row of this table, and the value of this object\n           is set to the part number.  That is, this object has the\n           value of 1 for bytes 0-255, the value of 2 for bytes\n           256-511, etc.')
t11FcSpPoAttribType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 9, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoAttribType.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP), February 2007,\n              section 7.1.8.1, tables 134/135 and table 10.')
if mibBuilder.loadTexts: t11FcSpPoAttribType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoAttribType.setDescription("The type of attribute.  The first type to be defined is:\n\n           t11FcSpPoAttribType    t11FcSpPoAttribValue\n           ===================    ====================\n             '00000001'h          The AUTH_Negotiate Message Payload\n           ")
t11FcSpPoAttribValue = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 9, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoAttribValue.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP), February 2007,\n              section 7.1.8.1, tables 134/135 and table 10.')
if mibBuilder.loadTexts: t11FcSpPoAttribValue.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoAttribValue.setDescription('The value of an Attribute Entry is divided up on 256-byte\n           boundaries such that all parts are 256 bytes long except the\n           last part, which is shorter if necessary, and each such part\n           is contained in a separate instance of this object.\n\n           The value of this object is independent of whether some\n           parts of its value are broken out into separate MIB objects\n           pointed to by the corresponding instance of\n           t11FcSpPoAttribExtension.')
t11FcSpPoAttribExtension = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 9, 1, 6), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoAttribExtension.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoAttribExtension.setDescription("For some types of Attribute Policy Object, the value of\n           this MIB object points to type-specific MIB objects that\n           contain individual/broken-out parts of the Attribute Policy\n           Object's value.  If this object doesn't point to such\n           type-specific MIB objects, then it contains the value:\n           zeroDotZero.\n\n           In particular, when the value of t11FcSpPoAttribType\n           indicates 'AUTH_Negotiate Message Payload', one or more\n           Authentication Protocol Identifiers and their associated\n           Authentication Protocol Parameters are embedded within the\n           value of the corresponding instance of t11FcSpPoAttribValue;\n           MIB objects to contain these individual values are defined\n           in the t11FcSpPoAuthProtTable.  Thus, for an 'AUTH_Negotiate\n           Message Payload' Attribute, the value of this object\n           contains an OID within the t11FcSpPoAuthProtTable, e.g.,\n           of the whole table, of an individual row, or of an individual\n           instance within the table.")
t11FcSpPoAuthProtTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 1, 10), )
if mibBuilder.loadTexts: t11FcSpPoAuthProtTable.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP), February 2007,\n              sections 5.3.2 & 7.1.8.1, tables 134/135 and tables\n              10/11.')
if mibBuilder.loadTexts: t11FcSpPoAuthProtTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoAuthProtTable.setDescription("A table of Authentication Protocol Identifier and\n           Authentication Protocol Parameters that are embedded in\n           Attribute Policy Objects being used within active Policy\n           Objects.\n\n           This table is used for Attribute Entries of Attribute Policy\n           Objects for which the value of t11FcSpPoAttribType indicates\n           'AUTH_Negotiate Message Payload' and the value of\n           t11FcSpPoAttribExtension contains the OID of this table.")
t11FcSpPoAuthProtEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 1, 10, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoAttribName"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoAttribEntryIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoAuthProtIdentifier"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoAuthProtPartIndex"))
if mibBuilder.loadTexts: t11FcSpPoAuthProtEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoAuthProtEntry.setDescription('Each entry contains information about an Authentication\n           Protocol that is extracted out of the Attribute Entry\n           (identified by t11FcSpPoAttribEntryIndex) of the Policy\n           Attribute Object (identified by t11FcSpPoAttribName), which\n           is active within the Fabric identified by\n           t11FcSpPoFabricIndex and managed within the Fibre Channel\n           management instance identified by fcmInstanceIndex.\n\n           If the value of one Attribute Protocol Parameters string is\n           too large (more than 256 bytes) to be contained within the\n           value of one instance of t11FcSpPoAuthProtParams, then one\n           row in this table contains the first 256 bytes, and one (or\n           more) other row(s) in this table contain the rest of the\n           value.')
t11FcSpPoAuthProtIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: t11FcSpPoAuthProtIdentifier.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 5.3.2, table 11.')
if mibBuilder.loadTexts: t11FcSpPoAuthProtIdentifier.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoAuthProtIdentifier.setDescription("The Authentication Protocol Identifier:\n\n                    1      = DH-CHAP\n                    2      = FCAP\n                    3      = FCPAP\n\n                    4      = IKEv2\n                    5      = IKEv2-AUTH\n              240 thru 255 = Vendor Specific Protocols\n\n            all other values are 'Reserved' (by T11).")
t11FcSpPoAuthProtPartIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FcSpPoAuthProtPartIndex.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 5.3.2, table 10.')
if mibBuilder.loadTexts: t11FcSpPoAuthProtPartIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoAuthProtPartIndex.setDescription('When the value of an Attribute Protocol Parameters string\n           is shorter than 257 bytes, the whole value is contained in\n           one instance of t11FcSpPoAuthProtParams, and the value of\n           this object is 1. (This includes the case when the Attribute\n           Protocol Parameters string is zero bytes in length.)\n\n           If the value of an Authentication Protocol Parameters string\n           is longer than 256 bytes, then that value is divided up on\n           256-byte boundaries such that all parts are 256 bytes long\n           except the last part, which is shorter if necessary, with\n           each such part contained in a separate row of this table,\n           and the value of this object is set to the part number.\n           That is, this object has the value of 1 for bytes 0-255,\n           the value of 2 for bytes 256-511, etc.')
t11FcSpPoAuthProtParams = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 1, 10, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoAuthProtParams.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 5.3.2, table 10.')
if mibBuilder.loadTexts: t11FcSpPoAuthProtParams.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoAuthProtParams.setDescription('The value of an Authentication Protocol Parameters string\n           is divided up on 256-byte boundaries such that all parts\n           are 256 bytes long except the last part, which is shorter\n           if necessary, and each such part is contained in a\n           separate instance of this object.')
t11FcSpPoOperTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 2, 1), )
if mibBuilder.loadTexts: t11FcSpPoOperTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoOperTable.setDescription('A table that allows Activate and Deactivate operations\n           to be invoked for FC-SP Policies on various Fabrics.\n\n           Activating a new policy configuration is a two-step\n           process:\n\n            1) create a single Policy Summary Object as a set of rows\n               in the t11FcSpPoNaSummaryTable specifying a set of\n               Policy Objects that describe the new configuration; and\n            2) activate that Policy Summary Object using the\n               t11FcSpPoOperActivate object defined in this table.\n\n           Deactivating the current policy configuration is a one-step\n           process: the current Policy Summary Object is deactivated\n           using the t11FcSpPoOperDeActivate object.')
t11FcSpPoOperEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 2, 1, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"))
if mibBuilder.loadTexts: t11FcSpPoOperEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoOperEntry.setDescription('Each entry allows an Activate and/or Deactivate operation\n           to be invoked on a particular Fabric, which is managed as\n           part of the Fibre Channel management instance identified\n           by fcmInstanceIndex.')
t11FcSpPoOperActivate = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 2, 1, 1, 1), T11FcSpAlphaNumName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FcSpPoOperActivate.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.3.6.2')
if mibBuilder.loadTexts: t11FcSpPoOperActivate.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoOperActivate.setDescription("Writing the name of a Policy Summary Object into this\n           object is a request to activate the policy configuration\n           described by the combination of all rows in\n           t11FcSpPoNaSummaryTable that have that name as their\n           value of t11FcSpPoNaSummaryName and are for the same\n           Fabric.\n\n           Before issuing such a request, the relevant rows in the\n           t11FcSpPoNaSummaryTable must exist and represent a complete\n           and consistent Policy Summary Object.  If they do not, the\n           request will fail, with t11FcSpPoOperResult having the\n           'badSummaryObject' value.\n\n           When read, the value of this object is always the zero-\n           length string.\n\n           Writing to this object does not delete (or in any way\n           affect) any rows in the MIB tables for non-active\n           Policy Objects.")
t11FcSpPoOperDeActivate = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 2, 1, 1, 2), T11FcSpAlphaNumName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FcSpPoOperDeActivate.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.3.6.3')
if mibBuilder.loadTexts: t11FcSpPoOperDeActivate.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoOperDeActivate.setDescription("Writing the current value of t11FcSpPoPolicySummaryObjName\n           into this object (for a particular Fabric) is a request\n           to deactivate that Fabric's current policy configuration.\n           Writing any other value into this object is an error\n           (e.g., 'wrongValue').\n\n           When read, the value of this object is always the zero-\n           length string.")
t11FcSpPoOperResult = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("activateSuccess", 1), ("badSummaryObject", 2), ("activateFailure", 3), ("deactivateSuccess", 4), ("deactivateFailure", 5), ("inProgress", 6), ("none", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoOperResult.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoOperResult.setDescription("This object indicates the status/result of the last\n           activation/deactivation that was invoked via the\n           corresponding instance of t11FcSpPoOperActivate or\n           t11FcSpPoOperDeActivate.\n\n           When the value of this object is 'inProgress', the\n           values of the corresponding instances of\n           t11FcSpPoOperActivate and t11FcSpPoOperDeActivate\n           cannot be modified.\n\n           The value 'badSummaryObject' indicates an activation\n           request that did not name a complete and consistent\n           Policy Summary Object.\n\n           The value 'none' indicates activation/deactivation\n           has not been attempted since the last restart of\n           the management system.")
t11FcSpPoOperFailCause = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 2, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoOperFailCause.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoOperFailCause.setDescription("A textual message indicating the reason for the\n           most recent activation/deactivation failure, or the\n           zero-length string if no information is available\n           (e.g., because the corresponding instance of\n           t11FcSpPoOperResult has the value 'none').\n\n           When the corresponding instance of\n           t11FcSpPoOperResult is either 'activateFailure'\n           or 'deactivateFailure', the value of this object\n           indicates the reason for that failure.")
t11FcSpPoNaSummaryTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 3, 1), )
if mibBuilder.loadTexts: t11FcSpPoNaSummaryTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSummaryTable.setDescription("A table of non-active Policy Summary Objects available\n           to be activated.\n\n           The functionality of this table deviates slightly from FC-SP\n           in that FC-SP specifies that the only Policy Summary Object\n           is the Active one, i.e., FC-SP does not store non-active\n           Policy Summary Objects in the Policy Database.  Instead,\n           FC-SP requires a new Policy Summary Object to be created\n           for, and embedded within, every Activate (APS) request.\n           Thus, the newly created Policy Summary Object outlasts the\n           APS request only as the new active Policy Summary Object and\n           only if the APS succeeds.  In contrast, the Activate\n           operation provided by this MIB module consists of two steps:\n\n           1) create a non-active Policy Summary Object as a set of\n              entries in this table describing a new configuration;\n           2) activate a Policy Summary Object (stored as a set of\n              entries in this table) using t11FcSpPoOperActivate.\n\n           These two steps are only loosely connected, i.e., the result\n           of the first operation is a non-active Policy Summary Object\n           that is retained (in this table) even if it isn't\n           immediately activated.  Even after an attempt to activate\n           it succeeds or fails, a non-active Policy Summary Object\n           is not deleted, but is retained and still available for\n           subsequent modification/re-use.")
t11FcSpPoNaSummaryEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 3, 1, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSummaryName"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSummaryPolicyType"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSummaryPolicyIndex"))
if mibBuilder.loadTexts: t11FcSpPoNaSummaryEntry.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.3 and table 104.')
if mibBuilder.loadTexts: t11FcSpPoNaSummaryEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSummaryEntry.setDescription('Each entry contains information about one non-active\n           Policy Object within a non-active Policy Summary Object\n           defined for potential use on the Fabric identified by\n           t11FcSpPoFabricIndex, and managed within the Fibre Channel\n           management instance identified by fcmInstanceIndex.\n\n           A non-active Policy Summary Object is described by a set\n           of entries in this table that have the same value of\n           t11FcSpPoNaSummaryName.\n\n           As and when a Policy Summary Object is activated using the\n           t11FcSpPoOperActivate object, if the activation is\n           successful, existing rows (if any) in MIB tables for active\n           Policy Objects are deleted and replaced by the appropriate\n           new set of rows.  Existing rows in this table and/or in\n           other tables for non-active Policy Objects are not\n           affected by the activate operation.\n\n           The StorageType of a row in this table is specified by the\n           instance of t11FcSpPoStorageType that is INDEX-ed by the\n           same values of fcmInstanceIndex and t11FcSpPoFabricIndex.')
t11FcSpPoNaSummaryName = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 1, 1, 1), T11FcSpAlphaNumName())
if mibBuilder.loadTexts: t11FcSpPoNaSummaryName.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSummaryName.setDescription('The name of the non-active Policy Summary Object that\n           contains this Policy Object.')
t11FcSpPoNaSummaryPolicyType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 1, 1, 2), T11FcSpPolicyObjectType())
if mibBuilder.loadTexts: t11FcSpPoNaSummaryPolicyType.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.3.1 and table 104.')
if mibBuilder.loadTexts: t11FcSpPoNaSummaryPolicyType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSummaryPolicyType.setDescription("The 'Identifier' (i.e., the type) of this Policy Object.")
t11FcSpPoNaSummaryPolicyIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FcSpPoNaSummaryPolicyIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSummaryPolicyIndex.setDescription('A unique integer value to distinguish this Policy Object\n           from any others that have the same type and that are\n           contained in the same Policy Summary Object.')
t11FcSpPoNaSummaryPolicyNameType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 1, 1, 4), T11FcSpPolicyNameType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 7))).clone(namedValues=NamedValues(("nodeName", 1), ("alphaNumericName", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaSummaryPolicyNameType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSummaryPolicyNameType.setDescription("The combination of t11FcSpPoNaSummaryPolicyNameType and\n           t11FcSpPoNaSummaryPolicyName specify the name of the\n           non-active Policy Object identified by this row.\n\n           The type of name must be 'nodeName' if the value of the\n           corresponding instance of t11FcSpPoNaSummaryPolicyType is\n           'switchConnectivity', or 'alphaNumericName' otherwise.")
t11FcSpPoNaSummaryPolicyName = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 1, 1, 5), T11FcSpPolicyName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaSummaryPolicyName.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSummaryPolicyName.setDescription('The combination of t11FcSpPoNaSummaryPolicyNameType and\n           t11FcSpPoNaSummaryPolicyName specify the name of the\n           non-active Policy Object identified by this row.')
t11FcSpPoNaSummaryHashStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 1, 1, 6), T11FcSpHashCalculationStatus().clone('stale')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaSummaryHashStatus.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSummaryHashStatus.setDescription("When read, the value of this object is either:\n\n             correct -- the corresponding instance of\n                        t11FcSpPoNaSummaryHashValue contains\n                        the correct value; or\n             stale   -- the corresponding instance of\n                        t11FcSpPoNaSummaryHashValue contains\n                        a stale (possibly incorrect) value;\n\n           Writing a value of 'calculate' is a request to re-calculate\n           and update the value of the corresponding instance of\n           t11FcSpPoNaSummaryHashValue.  Writing a value of 'correct'\n          or 'stale' to this object is an error (e.g., 'wrongValue').")
t11FcSpPoNaSummaryHashFormat = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 1, 1, 7), T11FcSpPolicyHashFormat().clone(hexValue="00000001")).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoNaSummaryHashFormat.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSummaryHashFormat.setDescription("The format of this Policy Object's hash value as\n           contained in the corresponding instance of the\n           t11FcSpPoNaSummaryHashValue object.")
t11FcSpPoNaSummaryHashValue = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 1, 1, 8), T11FcSpPolicyHashValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoNaSummaryHashValue.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSummaryHashValue.setDescription('The hash value of this Policy Object, in the format\n           identified by the corresponding instance of the\n           t11FcSpPoNaSummaryHashFormat object.')
t11FcSpPoNaSummaryRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaSummaryRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSummaryRowStatus.setDescription("The status of this row.\n\n           Before a row in this table can have 'active' status,\n           a non-Active Policy Object must already be represented\n           in the table corresponding to the value of\n           t11FcSpPoNaSummaryPolicyType with the name given by the\n           combination of t11FcSpPoNaSummaryPolicyNameType and\n           t11FcSpPoNaSummaryPolicyName.  If such a Policy Object gets\n           deleted from the relevant table, the row in this table must\n           also get deleted.\n\n           When a row has 'active' status, the only write-able MIB\n           objects in this table are t11FcSpPoNaSummaryHashStatus and\n           t11FcSpPoNaSummaryRowStatus.")
t11FcSpPoNaSwListTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 3, 2), )
if mibBuilder.loadTexts: t11FcSpPoNaSwListTable.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 108.')
if mibBuilder.loadTexts: t11FcSpPoNaSwListTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwListTable.setDescription('A table of non-active Switch Membership List Objects.')
t11FcSpPoNaSwListEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 3, 2, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSwListName"))
if mibBuilder.loadTexts: t11FcSpPoNaSwListEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwListEntry.setDescription('Each entry contains information about one non-active\n           Switch Membership List Object for the Fabric identified\n           by t11FcSpPoFabricIndex and managed within the Fibre\n\n           Channel management instance identified by\n           fcmInstanceIndex.\n\n           The StorageType of a row in this table is specified by the\n           instance of t11FcSpPoStorageType that is INDEX-ed by the\n           same values of fcmInstanceIndex and t11FcSpPoFabricIndex.')
t11FcSpPoNaSwListName = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 2, 1, 1), T11FcSpAlphaNumName())
if mibBuilder.loadTexts: t11FcSpPoNaSwListName.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 108.')
if mibBuilder.loadTexts: t11FcSpPoNaSwListName.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwListName.setDescription('The name of the Switch Membership List Object.')
t11FcSpPoNaSwListFabricName = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 2, 1, 2), FcNameIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaSwListFabricName.setReference('- t11FamConfigDomainId, T11-FC-FABRIC-ADDR-MGR-MIB,\n              Fibre Channel Fabric Address Manager MIB, RFC 4439;\n            - ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, table 108.')
if mibBuilder.loadTexts: t11FcSpPoNaSwListFabricName.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwListFabricName.setDescription("The administratively specified Fabric_Name.  This value\n           is meaningful only when static Domain_IDs are used in a\n           Fabric.  If Static Domain_IDs are not used, the Fabric_Name\n           is dynamically determined, in which case the value of this\n           object can be '0000000000000000'h or the zero-length\n           string.")
t11FcSpPoNaSwListRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaSwListRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwListRowStatus.setDescription('The status of this row.  Values of object instances\n           within the row can be modified at any time.\n\n           If a row in this table is deleted, any row in the\n           t11FcSpPoNaSwMembTable for the same Switch Membership\n           List Object will also get deleted.')
t11FcSpPoNaSwMembTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 3, 3), )
if mibBuilder.loadTexts: t11FcSpPoNaSwMembTable.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 110.')
if mibBuilder.loadTexts: t11FcSpPoNaSwMembTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwMembTable.setDescription('A table of Switch Entries in non-active Switch Membership\n           List Objects.')
t11FcSpPoNaSwMembEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 3, 3, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSwListName"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSwMembSwitchNameType"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSwMembSwitchName"))
if mibBuilder.loadTexts: t11FcSpPoNaSwMembEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwMembEntry.setDescription('Each entry contains information about one Switch that\n           is listed in a Switch Entry of a non-active Switch Membership\n           List Object for the Fabric identified by t11FcSpPoFabricIndex\n           and managed within the Fibre Channel management instance\n           identified by fcmInstanceIndex.\n\n           A row cannot exist unless there is a row in\n           t11FcSpPoNaSwListTable for the given Switch Membership List\n           Object, i.e., the row in t11FcSpPoNaSwListTable for a\n           Switch Membership List Object must be created before (or\n           simultaneously with) a row in this table for a Switch\n           Entry in that Switch Membership List Object, and when a\n           row in t11FcSpPoNaSwListTable is deleted, all rows in this\n           table for Switch Entries in that Switch Membership List\n\n           Object also get deleted.\n\n           The StorageType of a row in this table is specified by the\n           instance of t11FcSpPoStorageType that is INDEX-ed by the\n           same values of fcmInstanceIndex and t11FcSpPoFabricIndex.')
t11FcSpPoNaSwMembSwitchNameType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 3, 1, 1), T11FcSpPolicyNameType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 5, 6))).clone(namedValues=NamedValues(("nodeName", 1), ("restrictedNodeName", 2), ("wildcard", 5), ("restrictedWildcard", 6))))
if mibBuilder.loadTexts: t11FcSpPoNaSwMembSwitchNameType.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 110.')
if mibBuilder.loadTexts: t11FcSpPoNaSwMembSwitchNameType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwMembSwitchNameType.setDescription("If the value of this object is 'nodeName' or\n           'restrictedNodeName', then the combination of\n           this object and t11FcSpPoNaSwMembSwitchName specify the\n           Switch Name of this Switch Entry.\n\n           The membership is restricted or unrestricted based on the\n           name type.  Restricted membership means that the Switch is\n           not allowed to be part of the Fabric unless allowed by a\n           specific Switch Connectivity Object.  Unrestricted\n           membership means that the Switch is allowed to be part of\n           the Fabric unless disallowed by a specific Switch\n           Connectivity Object.\n\n           The values of 'wildcard' and 'restrictedWildcard' provide\n           the means to specify whether to allow/deny membership for\n           Switches not explicitly named in the Switch Membership\n\n           List Object.")
t11FcSpPoNaSwMembSwitchName = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 3, 1, 2), FcNameIdOrZero().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8))
if mibBuilder.loadTexts: t11FcSpPoNaSwMembSwitchName.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 110.')
if mibBuilder.loadTexts: t11FcSpPoNaSwMembSwitchName.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwMembSwitchName.setDescription("If the value of t11FcSpPoSwMembSwitchNameType is\n           'wildcard' or 'restrictedWildcard', this object has the\n           value '0000000000000000'h.\n\n           Otherwise, the combination of\n           t11FcSpPoNaSwMembSwitchNameType and this object specify the\n           Switch Name of this Switch Entry.")
t11FcSpPoNaSwMembFlags = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 3, 1, 3), Bits().clone(namedValues=NamedValues(("staticDomainID", 0), ("insistentDomainID", 1), ("serialPortsAccess", 2), ("physicalPortsAccess", 3), ("managerRole", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaSwMembFlags.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 112.')
if mibBuilder.loadTexts: t11FcSpPoNaSwMembFlags.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwMembFlags.setDescription("Configurable options in respect to the administration\n           of Policy Objects at this Switch:\n\n              'staticDomainID'     - the Switch uses the 'Static\n           Domain_IDs behavior' (as defined in FC-SW-4) when this bit\n           is set.  This bit should have the same setting for all\n           Switches in a Fabric's Switch Membership List Object, or\n           else the Fabric will partition.  If this bit is set,\n           the 'insistentDomainID' bit must not be set.\n\n              'insistentDomainID'  - if this bit is set, the Switch\n           uses the 'Insistent Domain_IDs behavior' (as defined in\n\n           FC-SW-4), and the 'staticDomainID' bit must not be set.\n\n              'serialPortsAccess'  - the Switch allows management\n           through serial ports when and only when this bit is set.\n\n              'physicalPortsAccess' - the Switch allows management\n           through the physical panel when and only when this bit\n           is set.\n\n              'managerRole'        - the Switch is allowed to change\n           the Fabric Policy configuration (on receipt of any of the\n           EACA, ESFC, EUFC, ACA, SFC, or UFC SW_ILSs) if this bit is\n           set.")
t11FcSpPoNaSwMembDomainID = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 3, 1, 4), FcDomainIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaSwMembDomainID.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and tables 111 and 112.')
if mibBuilder.loadTexts: t11FcSpPoNaSwMembDomainID.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwMembDomainID.setDescription("The Domain_ID to be used when either the 'staticDomainID'\n           bit or the 'insistentDomainID' bit is set in the\n           corresponding value of t11FcSpPoNaSwMembFlags.")
t11FcSpPoNaSwMembPolicyDataRole = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("client", 1), ("autonomous", 2), ("server", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaSwMembPolicyDataRole.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 113.')
if mibBuilder.loadTexts: t11FcSpPoNaSwMembPolicyDataRole.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwMembPolicyDataRole.setDescription("The role of the Switch in terms of which Policy data\n           it retains/maintains:\n\n             'client' - the Switch operates as a Client Switch.\n           A Client Switch maintains its own Switch Connectivity\n           Object and all Fabric-wide List Objects.  If FC-SP\n\n           Zoning is used, a Client Switch maintains only the\n           subset of the Active Zone Set that it requires to\n           enforce the current Fabric Zoning configuration.\n\n             'autonomous' -  the Switch operates as an Autonomous\n           Switch.  An Autonomous Switch maintains its own Switch\n           Connectivity Object and all Fabric-wide List Objects.\n           This is the same as 'client' except that if FC-SP Zoning\n           is used, an Autonomous Switch maintains a complete copy\n           of the Fabric Zoning Database.\n\n             'server' - the Switch operates as a Server Switch.\n           A Server Switch maintains all Fabric-wide List Objects\n           and the Switch Connectivity Objects of each Switch in\n           the Fabric.  If FC-SP Zoning is used, a Server Switch\n           maintains a complete copy of the Fabric Zoning Database.")
t11FcSpPoNaSwMembAuthBehaviour = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 3, 1, 6), Bits().clone(namedValues=NamedValues(("mustAuthenticate", 0), ("rejectIsFailure", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaSwMembAuthBehaviour.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 114.')
if mibBuilder.loadTexts: t11FcSpPoNaSwMembAuthBehaviour.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwMembAuthBehaviour.setDescription("The authentication behaviour of the Switch:\n\n             'mustAuthenticate' - if this bit is set, all connections\n           between this Switch and neighbor Switches must be\n           authenticated.\n\n             'rejectIsFailure' - if this bit is set, the rejection of\n           an AUTH_Negotiate message must be considered as an\n           authentication failure by this Switch.")
t11FcSpPoNaSwMembAttribute = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 3, 1, 7), T11FcSpAlphaNumNameOrAbsent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaSwMembAttribute.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 110.')
if mibBuilder.loadTexts: t11FcSpPoNaSwMembAttribute.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwMembAttribute.setDescription("The name of a non-active Attribute Policy Object that\n           is defined for this Switch.  The zero-length string\n           indicates that no non-active Attribute Policy Object is\n           defined for this Switch.\n\n           The effect of having no rows in the t11FcSpPoNaAttribTable\n           for which the value of t11FcSpPoNaAttribName is the\n           same as the value of this object, is the same as\n           this object's value being the zero-length string.")
t11FcSpPoNaSwMembRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 3, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaSwMembRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwMembRowStatus.setDescription('The status of this row.  Values of object instances\n           within the row can be modified at any time.\n\n           A row cannot exist unless there is a row in the\n           t11FcSpPoNaSwListTable for the Switch Membership List\n           Object containing the Switch Entry for this Switch, i.e.,\n           the row in t11FcSpPoNaSwListTable for a Switch Membership\n           List Object must be created before (or simultaneously)\n           with a row in this table for a Switch Entry in that\n           Switch Membership List Object; and when a row in\n           t11FcSpPoNaSwListTable is deleted, any row in this\n           table for a Switch Entry in that Switch Membership\n           List Object also gets deleted.')
t11FcSpPoNaNoMembTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 3, 4), )
if mibBuilder.loadTexts: t11FcSpPoNaNoMembTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaNoMembTable.setDescription('A table of Node Entries in non-active Node Membership List\n           Objects.\n\n           One Node Membership List Object is represented by all\n           the rows in this table that have the same value of\n           t11FcSpPoNaNoMembListName.')
t11FcSpPoNaNoMembEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 3, 4, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaNoMembListName"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaNoMembNodeNameType"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaNoMembNodeName"))
if mibBuilder.loadTexts: t11FcSpPoNaNoMembEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaNoMembEntry.setDescription('Each entry contains information about one Node Entry of\n           a non-active Node Membership List Object for the Fabric\n           identified by t11FcSpPoFabricIndex and managed within\n           the Fibre Channel management instance identified by\n           fcmInstanceIndex.\n\n           The StorageType of a row in this table is specified by the\n           instance of t11FcSpPoStorageType that is INDEX-ed by the\n           same values of fcmInstanceIndex and t11FcSpPoFabricIndex.')
t11FcSpPoNaNoMembListName = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 4, 1, 1), T11FcSpAlphaNumName())
if mibBuilder.loadTexts: t11FcSpPoNaNoMembListName.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 116.')
if mibBuilder.loadTexts: t11FcSpPoNaNoMembListName.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaNoMembListName.setDescription('The name of the non-active Node Membership List Object.')
t11FcSpPoNaNoMembNodeNameType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 4, 1, 2), T11FcSpPolicyNameType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("nodeName", 1), ("restrictedNodeName", 2), ("portName", 3), ("restrictedPortName", 4), ("wildcard", 5), ("restrictedWildcard", 6))))
if mibBuilder.loadTexts: t11FcSpPoNaNoMembNodeNameType.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 116.')
if mibBuilder.loadTexts: t11FcSpPoNaNoMembNodeNameType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaNoMembNodeNameType.setDescription("If the value of this object is 'wildcard' or\n           'restrictedWildcard', this Node Entry applies to Nodes not\n           explicitly named in the Node Membership List Object.\n\n           Otherwise, the combination of this object and\n           t11FcSpPoNaNoMembNodeName specify the name of this Node Entry\n           in the active Node Membership List Object.  A Node is\n           identified by its Node Name or by one or more of its Port\n           Names.\n\n           Restricted membership means that a Node is not allowed to be\n           connected to the Fabric unless allowed by a specific Switch\n           Connectivity Object.  Unrestricted membership means that a\n           Node is allowed to be connected to the Fabric unless\n           disallowed by a specific Switch Connectivity Object.")
t11FcSpPoNaNoMembNodeName = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 4, 1, 3), FcNameIdOrZero().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8))
if mibBuilder.loadTexts: t11FcSpPoNaNoMembNodeName.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 116.')
if mibBuilder.loadTexts: t11FcSpPoNaNoMembNodeName.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaNoMembNodeName.setDescription("If the value of t11FcSpPoNaNoMembNodeNameType is\n           'wildcard' or 'restrictedWildcard', this object has the\n           value '0000000000000000'h.\n\n           Otherwise, the combination of t11FcSpPoNaNoMembNodeNameType\n           and this object specify the name of this Node Entry is the\n           active Node Membership List Object.")
t11FcSpPoNaNoMembFlags = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 4, 1, 4), Bits().clone(namedValues=NamedValues(("scsiEnclosureAccess", 0), ("authenticationRequired", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaNoMembFlags.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 118.')
if mibBuilder.loadTexts: t11FcSpPoNaNoMembFlags.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaNoMembFlags.setDescription("Configurable options in respect to the administration\n           of Policy Objects at this Node:\n\n                'scsiEnclosureAccess'      - the Node is allowed to\n           control any Switch through SCSI Enclosure Services if this\n           bit is set.  If a Switch does not support SCSI Enclosure\n           Services, this bit is ignored.\n\n                'authenticationRequired'   - the Node is required to\n           authenticate itself to any Switch to which it is connected\n           if and only if this bit is set.")
t11FcSpPoNaNoMembCtAccessIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaNoMembCtAccessIndex.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP), February 2007,\n              section 7.1.4.1 and tables 118/119/120/121.')
if mibBuilder.loadTexts: t11FcSpPoNaNoMembCtAccessIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaNoMembCtAccessIndex.setDescription("If the value of this object is zero, then access by this\n           Node to Generic Services is not limited by a Common\n           Transport Access Specifier.\n\n           Otherwise, the limits are specified by the set of Common\n           Transport Access Descriptors contained in those rows of\n           the t11FcSpPoNaCtDescrTable for which the value of\n           t11FcSpPoNaCtDescrSpecifierIndex is the same as the value\n           of this object.  No such rows in t11FcSpPoNaCtDescrTable\n           have the same effect as this object's value being zero.")
t11FcSpPoNaNoMembAttribute = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 4, 1, 6), T11FcSpAlphaNumNameOrAbsent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaNoMembAttribute.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.4.1 and table 116.')
if mibBuilder.loadTexts: t11FcSpPoNaNoMembAttribute.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaNoMembAttribute.setDescription("The name of a non-active Attribute Policy Object that\n           is defined for this Node.  The zero-length string indicates\n           that no non-active Attribute Policy Object is defined for\n           this Node.\n\n           The effect of having no rows in the t11FcSpPoNaAttribTable\n           for which the value of t11FcSpPoNaAttribName is the\n           same as the value of this object, is the same as\n           this object's value being the zero-length string.")
t11FcSpPoNaNoMembRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 4, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaNoMembRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaNoMembRowStatus.setDescription('The status of this row.  Values of object instances\n           within the row can be modified at any time.')
t11FcSpPoNaCtDescrTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 3, 5), )
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrTable.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.5')
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrTable.setDescription('A table of Common Transport Access Descriptors referenced\n           by non-active Policy Objects.\n\n           A Common Transport Access Specifier is a list of Common\n           Transport Access Descriptors that specify whether a Node\n           is allowed to access a Generic Service or Sub-Server.\n\n           A non-active Common Transport Access Specifier is\n           represented by all rows of this table that have the same\n\n           values of fcmInstanceIndex, t11FcSpPoFabricIndex, and\n           t11FcSpPoNaCtDescrSpecifierIndex.')
t11FcSpPoNaCtDescrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 3, 5, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaCtDescrSpecifierIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaCtDescrIndex"))
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrEntry.setDescription('Each entry contains information about one Common Transport\n           Access Descriptor of an non-active Common Transport Access\n           Specifier used within the Fabric identified by\n           t11FcSpPoFabricIndex and managed within the Fibre Channel\n           management instance identified by fcmInstanceIndex.\n\n           The StorageType of a row in this table is specified by the\n           instance of t11FcSpPoStorageType that is INDEX-ed by the\n           same values of fcmInstanceIndex and t11FcSpPoFabricIndex.')
t11FcSpPoNaCtDescrSpecifierIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrSpecifierIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrSpecifierIndex.setDescription('An index value that uniquely identifies a particular\n           Common Transport Access Specifier within a Fabric.')
t11FcSpPoNaCtDescrIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrIndex.setDescription('An index value that uniquely identifies a particular\n           Common Transport Access Descriptor within a Common Transport\n           Access Specifier.')
t11FcSpPoNaCtDescrFlags = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 5, 1, 3), Bits().clone(namedValues=NamedValues(("allow", 0), ("gsTypeWildcard", 1), ("gsSubTypeWildcard", 2), ("readOnly", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrFlags.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP), February 2007,\n              section 7.1.5.1, and tables 117, 118, and 120.')
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrFlags.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrFlags.setDescription('The flag bits that specify how access is to be limited by\n           this Common Transport Access Descriptor:\n\n            - allow -- access to the specified Generic Service and\n              Server is allowed if this bit is set, and is to be denied\n              if this bit is not set.\n\n            - gsTypeWildcard -- if this bit is set, the Generic Service\n              to be allowed/denied is specified by the value of\n              t11FcSpPoNaCtDescrGsType, and the gsSubTypeWildcard bit\n              must not also be set.\n\n            - gsSubTypeWildcard -- if this bit is set, the Generic\n              Service to be allowed/denied is specified by the value of\n              t11FcSpPoNaCtDescrGsSubType, and the gsTypeWildcard bit\n              must not also be set.\n\n            - readOnly -- if this bit is set, then access is to be\n              granted only for reading.')
t11FcSpPoNaCtDescrGsType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrGsType.setReference('- ANSI INCITS 427-2006,\n              Fibre Channel - Generic Services-5 (FC-GS-5),\n              section 4.3.2.4.\n            - ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.5.1 and table 120.')
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrGsType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrGsType.setDescription('The GS_Type of the Generic Service (e.g., the FC-GS-5\n           Management Service) that is subject to access control.\n\n           This value is ignored if the gsTypeWildcard bit is not set\n           in the corresponding value of t11FcSpPoNaCtDescrFlags.')
t11FcSpPoNaCtDescrGsSubType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrGsSubType.setReference('- ANSI INCITS 427-2006,\n              Fibre Channel - Generic Services-5 (FC-GS-5),\n              section 4.3.2.5.\n            - ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.5.1 and table 120.')
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrGsSubType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrGsSubType.setDescription('The GS_Subtype of the Generic Server (e.g., the Fabric Zone\n           Server) that is subject to access control.  This value is\n           ignored if the gsSubTypeWildcard bit is not set in the\n           corresponding value of t11FcSpPoNaCtDescrFlags.')
t11FcSpPoNaCtDescrRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 5, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaCtDescrRowStatus.setDescription('The status of this row.  Values of object instances\n           within the row can be modified at any time.')
t11FcSpPoNaSwConnTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 3, 6), )
if mibBuilder.loadTexts: t11FcSpPoNaSwConnTable.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.6.')
if mibBuilder.loadTexts: t11FcSpPoNaSwConnTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwConnTable.setDescription('A table of non-active Switch Connectivity Objects.\n\n           A Switch Connectivity Object defines to which other\n           Switches or Nodes a particular Switch may/may not be\n           connected at the Node level and/or at the Port level.')
t11FcSpPoNaSwConnEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 3, 6, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSwConnSwitchName"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSwConnAllowedType"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSwConnPortNameOrAll"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSwConnAllowedIndex"))
if mibBuilder.loadTexts: t11FcSpPoNaSwConnEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwConnEntry.setDescription('Each entry contains the name of a Switch/Node with which\n           any port of a particular Switch on a particular Fabric, or\n           a particular port on that Switch, is allowed or not allowed\n           to be connected.\n\n           The particular Fabric is identified by t11FcSpPoFabricIndex\n           and managed within the Fibre Channel management instance\n           identified by fcmInstanceIndex.\n\n           The StorageType of a row in this table is specified by the\n           instance of t11FcSpPoStorageType that is INDEX-ed by the\n           same values of fcmInstanceIndex and t11FcSpPoFabricIndex.')
t11FcSpPoNaSwConnSwitchName = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 6, 1, 1), FcNameIdOrZero().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8))
if mibBuilder.loadTexts: t11FcSpPoNaSwConnSwitchName.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.6.1 and table 123.')
if mibBuilder.loadTexts: t11FcSpPoNaSwConnSwitchName.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwConnSwitchName.setDescription('The name of the Switch for which this Switch Connectivity\n           Object specifies topology restrictions.')
t11FcSpPoNaSwConnAllowedType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("switch", 1), ("node", 2))))
if mibBuilder.loadTexts: t11FcSpPoNaSwConnAllowedType.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.6.1 and table 123.')
if mibBuilder.loadTexts: t11FcSpPoNaSwConnAllowedType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwConnAllowedType.setDescription("This object specifies whether this row refers to an\n           'Allowed Switch' that concerns Switch-to-Switch\n           connectivity or an 'Allowed Node' that concerns\n           Switch-to-Node connectivity.  Consequently, this object's\n           value indicates whether the corresponding instance of\n           t11FcSpPoNaSwConnAllowedName specifies the name of a Switch\n           or the name of a Node.")
t11FcSpPoNaSwConnPortNameOrAll = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 6, 1, 3), FcNameIdOrZero().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(8, 8), )))
if mibBuilder.loadTexts: t11FcSpPoNaSwConnPortNameOrAll.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.6.1 and tables 123/124.')
if mibBuilder.loadTexts: t11FcSpPoNaSwConnPortNameOrAll.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwConnPortNameOrAll.setDescription("This object specifies either the particular port on which\n           this topology restriction applies, or if the value is the\n           zero-length string, that the topology restriction applies\n           to all ports of the Switch.\n\n           In other words, if this object's value contains the name of\n           a port, then this row represents a 'Port Connectivity Entry'\n           (as described in FC-SP) within a Switch Connectivity Object.")
t11FcSpPoNaSwConnAllowedIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 6, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FcSpPoNaSwConnAllowedIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwConnAllowedIndex.setDescription("When multiple rows in this table refer to different\n           'Allowed Switches' or to different 'Allowed Nodes' for the\n           same port(s) in the same Switch Connectivity Object, this\n           object provides a unique index value to distinguish between\n           such rows.")
t11FcSpPoNaSwConnAllowedNameType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 6, 1, 5), T11FcSpPolicyNameType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("nodeName", 1), ("restrictedNodeName", 2), ("portName", 3), ("restrictedPortName", 4), ("wildcard", 5), ("restrictedWildcard", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaSwConnAllowedNameType.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.6.1 and tables 123/124.')
if mibBuilder.loadTexts: t11FcSpPoNaSwConnAllowedNameType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwConnAllowedNameType.setDescription("If the value of this object is 'wildcard' or\n           'restrictedWildcard', this row specifies whether\n           connectivity is allowed/not allowed with entities not\n           explicitly named by other rows.\n\n           Otherwise, the combination of\n           t11FcSpPoNaSwConnAllowedNameType and\n           t11FcSpPoNaSwConnAllowedName specify the name of:\n\n           - a Switch (if t11FcSpPoNaSwConnAllowedType = 'switch'), or\n           - a Node (if t11FcSpPoNaSwConnAllowedType = 'node')\n\n           to which connectivity is allowed/not allowed.")
t11FcSpPoNaSwConnAllowedName = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 6, 1, 6), FcNameIdOrZero().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaSwConnAllowedName.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.6.1 and tables 123/124.')
if mibBuilder.loadTexts: t11FcSpPoNaSwConnAllowedName.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwConnAllowedName.setDescription("If t11FcSpPoNaSwConnAllowedNameType has the value\n           'wildcard' or 'restrictedWildcard', this object has the\n           value '0000000000000000'h.\n\n           Otherwise, the combination of\n           t11FcSpPoNaSwConnAllowedNameType and\n           t11FcSpPoNaSwConnAllowedName specify the name of:\n\n           - a Switch (if t11FcSpPoNaSwConnAllowedType = 'switch'), or\n           - a Node (if t11FcSpPoNaSwConnAllowedType = 'node')\n\n           to which connectivity is allowed/not allowed.")
t11FcSpPoNaSwConnRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 6, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaSwConnRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaSwConnRowStatus.setDescription('The status of this row.  Values of object instances\n           within the row can be modified at any time.')
t11FcSpPoNaIpMgmtTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 3, 7), )
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtTable.setDescription('A table of IP Management Entries in non-active IP\n           Management List Objects.  The IP Management List Object is a\n           Fabric-wide Policy Object that describes which IP hosts are\n           allowed to manage a Fabric.\n\n           One non-active IP Management List Object is represented by\n           all rows of this table that have the same values of\n           fcmInstanceIndex and t11FcSpPoFabricIndex.')
t11FcSpPoNaIpMgmtEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 3, 7, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaIpMgmtListName"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaIpMgmtEntryNameType"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaIpMgmtEntryNameLow"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaIpMgmtEntryNameHigh"))
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtEntry.setDescription("Each entry contains information about one IP Management\n\n           entry within a non-active IP Management List Object for the\n           Fabric identified by t11FcSpPoFabricIndex and managed\n           within the Fibre Channel management instance identified\n           by fcmInstanceIndex.\n\n           The Policy Object Name of an IP Management Entry Policy\n           Object is either an IPv6 Address Range or an IPv4 Address\n           Range.  In a Fabric's database of Policy Objects, every\n           Policy Object Name, including these Internet address ranges,\n           is represented as a (T11FcSpPolicyNameType,\n           T11FcSpPolicyName) tuple.  In contrast, this MIB module\n           uses the conventional MIB syntax for IP addresses, and\n           therefore represents the Policy Object Name of an IP\n           Management Entry Policy Object as a (InetAddressType,\n           InetAddress, InetAddress) tuple.\n\n           In theory, the use of t11FcSpPoNaIpMgmtEntryNameLow and\n           t11FcSpPoNaIpMgmtEntryNameHigh, which have the syntax of\n           InetAddress, in the INDEX could cause the need for\n           excessively long OIDs.  In practice, this can't happen\n           because FC-SP doesn't allow these objects to be specified\n           as DNS names.\n\n           The StorageType of a row in this table is specified by the\n           instance of t11FcSpPoStorageType that is INDEX-ed by the\n           same values of fcmInstanceIndex and t11FcSpPoFabricIndex.")
t11FcSpPoNaIpMgmtListName = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 7, 1, 1), T11FcSpAlphaNumName())
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtListName.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.7.1 and table 125.')
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtListName.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtListName.setDescription('The name of a non-active Node Membership List Object.')
t11FcSpPoNaIpMgmtEntryNameType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 7, 1, 2), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2))))
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtEntryNameType.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, sections 7.1.7.1 and table 126.')
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtEntryNameType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtEntryNameType.setDescription("The combination of t11FcSpPoNaIpMgmtEntryNameType,\n           t11FcSpPoNaIpMgmtNameLow, and t11FcSpPoNaIpMgmtNameHigh\n           specify the Internet address range of this IP Management\n           Entry in the IP Management List Object.\n\n           The FC-SP specification does not allow this address to\n           be specified using a DNS domain name, nor does it allow\n           the specification of zone indexes.  Therefore, the\n           type of address must be one of: 'ipv4' or 'ipv6'.")
t11FcSpPoNaIpMgmtEntryNameLow = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 7, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtEntryNameLow.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, sections 7.1.7.1 and table 126.')
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtEntryNameLow.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtEntryNameLow.setDescription('The lower end of an Internet address range.  The type\n           of this address is given by the corresponding instance\n           of t11FcSpPoNaIpMgmtEntryNameType.\n\n           The combination of t11FcSpPoNaIpMgmtEntryNameType,\n           t11FcSpPoNaIpMgmtNameLow, and t11FcSpPoIpMgmtNameHigh\n           specify the Internet address range of this IP Management\n           Entry in the IP Management List Object.')
t11FcSpPoNaIpMgmtEntryNameHigh = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 7, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtEntryNameHigh.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, sections 7.1.7.1 and table 126.')
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtEntryNameHigh.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtEntryNameHigh.setDescription('The higher end of an Internet address range.  The type\n           of this address is given by the corresponding instance\n           of t11FcSpPoNaIpMgmtEntryNameType.\n\n           The combination of t11FcSpPoNaIpMgmtEntryNameType,\n           t11FcSpPoNaIpMgmtNameLow, and t11FcSpPoNaIpMgmtNameHigh\n           specify the Internet address range of this IP Management\n           Entry in the IP Management List Object.')
t11FcSpPoNaIpMgmtWkpIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 7, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtWkpIndex.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.7.1 and tables 127/129.')
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtWkpIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtWkpIndex.setDescription('This object identifies the restrictions for IP management\n           access by IP hosts in this range of IP addresses.\n\n           The restrictions are specified as the set of Well-Known\n           Protocols Access Descriptors contained in those rows of the\n           t11FcSpPoNaWkpDescrTable for which the value of\n           t11FcSpPoNaWkpDescrSpecifierIndx is the same as the value\n           of this object.  If there are no such rows or if the value\n           of this object is zero, then this IP Management Entry does\n           not identify any Well-Known Protocols Access restrictions.')
t11FcSpPoNaIpMgmtAttribute = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 7, 1, 6), T11FcSpAlphaNumNameOrAbsent()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtAttribute.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.7.1 and table 128.')
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtAttribute.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtAttribute.setDescription("The name of a non-active Attribute Policy Object that\n           is defined for this IP Management entry.  The zero-length\n           string indicates that no non-active Attribute Policy Object\n           is defined for it.\n\n           The effect of having no rows in the t11FcSpPoNaAttribTable\n           for which the value of t11FcSpPoNaAttribName is the same\n           as the value of this object, is the same as this object's\n           value being the zero-length string.")
t11FcSpPoNaIpMgmtRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 7, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaIpMgmtRowStatus.setDescription('The status of this row.  Values of object instances\n           within the row can be modified at any time.')
t11FcSpPoNaWkpDescrTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 3, 8), )
if mibBuilder.loadTexts: t11FcSpPoNaWkpDescrTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaWkpDescrTable.setDescription('A table of the Well-Known Protocol Access Descriptors\n           referenced from non-active Policy Objects.\n\n           A Well-Known Protocol Access Specifier is a list of\n           Well-Known Protocol Access Descriptors each of which\n           specifies a protocol number, a port number, and/or various\n           flags specifying how IP management access is restricted.\n\n           A non-active Well-Known Protocol Transport Access Specifier\n           is represented by all rows of this table that have the same\n           values of fcmInstanceIndex, t11FcSpPoFabricIndex, and\n           t11FcSpPoNaWkpDescrSpecifierIndx.')
t11FcSpPoNaWkpDescrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 3, 8, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaWkpDescrSpecifierIndx"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaWkpDescrIndex"))
if mibBuilder.loadTexts: t11FcSpPoNaWkpDescrEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaWkpDescrEntry.setDescription('Each entry contains information about one Well-Known\n\n           Protocol Access Descriptor of a non-active Well-Known\n           Protocol Access Specifier used within the Fabric identified\n           by t11FcSpPoFabricIndex and managed within the Fibre Channel\n           management instance identified by fcmInstanceIndex.\n\n           The StorageType of a row in this table is specified by the\n           instance of t11FcSpPoStorageType that is INDEX-ed by the\n           same values of fcmInstanceIndex and t11FcSpPoFabricIndex.')
t11FcSpPoNaWkpDescrSpecifierIndx = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FcSpPoNaWkpDescrSpecifierIndx.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaWkpDescrSpecifierIndx.setDescription('An index value that uniquely identifies a particular\n           non-active Well-Known Protocol Access Specifier within\n           a Fabric.')
t11FcSpPoNaWkpDescrIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 8, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FcSpPoNaWkpDescrIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaWkpDescrIndex.setDescription('An index value that uniquely identifies a particular\n           Well-Known Protocol Access Descriptor within a\n           non-active Well-Known Protocol Access Specifier.')
t11FcSpPoNaWkpDescrFlags = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 8, 1, 3), Bits().clone(namedValues=NamedValues(("allow", 0), ("wkpWildcard", 1), ("destPortWildcard", 2), ("readOnly", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaWkpDescrFlags.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.7.1 and table 131.')
if mibBuilder.loadTexts: t11FcSpPoNaWkpDescrFlags.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaWkpDescrFlags.setDescription('The flag bits that specify how access is to be limited by\n           this Well-Known Protocol Access Descriptor:\n\n            - allow -- IP management access using this protocol/port\n              is allowed if this bit is set, and to be denied if this\n              bit is not set.\n\n            - wkpWildcard -- if this bit is set, the IP Protocol number\n              of the Well-Known Protocol to be allowed/denied is\n              specified by the value of t11FcSpPoNaWkpDescrWkpNumber.\n\n            - destPortWildcard -- if this bit is set, the Destination\n              (TCP/UDP) Port number of the Well-Known Protocol to be\n              allowed/denied is specified by the value of\n              t11FcSpPoNaWkpDescrDestPort.\n\n            - readOnly -- if this bit is set, then access is to be\n              granted only for reading.')
t11FcSpPoNaWkpDescrWkpNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 8, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaWkpDescrWkpNumber.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.7.1 and table 131.\n            - http://www.iana.org/assignments/protocol-numbers.')
if mibBuilder.loadTexts: t11FcSpPoNaWkpDescrWkpNumber.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaWkpDescrWkpNumber.setDescription("When the 'wkpWildcard' bit is set in the corresponding\n           instance of t11FcSpPoNaWkpDescrFlags, this object specifies\n           the IP protocol number of the Well-Known Protocol.")
t11FcSpPoNaWkpDescrDestPort = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 8, 1, 5), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaWkpDescrDestPort.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.7.1 and table 131.\n            - http://www.iana.org/assignments/port-numbers.')
if mibBuilder.loadTexts: t11FcSpPoNaWkpDescrDestPort.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaWkpDescrDestPort.setDescription("When the 'destPortWildcard' bit is set in the corresponding\n           instance of t11FcSpPoNaWkpDescrFlags, this object specifies\n           the Destination (TCP/UDP) Port number of the Well-Known\n           Protocol.  When the 'destPortWildcard' bit is reset, this\n           object is ignored (and can have the value zero).")
t11FcSpPoNaWkpDescrRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 8, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaWkpDescrRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaWkpDescrRowStatus.setDescription('The status of this row.  Values of object instances\n           within the row can be modified at any time.')
t11FcSpPoNaAttribTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 3, 9), )
if mibBuilder.loadTexts: t11FcSpPoNaAttribTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaAttribTable.setDescription('A table of the Attribute Policy Objects being used within\n           non-active Policy Objects.\n\n           A non-active Attribute Policy Object is represented by all\n           the Attribute Entries in this table that have the same\n           value of t11FcSpPoNaAttribName.')
t11FcSpPoNaAttribEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 3, 9, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaAttribName"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaAttribEntryIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaAttribPartIndex"))
if mibBuilder.loadTexts: t11FcSpPoNaAttribEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaAttribEntry.setDescription("Each entry contains information about one Attribute\n           Entry contained within an Attribute Policy Object\n           that is non-active within the Fabric identified by\n           t11FcSpPoFabricIndex and managed within the Fibre Channel\n           management instance identified by fcmInstanceIndex.\n\n           For some types of Attribute Policy Objects, it is valuable\n           to break out some semantically significant parts of the\n           Policy Object's value into their own individual MIB\n           objects; for example, to extract the one or more individual\n           Authentication Protocol Identifiers and associated\n\n           Authentication Protocol Parameters out of an Attribute\n           containing a 'AUTH_Negotiate Message Payload'.  For such\n           types, another MIB table is defined to hold the extracted\n           values in MIB objects specific to the Attribute Policy\n           Object's type.  In such cases, the\n           t11FcSpPoNaAttribExtension object in this table points to\n           the other MIB table.\n\n           If the value of one Attribute Entry is too large (more than\n           256 bytes) to be contained within the value of one instance\n           of t11FcSpPoNaAttribValue, then one row in this table\n           contains the first 256 bytes, and one (or more) other row(s)\n           in this table contain the rest of the value.\n\n           The StorageType of a row in this table is specified by the\n           instance of t11FcSpPoStorageType that is INDEX-ed by the\n           same values of fcmInstanceIndex and t11FcSpPoFabricIndex.")
t11FcSpPoNaAttribName = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 9, 1, 1), T11FcSpAlphaNumName())
if mibBuilder.loadTexts: t11FcSpPoNaAttribName.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.8.1 and table 133.')
if mibBuilder.loadTexts: t11FcSpPoNaAttribName.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaAttribName.setDescription('The name of the Attribute Policy Object containing one\n           or more Attribute Entries.')
t11FcSpPoNaAttribEntryIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 9, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FcSpPoNaAttribEntryIndex.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.8.1, tables 133/134.')
if mibBuilder.loadTexts: t11FcSpPoNaAttribEntryIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaAttribEntryIndex.setDescription('A unique value to distinguish this Attribute Entry\n           from other Attribute Entries contained in the same\n           Attribute Policy Object.')
t11FcSpPoNaAttribPartIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 9, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FcSpPoNaAttribPartIndex.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.1.8.1, tables 134/135.')
if mibBuilder.loadTexts: t11FcSpPoNaAttribPartIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaAttribPartIndex.setDescription('When the value of an Attribute Entry is shorter than 257\n           bytes, the whole value is contained in one instance of\n           t11FcSpPoNaAttribValue, and the value of this object is 1.\n\n           If the value of an Attribute Entry is longer than 256 bytes,\n           then that value is divided up on 256-byte boundaries such\n           that all parts are 256 bytes long except the last part which\n           is shorter if necessary, with each such part contained in\n           a separate row of this table, and the value of this object\n           is set to the part number.  That is, this object has the\n           value of 1 for bytes 0-255, the value of 2 for bytes\n           256-511, etc.')
t11FcSpPoNaAttribType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 9, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaAttribType.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP), February 2007,\n              section 7.1.8.1, tables 134/135 and table 10.')
if mibBuilder.loadTexts: t11FcSpPoNaAttribType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaAttribType.setDescription("The type of attribute.  The first type to be defined is:\n\n           t11FcSpPoNaAttribType    t11FcSpPoNaAttribValue\n\n           =====================    ======================\n             '00000001'h          The AUTH_Negotiate Message Payload\n           ")
t11FcSpPoNaAttribValue = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 9, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaAttribValue.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP), February 2007,\n              section 7.1.8.1, tables 134/135 and table 10.')
if mibBuilder.loadTexts: t11FcSpPoNaAttribValue.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaAttribValue.setDescription('The value of an Attribute Entry is divided up on 256-byte\n           boundaries such that all parts are 256 bytes long except the\n           last part, which is shorter if necessary, and each such part\n           is contained in a separate instance of this object.\n\n           When the value of the corresponding instance of\n           t11FcSpPoNaAttribExtension is not zeroDotZero, then the same\n           underlying management data has its value contained both in\n           this object and in the individual/broken-out parts pointed\n           to by t11FcSpPoNaAttribExtension.  Thus, after any\n           modification of the underlying management data, e.g., after\n           a Set operation to the value of either MIB representation,\n           then that modification is reflected in the values of both\n           MIB representations.')
t11FcSpPoNaAttribExtension = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 9, 1, 6), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoNaAttribExtension.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaAttribExtension.setDescription("For some types of Attribute Policy Object, the value of\n           this MIB object points to type-specific MIB objects that\n           contain individual/broken-out parts of the Attribute Policy\n           Object's value.  If this object doesn't point to such\n           type-specific MIB objects, then it contains the value:\n           zeroDotZero.\n\n           In particular, when the value of t11FcSpPoNaAttribType\n           indicates 'AUTH_Negotiate Message Payload', one or more\n\n           Authentication Protocol Identifiers and their associated\n           Authentication Protocol Parameters are embedded within\n           the value of the corresponding instance of\n           t11FcSpPoNaAttribValue; MIB objects to contain these\n           individual values are defined in the\n           t11FcSpPoAuthProtTable.  Thus, for an 'AUTH_Negotiate\n           Message Payload' Attribute, the value of this object would\n           contain the OID of t11FcSpPoNaAuthProtTable.\n\n           When the value of this object is not zeroDotZero, then the\n           same underlying management data has its value contained in\n           both the individual/broken-out parts pointed to by this\n           object and in the corresponding instance of\n           t11FcSpPoNaAttribValue.  Thus, after any modification of the\n           underlying management data, e.g., after a Set operation to\n           the value of either MIB representation, then that\n           modification is reflected in the values of both MIB\n           representations.")
t11FcSpPoNaAttribRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 9, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaAttribRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaAttribRowStatus.setDescription('The status of this row.  Values of object instances\n           within the row can be modified at any time.')
t11FcSpPoNaAuthProtTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 3, 10), )
if mibBuilder.loadTexts: t11FcSpPoNaAuthProtTable.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, sections 5.3.2 & 7.1.8.1,\n              tables 134/135 and tables 10/11.')
if mibBuilder.loadTexts: t11FcSpPoNaAuthProtTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaAuthProtTable.setDescription("A table of Authentication Protocol Identifier and\n           Authentication Protocol Parameters that are embedded in\n           Attribute Policy Objects being used within non-active\n           Policy Objects.\n\n           This table is used for Attribute Entries of Attribute Policy\n           Objects for which the value of t11FcSpPoNaAttribType\n           indicates 'AUTH_Negotiate Message Payload' and the value of\n           t11FcSpPoNaAttribExtension contains the OID of this table.")
t11FcSpPoNaAuthProtEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 3, 10, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaAttribName"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaAttribEntryIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaAuthProtIdentifier"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoNaAuthProtPartIndex"))
if mibBuilder.loadTexts: t11FcSpPoNaAuthProtEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaAuthProtEntry.setDescription('Each row contains information about an Authentication\n           Protocol that is extracted out of the Attribute Entry\n           (identified by t11FcSpPoNaAttribEntryIndex) of the\n           non-active Policy Attribute Object (identified by\n           t11FcSpPoNaAttribName) for the Fabric identified by\n           t11FcSpPoFabricIndex and managed within the Fibre Channel\n           management instance identified by fcmInstanceIndex.\n\n           If the value of one Attribute Protocol Parameters string is\n           too large (more than 256 bytes) to be contained within the\n           value of one instance of t11FcSpPoNaAuthProtParams, then\n           one row in this table contains the first 256 bytes, and\n           one (or more) other row(s) in this table contain the rest\n           of the value.\n\n           The same underlying management data that is represented in\n           rows of this table is also represented by the corresponding\n           instances of t11FcSpPoNaAttribValue.  Thus, after any\n           modification of the underlying management data, e.g., after\n           a Set operation to the value of either MIB representation,\n           then that modification is reflected in the values of both\n           MIB representations.')
t11FcSpPoNaAuthProtIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: t11FcSpPoNaAuthProtIdentifier.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 5.3.2, table 11.')
if mibBuilder.loadTexts: t11FcSpPoNaAuthProtIdentifier.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaAuthProtIdentifier.setDescription("The Authentication Protocol Identifier:\n\n                    1      = DH-CHAP\n                    3      = FCPAP\n                    4      = IKEv2\n                    5      = IKEv2-AUTH\n              240 thru 255 = Vendor Specific Protocols\n\n            all other values are 'Reserved' (by T11).")
t11FcSpPoNaAuthProtPartIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: t11FcSpPoNaAuthProtPartIndex.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 5.3.2, table 10.')
if mibBuilder.loadTexts: t11FcSpPoNaAuthProtPartIndex.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaAuthProtPartIndex.setDescription('When the value of an Attribute Protocol Parameters string\n           is shorter than 257 bytes, the whole value is contained in\n           one instance of t11FcSpPoNaAuthProtParams, and the value of\n           this object is 1. (This includes the case when the Attribute\n           Protocol Parameters string is zero bytes in length.)\n\n           If the value of an Authentication Protocol Parameters string\n           is longer than 256 bytes, then that value is divided up on\n           256-byte boundaries such that all parts are 256 bytes long\n           except the last part, which is shorter if necessary, with\n           each such part contained in a separate row of this table,\n           and the value of this object is set to the part number.\n           That is, this object has the value of 1 for bytes 0-255,\n           the value of 2 for bytes 256-511, etc.')
t11FcSpPoNaAuthProtParams = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 10, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaAuthProtParams.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 5.3.2, table 10.')
if mibBuilder.loadTexts: t11FcSpPoNaAuthProtParams.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaAuthProtParams.setDescription('The value of an Authentication Protocol Parameters string\n           is divided up on 256-byte boundaries such that all parts\n           are 256 bytes long except the last part, which is shorter\n           if necessary, and each such part is contained in a\n           separate instance of this object.')
t11FcSpPoNaAuthProtRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 3, 10, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcSpPoNaAuthProtRowStatus.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNaAuthProtRowStatus.setDescription('The status of this row.  Values of object instances\n           within the row can be modified at any time.')
t11FcSpPoStatsTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 4, 1), )
if mibBuilder.loadTexts: t11FcSpPoStatsTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoStatsTable.setDescription('A table of statistics maintained by FC-SP Security\n           Policy Servers.')
t11FcSpPoStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 4, 1, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"))
if mibBuilder.loadTexts: t11FcSpPoStatsEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoStatsEntry.setDescription('A set of statistics for the FC-SP Security Policy Server on\n           the Fabric identified by the value of t11FcSpPoFabricIndex,\n           and managed within the Fibre Channel management instance\n           identified by fcmInstanceIndex.')
t11FcSpPoInRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 4, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoInRequests.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.3.')
if mibBuilder.loadTexts: t11FcSpPoInRequests.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoInRequests.setDescription("The number of FC-SP Policy Management Requests\n           (e.g., GPS, APS, etc.) received by this FC-SP\n           Security Policy Server on this Fabric.\n\n           This counter has no discontinuities other than those\n           that all Counter32's have when sysUpTime=0.")
t11FcSpPoInAccepts = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 4, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoInAccepts.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.3.')
if mibBuilder.loadTexts: t11FcSpPoInAccepts.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoInAccepts.setDescription("The number of times that this FC-SP Security Policy Server\n           sent an Accept CT_IU on this Fabric in response to a\n           received FC-SP Policy Management Request (e.g., GPS, APS,\n           etc.).\n\n           This counter has no discontinuities other than those\n           that all Counter32's have when sysUpTime=0.")
t11FcSpPoInRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoInRejects.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.3.')
if mibBuilder.loadTexts: t11FcSpPoInRejects.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoInRejects.setDescription("The number of times that this FC-SP Security Policy Server\n           sent a Reject CT_IU on this Fabric in response to a\n           received FC-SP Policy Management Request (e.g., GPS, APS,\n           etc.).\n\n           This counter has no discontinuities other than those\n           that all Counter32's have when sysUpTime=0.")
t11FcSpPoServerAddress = MibScalar((1, 3, 6, 1, 2, 1, 178, 1, 5, 1), FcNameIdOrZero()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: t11FcSpPoServerAddress.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoServerAddress.setDescription('The WWN of the FC-SP Security Policy Server that\n           received a request that is referenced in a\n           notification.')
t11FcSpPoControlTable = MibTable((1, 3, 6, 1, 2, 1, 178, 1, 5, 2), )
if mibBuilder.loadTexts: t11FcSpPoControlTable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoControlTable.setDescription('A table of control information, including the memory\n           realization of FC-SP Policy Databases, and concerning\n           the generation of notifications due to FC-SP\n           Policy-related events.')
t11FcSpPoControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 178, 1, 5, 2, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "T11-FC-SP-POLICY-MIB", "t11FcSpPoFabricIndex"))
if mibBuilder.loadTexts: t11FcSpPoControlEntry.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoControlEntry.setDescription('Each entry contains control information specific to FC-SP\n           Policy and Policy-related events for the Fabric identified\n           by the value of t11FcSpPoFabricIndex, and managed within\n           the Fibre Channel management instance identified by\n           fcmInstanceIndex.')
t11FcSpPoStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 5, 2, 1, 1), StorageType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FcSpPoStorageType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoStorageType.setDescription("This object specifies the memory realization of FC-SP\n           Policy Objects and related information for a particular\n           Fabric; specifically, for:\n\n             - rows created and/or modified for the particular\n               Fabric in these tables:\n\n                   t11FcSpPoNaSummaryTable\n                   t11FcSpPoNaSwListTable\n                   t11FcSpPoNaSwMembTable\n                   t11FcSpPoNaNoMembTable\n                   t11FcSpPoNaCtDescrTable\n                   t11FcSpPoNaSwConnTable\n                   t11FcSpPoNaIpMgmtTable\n                   t11FcSpPoNaWkpDescrTable\n                   t11FcSpPoNaAttribTable\n\n             - the activate and deactivate actions invoked through\n               the t11FcSpPoOperActivate and t11FcSpPoOperDeActivate\n               objects for the particular Fabric; and\n\n             - modified information contained in the same row\n               as an instance of this object.\n\n           Even if an instance of this object has the value\n           'permanent(4)', none of the information defined in\n           this MIB module for the given Fabric needs to be\n           writable.")
t11FcSpPoNotificationEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 5, 2, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FcSpPoNotificationEnable.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNotificationEnable.setDescription('This object specifies whether the following types of\n           notifications:\n\n              t11FcSpPoNotifyActivation,\n              t11FcSpPoNotifyActivateFail,\n              t11FcSpPoNotifyDeactivation and\n              t11FcSpPoNotifyDeactivateFail\n\n           should be generated for this Fabric.')
t11FcSpPoLastNotifyType = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("activation", 2), ("activateFail", 3), ("deactivation", 4), ("deactivateFail", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoLastNotifyType.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoLastNotifyType.setDescription("An indication of which of the following types of\n           notification is currently being/was most recently\n           generated for the Fabric:\n\n             'activation'     -- t11FcSpPoNotifyActivation\n             'activateFail'   -- t11FcSpPoNotifyActivateFail\n             'deactivation'   -- t11FcSpPoNotifyDeactivation\n             'deactivateFail' -- t11FcSpPoNotifyDeactivateFail\n\n           The value 'none' indicates that none of these types of\n           notifications have been generated since the last restart\n           of the network management system, and therefore that the\n           corresponding instances of: t11FcSpPoRequestSource,\n           t11FcSpPoReasonCode, t11FcSpPoCtCommandString,\n           t11FcSpPoReasonCodeExp, and\n           t11FcSpPoReasonVendorCode are irrelevant.")
t11FcSpPoRequestSource = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 5, 2, 1, 4), FcNameIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoRequestSource.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoRequestSource.setDescription('The WWN of the source of the (Activate Policy Summary\n           or Deactivate Policy Summary) request for which the\n           current/most recent notification of the type indicated by\n           the corresponding instance of t11FcSpPoLastNotifyType\n           is being/was generated.\n\n           If no source is available, the value of this object is\n           the zero-length string.')
t11FcSpPoReasonCode = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 5, 2, 1, 5), T11NsGs4RejectReasonCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoReasonCode.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.3.6.2 & 7.3.6.3')
if mibBuilder.loadTexts: t11FcSpPoReasonCode.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoReasonCode.setDescription("The reason code associated with the failure that is\n           indicated when the value of the corresponding instance\n           of t11FcSpPoLastNotifyType is 'activateFail' or\n           'deactivateFail'.\n\n           For other values of t11FcSpPoLastNotifyType, the value\n           of this object is 'none(1)'.")
t11FcSpPoCtCommandString = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 5, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoCtCommandString.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoCtCommandString.setDescription("The binary content of the failed request that is\n           indicated when the value of the corresponding instance of\n           t11FcSpPoLastNotifyType is 'activateFail' or\n           'deactivateFail'.  The content of the request is formatted\n           as an octet string (in network byte order) containing the\n           CT_IU, as described in Table 2 of [FC-GS-5] (including the\n           preamble).\n\n           For other values of t11FcSpPoLastNotifyType, or if the\n           CT_IU's content is unavailable, the value of this object\n           is the zero-length string.\n\n           When the length of this object is 255 octets, it\n           contains the first 255 octets of the CT_IU (in\n           network-byte order).")
t11FcSpPoReasonCodeExp = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 5, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoReasonCodeExp.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.3.6.2 & 7.3.6.3')
if mibBuilder.loadTexts: t11FcSpPoReasonCodeExp.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoReasonCodeExp.setDescription("The reason code explanation associated with the failure\n           that is indicated when the value of the corresponding\n           instance of t11FcSpPoLastNotifyType is 'activateFail' or\n           'deactivateFail'.\n\n           For other values of t11FcSpPoLastNotifyType, the value\n           of this object is zero.")
t11FcSpPoReasonVendorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 178, 1, 5, 2, 1, 8), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcSpPoReasonVendorCode.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.3.6.2 & 7.3.6.3')
if mibBuilder.loadTexts: t11FcSpPoReasonVendorCode.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoReasonVendorCode.setDescription("The vendor-specific reason code associated with the failure\n           that is indicated when the value of the corresponding\n           instance of t11FcSpPoLastNotifyType is 'activateFail' or\n           'deactivateFail'.\n\n           For other values of t11FcSpPoLastNotifyType, or if no\n           vendor-specific reason code is available, the value\n           of this object is the zero-length string.")
t11FcSpPoNotifyActivation = NotificationType((1, 3, 6, 1, 2, 1, 178, 0, 1)).setObjects(("T11-FC-SP-POLICY-MIB", "t11FcSpPoServerAddress"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoPolicySummaryObjName"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoRequestSource"))
if mibBuilder.loadTexts: t11FcSpPoNotifyActivation.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNotifyActivation.setDescription('This notification is generated whenever a Security\n           Policy Server (indicated by the value of\n           t11FcSpPoServerAddress) successfully completes the\n           execution of an Activate Policy Summary request.\n           The value of t11FcSpPoRequestSource indicates\n           the source of the APS request.  The value of\n           t11FcSpPoPolicySummaryObjName indicates the name of\n           the activated Policy Summary Object.')
t11FcSpPoNotifyActivateFail = NotificationType((1, 3, 6, 1, 2, 1, 178, 0, 2)).setObjects(("T11-FC-SP-POLICY-MIB", "t11FcSpPoServerAddress"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoRequestSource"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoCtCommandString"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoReasonCode"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoReasonCodeExp"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoReasonVendorCode"))
if mibBuilder.loadTexts: t11FcSpPoNotifyActivateFail.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNotifyActivateFail.setDescription('This notification is generated whenever a Security Policy\n           Server (indicated by the value of t11FcSpPoServerAddress)\n           fails to complete the execution of an Activate Policy\n           Summary request.\n\n           The value of t11FcSpPoCtCommandString indicates the\n           rejected request, and the values of t11FcSpPoReasonCode,\n           t11FcSpPoReasonCodeExp, and t11FcSpPoReasonVendorCode\n           indicate the reason for the rejection.  The value of\n           t11FcSpPoRequestSource indicates the source of the\n           request.')
if mibBuilder.loadTexts: t11FcSpPoNotifyActivateFail.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.3.6.2.')
t11FcSpPoNotifyDeactivation = NotificationType((1, 3, 6, 1, 2, 1, 178, 0, 3)).setObjects(("T11-FC-SP-POLICY-MIB", "t11FcSpPoServerAddress"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoRequestSource"))
if mibBuilder.loadTexts: t11FcSpPoNotifyDeactivation.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNotifyDeactivation.setDescription('This notification is generated whenever a Security\n           Policy Server (indicated by the value of\n           t11FcSpPoServerAddress) successfully completes the\n\n           execution of a Deactivate Policy Summary request.\n           The value of t11FcSpPoRequestSource indicates\n           the source of the DPS request.')
if mibBuilder.loadTexts: t11FcSpPoNotifyDeactivation.setReference('- ANSI INCITS 426-2007, T11/Project 1570-D,\n              Fibre Channel - Security Protocols (FC-SP),\n              February 2007, section 7.3.6.3.')
t11FcSpPoNotifyDeactivateFail = NotificationType((1, 3, 6, 1, 2, 1, 178, 0, 4)).setObjects(("T11-FC-SP-POLICY-MIB", "t11FcSpPoServerAddress"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoRequestSource"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoCtCommandString"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoReasonCode"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoReasonCodeExp"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoReasonVendorCode"))
if mibBuilder.loadTexts: t11FcSpPoNotifyDeactivateFail.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNotifyDeactivateFail.setDescription('This notification is generated whenever a Security Policy\n           Server (indicated by the value of t11FcSpPoServerAddress)\n           fails to complete the execution of a Deactivate Policy\n           Summary request.\n\n           The value of t11FcSpPoCtCommandString indicates the\n           rejected request, and the values of t11FcSpPoReasonCode,\n           t11FcSpPoReasonCodeExp, and t11FcSpPoReasonVendorCode\n           indicate the reason for the rejection.  The value of\n           t11FcSpPoRequestSource indicates the source of the\n           request.')
t11FcSpPoMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 178, 2, 1))
t11FcSpPoMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 178, 2, 2))
t11FcSpPoMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 178, 2, 1, 1)).setObjects(("T11-FC-SP-POLICY-MIB", "t11FcSpPoActiveObjectsGroup"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNonActiveObjectsGroup"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNotifyObjectsGroup"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNotificationGroup"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoOperationsObjectsGroup"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoStatsObjectsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FcSpPoMIBCompliance = t11FcSpPoMIBCompliance.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoMIBCompliance.setDescription('The compliance statement for entities that\n           support the Fabric Policies defined in FC-SP,')
t11FcSpPoActiveObjectsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 178, 2, 2, 1)).setObjects(("T11-FC-SP-POLICY-MIB", "t11FcSpPoPolicySummaryObjName"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoAdminFabricName"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoActivatedTimeStamp"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoSummaryPolicyType"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoSummaryHashFormat"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoSummaryHashValue"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoSwMembSwitchFlags"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoSwMembDomainID"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoSwMembPolicyDataRole"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoSwMembAuthBehaviour"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoSwMembAttribute"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNoMembFlags"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNoMembCtAccessIndex"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNoMembAttribute"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoCtDescrFlags"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoCtDescrGsType"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoCtDescrGsSubType"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoSwConnAllowedNameType"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoSwConnAllowedName"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoIpMgmtWkpIndex"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoIpMgmtAttribute"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoWkpDescrFlags"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoWkpDescrWkpNumber"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoWkpDescrDestPort"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoAttribType"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoAttribValue"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoAttribExtension"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoAuthProtParams"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FcSpPoActiveObjectsGroup = t11FcSpPoActiveObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoActiveObjectsGroup.setDescription('A collection of MIB objects that contain information\n           about active Policy Objects that express Fibre Channel\n           Security (FC-SP) policy.')
t11FcSpPoOperationsObjectsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 178, 2, 2, 2)).setObjects(("T11-FC-SP-POLICY-MIB", "t11FcSpPoOperActivate"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoOperDeActivate"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoOperResult"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoOperFailCause"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FcSpPoOperationsObjectsGroup = t11FcSpPoOperationsObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoOperationsObjectsGroup.setDescription('A collection of MIB objects that allow a new set of\n           Fibre Channel Security (FC-SP) policies to be activated\n           or an existing set to be deactivated.')
t11FcSpPoNonActiveObjectsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 178, 2, 2, 3)).setObjects(("T11-FC-SP-POLICY-MIB", "t11FcSpPoStorageType"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSummaryPolicyNameType"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSummaryPolicyName"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSummaryHashStatus"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSummaryHashFormat"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSummaryHashValue"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSummaryRowStatus"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSwListFabricName"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSwListRowStatus"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSwMembFlags"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSwMembDomainID"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSwMembPolicyDataRole"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSwMembAuthBehaviour"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSwMembAttribute"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSwMembRowStatus"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaNoMembFlags"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaNoMembCtAccessIndex"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaNoMembAttribute"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaNoMembRowStatus"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaCtDescrFlags"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaCtDescrGsType"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaCtDescrGsSubType"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaCtDescrRowStatus"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSwConnAllowedNameType"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSwConnAllowedName"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaSwConnRowStatus"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaIpMgmtWkpIndex"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaIpMgmtAttribute"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaIpMgmtRowStatus"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaWkpDescrFlags"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaWkpDescrWkpNumber"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaWkpDescrDestPort"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaWkpDescrRowStatus"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaAttribType"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaAttribValue"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaAttribExtension"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaAttribRowStatus"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaAuthProtParams"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNaAuthProtRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FcSpPoNonActiveObjectsGroup = t11FcSpPoNonActiveObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNonActiveObjectsGroup.setDescription('A collection of MIB objects that contain information\n           about non-active Policy Objects available for activation\n           in order to change Fibre Channel Security (FC-SP) policy.')
t11FcSpPoStatsObjectsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 178, 2, 2, 4)).setObjects(("T11-FC-SP-POLICY-MIB", "t11FcSpPoInRequests"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoInAccepts"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoInRejects"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FcSpPoStatsObjectsGroup = t11FcSpPoStatsObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoStatsObjectsGroup.setDescription('A collection of MIB objects that contain statistics\n           that can be maintained by FC-SP Security Policy Servers.')
t11FcSpPoNotifyObjectsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 178, 2, 2, 5)).setObjects(("T11-FC-SP-POLICY-MIB", "t11FcSpPoNotificationEnable"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoServerAddress"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoLastNotifyType"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoRequestSource"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoReasonCode"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoCtCommandString"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoReasonCodeExp"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoReasonVendorCode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FcSpPoNotifyObjectsGroup = t11FcSpPoNotifyObjectsGroup.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNotifyObjectsGroup.setDescription('A collection of MIB objects to control the generation of\n           notifications concerning Fibre Channel Security (FC-SP)\n           policy, and to hold information contained in such\n           notifications.')
t11FcSpPoNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 178, 2, 2, 6)).setObjects(("T11-FC-SP-POLICY-MIB", "t11FcSpPoNotifyActivation"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNotifyActivateFail"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNotifyDeactivation"), ("T11-FC-SP-POLICY-MIB", "t11FcSpPoNotifyDeactivateFail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FcSpPoNotificationGroup = t11FcSpPoNotificationGroup.setStatus('current')
if mibBuilder.loadTexts: t11FcSpPoNotificationGroup.setDescription('A collection of notifications of events concerning\n           Fibre Channel Security (FC-SP) policy.')
mibBuilder.exportSymbols("T11-FC-SP-POLICY-MIB", t11FcSpPoNoMembNodeName=t11FcSpPoNoMembNodeName, t11FcSpPoNaSwMembAttribute=t11FcSpPoNaSwMembAttribute, t11FcSpPoNotifyDeactivation=t11FcSpPoNotifyDeactivation, t11FcSpPoNotifyObjectsGroup=t11FcSpPoNotifyObjectsGroup, t11FcSpPoActive=t11FcSpPoActive, PYSNMP_MODULE_ID=t11FcSpPolicyMIB, t11FcSpPoNaCtDescrEntry=t11FcSpPoNaCtDescrEntry, t11FcSpPolicyMIB=t11FcSpPolicyMIB, t11FcSpPoNotificationGroup=t11FcSpPoNotificationGroup, t11FcSpPoAttribTable=t11FcSpPoAttribTable, t11FcSpPoTable=t11FcSpPoTable, t11FcSpPoNaAuthProtEntry=t11FcSpPoNaAuthProtEntry, t11FcSpPoOperActivate=t11FcSpPoOperActivate, t11FcSpPoNaSummaryPolicyIndex=t11FcSpPoNaSummaryPolicyIndex, t11FcSpPoNaSwConnAllowedName=t11FcSpPoNaSwConnAllowedName, t11FcSpPoNaNoMembFlags=t11FcSpPoNaNoMembFlags, t11FcSpPoStatsObjectsGroup=t11FcSpPoStatsObjectsGroup, t11FcSpPoOperFailCause=t11FcSpPoOperFailCause, t11FcSpPoSwMembSwitchName=t11FcSpPoSwMembSwitchName, t11FcSpPoNaNoMembEntry=t11FcSpPoNaNoMembEntry, t11FcSpPoEntry=t11FcSpPoEntry, t11FcSpPoCtDescrEntry=t11FcSpPoCtDescrEntry, t11FcSpPoAttribExtension=t11FcSpPoAttribExtension, t11FcSpPoNaSwMembRowStatus=t11FcSpPoNaSwMembRowStatus, t11FcSpPoNaSummaryHashFormat=t11FcSpPoNaSummaryHashFormat, t11FcSpPoNaIpMgmtEntryNameType=t11FcSpPoNaIpMgmtEntryNameType, t11FcSpPoInRequests=t11FcSpPoInRequests, t11FcSpPoNaIpMgmtListName=t11FcSpPoNaIpMgmtListName, t11FcSpPoAdminFabricName=t11FcSpPoAdminFabricName, t11FcSpPoOperDeActivate=t11FcSpPoOperDeActivate, t11FcSpPoOperEntry=t11FcSpPoOperEntry, t11FcSpPoNoMembEntry=t11FcSpPoNoMembEntry, t11FcSpPoNaAttribExtension=t11FcSpPoNaAttribExtension, t11FcSpPoIpMgmtEntryNameLow=t11FcSpPoIpMgmtEntryNameLow, t11FcSpPoInRejects=t11FcSpPoInRejects, t11FcSpPoSwMembSwitchNameType=t11FcSpPoSwMembSwitchNameType, t11FcSpPoAuthProtTable=t11FcSpPoAuthProtTable, t11FcSpPoSummaryHashValue=t11FcSpPoSummaryHashValue, t11FcSpPoNaSwMembEntry=t11FcSpPoNaSwMembEntry, t11FcSpPoActivatedTimeStamp=t11FcSpPoActivatedTimeStamp, t11FcSpPoCtDescrSpecifierIndex=t11FcSpPoCtDescrSpecifierIndex, t11FcSpPoSummaryPolicyNameType=t11FcSpPoSummaryPolicyNameType, t11FcSpPoSwMembAuthBehaviour=t11FcSpPoSwMembAuthBehaviour, t11FcSpPoWkpDescrWkpNumber=t11FcSpPoWkpDescrWkpNumber, t11FcSpPoSwMembAttribute=t11FcSpPoSwMembAttribute, t11FcSpPoPolicySummaryObjName=t11FcSpPoPolicySummaryObjName, t11FcSpPoActiveObjectsGroup=t11FcSpPoActiveObjectsGroup, t11FcSpPoMIBObjects=t11FcSpPoMIBObjects, t11FcSpPoMIBGroups=t11FcSpPoMIBGroups, t11FcSpPoAttribEntryIndex=t11FcSpPoAttribEntryIndex, t11FcSpPoNaNoMembAttribute=t11FcSpPoNaNoMembAttribute, t11FcSpPoNaSummaryPolicyNameType=t11FcSpPoNaSummaryPolicyNameType, t11FcSpPoIpMgmtEntryNameHigh=t11FcSpPoIpMgmtEntryNameHigh, t11FcSpPoSwMembDomainID=t11FcSpPoSwMembDomainID, t11FcSpPoNaCtDescrSpecifierIndex=t11FcSpPoNaCtDescrSpecifierIndex, t11FcSpPoSwConnAllowedType=t11FcSpPoSwConnAllowedType, t11FcSpPoStorageType=t11FcSpPoStorageType, t11FcSpPoSwConnPortNameOrAll=t11FcSpPoSwConnPortNameOrAll, t11FcSpPoOperResult=t11FcSpPoOperResult, t11FcSpPoNaSwConnRowStatus=t11FcSpPoNaSwConnRowStatus, t11FcSpPoLastNotifyType=t11FcSpPoLastNotifyType, t11FcSpPoWkpDescrDestPort=t11FcSpPoWkpDescrDestPort, t11FcSpPoOperTable=t11FcSpPoOperTable, t11FcSpPoNaWkpDescrRowStatus=t11FcSpPoNaWkpDescrRowStatus, t11FcSpPoNaAuthProtIdentifier=t11FcSpPoNaAuthProtIdentifier, t11FcSpPoNaSwMembPolicyDataRole=t11FcSpPoNaSwMembPolicyDataRole, t11FcSpPoNaWkpDescrTable=t11FcSpPoNaWkpDescrTable, t11FcSpPoNaAttribType=t11FcSpPoNaAttribType, t11FcSpPoSwMembTable=t11FcSpPoSwMembTable, t11FcSpPoNaSwConnSwitchName=t11FcSpPoNaSwConnSwitchName, t11FcSpPoNaNoMembCtAccessIndex=t11FcSpPoNaNoMembCtAccessIndex, t11FcSpPoNaIpMgmtAttribute=t11FcSpPoNaIpMgmtAttribute, t11FcSpPoNaCtDescrFlags=t11FcSpPoNaCtDescrFlags, t11FcSpPoNaCtDescrIndex=t11FcSpPoNaCtDescrIndex, t11FcSpPoNaNoMembNodeNameType=t11FcSpPoNaNoMembNodeNameType, t11FcSpPoNaSwConnEntry=t11FcSpPoNaSwConnEntry, t11FcSpPoNaWkpDescrSpecifierIndx=t11FcSpPoNaWkpDescrSpecifierIndx, t11FcSpPoNaSwMembTable=t11FcSpPoNaSwMembTable, t11FcSpPoNaSummaryHashValue=t11FcSpPoNaSummaryHashValue, t11FcSpPoNaAttribEntry=t11FcSpPoNaAttribEntry, t11FcSpPoNaAuthProtRowStatus=t11FcSpPoNaAuthProtRowStatus, t11FcSpPoNaIpMgmtEntryNameLow=t11FcSpPoNaIpMgmtEntryNameLow, t11FcSpPoNaSummaryHashStatus=t11FcSpPoNaSummaryHashStatus, t11FcSpPoNaNoMembTable=t11FcSpPoNaNoMembTable, t11FcSpPoWkpDescrEntry=t11FcSpPoWkpDescrEntry, t11FcSpPoNoMembAttribute=t11FcSpPoNoMembAttribute, t11FcSpPoSwConnAllowedIndex=t11FcSpPoSwConnAllowedIndex, t11FcSpPoCtDescrTable=t11FcSpPoCtDescrTable, t11FcSpPoNaSwListRowStatus=t11FcSpPoNaSwListRowStatus, t11FcSpPoNaSummaryTable=t11FcSpPoNaSummaryTable, t11FcSpPoRequestSource=t11FcSpPoRequestSource, t11FcSpPoMIBCompliance=t11FcSpPoMIBCompliance, t11FcSpPoAttribEntry=t11FcSpPoAttribEntry, t11FcSpPoCtCommandString=t11FcSpPoCtCommandString, t11FcSpPoSwConnEntry=t11FcSpPoSwConnEntry, t11FcSpPoWkpDescrIndex=t11FcSpPoWkpDescrIndex, t11FcSpPoCtDescrIndex=t11FcSpPoCtDescrIndex, t11FcSpPoSummaryEntry=t11FcSpPoSummaryEntry, t11FcSpPoNaAttribName=t11FcSpPoNaAttribName, t11FcSpPoSwMembPolicyDataRole=t11FcSpPoSwMembPolicyDataRole, t11FcSpPoNaNoMembListName=t11FcSpPoNaNoMembListName, t11FcSpPoAttribValue=t11FcSpPoAttribValue, t11FcSpPoCtDescrFlags=t11FcSpPoCtDescrFlags, t11FcSpPoIpMgmtAttribute=t11FcSpPoIpMgmtAttribute, t11FcSpPoNaIpMgmtEntryNameHigh=t11FcSpPoNaIpMgmtEntryNameHigh, t11FcSpPoReasonCode=t11FcSpPoReasonCode, t11FcSpPoControl=t11FcSpPoControl, t11FcSpPoNaSummaryPolicyName=t11FcSpPoNaSummaryPolicyName, t11FcSpPoNaWkpDescrEntry=t11FcSpPoNaWkpDescrEntry, t11FcSpPoNaAttribValue=t11FcSpPoNaAttribValue, t11FcSpPoNoMembCtAccessIndex=t11FcSpPoNoMembCtAccessIndex, t11FcSpPoNaSwMembSwitchName=t11FcSpPoNaSwMembSwitchName, t11FcSpPoSummaryPolicyName=t11FcSpPoSummaryPolicyName, t11FcSpPoNaAuthProtTable=t11FcSpPoNaAuthProtTable, t11FcSpPoSummaryPolicyType=t11FcSpPoSummaryPolicyType, t11FcSpPoNaNoMembRowStatus=t11FcSpPoNaNoMembRowStatus, t11FcSpPoNaWkpDescrFlags=t11FcSpPoNaWkpDescrFlags, t11FcSpPoNaAuthProtParams=t11FcSpPoNaAuthProtParams, t11FcSpPoNaSwListFabricName=t11FcSpPoNaSwListFabricName, t11FcSpPoNaWkpDescrDestPort=t11FcSpPoNaWkpDescrDestPort, t11FcSpPoIpMgmtEntry=t11FcSpPoIpMgmtEntry, t11FcSpPoServerAddress=t11FcSpPoServerAddress, t11FcSpPoSwMembEntry=t11FcSpPoSwMembEntry, t11FcSpPoMIBCompliances=t11FcSpPoMIBCompliances, t11FcSpPoSwConnAllowedNameType=t11FcSpPoSwConnAllowedNameType, t11FcSpPoNaCtDescrGsSubType=t11FcSpPoNaCtDescrGsSubType, t11FcSpPoWkpDescrFlags=t11FcSpPoWkpDescrFlags, t11FcSpPoStatsEntry=t11FcSpPoStatsEntry, t11FcSpPoOperationsObjectsGroup=t11FcSpPoOperationsObjectsGroup, t11FcSpPoNaSummaryName=t11FcSpPoNaSummaryName, t11FcSpPoNotifyActivateFail=t11FcSpPoNotifyActivateFail, t11FcSpPoSwConnAllowedName=t11FcSpPoSwConnAllowedName, t11FcSpPoNaSummaryEntry=t11FcSpPoNaSummaryEntry, t11FcSpPoNaSwListTable=t11FcSpPoNaSwListTable, t11FcSpPoNaSwConnPortNameOrAll=t11FcSpPoNaSwConnPortNameOrAll, t11FcSpPoFabricIndex=t11FcSpPoFabricIndex, t11FcSpPoNaAttribTable=t11FcSpPoNaAttribTable, t11FcSpPoMIBConformance=t11FcSpPoMIBConformance, t11FcSpPoIpMgmtWkpIndex=t11FcSpPoIpMgmtWkpIndex, t11FcSpPoAttribName=t11FcSpPoAttribName, t11FcSpPoIpMgmtTable=t11FcSpPoIpMgmtTable, t11FcSpPoNaAuthProtPartIndex=t11FcSpPoNaAuthProtPartIndex, t11FcSpPoNaSwConnTable=t11FcSpPoNaSwConnTable, t11FcSpPoNonActive=t11FcSpPoNonActive, t11FcSpPoNaSummaryPolicyType=t11FcSpPoNaSummaryPolicyType, t11FcSpPoControlEntry=t11FcSpPoControlEntry, t11FcSpPoNaSwConnAllowedType=t11FcSpPoNaSwConnAllowedType, t11FcSpPoNotificationEnable=t11FcSpPoNotificationEnable, t11FcSpPoNaCtDescrTable=t11FcSpPoNaCtDescrTable, t11FcSpPoStatsTable=t11FcSpPoStatsTable, t11FcSpPoAttribType=t11FcSpPoAttribType, t11FcSpPoIpMgmtEntryNameType=t11FcSpPoIpMgmtEntryNameType, t11FcSpPoAuthProtEntry=t11FcSpPoAuthProtEntry, t11FcSpPoNaAttribRowStatus=t11FcSpPoNaAttribRowStatus, t11FcSpPoSwMembSwitchFlags=t11FcSpPoSwMembSwitchFlags, t11FcSpPoNoMembTable=t11FcSpPoNoMembTable, t11FcSpPoAuthProtParams=t11FcSpPoAuthProtParams, t11FcSpPoNaSwConnAllowedIndex=t11FcSpPoNaSwConnAllowedIndex, t11FcSpPoNaCtDescrGsType=t11FcSpPoNaCtDescrGsType, t11FcSpPoNoMembNodeNameType=t11FcSpPoNoMembNodeNameType, t11FcSpPoNaCtDescrRowStatus=t11FcSpPoNaCtDescrRowStatus, t11FcSpPoCtDescrGsSubType=t11FcSpPoCtDescrGsSubType, t11FcSpPoNotifyActivation=t11FcSpPoNotifyActivation, t11FcSpPoNoMembFlags=t11FcSpPoNoMembFlags, t11FcSpPoReasonCodeExp=t11FcSpPoReasonCodeExp, t11FcSpPoMIBNotifications=t11FcSpPoMIBNotifications, t11FcSpPoNaSwMembFlags=t11FcSpPoNaSwMembFlags, t11FcSpPoSwConnSwitchName=t11FcSpPoSwConnSwitchName, t11FcSpPoNaSwMembAuthBehaviour=t11FcSpPoNaSwMembAuthBehaviour, t11FcSpPoNaSwListEntry=t11FcSpPoNaSwListEntry, t11FcSpPoAuthProtIdentifier=t11FcSpPoAuthProtIdentifier, t11FcSpPoNonActiveObjectsGroup=t11FcSpPoNonActiveObjectsGroup, t11FcSpPoNaSwMembSwitchNameType=t11FcSpPoNaSwMembSwitchNameType, t11FcSpPoNaIpMgmtWkpIndex=t11FcSpPoNaIpMgmtWkpIndex, t11FcSpPoNaSwListName=t11FcSpPoNaSwListName, t11FcSpPoWkpDescrSpecifierIndex=t11FcSpPoWkpDescrSpecifierIndex, t11FcSpPoStatistics=t11FcSpPoStatistics, t11FcSpPoNaAttribPartIndex=t11FcSpPoNaAttribPartIndex, t11FcSpPoNaIpMgmtRowStatus=t11FcSpPoNaIpMgmtRowStatus, t11FcSpPoSummaryTable=t11FcSpPoSummaryTable, t11FcSpPoNaAttribEntryIndex=t11FcSpPoNaAttribEntryIndex, t11FcSpPoOperations=t11FcSpPoOperations, t11FcSpPoReasonVendorCode=t11FcSpPoReasonVendorCode, t11FcSpPoSwConnTable=t11FcSpPoSwConnTable, t11FcSpPoNotifyDeactivateFail=t11FcSpPoNotifyDeactivateFail, t11FcSpPoNaWkpDescrIndex=t11FcSpPoNaWkpDescrIndex, t11FcSpPoSummaryHashFormat=t11FcSpPoSummaryHashFormat, t11FcSpPoAuthProtPartIndex=t11FcSpPoAuthProtPartIndex, t11FcSpPoNaSummaryRowStatus=t11FcSpPoNaSummaryRowStatus, t11FcSpPoAttribPartIndex=t11FcSpPoAttribPartIndex, t11FcSpPoNaSwMembDomainID=t11FcSpPoNaSwMembDomainID, t11FcSpPoInAccepts=t11FcSpPoInAccepts, t11FcSpPoNaIpMgmtEntry=t11FcSpPoNaIpMgmtEntry, t11FcSpPoWkpDescrTable=t11FcSpPoWkpDescrTable, t11FcSpPoNaIpMgmtTable=t11FcSpPoNaIpMgmtTable, t11FcSpPoControlTable=t11FcSpPoControlTable, t11FcSpPoNaNoMembNodeName=t11FcSpPoNaNoMembNodeName, t11FcSpPoNaWkpDescrWkpNumber=t11FcSpPoNaWkpDescrWkpNumber, t11FcSpPoCtDescrGsType=t11FcSpPoCtDescrGsType, t11FcSpPoNaSwConnAllowedNameType=t11FcSpPoNaSwConnAllowedNameType)
