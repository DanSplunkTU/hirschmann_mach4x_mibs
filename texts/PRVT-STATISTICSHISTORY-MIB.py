#
# PySNMP MIB module PRVT-STATISTICSHISTORY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binos/PRVT-STATISTICSHISTORY-MIB
# Produced by pysmi-1.1.3 at Thu Dec  9 15:32:49 2021
# On host fv-az83-649 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
switch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "switch")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
iso, Integer32, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ModuleIdentity, ObjectIdentity, Bits, NotificationType, Counter64, Unsigned32, MibIdentifier, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Integer32", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ModuleIdentity", "ObjectIdentity", "Bits", "NotificationType", "Counter64", "Unsigned32", "MibIdentifier", "Gauge32")
TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "DisplayString")
prvtStatisticsHistoryMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 1, 5, 140))
prvtStatisticsHistoryMib.setRevisions(('2010-02-03 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: prvtStatisticsHistoryMib.setRevisionsDescriptions(('Initial revision.',))
if mibBuilder.loadTexts: prvtStatisticsHistoryMib.setLastUpdated('201002030000Z')
if mibBuilder.loadTexts: prvtStatisticsHistoryMib.setOrganization('BATM Advanced Communication')
if mibBuilder.loadTexts: prvtStatisticsHistoryMib.setContactInfo('BATM/Telco Systems Support team\n            Email: \n            For North America: techsupport@telco.com\n            For North Europe: support@batm.de, info@batm.de\n            For the rest of the world: techsupport@telco.com')
if mibBuilder.loadTexts: prvtStatisticsHistoryMib.setDescription('Management Information Base module for StatisticsHistory ')
prvtStatisticsHistoryNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 0))
prvtStatisticsHistoryObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1))
prvtStatisticsHistoryConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 2))
prvtStatisticsHistoryCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 1))
prvtStatHistDailySnapshotData = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2))
prvtStatHistAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtStatHistAdminStatus.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistAdminStatus.setDescription('Enables or disables statistics history feature globally. \nThe default value is disabled.\n')
prvtStatHistGetInterval = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("interval15min", 1), ("interval30min", 2), ("interval60min", 3))).clone('interval15min')).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtStatHistGetInterval.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistGetInterval.setDescription("Configures statistics gathering interval.\nIf prvtStatHistAdminStatus object is disabled, then this object's value is irrelevant.\nThe default value is 15 minutes.\n")
prvtStatHistWriteInterval = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("interval1h", 1), ("interval6h", 2), ("interval12h", 3), ("interval24h", 4))).clone('interval1h')).setUnits('hours').setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtStatHistWriteInterval.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistWriteInterval.setDescription("Configures time when statistics history should be dumped to configured statistics file.\nIf prvtStatHistAdminStatus object is disabled, then this object's value is irrelevant. \nThe default value is 1 hour.\n")
prvtStatHistPath = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40)).clone('/var/stats')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtStatHistPath.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistPath.setDescription("Configures directory where statistics history files should be stored.\nIf prvtStatHistAdminStatus object is disabled, then this object's value is irrelevant. \nThe default value is '/var/stats'.\n")
prvtStatisticsHistoryIntCfgTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 1, 5), )
if mibBuilder.loadTexts: prvtStatisticsHistoryIntCfgTable.setStatus('current')
if mibBuilder.loadTexts: prvtStatisticsHistoryIntCfgTable.setDescription('The table that controls statistics history configuration on individual\n            ports.')
prvtStatisticsHistoryIntCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtStatisticsHistoryIntCfgEntry.setStatus('current')
if mibBuilder.loadTexts: prvtStatisticsHistoryIntCfgEntry.setDescription('Statistics history configuration information for a particular port.')
prvtStatHistIntAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtStatHistIntAdminStatus.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistIntAdminStatus.setDescription(' Enables or disables statistics-history feature per interface.')
prvtStatHistDailySnapshotAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistDailySnapshotAdminStatus.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistDailySnapshotAdminStatus.setDescription("Shows if statistics history feature is globally enabled or disabled.\nIf prvtStatHistAdminStatus object is disabled, then this object's value is irrelevant.\nCopied from configuration database when daily snapshot is created.")
prvtStatHistDailySnapshotGetInterval = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("interval15min", 1), ("interval30min", 2), ("interval60min", 3)))).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistDailySnapshotGetInterval.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistDailySnapshotGetInterval.setDescription("Statistics gathering interval.\nIf prvtStatHistAdminStatus object is disabled, then this object's value is irrelevant. \nCopied from configuration database when daily snapshot is created.")
prvtStatHistDailySnapshotWriteInterval = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("interval1h", 1), ("interval6h", 2), ("interval12h", 3), ("interval24h", 4))).clone('interval1h')).setUnits('hours').setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistDailySnapshotWriteInterval.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistDailySnapshotWriteInterval.setDescription("Time when statistics history should be dumped to configured statistics file.\nIf prvtStatHistAdminStatus object is disabled, then this object's value is irrelevant.\nCopied from configuration database when daily snapshot is created. \n")
prvtStatHistDailySnapshotPath = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistDailySnapshotPath.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistDailySnapshotPath.setDescription("Directory where statistics history files should be stored.\nIf prvtStatHistAdminStatus object is disabled, then this object's value is irrelevant.   \nCopied from configuration database when daily snapshot is created.\nFormat: [device/]path. \n")
prvtStatisticsHistoryDataTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5), )
if mibBuilder.loadTexts: prvtStatisticsHistoryDataTable.setStatus('current')
if mibBuilder.loadTexts: prvtStatisticsHistoryDataTable.setDescription('The table that show statistics history information.')
prvtStatisticsHistoryDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "PRVT-STATISTICSHISTORY-MIB", "prvtStatHistInterval"))
if mibBuilder.loadTexts: prvtStatisticsHistoryDataEntry.setStatus('current')
if mibBuilder.loadTexts: prvtStatisticsHistoryDataEntry.setDescription('Statistics history information.')
prvtStatHistInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: prvtStatHistInterval.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistInterval.setDescription('Number of statistics gathering interval.\nAll valid and invalid gathering intervals are supported. Check prvtStatHistValidInterval if true/false.')
prvtStatHistLast5secInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistLast5secInPkts.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistLast5secInPkts.setDescription('Value of last5secInPkts counter.')
prvtStatHistLast1minInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistLast1minInPkts.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistLast1minInPkts.setDescription('Value of last1minInPkts counter.')
prvtStatHistLast5minInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistLast5minInPkts.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistLast5minInPkts.setDescription('Value of last5minInPkts counter.')
prvtStatHistLast5secOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistLast5secOutPkts.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistLast5secOutPkts.setDescription('Value of last5secOutPkts counter.')
prvtStatHistLast1minOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistLast1minOutPkts.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistLast1minOutPkts.setDescription('Value of last1minOutPkts counter.')
prvtStatHistLast5minOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistLast5minOutPkts.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistLast5minOutPkts.setDescription('Value of last5minOutPkts counter.')
prvtStatHistLast5secInBps = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistLast5secInBps.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistLast5secInBps.setDescription('Value of last5secInBps counter.')
prvtStatHistLast1minInBps = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistLast1minInBps.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistLast1minInBps.setDescription('Value of last1minInBps counter.')
prvtStatHistLast5minInBps = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistLast5minInBps.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistLast5minInBps.setDescription('Value of last5minInBps counter.')
prvtStatHistLast5secOutBps = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistLast5secOutBps.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistLast5secOutBps.setDescription('Value of last5secOutBps counter.')
prvtStatHistLast1minOutBps = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistLast1minOutBps.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistLast1minOutBps.setDescription('Value of last1minOutBps counter.')
prvtStatHistLast5minOutBps = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistLast5minOutBps.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistLast5minOutBps.setDescription('Value of last5minOutBps counter.')
prvtStatHistEtherStatsDropEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsDropEvents.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsDropEvents.setDescription('Value of etherStatsDropEvents counter.')
prvtStatHistEtherStatsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsPkts.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsPkts.setDescription('Value of etherStatsPkts counter.')
prvtStatHistEtherStatsBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsBroadcastPkts.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsBroadcastPkts.setDescription('Value of etherStatsBroadcastPkts counter.')
prvtStatHistEtherStatsMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsMulticastPkts.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsMulticastPkts.setDescription('Value of etherStatsMulticastPkts counter.')
prvtStatHistEtherStatsCRCAlignErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsCRCAlignErrors.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsCRCAlignErrors.setDescription('Value of etherStatsCRCAlignErrors counter.')
prvtStatHistEtherStatsUndersizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsUndersizePkts.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsUndersizePkts.setDescription('Value of etherStatsUndersizePkts counter.')
prvtStatHistEtherStatsOversizePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsOversizePkts.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsOversizePkts.setDescription('Value of etherStatsOversizePkts counter.')
prvtStatHistEtherStatsFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsFragments.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsFragments.setDescription('Value of etherStatsFragments counter.')
prvtStatHistEtherStatsJabbers = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsJabbers.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsJabbers.setDescription('Value of etherStatsJabbers counter.')
prvtStatHistEtherStatsCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsCollisions.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsCollisions.setDescription('Value of etherStatsCollisions counter.')
prvtStatHistEtherStatsDroppedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsDroppedFrames.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsDroppedFrames.setDescription('Value of etherStatsDroppedFrames counter.')
prvtStatHistEtherStatsHighCapacityOverflowPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityOverflowPkts.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityOverflowPkts.setDescription('Value of etherStatsHighCapacityOverflowPkts counter.')
prvtStatHistEtherStatsHighCapacityOverflowOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityOverflowOctets.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityOverflowOctets.setDescription('Value of etherStatsHighCapacityOverflowOctets counter.')
prvtStatHistEtherStatsHighCapacityPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityPkts.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityPkts.setDescription('Value of etherStatsHighCapacityPkts counter.')
prvtStatHistEtherStatsHighCapacityOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityOctets.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityOctets.setDescription('Value of etherStatsHighCapacityOctets counter.')
prvtStatHistEtherStatsHighCapacityPkts64Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityPkts64Octets.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityPkts64Octets.setDescription('Value of etherStatsHighCapacityPkts64Octets counter.')
prvtStatHistEtherStatsHighCapacityPkts65to127Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityPkts65to127Octets.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityPkts65to127Octets.setDescription('Value of etherStatsHighCapacityPkts65to127Octets counter.')
prvtStatHistEtherStatsHighCapacityPkts128to255Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityPkts128to255Octets.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityPkts128to255Octets.setDescription('Value of etherStatsHighCapacityPkts128to255Octets counter.')
prvtStatHistEtherStatsHighCapacityPkts256to511Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityPkts256to511Octets.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityPkts256to511Octets.setDescription('Value of etherStatsHighCapacityPkts256to511Octets counter.')
prvtStatHistEtherStatsHighCapacityPkts512to1023Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityPkts512to1023Octets.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityPkts512to1023Octets.setDescription('Value of etherStatsHighCapacityPkts512to1023Octets counter.')
prvtStatHistEtherStatsHighCapacityPkts1024to1518Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityPkts1024to1518Octets.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistEtherStatsHighCapacityPkts1024to1518Octets.setDescription('Value of etherStatsHighCapacityPkts1024to1518Octets counter.')
prvtStatHistDot3StatsAlignmentErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistDot3StatsAlignmentErrors.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistDot3StatsAlignmentErrors.setDescription('Value of dot3StatsAlignmentErrors counter.')
prvtStatHistDot3StatsFCSErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistDot3StatsFCSErrors.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistDot3StatsFCSErrors.setDescription('Value of dot3StatsFCSErrors counter.')
prvtStatHistDot3StatsSingleCollisionFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistDot3StatsSingleCollisionFrames.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistDot3StatsSingleCollisionFrames.setDescription('Value of dot3StatsSingleCollisionFrames counter.')
prvtStatHistDot3StatsMultipleCollisionFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistDot3StatsMultipleCollisionFrames.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistDot3StatsMultipleCollisionFrames.setDescription('Value of dot3StatsMultipleCollisionFrames counter.')
prvtStatHistDot3StatsSQETestErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistDot3StatsSQETestErrors.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistDot3StatsSQETestErrors.setDescription('Value of dot3StatsSQETestErrors counter.')
prvtStatHistDot3StatsDeferredTransmissions = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistDot3StatsDeferredTransmissions.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistDot3StatsDeferredTransmissions.setDescription('Value of dot3StatsDeferredTransmissions counter.')
prvtStatHistDot3StatsLateCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistDot3StatsLateCollisions.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistDot3StatsLateCollisions.setDescription('Value of dot3StatsLateCollisions counter.')
prvtStatHistDot3StatsExcessiveCollisions = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistDot3StatsExcessiveCollisions.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistDot3StatsExcessiveCollisions.setDescription('Value of dot3StatsExcessiveCollisions counter.')
prvtStatHistDot3StatsInternalMacTransmitErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistDot3StatsInternalMacTransmitErrors.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistDot3StatsInternalMacTransmitErrors.setDescription('Value of dot3StatsInternalMacTransmitErrors counter.')
prvtStatHistDot3StatsCarrierSenseErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistDot3StatsCarrierSenseErrors.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistDot3StatsCarrierSenseErrors.setDescription('Value of dot3StatsCarrierSenseErrors counter.')
prvtStatHistDot3StatsFrameTooLongs = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistDot3StatsFrameTooLongs.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistDot3StatsFrameTooLongs.setDescription('Value of dot3StatsFrameTooLongs counter.')
prvtStatHistDot3StatsInternalMacReceiveErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistDot3StatsInternalMacReceiveErrors.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistDot3StatsInternalMacReceiveErrors.setDescription('Value of dot3StatsInternalMacReceiveErrors counter.')
prvtStatHistIfInDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistIfInDiscards.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistIfInDiscards.setDescription('Value of ifInDiscards counter.')
prvtStatHistIfInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistIfInErrors.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistIfInErrors.setDescription('Value of ifInErrors counter.')
prvtStatHistIfInUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistIfInUnknownProtos.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistIfInUnknownProtos.setDescription('Value of ifInUnknownProtos counter.')
prvtStatHistIfOutDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistIfOutDiscards.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistIfOutDiscards.setDescription('Value of ifOutDiscards counter.')
prvtStatHistIfOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistIfOutErrors.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistIfOutErrors.setDescription('Value of dot3StatsDeferredTransmissions counter.')
prvtStatHistIfHCInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistIfHCInOctets.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistIfHCInOctets.setDescription('Value of ifHCInOctets counter.')
prvtStatHistIfHCInUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistIfHCInUcastPkts.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistIfHCInUcastPkts.setDescription('Value of ifHCInUcastPkts counter.')
prvtStatHistIfHCInMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistIfHCInMulticastPkts.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistIfHCInMulticastPkts.setDescription('Value of ifHCInMulticastPkts counter.')
prvtStatHistIfHCInBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistIfHCInBroadcastPkts.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistIfHCInBroadcastPkts.setDescription('Value of prvtStatHistIfHCInBroadastPkts counter.')
prvtStatHistIfHCOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistIfHCOutOctets.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistIfHCOutOctets.setDescription('Value of ifHCOutOctets counter.')
prvtStatHistIfHCOutUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistIfHCOutUcastPkts.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistIfHCOutUcastPkts.setDescription('Value of ifHCOutUcastPkts counter.')
prvtStatHistIfHCOutMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistIfHCOutMulticastPkts.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistIfHCOutMulticastPkts.setDescription('Value of ifHCOutMulticastPkts counter.')
prvtStatHistIfHCOutBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistIfHCOutBroadcastPkts.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistIfHCOutBroadcastPkts.setDescription('Value of ifHCOutBroadcastPkts counter.')
prvtStatHistValidInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 1, 2, 5, 1, 60), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatHistValidInterval.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistValidInterval.setDescription('A boolean showing if the interval is valid.')
prvtStatisticsHistoryCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 2, 1))
prvtStatisticsHistoryGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 2, 2))
prvtStatisticsHistoryIntCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 2, 2, 1)).setObjects(("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistIntAdminStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    prvtStatisticsHistoryIntCfgGroup = prvtStatisticsHistoryIntCfgGroup.setStatus('current')
if mibBuilder.loadTexts: prvtStatisticsHistoryIntCfgGroup.setDescription('Objects for the interface configuration group.')
prvtStatisticsHistoryDataGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 2, 2, 2)).setObjects(("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistLast5secInPkts"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistLast1minInPkts"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistLast5minInPkts"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistLast5secOutPkts"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistLast1minOutPkts"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistLast5minOutPkts"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistLast5secInBps"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistLast1minInBps"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistLast5minInBps"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistLast5secOutBps"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistLast1minOutBps"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistLast5minOutBps"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsDropEvents"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsPkts"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsBroadcastPkts"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsMulticastPkts"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsCRCAlignErrors"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsUndersizePkts"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsOversizePkts"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsFragments"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsJabbers"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsCollisions"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsDroppedFrames"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsHighCapacityOverflowPkts"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsHighCapacityOverflowOctets"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsHighCapacityPkts"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsHighCapacityOctets"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsHighCapacityPkts64Octets"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsHighCapacityPkts65to127Octets"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsHighCapacityPkts128to255Octets"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsHighCapacityPkts256to511Octets"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsHighCapacityPkts512to1023Octets"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistEtherStatsHighCapacityPkts1024to1518Octets"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistDot3StatsAlignmentErrors"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistDot3StatsFCSErrors"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistDot3StatsSingleCollisionFrames"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistDot3StatsMultipleCollisionFrames"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistDot3StatsSQETestErrors"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistDot3StatsDeferredTransmissions"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistDot3StatsLateCollisions"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistDot3StatsExcessiveCollisions"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistDot3StatsInternalMacTransmitErrors"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistDot3StatsCarrierSenseErrors"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistDot3StatsFrameTooLongs"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistDot3StatsInternalMacReceiveErrors"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistIfInDiscards"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistIfInErrors"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistIfInUnknownProtos"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistIfOutDiscards"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistIfOutErrors"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistIfHCInOctets"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistIfHCInUcastPkts"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistIfHCInMulticastPkts"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistIfHCInBroadcastPkts"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistIfHCOutOctets"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistIfHCOutUcastPkts"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistIfHCOutMulticastPkts"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistIfHCOutBroadcastPkts"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistValidInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    prvtStatisticsHistoryDataGroup = prvtStatisticsHistoryDataGroup.setStatus('current')
if mibBuilder.loadTexts: prvtStatisticsHistoryDataGroup.setDescription('Objects for the Statistics History Data group.')
prvtStatisticsHistoryCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 2, 2, 3)).setObjects(("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistAdminStatus"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistGetInterval"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistWriteInterval"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistPath"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    prvtStatisticsHistoryCfgGroup = prvtStatisticsHistoryCfgGroup.setStatus('current')
if mibBuilder.loadTexts: prvtStatisticsHistoryCfgGroup.setDescription('Objects for the global configuration group.')
prvtStatHistDailySnapshotDataGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 2, 2, 4)).setObjects(("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistDailySnapshotAdminStatus"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistDailySnapshotGetInterval"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistDailySnapshotWriteInterval"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistDailySnapshotPath"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    prvtStatHistDailySnapshotDataGroup = prvtStatHistDailySnapshotDataGroup.setStatus('current')
if mibBuilder.loadTexts: prvtStatHistDailySnapshotDataGroup.setDescription('Objects for the global configuration group.')
prvtStatisticsHistoryCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 738, 1, 5, 140, 2, 1, 1)).setObjects(("PRVT-STATISTICSHISTORY-MIB", "prvtStatisticsHistoryIntCfgGroup"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatisticsHistoryDataGroup"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatisticsHistoryCfgGroup"), ("PRVT-STATISTICSHISTORY-MIB", "prvtStatHistDailySnapshotDataGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    prvtStatisticsHistoryCompliance = prvtStatisticsHistoryCompliance.setStatus('current')
if mibBuilder.loadTexts: prvtStatisticsHistoryCompliance.setDescription('The compliance statement for support of the statistics history MIB module.')
mibBuilder.exportSymbols("PRVT-STATISTICSHISTORY-MIB", prvtStatHistDailySnapshotWriteInterval=prvtStatHistDailySnapshotWriteInterval, prvtStatHistEtherStatsHighCapacityPkts512to1023Octets=prvtStatHistEtherStatsHighCapacityPkts512to1023Octets, prvtStatHistEtherStatsUndersizePkts=prvtStatHistEtherStatsUndersizePkts, prvtStatHistLast5secOutBps=prvtStatHistLast5secOutBps, prvtStatisticsHistoryIntCfgTable=prvtStatisticsHistoryIntCfgTable, prvtStatHistLast1minInPkts=prvtStatHistLast1minInPkts, prvtStatHistLast5secInBps=prvtStatHistLast5secInBps, prvtStatHistLast5minOutPkts=prvtStatHistLast5minOutPkts, prvtStatHistGetInterval=prvtStatHistGetInterval, prvtStatHistEtherStatsHighCapacityPkts256to511Octets=prvtStatHistEtherStatsHighCapacityPkts256to511Octets, prvtStatHistEtherStatsPkts=prvtStatHistEtherStatsPkts, prvtStatisticsHistoryConformance=prvtStatisticsHistoryConformance, prvtStatHistDailySnapshotGetInterval=prvtStatHistDailySnapshotGetInterval, prvtStatHistIfHCInUcastPkts=prvtStatHistIfHCInUcastPkts, prvtStatHistEtherStatsHighCapacityPkts=prvtStatHistEtherStatsHighCapacityPkts, prvtStatHistLast1minInBps=prvtStatHistLast1minInBps, prvtStatisticsHistoryCompliances=prvtStatisticsHistoryCompliances, prvtStatHistDot3StatsFCSErrors=prvtStatHistDot3StatsFCSErrors, prvtStatHistLast5minInBps=prvtStatHistLast5minInBps, prvtStatHistDot3StatsExcessiveCollisions=prvtStatHistDot3StatsExcessiveCollisions, prvtStatHistEtherStatsHighCapacityPkts128to255Octets=prvtStatHistEtherStatsHighCapacityPkts128to255Octets, prvtStatHistIfHCOutBroadcastPkts=prvtStatHistIfHCOutBroadcastPkts, prvtStatHistEtherStatsFragments=prvtStatHistEtherStatsFragments, prvtStatHistPath=prvtStatHistPath, prvtStatisticsHistoryMib=prvtStatisticsHistoryMib, prvtStatHistIfHCOutMulticastPkts=prvtStatHistIfHCOutMulticastPkts, PYSNMP_MODULE_ID=prvtStatisticsHistoryMib, prvtStatHistLast1minOutBps=prvtStatHistLast1minOutBps, prvtStatisticsHistoryDataEntry=prvtStatisticsHistoryDataEntry, prvtStatHistDailySnapshotData=prvtStatHistDailySnapshotData, prvtStatHistIfInDiscards=prvtStatHistIfInDiscards, prvtStatHistIfHCInMulticastPkts=prvtStatHistIfHCInMulticastPkts, prvtStatHistDot3StatsSQETestErrors=prvtStatHistDot3StatsSQETestErrors, prvtStatHistLast5minOutBps=prvtStatHistLast5minOutBps, prvtStatHistIfInUnknownProtos=prvtStatHistIfInUnknownProtos, prvtStatHistEtherStatsDropEvents=prvtStatHistEtherStatsDropEvents, prvtStatHistIfHCOutUcastPkts=prvtStatHistIfHCOutUcastPkts, prvtStatHistDot3StatsLateCollisions=prvtStatHistDot3StatsLateCollisions, prvtStatHistDot3StatsDeferredTransmissions=prvtStatHistDot3StatsDeferredTransmissions, prvtStatHistLast5secOutPkts=prvtStatHistLast5secOutPkts, prvtStatHistIntAdminStatus=prvtStatHistIntAdminStatus, prvtStatHistIfHCOutOctets=prvtStatHistIfHCOutOctets, prvtStatHistDailySnapshotPath=prvtStatHistDailySnapshotPath, prvtStatHistIfHCInOctets=prvtStatHistIfHCInOctets, prvtStatisticsHistoryGroups=prvtStatisticsHistoryGroups, prvtStatisticsHistoryObjects=prvtStatisticsHistoryObjects, prvtStatHistDot3StatsSingleCollisionFrames=prvtStatHistDot3StatsSingleCollisionFrames, prvtStatHistDot3StatsCarrierSenseErrors=prvtStatHistDot3StatsCarrierSenseErrors, prvtStatHistAdminStatus=prvtStatHistAdminStatus, prvtStatHistEtherStatsDroppedFrames=prvtStatHistEtherStatsDroppedFrames, prvtStatHistLast5minInPkts=prvtStatHistLast5minInPkts, prvtStatHistDailySnapshotAdminStatus=prvtStatHistDailySnapshotAdminStatus, prvtStatisticsHistoryDataTable=prvtStatisticsHistoryDataTable, prvtStatHistWriteInterval=prvtStatHistWriteInterval, prvtStatHistEtherStatsHighCapacityOverflowPkts=prvtStatHistEtherStatsHighCapacityOverflowPkts, prvtStatHistLast5secInPkts=prvtStatHistLast5secInPkts, prvtStatHistValidInterval=prvtStatHistValidInterval, prvtStatHistDot3StatsAlignmentErrors=prvtStatHistDot3StatsAlignmentErrors, prvtStatHistDot3StatsInternalMacReceiveErrors=prvtStatHistDot3StatsInternalMacReceiveErrors, prvtStatHistDot3StatsMultipleCollisionFrames=prvtStatHistDot3StatsMultipleCollisionFrames, prvtStatHistEtherStatsOversizePkts=prvtStatHistEtherStatsOversizePkts, prvtStatHistEtherStatsBroadcastPkts=prvtStatHistEtherStatsBroadcastPkts, prvtStatisticsHistoryCfg=prvtStatisticsHistoryCfg, prvtStatHistEtherStatsHighCapacityPkts65to127Octets=prvtStatHistEtherStatsHighCapacityPkts65to127Octets, prvtStatHistIfHCInBroadcastPkts=prvtStatHistIfHCInBroadcastPkts, prvtStatHistEtherStatsHighCapacityOctets=prvtStatHistEtherStatsHighCapacityOctets, prvtStatisticsHistoryCfgGroup=prvtStatisticsHistoryCfgGroup, prvtStatHistDailySnapshotDataGroup=prvtStatHistDailySnapshotDataGroup, prvtStatHistDot3StatsInternalMacTransmitErrors=prvtStatHistDot3StatsInternalMacTransmitErrors, prvtStatHistIfOutErrors=prvtStatHistIfOutErrors, prvtStatHistDot3StatsFrameTooLongs=prvtStatHistDot3StatsFrameTooLongs, prvtStatHistEtherStatsHighCapacityPkts64Octets=prvtStatHistEtherStatsHighCapacityPkts64Octets, prvtStatisticsHistoryDataGroup=prvtStatisticsHistoryDataGroup, prvtStatisticsHistoryIntCfgEntry=prvtStatisticsHistoryIntCfgEntry, prvtStatHistEtherStatsJabbers=prvtStatHistEtherStatsJabbers, prvtStatHistEtherStatsHighCapacityOverflowOctets=prvtStatHistEtherStatsHighCapacityOverflowOctets, prvtStatHistEtherStatsHighCapacityPkts1024to1518Octets=prvtStatHistEtherStatsHighCapacityPkts1024to1518Octets, prvtStatisticsHistoryCompliance=prvtStatisticsHistoryCompliance, prvtStatHistEtherStatsMulticastPkts=prvtStatHistEtherStatsMulticastPkts, prvtStatHistIfInErrors=prvtStatHistIfInErrors, prvtStatHistLast1minOutPkts=prvtStatHistLast1minOutPkts, prvtStatHistIfOutDiscards=prvtStatHistIfOutDiscards, prvtStatHistEtherStatsCRCAlignErrors=prvtStatHistEtherStatsCRCAlignErrors, prvtStatisticsHistoryIntCfgGroup=prvtStatisticsHistoryIntCfgGroup, prvtStatHistInterval=prvtStatHistInterval, prvtStatHistEtherStatsCollisions=prvtStatHistEtherStatsCollisions, prvtStatisticsHistoryNotifications=prvtStatisticsHistoryNotifications)
