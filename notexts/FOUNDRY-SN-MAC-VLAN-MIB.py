#
# PySNMP MIB module FOUNDRY-SN-MAC-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/foundry/FOUNDRY-SN-MAC-VLAN-MIB
# Produced by pysmi-1.1.0 at Fri Nov 19 14:53:47 2021
# On host fv-az33-360 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, Integer32, ModuleIdentity, NotificationType, Counter32, IpAddress, iso, TimeTicks, Gauge32, Counter64, Bits, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "Integer32", "ModuleIdentity", "NotificationType", "Counter32", "IpAddress", "iso", "TimeTicks", "Gauge32", "Counter64", "Bits", "ObjectIdentity")
DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TextualConvention")
snMacVlan = ModuleIdentity((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30))
snMacVlan.setRevisions(('2007-06-25 00:00',))
if mibBuilder.loadTexts: snMacVlan.setLastUpdated('200706250000Z')
if mibBuilder.loadTexts: snMacVlan.setOrganization('Foundry Networks, Inc')
snMacVlanGlobalObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 1))
snMacVlanTableObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 2))
snMacVlanGlobalClearOper = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("valid", 0), ("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snMacVlanGlobalClearOper.setStatus('current')
snMacVlanGlobalDynConfigState = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snMacVlanGlobalDynConfigState.setStatus('current')
snMacVlanPortMemberTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 2, 1), )
if mibBuilder.loadTexts: snMacVlanPortMemberTable.setStatus('current')
snMacVlanPortMemberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 2, 1, 1), ).setIndexNames((0, "FOUNDRY-SN-MAC-VLAN-MIB", "snMacVlanPortMemberVLanId"), (0, "FOUNDRY-SN-MAC-VLAN-MIB", "snMacVlanPortMemberPortId"))
if mibBuilder.loadTexts: snMacVlanPortMemberEntry.setStatus('current')
snMacVlanPortMemberVLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)))
if mibBuilder.loadTexts: snMacVlanPortMemberVLanId.setStatus('current')
snMacVlanPortMemberPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 2, 1, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: snMacVlanPortMemberPortId.setStatus('current')
snMacVlanPortMemberRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("valid", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snMacVlanPortMemberRowStatus.setStatus('current')
snMacVlanIfTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 2, 2), )
if mibBuilder.loadTexts: snMacVlanIfTable.setStatus('current')
snMacVlanIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 2, 2, 1), ).setIndexNames((0, "FOUNDRY-SN-MAC-VLAN-MIB", "snMacVlanIfIndex"))
if mibBuilder.loadTexts: snMacVlanIfEntry.setStatus('current')
snMacVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 2, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: snMacVlanIfIndex.setStatus('current')
snMacVlanIfEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snMacVlanIfEnable.setStatus('current')
snMacVlanIfMaxEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 32)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snMacVlanIfMaxEntry.setStatus('current')
snMacVlanIfClearOper = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("valid", 0), ("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snMacVlanIfClearOper.setStatus('current')
snMacVlanIfClearConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("valid", 0), ("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snMacVlanIfClearConfig.setStatus('current')
snMacBasedVlanTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 2, 3), )
if mibBuilder.loadTexts: snMacBasedVlanTable.setStatus('current')
snMacBasedVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 2, 3, 1), ).setIndexNames((0, "FOUNDRY-SN-MAC-VLAN-MIB", "snMacVlanIfIndex"), (0, "FOUNDRY-SN-MAC-VLAN-MIB", "snMacBasedVlanId"), (0, "FOUNDRY-SN-MAC-VLAN-MIB", "snMacBasedVlanMac"))
if mibBuilder.loadTexts: snMacBasedVlanEntry.setStatus('current')
snMacBasedVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)))
if mibBuilder.loadTexts: snMacBasedVlanId.setStatus('current')
snMacBasedVlanMac = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 2, 3, 1, 2), MacAddress())
if mibBuilder.loadTexts: snMacBasedVlanMac.setStatus('current')
snMacBasedVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snMacBasedVlanPriority.setStatus('current')
snMacBasedVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 30, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("valid", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snMacBasedVlanRowStatus.setStatus('current')
mibBuilder.exportSymbols("FOUNDRY-SN-MAC-VLAN-MIB", snMacVlanGlobalClearOper=snMacVlanGlobalClearOper, snMacVlanIfEnable=snMacVlanIfEnable, snMacVlanGlobalDynConfigState=snMacVlanGlobalDynConfigState, snMacBasedVlanMac=snMacBasedVlanMac, snMacVlanIfIndex=snMacVlanIfIndex, snMacBasedVlanPriority=snMacBasedVlanPriority, snMacVlanPortMemberEntry=snMacVlanPortMemberEntry, snMacVlanIfClearOper=snMacVlanIfClearOper, snMacVlanPortMemberVLanId=snMacVlanPortMemberVLanId, snMacVlanTableObjects=snMacVlanTableObjects, snMacVlanIfEntry=snMacVlanIfEntry, snMacVlanIfTable=snMacVlanIfTable, snMacBasedVlanTable=snMacBasedVlanTable, snMacVlanGlobalObjects=snMacVlanGlobalObjects, snMacVlanPortMemberTable=snMacVlanPortMemberTable, snMacVlanIfMaxEntry=snMacVlanIfMaxEntry, PYSNMP_MODULE_ID=snMacVlan, snMacBasedVlanEntry=snMacBasedVlanEntry, snMacVlanPortMemberRowStatus=snMacVlanPortMemberRowStatus, snMacVlanPortMemberPortId=snMacVlanPortMemberPortId, snMacVlanIfClearConfig=snMacVlanIfClearConfig, snMacBasedVlanId=snMacBasedVlanId, snMacVlan=snMacVlan, snMacBasedVlanRowStatus=snMacBasedVlanRowStatus)
