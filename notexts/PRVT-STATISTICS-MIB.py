#
# PySNMP MIB module PRVT-STATISTICS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-STATISTICS-MIB
# Produced by pysmi-1.1.3 at Mon Nov 22 20:08:06 2021
# On host fv-az42-715 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
sdpEntry, sapEntry = mibBuilder.importSymbols("PRVT-SERV-MIB", "sdpEntry", "sapEntry")
switch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "switch")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, iso, ObjectIdentity, NotificationType, Counter32, Gauge32, TimeTicks, Unsigned32, MibIdentifier, Counter64, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "iso", "ObjectIdentity", "NotificationType", "Counter32", "Gauge32", "TimeTicks", "Unsigned32", "MibIdentifier", "Counter64", "IpAddress")
TruthValue, TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "RowStatus", "DisplayString")
prvtStatisticsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 5, 181))
prvtStatisticsMIB.setRevisions(('2014-01-08 00:00',))
if mibBuilder.loadTexts: prvtStatisticsMIB.setLastUpdated('201401080000Z')
if mibBuilder.loadTexts: prvtStatisticsMIB.setOrganization('BATM Advanced Communication')
class StatType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("packet", 1), ("bytes", 2), ("all", 3))

prvtStatObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1))
prvtStatIngressPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 1), )
if mibBuilder.loadTexts: prvtStatIngressPolicyTable.setStatus('current')
prvtStatIngressPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 1, 1), ).setIndexNames((0, "PRVT-STATISTICS-MIB", "prvtStatIngressPolicyName"))
if mibBuilder.loadTexts: prvtStatIngressPolicyEntry.setStatus('current')
prvtStatIngressPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: prvtStatIngressPolicyName.setStatus('current')
prvtStatIngressPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatIngressPolicyRowStatus.setStatus('current')
prvtStatIngressPolicyDetailed = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 1, 1, 3), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatIngressPolicyDetailed.setStatus('current')
prvtStatIngressPolicyDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 120))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatIngressPolicyDescription.setStatus('current')
prvtStatIngressPolicyFc = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 1, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatIngressPolicyFc.setStatus('current')
prvtStatIngressPolicyFcBwMeasurement = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 1, 1, 6), StatType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatIngressPolicyFcBwMeasurement.setStatus('current')
prvtStatIngressPolicyColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 1, 1, 7), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatIngressPolicyColor.setStatus('current')
prvtStatIngressPolicyColorBwMeasurement = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 1, 1, 8), StatType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatIngressPolicyColorBwMeasurement.setStatus('current')
prvtStatIngressPolicyUnicast = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 1, 1, 9), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatIngressPolicyUnicast.setStatus('current')
prvtStatIngressPolicyUnicastBwMeasurement = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 1, 1, 10), StatType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatIngressPolicyUnicastBwMeasurement.setStatus('current')
prvtStatIngressPolicyBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 1, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatIngressPolicyBroadcast.setStatus('current')
prvtStatIngressPolicyBroadcastBwMeasurement = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 1, 1, 12), StatType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatIngressPolicyBroadcastBwMeasurement.setStatus('current')
prvtStatIngressPolicyMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 1, 1, 13), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatIngressPolicyMulticast.setStatus('current')
prvtStatIngressPolicyMulticastBwMeasurement = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 1, 1, 14), StatType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatIngressPolicyMulticastBwMeasurement.setStatus('current')
prvtStatEgressPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 2), )
if mibBuilder.loadTexts: prvtStatEgressPolicyTable.setStatus('current')
prvtStatEgressPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 2, 1), ).setIndexNames((0, "PRVT-STATISTICS-MIB", "prvtStatEgressPolicyName"))
if mibBuilder.loadTexts: prvtStatEgressPolicyEntry.setStatus('current')
prvtStatEgressPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: prvtStatEgressPolicyName.setStatus('current')
prvtStatEgressPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatEgressPolicyRowStatus.setStatus('current')
prvtStatEgressPolicyDetailed = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 2, 1, 3), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatEgressPolicyDetailed.setStatus('current')
prvtStatEgressPolicyDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 120))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatEgressPolicyDescription.setStatus('current')
prvtStatEgressPolicyFc = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 2, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatEgressPolicyFc.setStatus('current')
prvtStatEgressPolicyFcBwMeasurement = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 2, 1, 6), StatType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatEgressPolicyFcBwMeasurement.setStatus('current')
prvtStatEgressPolicyColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 2, 1, 7), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatEgressPolicyColor.setStatus('current')
prvtStatEgressPolicyColorBwMeasurement = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 2, 1, 8), StatType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatEgressPolicyColorBwMeasurement.setStatus('current')
prvtStatEgressPolicyDaType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 2, 1, 9), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatEgressPolicyDaType.setStatus('current')
prvtStatEgressPolicyDaTypeBwMeasurement = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 2, 1, 10), StatType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtStatEgressPolicyDaTypeBwMeasurement.setStatus('current')
prvtStatSapTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3), )
if mibBuilder.loadTexts: prvtStatSapTable.setStatus('current')
prvtStatSapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1), )
sapEntry.registerAugmentions(("PRVT-STATISTICS-MIB", "prvtStatSapEntry"))
prvtStatSapEntry.setIndexNames(*sapEntry.getIndexNames())
if mibBuilder.loadTexts: prvtStatSapEntry.setStatus('current')
prvtStatSapIngressPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtStatSapIngressPolicy.setStatus('current')
prvtStatSapEgressPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtStatSapEgressPolicy.setStatus('current')
prvtStatSapClear = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtStatSapClear.setStatus('current')
prvtStatSapInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapInPackets.setStatus('current')
prvtStatSapInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapInBytes.setStatus('current')
prvtStatSapDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapDropPackets.setStatus('current')
prvtStatSapDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapDropBytes.setStatus('current')
prvtStatSapUnicastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapUnicastPackets.setStatus('current')
prvtStatSapUnicastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapUnicastBytes.setStatus('current')
prvtStatSapMulticastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapMulticastPackets.setStatus('current')
prvtStatSapMulticastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapMulticastBytes.setStatus('current')
prvtStatSapBroadcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapBroadcastPackets.setStatus('current')
prvtStatSapBroadcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapBroadcastBytes.setStatus('current')
prvtStatSapPri0Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri0Packets.setStatus('current')
prvtStatSapPri0Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri0Bytes.setStatus('current')
prvtStatSapPri1Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri1Packets.setStatus('current')
prvtStatSapPri1Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri1Bytes.setStatus('current')
prvtStatSapPri2Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri2Packets.setStatus('current')
prvtStatSapPri2Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri2Bytes.setStatus('current')
prvtStatSapPri3Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri3Packets.setStatus('current')
prvtStatSapPri3Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri3Bytes.setStatus('current')
prvtStatSapPri4Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri4Packets.setStatus('current')
prvtStatSapPri4Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri4Bytes.setStatus('current')
prvtStatSapPri5Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri5Packets.setStatus('current')
prvtStatSapPri5Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri5Bytes.setStatus('current')
prvtStatSapPri6Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri6Packets.setStatus('current')
prvtStatSapPri6Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri6Bytes.setStatus('current')
prvtStatSapPri7Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri7Packets.setStatus('current')
prvtStatSapPri7Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri7Bytes.setStatus('current')
prvtStatSapPri0yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri0yPackets.setStatus('current')
prvtStatSapPri0yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri0yBytes.setStatus('current')
prvtStatSapPri1yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri1yPackets.setStatus('current')
prvtStatSapPri1yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri1yBytes.setStatus('current')
prvtStatSapPri2yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri2yPackets.setStatus('current')
prvtStatSapPri2yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri2yBytes.setStatus('current')
prvtStatSapPri3yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri3yPackets.setStatus('current')
prvtStatSapPri3yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri3yBytes.setStatus('current')
prvtStatSapPri4yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri4yPackets.setStatus('current')
prvtStatSapPri4yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri4yBytes.setStatus('current')
prvtStatSapPri5yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri5yPackets.setStatus('current')
prvtStatSapPri5yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri5yBytes.setStatus('current')
prvtStatSapPri6yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri6yPackets.setStatus('current')
prvtStatSapPri6yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri6yBytes.setStatus('current')
prvtStatSapPri7yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri7yPackets.setStatus('current')
prvtStatSapPri7yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapPri7yBytes.setStatus('current')
prvtStatSapEgPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPackets.setStatus('current')
prvtStatSapEgBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgBytes.setStatus('current')
prvtStatSapEgUnicastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgUnicastPackets.setStatus('current')
prvtStatSapEgUnicastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgUnicastBytes.setStatus('current')
prvtStatSapEgMulticastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgMulticastPackets.setStatus('current')
prvtStatSapEgMulticastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgMulticastBytes.setStatus('current')
prvtStatSapEgBroadcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgBroadcastPackets.setStatus('current')
prvtStatSapEgBroadcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgBroadcastBytes.setStatus('current')
prvtStatSapEgPri0Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri0Packets.setStatus('current')
prvtStatSapEgPri0Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri0Bytes.setStatus('current')
prvtStatSapEgPri1Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri1Packets.setStatus('current')
prvtStatSapEgPri1Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri1Bytes.setStatus('current')
prvtStatSapEgPri2Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri2Packets.setStatus('current')
prvtStatSapEgPri2Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri2Bytes.setStatus('current')
prvtStatSapEgPri3Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri3Packets.setStatus('current')
prvtStatSapEgPri3Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 61), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri3Bytes.setStatus('current')
prvtStatSapEgPri4Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 62), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri4Packets.setStatus('current')
prvtStatSapEgPri4Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 63), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri4Bytes.setStatus('current')
prvtStatSapEgPri5Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 64), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri5Packets.setStatus('current')
prvtStatSapEgPri5Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 65), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri5Bytes.setStatus('current')
prvtStatSapEgPri6Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 66), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri6Packets.setStatus('current')
prvtStatSapEgPri6Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 67), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri6Bytes.setStatus('current')
prvtStatSapEgPri7Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 68), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri7Packets.setStatus('current')
prvtStatSapEgPri7Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 69), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri7Bytes.setStatus('current')
prvtStatSapEgPri0yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 70), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri0yPackets.setStatus('current')
prvtStatSapEgPri0yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 71), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri0yBytes.setStatus('current')
prvtStatSapEgPri1yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 72), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri1yPackets.setStatus('current')
prvtStatSapEgPri1yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 73), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri1yBytes.setStatus('current')
prvtStatSapEgPri2yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 74), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri2yPackets.setStatus('current')
prvtStatSapEgPri2yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 75), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri2yBytes.setStatus('current')
prvtStatSapEgPri3yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 76), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri3yPackets.setStatus('current')
prvtStatSapEgPri3yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 77), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri3yBytes.setStatus('current')
prvtStatSapEgPri4yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 78), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri4yPackets.setStatus('current')
prvtStatSapEgPri4yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 79), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri4yBytes.setStatus('current')
prvtStatSapEgPri5yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 80), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri5yPackets.setStatus('current')
prvtStatSapEgPri5yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 81), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri5yBytes.setStatus('current')
prvtStatSapEgPri6yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 82), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri6yPackets.setStatus('current')
prvtStatSapEgPri6yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 83), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri6yBytes.setStatus('current')
prvtStatSapEgPri7yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 84), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri7yPackets.setStatus('current')
prvtStatSapEgPri7yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 3, 1, 85), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSapEgPri7yBytes.setStatus('current')
prvtStatSdpTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4), )
if mibBuilder.loadTexts: prvtStatSdpTable.setStatus('current')
prvtStatSdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1), )
sdpEntry.registerAugmentions(("PRVT-STATISTICS-MIB", "prvtStatSdpEntry"))
prvtStatSdpEntry.setIndexNames(*sdpEntry.getIndexNames())
if mibBuilder.loadTexts: prvtStatSdpEntry.setStatus('current')
prvtStatSdpIngressPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtStatSdpIngressPolicy.setStatus('current')
prvtStatSdpEgressPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtStatSdpEgressPolicy.setStatus('current')
prvtStatSdpClear = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtStatSdpClear.setStatus('current')
prvtStatSdpInPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpInPackets.setStatus('current')
prvtStatSdpInBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpInBytes.setStatus('current')
prvtStatSdpDropPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpDropPackets.setStatus('current')
prvtStatSdpDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpDropBytes.setStatus('current')
prvtStatSdpUnicastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpUnicastPackets.setStatus('current')
prvtStatSdpUnicastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpUnicastBytes.setStatus('current')
prvtStatSdpMulticastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpMulticastPackets.setStatus('current')
prvtStatSdpMulticastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpMulticastBytes.setStatus('current')
prvtStatSdpBroadcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpBroadcastPackets.setStatus('current')
prvtStatSdpBroadcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpBroadcastBytes.setStatus('current')
prvtStatSdpPri0Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri0Packets.setStatus('current')
prvtStatSdpPri0Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri0Bytes.setStatus('current')
prvtStatSdpPri1Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri1Packets.setStatus('current')
prvtStatSdpPri1Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri1Bytes.setStatus('current')
prvtStatSdpPri2Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri2Packets.setStatus('current')
prvtStatSdpPri2Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri2Bytes.setStatus('current')
prvtStatSdpPri3Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri3Packets.setStatus('current')
prvtStatSdpPri3Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri3Bytes.setStatus('current')
prvtStatSdpPri4Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri4Packets.setStatus('current')
prvtStatSdpPri4Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri4Bytes.setStatus('current')
prvtStatSdpPri5Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri5Packets.setStatus('current')
prvtStatSdpPri5Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri5Bytes.setStatus('current')
prvtStatSdpPri6Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri6Packets.setStatus('current')
prvtStatSdpPri6Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri6Bytes.setStatus('current')
prvtStatSdpPri7Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri7Packets.setStatus('current')
prvtStatSdpPri7Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri7Bytes.setStatus('current')
prvtStatSdpPri0yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri0yPackets.setStatus('current')
prvtStatSdpPri0yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri0yBytes.setStatus('current')
prvtStatSdpPri1yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri1yPackets.setStatus('current')
prvtStatSdpPri1yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri1yBytes.setStatus('current')
prvtStatSdpPri2yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri2yPackets.setStatus('current')
prvtStatSdpPri2yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri2yBytes.setStatus('current')
prvtStatSdpPri3yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri3yPackets.setStatus('current')
prvtStatSdpPri3yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri3yBytes.setStatus('current')
prvtStatSdpPri4yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri4yPackets.setStatus('current')
prvtStatSdpPri4yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri4yBytes.setStatus('current')
prvtStatSdpPri5yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri5yPackets.setStatus('current')
prvtStatSdpPri5yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri5yBytes.setStatus('current')
prvtStatSdpPri6yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 42), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri6yPackets.setStatus('current')
prvtStatSdpPri6yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 43), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri6yBytes.setStatus('current')
prvtStatSdpPri7yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 44), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri7yPackets.setStatus('current')
prvtStatSdpPri7yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 45), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpPri7yBytes.setStatus('current')
prvtStatSdpEgPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 46), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPackets.setStatus('current')
prvtStatSdpEgBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 47), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgBytes.setStatus('current')
prvtStatSdpEgUnicastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 48), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgUnicastPackets.setStatus('current')
prvtStatSdpEgUnicastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 49), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgUnicastBytes.setStatus('current')
prvtStatSdpEgMulticastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 50), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgMulticastPackets.setStatus('current')
prvtStatSdpEgMulticastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 51), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgMulticastBytes.setStatus('current')
prvtStatSdpEgBroadcastPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 52), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgBroadcastPackets.setStatus('current')
prvtStatSdpEgBroadcastBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 53), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgBroadcastBytes.setStatus('current')
prvtStatSdpEgPri0Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 54), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri0Packets.setStatus('current')
prvtStatSdpEgPri0Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 55), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri0Bytes.setStatus('current')
prvtStatSdpEgPri1Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 56), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri1Packets.setStatus('current')
prvtStatSdpEgPri1Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 57), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri1Bytes.setStatus('current')
prvtStatSdpEgPri2Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 58), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri2Packets.setStatus('current')
prvtStatSdpEgPri2Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 59), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri2Bytes.setStatus('current')
prvtStatSdpEgPri3Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 60), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri3Packets.setStatus('current')
prvtStatSdpEgPri3Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 61), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri3Bytes.setStatus('current')
prvtStatSdpEgPri4Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 62), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri4Packets.setStatus('current')
prvtStatSdpEgPri4Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 63), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri4Bytes.setStatus('current')
prvtStatSdpEgPri5Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 64), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri5Packets.setStatus('current')
prvtStatSdpEgPri5Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 65), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri5Bytes.setStatus('current')
prvtStatSdpEgPri6Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 66), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri6Packets.setStatus('current')
prvtStatSdpEgPri6Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 67), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri6Bytes.setStatus('current')
prvtStatSdpEgPri7Packets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 68), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri7Packets.setStatus('current')
prvtStatSdpEgPri7Bytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 69), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri7Bytes.setStatus('current')
prvtStatSdpEgPri0yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 70), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri0yPackets.setStatus('current')
prvtStatSdpEgPri0yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 71), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri0yBytes.setStatus('current')
prvtStatSdpEgPri1yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 72), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri1yPackets.setStatus('current')
prvtStatSdpEgPri1yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 73), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri1yBytes.setStatus('current')
prvtStatSdpEgPri2yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 74), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri2yPackets.setStatus('current')
prvtStatSdpEgPri2yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 75), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri2yBytes.setStatus('current')
prvtStatSdpEgPri3yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 76), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri3yPackets.setStatus('current')
prvtStatSdpEgPri3yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 77), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri3yBytes.setStatus('current')
prvtStatSdpEgPri4yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 78), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri4yPackets.setStatus('current')
prvtStatSdpEgPri4yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 79), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri4yBytes.setStatus('current')
prvtStatSdpEgPri5yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 80), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri5yPackets.setStatus('current')
prvtStatSdpEgPri5yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 81), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri5yBytes.setStatus('current')
prvtStatSdpEgPri6yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 82), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri6yPackets.setStatus('current')
prvtStatSdpEgPri6yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 83), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri6yBytes.setStatus('current')
prvtStatSdpEgPri7yPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 84), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri7yPackets.setStatus('current')
prvtStatSdpEgPri7yBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 181, 1, 4, 1, 85), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtStatSdpEgPri7yBytes.setStatus('current')
mibBuilder.exportSymbols("PRVT-STATISTICS-MIB", prvtStatSapPri4yPackets=prvtStatSapPri4yPackets, prvtStatIngressPolicyName=prvtStatIngressPolicyName, prvtStatSdpEgPri4yBytes=prvtStatSdpEgPri4yBytes, prvtStatSdpEgMulticastBytes=prvtStatSdpEgMulticastBytes, prvtStatSapPri7Packets=prvtStatSapPri7Packets, prvtStatSdpEgPri1Packets=prvtStatSdpEgPri1Packets, prvtStatSdpPri4yBytes=prvtStatSdpPri4yBytes, StatType=StatType, prvtStatSapEgPri2yBytes=prvtStatSapEgPri2yBytes, prvtStatSapEgPri7Packets=prvtStatSapEgPri7Packets, prvtStatSdpInBytes=prvtStatSdpInBytes, prvtStatIngressPolicyDescription=prvtStatIngressPolicyDescription, prvtStatSdpEgPri6Bytes=prvtStatSdpEgPri6Bytes, prvtStatSapEgPri1Packets=prvtStatSapEgPri1Packets, prvtStatSdpPri3Packets=prvtStatSdpPri3Packets, prvtStatIngressPolicyColor=prvtStatIngressPolicyColor, prvtStatSdpPri1yPackets=prvtStatSdpPri1yPackets, prvtStatSdpPri0yBytes=prvtStatSdpPri0yBytes, prvtStatSdpMulticastPackets=prvtStatSdpMulticastPackets, prvtStatSapPri2yBytes=prvtStatSapPri2yBytes, prvtStatSdpEgPri2yBytes=prvtStatSdpEgPri2yBytes, prvtStatSapPri1yBytes=prvtStatSapPri1yBytes, prvtStatSapEgPri2yPackets=prvtStatSapEgPri2yPackets, prvtStatEgressPolicyColor=prvtStatEgressPolicyColor, prvtStatSapPri5Bytes=prvtStatSapPri5Bytes, prvtStatIngressPolicyDetailed=prvtStatIngressPolicyDetailed, prvtStatEgressPolicyDetailed=prvtStatEgressPolicyDetailed, prvtStatSdpPri1Bytes=prvtStatSdpPri1Bytes, prvtStatEgressPolicyRowStatus=prvtStatEgressPolicyRowStatus, prvtStatSapEgPri3yPackets=prvtStatSapEgPri3yPackets, prvtStatSdpEgPri1Bytes=prvtStatSdpEgPri1Bytes, prvtStatSdpEgPri6Packets=prvtStatSdpEgPri6Packets, prvtStatSdpEntry=prvtStatSdpEntry, prvtStatSdpEgPri0yBytes=prvtStatSdpEgPri0yBytes, prvtStatSapUnicastPackets=prvtStatSapUnicastPackets, prvtStatSdpEgPri7yPackets=prvtStatSdpEgPri7yPackets, prvtStatEgressPolicyName=prvtStatEgressPolicyName, prvtStatSapEgBytes=prvtStatSapEgBytes, prvtStatSapEgPri7Bytes=prvtStatSapEgPri7Bytes, prvtStatSdpEgPri0Bytes=prvtStatSdpEgPri0Bytes, prvtStatSapInBytes=prvtStatSapInBytes, prvtStatSapEgBroadcastBytes=prvtStatSapEgBroadcastBytes, prvtStatSdpPri3yBytes=prvtStatSdpPri3yBytes, prvtStatSapPri1Bytes=prvtStatSapPri1Bytes, prvtStatSapEgPri6yPackets=prvtStatSapEgPri6yPackets, prvtStatSdpPri2Packets=prvtStatSdpPri2Packets, prvtStatSdpPri1yBytes=prvtStatSdpPri1yBytes, prvtStatSdpEgPri0Packets=prvtStatSdpEgPri0Packets, prvtStatEgressPolicyEntry=prvtStatEgressPolicyEntry, prvtStatSdpPri6Packets=prvtStatSdpPri6Packets, prvtStatSdpEgPri6yPackets=prvtStatSdpEgPri6yPackets, prvtStatSdpEgPri5yPackets=prvtStatSdpEgPri5yPackets, prvtStatSdpUnicastPackets=prvtStatSdpUnicastPackets, prvtStatIngressPolicyRowStatus=prvtStatIngressPolicyRowStatus, prvtStatIngressPolicyUnicastBwMeasurement=prvtStatIngressPolicyUnicastBwMeasurement, prvtStatSapPri7yPackets=prvtStatSapPri7yPackets, prvtStatSapDropBytes=prvtStatSapDropBytes, prvtStatSapEgPri4Bytes=prvtStatSapEgPri4Bytes, prvtStatSdpPri6yBytes=prvtStatSdpPri6yBytes, prvtStatSdpEgBytes=prvtStatSdpEgBytes, prvtStatSapEgPri7yBytes=prvtStatSapEgPri7yBytes, prvtStatSapPri6yBytes=prvtStatSapPri6yBytes, prvtStatIngressPolicyFcBwMeasurement=prvtStatIngressPolicyFcBwMeasurement, prvtStatIngressPolicyColorBwMeasurement=prvtStatIngressPolicyColorBwMeasurement, prvtStatSdpPri0yPackets=prvtStatSdpPri0yPackets, prvtStatSapEgPri1yBytes=prvtStatSapEgPri1yBytes, prvtStatSapPri2Bytes=prvtStatSapPri2Bytes, prvtStatSapPri1yPackets=prvtStatSapPri1yPackets, prvtStatSapEgPri6yBytes=prvtStatSapEgPri6yBytes, prvtStatSapEgPri5Bytes=prvtStatSapEgPri5Bytes, prvtStatSapEgPri0yBytes=prvtStatSapEgPri0yBytes, prvtStatSdpPri3Bytes=prvtStatSdpPri3Bytes, prvtStatSapEgPri7yPackets=prvtStatSapEgPri7yPackets, prvtStatSdpEgPri2Packets=prvtStatSdpEgPri2Packets, prvtStatSapEgPri2Packets=prvtStatSapEgPri2Packets, prvtStatSapBroadcastBytes=prvtStatSapBroadcastBytes, prvtStatSdpEgPri3Packets=prvtStatSdpEgPri3Packets, prvtStatSapEgPri0Packets=prvtStatSapEgPri0Packets, prvtStatSapEgMulticastBytes=prvtStatSapEgMulticastBytes, prvtStatSapEgPri1yPackets=prvtStatSapEgPri1yPackets, prvtStatIngressPolicyMulticastBwMeasurement=prvtStatIngressPolicyMulticastBwMeasurement, prvtStatSapClear=prvtStatSapClear, prvtStatSapEgPri3Packets=prvtStatSapEgPri3Packets, prvtStatSapPri0Bytes=prvtStatSapPri0Bytes, prvtStatSapEgUnicastBytes=prvtStatSapEgUnicastBytes, prvtStatSapEgressPolicy=prvtStatSapEgressPolicy, prvtStatSdpPri4Packets=prvtStatSdpPri4Packets, prvtStatSdpPri4Bytes=prvtStatSdpPri4Bytes, prvtStatisticsMIB=prvtStatisticsMIB, prvtStatSapInPackets=prvtStatSapInPackets, prvtStatSdpPri3yPackets=prvtStatSdpPri3yPackets, prvtStatSapPri5yPackets=prvtStatSapPri5yPackets, prvtStatSdpEgPri5yBytes=prvtStatSdpEgPri5yBytes, prvtStatSapPri6yPackets=prvtStatSapPri6yPackets, prvtStatSapMulticastPackets=prvtStatSapMulticastPackets, prvtStatSdpEgressPolicy=prvtStatSdpEgressPolicy, prvtStatSdpEgUnicastBytes=prvtStatSdpEgUnicastBytes, prvtStatSapPri1Packets=prvtStatSapPri1Packets, prvtStatSdpPri1Packets=prvtStatSdpPri1Packets, prvtStatSdpEgPri2Bytes=prvtStatSdpEgPri2Bytes, prvtStatSapPri4Bytes=prvtStatSapPri4Bytes, prvtStatSdpPri5yPackets=prvtStatSdpPri5yPackets, prvtStatSdpDropPackets=prvtStatSdpDropPackets, prvtStatSdpEgPri3yBytes=prvtStatSdpEgPri3yBytes, prvtStatSapEgPackets=prvtStatSapEgPackets, prvtStatSdpEgPri1yBytes=prvtStatSdpEgPri1yBytes, prvtStatSapEgPri3yBytes=prvtStatSapEgPri3yBytes, prvtStatEgressPolicyDaTypeBwMeasurement=prvtStatEgressPolicyDaTypeBwMeasurement, prvtStatSapDropPackets=prvtStatSapDropPackets, prvtStatSdpEgPackets=prvtStatSdpEgPackets, prvtStatIngressPolicyMulticast=prvtStatIngressPolicyMulticast, prvtStatSapEgBroadcastPackets=prvtStatSapEgBroadcastPackets, prvtStatSapPri6Packets=prvtStatSapPri6Packets, prvtStatSdpEgPri1yPackets=prvtStatSdpEgPri1yPackets, prvtStatSdpPri0Packets=prvtStatSdpPri0Packets, prvtStatSapPri7Bytes=prvtStatSapPri7Bytes, prvtStatSapBroadcastPackets=prvtStatSapBroadcastPackets, prvtStatSapEgPri1Bytes=prvtStatSapEgPri1Bytes, prvtStatSdpEgPri3yPackets=prvtStatSdpEgPri3yPackets, prvtStatSdpMulticastBytes=prvtStatSdpMulticastBytes, prvtStatSapMulticastBytes=prvtStatSapMulticastBytes, prvtStatSdpPri6yPackets=prvtStatSdpPri6yPackets, prvtStatSdpEgPri7Packets=prvtStatSdpEgPri7Packets, prvtStatSdpEgPri5Packets=prvtStatSdpEgPri5Packets, prvtStatSapPri2Packets=prvtStatSapPri2Packets, prvtStatSapPri5Packets=prvtStatSapPri5Packets, prvtStatSdpPri7Packets=prvtStatSdpPri7Packets, prvtStatSdpEgPri7Bytes=prvtStatSdpEgPri7Bytes, prvtStatSapIngressPolicy=prvtStatSapIngressPolicy, prvtStatSdpEgPri4Bytes=prvtStatSdpEgPri4Bytes, prvtStatSdpPri6Bytes=prvtStatSdpPri6Bytes, prvtStatSdpEgUnicastPackets=prvtStatSdpEgUnicastPackets, prvtStatSdpPri7yBytes=prvtStatSdpPri7yBytes, prvtStatSdpEgPri0yPackets=prvtStatSdpEgPri0yPackets, prvtStatSdpPri2Bytes=prvtStatSdpPri2Bytes, prvtStatSdpEgPri5Bytes=prvtStatSdpEgPri5Bytes, prvtStatSdpEgPri3Bytes=prvtStatSdpEgPri3Bytes, prvtStatEgressPolicyDaType=prvtStatEgressPolicyDaType, prvtStatIngressPolicyFc=prvtStatIngressPolicyFc, prvtStatIngressPolicyTable=prvtStatIngressPolicyTable, prvtStatSapEgPri4Packets=prvtStatSapEgPri4Packets, prvtStatSapEgPri6Packets=prvtStatSapEgPri6Packets, prvtStatSapPri0Packets=prvtStatSapPri0Packets, prvtStatSapEgPri5yPackets=prvtStatSapEgPri5yPackets, prvtStatSdpIngressPolicy=prvtStatSdpIngressPolicy, prvtStatSdpPri5Packets=prvtStatSdpPri5Packets, prvtStatSdpPri4yPackets=prvtStatSdpPri4yPackets, prvtStatSapEgPri0yPackets=prvtStatSapEgPri0yPackets, prvtStatSapEgPri3Bytes=prvtStatSapEgPri3Bytes, prvtStatSdpBroadcastBytes=prvtStatSdpBroadcastBytes, prvtStatSdpPri7yPackets=prvtStatSdpPri7yPackets, prvtStatIngressPolicyUnicast=prvtStatIngressPolicyUnicast, prvtStatSapPri3yPackets=prvtStatSapPri3yPackets, prvtStatSapEgPri6Bytes=prvtStatSapEgPri6Bytes, prvtStatObjects=prvtStatObjects, prvtStatSapPri4yBytes=prvtStatSapPri4yBytes, prvtStatSapEgPri0Bytes=prvtStatSapEgPri0Bytes, prvtStatSdpPri5yBytes=prvtStatSdpPri5yBytes, PYSNMP_MODULE_ID=prvtStatisticsMIB, prvtStatSapEgUnicastPackets=prvtStatSapEgUnicastPackets, prvtStatSdpPri7Bytes=prvtStatSdpPri7Bytes, prvtStatSapPri0yBytes=prvtStatSapPri0yBytes, prvtStatEgressPolicyFcBwMeasurement=prvtStatEgressPolicyFcBwMeasurement, prvtStatSapEgPri5Packets=prvtStatSapEgPri5Packets, prvtStatSdpPri5Bytes=prvtStatSdpPri5Bytes, prvtStatIngressPolicyBroadcastBwMeasurement=prvtStatIngressPolicyBroadcastBwMeasurement, prvtStatIngressPolicyBroadcast=prvtStatIngressPolicyBroadcast, prvtStatSapEgPri2Bytes=prvtStatSapEgPri2Bytes, prvtStatSdpEgPri4Packets=prvtStatSdpEgPri4Packets, prvtStatSdpPri0Bytes=prvtStatSdpPri0Bytes, prvtStatSdpEgBroadcastPackets=prvtStatSdpEgBroadcastPackets, prvtStatSdpEgPri7yBytes=prvtStatSdpEgPri7yBytes, prvtStatSdpEgMulticastPackets=prvtStatSdpEgMulticastPackets, prvtStatSdpEgBroadcastBytes=prvtStatSdpEgBroadcastBytes, prvtStatSapPri4Packets=prvtStatSapPri4Packets, prvtStatSapPri3Packets=prvtStatSapPri3Packets, prvtStatEgressPolicyColorBwMeasurement=prvtStatEgressPolicyColorBwMeasurement, prvtStatSapTable=prvtStatSapTable, prvtStatSdpUnicastBytes=prvtStatSdpUnicastBytes, prvtStatSapEgPri4yPackets=prvtStatSapEgPri4yPackets, prvtStatSdpInPackets=prvtStatSdpInPackets, prvtStatSdpEgPri4yPackets=prvtStatSdpEgPri4yPackets, prvtStatSapEntry=prvtStatSapEntry, prvtStatSapUnicastBytes=prvtStatSapUnicastBytes, prvtStatSdpTable=prvtStatSdpTable, prvtStatEgressPolicyDescription=prvtStatEgressPolicyDescription, prvtStatSapPri3Bytes=prvtStatSapPri3Bytes, prvtStatSapPri6Bytes=prvtStatSapPri6Bytes, prvtStatSapPri2yPackets=prvtStatSapPri2yPackets, prvtStatEgressPolicyFc=prvtStatEgressPolicyFc, prvtStatSapEgPri5yBytes=prvtStatSapEgPri5yBytes, prvtStatEgressPolicyTable=prvtStatEgressPolicyTable, prvtStatSapPri5yBytes=prvtStatSapPri5yBytes, prvtStatSdpClear=prvtStatSdpClear, prvtStatSdpDropBytes=prvtStatSdpDropBytes, prvtStatSdpBroadcastPackets=prvtStatSdpBroadcastPackets, prvtStatSapPri7yBytes=prvtStatSapPri7yBytes, prvtStatSdpPri2yPackets=prvtStatSdpPri2yPackets, prvtStatSdpEgPri2yPackets=prvtStatSdpEgPri2yPackets, prvtStatSdpEgPri6yBytes=prvtStatSdpEgPri6yBytes, prvtStatSapEgPri4yBytes=prvtStatSapEgPri4yBytes, prvtStatSdpPri2yBytes=prvtStatSdpPri2yBytes, prvtStatSapPri3yBytes=prvtStatSapPri3yBytes, prvtStatSapEgMulticastPackets=prvtStatSapEgMulticastPackets, prvtStatSapPri0yPackets=prvtStatSapPri0yPackets, prvtStatIngressPolicyEntry=prvtStatIngressPolicyEntry)
