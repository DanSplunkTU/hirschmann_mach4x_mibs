#
# PySNMP MIB module DOCS-MCAST-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/DOCS-MCAST-MIB
# Produced by pysmi-1.1.8 at Tue Jan 11 21:07:56 2022
# On host fv-az121-779 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
clabProjDocsis, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabProjDocsis")
DocsBpkmDataEncryptAlg, DocsSAId = mibBuilder.importSymbols("DOCS-IETF-BPI2-MIB", "DocsBpkmDataEncryptAlg", "DocsSAId")
Dsid, ChSetId = mibBuilder.importSymbols("DOCS-IF3-MIB", "Dsid", "ChSetId")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
InetAddressType, InetAddress, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetAddressPrefixLength")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Gauge32, Unsigned32, MibIdentifier, IpAddress, Integer32, TimeTicks, Counter32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, ModuleIdentity, Bits, iso, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Unsigned32", "MibIdentifier", "IpAddress", "Integer32", "TimeTicks", "Counter32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "ModuleIdentity", "Bits", "iso", "ObjectIdentity")
RowStatus, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TruthValue", "DisplayString")
docsMcastMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18))
docsMcastMib.setRevisions(('2007-08-03 00:00', '2006-12-07 17:00',))
if mibBuilder.loadTexts: docsMcastMib.setLastUpdated('200708030000Z')
if mibBuilder.loadTexts: docsMcastMib.setOrganization('Cable Television Laboratories, Inc.')
docsMcastMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1))
docsMcastCmtsGrpCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1), )
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgTable.setStatus('current')
docsMcastCmtsGrpCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1), ).setIndexNames((0, "DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgId"))
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgEntry.setStatus('current')
docsMcastCmtsGrpCfgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgId.setStatus('current')
docsMcastCmtsGrpCfgRulePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgRulePriority.setStatus('current')
docsMcastCmtsGrpCfgPrefixAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgPrefixAddrType.setStatus('current')
docsMcastCmtsGrpCfgSrcPrefixAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgSrcPrefixAddr.setStatus('current')
docsMcastCmtsGrpCfgSrcPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 5), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgSrcPrefixLen.setStatus('current')
docsMcastCmtsGrpCfgGrpPrefixAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgGrpPrefixAddr.setStatus('current')
docsMcastCmtsGrpCfgGrpPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 7), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgGrpPrefixLen.setStatus('current')
docsMcastCmtsGrpCfgTosLow = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgTosLow.setStatus('current')
docsMcastCmtsGrpCfgTosHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgTosHigh.setStatus('current')
docsMcastCmtsGrpCfgTosMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgTosMask.setStatus('current')
docsMcastCmtsGrpCfgQosConfigId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgQosConfigId.setStatus('current')
docsMcastCmtsGrpCfgEncryptConfigId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgEncryptConfigId.setStatus('current')
docsMcastCmtsGrpCfgPhsConfigId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgPhsConfigId.setStatus('current')
docsMcastCmtsGrpCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 1, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpCfgRowStatus.setStatus('current')
docsMcastCmtsGrpEncryptCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 2), )
if mibBuilder.loadTexts: docsMcastCmtsGrpEncryptCfgTable.setStatus('current')
docsMcastCmtsGrpEncryptCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 2, 1), ).setIndexNames((0, "DOCS-MCAST-MIB", "docsMcastCmtsGrpEncryptCfgId"))
if mibBuilder.loadTexts: docsMcastCmtsGrpEncryptCfgEntry.setStatus('current')
docsMcastCmtsGrpEncryptCfgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: docsMcastCmtsGrpEncryptCfgId.setStatus('current')
docsMcastCmtsGrpEncryptCfgCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cmts", 1), ("mgmt", 2))).clone('mgmt')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpEncryptCfgCtrl.setStatus('current')
docsMcastCmtsGrpEncryptCfgAlg = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 2, 1, 3), DocsBpkmDataEncryptAlg().clone('des56CbcMode')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpEncryptCfgAlg.setStatus('current')
docsMcastCmtsGrpEncryptCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpEncryptCfgRowStatus.setStatus('current')
docsMcastCmtsGrpPhsCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 3), )
if mibBuilder.loadTexts: docsMcastCmtsGrpPhsCfgTable.setStatus('current')
docsMcastCmtsGrpPhsCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 3, 1), ).setIndexNames((0, "DOCS-MCAST-MIB", "docsMcastCmtsGrpPhsCfgId"))
if mibBuilder.loadTexts: docsMcastCmtsGrpPhsCfgEntry.setStatus('current')
docsMcastCmtsGrpPhsCfgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: docsMcastCmtsGrpPhsCfgId.setStatus('current')
docsMcastCmtsGrpPhsCfgPhsField = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpPhsCfgPhsField.setStatus('current')
docsMcastCmtsGrpPhsCfgPhsMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpPhsCfgPhsMask.setStatus('current')
docsMcastCmtsGrpPhsCfgPhsSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('Bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpPhsCfgPhsSize.setStatus('current')
docsMcastCmtsGrpPhsCfgPhsVerify = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 3, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpPhsCfgPhsVerify.setStatus('current')
docsMcastCmtsGrpPhsCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpPhsCfgRowStatus.setStatus('current')
docsMcastCmtsGrpQosCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 4), )
if mibBuilder.loadTexts: docsMcastCmtsGrpQosCfgTable.setStatus('current')
docsMcastCmtsGrpQosCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 4, 1), ).setIndexNames((0, "DOCS-MCAST-MIB", "docsMcastCmtsGrpQosCfgId"))
if mibBuilder.loadTexts: docsMcastCmtsGrpQosCfgEntry.setStatus('current')
docsMcastCmtsGrpQosCfgId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: docsMcastCmtsGrpQosCfgId.setStatus('current')
docsMcastCmtsGrpQosCfgServiceClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 4, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 15)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpQosCfgServiceClassName.setStatus('current')
docsMcastCmtsGrpQosCfgQosCtrl = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("singleSession", 1), ("aggregateSession", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpQosCfgQosCtrl.setStatus('current')
docsMcastCmtsGrpQosCfgAggSessLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpQosCfgAggSessLimit.setStatus('current')
docsMcastCmtsGrpQosCfgAppId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 4, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpQosCfgAppId.setStatus('current')
docsMcastCmtsGrpQosCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsMcastCmtsGrpQosCfgRowStatus.setStatus('current')
docsMcastCmtsReplSessTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5), )
if mibBuilder.loadTexts: docsMcastCmtsReplSessTable.setStatus('current')
docsMcastCmtsReplSessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5, 1), ).setIndexNames((0, "DOCS-MCAST-MIB", "docsMcastCmtsReplSessPrefixAddrType"), (0, "DOCS-MCAST-MIB", "docsMcastCmtsReplSessGrpPrefix"), (0, "DOCS-MCAST-MIB", "docsMcastCmtsReplSessSrcPrefix"), (0, "DOCS-MCAST-MIB", "docsMcastCmtsReplSessMdIfIndex"), (0, "DOCS-MCAST-MIB", "docsMcastCmtsReplSessDcsId"), (0, "DOCS-MCAST-MIB", "docsMcastCmtsReplSessServiceFlowId"))
if mibBuilder.loadTexts: docsMcastCmtsReplSessEntry.setStatus('current')
docsMcastCmtsReplSessPrefixAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5, 1, 1), InetAddressType())
if mibBuilder.loadTexts: docsMcastCmtsReplSessPrefixAddrType.setStatus('current')
docsMcastCmtsReplSessGrpPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5, 1, 2), InetAddress())
if mibBuilder.loadTexts: docsMcastCmtsReplSessGrpPrefix.setStatus('current')
docsMcastCmtsReplSessSrcPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5, 1, 3), InetAddress())
if mibBuilder.loadTexts: docsMcastCmtsReplSessSrcPrefix.setStatus('current')
docsMcastCmtsReplSessMdIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5, 1, 4), InterfaceIndex())
if mibBuilder.loadTexts: docsMcastCmtsReplSessMdIfIndex.setStatus('current')
docsMcastCmtsReplSessDcsId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5, 1, 5), ChSetId())
if mibBuilder.loadTexts: docsMcastCmtsReplSessDcsId.setStatus('current')
docsMcastCmtsReplSessServiceFlowId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: docsMcastCmtsReplSessServiceFlowId.setStatus('current')
docsMcastCmtsReplSessDsid = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5, 1, 7), Dsid()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastCmtsReplSessDsid.setStatus('current')
docsMcastCmtsReplSessSaid = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 5, 1, 8), DocsSAId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastCmtsReplSessSaid.setStatus('current')
docsMcastDefGrpSvcClass = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 6))
docsMcastDefGrpSvcClassDef = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 6, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 15)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsMcastDefGrpSvcClassDef.setStatus('current')
docsMcastDsidPhsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 7), )
if mibBuilder.loadTexts: docsMcastDsidPhsTable.setStatus('current')
docsMcastDsidPhsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-MCAST-MIB", "docsMcastDsidPhsDsid"))
if mibBuilder.loadTexts: docsMcastDsidPhsEntry.setStatus('current')
docsMcastDsidPhsDsid = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 7, 1, 1), Dsid())
if mibBuilder.loadTexts: docsMcastDsidPhsDsid.setStatus('current')
docsMcastDsidPhsPhsField = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 7, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastDsidPhsPhsField.setStatus('current')
docsMcastDsidPhsPhsMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 7, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastDsidPhsPhsMask.setStatus('current')
docsMcastDsidPhsPhsSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 7, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastDsidPhsPhsSize.setStatus('current')
docsMcastDsidPhsPhsVerify = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 1, 7, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsMcastDsidPhsPhsVerify.setStatus('current')
docsMcastMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 2))
docsMcastMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 2, 1))
docsMcastMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 2, 2))
docsMcastCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 2, 1, 1)).setObjects(("DOCS-MCAST-MIB", "docsMcastGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsMcastCompliance = docsMcastCompliance.setStatus('current')
docsMcastGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 18, 2, 2, 1)).setObjects(("DOCS-MCAST-MIB", "docsMcastCmtsReplSessDsid"), ("DOCS-MCAST-MIB", "docsMcastCmtsReplSessSaid"), ("DOCS-MCAST-MIB", "docsMcastDefGrpSvcClassDef"), ("DOCS-MCAST-MIB", "docsMcastDsidPhsPhsField"), ("DOCS-MCAST-MIB", "docsMcastDsidPhsPhsMask"), ("DOCS-MCAST-MIB", "docsMcastDsidPhsPhsSize"), ("DOCS-MCAST-MIB", "docsMcastDsidPhsPhsVerify"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgRulePriority"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgPrefixAddrType"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgSrcPrefixAddr"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgSrcPrefixLen"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgGrpPrefixAddr"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgGrpPrefixLen"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgTosLow"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgTosHigh"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgTosMask"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgQosConfigId"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgEncryptConfigId"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgPhsConfigId"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpCfgRowStatus"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpQosCfgServiceClassName"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpQosCfgQosCtrl"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpQosCfgAggSessLimit"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpQosCfgAppId"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpQosCfgRowStatus"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpEncryptCfgCtrl"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpEncryptCfgAlg"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpEncryptCfgRowStatus"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpPhsCfgPhsField"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpPhsCfgPhsMask"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpPhsCfgPhsSize"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpPhsCfgPhsVerify"), ("DOCS-MCAST-MIB", "docsMcastCmtsGrpPhsCfgRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsMcastGroup = docsMcastGroup.setStatus('current')
mibBuilder.exportSymbols("DOCS-MCAST-MIB", docsMcastCmtsReplSessSrcPrefix=docsMcastCmtsReplSessSrcPrefix, docsMcastCmtsGrpCfgRowStatus=docsMcastCmtsGrpCfgRowStatus, docsMcastCmtsGrpPhsCfgPhsField=docsMcastCmtsGrpPhsCfgPhsField, docsMcastCmtsGrpQosCfgAppId=docsMcastCmtsGrpQosCfgAppId, docsMcastCmtsGrpQosCfgEntry=docsMcastCmtsGrpQosCfgEntry, docsMcastDsidPhsPhsVerify=docsMcastDsidPhsPhsVerify, docsMcastCmtsGrpCfgEntry=docsMcastCmtsGrpCfgEntry, docsMcastCmtsGrpCfgGrpPrefixLen=docsMcastCmtsGrpCfgGrpPrefixLen, docsMcastCmtsGrpCfgQosConfigId=docsMcastCmtsGrpCfgQosConfigId, docsMcastCmtsGrpEncryptCfgId=docsMcastCmtsGrpEncryptCfgId, PYSNMP_MODULE_ID=docsMcastMib, docsMcastCmtsGrpQosCfgServiceClassName=docsMcastCmtsGrpQosCfgServiceClassName, docsMcastMibGroups=docsMcastMibGroups, docsMcastCmtsGrpCfgRulePriority=docsMcastCmtsGrpCfgRulePriority, docsMcastCmtsGrpCfgTosMask=docsMcastCmtsGrpCfgTosMask, docsMcastMibConformance=docsMcastMibConformance, docsMcastCmtsGrpCfgPrefixAddrType=docsMcastCmtsGrpCfgPrefixAddrType, docsMcastCmtsReplSessDsid=docsMcastCmtsReplSessDsid, docsMcastCmtsReplSessPrefixAddrType=docsMcastCmtsReplSessPrefixAddrType, docsMcastDsidPhsEntry=docsMcastDsidPhsEntry, docsMcastCmtsGrpQosCfgAggSessLimit=docsMcastCmtsGrpQosCfgAggSessLimit, docsMcastCmtsGrpQosCfgTable=docsMcastCmtsGrpQosCfgTable, docsMcastCmtsGrpPhsCfgRowStatus=docsMcastCmtsGrpPhsCfgRowStatus, docsMcastDefGrpSvcClassDef=docsMcastDefGrpSvcClassDef, docsMcastCmtsGrpEncryptCfgCtrl=docsMcastCmtsGrpEncryptCfgCtrl, docsMcastCmtsReplSessServiceFlowId=docsMcastCmtsReplSessServiceFlowId, docsMcastCmtsGrpQosCfgRowStatus=docsMcastCmtsGrpQosCfgRowStatus, docsMcastCmtsGrpPhsCfgEntry=docsMcastCmtsGrpPhsCfgEntry, docsMcastDsidPhsDsid=docsMcastDsidPhsDsid, docsMcastCmtsGrpCfgEncryptConfigId=docsMcastCmtsGrpCfgEncryptConfigId, docsMcastCmtsGrpPhsCfgPhsMask=docsMcastCmtsGrpPhsCfgPhsMask, docsMcastCmtsGrpCfgTable=docsMcastCmtsGrpCfgTable, docsMcastDsidPhsTable=docsMcastDsidPhsTable, docsMcastDefGrpSvcClass=docsMcastDefGrpSvcClass, docsMcastCmtsGrpCfgGrpPrefixAddr=docsMcastCmtsGrpCfgGrpPrefixAddr, docsMcastCmtsReplSessTable=docsMcastCmtsReplSessTable, docsMcastCmtsGrpEncryptCfgEntry=docsMcastCmtsGrpEncryptCfgEntry, docsMcastDsidPhsPhsSize=docsMcastDsidPhsPhsSize, docsMcastCmtsReplSessGrpPrefix=docsMcastCmtsReplSessGrpPrefix, docsMcastCmtsReplSessMdIfIndex=docsMcastCmtsReplSessMdIfIndex, docsMcastCmtsGrpEncryptCfgRowStatus=docsMcastCmtsGrpEncryptCfgRowStatus, docsMcastCmtsGrpCfgId=docsMcastCmtsGrpCfgId, docsMcastCmtsGrpCfgSrcPrefixAddr=docsMcastCmtsGrpCfgSrcPrefixAddr, docsMcastCmtsGrpQosCfgQosCtrl=docsMcastCmtsGrpQosCfgQosCtrl, docsMcastCmtsGrpCfgSrcPrefixLen=docsMcastCmtsGrpCfgSrcPrefixLen, docsMcastCmtsGrpPhsCfgTable=docsMcastCmtsGrpPhsCfgTable, docsMcastCmtsReplSessSaid=docsMcastCmtsReplSessSaid, docsMcastCmtsGrpCfgTosHigh=docsMcastCmtsGrpCfgTosHigh, docsMcastCmtsGrpCfgTosLow=docsMcastCmtsGrpCfgTosLow, docsMcastCmtsReplSessDcsId=docsMcastCmtsReplSessDcsId, docsMcastCompliance=docsMcastCompliance, docsMcastDsidPhsPhsField=docsMcastDsidPhsPhsField, docsMcastDsidPhsPhsMask=docsMcastDsidPhsPhsMask, docsMcastCmtsGrpQosCfgId=docsMcastCmtsGrpQosCfgId, docsMcastMibObjects=docsMcastMibObjects, docsMcastCmtsReplSessEntry=docsMcastCmtsReplSessEntry, docsMcastCmtsGrpPhsCfgPhsSize=docsMcastCmtsGrpPhsCfgPhsSize, docsMcastMibCompliances=docsMcastMibCompliances, docsMcastGroup=docsMcastGroup, docsMcastMib=docsMcastMib, docsMcastCmtsGrpEncryptCfgAlg=docsMcastCmtsGrpEncryptCfgAlg, docsMcastCmtsGrpPhsCfgPhsVerify=docsMcastCmtsGrpPhsCfgPhsVerify, docsMcastCmtsGrpEncryptCfgTable=docsMcastCmtsGrpEncryptCfgTable, docsMcastCmtsGrpPhsCfgId=docsMcastCmtsGrpPhsCfgId, docsMcastCmtsGrpCfgPhsConfigId=docsMcastCmtsGrpCfgPhsConfigId)
