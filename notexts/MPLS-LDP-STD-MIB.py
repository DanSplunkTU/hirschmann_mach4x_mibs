#
# PySNMP MIB module MPLS-LDP-STD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/MPLS-LDP-STD-MIB
# Produced by pysmi-1.1.3 at Wed Dec  1 17:24:16 2021
# On host fv-az77-605 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
IndexInteger, IndexIntegerNextFree = mibBuilder.importSymbols("DIFFSERV-MIB", "IndexInteger", "IndexIntegerNextFree")
InetAddressType, InetPortNumber, InetAddressPrefixLength, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetPortNumber", "InetAddressPrefixLength", "InetAddress")
MplsIndexType, = mibBuilder.importSymbols("MPLS-LSR-STD-MIB", "MplsIndexType")
MplsLsrIdentifier, MplsLdpLabelType, MplsLspType, MplsRetentionMode, mplsStdMIB, MplsLdpIdentifier, MplsLabelDistributionMethod = mibBuilder.importSymbols("MPLS-TC-STD-MIB", "MplsLsrIdentifier", "MplsLdpLabelType", "MplsLspType", "MplsRetentionMode", "mplsStdMIB", "MplsLdpIdentifier", "MplsLabelDistributionMethod")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, TimeTicks, MibIdentifier, ModuleIdentity, Unsigned32, Bits, IpAddress, NotificationType, Counter64, Counter32, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "TimeTicks", "MibIdentifier", "ModuleIdentity", "Unsigned32", "Bits", "IpAddress", "NotificationType", "Counter64", "Counter32", "Gauge32")
TimeInterval, TruthValue, RowStatus, StorageType, TextualConvention, DisplayString, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "TimeInterval", "TruthValue", "RowStatus", "StorageType", "TextualConvention", "DisplayString", "TimeStamp")
mplsLdpStdMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 166, 4))
mplsLdpStdMIB.setRevisions(('2004-06-03 00:00',))
if mibBuilder.loadTexts: mplsLdpStdMIB.setLastUpdated('200406030000Z')
if mibBuilder.loadTexts: mplsLdpStdMIB.setOrganization('Multiprotocol Label Switching (mpls) Working Group')
mplsLdpNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 4, 0))
mplsLdpObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 4, 1))
mplsLdpConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 4, 2))
mplsLdpLsrObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 1))
mplsLdpEntityObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2))
mplsLdpLsrId = MibScalar((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 1, 1), MplsLsrIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpLsrId.setStatus('current')
mplsLdpLsrLoopDetectionCapable = MibScalar((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("other", 2), ("hopCount", 3), ("pathVector", 4), ("hopCountAndPathVector", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpLsrLoopDetectionCapable.setStatus('current')
mplsLdpEntityLastChange = MibScalar((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityLastChange.setStatus('current')
mplsLdpEntityIndexNext = MibScalar((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 2), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityIndexNext.setStatus('current')
mplsLdpEntityTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3), )
if mibBuilder.loadTexts: mplsLdpEntityTable.setStatus('current')
mplsLdpEntityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1), ).setIndexNames((0, "MPLS-LDP-STD-MIB", "mplsLdpEntityLdpId"), (0, "MPLS-LDP-STD-MIB", "mplsLdpEntityIndex"))
if mibBuilder.loadTexts: mplsLdpEntityEntry.setStatus('current')
mplsLdpEntityLdpId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 1), MplsLdpIdentifier())
if mibBuilder.loadTexts: mplsLdpEntityLdpId.setStatus('current')
mplsLdpEntityIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 2), IndexInteger())
if mibBuilder.loadTexts: mplsLdpEntityIndex.setStatus('current')
mplsLdpEntityProtocolVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityProtocolVersion.setStatus('current')
mplsLdpEntityAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityAdminStatus.setStatus('current')
mplsLdpEntityOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityOperStatus.setStatus('current')
mplsLdpEntityTcpPort = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 6), InetPortNumber().clone(646)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityTcpPort.setStatus('current')
mplsLdpEntityUdpDscPort = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 7), InetPortNumber().clone(646)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityUdpDscPort.setStatus('current')
mplsLdpEntityMaxPduLength = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(256, 65535)).clone(4096)).setUnits('octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityMaxPduLength.setStatus('current')
mplsLdpEntityKeepAliveHoldTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(40)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityKeepAliveHoldTimer.setStatus('current')
mplsLdpEntityHelloHoldTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityHelloHoldTimer.setStatus('current')
mplsLdpEntityInitSessionThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(8)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityInitSessionThreshold.setStatus('current')
mplsLdpEntityLabelDistMethod = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 12), MplsLabelDistributionMethod()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityLabelDistMethod.setStatus('current')
mplsLdpEntityLabelRetentionMode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 13), MplsRetentionMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityLabelRetentionMode.setStatus('current')
mplsLdpEntityPathVectorLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityPathVectorLimit.setStatus('current')
mplsLdpEntityHopCountLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityHopCountLimit.setStatus('current')
mplsLdpEntityTransportAddrKind = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("interface", 1), ("loopback", 2))).clone('loopback')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityTransportAddrKind.setStatus('current')
mplsLdpEntityTargetPeer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 17), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityTargetPeer.setStatus('current')
mplsLdpEntityTargetPeerAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 18), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityTargetPeerAddrType.setStatus('current')
mplsLdpEntityTargetPeerAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 19), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityTargetPeerAddr.setStatus('current')
mplsLdpEntityLabelType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 20), MplsLdpLabelType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityLabelType.setStatus('current')
mplsLdpEntityDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 21), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityDiscontinuityTime.setStatus('current')
mplsLdpEntityStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 22), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityStorageType.setStatus('current')
mplsLdpEntityRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 3, 1, 23), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityRowStatus.setStatus('current')
mplsLdpEntityStatsTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4), )
if mibBuilder.loadTexts: mplsLdpEntityStatsTable.setStatus('current')
mplsLdpEntityStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1), )
mplsLdpEntityEntry.registerAugmentions(("MPLS-LDP-STD-MIB", "mplsLdpEntityStatsEntry"))
mplsLdpEntityStatsEntry.setIndexNames(*mplsLdpEntityEntry.getIndexNames())
if mibBuilder.loadTexts: mplsLdpEntityStatsEntry.setStatus('current')
mplsLdpEntityStatsSessionAttempts = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsSessionAttempts.setStatus('current')
mplsLdpEntityStatsSessionRejectedNoHelloErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsSessionRejectedNoHelloErrors.setStatus('current')
mplsLdpEntityStatsSessionRejectedAdErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsSessionRejectedAdErrors.setStatus('current')
mplsLdpEntityStatsSessionRejectedMaxPduErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsSessionRejectedMaxPduErrors.setStatus('current')
mplsLdpEntityStatsSessionRejectedLRErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsSessionRejectedLRErrors.setStatus('current')
mplsLdpEntityStatsBadLdpIdentifierErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsBadLdpIdentifierErrors.setStatus('current')
mplsLdpEntityStatsBadPduLengthErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsBadPduLengthErrors.setStatus('current')
mplsLdpEntityStatsBadMessageLengthErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsBadMessageLengthErrors.setStatus('current')
mplsLdpEntityStatsBadTlvLengthErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsBadTlvLengthErrors.setStatus('current')
mplsLdpEntityStatsMalformedTlvValueErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsMalformedTlvValueErrors.setStatus('current')
mplsLdpEntityStatsKeepAliveTimerExpErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsKeepAliveTimerExpErrors.setStatus('current')
mplsLdpEntityStatsShutdownReceivedNotifications = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsShutdownReceivedNotifications.setStatus('current')
mplsLdpEntityStatsShutdownSentNotifications = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 2, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsShutdownSentNotifications.setStatus('current')
mplsLdpSessionObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3))
mplsLdpPeerLastChange = MibScalar((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpPeerLastChange.setStatus('current')
mplsLdpPeerTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 2), )
if mibBuilder.loadTexts: mplsLdpPeerTable.setStatus('current')
mplsLdpPeerEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 2, 1), ).setIndexNames((0, "MPLS-LDP-STD-MIB", "mplsLdpEntityLdpId"), (0, "MPLS-LDP-STD-MIB", "mplsLdpEntityIndex"), (0, "MPLS-LDP-STD-MIB", "mplsLdpPeerLdpId"))
if mibBuilder.loadTexts: mplsLdpPeerEntry.setStatus('current')
mplsLdpPeerLdpId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 2, 1, 1), MplsLdpIdentifier())
if mibBuilder.loadTexts: mplsLdpPeerLdpId.setStatus('current')
mplsLdpPeerLabelDistMethod = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 2, 1, 2), MplsLabelDistributionMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpPeerLabelDistMethod.setStatus('current')
mplsLdpPeerPathVectorLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpPeerPathVectorLimit.setStatus('current')
mplsLdpPeerTransportAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 2, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpPeerTransportAddrType.setStatus('current')
mplsLdpPeerTransportAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 2, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpPeerTransportAddr.setStatus('current')
mplsLdpSessionTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 3), )
if mibBuilder.loadTexts: mplsLdpSessionTable.setStatus('current')
mplsLdpSessionEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 3, 1), )
mplsLdpPeerEntry.registerAugmentions(("MPLS-LDP-STD-MIB", "mplsLdpSessionEntry"))
mplsLdpSessionEntry.setIndexNames(*mplsLdpPeerEntry.getIndexNames())
if mibBuilder.loadTexts: mplsLdpSessionEntry.setStatus('current')
mplsLdpSessionStateLastChange = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 3, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionStateLastChange.setStatus('current')
mplsLdpSessionState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nonexistent", 1), ("initialized", 2), ("openrec", 3), ("opensent", 4), ("operational", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionState.setStatus('current')
mplsLdpSessionRole = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("active", 2), ("passive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionRole.setStatus('current')
mplsLdpSessionProtocolVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionProtocolVersion.setStatus('current')
mplsLdpSessionKeepAliveHoldTimeRem = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 3, 1, 5), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionKeepAliveHoldTimeRem.setStatus('current')
mplsLdpSessionKeepAliveTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionKeepAliveTime.setStatus('current')
mplsLdpSessionMaxPduLength = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionMaxPduLength.setStatus('current')
mplsLdpSessionDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 3, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionDiscontinuityTime.setStatus('current')
mplsLdpSessionStatsTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 4), )
if mibBuilder.loadTexts: mplsLdpSessionStatsTable.setStatus('current')
mplsLdpSessionStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 4, 1), )
mplsLdpPeerEntry.registerAugmentions(("MPLS-LDP-STD-MIB", "mplsLdpSessionStatsEntry"))
mplsLdpSessionStatsEntry.setIndexNames(*mplsLdpPeerEntry.getIndexNames())
if mibBuilder.loadTexts: mplsLdpSessionStatsEntry.setStatus('current')
mplsLdpSessionStatsUnknownMesTypeErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionStatsUnknownMesTypeErrors.setStatus('current')
mplsLdpSessionStatsUnknownTlvErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionStatsUnknownTlvErrors.setStatus('current')
mplsLdpHelloAdjacencyObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 5))
mplsLdpHelloAdjacencyTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 5, 1), )
if mibBuilder.loadTexts: mplsLdpHelloAdjacencyTable.setStatus('current')
mplsLdpHelloAdjacencyEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 5, 1, 1), ).setIndexNames((0, "MPLS-LDP-STD-MIB", "mplsLdpEntityLdpId"), (0, "MPLS-LDP-STD-MIB", "mplsLdpEntityIndex"), (0, "MPLS-LDP-STD-MIB", "mplsLdpPeerLdpId"), (0, "MPLS-LDP-STD-MIB", "mplsLdpHelloAdjacencyIndex"))
if mibBuilder.loadTexts: mplsLdpHelloAdjacencyEntry.setStatus('current')
mplsLdpHelloAdjacencyIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 5, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: mplsLdpHelloAdjacencyIndex.setStatus('current')
mplsLdpHelloAdjacencyHoldTimeRem = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 5, 1, 1, 2), TimeInterval()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpHelloAdjacencyHoldTimeRem.setStatus('current')
mplsLdpHelloAdjacencyHoldTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 5, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpHelloAdjacencyHoldTime.setStatus('current')
mplsLdpHelloAdjacencyType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("link", 1), ("targeted", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpHelloAdjacencyType.setStatus('current')
mplsInSegmentLdpLspTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 6), )
if mibBuilder.loadTexts: mplsInSegmentLdpLspTable.setStatus('current')
mplsInSegmentLdpLspEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 6, 1), ).setIndexNames((0, "MPLS-LDP-STD-MIB", "mplsLdpEntityLdpId"), (0, "MPLS-LDP-STD-MIB", "mplsLdpEntityIndex"), (0, "MPLS-LDP-STD-MIB", "mplsLdpPeerLdpId"), (0, "MPLS-LDP-STD-MIB", "mplsInSegmentLdpLspIndex"))
if mibBuilder.loadTexts: mplsInSegmentLdpLspEntry.setStatus('current')
mplsInSegmentLdpLspIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 6, 1, 1), MplsIndexType())
if mibBuilder.loadTexts: mplsInSegmentLdpLspIndex.setStatus('current')
mplsInSegmentLdpLspLabelType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 6, 1, 2), MplsLdpLabelType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsInSegmentLdpLspLabelType.setStatus('current')
mplsInSegmentLdpLspType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 6, 1, 3), MplsLspType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsInSegmentLdpLspType.setStatus('current')
mplsOutSegmentLdpLspTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 7), )
if mibBuilder.loadTexts: mplsOutSegmentLdpLspTable.setStatus('current')
mplsOutSegmentLdpLspEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 7, 1), ).setIndexNames((0, "MPLS-LDP-STD-MIB", "mplsLdpEntityLdpId"), (0, "MPLS-LDP-STD-MIB", "mplsLdpEntityIndex"), (0, "MPLS-LDP-STD-MIB", "mplsLdpPeerLdpId"), (0, "MPLS-LDP-STD-MIB", "mplsOutSegmentLdpLspIndex"))
if mibBuilder.loadTexts: mplsOutSegmentLdpLspEntry.setStatus('current')
mplsOutSegmentLdpLspIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 7, 1, 1), MplsIndexType())
if mibBuilder.loadTexts: mplsOutSegmentLdpLspIndex.setStatus('current')
mplsOutSegmentLdpLspLabelType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 7, 1, 2), MplsLdpLabelType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsOutSegmentLdpLspLabelType.setStatus('current')
mplsOutSegmentLdpLspType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 7, 1, 3), MplsLspType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsOutSegmentLdpLspType.setStatus('current')
mplsFecObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8))
mplsFecLastChange = MibScalar((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFecLastChange.setStatus('current')
mplsFecIndexNext = MibScalar((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 2), IndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFecIndexNext.setStatus('current')
mplsFecTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 3), )
if mibBuilder.loadTexts: mplsFecTable.setStatus('current')
mplsFecEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 3, 1), ).setIndexNames((0, "MPLS-LDP-STD-MIB", "mplsFecIndex"))
if mibBuilder.loadTexts: mplsFecEntry.setStatus('current')
mplsFecIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 3, 1, 1), IndexInteger())
if mibBuilder.loadTexts: mplsFecIndex.setStatus('current')
mplsFecType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("prefix", 1), ("hostAddress", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFecType.setStatus('current')
mplsFecAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 3, 1, 4), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFecAddrType.setStatus('current')
mplsFecAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 3, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFecAddr.setStatus('current')
mplsFecAddrPrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 3, 1, 3), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFecAddrPrefixLength.setStatus('current')
mplsFecStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 3, 1, 6), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFecStorageType.setStatus('current')
mplsFecRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 8, 3, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsFecRowStatus.setStatus('current')
mplsLdpLspFecLastChange = MibScalar((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpLspFecLastChange.setStatus('current')
mplsLdpLspFecTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 10), )
if mibBuilder.loadTexts: mplsLdpLspFecTable.setStatus('current')
mplsLdpLspFecEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 10, 1), ).setIndexNames((0, "MPLS-LDP-STD-MIB", "mplsLdpEntityLdpId"), (0, "MPLS-LDP-STD-MIB", "mplsLdpEntityIndex"), (0, "MPLS-LDP-STD-MIB", "mplsLdpPeerLdpId"), (0, "MPLS-LDP-STD-MIB", "mplsLdpLspFecSegment"), (0, "MPLS-LDP-STD-MIB", "mplsLdpLspFecSegmentIndex"), (0, "MPLS-LDP-STD-MIB", "mplsLdpLspFecIndex"))
if mibBuilder.loadTexts: mplsLdpLspFecEntry.setStatus('current')
mplsLdpLspFecSegment = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inSegment", 1), ("outSegment", 2))))
if mibBuilder.loadTexts: mplsLdpLspFecSegment.setStatus('current')
mplsLdpLspFecSegmentIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 10, 1, 2), MplsIndexType())
if mibBuilder.loadTexts: mplsLdpLspFecSegmentIndex.setStatus('current')
mplsLdpLspFecIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 10, 1, 3), IndexInteger())
if mibBuilder.loadTexts: mplsLdpLspFecIndex.setStatus('current')
mplsLdpLspFecStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 10, 1, 4), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpLspFecStorageType.setStatus('current')
mplsLdpLspFecRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 10, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpLspFecRowStatus.setStatus('current')
mplsLdpSessionPeerAddrTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 11), )
if mibBuilder.loadTexts: mplsLdpSessionPeerAddrTable.setStatus('current')
mplsLdpSessionPeerAddrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 11, 1), ).setIndexNames((0, "MPLS-LDP-STD-MIB", "mplsLdpEntityLdpId"), (0, "MPLS-LDP-STD-MIB", "mplsLdpEntityIndex"), (0, "MPLS-LDP-STD-MIB", "mplsLdpPeerLdpId"), (0, "MPLS-LDP-STD-MIB", "mplsLdpSessionPeerAddrIndex"))
if mibBuilder.loadTexts: mplsLdpSessionPeerAddrEntry.setStatus('current')
mplsLdpSessionPeerAddrIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: mplsLdpSessionPeerAddrIndex.setStatus('current')
mplsLdpSessionPeerNextHopAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 11, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionPeerNextHopAddrType.setStatus('current')
mplsLdpSessionPeerNextHopAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 4, 1, 3, 11, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionPeerNextHopAddr.setStatus('current')
mplsLdpInitSessionThresholdExceeded = NotificationType((1, 3, 6, 1, 2, 1, 10, 166, 4, 0, 1)).setObjects(("MPLS-LDP-STD-MIB", "mplsLdpEntityInitSessionThreshold"))
if mibBuilder.loadTexts: mplsLdpInitSessionThresholdExceeded.setStatus('current')
mplsLdpPathVectorLimitMismatch = NotificationType((1, 3, 6, 1, 2, 1, 10, 166, 4, 0, 2)).setObjects(("MPLS-LDP-STD-MIB", "mplsLdpEntityPathVectorLimit"), ("MPLS-LDP-STD-MIB", "mplsLdpPeerPathVectorLimit"))
if mibBuilder.loadTexts: mplsLdpPathVectorLimitMismatch.setStatus('current')
mplsLdpSessionUp = NotificationType((1, 3, 6, 1, 2, 1, 10, 166, 4, 0, 3)).setObjects(("MPLS-LDP-STD-MIB", "mplsLdpSessionState"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionDiscontinuityTime"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionStatsUnknownMesTypeErrors"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionStatsUnknownTlvErrors"))
if mibBuilder.loadTexts: mplsLdpSessionUp.setStatus('current')
mplsLdpSessionDown = NotificationType((1, 3, 6, 1, 2, 1, 10, 166, 4, 0, 4)).setObjects(("MPLS-LDP-STD-MIB", "mplsLdpSessionState"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionDiscontinuityTime"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionStatsUnknownMesTypeErrors"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionStatsUnknownTlvErrors"))
if mibBuilder.loadTexts: mplsLdpSessionDown.setStatus('current')
mplsLdpGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 4, 2, 1))
mplsLdpCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 4, 2, 2))
mplsLdpModuleFullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 166, 4, 2, 2, 1)).setObjects(("MPLS-LDP-STD-MIB", "mplsLdpGeneralGroup"), ("MPLS-LDP-STD-MIB", "mplsLdpNotificationsGroup"), ("MPLS-LDP-STD-MIB", "mplsLdpLspGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpModuleFullCompliance = mplsLdpModuleFullCompliance.setStatus('current')
mplsLdpModuleReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 166, 4, 2, 2, 2)).setObjects(("MPLS-LDP-STD-MIB", "mplsLdpGeneralGroup"), ("MPLS-LDP-STD-MIB", "mplsLdpNotificationsGroup"), ("MPLS-LDP-STD-MIB", "mplsLdpLspGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpModuleReadOnlyCompliance = mplsLdpModuleReadOnlyCompliance.setStatus('current')
mplsLdpGeneralGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 4, 2, 1, 1)).setObjects(("MPLS-LDP-STD-MIB", "mplsLdpLsrId"), ("MPLS-LDP-STD-MIB", "mplsLdpLsrLoopDetectionCapable"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityLastChange"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityIndexNext"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityProtocolVersion"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityAdminStatus"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityOperStatus"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityTcpPort"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityUdpDscPort"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityMaxPduLength"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityKeepAliveHoldTimer"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityHelloHoldTimer"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityInitSessionThreshold"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityLabelDistMethod"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityLabelRetentionMode"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityPathVectorLimit"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityHopCountLimit"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityTransportAddrKind"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityTargetPeer"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityTargetPeerAddrType"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityTargetPeerAddr"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityLabelType"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityDiscontinuityTime"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityStorageType"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityRowStatus"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityStatsSessionAttempts"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityStatsSessionRejectedNoHelloErrors"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityStatsSessionRejectedAdErrors"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityStatsSessionRejectedMaxPduErrors"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityStatsSessionRejectedLRErrors"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityStatsBadLdpIdentifierErrors"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityStatsBadPduLengthErrors"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityStatsBadMessageLengthErrors"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityStatsBadTlvLengthErrors"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityStatsMalformedTlvValueErrors"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityStatsKeepAliveTimerExpErrors"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityStatsShutdownReceivedNotifications"), ("MPLS-LDP-STD-MIB", "mplsLdpEntityStatsShutdownSentNotifications"), ("MPLS-LDP-STD-MIB", "mplsLdpPeerLastChange"), ("MPLS-LDP-STD-MIB", "mplsLdpPeerLabelDistMethod"), ("MPLS-LDP-STD-MIB", "mplsLdpPeerPathVectorLimit"), ("MPLS-LDP-STD-MIB", "mplsLdpPeerTransportAddrType"), ("MPLS-LDP-STD-MIB", "mplsLdpPeerTransportAddr"), ("MPLS-LDP-STD-MIB", "mplsLdpHelloAdjacencyHoldTimeRem"), ("MPLS-LDP-STD-MIB", "mplsLdpHelloAdjacencyHoldTime"), ("MPLS-LDP-STD-MIB", "mplsLdpHelloAdjacencyType"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionStateLastChange"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionState"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionRole"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionProtocolVersion"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionKeepAliveHoldTimeRem"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionKeepAliveTime"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionMaxPduLength"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionDiscontinuityTime"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionStatsUnknownMesTypeErrors"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionStatsUnknownTlvErrors"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionPeerNextHopAddrType"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionPeerNextHopAddr"), ("MPLS-LDP-STD-MIB", "mplsFecLastChange"), ("MPLS-LDP-STD-MIB", "mplsFecIndexNext"), ("MPLS-LDP-STD-MIB", "mplsFecType"), ("MPLS-LDP-STD-MIB", "mplsFecAddrType"), ("MPLS-LDP-STD-MIB", "mplsFecAddr"), ("MPLS-LDP-STD-MIB", "mplsFecAddrPrefixLength"), ("MPLS-LDP-STD-MIB", "mplsFecStorageType"), ("MPLS-LDP-STD-MIB", "mplsFecRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpGeneralGroup = mplsLdpGeneralGroup.setStatus('current')
mplsLdpLspGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 4, 2, 1, 2)).setObjects(("MPLS-LDP-STD-MIB", "mplsInSegmentLdpLspLabelType"), ("MPLS-LDP-STD-MIB", "mplsInSegmentLdpLspType"), ("MPLS-LDP-STD-MIB", "mplsOutSegmentLdpLspLabelType"), ("MPLS-LDP-STD-MIB", "mplsOutSegmentLdpLspType"), ("MPLS-LDP-STD-MIB", "mplsLdpLspFecLastChange"), ("MPLS-LDP-STD-MIB", "mplsLdpLspFecStorageType"), ("MPLS-LDP-STD-MIB", "mplsLdpLspFecRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpLspGroup = mplsLdpLspGroup.setStatus('current')
mplsLdpNotificationsGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 10, 166, 4, 2, 1, 3)).setObjects(("MPLS-LDP-STD-MIB", "mplsLdpInitSessionThresholdExceeded"), ("MPLS-LDP-STD-MIB", "mplsLdpPathVectorLimitMismatch"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionUp"), ("MPLS-LDP-STD-MIB", "mplsLdpSessionDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpNotificationsGroup = mplsLdpNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("MPLS-LDP-STD-MIB", mplsLdpEntityEntry=mplsLdpEntityEntry, mplsLdpSessionPeerNextHopAddrType=mplsLdpSessionPeerNextHopAddrType, mplsInSegmentLdpLspIndex=mplsInSegmentLdpLspIndex, mplsLdpStdMIB=mplsLdpStdMIB, mplsLdpEntityTargetPeer=mplsLdpEntityTargetPeer, mplsLdpEntityOperStatus=mplsLdpEntityOperStatus, mplsLdpEntityIndex=mplsLdpEntityIndex, mplsLdpSessionTable=mplsLdpSessionTable, mplsOutSegmentLdpLspIndex=mplsOutSegmentLdpLspIndex, mplsFecAddr=mplsFecAddr, mplsLdpSessionProtocolVersion=mplsLdpSessionProtocolVersion, mplsLdpPeerLdpId=mplsLdpPeerLdpId, mplsLdpEntityTargetPeerAddrType=mplsLdpEntityTargetPeerAddrType, mplsLdpEntityMaxPduLength=mplsLdpEntityMaxPduLength, mplsFecAddrPrefixLength=mplsFecAddrPrefixLength, mplsLdpSessionState=mplsLdpSessionState, mplsLdpSessionStatsUnknownTlvErrors=mplsLdpSessionStatsUnknownTlvErrors, mplsLdpHelloAdjacencyIndex=mplsLdpHelloAdjacencyIndex, mplsLdpLspFecSegmentIndex=mplsLdpLspFecSegmentIndex, mplsLdpEntityHopCountLimit=mplsLdpEntityHopCountLimit, mplsLdpEntityObjects=mplsLdpEntityObjects, mplsLdpHelloAdjacencyTable=mplsLdpHelloAdjacencyTable, PYSNMP_MODULE_ID=mplsLdpStdMIB, mplsLdpHelloAdjacencyHoldTime=mplsLdpHelloAdjacencyHoldTime, mplsOutSegmentLdpLspLabelType=mplsOutSegmentLdpLspLabelType, mplsFecType=mplsFecType, mplsLdpEntityUdpDscPort=mplsLdpEntityUdpDscPort, mplsLdpGeneralGroup=mplsLdpGeneralGroup, mplsLdpEntityStatsBadTlvLengthErrors=mplsLdpEntityStatsBadTlvLengthErrors, mplsLdpSessionDown=mplsLdpSessionDown, mplsLdpLspFecEntry=mplsLdpLspFecEntry, mplsLdpHelloAdjacencyHoldTimeRem=mplsLdpHelloAdjacencyHoldTimeRem, mplsLdpEntityDiscontinuityTime=mplsLdpEntityDiscontinuityTime, mplsLdpLspFecRowStatus=mplsLdpLspFecRowStatus, mplsLdpEntityKeepAliveHoldTimer=mplsLdpEntityKeepAliveHoldTimer, mplsLdpEntityStatsSessionAttempts=mplsLdpEntityStatsSessionAttempts, mplsLdpNotificationsGroup=mplsLdpNotificationsGroup, mplsLdpSessionStatsTable=mplsLdpSessionStatsTable, mplsLdpEntityTable=mplsLdpEntityTable, mplsOutSegmentLdpLspType=mplsOutSegmentLdpLspType, mplsLdpEntityStatsSessionRejectedLRErrors=mplsLdpEntityStatsSessionRejectedLRErrors, mplsLdpLspFecLastChange=mplsLdpLspFecLastChange, mplsLdpSessionPeerAddrIndex=mplsLdpSessionPeerAddrIndex, mplsLdpPeerTransportAddrType=mplsLdpPeerTransportAddrType, mplsLdpEntityAdminStatus=mplsLdpEntityAdminStatus, mplsLdpHelloAdjacencyObjects=mplsLdpHelloAdjacencyObjects, mplsLdpNotifications=mplsLdpNotifications, mplsLdpEntityLabelType=mplsLdpEntityLabelType, mplsLdpEntityTcpPort=mplsLdpEntityTcpPort, mplsLdpLspFecStorageType=mplsLdpLspFecStorageType, mplsLdpEntityStorageType=mplsLdpEntityStorageType, mplsLdpLspFecSegment=mplsLdpLspFecSegment, mplsLdpPeerTable=mplsLdpPeerTable, mplsLdpPeerLastChange=mplsLdpPeerLastChange, mplsLdpInitSessionThresholdExceeded=mplsLdpInitSessionThresholdExceeded, mplsLdpEntityStatsMalformedTlvValueErrors=mplsLdpEntityStatsMalformedTlvValueErrors, mplsLdpHelloAdjacencyType=mplsLdpHelloAdjacencyType, mplsLdpSessionPeerAddrTable=mplsLdpSessionPeerAddrTable, mplsFecAddrType=mplsFecAddrType, mplsLdpPathVectorLimitMismatch=mplsLdpPathVectorLimitMismatch, mplsInSegmentLdpLspType=mplsInSegmentLdpLspType, mplsOutSegmentLdpLspEntry=mplsOutSegmentLdpLspEntry, mplsLdpCompliances=mplsLdpCompliances, mplsLdpLspFecTable=mplsLdpLspFecTable, mplsLdpSessionUp=mplsLdpSessionUp, mplsLdpSessionStatsEntry=mplsLdpSessionStatsEntry, mplsLdpEntityHelloHoldTimer=mplsLdpEntityHelloHoldTimer, mplsLdpEntityInitSessionThreshold=mplsLdpEntityInitSessionThreshold, mplsLdpEntityLabelDistMethod=mplsLdpEntityLabelDistMethod, mplsLdpEntityLdpId=mplsLdpEntityLdpId, mplsLdpEntityStatsBadPduLengthErrors=mplsLdpEntityStatsBadPduLengthErrors, mplsLdpLsrId=mplsLdpLsrId, mplsLdpSessionDiscontinuityTime=mplsLdpSessionDiscontinuityTime, mplsInSegmentLdpLspTable=mplsInSegmentLdpLspTable, mplsLdpEntityIndexNext=mplsLdpEntityIndexNext, mplsLdpSessionKeepAliveTime=mplsLdpSessionKeepAliveTime, mplsLdpPeerEntry=mplsLdpPeerEntry, mplsLdpEntityPathVectorLimit=mplsLdpEntityPathVectorLimit, mplsFecEntry=mplsFecEntry, mplsLdpLsrObjects=mplsLdpLsrObjects, mplsLdpGroups=mplsLdpGroups, mplsFecIndex=mplsFecIndex, mplsLdpConformance=mplsLdpConformance, mplsLdpSessionObjects=mplsLdpSessionObjects, mplsLdpSessionRole=mplsLdpSessionRole, mplsLdpEntityProtocolVersion=mplsLdpEntityProtocolVersion, mplsLdpEntityRowStatus=mplsLdpEntityRowStatus, mplsOutSegmentLdpLspTable=mplsOutSegmentLdpLspTable, mplsLdpSessionStatsUnknownMesTypeErrors=mplsLdpSessionStatsUnknownMesTypeErrors, mplsFecStorageType=mplsFecStorageType, mplsFecIndexNext=mplsFecIndexNext, mplsFecObjects=mplsFecObjects, mplsLdpEntityLabelRetentionMode=mplsLdpEntityLabelRetentionMode, mplsLdpModuleFullCompliance=mplsLdpModuleFullCompliance, mplsInSegmentLdpLspEntry=mplsInSegmentLdpLspEntry, mplsLdpLsrLoopDetectionCapable=mplsLdpLsrLoopDetectionCapable, mplsLdpEntityStatsSessionRejectedAdErrors=mplsLdpEntityStatsSessionRejectedAdErrors, mplsLdpObjects=mplsLdpObjects, mplsLdpHelloAdjacencyEntry=mplsLdpHelloAdjacencyEntry, mplsLdpSessionEntry=mplsLdpSessionEntry, mplsLdpEntityStatsEntry=mplsLdpEntityStatsEntry, mplsFecRowStatus=mplsFecRowStatus, mplsLdpPeerPathVectorLimit=mplsLdpPeerPathVectorLimit, mplsFecTable=mplsFecTable, mplsLdpEntityStatsShutdownReceivedNotifications=mplsLdpEntityStatsShutdownReceivedNotifications, mplsLdpSessionPeerAddrEntry=mplsLdpSessionPeerAddrEntry, mplsLdpEntityStatsBadMessageLengthErrors=mplsLdpEntityStatsBadMessageLengthErrors, mplsLdpEntityTargetPeerAddr=mplsLdpEntityTargetPeerAddr, mplsLdpSessionKeepAliveHoldTimeRem=mplsLdpSessionKeepAliveHoldTimeRem, mplsLdpPeerTransportAddr=mplsLdpPeerTransportAddr, mplsLdpModuleReadOnlyCompliance=mplsLdpModuleReadOnlyCompliance, mplsLdpEntityStatsSessionRejectedNoHelloErrors=mplsLdpEntityStatsSessionRejectedNoHelloErrors, mplsLdpPeerLabelDistMethod=mplsLdpPeerLabelDistMethod, mplsInSegmentLdpLspLabelType=mplsInSegmentLdpLspLabelType, mplsLdpSessionMaxPduLength=mplsLdpSessionMaxPduLength, mplsLdpEntityStatsTable=mplsLdpEntityStatsTable, mplsLdpLspGroup=mplsLdpLspGroup, mplsLdpEntityLastChange=mplsLdpEntityLastChange, mplsLdpEntityStatsKeepAliveTimerExpErrors=mplsLdpEntityStatsKeepAliveTimerExpErrors, mplsLdpLspFecIndex=mplsLdpLspFecIndex, mplsLdpEntityStatsShutdownSentNotifications=mplsLdpEntityStatsShutdownSentNotifications, mplsLdpEntityStatsBadLdpIdentifierErrors=mplsLdpEntityStatsBadLdpIdentifierErrors, mplsLdpSessionPeerNextHopAddr=mplsLdpSessionPeerNextHopAddr, mplsFecLastChange=mplsFecLastChange, mplsLdpEntityTransportAddrKind=mplsLdpEntityTransportAddrKind, mplsLdpSessionStateLastChange=mplsLdpSessionStateLastChange, mplsLdpEntityStatsSessionRejectedMaxPduErrors=mplsLdpEntityStatsSessionRejectedMaxPduErrors)
