#
# PySNMP MIB module PRVT-SYS-MON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-SYS-MON-MIB
# Produced by pysmi-1.1.3 at Wed Dec  8 21:25:18 2021
# On host fv-az74-115 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
software, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "software")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, ModuleIdentity, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, iso, Counter64, NotificationType, ObjectIdentity, Bits, IpAddress, Gauge32, Unsigned32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "ModuleIdentity", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "iso", "Counter64", "NotificationType", "ObjectIdentity", "Bits", "IpAddress", "Gauge32", "Unsigned32", "TimeTicks")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
prvtSysMonMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 111, 3))
prvtSysMonMIB.setRevisions(('2013-12-12 00:00', '2009-09-04 00:00',))
if mibBuilder.loadTexts: prvtSysMonMIB.setLastUpdated('201312120000Z')
if mibBuilder.loadTexts: prvtSysMonMIB.setOrganization('BATM Advanced Communication')
prvtSysMonNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 0))
prvtSysMonObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1))
prvtSysMonCurrentCpuUsage = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSysMonCurrentCpuUsage.setStatus('current')
prvtSysMonCurrentCpuTemperature = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSysMonCurrentCpuTemperature.setStatus('current')
prvtSysMonCurrentRamUsage = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSysMonCurrentRamUsage.setStatus('current')
prvtSysMonSelfTestExecuteNow = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonSelfTestExecuteNow.setStatus('current')
prvtSysMonCpuUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 5))
prvtSysMonCpuUsageShutdown = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 5, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonCpuUsageShutdown.setStatus('current')
prvtSysMonCpuUsageLog = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 5, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonCpuUsageLog.setStatus('current')
prvtSysMonCpuUsageLed = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 5, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonCpuUsageLed.setStatus('current')
prvtSysMonCpuUsageTrap = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 5, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonCpuUsageTrap.setStatus('current')
prvtSysMonCpuUsagePeriod = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 5, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonCpuUsagePeriod.setStatus('current')
prvtSysMonCpuUsageLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 5, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonCpuUsageLowThreshold.setStatus('current')
prvtSysMonCpuUsageHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 5, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonCpuUsageHighThreshold.setStatus('current')
prvtSysMonCpuUsageLastStatus = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 5, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSysMonCpuUsageLastStatus.setStatus('current')
prvtSysMonCPUTemperature = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 6))
prvtSysMonCpuTemperatureShutdown = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 6, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonCpuTemperatureShutdown.setStatus('current')
prvtSysMonCpuTemperatureLog = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 6, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonCpuTemperatureLog.setStatus('current')
prvtSysMonCpuTemperatureLed = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 6, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonCpuTemperatureLed.setStatus('current')
prvtSysMonCpuTemperatureTrap = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 6, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonCpuTemperatureTrap.setStatus('current')
prvtSysMonCpuTemperaturePeriod = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 6, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonCpuTemperaturePeriod.setStatus('current')
prvtSysMonCpuTemperatureLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 6, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonCpuTemperatureLowThreshold.setStatus('current')
prvtSysMonCpuTemperatureHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 6, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonCpuTemperatureHighThreshold.setStatus('current')
prvtSysMonCpuTemperatureLastStatus = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 6, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSysMonCpuTemperatureLastStatus.setStatus('current')
prvtSysMonRAMUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 7))
prvtSysMonRamUsageShutdown = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 7, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonRamUsageShutdown.setStatus('current')
prvtSysMonRamUsageLog = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 7, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonRamUsageLog.setStatus('current')
prvtSysMonRamUsageLed = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 7, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonRamUsageLed.setStatus('current')
prvtSysMonRamUsageTrap = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 7, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonRamUsageTrap.setStatus('current')
prvtSysMonRamUsagePeriod = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 7, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonRamUsagePeriod.setStatus('current')
prvtSysMonRamUsageLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 7, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonRamUsageLowThreshold.setStatus('current')
prvtSysMonRamUsageHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 7, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonRamUsageHighThreshold.setStatus('current')
prvtSysMonRamUsageLastStatus = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 7, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSysMonRamUsageLastStatus.setStatus('current')
prvtSysMonPortStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 8))
prvtSysMonPortStatisticsShutdown = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 8, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonPortStatisticsShutdown.setStatus('current')
prvtSysMonPortStatisticsLog = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 8, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonPortStatisticsLog.setStatus('current')
prvtSysMonPortStatisticsLed = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 8, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonPortStatisticsLed.setStatus('current')
prvtSysMonPortStatisticsTrap = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 8, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonPortStatisticsTrap.setStatus('current')
prvtSysMonPortStatisticsPeriod = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 8, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonPortStatisticsPeriod.setStatus('current')
prvtSysMonPortStatisticsLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 8, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonPortStatisticsLowThreshold.setStatus('current')
prvtSysMonPortStatisticsHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 8, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonPortStatisticsHighThreshold.setStatus('current')
prvtSysMonPortStatisticsLastStatus = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 8, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSysMonPortStatisticsLastStatus.setStatus('current')
prvtSysMonPortStatisticsLastFailedPorts = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 8, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSysMonPortStatisticsLastFailedPorts.setStatus('current')
prvtSysMonFan = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 9))
prvtSysMonFanShutdown = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 9, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonFanShutdown.setStatus('current')
prvtSysMonFanLog = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 9, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonFanLog.setStatus('current')
prvtSysMonFanLed = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 9, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonFanLed.setStatus('current')
prvtSysMonFanTrap = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 9, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonFanTrap.setStatus('current')
prvtSysMonFanPeriod = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 9, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonFanPeriod.setStatus('current')
prvtSysMonFanLastStatus = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 9, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSysMonFanLastStatus.setStatus('current')
prvtSysMonOnboardPower = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 10))
prvtSysMonOnboardPowerShutdown = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 10, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonOnboardPowerShutdown.setStatus('current')
prvtSysMonOnboardPowerLog = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 10, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonOnboardPowerLog.setStatus('current')
prvtSysMonOnboardPowerLed = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 10, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonOnboardPowerLed.setStatus('current')
prvtSysMonOnboardPowerTrap = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 10, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonOnboardPowerTrap.setStatus('current')
prvtSysMonOnboardPowerPeriod = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 10, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonOnboardPowerPeriod.setStatus('current')
prvtSysMonOnboardPowerLastStatus = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 10, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSysMonOnboardPowerLastStatus.setStatus('current')
prvtSysMonPowerSupply = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 11))
prvtSysMonPowerSupplyShutdown = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 11, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonPowerSupplyShutdown.setStatus('current')
prvtSysMonPowerSupplyLog = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 11, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonPowerSupplyLog.setStatus('current')
prvtSysMonPowerSupplyLed = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 11, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonPowerSupplyLed.setStatus('current')
prvtSysMonPowerSupplyTrap = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 11, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonPowerSupplyTrap.setStatus('current')
prvtSysMonPowerSupplyPeriod = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 11, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonPowerSupplyPeriod.setStatus('current')
prvtSysMonPowerSupplyLastStatus = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 11, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSysMonPowerSupplyLastStatus.setStatus('current')
prvtSysMonPowerSupplyFan = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 12))
prvtSysMonPowerSupplyFanShutdown = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 12, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonPowerSupplyFanShutdown.setStatus('current')
prvtSysMonPowerSupplyFanLog = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 12, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonPowerSupplyFanLog.setStatus('current')
prvtSysMonPowerSupplyFanLed = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 12, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonPowerSupplyFanLed.setStatus('current')
prvtSysMonPowerSupplyFanTrap = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 12, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonPowerSupplyFanTrap.setStatus('current')
prvtSysMonPowerSupplyFanPeriod = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 12, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonPowerSupplyFanPeriod.setStatus('current')
prvtSysMonPowerSupplyFanLastStatus = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 12, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSysMonPowerSupplyFanLastStatus.setStatus('current')
prvtSysMonDoorOpen = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 13))
prvtSysMonDoorOpenShutdown = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 13, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonDoorOpenShutdown.setStatus('current')
prvtSysMonDoorOpenLog = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 13, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonDoorOpenLog.setStatus('current')
prvtSysMonDoorOpenLed = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 13, 3), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonDoorOpenLed.setStatus('current')
prvtSysMonDoorOpenTrap = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 13, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonDoorOpenTrap.setStatus('current')
prvtSysMonDoorOpenPeriod = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 13, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtSysMonDoorOpenPeriod.setStatus('current')
prvtSysMonDoorOpenLastStatus = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 1, 13, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSysMonDoorOpenLastStatus.setStatus('current')
prvtSysMonCpuUtilization = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 0, 1)).setObjects(("PRVT-SYS-MON-MIB", "prvtSysMonCurrentCpuUsage"), ("PRVT-SYS-MON-MIB", "prvtSysMonCpuUsageLowThreshold"), ("PRVT-SYS-MON-MIB", "prvtSysMonCpuUsageHighThreshold"))
if mibBuilder.loadTexts: prvtSysMonCpuUtilization.setStatus('current')
prvtSysMonRamUsage = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 0, 2)).setObjects(("PRVT-SYS-MON-MIB", "prvtSysMonCurrentRamUsage"), ("PRVT-SYS-MON-MIB", "prvtSysMonRamUsageLowThreshold"), ("PRVT-SYS-MON-MIB", "prvtSysMonRamUsageHighThreshold"))
if mibBuilder.loadTexts: prvtSysMonRamUsage.setStatus('current')
prvtSysMonPowerSupplyTest = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 0, 3)).setObjects(("PRVT-SYS-MON-MIB", "prvtSysMonPowerSupplyLastStatus"))
if mibBuilder.loadTexts: prvtSysMonPowerSupplyTest.setStatus('current')
prvtSysMonFansTest = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 0, 4)).setObjects(("PRVT-SYS-MON-MIB", "prvtSysMonFanLastStatus"))
if mibBuilder.loadTexts: prvtSysMonFansTest.setStatus('current')
prvtSysMonCpuTemperature = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 0, 5)).setObjects(("PRVT-SYS-MON-MIB", "prvtSysMonCurrentCpuTemperature"), ("PRVT-SYS-MON-MIB", "prvtSysMonCpuTemperatureLowThreshold"), ("PRVT-SYS-MON-MIB", "prvtSysMonCpuTemperatureHighThreshold"))
if mibBuilder.loadTexts: prvtSysMonCpuTemperature.setStatus('current')
prvtSysMonPortStatisticsTest = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 0, 6)).setObjects(("PRVT-SYS-MON-MIB", "prvtSysMonPortStatisticsLastFailedPorts"))
if mibBuilder.loadTexts: prvtSysMonPortStatisticsTest.setStatus('current')
prvtSysMonPowerSupplyFansTest = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 0, 7)).setObjects(("PRVT-SYS-MON-MIB", "prvtSysMonPowerSupplyFanLastStatus"))
if mibBuilder.loadTexts: prvtSysMonPowerSupplyFansTest.setStatus('current')
prvtSysMonOnBoardPowerSupplyTest = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 0, 8)).setObjects(("PRVT-SYS-MON-MIB", "prvtSysMonOnboardPowerLastStatus"))
if mibBuilder.loadTexts: prvtSysMonOnBoardPowerSupplyTest.setStatus('current')
prvtSysMonDoorOpenTest = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 111, 3, 0, 9)).setObjects(("PRVT-SYS-MON-MIB", "prvtSysMonDoorOpenLastStatus"))
if mibBuilder.loadTexts: prvtSysMonDoorOpenTest.setStatus('current')
mibBuilder.exportSymbols("PRVT-SYS-MON-MIB", prvtSysMonDoorOpenPeriod=prvtSysMonDoorOpenPeriod, prvtSysMonMIB=prvtSysMonMIB, prvtSysMonDoorOpen=prvtSysMonDoorOpen, prvtSysMonFansTest=prvtSysMonFansTest, prvtSysMonDoorOpenLed=prvtSysMonDoorOpenLed, prvtSysMonCurrentCpuUsage=prvtSysMonCurrentCpuUsage, prvtSysMonRamUsageLastStatus=prvtSysMonRamUsageLastStatus, prvtSysMonRAMUsage=prvtSysMonRAMUsage, prvtSysMonPortStatisticsLed=prvtSysMonPortStatisticsLed, prvtSysMonOnBoardPowerSupplyTest=prvtSysMonOnBoardPowerSupplyTest, prvtSysMonCpuUsageLastStatus=prvtSysMonCpuUsageLastStatus, prvtSysMonOnboardPowerShutdown=prvtSysMonOnboardPowerShutdown, prvtSysMonDoorOpenLog=prvtSysMonDoorOpenLog, prvtSysMonCpuUsageHighThreshold=prvtSysMonCpuUsageHighThreshold, prvtSysMonCPUTemperature=prvtSysMonCPUTemperature, prvtSysMonPowerSupplyFanShutdown=prvtSysMonPowerSupplyFanShutdown, prvtSysMonFanShutdown=prvtSysMonFanShutdown, prvtSysMonPortStatisticsLastFailedPorts=prvtSysMonPortStatisticsLastFailedPorts, prvtSysMonPortStatisticsShutdown=prvtSysMonPortStatisticsShutdown, prvtSysMonRamUsageLog=prvtSysMonRamUsageLog, prvtSysMonCpuTemperatureLog=prvtSysMonCpuTemperatureLog, prvtSysMonCpuUtilization=prvtSysMonCpuUtilization, prvtSysMonPowerSupplyLed=prvtSysMonPowerSupplyLed, prvtSysMonCpuUsage=prvtSysMonCpuUsage, prvtSysMonCpuTemperatureHighThreshold=prvtSysMonCpuTemperatureHighThreshold, prvtSysMonPortStatisticsLowThreshold=prvtSysMonPortStatisticsLowThreshold, prvtSysMonPowerSupply=prvtSysMonPowerSupply, prvtSysMonFan=prvtSysMonFan, prvtSysMonPowerSupplyShutdown=prvtSysMonPowerSupplyShutdown, prvtSysMonDoorOpenLastStatus=prvtSysMonDoorOpenLastStatus, prvtSysMonCurrentRamUsage=prvtSysMonCurrentRamUsage, prvtSysMonPortStatisticsLog=prvtSysMonPortStatisticsLog, prvtSysMonNotifications=prvtSysMonNotifications, prvtSysMonOnboardPower=prvtSysMonOnboardPower, prvtSysMonCpuTemperatureLowThreshold=prvtSysMonCpuTemperatureLowThreshold, PYSNMP_MODULE_ID=prvtSysMonMIB, prvtSysMonDoorOpenTrap=prvtSysMonDoorOpenTrap, prvtSysMonRamUsageShutdown=prvtSysMonRamUsageShutdown, prvtSysMonRamUsageLed=prvtSysMonRamUsageLed, prvtSysMonOnboardPowerTrap=prvtSysMonOnboardPowerTrap, prvtSysMonPowerSupplyTest=prvtSysMonPowerSupplyTest, prvtSysMonPortStatisticsLastStatus=prvtSysMonPortStatisticsLastStatus, prvtSysMonCpuUsagePeriod=prvtSysMonCpuUsagePeriod, prvtSysMonPortStatistics=prvtSysMonPortStatistics, prvtSysMonFanLed=prvtSysMonFanLed, prvtSysMonPowerSupplyPeriod=prvtSysMonPowerSupplyPeriod, prvtSysMonPowerSupplyLastStatus=prvtSysMonPowerSupplyLastStatus, prvtSysMonPowerSupplyLog=prvtSysMonPowerSupplyLog, prvtSysMonOnboardPowerLed=prvtSysMonOnboardPowerLed, prvtSysMonOnboardPowerLastStatus=prvtSysMonOnboardPowerLastStatus, prvtSysMonCpuUsageLog=prvtSysMonCpuUsageLog, prvtSysMonPowerSupplyFanTrap=prvtSysMonPowerSupplyFanTrap, prvtSysMonPowerSupplyFansTest=prvtSysMonPowerSupplyFansTest, prvtSysMonPowerSupplyTrap=prvtSysMonPowerSupplyTrap, prvtSysMonCpuTemperatureLastStatus=prvtSysMonCpuTemperatureLastStatus, prvtSysMonCpuUsageShutdown=prvtSysMonCpuUsageShutdown, prvtSysMonPortStatisticsHighThreshold=prvtSysMonPortStatisticsHighThreshold, prvtSysMonFanLastStatus=prvtSysMonFanLastStatus, prvtSysMonSelfTestExecuteNow=prvtSysMonSelfTestExecuteNow, prvtSysMonFanPeriod=prvtSysMonFanPeriod, prvtSysMonRamUsageTrap=prvtSysMonRamUsageTrap, prvtSysMonOnboardPowerLog=prvtSysMonOnboardPowerLog, prvtSysMonPortStatisticsPeriod=prvtSysMonPortStatisticsPeriod, prvtSysMonCpuUsageLowThreshold=prvtSysMonCpuUsageLowThreshold, prvtSysMonDoorOpenShutdown=prvtSysMonDoorOpenShutdown, prvtSysMonPowerSupplyFanLastStatus=prvtSysMonPowerSupplyFanLastStatus, prvtSysMonDoorOpenTest=prvtSysMonDoorOpenTest, prvtSysMonRamUsage=prvtSysMonRamUsage, prvtSysMonPortStatisticsTrap=prvtSysMonPortStatisticsTrap, prvtSysMonPowerSupplyFan=prvtSysMonPowerSupplyFan, prvtSysMonFanLog=prvtSysMonFanLog, prvtSysMonCpuTemperatureTrap=prvtSysMonCpuTemperatureTrap, prvtSysMonRamUsageLowThreshold=prvtSysMonRamUsageLowThreshold, prvtSysMonCpuUsageTrap=prvtSysMonCpuUsageTrap, prvtSysMonRamUsagePeriod=prvtSysMonRamUsagePeriod, prvtSysMonOnboardPowerPeriod=prvtSysMonOnboardPowerPeriod, prvtSysMonCpuTemperaturePeriod=prvtSysMonCpuTemperaturePeriod, prvtSysMonCpuTemperature=prvtSysMonCpuTemperature, prvtSysMonCpuTemperatureShutdown=prvtSysMonCpuTemperatureShutdown, prvtSysMonCpuTemperatureLed=prvtSysMonCpuTemperatureLed, prvtSysMonFanTrap=prvtSysMonFanTrap, prvtSysMonCpuUsageLed=prvtSysMonCpuUsageLed, prvtSysMonPowerSupplyFanLed=prvtSysMonPowerSupplyFanLed, prvtSysMonPowerSupplyFanLog=prvtSysMonPowerSupplyFanLog, prvtSysMonObjects=prvtSysMonObjects, prvtSysMonCurrentCpuTemperature=prvtSysMonCurrentCpuTemperature, prvtSysMonRamUsageHighThreshold=prvtSysMonRamUsageHighThreshold, prvtSysMonPortStatisticsTest=prvtSysMonPortStatisticsTest, prvtSysMonPowerSupplyFanPeriod=prvtSysMonPowerSupplyFanPeriod)
