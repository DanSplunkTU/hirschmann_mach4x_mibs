#
# PySNMP MIB module PRVT-SWITCH-EFM-OAM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binos/PRVT-SWITCH-EFM-OAM-MIB
# Produced by pysmi-1.1.3 at Wed Dec  1 17:44:25 2021
# On host fv-az135-680 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
dot3OamMode, dot3OamAdminState, dot3OamLoopbackStatus = mibBuilder.importSymbols("DOT3-OAM-MIB", "dot3OamMode", "dot3OamAdminState", "dot3OamLoopbackStatus")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
switch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "switch")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, NotificationType, Integer32, Bits, MibIdentifier, Counter32, ModuleIdentity, iso, Gauge32, IpAddress, Counter64, TimeTicks, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "NotificationType", "Integer32", "Bits", "MibIdentifier", "Counter32", "ModuleIdentity", "iso", "Gauge32", "IpAddress", "Counter64", "TimeTicks", "Unsigned32")
TextualConvention, TruthValue, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "RowStatus", "DisplayString")
prvtSwitchEfmOamMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 1, 5, 133))
prvtSwitchEfmOamMIB.setRevisions(('2010-02-11 00:00', '2009-12-01 00:00', '2009-06-01 00:00', '2009-04-29 00:00', '2009-03-18 00:00', '2009-03-06 00:00',))
if mibBuilder.loadTexts: prvtSwitchEfmOamMIB.setLastUpdated('201002110000Z')
if mibBuilder.loadTexts: prvtSwitchEfmOamMIB.setOrganization('BATM Advanced Communication')
prvtEfmOamNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 0))
prvtEfmOamObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1))
prvtEfmOamConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 2))
prvtEfmOamEnable = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamEnable.setStatus('current')
prvtEfmOamMultiPduCount = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamMultiPduCount.setStatus('current')
prvtEfmOamRemoteEvent = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamRemoteEvent.setStatus('current')
prvtEfmOamLocalSysLog = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamLocalSysLog.setStatus('current')
prvtEfmOamPriority = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamPriority.setStatus('current')
prvtEfmOamKeepAlive = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 15000)).clone(5000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamKeepAlive.setStatus('current')
prvtEfmOamHelloInterval = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 5000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamHelloInterval.setStatus('current')
prvtEfmOamPktsSent = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPktsSent.setStatus('current')
prvtEfmOamPktsReceived = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPktsReceived.setStatus('current')
prvtEfmOamHistorySize = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 10000)).clone(5000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamHistorySize.setStatus('current')
prvtEfmOamTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 10), )
if mibBuilder.loadTexts: prvtEfmOamTable.setStatus('current')
prvtEfmOamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 10, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtEfmOamEntry.setStatus('current')
prvtEfmOamEnhanceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("basic", 1), ("enhance", 2))).clone('basic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamEnhanceMode.setStatus('current')
prvtEfmOamEventReturn = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 10), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamEventReturn.setStatus('current')
prvtEfmOamForceLoopbackLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 10, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamForceLoopbackLocal.setStatus('current')
prvtEfmOamForceLoopbackRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 10, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamForceLoopbackRemote.setStatus('current')
prvtEfmOamEventForwardStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 10, 1, 5), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamEventForwardStatus.setStatus('current')
prvtEfmOamEventForwardShutdown = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 10, 1, 6), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamEventForwardShutdown.setStatus('current')
prvtEfmOamPing = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11))
prvtEfmOamPingTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 1), )
if mibBuilder.loadTexts: prvtEfmOamPingTable.setStatus('current')
prvtEfmOamPingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtEfmOamPingEntry.setStatus('current')
prvtEfmOamPingEchoNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamPingEchoNumber.setStatus('current')
prvtEfmOamPingDelayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamPingDelayTime.setStatus('current')
prvtEfmOamPingTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamPingTimeOut.setStatus('current')
prvtEfmOamPingCounterBranch = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7))).clone(namedValues=NamedValues(("branch", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamPingCounterBranch.setStatus('current')
prvtEfmOamPingCounterLeaf = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 5, 8, 14, 21, 22))).clone(namedValues=NamedValues(("framesTransmittedOK", 2), ("framesReceivedOK", 5), ("octetsTransmittedOK", 8), ("octetsReceivedOK", 14), ("multicastFramesReceivedOK", 21), ("broadcastFramesReceivedOK", 22)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamPingCounterLeaf.setStatus('current')
prvtEfmOamPingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtEfmOamPingRowStatus.setStatus('current')
prvtEfmOamPingResultTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 2), )
if mibBuilder.loadTexts: prvtEfmOamPingResultTable.setStatus('current')
prvtEfmOamPingResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtEfmOamPingResultEntry.setStatus('current')
prvtEfmOamPingResultStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noPing", 1), ("running", 2), ("terminated", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPingResultStatus.setStatus('current')
prvtEfmOamPingResultSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPingResultSentPackets.setStatus('current')
prvtEfmOamPingResultReceivedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPingResultReceivedPackets.setStatus('current')
prvtEfmOamPingResultRcvRateInteger = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPingResultRcvRateInteger.setStatus('current')
prvtEfmOamPingResultRcvRateFractional = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPingResultRcvRateFractional.setStatus('current')
prvtEfmOamPingResultTimeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPingResultTimeMin.setStatus('current')
prvtEfmOamPingResultTimeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPingResultTimeMax.setStatus('current')
prvtEfmOamPingResultAverageTimeInteger = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPingResultAverageTimeInteger.setStatus('current')
prvtEfmOamPingResultAverageTimeFractional = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPingResultAverageTimeFractional.setStatus('current')
prvtEfmOamPingResultClear = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 11, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamPingResultClear.setStatus('current')
prvtEfmOamLoopback = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 12))
prvtEfmOamLoopbackTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 12, 1), )
if mibBuilder.loadTexts: prvtEfmOamLoopbackTable.setStatus('current')
prvtEfmOamLoopbackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 12, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtEfmOamLoopbackEntry.setStatus('current')
prvtEfmOamLoopbackOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("storm", 1), ("burst", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamLoopbackOperation.setStatus('current')
prvtEfmOamLoopbackDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 12, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamLoopbackDuration.setStatus('current')
prvtEfmOamLoopbackCount = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 12, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483646)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamLoopbackCount.setStatus('current')
prvtEfmOamLoopbackPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 12, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 1512)).clone(64)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamLoopbackPacketSize.setStatus('current')
prvtEfmOamLoopbackDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 12, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamLoopbackDelay.setStatus('current')
prvtEfmOamLoopbackTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 12, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamLoopbackTimeout.setStatus('current')
prvtEfmOamLoopbackNoRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 12, 1, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamLoopbackNoRemote.setStatus('current')
prvtEfmOamLoopbackRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 12, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtEfmOamLoopbackRowStatus.setStatus('current')
prvtEfmOamLoopbackResultTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 12, 2), )
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultTable.setStatus('current')
prvtEfmOamLoopbackResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 12, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultEntry.setStatus('current')
prvtEfmOamLoopbackResultStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("noLoopback", 1), ("startCmdSent", 2), ("startFail", 3), ("dataStarted", 4), ("stopCmdSent", 5), ("terminated", 6), ("remoteFailure", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultStatus.setStatus('current')
prvtEfmOamLoopbackResultFlood = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 12, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultFlood.setStatus('current')
prvtEfmOamLoopbackResultSentPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 12, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultSentPackets.setStatus('current')
prvtEfmOamLoopbackResultReceivedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 12, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultReceivedPackets.setStatus('current')
prvtEfmOamLoopbackResultClear = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 12, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEfmOamLoopbackResultClear.setStatus('current')
prvtEfmOamPeerTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 13), )
if mibBuilder.loadTexts: prvtEfmOamPeerTable.setStatus('current')
prvtEfmOamPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 13, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtEfmOamPeerEntry.setStatus('current')
prvtEfmOamPeerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 13, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPeerPort.setStatus('current')
prvtEfmOamPeerName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 1, 13, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtEfmOamPeerName.setStatus('current')
prvtOamLoopBackState = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 0, 1)).setObjects(("IF-MIB", "ifIndex"), ("DOT3-OAM-MIB", "dot3OamAdminState"), ("DOT3-OAM-MIB", "dot3OamMode"), ("DOT3-OAM-MIB", "dot3OamLoopbackStatus"))
if mibBuilder.loadTexts: prvtOamLoopBackState.setStatus('current')
prvtOamDyingGasp = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 5, 133, 0, 2))
if mibBuilder.loadTexts: prvtOamDyingGasp.setStatus('current')
mibBuilder.exportSymbols("PRVT-SWITCH-EFM-OAM-MIB", prvtEfmOamLoopbackResultSentPackets=prvtEfmOamLoopbackResultSentPackets, prvtOamLoopBackState=prvtOamLoopBackState, prvtEfmOamLoopbackResultClear=prvtEfmOamLoopbackResultClear, prvtEfmOamMultiPduCount=prvtEfmOamMultiPduCount, prvtEfmOamPingCounterBranch=prvtEfmOamPingCounterBranch, prvtEfmOamLoopbackTable=prvtEfmOamLoopbackTable, prvtEfmOamPingTable=prvtEfmOamPingTable, prvtEfmOamPingResultRcvRateFractional=prvtEfmOamPingResultRcvRateFractional, prvtEfmOamLoopbackResultStatus=prvtEfmOamLoopbackResultStatus, prvtEfmOamPeerName=prvtEfmOamPeerName, prvtSwitchEfmOamMIB=prvtSwitchEfmOamMIB, prvtEfmOamHistorySize=prvtEfmOamHistorySize, prvtEfmOamForceLoopbackRemote=prvtEfmOamForceLoopbackRemote, prvtEfmOamPingResultReceivedPackets=prvtEfmOamPingResultReceivedPackets, prvtEfmOamPeerPort=prvtEfmOamPeerPort, prvtEfmOamPingResultClear=prvtEfmOamPingResultClear, prvtEfmOamConformance=prvtEfmOamConformance, prvtEfmOamEventForwardStatus=prvtEfmOamEventForwardStatus, prvtEfmOamHelloInterval=prvtEfmOamHelloInterval, prvtEfmOamEventForwardShutdown=prvtEfmOamEventForwardShutdown, prvtEfmOamPingResultStatus=prvtEfmOamPingResultStatus, prvtEfmOamPing=prvtEfmOamPing, prvtEfmOamPingResultTable=prvtEfmOamPingResultTable, prvtEfmOamPingEntry=prvtEfmOamPingEntry, prvtEfmOamPingResultAverageTimeFractional=prvtEfmOamPingResultAverageTimeFractional, prvtEfmOamLoopback=prvtEfmOamLoopback, prvtEfmOamEventReturn=prvtEfmOamEventReturn, prvtEfmOamPeerTable=prvtEfmOamPeerTable, prvtEfmOamRemoteEvent=prvtEfmOamRemoteEvent, prvtEfmOamPingResultEntry=prvtEfmOamPingResultEntry, prvtEfmOamEnhanceMode=prvtEfmOamEnhanceMode, prvtEfmOamPingResultAverageTimeInteger=prvtEfmOamPingResultAverageTimeInteger, prvtEfmOamPingDelayTime=prvtEfmOamPingDelayTime, prvtEfmOamLoopbackResultTable=prvtEfmOamLoopbackResultTable, prvtEfmOamPktsSent=prvtEfmOamPktsSent, prvtEfmOamPingEchoNumber=prvtEfmOamPingEchoNumber, PYSNMP_MODULE_ID=prvtSwitchEfmOamMIB, prvtEfmOamLoopbackResultReceivedPackets=prvtEfmOamLoopbackResultReceivedPackets, prvtEfmOamLoopbackRowStatus=prvtEfmOamLoopbackRowStatus, prvtEfmOamTable=prvtEfmOamTable, prvtEfmOamPriority=prvtEfmOamPriority, prvtEfmOamLoopbackCount=prvtEfmOamLoopbackCount, prvtEfmOamPeerEntry=prvtEfmOamPeerEntry, prvtEfmOamLoopbackResultEntry=prvtEfmOamLoopbackResultEntry, prvtEfmOamPktsReceived=prvtEfmOamPktsReceived, prvtEfmOamLocalSysLog=prvtEfmOamLocalSysLog, prvtEfmOamPingResultTimeMax=prvtEfmOamPingResultTimeMax, prvtEfmOamForceLoopbackLocal=prvtEfmOamForceLoopbackLocal, prvtEfmOamLoopbackOperation=prvtEfmOamLoopbackOperation, prvtEfmOamLoopbackPacketSize=prvtEfmOamLoopbackPacketSize, prvtEfmOamNotifications=prvtEfmOamNotifications, prvtOamDyingGasp=prvtOamDyingGasp, prvtEfmOamLoopbackDuration=prvtEfmOamLoopbackDuration, prvtEfmOamEnable=prvtEfmOamEnable, prvtEfmOamPingResultRcvRateInteger=prvtEfmOamPingResultRcvRateInteger, prvtEfmOamKeepAlive=prvtEfmOamKeepAlive, prvtEfmOamPingTimeOut=prvtEfmOamPingTimeOut, prvtEfmOamPingCounterLeaf=prvtEfmOamPingCounterLeaf, prvtEfmOamPingResultSentPackets=prvtEfmOamPingResultSentPackets, prvtEfmOamLoopbackDelay=prvtEfmOamLoopbackDelay, prvtEfmOamObjects=prvtEfmOamObjects, prvtEfmOamLoopbackNoRemote=prvtEfmOamLoopbackNoRemote, prvtEfmOamLoopbackTimeout=prvtEfmOamLoopbackTimeout, prvtEfmOamLoopbackResultFlood=prvtEfmOamLoopbackResultFlood, prvtEfmOamEntry=prvtEfmOamEntry, prvtEfmOamPingRowStatus=prvtEfmOamPingRowStatus, prvtEfmOamLoopbackEntry=prvtEfmOamLoopbackEntry, prvtEfmOamPingResultTimeMin=prvtEfmOamPingResultTimeMin)
