#
# PySNMP MIB module PRVT-IGMP-SNOOPING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-IGMP-SNOOPING-MIB
# Produced by pysmi-1.1.0 at Fri Nov 19 14:59:15 2021
# On host fv-az33-360 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
switch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "switch")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, TimeTicks, Unsigned32, IpAddress, ObjectIdentity, Counter64, Gauge32, MibIdentifier, ModuleIdentity, iso, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "TimeTicks", "Unsigned32", "IpAddress", "ObjectIdentity", "Counter64", "Gauge32", "MibIdentifier", "ModuleIdentity", "iso", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Integer32")
TextualConvention, TruthValue, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TruthValue", "RowStatus", "DisplayString")
prvtIgmpSnoopingMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 5, 135))
prvtIgmpSnoopingMIB.setRevisions(('2010-02-03 00:00',))
if mibBuilder.loadTexts: prvtIgmpSnoopingMIB.setLastUpdated('201002030000Z')
if mibBuilder.loadTexts: prvtIgmpSnoopingMIB.setOrganization('BATM Advanced Communication')
prvtIgmpSnoopMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1))
prvtIgmpSnoopObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1))
prvtIgmpSnoopCfgTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 1), )
if mibBuilder.loadTexts: prvtIgmpSnoopCfgTable.setStatus('current')
prvtIgmpSnoopCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 1, 1), ).setIndexNames((0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopCfgSvcType"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopCfgSvcId"))
if mibBuilder.loadTexts: prvtIgmpSnoopCfgEntry.setStatus('current')
prvtIgmpSnoopCfgSvcType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("vlan", 1), ("vpls", 2), ("dot1q", 3), ("tls", 4))))
if mibBuilder.loadTexts: prvtIgmpSnoopCfgSvcType.setStatus('current')
prvtIgmpSnoopCfgSvcId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967294)))
if mibBuilder.loadTexts: prvtIgmpSnoopCfgSvcId.setStatus('current')
prvtIgmpSnoopCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgRowStatus.setStatus('current')
prvtIgmpSnoopCfgEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 1, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgEnable.setStatus('current')
prvtIgmpSnoopCfgRouterAlertCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 1, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgRouterAlertCheck.setStatus('current')
prvtIgmpSnoopCfgIpTosCheck = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 1, 1, 6), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgIpTosCheck.setStatus('current')
prvtIgmpSnoopCfgFloodOnFlush = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 1, 1, 7), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgFloodOnFlush.setStatus('current')
prvtIgmpSnoopCfgTmrRobustness = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgTmrRobustness.setStatus('current')
prvtIgmpSnoopCfgTmrQIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgTmrQIntvl.setStatus('current')
prvtIgmpSnoopCfgTmrQRespIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgTmrQRespIntvl.setStatus('current')
prvtIgmpSnoopCfgTmrLastMbrQIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgTmrLastMbrQIntvl.setStatus('current')
prvtIgmpSnoopCfgMode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("transparent", 0), ("report-suppression", 1), ("proxy", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgMode.setStatus('current')
prvtIgmpSnoopCfgSourceAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 1, 1, 13), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgSourceAddr.setStatus('current')
prvtIgmpSnoopCfgIfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 2), )
if mibBuilder.loadTexts: prvtIgmpSnoopCfgIfTable.setStatus('current')
prvtIgmpSnoopCfgIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 2, 1), ).setIndexNames((0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopCfgSvcType"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopCfgSvcId"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopCfgIfType"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopCfgIfName"))
if mibBuilder.loadTexts: prvtIgmpSnoopCfgIfEntry.setStatus('current')
prvtIgmpSnoopCfgIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("port", 1), ("sap", 2), ("spoke-sdp", 3), ("mesh-sdp", 4))))
if mibBuilder.loadTexts: prvtIgmpSnoopCfgIfType.setStatus('current')
prvtIgmpSnoopCfgIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 2, 1, 2), OctetString())
if mibBuilder.loadTexts: prvtIgmpSnoopCfgIfName.setStatus('current')
prvtIgmpSnoopCfgIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgIfRowStatus.setStatus('current')
prvtIgmpSnoopCfgIfMaxGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgIfMaxGroups.setStatus('current')
prvtIgmpSnoopCfgIfMRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 2, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgIfMRouter.setStatus('current')
prvtIgmpSnoopCfgIfMRouterBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 2, 1, 6), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgIfMRouterBlock.setStatus('current')
prvtIgmpSnoopCfgIfExplctTracking = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 2, 1, 7), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgIfExplctTracking.setStatus('current')
prvtIgmpSnoopCfgIfFastLeave = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 2, 1, 8), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgIfFastLeave.setStatus('current')
prvtIgmpSnoopCfgIfReportBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 2, 1, 9), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgIfReportBlock.setStatus('current')
prvtIgmpSnoopCfgIfForceFwd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 2, 1, 10), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgIfForceFwd.setStatus('current')
prvtIgmpSnoopCfgIfMrtAllowRprts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 2, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgIfMrtAllowRprts.setStatus('current')
prvtIgmpSnoopCfgIfQuerier = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 2, 1, 12), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopCfgIfQuerier.setStatus('current')
prvtIgmpSnoopDbGrpTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 3), )
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpTable.setStatus('current')
prvtIgmpSnoopDbGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 3, 1), ).setIndexNames((0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopDbGrpStatsVlanId"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopCfgIfName"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopDbGrpIpAddr"))
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpEntry.setStatus('current')
prvtIgmpSnoopDbGrpIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 3, 1, 1), IpAddress())
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpIpAddr.setStatus('current')
prvtIgmpSnoopDbGrpBitFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpBitFlags.setStatus('current')
prvtIgmpSnoopDbGrpFilterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("include", 1), ("exclude", 2), ("toInclude", 3), ("toExclude", 4), ("allow", 5), ("block", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpFilterMode.setStatus('current')
prvtIgmpSnoopDbGrpExpireTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpExpireTime.setStatus('current')
prvtIgmpSnoopDbGrpHostTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 4), )
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpHostTable.setStatus('current')
prvtIgmpSnoopDbGrpHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 4, 1), ).setIndexNames((0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopDbGrpStatsVlanId"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopCfgIfName"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopDbGrpIpAddr"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopDbGrpHostSourceIp"))
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpHostEntry.setStatus('current')
prvtIgmpSnoopDbGrpHostSourceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 4, 1, 1), IpAddress())
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpHostSourceIp.setStatus('current')
prvtIgmpSnoopDbGrpHostExpireTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpHostExpireTime.setStatus('current')
prvtIgmpSnoopDbGrpSrcTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 5), )
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpSrcTable.setStatus('current')
prvtIgmpSnoopDbGrpSrcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 5, 1), ).setIndexNames((0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopDbGrpStatsVlanId"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopCfgIfName"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopDbGrpIpAddr"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopDbGrpSrcIpAddr"))
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpSrcEntry.setStatus('current')
prvtIgmpSnoopDbGrpSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 5, 1, 1), IpAddress())
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpSrcIpAddr.setStatus('current')
prvtIgmpSnoopDbGrpSrcExpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpSrcExpTime.setStatus('current')
prvtIgmpSnoopDbGrpSrcHostTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 6), )
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpSrcHostTable.setStatus('current')
prvtIgmpSnoopDbGrpSrcHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 6, 1), ).setIndexNames((0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopDbGrpStatsVlanId"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopCfgIfName"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopDbGrpIpAddr"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopDbGrpSrcIpAddr"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopDbGrpSrcHostIp"))
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpSrcHostEntry.setStatus('current')
prvtIgmpSnoopDbGrpSrcHostIp = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 6, 1, 1), IpAddress())
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpSrcHostIp.setStatus('current')
prvtIgmpSnoopDbGrpSrcHostExpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpSrcHostExpTime.setStatus('current')
prvtIgmpSnoopDbMrtrTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 7), )
if mibBuilder.loadTexts: prvtIgmpSnoopDbMrtrTable.setStatus('current')
prvtIgmpSnoopDbMrtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 7, 1), ).setIndexNames((0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopDbGrpStatsVlanId"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopCfgIfName"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopDbMrtrSrcIp"))
if mibBuilder.loadTexts: prvtIgmpSnoopDbMrtrEntry.setStatus('current')
prvtIgmpSnoopDbMrtrSrcIp = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 7, 1, 1), IpAddress())
if mibBuilder.loadTexts: prvtIgmpSnoopDbMrtrSrcIp.setStatus('current')
prvtIgmpSnoopDbMrtrFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDbMrtrFlags.setStatus('current')
prvtIgmpSnoopDbMrtrExpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 7, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDbMrtrExpTime.setStatus('current')
prvtIgmpSnoopDbGrpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 8), )
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpStatsTable.setStatus('current')
prvtIgmpSnoopDbGrpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 8, 1), ).setIndexNames((0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopDbGrpStatsVlanId"))
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpStatsEntry.setStatus('current')
prvtIgmpSnoopDbGrpStatsVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 8, 1, 1), Integer32())
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpStatsVlanId.setStatus('current')
prvtIgmpSnoopDbGrpStatsDscPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 8, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpStatsDscPkt.setStatus('current')
prvtIgmpSnoopDbGrpStatsDscPktTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 8, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpStatsDscPktTtl.setStatus('current')
prvtIgmpSnoopDbGrpStatsDscPktChk = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 8, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpStatsDscPktChk.setStatus('current')
prvtIgmpSnoopDbGrpStatsDscPktRA = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 8, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDbGrpStatsDscPktRA.setStatus('current')
prvtIgmpSnoopDbIfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 9), )
if mibBuilder.loadTexts: prvtIgmpSnoopDbIfStatsTable.setStatus('current')
prvtIgmpSnoopDbIfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 9, 1), ).setIndexNames((0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopDbGrpStatsVlanId"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopDbIfStatsIfName"))
if mibBuilder.loadTexts: prvtIgmpSnoopDbIfStatsEntry.setStatus('current')
prvtIgmpSnoopDbIfStatsIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 9, 1, 1), OctetString())
if mibBuilder.loadTexts: prvtIgmpSnoopDbIfStatsIfName.setStatus('current')
prvtIgmpSnoopDbIfStatsV2Reports = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 9, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDbIfStatsV2Reports.setStatus('current')
prvtIgmpSnoopDbIfStatsV2Leaves = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 9, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDbIfStatsV2Leaves.setStatus('current')
prvtIgmpSnoopDbIfStatsV3Reports = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 9, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDbIfStatsV3Reports.setStatus('current')
prvtIgmpSnoopDbIfStatsGenQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 9, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDbIfStatsGenQueries.setStatus('current')
prvtIgmpSnoopDbIfStatsGrpQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 9, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDbIfStatsGrpQueries.setStatus('current')
prvtIgmpSnoopDbIfStatsSrcQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 9, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDbIfStatsSrcQueries.setStatus('current')
prvtIgmpSnoopMemoryTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 10), )
if mibBuilder.loadTexts: prvtIgmpSnoopMemoryTable.setStatus('current')
prvtIgmpSnoopMemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 10, 1), ).setIndexNames((0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopMemoryPoolId"))
if mibBuilder.loadTexts: prvtIgmpSnoopMemoryEntry.setStatus('current')
prvtIgmpSnoopMemoryPoolId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 10, 1, 1), Unsigned32())
if mibBuilder.loadTexts: prvtIgmpSnoopMemoryPoolId.setStatus('current')
prvtIgmpSnoopMemoryPoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 10, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopMemoryPoolName.setStatus('current')
prvtIgmpSnoopMemoryTaken = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 10, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopMemoryTaken.setStatus('current')
prvtIgmpSnoopMemoryFree = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 10, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopMemoryFree.setStatus('current')
prvtIgmpSnoopMemoryToAllocate = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 10, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopMemoryToAllocate.setStatus('current')
prvtIgmpSnoopMemoryInitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 10, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopMemoryInitCount.setStatus('current')
prvtIgmpSnoopMemorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 10, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopMemorySize.setStatus('current')
prvtIgmpSnoopMemoryAllAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 10, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopMemoryAllAllocated.setStatus('current')
prvtIgmpSnoopApplStatsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 11))
prvtIgmpSnoopCapturedPckts = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 11, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopCapturedPckts.setStatus('current')
prvtIgmpSnoopCapturedReports = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 11, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopCapturedReports.setStatus('current')
prvtIgmpSnoopUniqueSources = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 11, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopUniqueSources.setStatus('current')
prvtIgmpSnoopUniqueGroupRecords = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 11, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopUniqueGroupRecords.setStatus('current')
prvtIgmpSnoopDuplicateSources = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 11, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDuplicateSources.setStatus('current')
prvtIgmpSnoopDuplicateGrpRecs = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 11, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDuplicateGrpRecs.setStatus('current')
prvtIgmpSnoopUniqueMacs = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 11, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopUniqueMacs.setStatus('current')
prvtIgmpSnoopDuplicateMacs = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 11, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDuplicateMacs.setStatus('current')
prvtIgmpSnoopUniqueHsis = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 11, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopUniqueHsis.setStatus('current')
prvtIgmpSnoopDuplicateHsis = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 1, 11, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtIgmpSnoopDuplicateHsis.setStatus('current')
prvtIgmpSnoopMvrObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3))
prvtIgmpSnoopMvrShutdown = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtIgmpSnoopMvrShutdown.setStatus('current')
prvtIgmpSnoopMvrMode = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtIgmpSnoopMvrMode.setStatus('current')
prvtIgmpSnoopMvrVlan = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4092))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtIgmpSnoopMvrVlan.setStatus('current')
prvtIgmpSnoopMvrSrcIp = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtIgmpSnoopMvrSrcIp.setStatus('current')
prvtIgmpSnoopMvrGrpTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 10), )
if mibBuilder.loadTexts: prvtIgmpSnoopMvrGrpTable.setStatus('current')
prvtIgmpSnoopMvrGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 10, 1), ).setIndexNames((0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopMvrGrpName"))
if mibBuilder.loadTexts: prvtIgmpSnoopMvrGrpEntry.setStatus('current')
prvtIgmpSnoopMvrGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 10, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16)))
if mibBuilder.loadTexts: prvtIgmpSnoopMvrGrpName.setStatus('current')
prvtIgmpSnoopMvrGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 10, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopMvrGrpRowStatus.setStatus('current')
prvtIgmpSnoopMvrGrpAsmTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 11), )
if mibBuilder.loadTexts: prvtIgmpSnoopMvrGrpAsmTable.setStatus('current')
prvtIgmpSnoopMvrGrpAsmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 11, 1), ).setIndexNames((0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopMvrGrpName"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopMvrGrpAsmIndex"))
if mibBuilder.loadTexts: prvtIgmpSnoopMvrGrpAsmEntry.setStatus('current')
prvtIgmpSnoopMvrGrpAsmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)))
if mibBuilder.loadTexts: prvtIgmpSnoopMvrGrpAsmIndex.setStatus('current')
prvtIgmpSnoopMvrGrpAsmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 11, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopMvrGrpAsmRowStatus.setStatus('current')
prvtIgmpSnoopMvrGrpAsmAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 11, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopMvrGrpAsmAddr.setStatus('current')
prvtIgmpSnoopMvrGrpAsmCount = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopMvrGrpAsmCount.setStatus('current')
prvtIgmpSnoopMvrGrpSsmTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 12), )
if mibBuilder.loadTexts: prvtIgmpSnoopMvrGrpSsmTable.setStatus('current')
prvtIgmpSnoopMvrGrpSsmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 12, 1), ).setIndexNames((0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopMvrGrpName"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopMvrGrpSsmIndex"))
if mibBuilder.loadTexts: prvtIgmpSnoopMvrGrpSsmEntry.setStatus('current')
prvtIgmpSnoopMvrGrpSsmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)))
if mibBuilder.loadTexts: prvtIgmpSnoopMvrGrpSsmIndex.setStatus('current')
prvtIgmpSnoopMvrGrpSsmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 12, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopMvrGrpSsmRowStatus.setStatus('current')
prvtIgmpSnoopMvrGrpSsmAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 12, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopMvrGrpSsmAddr.setStatus('current')
prvtIgmpSnoopMvrGrpSsmSrcList = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 12, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopMvrGrpSsmSrcList.setStatus('current')
prvtIgmpSnoopMvrGrpSsmMode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("include", 1), ("exclude", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopMvrGrpSsmMode.setStatus('current')
prvtIgmpSnoopMvrPortTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 13), )
if mibBuilder.loadTexts: prvtIgmpSnoopMvrPortTable.setStatus('current')
prvtIgmpSnoopMvrPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 13, 1), ).setIndexNames((0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopCfgIfName"))
if mibBuilder.loadTexts: prvtIgmpSnoopMvrPortEntry.setStatus('current')
prvtIgmpSnoopMvrPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 13, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopMvrPortRowStatus.setStatus('current')
prvtIgmpSnoopMvrPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("source", 1), ("receiver", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopMvrPortType.setStatus('current')
prvtIgmpSnoopMvrPortExpTrack = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 13, 1, 3), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopMvrPortExpTrack.setStatus('current')
prvtIgmpSnoopMvrPortFastLeave = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 13, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopMvrPortFastLeave.setStatus('current')
prvtIgmpSnoopMvrPortMcGrpTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 14), )
if mibBuilder.loadTexts: prvtIgmpSnoopMvrPortMcGrpTable.setStatus('current')
prvtIgmpSnoopMvrPortMcGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 14, 1), ).setIndexNames((0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopCfgIfName"), (0, "PRVT-IGMP-SNOOPING-MIB", "prvtIgmpSnoopMvrGrpName"))
if mibBuilder.loadTexts: prvtIgmpSnoopMvrPortMcGrpEntry.setStatus('current')
prvtIgmpSnoopMvrPortMcGrpRStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 135, 1, 3, 14, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtIgmpSnoopMvrPortMcGrpRStatus.setStatus('current')
mibBuilder.exportSymbols("PRVT-IGMP-SNOOPING-MIB", prvtIgmpSnoopDbIfStatsIfName=prvtIgmpSnoopDbIfStatsIfName, prvtIgmpSnoopDbIfStatsV2Reports=prvtIgmpSnoopDbIfStatsV2Reports, prvtIgmpSnoopDbGrpSrcHostExpTime=prvtIgmpSnoopDbGrpSrcHostExpTime, prvtIgmpSnoopDbIfStatsGenQueries=prvtIgmpSnoopDbIfStatsGenQueries, prvtIgmpSnoopCfgTmrRobustness=prvtIgmpSnoopCfgTmrRobustness, prvtIgmpSnoopDbIfStatsSrcQueries=prvtIgmpSnoopDbIfStatsSrcQueries, prvtIgmpSnoopMvrSrcIp=prvtIgmpSnoopMvrSrcIp, prvtIgmpSnoopMvrGrpEntry=prvtIgmpSnoopMvrGrpEntry, prvtIgmpSnoopDbGrpSrcHostIp=prvtIgmpSnoopDbGrpSrcHostIp, prvtIgmpSnoopMvrGrpAsmCount=prvtIgmpSnoopMvrGrpAsmCount, prvtIgmpSnoopMemorySize=prvtIgmpSnoopMemorySize, prvtIgmpSnoopMemoryTable=prvtIgmpSnoopMemoryTable, prvtIgmpSnoopMemoryFree=prvtIgmpSnoopMemoryFree, prvtIgmpSnoopCapturedPckts=prvtIgmpSnoopCapturedPckts, prvtIgmpSnoopCfgRouterAlertCheck=prvtIgmpSnoopCfgRouterAlertCheck, prvtIgmpSnoopDbGrpSrcHostTable=prvtIgmpSnoopDbGrpSrcHostTable, prvtIgmpSnoopDbGrpExpireTime=prvtIgmpSnoopDbGrpExpireTime, prvtIgmpSnoopDbGrpHostTable=prvtIgmpSnoopDbGrpHostTable, prvtIgmpSnoopDbIfStatsV3Reports=prvtIgmpSnoopDbIfStatsV3Reports, prvtIgmpSnoopCfgIfRowStatus=prvtIgmpSnoopCfgIfRowStatus, prvtIgmpSnoopDbIfStatsGrpQueries=prvtIgmpSnoopDbIfStatsGrpQueries, prvtIgmpSnoopDbGrpStatsDscPktTtl=prvtIgmpSnoopDbGrpStatsDscPktTtl, PYSNMP_MODULE_ID=prvtIgmpSnoopingMIB, prvtIgmpSnoopCfgSvcId=prvtIgmpSnoopCfgSvcId, prvtIgmpSnoopMvrGrpRowStatus=prvtIgmpSnoopMvrGrpRowStatus, prvtIgmpSnoopMvrGrpAsmEntry=prvtIgmpSnoopMvrGrpAsmEntry, prvtIgmpSnoopCfgIfTable=prvtIgmpSnoopCfgIfTable, prvtIgmpSnoopCfgTable=prvtIgmpSnoopCfgTable, prvtIgmpSnoopDbGrpHostExpireTime=prvtIgmpSnoopDbGrpHostExpireTime, prvtIgmpSnoopDbMrtrSrcIp=prvtIgmpSnoopDbMrtrSrcIp, prvtIgmpSnoopMvrPortTable=prvtIgmpSnoopMvrPortTable, prvtIgmpSnoopMvrPortFastLeave=prvtIgmpSnoopMvrPortFastLeave, prvtIgmpSnoopDuplicateHsis=prvtIgmpSnoopDuplicateHsis, prvtIgmpSnoopDbMrtrEntry=prvtIgmpSnoopDbMrtrEntry, prvtIgmpSnoopMvrGrpSsmTable=prvtIgmpSnoopMvrGrpSsmTable, prvtIgmpSnoopMvrPortMcGrpRStatus=prvtIgmpSnoopMvrPortMcGrpRStatus, prvtIgmpSnoopMemoryAllAllocated=prvtIgmpSnoopMemoryAllAllocated, prvtIgmpSnoopUniqueGroupRecords=prvtIgmpSnoopUniqueGroupRecords, prvtIgmpSnoopCfgMode=prvtIgmpSnoopCfgMode, prvtIgmpSnoopCfgIfMrtAllowRprts=prvtIgmpSnoopCfgIfMrtAllowRprts, prvtIgmpSnoopMvrGrpSsmEntry=prvtIgmpSnoopMvrGrpSsmEntry, prvtIgmpSnoopCfgIfEntry=prvtIgmpSnoopCfgIfEntry, prvtIgmpSnoopDbIfStatsTable=prvtIgmpSnoopDbIfStatsTable, prvtIgmpSnoopMIBObjects=prvtIgmpSnoopMIBObjects, prvtIgmpSnoopDbGrpSrcTable=prvtIgmpSnoopDbGrpSrcTable, prvtIgmpSnoopMemoryPoolId=prvtIgmpSnoopMemoryPoolId, prvtIgmpSnoopDbGrpSrcEntry=prvtIgmpSnoopDbGrpSrcEntry, prvtIgmpSnoopDbGrpHostSourceIp=prvtIgmpSnoopDbGrpHostSourceIp, prvtIgmpSnoopMvrGrpSsmIndex=prvtIgmpSnoopMvrGrpSsmIndex, prvtIgmpSnoopMvrPortMcGrpEntry=prvtIgmpSnoopMvrPortMcGrpEntry, prvtIgmpSnoopMemoryInitCount=prvtIgmpSnoopMemoryInitCount, prvtIgmpSnoopDbGrpStatsEntry=prvtIgmpSnoopDbGrpStatsEntry, prvtIgmpSnoopCfgEntry=prvtIgmpSnoopCfgEntry, prvtIgmpSnoopMvrMode=prvtIgmpSnoopMvrMode, prvtIgmpSnoopingMIB=prvtIgmpSnoopingMIB, prvtIgmpSnoopCfgIfForceFwd=prvtIgmpSnoopCfgIfForceFwd, prvtIgmpSnoopMemoryEntry=prvtIgmpSnoopMemoryEntry, prvtIgmpSnoopMemoryPoolName=prvtIgmpSnoopMemoryPoolName, prvtIgmpSnoopDbGrpBitFlags=prvtIgmpSnoopDbGrpBitFlags, prvtIgmpSnoopCfgRowStatus=prvtIgmpSnoopCfgRowStatus, prvtIgmpSnoopMvrGrpTable=prvtIgmpSnoopMvrGrpTable, prvtIgmpSnoopDbIfStatsV2Leaves=prvtIgmpSnoopDbIfStatsV2Leaves, prvtIgmpSnoopMvrGrpSsmSrcList=prvtIgmpSnoopMvrGrpSsmSrcList, prvtIgmpSnoopMvrPortRowStatus=prvtIgmpSnoopMvrPortRowStatus, prvtIgmpSnoopCfgIfReportBlock=prvtIgmpSnoopCfgIfReportBlock, prvtIgmpSnoopDbGrpEntry=prvtIgmpSnoopDbGrpEntry, prvtIgmpSnoopCfgTmrLastMbrQIntvl=prvtIgmpSnoopCfgTmrLastMbrQIntvl, prvtIgmpSnoopCfgSvcType=prvtIgmpSnoopCfgSvcType, prvtIgmpSnoopCfgIfType=prvtIgmpSnoopCfgIfType, prvtIgmpSnoopCfgSourceAddr=prvtIgmpSnoopCfgSourceAddr, prvtIgmpSnoopCfgIfMRouter=prvtIgmpSnoopCfgIfMRouter, prvtIgmpSnoopCfgEnable=prvtIgmpSnoopCfgEnable, prvtIgmpSnoopCfgIpTosCheck=prvtIgmpSnoopCfgIpTosCheck, prvtIgmpSnoopCfgIfExplctTracking=prvtIgmpSnoopCfgIfExplctTracking, prvtIgmpSnoopMvrGrpSsmRowStatus=prvtIgmpSnoopMvrGrpSsmRowStatus, prvtIgmpSnoopUniqueHsis=prvtIgmpSnoopUniqueHsis, prvtIgmpSnoopCfgTmrQIntvl=prvtIgmpSnoopCfgTmrQIntvl, prvtIgmpSnoopDbGrpFilterMode=prvtIgmpSnoopDbGrpFilterMode, prvtIgmpSnoopDbGrpStatsTable=prvtIgmpSnoopDbGrpStatsTable, prvtIgmpSnoopDbMrtrTable=prvtIgmpSnoopDbMrtrTable, prvtIgmpSnoopMvrPortType=prvtIgmpSnoopMvrPortType, prvtIgmpSnoopDuplicateMacs=prvtIgmpSnoopDuplicateMacs, prvtIgmpSnoopDbGrpSrcHostEntry=prvtIgmpSnoopDbGrpSrcHostEntry, prvtIgmpSnoopUniqueSources=prvtIgmpSnoopUniqueSources, prvtIgmpSnoopCfgFloodOnFlush=prvtIgmpSnoopCfgFloodOnFlush, prvtIgmpSnoopDbGrpSrcIpAddr=prvtIgmpSnoopDbGrpSrcIpAddr, prvtIgmpSnoopMvrPortEntry=prvtIgmpSnoopMvrPortEntry, prvtIgmpSnoopMvrPortExpTrack=prvtIgmpSnoopMvrPortExpTrack, prvtIgmpSnoopDuplicateSources=prvtIgmpSnoopDuplicateSources, prvtIgmpSnoopMvrGrpAsmRowStatus=prvtIgmpSnoopMvrGrpAsmRowStatus, prvtIgmpSnoopCapturedReports=prvtIgmpSnoopCapturedReports, prvtIgmpSnoopMvrVlan=prvtIgmpSnoopMvrVlan, prvtIgmpSnoopDbGrpStatsDscPkt=prvtIgmpSnoopDbGrpStatsDscPkt, prvtIgmpSnoopDbGrpTable=prvtIgmpSnoopDbGrpTable, prvtIgmpSnoopDbMrtrExpTime=prvtIgmpSnoopDbMrtrExpTime, prvtIgmpSnoopDuplicateGrpRecs=prvtIgmpSnoopDuplicateGrpRecs, prvtIgmpSnoopMemoryTaken=prvtIgmpSnoopMemoryTaken, prvtIgmpSnoopDbGrpStatsDscPktRA=prvtIgmpSnoopDbGrpStatsDscPktRA, prvtIgmpSnoopMvrObjects=prvtIgmpSnoopMvrObjects, prvtIgmpSnoopApplStatsObjects=prvtIgmpSnoopApplStatsObjects, prvtIgmpSnoopMvrGrpAsmIndex=prvtIgmpSnoopMvrGrpAsmIndex, prvtIgmpSnoopCfgIfMRouterBlock=prvtIgmpSnoopCfgIfMRouterBlock, prvtIgmpSnoopCfgIfFastLeave=prvtIgmpSnoopCfgIfFastLeave, prvtIgmpSnoopCfgIfMaxGroups=prvtIgmpSnoopCfgIfMaxGroups, prvtIgmpSnoopDbGrpHostEntry=prvtIgmpSnoopDbGrpHostEntry, prvtIgmpSnoopMvrGrpSsmAddr=prvtIgmpSnoopMvrGrpSsmAddr, prvtIgmpSnoopMemoryToAllocate=prvtIgmpSnoopMemoryToAllocate, prvtIgmpSnoopMvrShutdown=prvtIgmpSnoopMvrShutdown, prvtIgmpSnoopMvrGrpAsmAddr=prvtIgmpSnoopMvrGrpAsmAddr, prvtIgmpSnoopObjects=prvtIgmpSnoopObjects, prvtIgmpSnoopDbGrpStatsVlanId=prvtIgmpSnoopDbGrpStatsVlanId, prvtIgmpSnoopDbIfStatsEntry=prvtIgmpSnoopDbIfStatsEntry, prvtIgmpSnoopCfgTmrQRespIntvl=prvtIgmpSnoopCfgTmrQRespIntvl, prvtIgmpSnoopMvrPortMcGrpTable=prvtIgmpSnoopMvrPortMcGrpTable, prvtIgmpSnoopMvrGrpName=prvtIgmpSnoopMvrGrpName, prvtIgmpSnoopMvrGrpSsmMode=prvtIgmpSnoopMvrGrpSsmMode, prvtIgmpSnoopCfgIfName=prvtIgmpSnoopCfgIfName, prvtIgmpSnoopDbGrpSrcExpTime=prvtIgmpSnoopDbGrpSrcExpTime, prvtIgmpSnoopCfgIfQuerier=prvtIgmpSnoopCfgIfQuerier, prvtIgmpSnoopMvrGrpAsmTable=prvtIgmpSnoopMvrGrpAsmTable, prvtIgmpSnoopDbGrpStatsDscPktChk=prvtIgmpSnoopDbGrpStatsDscPktChk, prvtIgmpSnoopUniqueMacs=prvtIgmpSnoopUniqueMacs, prvtIgmpSnoopDbGrpIpAddr=prvtIgmpSnoopDbGrpIpAddr, prvtIgmpSnoopDbMrtrFlags=prvtIgmpSnoopDbMrtrFlags)
