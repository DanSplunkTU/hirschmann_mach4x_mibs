#
# PySNMP MIB module PRVT-CFM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binos/PRVT-CFM-MIB
# Produced by pysmi-1.1.3 at Sun Nov 28 15:09:41 2021
# On host fv-az36-794 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
dot1agCfmMdIndex, dot1agCfmMaCompEntry, dot1agCfmLtrEntry, dot1agCfmMepDbRMepIdentifier, dot1agCfmMepEntry, dot1agCfmMaIndex, Dot1afCfmIndexIntegerNextFree, Dot1agCfmMDLevelOrNone, dot1agCfmMepIdentifier = mibBuilder.importSymbols("IEEE8021-CFM-MIB", "dot1agCfmMdIndex", "dot1agCfmMaCompEntry", "dot1agCfmLtrEntry", "dot1agCfmMepDbRMepIdentifier", "dot1agCfmMepEntry", "dot1agCfmMaIndex", "Dot1afCfmIndexIntegerNextFree", "Dot1agCfmMDLevelOrNone", "dot1agCfmMepIdentifier")
switch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "switch")
VlanId, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanId")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, Unsigned32, ModuleIdentity, IpAddress, Bits, TimeTicks, Counter64, Counter32, Gauge32, ObjectIdentity, MibIdentifier, Integer32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Unsigned32", "ModuleIdentity", "IpAddress", "Bits", "TimeTicks", "Counter64", "Counter32", "Gauge32", "ObjectIdentity", "MibIdentifier", "Integer32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, RowStatus, TruthValue, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TruthValue", "MacAddress", "TextualConvention")
prvtCfmMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 1, 5, 131))
prvtCfmMib.setRevisions(('2012-09-12 00:00', '2011-04-18 00:00', '2011-01-18 00:00', '2010-07-08 00:00', '2010-04-08 00:00', '2010-03-17 00:00', '2009-06-20 00:00', '2008-08-19 00:00', '2008-06-24 00:00', '2008-01-20 00:00',))
if mibBuilder.loadTexts: prvtCfmMib.setLastUpdated('201101180000Z')
if mibBuilder.loadTexts: prvtCfmMib.setOrganization('BATM Advanced Communication')
prvtCfmMibNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 0))
prvtCfmMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1))
prvtCfmMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 2))
prvtCfmUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmUpdateInterval.setStatus('current')
prvtCfmStatus = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmStatus.setStatus('current')
prvtCfmProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3))
prvtCfmProfileTableNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 1), Dot1afCfmIndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmProfileTableNextIndex.setStatus('current')
prvtCfmProfileTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2), )
if mibBuilder.loadTexts: prvtCfmProfileTable.setStatus('current')
prvtCfmProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1), ).setIndexNames((0, "PRVT-CFM-MIB", "prvtCfmProfileIndex"))
if mibBuilder.loadTexts: prvtCfmProfileEntry.setStatus('current')
prvtCfmProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: prvtCfmProfileIndex.setStatus('current')
prvtCfmProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfileName.setStatus('current')
prvtCfmProfilePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfilePriority.setStatus('current')
prvtCfmProfileRate = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfileRate.setStatus('current')
prvtCfmProfileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1462))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfileSize.setStatus('current')
prvtCfmProfileBucketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 255)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfileBucketSize.setStatus('current')
prvtCfmProfile1wJitterError = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(350)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfile1wJitterError.setStatus('current')
prvtCfmProfile1wJitterWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfile1wJitterWarning.setStatus('current')
prvtCfmProfileJitterError = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(700)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfileJitterError.setStatus('current')
prvtCfmProfileJitterErrorPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfileJitterErrorPeriod.setStatus('current')
prvtCfmProfileJitterWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfileJitterWarning.setStatus('current')
prvtCfmProfileJitterWarningPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfileJitterWarningPeriod.setStatus('current')
prvtCfmProfileFrameLossError = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfileFrameLossError.setStatus('current')
prvtCfmProfileFrameLossWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99)).clone(8)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfileFrameLossWarning.setStatus('current')
prvtCfmProfileLatencyError = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(2000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfileLatencyError.setStatus('current')
prvtCfmProfileLatencyErrorPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfileLatencyErrorPeriod.setStatus('current')
prvtCfmProfileLatencyWarning = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(1600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfileLatencyWarning.setStatus('current')
prvtCfmProfileLatencyWarningPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfileLatencyWarningPeriod.setStatus('current')
prvtCfmProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 19), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtCfmProfileRowStatus.setStatus('current')
prvtCfmProfile1wJitterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 20), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfile1wJitterEnable.setStatus('current')
prvtCfmProfileJitterEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 21), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfileJitterEnable.setStatus('current')
prvtCfmProfileFrameLossEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 22), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfileFrameLossEnable.setStatus('current')
prvtCfmProfileLatencyEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 3, 2, 1, 23), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProfileLatencyEnable.setStatus('current')
prvtCfmProcess = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 4))
prvtCfmProcessTableNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 4, 1), Dot1afCfmIndexIntegerNextFree()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmProcessTableNextIndex.setStatus('current')
prvtCfmProcessTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 4, 2), )
if mibBuilder.loadTexts: prvtCfmProcessTable.setStatus('current')
prvtCfmProcessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 4, 2, 1), ).setIndexNames((0, "IEEE8021-CFM-MIB", "dot1agCfmMdIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMaIndex"), (0, "PRVT-CFM-MIB", "prvtCfmProcessIndex"))
if mibBuilder.loadTexts: prvtCfmProcessEntry.setStatus('current')
prvtCfmProcessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 4, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: prvtCfmProcessIndex.setStatus('current')
prvtCfmProcessProfileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 4, 2, 1, 2), Unsigned32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProcessProfileIndex.setStatus('current')
prvtCfmProcessName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 4, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtCfmProcessName.setStatus('current')
prvtCfmProcessStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 4, 2, 1, 4), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProcessStatus.setStatus('current')
prvtCfmProcessRepeatInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 4, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 420)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProcessRepeatInterval.setStatus('current')
prvtCfmProcessPacketType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cfm", 1), ("y1731", 2))).clone('cfm')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmProcessPacketType.setStatus('current')
prvtCfmProcessUnreturnedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 4, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmProcessUnreturnedPkts.setStatus('current')
prvtCfmProcessRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 4, 2, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtCfmProcessRowStatus.setStatus('current')
prvtCfmProcessResult = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 5))
prvtCfmProcessResultTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 5, 1), )
if mibBuilder.loadTexts: prvtCfmProcessResultTable.setStatus('current')
prvtCfmProcessResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 5, 1, 1), ).setIndexNames((0, "IEEE8021-CFM-MIB", "dot1agCfmMdIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMaIndex"), (0, "PRVT-CFM-MIB", "prvtCfmProcessIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMepDbRMepIdentifier"))
if mibBuilder.loadTexts: prvtCfmProcessResultEntry.setStatus('current')
prvtCfmProcessResultOneWayJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 5, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmProcessResultOneWayJitter.setStatus('current')
prvtCfmProcessResultTwoWayJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 5, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmProcessResultTwoWayJitter.setStatus('current')
prvtCfmProcessResultLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 5, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmProcessResultLatency.setStatus('current')
prvtCfmProcessResultFrameloss = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 5, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmProcessResultFrameloss.setStatus('current')
prvtCfmMa = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 6))
prvtCfmMaTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 6, 1), )
if mibBuilder.loadTexts: prvtCfmMaTable.setStatus('current')
prvtCfmMaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 6, 1, 1), )
dot1agCfmMaCompEntry.registerAugmentions(("PRVT-CFM-MIB", "prvtCfmMaEntry"))
prvtCfmMaEntry.setIndexNames(*dot1agCfmMaCompEntry.getIndexNames())
if mibBuilder.loadTexts: prvtCfmMaEntry.setStatus('current')
prvtCfmMaCompAisLckEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 6, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmMaCompAisLckEnabled.setStatus('current')
prvtCfmMaCompAisLckLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 6, 1, 1, 2), Dot1agCfmMDLevelOrNone().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmMaCompAisLckLevel.setStatus('current')
prvtCfmMaCompAisLckInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("interval1s", 1), ("interval1min", 2))).clone('interval1s')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmMaCompAisLckInterval.setStatus('current')
prvtCfmMaCompAisLckPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 6, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmMaCompAisLckPriority.setStatus('current')
prvtCfmMaCompServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 6, 1, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmMaCompServiceId.setStatus('current')
prvtCfmMaCompNumberOfServices = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 6, 1, 1, 6), Unsigned32().clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmMaCompNumberOfServices.setStatus('current')
prvtCfmMaCompClearConnectivity = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 6, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 8191))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmMaCompClearConnectivity.setStatus('current')
prvtCfmMep = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7))
prvtCfmMepTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 1), )
if mibBuilder.loadTexts: prvtCfmMepTable.setStatus('current')
prvtCfmMepEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 1, 1), )
dot1agCfmMepEntry.registerAugmentions(("PRVT-CFM-MIB", "prvtCfmMepEntry"))
prvtCfmMepEntry.setIndexNames(*dot1agCfmMepEntry.getIndexNames())
if mibBuilder.loadTexts: prvtCfmMepEntry.setStatus('current')
prvtCfmMepAlarmSupressed = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmMepAlarmSupressed.setStatus('current')
prvtCfmMepAisCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmMepAisCondition.setStatus('current')
prvtCfmMepLckCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmMepLckCondition.setStatus('current')
prvtCfmMepAisLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("nolifetime", 0), ("lifetime35s", 1), ("lifetime35min", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmMepAisLifetime.setStatus('current')
prvtCfmMepLckLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("nolifetime", 0), ("lifetime35s", 1), ("lifetime35min", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmMepLckLifetime.setStatus('current')
prvtCfmMepTransmitMcastLbm = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 1, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmMepTransmitMcastLbm.setStatus('current')
prvtCfmMepTransmitLbmInfinite = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 1, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmMepTransmitLbmInfinite.setStatus('current')
prvtCfmMepTransmitLbmDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmMepTransmitLbmDelay.setStatus('current')
prvtCfmMepTransmitLbmTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmMepTransmitLbmTimeout.setStatus('current')
prvtCfmMepTransmitLtmTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmMepTransmitLtmTimeout.setStatus('current')
prvtCfmMepTransmitLbmSentPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmMepTransmitLbmSentPkts.setStatus('current')
prvtCfmMepTransmitLbmSuccessRate = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmMepTransmitLbmSuccessRate.setStatus('current')
prvtCfmMepTransmitLbmMinTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 1, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmMepTransmitLbmMinTime.setStatus('current')
prvtCfmMepTransmitLbmAvgTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmMepTransmitLbmAvgTime.setStatus('current')
prvtCfmMepTransmitLbmMaxTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmMepTransmitLbmMaxTime.setStatus('current')
prvtCfmMepSuportedRemoteMepsNo = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(8, 16, 24, 32))).clone(namedValues=NamedValues(("remoteMeps8", 8), ("remoteMeps16", 16), ("remoteMeps24", 24), ("remoteMeps32", 32))).clone('remoteMeps8')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmMepSuportedRemoteMepsNo.setStatus('current')
prvtCfmMepExcludeCCMTLV = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmMepExcludeCCMTLV.setStatus('current')
prvtCfmLbrTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 2), )
if mibBuilder.loadTexts: prvtCfmLbrTable.setStatus('current')
prvtCfmLbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 2, 1), ).setIndexNames((0, "IEEE8021-CFM-MIB", "dot1agCfmMdIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMaIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMepIdentifier"), (0, "PRVT-CFM-MIB", "prvtCfmLbrSeqNumber"), (0, "PRVT-CFM-MIB", "prvtCfmLbrReceiveOrder"))
if mibBuilder.loadTexts: prvtCfmLbrEntry.setStatus('current')
prvtCfmLbrSeqNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: prvtCfmLbrSeqNumber.setStatus('current')
prvtCfmLbrReceiveOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: prvtCfmLbrReceiveOrder.setStatus('current')
prvtCfmLbrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmLbrTime.setStatus('current')
prvtCfmLbrMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 2, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmLbrMacAddress.setStatus('current')
prvtCfmLbrBadMsdu = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 2, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmLbrBadMsdu.setStatus('current')
prvtCfmLtrTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 3), )
if mibBuilder.loadTexts: prvtCfmLtrTable.setStatus('current')
prvtCfmLtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 3, 1), )
dot1agCfmLtrEntry.registerAugmentions(("PRVT-CFM-MIB", "prvtCfmLtrEntry"))
prvtCfmLtrEntry.setIndexNames(*dot1agCfmLtrEntry.getIndexNames())
if mibBuilder.loadTexts: prvtCfmLtrEntry.setStatus('current')
prvtCfmLtrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 7, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCfmLtrTime.setStatus('current')
prvtCfmMaAisLckVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 8))
prvtCfmMaAisLckVlanTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 8, 1), )
if mibBuilder.loadTexts: prvtCfmMaAisLckVlanTable.setStatus('current')
prvtCfmMaAisLckVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 8, 1, 1), ).setIndexNames((0, "IEEE8021-CFM-MIB", "dot1agCfmMdIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMaIndex"), (0, "PRVT-CFM-MIB", "prvtCfmMaAisLckVlanId"))
if mibBuilder.loadTexts: prvtCfmMaAisLckVlanEntry.setStatus('current')
prvtCfmMaAisLckVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 8, 1, 1, 1), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtCfmMaAisLckVlanId.setStatus('current')
prvtCfmMaAisLckVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 1, 8, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtCfmMaAisLckVlanRowStatus.setStatus('current')
prvtCfm1wJitterThreshold = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 0, 1)).setObjects(("PRVT-CFM-MIB", "prvtCfmProcessResultOneWayJitter"), ("PRVT-CFM-MIB", "prvtCfmProfile1wJitterWarning"), ("PRVT-CFM-MIB", "prvtCfmProfile1wJitterError"))
if mibBuilder.loadTexts: prvtCfm1wJitterThreshold.setStatus('current')
prvtCfmJitterThreshold = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 0, 2)).setObjects(("PRVT-CFM-MIB", "prvtCfmProcessResultTwoWayJitter"), ("PRVT-CFM-MIB", "prvtCfmProfileJitterWarning"), ("PRVT-CFM-MIB", "prvtCfmProfileJitterWarningPeriod"), ("PRVT-CFM-MIB", "prvtCfmProfileJitterError"), ("PRVT-CFM-MIB", "prvtCfmProfileJitterErrorPeriod"))
if mibBuilder.loadTexts: prvtCfmJitterThreshold.setStatus('current')
prvtCfmFrameLossThreshold = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 0, 3)).setObjects(("PRVT-CFM-MIB", "prvtCfmProcessResultFrameloss"), ("PRVT-CFM-MIB", "prvtCfmProfileFrameLossWarning"), ("PRVT-CFM-MIB", "prvtCfmProfileFrameLossError"))
if mibBuilder.loadTexts: prvtCfmFrameLossThreshold.setStatus('current')
prvtCfmLatencyThreshold = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 0, 4)).setObjects(("PRVT-CFM-MIB", "prvtCfmProcessResultLatency"), ("PRVT-CFM-MIB", "prvtCfmProfileLatencyWarning"), ("PRVT-CFM-MIB", "prvtCfmProfileLatencyWarningPeriod"), ("PRVT-CFM-MIB", "prvtCfmProfileLatencyError"), ("PRVT-CFM-MIB", "prvtCfmProfileLatencyErrorPeriod"))
if mibBuilder.loadTexts: prvtCfmLatencyThreshold.setStatus('current')
prvtCfmAisReceived = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 0, 5)).setObjects(("PRVT-CFM-MIB", "prvtCfmMepAisLifetime"))
if mibBuilder.loadTexts: prvtCfmAisReceived.setStatus('current')
prvtCfmLckReceived = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 5, 131, 0, 6)).setObjects(("PRVT-CFM-MIB", "prvtCfmMepLckLifetime"))
if mibBuilder.loadTexts: prvtCfmLckReceived.setStatus('current')
mibBuilder.exportSymbols("PRVT-CFM-MIB", prvtCfmMepTransmitLbmAvgTime=prvtCfmMepTransmitLbmAvgTime, prvtCfmMepTransmitLbmSuccessRate=prvtCfmMepTransmitLbmSuccessRate, prvtCfmMepTransmitLbmTimeout=prvtCfmMepTransmitLbmTimeout, prvtCfmStatus=prvtCfmStatus, prvtCfmProcessTableNextIndex=prvtCfmProcessTableNextIndex, prvtCfmMaCompClearConnectivity=prvtCfmMaCompClearConnectivity, prvtCfmMepLckLifetime=prvtCfmMepLckLifetime, prvtCfmProfileName=prvtCfmProfileName, prvtCfmMepAisCondition=prvtCfmMepAisCondition, prvtCfmMepExcludeCCMTLV=prvtCfmMepExcludeCCMTLV, prvtCfmProcessResult=prvtCfmProcessResult, prvtCfmMepEntry=prvtCfmMepEntry, prvtCfmProfileLatencyWarningPeriod=prvtCfmProfileLatencyWarningPeriod, prvtCfmProcessResultLatency=prvtCfmProcessResultLatency, prvtCfmProfile=prvtCfmProfile, PYSNMP_MODULE_ID=prvtCfmMib, prvtCfmLbrSeqNumber=prvtCfmLbrSeqNumber, prvtCfmMep=prvtCfmMep, prvtCfmMibObjects=prvtCfmMibObjects, prvtCfmUpdateInterval=prvtCfmUpdateInterval, prvtCfmProfileJitterError=prvtCfmProfileJitterError, prvtCfmMaTable=prvtCfmMaTable, prvtCfmProcessIndex=prvtCfmProcessIndex, prvtCfmMepTransmitLbmInfinite=prvtCfmMepTransmitLbmInfinite, prvtCfmProfileEntry=prvtCfmProfileEntry, prvtCfmProcess=prvtCfmProcess, prvtCfmAisReceived=prvtCfmAisReceived, prvtCfmLtrTable=prvtCfmLtrTable, prvtCfmProfileJitterErrorPeriod=prvtCfmProfileJitterErrorPeriod, prvtCfmProfileFrameLossError=prvtCfmProfileFrameLossError, prvtCfmMepAisLifetime=prvtCfmMepAisLifetime, prvtCfmProcessProfileIndex=prvtCfmProcessProfileIndex, prvtCfmProfilePriority=prvtCfmProfilePriority, prvtCfmProfileRowStatus=prvtCfmProfileRowStatus, prvtCfmProfileFrameLossEnable=prvtCfmProfileFrameLossEnable, prvtCfmMibNotifications=prvtCfmMibNotifications, prvtCfmProcessResultEntry=prvtCfmProcessResultEntry, prvtCfmFrameLossThreshold=prvtCfmFrameLossThreshold, prvtCfmMib=prvtCfmMib, prvtCfmProcessResultOneWayJitter=prvtCfmProcessResultOneWayJitter, prvtCfmProfileIndex=prvtCfmProfileIndex, prvtCfmMepTransmitLbmDelay=prvtCfmMepTransmitLbmDelay, prvtCfmLckReceived=prvtCfmLckReceived, prvtCfmProcessRowStatus=prvtCfmProcessRowStatus, prvtCfmMepTable=prvtCfmMepTable, prvtCfmMepTransmitLtmTimeout=prvtCfmMepTransmitLtmTimeout, prvtCfmProfile1wJitterError=prvtCfmProfile1wJitterError, prvtCfmLbrMacAddress=prvtCfmLbrMacAddress, prvtCfmLbrBadMsdu=prvtCfmLbrBadMsdu, prvtCfmMaAisLckVlanId=prvtCfmMaAisLckVlanId, prvtCfmLtrEntry=prvtCfmLtrEntry, prvtCfmProfileSize=prvtCfmProfileSize, prvtCfmProfileFrameLossWarning=prvtCfmProfileFrameLossWarning, prvtCfmLbrTime=prvtCfmLbrTime, prvtCfmProfileJitterWarning=prvtCfmProfileJitterWarning, prvtCfmMepTransmitLbmMaxTime=prvtCfmMepTransmitLbmMaxTime, prvtCfmLbrReceiveOrder=prvtCfmLbrReceiveOrder, prvtCfmMepTransmitLbmSentPkts=prvtCfmMepTransmitLbmSentPkts, prvtCfmProfileLatencyErrorPeriod=prvtCfmProfileLatencyErrorPeriod, prvtCfmMaAisLckVlanTable=prvtCfmMaAisLckVlanTable, prvtCfmProfileLatencyError=prvtCfmProfileLatencyError, prvtCfmProfileLatencyWarning=prvtCfmProfileLatencyWarning, prvtCfmMaCompAisLckLevel=prvtCfmMaCompAisLckLevel, prvtCfm1wJitterThreshold=prvtCfm1wJitterThreshold, prvtCfmProfileJitterEnable=prvtCfmProfileJitterEnable, prvtCfmLatencyThreshold=prvtCfmLatencyThreshold, prvtCfmMa=prvtCfmMa, prvtCfmProcessTable=prvtCfmProcessTable, prvtCfmProfile1wJitterEnable=prvtCfmProfile1wJitterEnable, prvtCfmProcessRepeatInterval=prvtCfmProcessRepeatInterval, prvtCfmJitterThreshold=prvtCfmJitterThreshold, prvtCfmLbrTable=prvtCfmLbrTable, prvtCfmProfileJitterWarningPeriod=prvtCfmProfileJitterWarningPeriod, prvtCfmProfileBucketSize=prvtCfmProfileBucketSize, prvtCfmProcessStatus=prvtCfmProcessStatus, prvtCfmMaCompNumberOfServices=prvtCfmMaCompNumberOfServices, prvtCfmProcessResultTable=prvtCfmProcessResultTable, prvtCfmLbrEntry=prvtCfmLbrEntry, prvtCfmProcessName=prvtCfmProcessName, prvtCfmProfileRate=prvtCfmProfileRate, prvtCfmMaAisLckVlanEntry=prvtCfmMaAisLckVlanEntry, prvtCfmMaAisLckVlanRowStatus=prvtCfmMaAisLckVlanRowStatus, prvtCfmProcessResultTwoWayJitter=prvtCfmProcessResultTwoWayJitter, prvtCfmProfile1wJitterWarning=prvtCfmProfile1wJitterWarning, prvtCfmMaEntry=prvtCfmMaEntry, prvtCfmProfileTableNextIndex=prvtCfmProfileTableNextIndex, prvtCfmMepSuportedRemoteMepsNo=prvtCfmMepSuportedRemoteMepsNo, prvtCfmProfileTable=prvtCfmProfileTable, prvtCfmMaCompAisLckPriority=prvtCfmMaCompAisLckPriority, prvtCfmMepLckCondition=prvtCfmMepLckCondition, prvtCfmMaAisLckVlan=prvtCfmMaAisLckVlan, prvtCfmMibConformance=prvtCfmMibConformance, prvtCfmMepTransmitLbmMinTime=prvtCfmMepTransmitLbmMinTime, prvtCfmMepTransmitMcastLbm=prvtCfmMepTransmitMcastLbm, prvtCfmMaCompAisLckEnabled=prvtCfmMaCompAisLckEnabled, prvtCfmProcessEntry=prvtCfmProcessEntry, prvtCfmProcessResultFrameloss=prvtCfmProcessResultFrameloss, prvtCfmProcessPacketType=prvtCfmProcessPacketType, prvtCfmMaCompAisLckInterval=prvtCfmMaCompAisLckInterval, prvtCfmMepAlarmSupressed=prvtCfmMepAlarmSupressed, prvtCfmMaCompServiceId=prvtCfmMaCompServiceId, prvtCfmLtrTime=prvtCfmLtrTime, prvtCfmProcessUnreturnedPkts=prvtCfmProcessUnreturnedPkts, prvtCfmProfileLatencyEnable=prvtCfmProfileLatencyEnable)
