#
# PySNMP MIB module NTPv4-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/NTPv4-MIB
# Produced by pysmi-1.1.8 at Sat Jan 15 16:24:44 2022
# On host fv-az126-328 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, MibIdentifier, ModuleIdentity, Gauge32, Counter32, Integer32, IpAddress, NotificationType, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Unsigned32, mib_2, Counter64, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "MibIdentifier", "ModuleIdentity", "Gauge32", "Counter32", "Integer32", "IpAddress", "NotificationType", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Unsigned32", "mib-2", "Counter64", "ObjectIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
Utf8String, = mibBuilder.importSymbols("SYSAPPL-MIB", "Utf8String")
ntpSnmpMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 197))
ntpSnmpMIB.setRevisions(('2010-05-17 00:00',))
if mibBuilder.loadTexts: ntpSnmpMIB.setLastUpdated('201005170000Z')
if mibBuilder.loadTexts: ntpSnmpMIB.setOrganization('The IETF NTP Working Group (ntpwg)')
ntpSnmpMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 197, 1))
ntpEntInfo = MibIdentifier((1, 3, 6, 1, 2, 1, 197, 1, 1))
ntpEntStatus = MibIdentifier((1, 3, 6, 1, 2, 1, 197, 1, 2))
ntpAssociation = MibIdentifier((1, 3, 6, 1, 2, 1, 197, 1, 3))
ntpEntControl = MibIdentifier((1, 3, 6, 1, 2, 1, 197, 1, 4))
ntpEntNotifObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 197, 1, 5))
class NtpStratum(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 16)

class NtpDateTime(TextualConvention, OctetString):
    reference = 'RFC 5905, section 6'
    status = 'current'
    displayHint = '4d:4d:4d.4d'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(16, 16), )
ntpEntSoftwareName = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 1, 1), Utf8String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntSoftwareName.setStatus('current')
ntpEntSoftwareVersion = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 1, 2), Utf8String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntSoftwareVersion.setStatus('current')
ntpEntSoftwareVendor = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 1, 3), Utf8String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntSoftwareVendor.setStatus('current')
ntpEntSystemType = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 1, 4), Utf8String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntSystemType.setStatus('current')
ntpEntTimeResolution = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntTimeResolution.setStatus('current')
ntpEntTimePrecision = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntTimePrecision.setStatus('current')
ntpEntTimeDistance = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntTimeDistance.setStatus('current')
ntpEntStatusCurrentMode = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 99))).clone(namedValues=NamedValues(("notRunning", 1), ("notSynchronized", 2), ("noneConfigured", 3), ("syncToLocal", 4), ("syncToRefclock", 5), ("syncToRemoteServer", 6), ("unknown", 99)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntStatusCurrentMode.setStatus('current')
ntpEntStatusStratum = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 2, 2), NtpStratum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntStatusStratum.setStatus('current')
ntpEntStatusActiveRefSourceId = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 2, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntStatusActiveRefSourceId.setStatus('current')
ntpEntStatusActiveRefSourceName = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 2, 4), Utf8String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntStatusActiveRefSourceName.setStatus('current')
ntpEntStatusActiveOffset = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 2, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntStatusActiveOffset.setStatus('current')
ntpEntStatusNumberOfRefSources = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 2, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntStatusNumberOfRefSources.setStatus('current')
ntpEntStatusDispersion = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 2, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntStatusDispersion.setStatus('current')
ntpEntStatusEntityUptime = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 2, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntStatusEntityUptime.setStatus('current')
ntpEntStatusDateTime = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 2, 9), NtpDateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntStatusDateTime.setStatus('current')
ntpEntStatusLeapSecond = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 2, 10), NtpDateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntStatusLeapSecond.setStatus('current')
ntpEntStatusLeapSecDirection = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 2, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntStatusLeapSecDirection.setStatus('current')
ntpEntStatusInPkts = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 2, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntStatusInPkts.setStatus('current')
ntpEntStatusOutPkts = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 2, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntStatusOutPkts.setStatus('current')
ntpEntStatusBadVersion = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 2, 14), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntStatusBadVersion.setStatus('current')
ntpEntStatusProtocolError = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 2, 15), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntStatusProtocolError.setStatus('current')
ntpEntStatusNotifications = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 2, 16), Counter32()).setUnits('notifications').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntStatusNotifications.setStatus('current')
ntpEntStatPktModeTable = MibTable((1, 3, 6, 1, 2, 1, 197, 1, 2, 17), )
if mibBuilder.loadTexts: ntpEntStatPktModeTable.setStatus('current')
ntpEntStatPktModeEntry = MibTableRow((1, 3, 6, 1, 2, 1, 197, 1, 2, 17, 1), ).setIndexNames((0, "NTPv4-MIB", "ntpEntStatPktMode"))
if mibBuilder.loadTexts: ntpEntStatPktModeEntry.setStatus('current')
ntpEntStatPktMode = MibTableColumn((1, 3, 6, 1, 2, 1, 197, 1, 2, 17, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("symetricactive", 1), ("symetricpassive", 2), ("client", 3), ("server", 4), ("broadcastserver", 5), ("broadcastclient", 6))))
if mibBuilder.loadTexts: ntpEntStatPktMode.setStatus('current')
ntpEntStatPktSent = MibTableColumn((1, 3, 6, 1, 2, 1, 197, 1, 2, 17, 1, 2), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntStatPktSent.setStatus('current')
ntpEntStatPktReceived = MibTableColumn((1, 3, 6, 1, 2, 1, 197, 1, 2, 17, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpEntStatPktReceived.setStatus('current')
ntpAssociationTable = MibTable((1, 3, 6, 1, 2, 1, 197, 1, 3, 1), )
if mibBuilder.loadTexts: ntpAssociationTable.setStatus('current')
ntpAssociationEntry = MibTableRow((1, 3, 6, 1, 2, 1, 197, 1, 3, 1, 1), ).setIndexNames((0, "NTPv4-MIB", "ntpAssocId"))
if mibBuilder.loadTexts: ntpAssociationEntry.setStatus('current')
ntpAssocId = MibTableColumn((1, 3, 6, 1, 2, 1, 197, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 99999)))
if mibBuilder.loadTexts: ntpAssocId.setStatus('current')
ntpAssocName = MibTableColumn((1, 3, 6, 1, 2, 1, 197, 1, 3, 1, 1, 2), Utf8String()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpAssocName.setStatus('current')
ntpAssocRefId = MibTableColumn((1, 3, 6, 1, 2, 1, 197, 1, 3, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpAssocRefId.setStatus('current')
ntpAssocAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 197, 1, 3, 1, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpAssocAddressType.setStatus('current')
ntpAssocAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 197, 1, 3, 1, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(8, 8), ValueSizeConstraint(16, 16), ValueSizeConstraint(20, 20), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpAssocAddress.setStatus('current')
ntpAssocOffset = MibTableColumn((1, 3, 6, 1, 2, 1, 197, 1, 3, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpAssocOffset.setStatus('current')
ntpAssocStratum = MibTableColumn((1, 3, 6, 1, 2, 1, 197, 1, 3, 1, 1, 7), NtpStratum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpAssocStratum.setStatus('current')
ntpAssocStatusJitter = MibTableColumn((1, 3, 6, 1, 2, 1, 197, 1, 3, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpAssocStatusJitter.setStatus('current')
ntpAssocStatusDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 197, 1, 3, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpAssocStatusDelay.setStatus('current')
ntpAssocStatusDispersion = MibTableColumn((1, 3, 6, 1, 2, 1, 197, 1, 3, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpAssocStatusDispersion.setStatus('current')
ntpAssociationStatisticsTable = MibTable((1, 3, 6, 1, 2, 1, 197, 1, 3, 2), )
if mibBuilder.loadTexts: ntpAssociationStatisticsTable.setStatus('current')
ntpAssociationStatisticsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 197, 1, 3, 2, 1), ).setIndexNames((0, "NTPv4-MIB", "ntpAssocId"))
if mibBuilder.loadTexts: ntpAssociationStatisticsEntry.setStatus('current')
ntpAssocStatInPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 197, 1, 3, 2, 1, 1), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpAssocStatInPkts.setStatus('current')
ntpAssocStatOutPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 197, 1, 3, 2, 1, 2), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpAssocStatOutPkts.setStatus('current')
ntpAssocStatProtocolError = MibTableColumn((1, 3, 6, 1, 2, 1, 197, 1, 3, 2, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: ntpAssocStatProtocolError.setStatus('current')
ntpEntHeartbeatInterval = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 4, 1), Unsigned32().clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpEntHeartbeatInterval.setStatus('current')
ntpEntNotifBits = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 4, 2), Bits().clone(namedValues=NamedValues(("notUsed", 0), ("entNotifModeChange", 1), ("entNotifStratumChange", 2), ("entNotifSyspeerChanged", 3), ("entNotifAddAssociation", 4), ("entNotifRemoveAssociation", 5), ("entNotifConfigChanged", 6), ("entNotifLeapSecondAnnounced", 7), ("entNotifHeartbeat", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ntpEntNotifBits.setStatus('current')
ntpEntNotifMessage = MibScalar((1, 3, 6, 1, 2, 1, 197, 1, 5, 1), Utf8String().clone('no event')).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: ntpEntNotifMessage.setStatus('current')
ntpEntNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 197, 0))
ntpEntNotifModeChange = NotificationType((1, 3, 6, 1, 2, 1, 197, 0, 1)).setObjects(("NTPv4-MIB", "ntpEntStatusCurrentMode"))
if mibBuilder.loadTexts: ntpEntNotifModeChange.setStatus('current')
ntpEntNotifStratumChange = NotificationType((1, 3, 6, 1, 2, 1, 197, 0, 2)).setObjects(("NTPv4-MIB", "ntpEntStatusDateTime"), ("NTPv4-MIB", "ntpEntStatusStratum"), ("NTPv4-MIB", "ntpEntNotifMessage"))
if mibBuilder.loadTexts: ntpEntNotifStratumChange.setStatus('current')
ntpEntNotifSyspeerChanged = NotificationType((1, 3, 6, 1, 2, 1, 197, 0, 3)).setObjects(("NTPv4-MIB", "ntpEntStatusDateTime"), ("NTPv4-MIB", "ntpEntStatusActiveRefSourceId"), ("NTPv4-MIB", "ntpEntNotifMessage"))
if mibBuilder.loadTexts: ntpEntNotifSyspeerChanged.setStatus('current')
ntpEntNotifAddAssociation = NotificationType((1, 3, 6, 1, 2, 1, 197, 0, 4)).setObjects(("NTPv4-MIB", "ntpEntStatusDateTime"), ("NTPv4-MIB", "ntpAssocName"), ("NTPv4-MIB", "ntpEntNotifMessage"))
if mibBuilder.loadTexts: ntpEntNotifAddAssociation.setStatus('current')
ntpEntNotifRemoveAssociation = NotificationType((1, 3, 6, 1, 2, 1, 197, 0, 5)).setObjects(("NTPv4-MIB", "ntpEntStatusDateTime"), ("NTPv4-MIB", "ntpAssocName"), ("NTPv4-MIB", "ntpEntNotifMessage"))
if mibBuilder.loadTexts: ntpEntNotifRemoveAssociation.setStatus('current')
ntpEntNotifConfigChanged = NotificationType((1, 3, 6, 1, 2, 1, 197, 0, 6)).setObjects(("NTPv4-MIB", "ntpEntStatusDateTime"), ("NTPv4-MIB", "ntpEntNotifMessage"))
if mibBuilder.loadTexts: ntpEntNotifConfigChanged.setStatus('current')
ntpEntNotifLeapSecondAnnounced = NotificationType((1, 3, 6, 1, 2, 1, 197, 0, 7)).setObjects(("NTPv4-MIB", "ntpEntStatusDateTime"), ("NTPv4-MIB", "ntpEntNotifMessage"))
if mibBuilder.loadTexts: ntpEntNotifLeapSecondAnnounced.setStatus('current')
ntpEntNotifHeartbeat = NotificationType((1, 3, 6, 1, 2, 1, 197, 0, 8)).setObjects(("NTPv4-MIB", "ntpEntStatusDateTime"), ("NTPv4-MIB", "ntpEntStatusCurrentMode"), ("NTPv4-MIB", "ntpEntHeartbeatInterval"), ("NTPv4-MIB", "ntpEntNotifMessage"))
if mibBuilder.loadTexts: ntpEntNotifHeartbeat.setStatus('current')
ntpEntConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 197, 2))
ntpEntCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 197, 2, 1))
ntpEntGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 197, 2, 2))
ntpEntNTPCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 197, 2, 1, 1)).setObjects(("NTPv4-MIB", "ntpEntObjectsGroup1"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntpEntNTPCompliance = ntpEntNTPCompliance.setStatus('current')
ntpEntSNTPCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 197, 2, 1, 2)).setObjects(("NTPv4-MIB", "ntpEntObjectsGroup1"), ("NTPv4-MIB", "ntpEntObjectsGroup2"), ("NTPv4-MIB", "ntpEntNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntpEntSNTPCompliance = ntpEntSNTPCompliance.setStatus('current')
ntpEntObjectsGroup1 = ObjectGroup((1, 3, 6, 1, 2, 1, 197, 2, 2, 1)).setObjects(("NTPv4-MIB", "ntpEntSoftwareName"), ("NTPv4-MIB", "ntpEntSoftwareVersion"), ("NTPv4-MIB", "ntpEntSoftwareVendor"), ("NTPv4-MIB", "ntpEntSystemType"), ("NTPv4-MIB", "ntpEntStatusEntityUptime"), ("NTPv4-MIB", "ntpEntStatusDateTime"), ("NTPv4-MIB", "ntpAssocName"), ("NTPv4-MIB", "ntpAssocRefId"), ("NTPv4-MIB", "ntpAssocAddressType"), ("NTPv4-MIB", "ntpAssocAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntpEntObjectsGroup1 = ntpEntObjectsGroup1.setStatus('current')
ntpEntObjectsGroup2 = ObjectGroup((1, 3, 6, 1, 2, 1, 197, 2, 2, 2)).setObjects(("NTPv4-MIB", "ntpEntTimeResolution"), ("NTPv4-MIB", "ntpEntTimePrecision"), ("NTPv4-MIB", "ntpEntTimeDistance"), ("NTPv4-MIB", "ntpEntStatusCurrentMode"), ("NTPv4-MIB", "ntpEntStatusStratum"), ("NTPv4-MIB", "ntpEntStatusActiveRefSourceId"), ("NTPv4-MIB", "ntpEntStatusActiveRefSourceName"), ("NTPv4-MIB", "ntpEntStatusActiveOffset"), ("NTPv4-MIB", "ntpEntStatusNumberOfRefSources"), ("NTPv4-MIB", "ntpEntStatusDispersion"), ("NTPv4-MIB", "ntpEntStatusLeapSecond"), ("NTPv4-MIB", "ntpEntStatusLeapSecDirection"), ("NTPv4-MIB", "ntpEntStatusInPkts"), ("NTPv4-MIB", "ntpEntStatusOutPkts"), ("NTPv4-MIB", "ntpEntStatusBadVersion"), ("NTPv4-MIB", "ntpEntStatusProtocolError"), ("NTPv4-MIB", "ntpEntStatusNotifications"), ("NTPv4-MIB", "ntpEntStatPktSent"), ("NTPv4-MIB", "ntpEntStatPktReceived"), ("NTPv4-MIB", "ntpAssocOffset"), ("NTPv4-MIB", "ntpAssocStratum"), ("NTPv4-MIB", "ntpAssocStatusJitter"), ("NTPv4-MIB", "ntpAssocStatusDelay"), ("NTPv4-MIB", "ntpAssocStatusDispersion"), ("NTPv4-MIB", "ntpAssocStatInPkts"), ("NTPv4-MIB", "ntpAssocStatOutPkts"), ("NTPv4-MIB", "ntpAssocStatProtocolError"), ("NTPv4-MIB", "ntpEntHeartbeatInterval"), ("NTPv4-MIB", "ntpEntNotifBits"), ("NTPv4-MIB", "ntpEntNotifMessage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntpEntObjectsGroup2 = ntpEntObjectsGroup2.setStatus('current')
ntpEntNotifGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 197, 2, 2, 3)).setObjects(("NTPv4-MIB", "ntpEntNotifModeChange"), ("NTPv4-MIB", "ntpEntNotifStratumChange"), ("NTPv4-MIB", "ntpEntNotifSyspeerChanged"), ("NTPv4-MIB", "ntpEntNotifAddAssociation"), ("NTPv4-MIB", "ntpEntNotifRemoveAssociation"), ("NTPv4-MIB", "ntpEntNotifConfigChanged"), ("NTPv4-MIB", "ntpEntNotifLeapSecondAnnounced"), ("NTPv4-MIB", "ntpEntNotifHeartbeat"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ntpEntNotifGroup = ntpEntNotifGroup.setStatus('current')
mibBuilder.exportSymbols("NTPv4-MIB", ntpEntNTPCompliance=ntpEntNTPCompliance, ntpEntSNTPCompliance=ntpEntSNTPCompliance, ntpEntNotifRemoveAssociation=ntpEntNotifRemoveAssociation, ntpAssocStatInPkts=ntpAssocStatInPkts, ntpEntNotifConfigChanged=ntpEntNotifConfigChanged, ntpEntNotifAddAssociation=ntpEntNotifAddAssociation, ntpAssocAddress=ntpAssocAddress, ntpAssocId=ntpAssocId, ntpEntTimePrecision=ntpEntTimePrecision, ntpEntTimeDistance=ntpEntTimeDistance, ntpEntNotifObjects=ntpEntNotifObjects, ntpAssocAddressType=ntpAssocAddressType, ntpEntStatusProtocolError=ntpEntStatusProtocolError, PYSNMP_MODULE_ID=ntpSnmpMIB, ntpAssocStatusJitter=ntpAssocStatusJitter, ntpAssocName=ntpAssocName, ntpEntNotifications=ntpEntNotifications, ntpEntSystemType=ntpEntSystemType, ntpEntNotifBits=ntpEntNotifBits, ntpEntStatusActiveOffset=ntpEntStatusActiveOffset, ntpAssocStratum=ntpAssocStratum, ntpEntInfo=ntpEntInfo, NtpDateTime=NtpDateTime, ntpEntStatusActiveRefSourceName=ntpEntStatusActiveRefSourceName, ntpEntStatusEntityUptime=ntpEntStatusEntityUptime, ntpEntObjectsGroup1=ntpEntObjectsGroup1, ntpEntCompliances=ntpEntCompliances, ntpEntStatusOutPkts=ntpEntStatusOutPkts, ntpSnmpMIBObjects=ntpSnmpMIBObjects, ntpEntStatusNumberOfRefSources=ntpEntStatusNumberOfRefSources, ntpEntNotifGroup=ntpEntNotifGroup, ntpEntTimeResolution=ntpEntTimeResolution, ntpEntStatusLeapSecond=ntpEntStatusLeapSecond, ntpEntNotifStratumChange=ntpEntNotifStratumChange, ntpEntStatusLeapSecDirection=ntpEntStatusLeapSecDirection, ntpAssocStatProtocolError=ntpAssocStatProtocolError, ntpEntStatPktModeTable=ntpEntStatPktModeTable, ntpEntStatPktReceived=ntpEntStatPktReceived, ntpEntGroups=ntpEntGroups, ntpEntNotifLeapSecondAnnounced=ntpEntNotifLeapSecondAnnounced, NtpStratum=NtpStratum, ntpEntStatus=ntpEntStatus, ntpSnmpMIB=ntpSnmpMIB, ntpEntStatusInPkts=ntpEntStatusInPkts, ntpEntStatusNotifications=ntpEntStatusNotifications, ntpAssociation=ntpAssociation, ntpEntStatusDateTime=ntpEntStatusDateTime, ntpEntStatPktModeEntry=ntpEntStatPktModeEntry, ntpEntStatPktMode=ntpEntStatPktMode, ntpAssociationTable=ntpAssociationTable, ntpEntStatusCurrentMode=ntpEntStatusCurrentMode, ntpEntStatusBadVersion=ntpEntStatusBadVersion, ntpEntSoftwareVersion=ntpEntSoftwareVersion, ntpEntStatusActiveRefSourceId=ntpEntStatusActiveRefSourceId, ntpAssocStatusDelay=ntpAssocStatusDelay, ntpAssociationStatisticsTable=ntpAssociationStatisticsTable, ntpEntHeartbeatInterval=ntpEntHeartbeatInterval, ntpAssocOffset=ntpAssocOffset, ntpEntStatPktSent=ntpEntStatPktSent, ntpEntNotifHeartbeat=ntpEntNotifHeartbeat, ntpAssocRefId=ntpAssocRefId, ntpEntControl=ntpEntControl, ntpEntStatusStratum=ntpEntStatusStratum, ntpAssociationStatisticsEntry=ntpAssociationStatisticsEntry, ntpEntSoftwareName=ntpEntSoftwareName, ntpEntNotifModeChange=ntpEntNotifModeChange, ntpEntStatusDispersion=ntpEntStatusDispersion, ntpAssocStatOutPkts=ntpAssocStatOutPkts, ntpEntNotifMessage=ntpEntNotifMessage, ntpAssociationEntry=ntpAssociationEntry, ntpEntSoftwareVendor=ntpEntSoftwareVendor, ntpEntNotifSyspeerChanged=ntpEntNotifSyspeerChanged, ntpAssocStatusDispersion=ntpAssocStatusDispersion, ntpEntConformance=ntpEntConformance, ntpEntObjectsGroup2=ntpEntObjectsGroup2)
