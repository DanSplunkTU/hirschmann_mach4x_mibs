#
# PySNMP MIB module ACCOUNTING-CONTROL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/ACCOUNTING-CONTROL-MIB
# Produced by pysmi-1.1.8 at Tue Jan 11 20:23:32 2022
# On host fv-az42-180 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ciscoExperiment, = mibBuilder.importSymbols("CISCO-SMI", "ciscoExperiment")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, Unsigned32, Gauge32, MibIdentifier, iso, Integer32, ModuleIdentity, Bits, ObjectIdentity, Counter64, Counter32, IpAddress, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Unsigned32", "Gauge32", "MibIdentifier", "iso", "Integer32", "ModuleIdentity", "Bits", "ObjectIdentity", "Counter64", "Counter32", "IpAddress", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TestAndIncr, TruthValue, TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TestAndIncr", "TruthValue", "TextualConvention", "RowStatus", "DisplayString")
accountingControlMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 10, 17))
if mibBuilder.loadTexts: accountingControlMIB.setLastUpdated('9611052000Z')
if mibBuilder.loadTexts: accountingControlMIB.setOrganization('IETF AToM MIB Working Group')
acctngMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 17, 1))
acctngSelectionControl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 1))
acctngFileControl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 2))
acctngInterfaceControl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 3))
acctngTrapControl = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 4))
class DataCollectionSubtree(TextualConvention, ObjectIdentifier):
    status = 'current'

class DataCollectionList(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 8)

class FileIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 65535)

acctngSelectionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 1, 1), )
if mibBuilder.loadTexts: acctngSelectionTable.setStatus('current')
acctngSelectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 1, 1, 1), ).setIndexNames((0, "ACCOUNTING-CONTROL-MIB", "acctngSelectionIndex"))
if mibBuilder.loadTexts: acctngSelectionEntry.setStatus('current')
acctngSelectionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: acctngSelectionIndex.setStatus('current')
acctngSelectionSubtree = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 1, 1, 1, 2), DataCollectionSubtree()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acctngSelectionSubtree.setStatus('current')
acctngSelectionList = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 1, 1, 1, 3), DataCollectionList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acctngSelectionList.setStatus('current')
acctngSelectionFile = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 1, 1, 1, 4), FileIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acctngSelectionFile.setStatus('current')
acctngSelectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 1, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acctngSelectionType.setStatus('current')
acctngSelectionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 1, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acctngSelectionRowStatus.setStatus('current')
acctngFileTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 2, 1), )
if mibBuilder.loadTexts: acctngFileTable.setStatus('current')
acctngFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 2, 1, 1), ).setIndexNames((0, "ACCOUNTING-CONTROL-MIB", "acctngFileIndex"))
if mibBuilder.loadTexts: acctngFileEntry.setStatus('current')
acctngFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 2, 1, 1, 1), FileIndex())
if mibBuilder.loadTexts: acctngFileIndex.setStatus('current')
acctngFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acctngFileName.setStatus('current')
acctngFileNameSuffix = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acctngFileNameSuffix.setStatus('current')
acctngFileDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 2, 1, 1, 4), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acctngFileDescription.setStatus('current')
acctngFileCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 1), ("cmdInProgress", 2), ("swapToNewFile", 3), ("collectNow", 4))).clone('idle')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acctngFileCommand.setStatus('current')
acctngFileMaximumSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 2147483647)).clone(5000000)).setUnits('bytes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: acctngFileMaximumSize.setStatus('current')
acctngFileCurrentSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: acctngFileCurrentSize.setStatus('current')
acctngFileFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("ber", 2))).clone('ber')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acctngFileFormat.setStatus('current')
acctngFileCollectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 2, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acctngFileCollectMode.setStatus('current')
acctngFileCollectFailedAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 2, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acctngFileCollectFailedAttempts.setStatus('current')
acctngFileInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 86400)).clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: acctngFileInterval.setStatus('current')
acctngFileMinAge = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 86400)).clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: acctngFileMinAge.setStatus('current')
acctngFileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 2, 1, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: acctngFileRowStatus.setStatus('current')
acctngAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acctngAdminStatus.setStatus('current')
acctngOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acctngOperStatus.setStatus('current')
acctngProtection = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 3, 3), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acctngProtection.setStatus('current')
acctngAgentMode = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("swapOnCommand", 1), ("swapOnFull", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acctngAgentMode.setStatus('current')
acctngInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 3, 5), )
if mibBuilder.loadTexts: acctngInterfaceTable.setStatus('current')
acctngInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 3, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: acctngInterfaceEntry.setStatus('current')
acctngInterfaceEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 3, 5, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acctngInterfaceEnable.setStatus('current')
acctngControlTrapThreshold = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acctngControlTrapThreshold.setStatus('current')
acctngControlTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 9, 10, 17, 1, 4, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acctngControlTrapEnable.setStatus('current')
acctngNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 17, 3))
acctngNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 17, 3, 0))
acctngFileNearlyFull = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 17, 3, 0, 1)).setObjects(("ACCOUNTING-CONTROL-MIB", "acctngFileName"), ("ACCOUNTING-CONTROL-MIB", "acctngFileMaximumSize"), ("ACCOUNTING-CONTROL-MIB", "acctngControlTrapThreshold"))
if mibBuilder.loadTexts: acctngFileNearlyFull.setStatus('current')
acctngFileFull = NotificationType((1, 3, 6, 1, 4, 1, 9, 10, 17, 3, 0, 2)).setObjects(("ACCOUNTING-CONTROL-MIB", "acctngFileName"), ("ACCOUNTING-CONTROL-MIB", "acctngFileMaximumSize"))
if mibBuilder.loadTexts: acctngFileFull.setStatus('current')
acctngConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 17, 4))
acctngGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 17, 4, 1))
acctngCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 10, 17, 4, 2))
acctngCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 10, 17, 4, 2, 1)).setObjects(("ACCOUNTING-CONTROL-MIB", "acctngBasicGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acctngCompliance = acctngCompliance.setStatus('current')
acctngBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 10, 17, 4, 1, 1)).setObjects(("ACCOUNTING-CONTROL-MIB", "acctngSelectionSubtree"), ("ACCOUNTING-CONTROL-MIB", "acctngSelectionList"), ("ACCOUNTING-CONTROL-MIB", "acctngSelectionFile"), ("ACCOUNTING-CONTROL-MIB", "acctngSelectionType"), ("ACCOUNTING-CONTROL-MIB", "acctngSelectionRowStatus"), ("ACCOUNTING-CONTROL-MIB", "acctngFileName"), ("ACCOUNTING-CONTROL-MIB", "acctngFileNameSuffix"), ("ACCOUNTING-CONTROL-MIB", "acctngFileDescription"), ("ACCOUNTING-CONTROL-MIB", "acctngFileCommand"), ("ACCOUNTING-CONTROL-MIB", "acctngFileMaximumSize"), ("ACCOUNTING-CONTROL-MIB", "acctngFileCurrentSize"), ("ACCOUNTING-CONTROL-MIB", "acctngFileRowStatus"), ("ACCOUNTING-CONTROL-MIB", "acctngFileFormat"), ("ACCOUNTING-CONTROL-MIB", "acctngFileCollectMode"), ("ACCOUNTING-CONTROL-MIB", "acctngFileCollectFailedAttempts"), ("ACCOUNTING-CONTROL-MIB", "acctngFileInterval"), ("ACCOUNTING-CONTROL-MIB", "acctngFileMinAge"), ("ACCOUNTING-CONTROL-MIB", "acctngAdminStatus"), ("ACCOUNTING-CONTROL-MIB", "acctngOperStatus"), ("ACCOUNTING-CONTROL-MIB", "acctngProtection"), ("ACCOUNTING-CONTROL-MIB", "acctngAgentMode"), ("ACCOUNTING-CONTROL-MIB", "acctngInterfaceEnable"), ("ACCOUNTING-CONTROL-MIB", "acctngControlTrapThreshold"), ("ACCOUNTING-CONTROL-MIB", "acctngControlTrapEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    acctngBasicGroup = acctngBasicGroup.setStatus('current')
mibBuilder.exportSymbols("ACCOUNTING-CONTROL-MIB", acctngFileMinAge=acctngFileMinAge, acctngSelectionRowStatus=acctngSelectionRowStatus, acctngOperStatus=acctngOperStatus, acctngFileTable=acctngFileTable, acctngGroups=acctngGroups, acctngInterfaceEntry=acctngInterfaceEntry, accountingControlMIB=accountingControlMIB, acctngCompliances=acctngCompliances, acctngBasicGroup=acctngBasicGroup, acctngNotifications=acctngNotifications, acctngProtection=acctngProtection, acctngFileFull=acctngFileFull, acctngFileNameSuffix=acctngFileNameSuffix, acctngFileIndex=acctngFileIndex, acctngInterfaceEnable=acctngInterfaceEnable, acctngSelectionEntry=acctngSelectionEntry, acctngFileDescription=acctngFileDescription, acctngCompliance=acctngCompliance, PYSNMP_MODULE_ID=accountingControlMIB, acctngMIBObjects=acctngMIBObjects, acctngSelectionList=acctngSelectionList, acctngTrapControl=acctngTrapControl, FileIndex=FileIndex, acctngSelectionFile=acctngSelectionFile, acctngSelectionIndex=acctngSelectionIndex, acctngFileEntry=acctngFileEntry, acctngFileCurrentSize=acctngFileCurrentSize, acctngControlTrapEnable=acctngControlTrapEnable, acctngFileInterval=acctngFileInterval, acctngNotifyPrefix=acctngNotifyPrefix, DataCollectionList=DataCollectionList, acctngAgentMode=acctngAgentMode, acctngFileCollectMode=acctngFileCollectMode, acctngSelectionTable=acctngSelectionTable, acctngFileNearlyFull=acctngFileNearlyFull, acctngConformance=acctngConformance, acctngFileFormat=acctngFileFormat, acctngSelectionType=acctngSelectionType, acctngAdminStatus=acctngAdminStatus, acctngFileRowStatus=acctngFileRowStatus, acctngFileName=acctngFileName, acctngFileMaximumSize=acctngFileMaximumSize, acctngInterfaceTable=acctngInterfaceTable, DataCollectionSubtree=DataCollectionSubtree, acctngFileCollectFailedAttempts=acctngFileCollectFailedAttempts, acctngControlTrapThreshold=acctngControlTrapThreshold, acctngSelectionControl=acctngSelectionControl, acctngFileCommand=acctngFileCommand, acctngInterfaceControl=acctngInterfaceControl, acctngSelectionSubtree=acctngSelectionSubtree, acctngFileControl=acctngFileControl)
