#
# PySNMP MIB module HC-RMON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/HC-RMON-MIB
# Produced by pysmi-1.1.8 at Sat Jan 15 05:10:45 2022
# On host fv-az77-149 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
etherHistoryIndex, etherHistorySampleIndex, hostTimeCreationOrder, hostAddress, hostTopNReport, matrix, captureBufferControlIndex, hostTopN, captureBufferIndex, hostTopNControlEntry, matrixDSDestAddress, matrixDSSourceAddress, matrixSDIndex, hostTopNIndex, capture, history, statistics, rmon, matrixSDDestAddress, hostTimeIndex, hosts, matrixDSIndex, hostIndex, etherStatsIndex, matrixSDSourceAddress, OwnerString = mibBuilder.importSymbols("RMON-MIB", "etherHistoryIndex", "etherHistorySampleIndex", "hostTimeCreationOrder", "hostAddress", "hostTopNReport", "matrix", "captureBufferControlIndex", "hostTopN", "captureBufferIndex", "hostTopNControlEntry", "matrixDSDestAddress", "matrixDSSourceAddress", "matrixSDIndex", "hostTopNIndex", "capture", "history", "statistics", "rmon", "matrixSDDestAddress", "hostTimeIndex", "hosts", "matrixDSIndex", "hostIndex", "etherStatsIndex", "matrixSDSourceAddress", "OwnerString")
nlMatrixTopNIndex, alHost, hlHostControlIndex, protocolDist, usrHistorySampleIndex, alMatrixTopNControlIndex, rmonConformance, nlMatrixDSSourceAddress, alMatrixTopNIndex, nlHostTimeMark, alMatrix, usrHistoryControlIndex, alMatrixDSTimeMark, nlHostAddress, nlMatrixSDTimeMark, alMatrixTopNControlEntry, protocolDirLocalIndex, nlMatrixSDSourceAddress, probeConfig, nlMatrixTopNControlEntry, nlMatrixDSTimeMark, protocolDistControlIndex, nlMatrixDSDestAddress, usrHistoryObjectIndex, nlHost, nlMatrixSDDestAddress, usrHistory, nlMatrixTopNControlIndex, alHostTimeMark, hlMatrixControlIndex, alMatrixSDTimeMark, nlMatrix, ZeroBasedCounter32 = mibBuilder.importSymbols("RMON2-MIB", "nlMatrixTopNIndex", "alHost", "hlHostControlIndex", "protocolDist", "usrHistorySampleIndex", "alMatrixTopNControlIndex", "rmonConformance", "nlMatrixDSSourceAddress", "alMatrixTopNIndex", "nlHostTimeMark", "alMatrix", "usrHistoryControlIndex", "alMatrixDSTimeMark", "nlHostAddress", "nlMatrixSDTimeMark", "alMatrixTopNControlEntry", "protocolDirLocalIndex", "nlMatrixSDSourceAddress", "probeConfig", "nlMatrixTopNControlEntry", "nlMatrixDSTimeMark", "protocolDistControlIndex", "nlMatrixDSDestAddress", "usrHistoryObjectIndex", "nlHost", "nlMatrixSDDestAddress", "usrHistory", "nlMatrixTopNControlIndex", "alHostTimeMark", "hlMatrixControlIndex", "alMatrixSDTimeMark", "nlMatrix", "ZeroBasedCounter32")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, Integer32, ModuleIdentity, NotificationType, ObjectIdentity, Gauge32, Counter64, TimeTicks, Bits, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "Integer32", "ModuleIdentity", "NotificationType", "ObjectIdentity", "Gauge32", "Counter64", "TimeTicks", "Bits", "Unsigned32", "MibIdentifier")
RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString")
hcRMON = ModuleIdentity((1, 3, 6, 1, 2, 1, 16, 20, 8))
if mibBuilder.loadTexts: hcRMON.setLastUpdated('9702120000Z')
if mibBuilder.loadTexts: hcRMON.setOrganization('IETF RMON MIB Working Group')
mediaIndependentStats = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 21))
class ZeroBasedCounter64(TextualConvention, Counter64):
    status = 'current'

class RmonGauge64(TextualConvention, Counter64):
    status = 'current'

mediaIndependentTable = MibTable((1, 3, 6, 1, 2, 1, 16, 21, 1), )
if mibBuilder.loadTexts: mediaIndependentTable.setStatus('current')
mediaIndependentEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 21, 1, 1), ).setIndexNames((0, "HC-RMON-MIB", "mediaIndependentIndex"))
if mibBuilder.loadTexts: mediaIndependentEntry.setStatus('current')
mediaIndependentIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentIndex.setStatus('current')
mediaIndependentDataSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 2), ObjectIdentifier()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mediaIndependentDataSource.setStatus('current')
mediaIndependentDropEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentDropEvents.setStatus('current')
mediaIndependentDroppedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentDroppedFrames.setStatus('current')
mediaIndependentInPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentInPkts.setStatus('current')
mediaIndependentInOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentInOverflowPkts.setStatus('current')
mediaIndependentInHighCapacityPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentInHighCapacityPkts.setStatus('current')
mediaIndependentOutPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentOutPkts.setStatus('current')
mediaIndependentOutOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentOutOverflowPkts.setStatus('current')
mediaIndependentOutHighCapacityPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentOutHighCapacityPkts.setStatus('current')
mediaIndependentInOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentInOctets.setStatus('current')
mediaIndependentInOverflowOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentInOverflowOctets.setStatus('current')
mediaIndependentInHighCapacityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentInHighCapacityOctets.setStatus('current')
mediaIndependentOutOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentOutOctets.setStatus('current')
mediaIndependentOutOverflowOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentOutOverflowOctets.setStatus('current')
mediaIndependentOutHighCapacityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentOutHighCapacityOctets.setStatus('current')
mediaIndependentInNUCastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentInNUCastPkts.setStatus('current')
mediaIndependentInNUCastOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentInNUCastOverflowPkts.setStatus('current')
mediaIndependentInNUCastHighCapacityPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentInNUCastHighCapacityPkts.setStatus('current')
mediaIndependentOutNUCastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentOutNUCastPkts.setStatus('current')
mediaIndependentOutNUCastOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentOutNUCastOverflowPkts.setStatus('current')
mediaIndependentOutNUCastHighCapacityPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentOutNUCastHighCapacityPkts.setStatus('current')
mediaIndependentInErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentInErrors.setStatus('current')
mediaIndependentOutErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentOutErrors.setStatus('current')
mediaIndependentInputSpeed = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentInputSpeed.setStatus('current')
mediaIndependentOutputSpeed = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndependentOutputSpeed.setStatus('current')
mediaIndependentOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 27), OwnerString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mediaIndependentOwner.setStatus('current')
mediaIndependentStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 21, 1, 1, 28), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mediaIndependentStatus.setStatus('current')
etherStatsHighCapacityTable = MibTable((1, 3, 6, 1, 2, 1, 16, 1, 7), )
if mibBuilder.loadTexts: etherStatsHighCapacityTable.setStatus('current')
etherStatsHighCapacityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 1, 7, 1), ).setIndexNames((0, "RMON-MIB", "etherStatsIndex"))
if mibBuilder.loadTexts: etherStatsHighCapacityEntry.setStatus('current')
etherStatsHighCapacityOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsHighCapacityOverflowPkts.setStatus('current')
etherStatsHighCapacityPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsHighCapacityPkts.setStatus('current')
etherStatsHighCapacityOverflowOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsHighCapacityOverflowOctets.setStatus('current')
etherStatsHighCapacityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsHighCapacityOctets.setStatus('current')
etherStatsHighCapacityOverflowPkts64Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsHighCapacityOverflowPkts64Octets.setStatus('current')
etherStatsHighCapacityPkts64Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsHighCapacityPkts64Octets.setStatus('current')
etherStatsHighCapacityOverflowPkts65to127Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsHighCapacityOverflowPkts65to127Octets.setStatus('current')
etherStatsHighCapacityPkts65to127Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsHighCapacityPkts65to127Octets.setStatus('current')
etherStatsHighCapacityOverflowPkts128to255Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsHighCapacityOverflowPkts128to255Octets.setStatus('current')
etherStatsHighCapacityPkts128to255Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsHighCapacityPkts128to255Octets.setStatus('current')
etherStatsHighCapacityOverflowPkts256to511Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsHighCapacityOverflowPkts256to511Octets.setStatus('current')
etherStatsHighCapacityPkts256to511Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsHighCapacityPkts256to511Octets.setStatus('current')
etherStatsHighCapacityOverflowPkts512to1023Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsHighCapacityOverflowPkts512to1023Octets.setStatus('current')
etherStatsHighCapacityPkts512to1023Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsHighCapacityPkts512to1023Octets.setStatus('current')
etherStatsHighCapacityOverflowPkts1024to1518Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsHighCapacityOverflowPkts1024to1518Octets.setStatus('current')
etherStatsHighCapacityPkts1024to1518Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 7, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherStatsHighCapacityPkts1024to1518Octets.setStatus('current')
etherHistoryHighCapacityTable = MibTable((1, 3, 6, 1, 2, 1, 16, 2, 6), )
if mibBuilder.loadTexts: etherHistoryHighCapacityTable.setStatus('current')
etherHistoryHighCapacityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 2, 6, 1), ).setIndexNames((0, "RMON-MIB", "etherHistoryIndex"), (0, "RMON-MIB", "etherHistorySampleIndex"))
if mibBuilder.loadTexts: etherHistoryHighCapacityEntry.setStatus('current')
etherHistoryHighCapacityOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 6, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryHighCapacityOverflowPkts.setStatus('current')
etherHistoryHighCapacityPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 6, 1, 2), RmonGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryHighCapacityPkts.setStatus('current')
etherHistoryHighCapacityOverflowOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 6, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryHighCapacityOverflowOctets.setStatus('current')
etherHistoryHighCapacityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 6, 1, 4), RmonGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: etherHistoryHighCapacityOctets.setStatus('current')
hostHighCapacityTable = MibTable((1, 3, 6, 1, 2, 1, 16, 4, 5), )
if mibBuilder.loadTexts: hostHighCapacityTable.setStatus('current')
hostHighCapacityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 4, 5, 1), ).setIndexNames((0, "RMON-MIB", "hostIndex"), (0, "RMON-MIB", "hostAddress"))
if mibBuilder.loadTexts: hostHighCapacityEntry.setStatus('current')
hostHighCapacityInOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostHighCapacityInOverflowPkts.setStatus('current')
hostHighCapacityInPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostHighCapacityInPkts.setStatus('current')
hostHighCapacityOutOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostHighCapacityOutOverflowPkts.setStatus('current')
hostHighCapacityOutPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostHighCapacityOutPkts.setStatus('current')
hostHighCapacityInOverflowOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostHighCapacityInOverflowOctets.setStatus('current')
hostHighCapacityInOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostHighCapacityInOctets.setStatus('current')
hostHighCapacityOutOverflowOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostHighCapacityOutOverflowOctets.setStatus('current')
hostHighCapacityOutOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostHighCapacityOutOctets.setStatus('current')
hostTimeHighCapacityTable = MibTable((1, 3, 6, 1, 2, 1, 16, 4, 6), )
if mibBuilder.loadTexts: hostTimeHighCapacityTable.setStatus('current')
hostTimeHighCapacityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 4, 6, 1), ).setIndexNames((0, "RMON-MIB", "hostTimeIndex"), (0, "RMON-MIB", "hostTimeCreationOrder"))
if mibBuilder.loadTexts: hostTimeHighCapacityEntry.setStatus('current')
hostTimeHighCapacityInOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeHighCapacityInOverflowPkts.setStatus('current')
hostTimeHighCapacityInPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeHighCapacityInPkts.setStatus('current')
hostTimeHighCapacityOutOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeHighCapacityOutOverflowPkts.setStatus('current')
hostTimeHighCapacityOutPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeHighCapacityOutPkts.setStatus('current')
hostTimeHighCapacityInOverflowOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeHighCapacityInOverflowOctets.setStatus('current')
hostTimeHighCapacityInOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeHighCapacityInOctets.setStatus('current')
hostTimeHighCapacityOutOverflowOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeHighCapacityOutOverflowOctets.setStatus('current')
hostTimeHighCapacityOutOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 4, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTimeHighCapacityOutOctets.setStatus('current')
hostTopNRateBase = MibScalar((1, 3, 6, 1, 2, 1, 16, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("hostTopNInPkts", 1), ("hostTopNOutPkts", 2), ("hostTopNInOctets", 3), ("hostTopNOutOctets", 4), ("hostTopNOutErrors", 5), ("hostTopNOutBroadcastPkts", 6), ("hostTopNOutMulticastPkts", 7), ("hostTopNHCInPkts", 8), ("hostTopNHCOutPkts", 9), ("hostTopNHCInOctets", 10), ("hostTopNHCOutOctets", 11)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hostTopNRateBase.setStatus('current')
hostTopNHighCapacityTable = MibTable((1, 3, 6, 1, 2, 1, 16, 5, 3), )
if mibBuilder.loadTexts: hostTopNHighCapacityTable.setStatus('current')
hostTopNHighCapacityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 5, 3, 1), ).setIndexNames((0, "RMON-MIB", "hostTopNReport"), (0, "RMON-MIB", "hostTopNIndex"))
if mibBuilder.loadTexts: hostTopNHighCapacityEntry.setStatus('current')
hostTopNHighCapacityBaseRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 3, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTopNHighCapacityBaseRate.setStatus('current')
hostTopNHighCapacityOverflowRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTopNHighCapacityOverflowRate.setStatus('current')
hostTopNHighCapacityRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 5, 3, 1, 3), RmonGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostTopNHighCapacityRate.setStatus('current')
matrixSDHighCapacityTable = MibTable((1, 3, 6, 1, 2, 1, 16, 6, 5), )
if mibBuilder.loadTexts: matrixSDHighCapacityTable.setStatus('current')
matrixSDHighCapacityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 6, 5, 1), ).setIndexNames((0, "RMON-MIB", "matrixSDIndex"), (0, "RMON-MIB", "matrixSDSourceAddress"), (0, "RMON-MIB", "matrixSDDestAddress"))
if mibBuilder.loadTexts: matrixSDHighCapacityEntry.setStatus('current')
matrixSDHighCapacityOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixSDHighCapacityOverflowPkts.setStatus('current')
matrixSDHighCapacityPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixSDHighCapacityPkts.setStatus('current')
matrixSDHighCapacityOverflowOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixSDHighCapacityOverflowOctets.setStatus('current')
matrixSDHighCapacityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixSDHighCapacityOctets.setStatus('current')
matrixDSHighCapacityTable = MibTable((1, 3, 6, 1, 2, 1, 16, 6, 6), )
if mibBuilder.loadTexts: matrixDSHighCapacityTable.setStatus('current')
matrixDSHighCapacityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 6, 6, 1), ).setIndexNames((0, "RMON-MIB", "matrixDSIndex"), (0, "RMON-MIB", "matrixDSDestAddress"), (0, "RMON-MIB", "matrixDSSourceAddress"))
if mibBuilder.loadTexts: matrixDSHighCapacityEntry.setStatus('current')
matrixDSHighCapacityOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 6, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixDSHighCapacityOverflowPkts.setStatus('current')
matrixDSHighCapacityPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixDSHighCapacityPkts.setStatus('current')
matrixDSHighCapacityOverflowOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixDSHighCapacityOverflowOctets.setStatus('current')
matrixDSHighCapacityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 6, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: matrixDSHighCapacityOctets.setStatus('current')
captureBufferHighCapacityTable = MibTable((1, 3, 6, 1, 2, 1, 16, 8, 3), )
if mibBuilder.loadTexts: captureBufferHighCapacityTable.setStatus('current')
captureBufferHighCapacityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 8, 3, 1), ).setIndexNames((0, "RMON-MIB", "captureBufferControlIndex"), (0, "RMON-MIB", "captureBufferIndex"))
if mibBuilder.loadTexts: captureBufferHighCapacityEntry.setStatus('current')
captureBufferPacketHighCapacityTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 8, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999999))).setUnits('nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: captureBufferPacketHighCapacityTime.setStatus('current')
protocolDistStatsHighCapacityTable = MibTable((1, 3, 6, 1, 2, 1, 16, 12, 3), )
if mibBuilder.loadTexts: protocolDistStatsHighCapacityTable.setStatus('current')
protocolDistStatsHighCapacityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 12, 3, 1), ).setIndexNames((0, "RMON2-MIB", "protocolDistControlIndex"), (0, "RMON2-MIB", "protocolDirLocalIndex"))
if mibBuilder.loadTexts: protocolDistStatsHighCapacityEntry.setStatus('current')
protocolDistStatsHighCapacityOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 3, 1, 1), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolDistStatsHighCapacityOverflowPkts.setStatus('current')
protocolDistStatsHighCapacityPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 3, 1, 2), ZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolDistStatsHighCapacityPkts.setStatus('current')
protocolDistStatsHighCapacityOverflowOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 3, 1, 3), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolDistStatsHighCapacityOverflowOctets.setStatus('current')
protocolDistStatsHighCapacityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 12, 3, 1, 4), ZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: protocolDistStatsHighCapacityOctets.setStatus('current')
nlHostHighCapacityTable = MibTable((1, 3, 6, 1, 2, 1, 16, 14, 3), )
if mibBuilder.loadTexts: nlHostHighCapacityTable.setStatus('current')
nlHostHighCapacityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 14, 3, 1), ).setIndexNames((0, "RMON2-MIB", "hlHostControlIndex"), (0, "RMON2-MIB", "nlHostTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "nlHostAddress"))
if mibBuilder.loadTexts: nlHostHighCapacityEntry.setStatus('current')
nlHostHighCapacityInOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 3, 1, 1), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostHighCapacityInOverflowPkts.setStatus('current')
nlHostHighCapacityInPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 3, 1, 2), ZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostHighCapacityInPkts.setStatus('current')
nlHostHighCapacityOutOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 3, 1, 3), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostHighCapacityOutOverflowPkts.setStatus('current')
nlHostHighCapacityOutPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 3, 1, 4), ZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostHighCapacityOutPkts.setStatus('current')
nlHostHighCapacityInOverflowOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 3, 1, 5), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostHighCapacityInOverflowOctets.setStatus('current')
nlHostHighCapacityInOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 3, 1, 6), ZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostHighCapacityInOctets.setStatus('current')
nlHostHighCapacityOutOverflowOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 3, 1, 7), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostHighCapacityOutOverflowOctets.setStatus('current')
nlHostHighCapacityOutOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 14, 3, 1, 8), ZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlHostHighCapacityOutOctets.setStatus('current')
nlMatrixSDHighCapacityTable = MibTable((1, 3, 6, 1, 2, 1, 16, 15, 6), )
if mibBuilder.loadTexts: nlMatrixSDHighCapacityTable.setStatus('current')
nlMatrixSDHighCapacityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 15, 6, 1), ).setIndexNames((0, "RMON2-MIB", "hlMatrixControlIndex"), (0, "RMON2-MIB", "nlMatrixSDTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "nlMatrixSDSourceAddress"), (0, "RMON2-MIB", "nlMatrixSDDestAddress"))
if mibBuilder.loadTexts: nlMatrixSDHighCapacityEntry.setStatus('current')
nlMatrixSDHighCapacityOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 6, 1, 1), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixSDHighCapacityOverflowPkts.setStatus('current')
nlMatrixSDHighCapacityPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 6, 1, 2), ZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixSDHighCapacityPkts.setStatus('current')
nlMatrixSDHighCapacityOverflowOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 6, 1, 3), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixSDHighCapacityOverflowOctets.setStatus('current')
nlMatrixSDHighCapacityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 6, 1, 4), ZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixSDHighCapacityOctets.setStatus('current')
nlMatrixDSHighCapacityTable = MibTable((1, 3, 6, 1, 2, 1, 16, 15, 7), )
if mibBuilder.loadTexts: nlMatrixDSHighCapacityTable.setStatus('current')
nlMatrixDSHighCapacityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 15, 7, 1), ).setIndexNames((0, "RMON2-MIB", "hlMatrixControlIndex"), (0, "RMON2-MIB", "nlMatrixDSTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "nlMatrixDSDestAddress"), (0, "RMON2-MIB", "nlMatrixDSSourceAddress"))
if mibBuilder.loadTexts: nlMatrixDSHighCapacityEntry.setStatus('current')
nlMatrixDSHighCapacityOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 7, 1, 1), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixDSHighCapacityOverflowPkts.setStatus('current')
nlMatrixDSHighCapacityPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 7, 1, 2), ZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixDSHighCapacityPkts.setStatus('current')
nlMatrixDSHighCapacityOverflowOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 7, 1, 3), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixDSHighCapacityOverflowOctets.setStatus('current')
nlMatrixDSHighCapacityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 7, 1, 4), ZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixDSHighCapacityOctets.setStatus('current')
nlMatrixTopNControlRateBase = MibScalar((1, 3, 6, 1, 2, 1, 16, 15, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("nlMatrixTopNPkts", 1), ("nlMatrixTopNOctets", 2), ("nlMatrixTopNHighCapacityPkts", 3), ("nlMatrixTopNHighCapacityOctets", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: nlMatrixTopNControlRateBase.setStatus('current')
nlMatrixTopNHighCapacityTable = MibTable((1, 3, 6, 1, 2, 1, 16, 15, 8), )
if mibBuilder.loadTexts: nlMatrixTopNHighCapacityTable.setStatus('current')
nlMatrixTopNHighCapacityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 15, 8, 1), ).setIndexNames((0, "RMON2-MIB", "nlMatrixTopNControlIndex"), (0, "RMON2-MIB", "nlMatrixTopNIndex"))
if mibBuilder.loadTexts: nlMatrixTopNHighCapacityEntry.setStatus('current')
nlMatrixTopNHighCapacityBasePktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNHighCapacityBasePktRate.setStatus('current')
nlMatrixTopNHighCapacityOverflowPktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNHighCapacityOverflowPktRate.setStatus('current')
nlMatrixTopNHighCapacityPktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 3), RmonGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNHighCapacityPktRate.setStatus('current')
nlMatrixTopNHighCapacityReverseBasePktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNHighCapacityReverseBasePktRate.setStatus('current')
nlMatrixTopNHighCapacityReverseOverflowPktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNHighCapacityReverseOverflowPktRate.setStatus('current')
nlMatrixTopNHighCapacityReversePktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 6), RmonGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNHighCapacityReversePktRate.setStatus('current')
nlMatrixTopNHighCapacityBaseOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNHighCapacityBaseOctetRate.setStatus('current')
nlMatrixTopNHighCapacityOverflowOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNHighCapacityOverflowOctetRate.setStatus('current')
nlMatrixTopNHighCapacityOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 9), RmonGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNHighCapacityOctetRate.setStatus('current')
nlMatrixTopNHighCapacityReverseBaseOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNHighCapacityReverseBaseOctetRate.setStatus('current')
nlMatrixTopNHighCapacityReverseOverflowOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNHighCapacityReverseOverflowOctetRate.setStatus('current')
nlMatrixTopNHighCapacityReverseOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 15, 8, 1, 12), RmonGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nlMatrixTopNHighCapacityReverseOctetRate.setStatus('current')
alHostHighCapacityTable = MibTable((1, 3, 6, 1, 2, 1, 16, 16, 2), )
if mibBuilder.loadTexts: alHostHighCapacityTable.setStatus('current')
alHostHighCapacityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 16, 2, 1), ).setIndexNames((0, "RMON2-MIB", "hlHostControlIndex"), (0, "RMON2-MIB", "alHostTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "nlHostAddress"), (0, "RMON2-MIB", "protocolDirLocalIndex"))
if mibBuilder.loadTexts: alHostHighCapacityEntry.setStatus('current')
alHostHighCapacityInOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 2, 1, 1), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHostHighCapacityInOverflowPkts.setStatus('current')
alHostHighCapacityInPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 2, 1, 2), ZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHostHighCapacityInPkts.setStatus('current')
alHostHighCapacityOutOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 2, 1, 3), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHostHighCapacityOutOverflowPkts.setStatus('current')
alHostHighCapacityOutPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 2, 1, 4), ZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHostHighCapacityOutPkts.setStatus('current')
alHostHighCapacityInOverflowOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 2, 1, 5), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHostHighCapacityInOverflowOctets.setStatus('current')
alHostHighCapacityInOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 2, 1, 6), ZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHostHighCapacityInOctets.setStatus('current')
alHostHighCapacityOutOverflowOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 2, 1, 7), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHostHighCapacityOutOverflowOctets.setStatus('current')
alHostHighCapacityOutOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 16, 2, 1, 8), ZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alHostHighCapacityOutOctets.setStatus('current')
alMatrixSDHighCapacityTable = MibTable((1, 3, 6, 1, 2, 1, 16, 17, 5), )
if mibBuilder.loadTexts: alMatrixSDHighCapacityTable.setStatus('current')
alMatrixSDHighCapacityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 17, 5, 1), ).setIndexNames((0, "RMON2-MIB", "hlMatrixControlIndex"), (0, "RMON2-MIB", "alMatrixSDTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "nlMatrixSDSourceAddress"), (0, "RMON2-MIB", "nlMatrixSDDestAddress"), (0, "RMON2-MIB", "protocolDirLocalIndex"))
if mibBuilder.loadTexts: alMatrixSDHighCapacityEntry.setStatus('current')
alMatrixSDHighCapacityOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 5, 1, 1), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixSDHighCapacityOverflowPkts.setStatus('current')
alMatrixSDHighCapacityPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 5, 1, 2), ZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixSDHighCapacityPkts.setStatus('current')
alMatrixSDHighCapacityOverflowOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 5, 1, 3), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixSDHighCapacityOverflowOctets.setStatus('current')
alMatrixSDHighCapacityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 5, 1, 4), ZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixSDHighCapacityOctets.setStatus('current')
alMatrixDSHighCapacityTable = MibTable((1, 3, 6, 1, 2, 1, 16, 17, 6), )
if mibBuilder.loadTexts: alMatrixDSHighCapacityTable.setStatus('current')
alMatrixDSHighCapacityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 17, 6, 1), ).setIndexNames((0, "RMON2-MIB", "hlMatrixControlIndex"), (0, "RMON2-MIB", "alMatrixDSTimeMark"), (0, "RMON2-MIB", "protocolDirLocalIndex"), (0, "RMON2-MIB", "nlMatrixDSDestAddress"), (0, "RMON2-MIB", "nlMatrixDSSourceAddress"), (0, "RMON2-MIB", "protocolDirLocalIndex"))
if mibBuilder.loadTexts: alMatrixDSHighCapacityEntry.setStatus('current')
alMatrixDSHighCapacityOverflowPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 6, 1, 1), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixDSHighCapacityOverflowPkts.setStatus('current')
alMatrixDSHighCapacityPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 6, 1, 2), ZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixDSHighCapacityPkts.setStatus('current')
alMatrixDSHighCapacityOverflowOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 6, 1, 3), ZeroBasedCounter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixDSHighCapacityOverflowOctets.setStatus('current')
alMatrixDSHighCapacityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 6, 1, 4), ZeroBasedCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixDSHighCapacityOctets.setStatus('current')
alMatrixTopNControlRateBase = MibScalar((1, 3, 6, 1, 2, 1, 16, 17, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("alMatrixTopNTerminalsPkts", 1), ("alMatrixTopNTerminalsOctets", 2), ("alMatrixTopNAllPkts", 3), ("alMatrixTopNAllOctets", 4), ("alMatrixTopNTerminalsHighCapacityPkts", 5), ("alMatrixTopNTerminalsHighCapacityOctets", 6), ("alMatrixTopNAllHighCapacityPkts", 7), ("alMatrixTopNAllHighCapacityOctets", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alMatrixTopNControlRateBase.setStatus('current')
alMatrixTopNHighCapacityTable = MibTable((1, 3, 6, 1, 2, 1, 16, 17, 7), )
if mibBuilder.loadTexts: alMatrixTopNHighCapacityTable.setStatus('current')
alMatrixTopNHighCapacityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 17, 7, 1), ).setIndexNames((0, "RMON2-MIB", "alMatrixTopNControlIndex"), (0, "RMON2-MIB", "alMatrixTopNIndex"))
if mibBuilder.loadTexts: alMatrixTopNHighCapacityEntry.setStatus('current')
alMatrixTopNHighCapacityBasePktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNHighCapacityBasePktRate.setStatus('current')
alMatrixTopNHighCapacityOverflowPktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNHighCapacityOverflowPktRate.setStatus('current')
alMatrixTopNHighCapacityPktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 3), RmonGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNHighCapacityPktRate.setStatus('current')
alMatrixTopNHighCapacityReverseBasePktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNHighCapacityReverseBasePktRate.setStatus('current')
alMatrixTopNHighCapacityReverseOverflowPktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNHighCapacityReverseOverflowPktRate.setStatus('current')
alMatrixTopNHighCapacityReversePktRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 6), RmonGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNHighCapacityReversePktRate.setStatus('current')
alMatrixTopNHighCapacityBaseOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNHighCapacityBaseOctetRate.setStatus('current')
alMatrixTopNHighCapacityOverflowOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNHighCapacityOverflowOctetRate.setStatus('current')
alMatrixTopNHighCapacityOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 9), RmonGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNHighCapacityOctetRate.setStatus('current')
alMatrixTopNHighCapacityReverseBaseOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNHighCapacityReverseBaseOctetRate.setStatus('current')
alMatrixTopNHighCapacityReverseOverflowOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNHighCapacityReverseOverflowOctetRate.setStatus('current')
alMatrixTopNHighCapacityReverseOctetRate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 17, 7, 1, 12), RmonGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alMatrixTopNHighCapacityReverseOctetRate.setStatus('current')
usrHistoryHighCapacityTable = MibTable((1, 3, 6, 1, 2, 1, 16, 18, 4), )
if mibBuilder.loadTexts: usrHistoryHighCapacityTable.setStatus('current')
usrHistoryHighCapacityEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 18, 4, 1), ).setIndexNames((0, "RMON2-MIB", "usrHistoryControlIndex"), (0, "RMON2-MIB", "usrHistorySampleIndex"), (0, "RMON2-MIB", "usrHistoryObjectIndex"))
if mibBuilder.loadTexts: usrHistoryHighCapacityEntry.setStatus('current')
usrHistoryHighCapacityOverflowAbsValue = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 4, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usrHistoryHighCapacityOverflowAbsValue.setStatus('current')
usrHistoryHighCapacityAbsValue = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 18, 4, 1, 2), RmonGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: usrHistoryHighCapacityAbsValue.setStatus('current')
hcRMONCapabilities = MibScalar((1, 3, 6, 1, 2, 1, 16, 19, 16), Bits().clone(namedValues=NamedValues(("mediaIndependentGroup", 0), ("etherStatsHighCapacityGroup", 1), ("etherHistoryHighCapacityGroup", 2), ("hostHighCapacityGroup", 3), ("hostTopNHighCapacityGroup", 4), ("matrixHighCapacityGroup", 5), ("captureBufferHighCapacityGroup", 6), ("protocolDistributionHighCapacityGroup", 7), ("nlHostHighCapacityGroup", 8), ("nlMatrixHighCapacityGroup", 9), ("nlMatrixTopNHighCapacityGroup", 10), ("alHostHighCapacityGroup", 11), ("alMatrixHighCapacityGroup", 12), ("alMatrixTopNHighCapacityGroup", 13), ("usrHistoryHighCapacityGroup", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hcRMONCapabilities.setStatus('current')
hcRmonMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 20, 6))
hcRmonMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 20, 7))
hcRmonMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 16, 20, 6, 1)).setObjects(("HC-RMON-MIB", "mediaIndependentGroup"), ("HC-RMON-MIB", "hcRMONInformationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hcRmonMIBCompliance = hcRmonMIBCompliance.setStatus('current')
hcRmon2MIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 16, 20, 6, 2)).setObjects(("HC-RMON-MIB", "mediaIndependentGroup"), ("HC-RMON-MIB", "protocolDistributionHighCapacityGroup"), ("HC-RMON-MIB", "nlHostHighCapacityGroup"), ("HC-RMON-MIB", "nlMatrixHighCapacityGroup"), ("HC-RMON-MIB", "nlMatrixTopNHighCapacityGroup"), ("HC-RMON-MIB", "usrHistoryHighCapacityGroup"), ("HC-RMON-MIB", "hcRMONInformationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hcRmon2MIBCompliance = hcRmon2MIBCompliance.setStatus('current')
hcRmon2MIBApplicationLayerCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 16, 20, 6, 3)).setObjects(("HC-RMON-MIB", "mediaIndependentGroup"), ("HC-RMON-MIB", "protocolDistributionHighCapacityGroup"), ("HC-RMON-MIB", "nlHostHighCapacityGroup"), ("HC-RMON-MIB", "nlMatrixHighCapacityGroup"), ("HC-RMON-MIB", "nlMatrixTopNHighCapacityGroup"), ("HC-RMON-MIB", "alHostHighCapacityGroup"), ("HC-RMON-MIB", "alMatrixHighCapacityGroup"), ("HC-RMON-MIB", "alMatrixTopNHighCapacityGroup"), ("HC-RMON-MIB", "usrHistoryHighCapacityGroup"), ("HC-RMON-MIB", "hcRMONInformationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hcRmon2MIBApplicationLayerCompliance = hcRmon2MIBApplicationLayerCompliance.setStatus('current')
mediaIndependentGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 7, 1)).setObjects(("HC-RMON-MIB", "mediaIndependentIndex"), ("HC-RMON-MIB", "mediaIndependentDataSource"), ("HC-RMON-MIB", "mediaIndependentDropEvents"), ("HC-RMON-MIB", "mediaIndependentDroppedFrames"), ("HC-RMON-MIB", "mediaIndependentInPkts"), ("HC-RMON-MIB", "mediaIndependentInOverflowPkts"), ("HC-RMON-MIB", "mediaIndependentInHighCapacityPkts"), ("HC-RMON-MIB", "mediaIndependentOutPkts"), ("HC-RMON-MIB", "mediaIndependentOutOverflowPkts"), ("HC-RMON-MIB", "mediaIndependentOutHighCapacityPkts"), ("HC-RMON-MIB", "mediaIndependentInOctets"), ("HC-RMON-MIB", "mediaIndependentInOverflowOctets"), ("HC-RMON-MIB", "mediaIndependentInHighCapacityOctets"), ("HC-RMON-MIB", "mediaIndependentOutOctets"), ("HC-RMON-MIB", "mediaIndependentOutOverflowOctets"), ("HC-RMON-MIB", "mediaIndependentOutHighCapacityOctets"), ("HC-RMON-MIB", "mediaIndependentInNUCastPkts"), ("HC-RMON-MIB", "mediaIndependentInNUCastOverflowPkts"), ("HC-RMON-MIB", "mediaIndependentInNUCastHighCapacityPkts"), ("HC-RMON-MIB", "mediaIndependentOutNUCastPkts"), ("HC-RMON-MIB", "mediaIndependentOutNUCastOverflowPkts"), ("HC-RMON-MIB", "mediaIndependentOutNUCastHighCapacityPkts"), ("HC-RMON-MIB", "mediaIndependentInErrors"), ("HC-RMON-MIB", "mediaIndependentOutErrors"), ("HC-RMON-MIB", "mediaIndependentInputSpeed"), ("HC-RMON-MIB", "mediaIndependentOutputSpeed"), ("HC-RMON-MIB", "mediaIndependentOwner"), ("HC-RMON-MIB", "mediaIndependentStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mediaIndependentGroup = mediaIndependentGroup.setStatus('current')
etherStatsHighCapacityGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 7, 2)).setObjects(("HC-RMON-MIB", "etherStatsHighCapacityOverflowPkts"), ("HC-RMON-MIB", "etherStatsHighCapacityPkts"), ("HC-RMON-MIB", "etherStatsHighCapacityOverflowOctets"), ("HC-RMON-MIB", "etherStatsHighCapacityOctets"), ("HC-RMON-MIB", "etherStatsHighCapacityOverflowPkts64Octets"), ("HC-RMON-MIB", "etherStatsHighCapacityPkts64Octets"), ("HC-RMON-MIB", "etherStatsHighCapacityOverflowPkts65to127Octets"), ("HC-RMON-MIB", "etherStatsHighCapacityPkts65to127Octets"), ("HC-RMON-MIB", "etherStatsHighCapacityOverflowPkts128to255Octets"), ("HC-RMON-MIB", "etherStatsHighCapacityPkts128to255Octets"), ("HC-RMON-MIB", "etherStatsHighCapacityOverflowPkts256to511Octets"), ("HC-RMON-MIB", "etherStatsHighCapacityPkts256to511Octets"), ("HC-RMON-MIB", "etherStatsHighCapacityOverflowPkts512to1023Octets"), ("HC-RMON-MIB", "etherStatsHighCapacityPkts512to1023Octets"), ("HC-RMON-MIB", "etherStatsHighCapacityOverflowPkts1024to1518Octets"), ("HC-RMON-MIB", "etherStatsHighCapacityPkts1024to1518Octets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etherStatsHighCapacityGroup = etherStatsHighCapacityGroup.setStatus('current')
etherHistoryHighCapacityGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 7, 3)).setObjects(("HC-RMON-MIB", "etherHistoryHighCapacityOverflowPkts"), ("HC-RMON-MIB", "etherHistoryHighCapacityPkts"), ("HC-RMON-MIB", "etherHistoryHighCapacityOverflowOctets"), ("HC-RMON-MIB", "etherHistoryHighCapacityOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    etherHistoryHighCapacityGroup = etherHistoryHighCapacityGroup.setStatus('current')
hostHighCapacityGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 7, 4)).setObjects(("HC-RMON-MIB", "hostHighCapacityInOverflowPkts"), ("HC-RMON-MIB", "hostHighCapacityInPkts"), ("HC-RMON-MIB", "hostHighCapacityOutOverflowPkts"), ("HC-RMON-MIB", "hostHighCapacityOutPkts"), ("HC-RMON-MIB", "hostHighCapacityInOverflowOctets"), ("HC-RMON-MIB", "hostHighCapacityInOctets"), ("HC-RMON-MIB", "hostHighCapacityOutOverflowOctets"), ("HC-RMON-MIB", "hostHighCapacityOutOctets"), ("HC-RMON-MIB", "hostTimeHighCapacityInOverflowPkts"), ("HC-RMON-MIB", "hostTimeHighCapacityInPkts"), ("HC-RMON-MIB", "hostTimeHighCapacityOutOverflowPkts"), ("HC-RMON-MIB", "hostTimeHighCapacityOutPkts"), ("HC-RMON-MIB", "hostTimeHighCapacityInOverflowOctets"), ("HC-RMON-MIB", "hostTimeHighCapacityInOctets"), ("HC-RMON-MIB", "hostTimeHighCapacityOutOverflowOctets"), ("HC-RMON-MIB", "hostTimeHighCapacityOutOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hostHighCapacityGroup = hostHighCapacityGroup.setStatus('current')
hostTopNHighCapacityGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 7, 5)).setObjects(("HC-RMON-MIB", "hostTopNHighCapacityBaseRate"), ("HC-RMON-MIB", "hostTopNHighCapacityOverflowRate"), ("HC-RMON-MIB", "hostTopNHighCapacityRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hostTopNHighCapacityGroup = hostTopNHighCapacityGroup.setStatus('current')
matrixHighCapacityGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 7, 6)).setObjects(("HC-RMON-MIB", "matrixSDHighCapacityOverflowPkts"), ("HC-RMON-MIB", "matrixSDHighCapacityPkts"), ("HC-RMON-MIB", "matrixSDHighCapacityOverflowOctets"), ("HC-RMON-MIB", "matrixSDHighCapacityOctets"), ("HC-RMON-MIB", "matrixDSHighCapacityOverflowPkts"), ("HC-RMON-MIB", "matrixDSHighCapacityPkts"), ("HC-RMON-MIB", "matrixDSHighCapacityOverflowOctets"), ("HC-RMON-MIB", "matrixDSHighCapacityOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    matrixHighCapacityGroup = matrixHighCapacityGroup.setStatus('current')
captureBufferHighCapacityGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 7, 7)).setObjects(("HC-RMON-MIB", "captureBufferPacketHighCapacityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    captureBufferHighCapacityGroup = captureBufferHighCapacityGroup.setStatus('current')
protocolDistributionHighCapacityGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 7, 8)).setObjects(("HC-RMON-MIB", "protocolDistStatsHighCapacityOverflowPkts"), ("HC-RMON-MIB", "protocolDistStatsHighCapacityPkts"), ("HC-RMON-MIB", "protocolDistStatsHighCapacityOverflowOctets"), ("HC-RMON-MIB", "protocolDistStatsHighCapacityOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    protocolDistributionHighCapacityGroup = protocolDistributionHighCapacityGroup.setStatus('current')
nlHostHighCapacityGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 7, 9)).setObjects(("HC-RMON-MIB", "nlHostHighCapacityInOverflowPkts"), ("HC-RMON-MIB", "nlHostHighCapacityInPkts"), ("HC-RMON-MIB", "nlHostHighCapacityOutOverflowPkts"), ("HC-RMON-MIB", "nlHostHighCapacityOutPkts"), ("HC-RMON-MIB", "nlHostHighCapacityInOverflowOctets"), ("HC-RMON-MIB", "nlHostHighCapacityInOctets"), ("HC-RMON-MIB", "nlHostHighCapacityOutOverflowOctets"), ("HC-RMON-MIB", "nlHostHighCapacityOutOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nlHostHighCapacityGroup = nlHostHighCapacityGroup.setStatus('current')
nlMatrixHighCapacityGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 7, 10)).setObjects(("HC-RMON-MIB", "nlMatrixSDHighCapacityOverflowPkts"), ("HC-RMON-MIB", "nlMatrixSDHighCapacityPkts"), ("HC-RMON-MIB", "nlMatrixSDHighCapacityOverflowOctets"), ("HC-RMON-MIB", "nlMatrixSDHighCapacityOctets"), ("HC-RMON-MIB", "nlMatrixDSHighCapacityOverflowPkts"), ("HC-RMON-MIB", "nlMatrixDSHighCapacityPkts"), ("HC-RMON-MIB", "nlMatrixDSHighCapacityOverflowOctets"), ("HC-RMON-MIB", "nlMatrixDSHighCapacityOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nlMatrixHighCapacityGroup = nlMatrixHighCapacityGroup.setStatus('current')
nlMatrixTopNHighCapacityGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 7, 11)).setObjects(("HC-RMON-MIB", "nlMatrixTopNHighCapacityBasePktRate"), ("HC-RMON-MIB", "nlMatrixTopNHighCapacityOverflowPktRate"), ("HC-RMON-MIB", "nlMatrixTopNHighCapacityPktRate"), ("HC-RMON-MIB", "nlMatrixTopNHighCapacityReverseBasePktRate"), ("HC-RMON-MIB", "nlMatrixTopNHighCapacityReverseOverflowPktRate"), ("HC-RMON-MIB", "nlMatrixTopNHighCapacityReversePktRate"), ("HC-RMON-MIB", "nlMatrixTopNHighCapacityBaseOctetRate"), ("HC-RMON-MIB", "nlMatrixTopNHighCapacityOverflowOctetRate"), ("HC-RMON-MIB", "nlMatrixTopNHighCapacityOctetRate"), ("HC-RMON-MIB", "nlMatrixTopNHighCapacityReverseBaseOctetRate"), ("HC-RMON-MIB", "nlMatrixTopNHighCapacityReverseOverflowOctetRate"), ("HC-RMON-MIB", "nlMatrixTopNHighCapacityReverseOctetRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    nlMatrixTopNHighCapacityGroup = nlMatrixTopNHighCapacityGroup.setStatus('current')
alHostHighCapacityGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 7, 12)).setObjects(("HC-RMON-MIB", "alHostHighCapacityInOverflowPkts"), ("HC-RMON-MIB", "alHostHighCapacityInPkts"), ("HC-RMON-MIB", "alHostHighCapacityOutOverflowPkts"), ("HC-RMON-MIB", "alHostHighCapacityOutPkts"), ("HC-RMON-MIB", "alHostHighCapacityInOverflowOctets"), ("HC-RMON-MIB", "alHostHighCapacityInOctets"), ("HC-RMON-MIB", "alHostHighCapacityOutOverflowOctets"), ("HC-RMON-MIB", "alHostHighCapacityOutOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alHostHighCapacityGroup = alHostHighCapacityGroup.setStatus('current')
alMatrixHighCapacityGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 7, 13)).setObjects(("HC-RMON-MIB", "alMatrixSDHighCapacityOverflowPkts"), ("HC-RMON-MIB", "alMatrixSDHighCapacityPkts"), ("HC-RMON-MIB", "alMatrixSDHighCapacityOverflowOctets"), ("HC-RMON-MIB", "alMatrixSDHighCapacityOctets"), ("HC-RMON-MIB", "alMatrixDSHighCapacityOverflowPkts"), ("HC-RMON-MIB", "alMatrixDSHighCapacityPkts"), ("HC-RMON-MIB", "alMatrixDSHighCapacityOverflowOctets"), ("HC-RMON-MIB", "alMatrixDSHighCapacityOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alMatrixHighCapacityGroup = alMatrixHighCapacityGroup.setStatus('current')
alMatrixTopNHighCapacityGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 7, 14)).setObjects(("HC-RMON-MIB", "alMatrixTopNHighCapacityBasePktRate"), ("HC-RMON-MIB", "alMatrixTopNHighCapacityOverflowPktRate"), ("HC-RMON-MIB", "alMatrixTopNHighCapacityPktRate"), ("HC-RMON-MIB", "alMatrixTopNHighCapacityReverseBasePktRate"), ("HC-RMON-MIB", "alMatrixTopNHighCapacityReverseOverflowPktRate"), ("HC-RMON-MIB", "alMatrixTopNHighCapacityReversePktRate"), ("HC-RMON-MIB", "alMatrixTopNHighCapacityBaseOctetRate"), ("HC-RMON-MIB", "alMatrixTopNHighCapacityOverflowOctetRate"), ("HC-RMON-MIB", "alMatrixTopNHighCapacityOctetRate"), ("HC-RMON-MIB", "alMatrixTopNHighCapacityReverseBaseOctetRate"), ("HC-RMON-MIB", "alMatrixTopNHighCapacityReverseOverflowOctetRate"), ("HC-RMON-MIB", "alMatrixTopNHighCapacityReverseOctetRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alMatrixTopNHighCapacityGroup = alMatrixTopNHighCapacityGroup.setStatus('current')
usrHistoryHighCapacityGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 7, 15)).setObjects(("HC-RMON-MIB", "usrHistoryHighCapacityOverflowAbsValue"), ("HC-RMON-MIB", "usrHistoryHighCapacityAbsValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    usrHistoryHighCapacityGroup = usrHistoryHighCapacityGroup.setStatus('current')
hcRMONInformationGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 20, 7, 16)).setObjects(("HC-RMON-MIB", "hcRMONCapabilities"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    hcRMONInformationGroup = hcRMONInformationGroup.setStatus('current')
mibBuilder.exportSymbols("HC-RMON-MIB", hostTopNHighCapacityOverflowRate=hostTopNHighCapacityOverflowRate, nlHostHighCapacityGroup=nlHostHighCapacityGroup, ZeroBasedCounter64=ZeroBasedCounter64, hostHighCapacityGroup=hostHighCapacityGroup, alMatrixTopNHighCapacityOctetRate=alMatrixTopNHighCapacityOctetRate, protocolDistributionHighCapacityGroup=protocolDistributionHighCapacityGroup, alHostHighCapacityTable=alHostHighCapacityTable, etherStatsHighCapacityTable=etherStatsHighCapacityTable, etherStatsHighCapacityPkts1024to1518Octets=etherStatsHighCapacityPkts1024to1518Octets, protocolDistStatsHighCapacityPkts=protocolDistStatsHighCapacityPkts, matrixDSHighCapacityOctets=matrixDSHighCapacityOctets, alMatrixTopNHighCapacityReversePktRate=alMatrixTopNHighCapacityReversePktRate, etherStatsHighCapacityOverflowPkts1024to1518Octets=etherStatsHighCapacityOverflowPkts1024to1518Octets, matrixSDHighCapacityOverflowOctets=matrixSDHighCapacityOverflowOctets, hostHighCapacityEntry=hostHighCapacityEntry, captureBufferHighCapacityEntry=captureBufferHighCapacityEntry, etherStatsHighCapacityPkts65to127Octets=etherStatsHighCapacityPkts65to127Octets, alHostHighCapacityInPkts=alHostHighCapacityInPkts, hostTopNHighCapacityBaseRate=hostTopNHighCapacityBaseRate, alMatrixSDHighCapacityPkts=alMatrixSDHighCapacityPkts, nlHostHighCapacityEntry=nlHostHighCapacityEntry, etherStatsHighCapacityPkts=etherStatsHighCapacityPkts, nlMatrixSDHighCapacityPkts=nlMatrixSDHighCapacityPkts, alMatrixTopNHighCapacityOverflowOctetRate=alMatrixTopNHighCapacityOverflowOctetRate, hostTimeHighCapacityInOctets=hostTimeHighCapacityInOctets, nlMatrixHighCapacityGroup=nlMatrixHighCapacityGroup, etherHistoryHighCapacityPkts=etherHistoryHighCapacityPkts, etherStatsHighCapacityOverflowPkts512to1023Octets=etherStatsHighCapacityOverflowPkts512to1023Octets, matrixDSHighCapacityOverflowPkts=matrixDSHighCapacityOverflowPkts, matrixDSHighCapacityPkts=matrixDSHighCapacityPkts, hcRmon2MIBApplicationLayerCompliance=hcRmon2MIBApplicationLayerCompliance, nlMatrixTopNHighCapacityGroup=nlMatrixTopNHighCapacityGroup, hostTopNHighCapacityTable=hostTopNHighCapacityTable, mediaIndependentOwner=mediaIndependentOwner, mediaIndependentInHighCapacityOctets=mediaIndependentInHighCapacityOctets, nlMatrixTopNHighCapacityReverseBaseOctetRate=nlMatrixTopNHighCapacityReverseBaseOctetRate, alMatrixTopNHighCapacityEntry=alMatrixTopNHighCapacityEntry, alHostHighCapacityOutPkts=alHostHighCapacityOutPkts, usrHistoryHighCapacityOverflowAbsValue=usrHistoryHighCapacityOverflowAbsValue, alHostHighCapacityInOverflowOctets=alHostHighCapacityInOverflowOctets, alMatrixSDHighCapacityOctets=alMatrixSDHighCapacityOctets, mediaIndependentTable=mediaIndependentTable, hcRmonMIBGroups=hcRmonMIBGroups, hostTimeHighCapacityOutOverflowOctets=hostTimeHighCapacityOutOverflowOctets, mediaIndependentInNUCastHighCapacityPkts=mediaIndependentInNUCastHighCapacityPkts, hcRMONInformationGroup=hcRMONInformationGroup, alMatrixSDHighCapacityOverflowPkts=alMatrixSDHighCapacityOverflowPkts, hostTimeHighCapacityOutPkts=hostTimeHighCapacityOutPkts, mediaIndependentOutNUCastPkts=mediaIndependentOutNUCastPkts, nlMatrixTopNHighCapacityReverseOverflowPktRate=nlMatrixTopNHighCapacityReverseOverflowPktRate, matrixHighCapacityGroup=matrixHighCapacityGroup, nlHostHighCapacityOutOverflowOctets=nlHostHighCapacityOutOverflowOctets, protocolDistStatsHighCapacityOctets=protocolDistStatsHighCapacityOctets, hostTopNHighCapacityEntry=hostTopNHighCapacityEntry, nlMatrixSDHighCapacityOverflowOctets=nlMatrixSDHighCapacityOverflowOctets, alHostHighCapacityEntry=alHostHighCapacityEntry, mediaIndependentOutNUCastHighCapacityPkts=mediaIndependentOutNUCastHighCapacityPkts, usrHistoryHighCapacityGroup=usrHistoryHighCapacityGroup, nlMatrixTopNHighCapacityOverflowOctetRate=nlMatrixTopNHighCapacityOverflowOctetRate, PYSNMP_MODULE_ID=hcRMON, hostHighCapacityInOctets=hostHighCapacityInOctets, etherHistoryHighCapacityOverflowPkts=etherHistoryHighCapacityOverflowPkts, mediaIndependentInOverflowPkts=mediaIndependentInOverflowPkts, mediaIndependentInNUCastPkts=mediaIndependentInNUCastPkts, etherStatsHighCapacityOverflowPkts=etherStatsHighCapacityOverflowPkts, matrixDSHighCapacityEntry=matrixDSHighCapacityEntry, alMatrixDSHighCapacityEntry=alMatrixDSHighCapacityEntry, nlMatrixSDHighCapacityOverflowPkts=nlMatrixSDHighCapacityOverflowPkts, hcRmonMIBCompliances=hcRmonMIBCompliances, nlMatrixDSHighCapacityEntry=nlMatrixDSHighCapacityEntry, hostTopNHighCapacityRate=hostTopNHighCapacityRate, alMatrixTopNHighCapacityBasePktRate=alMatrixTopNHighCapacityBasePktRate, hostTimeHighCapacityInPkts=hostTimeHighCapacityInPkts, nlMatrixDSHighCapacityPkts=nlMatrixDSHighCapacityPkts, alMatrixHighCapacityGroup=alMatrixHighCapacityGroup, alMatrixSDHighCapacityOverflowOctets=alMatrixSDHighCapacityOverflowOctets, alMatrixDSHighCapacityPkts=alMatrixDSHighCapacityPkts, hcRMON=hcRMON, mediaIndependentDataSource=mediaIndependentDataSource, alMatrixDSHighCapacityOverflowPkts=alMatrixDSHighCapacityOverflowPkts, hostHighCapacityOutPkts=hostHighCapacityOutPkts, captureBufferHighCapacityTable=captureBufferHighCapacityTable, nlMatrixTopNHighCapacityReversePktRate=nlMatrixTopNHighCapacityReversePktRate, protocolDistStatsHighCapacityOverflowOctets=protocolDistStatsHighCapacityOverflowOctets, hostHighCapacityInOverflowOctets=hostHighCapacityInOverflowOctets, etherStatsHighCapacityOverflowPkts256to511Octets=etherStatsHighCapacityOverflowPkts256to511Octets, hostTimeHighCapacityInOverflowPkts=hostTimeHighCapacityInOverflowPkts, etherStatsHighCapacityPkts512to1023Octets=etherStatsHighCapacityPkts512to1023Octets, etherStatsHighCapacityOverflowPkts65to127Octets=etherStatsHighCapacityOverflowPkts65to127Octets, hostHighCapacityOutOverflowOctets=hostHighCapacityOutOverflowOctets, alHostHighCapacityOutOverflowOctets=alHostHighCapacityOutOverflowOctets, usrHistoryHighCapacityEntry=usrHistoryHighCapacityEntry, etherStatsHighCapacityOverflowPkts128to255Octets=etherStatsHighCapacityOverflowPkts128to255Octets, nlMatrixDSHighCapacityOverflowPkts=nlMatrixDSHighCapacityOverflowPkts, mediaIndependentDropEvents=mediaIndependentDropEvents, nlMatrixDSHighCapacityTable=nlMatrixDSHighCapacityTable, hcRmonMIBCompliance=hcRmonMIBCompliance, hostTimeHighCapacityInOverflowOctets=hostTimeHighCapacityInOverflowOctets, nlHostHighCapacityInOctets=nlHostHighCapacityInOctets, mediaIndependentOutHighCapacityOctets=mediaIndependentOutHighCapacityOctets, protocolDistStatsHighCapacityEntry=protocolDistStatsHighCapacityEntry, nlHostHighCapacityTable=nlHostHighCapacityTable, alMatrixTopNHighCapacityPktRate=alMatrixTopNHighCapacityPktRate, mediaIndependentOutOverflowOctets=mediaIndependentOutOverflowOctets, alMatrixTopNHighCapacityOverflowPktRate=alMatrixTopNHighCapacityOverflowPktRate, matrixSDHighCapacityEntry=matrixSDHighCapacityEntry, usrHistoryHighCapacityTable=usrHistoryHighCapacityTable, etherStatsHighCapacityOctets=etherStatsHighCapacityOctets, mediaIndependentInputSpeed=mediaIndependentInputSpeed, captureBufferHighCapacityGroup=captureBufferHighCapacityGroup, matrixSDHighCapacityTable=matrixSDHighCapacityTable, alMatrixSDHighCapacityEntry=alMatrixSDHighCapacityEntry, nlMatrixTopNHighCapacityPktRate=nlMatrixTopNHighCapacityPktRate, nlMatrixDSHighCapacityOctets=nlMatrixDSHighCapacityOctets, nlMatrixTopNHighCapacityReverseBasePktRate=nlMatrixTopNHighCapacityReverseBasePktRate, nlHostHighCapacityOutOctets=nlHostHighCapacityOutOctets, hostHighCapacityInOverflowPkts=hostHighCapacityInOverflowPkts, hostTimeHighCapacityTable=hostTimeHighCapacityTable, nlMatrixSDHighCapacityTable=nlMatrixSDHighCapacityTable, mediaIndependentDroppedFrames=mediaIndependentDroppedFrames, alMatrixDSHighCapacityOverflowOctets=alMatrixDSHighCapacityOverflowOctets, hostTimeHighCapacityEntry=hostTimeHighCapacityEntry, nlHostHighCapacityInOverflowPkts=nlHostHighCapacityInOverflowPkts, alHostHighCapacityInOverflowPkts=alHostHighCapacityInOverflowPkts, alHostHighCapacityOutOverflowPkts=alHostHighCapacityOutOverflowPkts, etherStatsHighCapacityOverflowOctets=etherStatsHighCapacityOverflowOctets, etherStatsHighCapacityOverflowPkts64Octets=etherStatsHighCapacityOverflowPkts64Octets, hostHighCapacityOutOctets=hostHighCapacityOutOctets, hostTopNRateBase=hostTopNRateBase, alMatrixDSHighCapacityOctets=alMatrixDSHighCapacityOctets, nlHostHighCapacityInOverflowOctets=nlHostHighCapacityInOverflowOctets, etherStatsHighCapacityGroup=etherStatsHighCapacityGroup, mediaIndependentOutPkts=mediaIndependentOutPkts, alMatrixTopNHighCapacityReverseOverflowPktRate=alMatrixTopNHighCapacityReverseOverflowPktRate, matrixSDHighCapacityOverflowPkts=matrixSDHighCapacityOverflowPkts, mediaIndependentInOverflowOctets=mediaIndependentInOverflowOctets, mediaIndependentOutOverflowPkts=mediaIndependentOutOverflowPkts, mediaIndependentOutErrors=mediaIndependentOutErrors, nlMatrixTopNHighCapacityReverseOverflowOctetRate=nlMatrixTopNHighCapacityReverseOverflowOctetRate, alMatrixTopNHighCapacityBaseOctetRate=alMatrixTopNHighCapacityBaseOctetRate, etherHistoryHighCapacityTable=etherHistoryHighCapacityTable, hostHighCapacityTable=hostHighCapacityTable, matrixSDHighCapacityPkts=matrixSDHighCapacityPkts, alHostHighCapacityGroup=alHostHighCapacityGroup, alHostHighCapacityOutOctets=alHostHighCapacityOutOctets, alMatrixTopNHighCapacityReverseBaseOctetRate=alMatrixTopNHighCapacityReverseBaseOctetRate, etherStatsHighCapacityPkts256to511Octets=etherStatsHighCapacityPkts256to511Octets, mediaIndependentOutNUCastOverflowPkts=mediaIndependentOutNUCastOverflowPkts, etherHistoryHighCapacityEntry=etherHistoryHighCapacityEntry, mediaIndependentInErrors=mediaIndependentInErrors, nlMatrixSDHighCapacityEntry=nlMatrixSDHighCapacityEntry, mediaIndependentStatus=mediaIndependentStatus, hostTimeHighCapacityOutOverflowPkts=hostTimeHighCapacityOutOverflowPkts, nlHostHighCapacityOutOverflowPkts=nlHostHighCapacityOutOverflowPkts, etherStatsHighCapacityPkts64Octets=etherStatsHighCapacityPkts64Octets, mediaIndependentInNUCastOverflowPkts=mediaIndependentInNUCastOverflowPkts, mediaIndependentOutHighCapacityPkts=mediaIndependentOutHighCapacityPkts, alMatrixTopNHighCapacityReverseOverflowOctetRate=alMatrixTopNHighCapacityReverseOverflowOctetRate, alHostHighCapacityInOctets=alHostHighCapacityInOctets, alMatrixSDHighCapacityTable=alMatrixSDHighCapacityTable, etherHistoryHighCapacityGroup=etherHistoryHighCapacityGroup, nlMatrixTopNHighCapacityTable=nlMatrixTopNHighCapacityTable, matrixDSHighCapacityOverflowOctets=matrixDSHighCapacityOverflowOctets, alMatrixTopNControlRateBase=alMatrixTopNControlRateBase, mediaIndependentIndex=mediaIndependentIndex, alMatrixTopNHighCapacityReverseBasePktRate=alMatrixTopNHighCapacityReverseBasePktRate, nlMatrixTopNHighCapacityOctetRate=nlMatrixTopNHighCapacityOctetRate, hostHighCapacityOutOverflowPkts=hostHighCapacityOutOverflowPkts, hcRMONCapabilities=hcRMONCapabilities, mediaIndependentInPkts=mediaIndependentInPkts, usrHistoryHighCapacityAbsValue=usrHistoryHighCapacityAbsValue, hostTopNHighCapacityGroup=hostTopNHighCapacityGroup, protocolDistStatsHighCapacityTable=protocolDistStatsHighCapacityTable, mediaIndependentStats=mediaIndependentStats, protocolDistStatsHighCapacityOverflowPkts=protocolDistStatsHighCapacityOverflowPkts, nlMatrixTopNHighCapacityBaseOctetRate=nlMatrixTopNHighCapacityBaseOctetRate, nlHostHighCapacityOutPkts=nlHostHighCapacityOutPkts, matrixDSHighCapacityTable=matrixDSHighCapacityTable, hcRmon2MIBCompliance=hcRmon2MIBCompliance, hostTimeHighCapacityOutOctets=hostTimeHighCapacityOutOctets, nlMatrixTopNHighCapacityEntry=nlMatrixTopNHighCapacityEntry, matrixSDHighCapacityOctets=matrixSDHighCapacityOctets, nlMatrixDSHighCapacityOverflowOctets=nlMatrixDSHighCapacityOverflowOctets, RmonGauge64=RmonGauge64, etherStatsHighCapacityPkts128to255Octets=etherStatsHighCapacityPkts128to255Octets, etherHistoryHighCapacityOverflowOctets=etherHistoryHighCapacityOverflowOctets, captureBufferPacketHighCapacityTime=captureBufferPacketHighCapacityTime, etherStatsHighCapacityEntry=etherStatsHighCapacityEntry, mediaIndependentOutputSpeed=mediaIndependentOutputSpeed, nlMatrixSDHighCapacityOctets=nlMatrixSDHighCapacityOctets, mediaIndependentInHighCapacityPkts=mediaIndependentInHighCapacityPkts, etherHistoryHighCapacityOctets=etherHistoryHighCapacityOctets, nlMatrixTopNHighCapacityOverflowPktRate=nlMatrixTopNHighCapacityOverflowPktRate, alMatrixTopNHighCapacityTable=alMatrixTopNHighCapacityTable, nlMatrixTopNControlRateBase=nlMatrixTopNControlRateBase, nlMatrixTopNHighCapacityBasePktRate=nlMatrixTopNHighCapacityBasePktRate, alMatrixTopNHighCapacityGroup=alMatrixTopNHighCapacityGroup, nlMatrixTopNHighCapacityReverseOctetRate=nlMatrixTopNHighCapacityReverseOctetRate, mediaIndependentEntry=mediaIndependentEntry, mediaIndependentGroup=mediaIndependentGroup, alMatrixDSHighCapacityTable=alMatrixDSHighCapacityTable, hostHighCapacityInPkts=hostHighCapacityInPkts, mediaIndependentInOctets=mediaIndependentInOctets, nlHostHighCapacityInPkts=nlHostHighCapacityInPkts, mediaIndependentOutOctets=mediaIndependentOutOctets, alMatrixTopNHighCapacityReverseOctetRate=alMatrixTopNHighCapacityReverseOctetRate)
