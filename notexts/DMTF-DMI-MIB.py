#
# PySNMP MIB module DMTF-DMI-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/DMTF-DMI-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 15:50:54 2022
# On host fv-az77-763 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Bits, NotificationType, TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, MibIdentifier, Gauge32, enterprises, ObjectIdentity, iso, Integer32, Unsigned32, ModuleIdentity, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "NotificationType", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "MibIdentifier", "Gauge32", "enterprises", "ObjectIdentity", "iso", "Integer32", "Unsigned32", "ModuleIdentity", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
dmtf = MibIdentifier((1, 3, 6, 1, 4, 1, 412))
dmiMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 412, 1))
dmiMIB.setRevisions(('1995-07-13 20:00', '1997-10-22 18:00',))
if mibBuilder.loadTexts: dmiMIB.setLastUpdated('9710221800Z')
if mibBuilder.loadTexts: dmiMIB.setOrganization('DMTF SNMP/DMI Mapping Working Committee')
dmtfStdMifs = MibIdentifier((1, 3, 6, 1, 4, 1, 412, 2))
dmtfDynOids = MibIdentifier((1, 3, 6, 1, 4, 1, 412, 3))
dmiMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 412, 1, 1))
dmiClasses = MibIdentifier((1, 3, 6, 1, 4, 1, 412, 1, 1, 1))
dmiComponents = MibIdentifier((1, 3, 6, 1, 4, 1, 412, 1, 1, 2))
dmiMappingAgent = MibIdentifier((1, 3, 6, 1, 4, 1, 412, 1, 1, 3))
dmiNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 412, 1, 2))
dmiIndications = MibIdentifier((1, 3, 6, 1, 4, 1, 412, 1, 2, 0))
dmiEventVars = MibIdentifier((1, 3, 6, 1, 4, 1, 412, 1, 2, 1))
dmiMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 412, 1, 3))
dmiMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 412, 1, 3, 1))
dmiMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 412, 1, 3, 2))
dmiNotificationGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 412, 1, 3, 3))
class DmiAccess(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("unknown", 1), ("readOnly", 2), ("readWrite", 3), ("writeOnly", 4), ("unsupported", 5))

class DmiDate(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(25, 25)
    fixedLength = 25

class DmiInteger64(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

class DmiString(TextualConvention, OctetString):
    status = 'current'

class DmiType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))
    namedValues = NamedValues(("unknown", 1), ("counter32", 2), ("counter64", 3), ("gauge32", 4), ("integer32", 5), ("integer64", 6), ("octetString", 7), ("displayString", 8), ("date", 9))

class DmiTDAddress(TextualConvention, OctetString):
    reference = 'RFC 1906, Transport Mappings for SNMP Version 2'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 255)

dmiClassTable = MibTable((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 1), )
if mibBuilder.loadTexts: dmiClassTable.setStatus('current')
dmiClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 1, 1), ).setIndexNames((0, "DMTF-DMI-MIB", "dmiClassIndex"))
if mibBuilder.loadTexts: dmiClassEntry.setStatus('current')
dmiClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiClassIndex.setStatus('current')
dmiClassString = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 1, 1, 2), DmiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiClassString.setStatus('current')
dmiClassVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiClassVersion.setStatus('current')
dmiClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 1, 1, 4), DmiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiClassName.setStatus('current')
dmiClassOID = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 1, 1, 5), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiClassOID.setStatus('current')
dmiClassKeyCount = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiClassKeyCount.setStatus('current')
dmiClassDescrLength = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiClassDescrLength.setStatus('current')
dmiClassPragma = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 1, 1, 8), DmiString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiClassPragma.setStatus('current')
dmiAttributeTable = MibTable((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 2), )
if mibBuilder.loadTexts: dmiAttributeTable.setStatus('current')
dmiAttributeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 2, 1), ).setIndexNames((0, "DMTF-DMI-MIB", "dmiClassIndex"), (0, "DMTF-DMI-MIB", "dmiAttrId"))
if mibBuilder.loadTexts: dmiAttributeEntry.setStatus('current')
dmiAttrId = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiAttrId.setStatus('current')
dmiAttrName = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 2, 1, 2), DmiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiAttrName.setStatus('current')
dmiAttrAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 2, 1, 3), DmiAccess()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiAttrAccess.setStatus('current')
dmiAttrType = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 2, 1, 4), DmiType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiAttrType.setStatus('current')
dmiAttrMaxSize = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiAttrMaxSize.setStatus('current')
dmiAttrEnumListCount = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiAttrEnumListCount.setStatus('current')
dmiAttrDescrLength = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiAttrDescrLength.setStatus('current')
dmiKeyTable = MibTable((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 3), )
if mibBuilder.loadTexts: dmiKeyTable.setStatus('current')
dmiKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 3, 1), ).setIndexNames((0, "DMTF-DMI-MIB", "dmiClassIndex"), (0, "DMTF-DMI-MIB", "dmiKeyIndex"))
if mibBuilder.loadTexts: dmiKeyEntry.setStatus('current')
dmiKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiKeyIndex.setStatus('current')
dmiKeyType = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 3, 1, 2), DmiType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiKeyType.setStatus('current')
dmiKeyAttrId = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiKeyAttrId.setStatus('current')
dmiDescrTable = MibTable((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 4), )
if mibBuilder.loadTexts: dmiDescrTable.setStatus('current')
dmiDescrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 4, 1), ).setIndexNames((0, "DMTF-DMI-MIB", "dmiClassIndex"), (0, "DMTF-DMI-MIB", "dmiAttrId"), (0, "DMTF-DMI-MIB", "dmiDescrIndex"))
if mibBuilder.loadTexts: dmiDescrEntry.setStatus('current')
dmiDescrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiDescrIndex.setStatus('current')
dmiDescrText = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 4, 1, 2), DmiString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiDescrText.setStatus('current')
dmiEnumTable = MibTable((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 5), )
if mibBuilder.loadTexts: dmiEnumTable.setStatus('current')
dmiEnumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 5, 1), ).setIndexNames((0, "DMTF-DMI-MIB", "dmiClassIndex"), (0, "DMTF-DMI-MIB", "dmiAttrId"), (0, "DMTF-DMI-MIB", "dmiEnumId"))
if mibBuilder.loadTexts: dmiEnumEntry.setStatus('current')
dmiEnumId = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 5, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiEnumId.setStatus('current')
dmiEnumValue = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiEnumValue.setStatus('current')
dmiEnumString = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 1, 5, 1, 3), DmiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiEnumString.setStatus('current')
dmiComponentTable = MibTable((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 1), )
if mibBuilder.loadTexts: dmiComponentTable.setStatus('current')
dmiComponentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 1, 1), ).setIndexNames((0, "DMTF-DMI-MIB", "dmiCompId"))
if mibBuilder.loadTexts: dmiComponentEntry.setStatus('current')
dmiCompId = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiCompId.setStatus('current')
dmiCompName = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 1, 1, 2), DmiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiCompName.setStatus('current')
dmiCompDescrLength = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiCompDescrLength.setStatus('current')
dmiCompGroupCount = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiCompGroupCount.setStatus('current')
dmiCompPragma = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 1, 1, 5), DmiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiCompPragma.setStatus('current')
dmiCompDescrTable = MibTable((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 2), )
if mibBuilder.loadTexts: dmiCompDescrTable.setStatus('current')
dmiCompDescrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 2, 1), ).setIndexNames((0, "DMTF-DMI-MIB", "dmiCompId"), (0, "DMTF-DMI-MIB", "dmiCompDescrIndex"))
if mibBuilder.loadTexts: dmiCompDescrEntry.setStatus('current')
dmiCompDescrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiCompDescrIndex.setStatus('current')
dmiCompDescrText = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 2, 1, 2), DmiString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiCompDescrText.setStatus('current')
dmiGroupTable = MibTable((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 3), )
if mibBuilder.loadTexts: dmiGroupTable.setStatus('current')
dmiGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 3, 1), ).setIndexNames((0, "DMTF-DMI-MIB", "dmiCompId"), (0, "DMTF-DMI-MIB", "dmiGroupId"))
if mibBuilder.loadTexts: dmiGroupEntry.setStatus('current')
dmiGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiGroupId.setStatus('current')
dmiGroupClassString = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 3, 1, 2), DmiString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiGroupClassString.setStatus('current')
dmiGroupVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiGroupVersion.setStatus('current')
dmiGroupClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiGroupClassIndex.setStatus('current')
dmiLanguageTable = MibTable((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 4), )
if mibBuilder.loadTexts: dmiLanguageTable.setStatus('current')
dmiLanguageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 4, 1), ).setIndexNames((0, "DMTF-DMI-MIB", "dmiCompId"), (1, "DMTF-DMI-MIB", "dmiLanguage"))
if mibBuilder.loadTexts: dmiLanguageEntry.setStatus('current')
dmiLanguage = MibTableColumn((1, 3, 6, 1, 4, 1, 412, 1, 1, 2, 4, 1, 1), DmiString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(16, 16), ValueSizeConstraint(14, 14), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiLanguage.setStatus('current')
dmiMappingLevel = MibScalar((1, 3, 6, 1, 4, 1, 412, 1, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dmiMappingLevel.setStatus('current')
dmiEventType = MibScalar((1, 3, 6, 1, 4, 1, 412, 1, 2, 1, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dmiEventType.setStatus('current')
dmiEventSeverity = MibScalar((1, 3, 6, 1, 4, 1, 412, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32))).clone(namedValues=NamedValues(("monitor", 1), ("information", 2), ("ok", 4), ("nonCritical", 8), ("critical", 16), ("nonRecoverable", 32)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dmiEventSeverity.setStatus('current')
dmiEventStateKey = MibScalar((1, 3, 6, 1, 4, 1, 412, 1, 2, 1, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dmiEventStateKey.setStatus('current')
dmiEventAssociatedGroup = MibScalar((1, 3, 6, 1, 4, 1, 412, 1, 2, 1, 5), DmiString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dmiEventAssociatedGroup.setStatus('current')
dmiEventSystem = MibScalar((1, 3, 6, 1, 4, 1, 412, 1, 2, 1, 6), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dmiEventSystem.setStatus('current')
dmiEventSubSystem = MibScalar((1, 3, 6, 1, 4, 1, 412, 1, 2, 1, 7), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dmiEventSubSystem.setStatus('current')
dmiEventSolution = MibScalar((1, 3, 6, 1, 4, 1, 412, 1, 2, 1, 8), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dmiEventSolution.setStatus('current')
dmiEventVendorMsg = MibScalar((1, 3, 6, 1, 4, 1, 412, 1, 2, 1, 10), DmiString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dmiEventVendorMsg.setStatus('current')
dmiEventVendorData = MibScalar((1, 3, 6, 1, 4, 1, 412, 1, 2, 1, 11), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dmiEventVendorData.setStatus('current')
dmiEventDateTime = MibScalar((1, 3, 6, 1, 4, 1, 412, 1, 2, 1, 12), DmiDate()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dmiEventDateTime.setStatus('current')
dmiEventClassString = MibScalar((1, 3, 6, 1, 4, 1, 412, 1, 2, 1, 13), DmiString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dmiEventClassString.setStatus('current')
dmiEventSource = MibScalar((1, 3, 6, 1, 4, 1, 412, 1, 2, 1, 14), DmiTDAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dmiEventSource.setStatus('current')
dmiEventIndication = NotificationType((1, 3, 6, 1, 4, 1, 412, 1, 2, 0, 1)).setObjects(("DMTF-DMI-MIB", "dmiEventClassString"), ("DMTF-DMI-MIB", "dmiEventType"), ("DMTF-DMI-MIB", "dmiEventDateTime"), ("DMTF-DMI-MIB", "dmiCompId"), ("DMTF-DMI-MIB", "dmiEventSeverity"), ("DMTF-DMI-MIB", "dmiEventStateKey"), ("DMTF-DMI-MIB", "dmiEventAssociatedGroup"), ("DMTF-DMI-MIB", "dmiEventSystem"), ("DMTF-DMI-MIB", "dmiEventSubSystem"))
if mibBuilder.loadTexts: dmiEventIndication.setStatus('current')
dmiComponentAddedIndication = NotificationType((1, 3, 6, 1, 4, 1, 412, 1, 2, 0, 2)).setObjects(("DMTF-DMI-MIB", "dmiCompId"), ("DMTF-DMI-MIB", "dmiCompName"))
if mibBuilder.loadTexts: dmiComponentAddedIndication.setStatus('current')
dmiComponentDeletedIndication = NotificationType((1, 3, 6, 1, 4, 1, 412, 1, 2, 0, 3)).setObjects(("DMTF-DMI-MIB", "dmiCompId"))
if mibBuilder.loadTexts: dmiComponentDeletedIndication.setStatus('current')
dmiLanguageAddedIndication = NotificationType((1, 3, 6, 1, 4, 1, 412, 1, 2, 0, 4)).setObjects(("DMTF-DMI-MIB", "dmiCompId"), ("DMTF-DMI-MIB", "dmiLanguage"))
if mibBuilder.loadTexts: dmiLanguageAddedIndication.setStatus('current')
dmiLanguageDeletedIndication = NotificationType((1, 3, 6, 1, 4, 1, 412, 1, 2, 0, 5)).setObjects(("DMTF-DMI-MIB", "dmiCompId"), ("DMTF-DMI-MIB", "dmiLanguage"))
if mibBuilder.loadTexts: dmiLanguageDeletedIndication.setStatus('current')
dmiGroupAddedIndication = NotificationType((1, 3, 6, 1, 4, 1, 412, 1, 2, 0, 6)).setObjects(("DMTF-DMI-MIB", "dmiCompId"), ("DMTF-DMI-MIB", "dmiGroupId"), ("DMTF-DMI-MIB", "dmiGroupClassString"))
if mibBuilder.loadTexts: dmiGroupAddedIndication.setStatus('current')
dmiGroupDeletedIndication = NotificationType((1, 3, 6, 1, 4, 1, 412, 1, 2, 0, 7)).setObjects(("DMTF-DMI-MIB", "dmiCompId"), ("DMTF-DMI-MIB", "dmiGroupId"))
if mibBuilder.loadTexts: dmiGroupDeletedIndication.setStatus('current')
dmiClassesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 412, 1, 3, 2, 1)).setObjects(("DMTF-DMI-MIB", "dmiClassIndex"), ("DMTF-DMI-MIB", "dmiClassString"), ("DMTF-DMI-MIB", "dmiClassVersion"), ("DMTF-DMI-MIB", "dmiClassName"), ("DMTF-DMI-MIB", "dmiClassOID"), ("DMTF-DMI-MIB", "dmiClassKeyCount"), ("DMTF-DMI-MIB", "dmiClassDescrLength"), ("DMTF-DMI-MIB", "dmiClassPragma"), ("DMTF-DMI-MIB", "dmiAttrId"), ("DMTF-DMI-MIB", "dmiAttrName"), ("DMTF-DMI-MIB", "dmiAttrAccess"), ("DMTF-DMI-MIB", "dmiAttrType"), ("DMTF-DMI-MIB", "dmiAttrMaxSize"), ("DMTF-DMI-MIB", "dmiAttrEnumListCount"), ("DMTF-DMI-MIB", "dmiAttrDescrLength"), ("DMTF-DMI-MIB", "dmiKeyIndex"), ("DMTF-DMI-MIB", "dmiKeyType"), ("DMTF-DMI-MIB", "dmiKeyAttrId"), ("DMTF-DMI-MIB", "dmiDescrIndex"), ("DMTF-DMI-MIB", "dmiDescrText"), ("DMTF-DMI-MIB", "dmiEnumId"), ("DMTF-DMI-MIB", "dmiEnumValue"), ("DMTF-DMI-MIB", "dmiEnumString"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dmiClassesGroup = dmiClassesGroup.setStatus('current')
dmiComponentsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 412, 1, 3, 2, 2)).setObjects(("DMTF-DMI-MIB", "dmiCompId"), ("DMTF-DMI-MIB", "dmiCompName"), ("DMTF-DMI-MIB", "dmiCompDescrLength"), ("DMTF-DMI-MIB", "dmiCompGroupCount"), ("DMTF-DMI-MIB", "dmiCompPragma"), ("DMTF-DMI-MIB", "dmiCompDescrIndex"), ("DMTF-DMI-MIB", "dmiCompDescrText"), ("DMTF-DMI-MIB", "dmiGroupId"), ("DMTF-DMI-MIB", "dmiGroupClassString"), ("DMTF-DMI-MIB", "dmiGroupVersion"), ("DMTF-DMI-MIB", "dmiGroupClassId"), ("DMTF-DMI-MIB", "dmiLanguage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dmiComponentsGroup = dmiComponentsGroup.setStatus('current')
dmiNotificationObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 412, 1, 3, 2, 3)).setObjects(("DMTF-DMI-MIB", "dmiCompId"), ("DMTF-DMI-MIB", "dmiCompName"), ("DMTF-DMI-MIB", "dmiGroupId"), ("DMTF-DMI-MIB", "dmiGroupClassString"), ("DMTF-DMI-MIB", "dmiLanguage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dmiNotificationObjectGroup = dmiNotificationObjectGroup.setStatus('current')
dmiMappingAgentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 412, 1, 3, 2, 4)).setObjects(("DMTF-DMI-MIB", "dmiMappingLevel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dmiMappingAgentGroup = dmiMappingAgentGroup.setStatus('current')
dmiNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 412, 1, 3, 3, 1)).setObjects(("DMTF-DMI-MIB", "dmiComponentAddedIndication"), ("DMTF-DMI-MIB", "dmiComponentDeletedIndication"), ("DMTF-DMI-MIB", "dmiLanguageAddedIndication"), ("DMTF-DMI-MIB", "dmiLanguageDeletedIndication"), ("DMTF-DMI-MIB", "dmiGroupAddedIndication"), ("DMTF-DMI-MIB", "dmiGroupDeletedIndication"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dmiNotificationsGroup = dmiNotificationsGroup.setStatus('current')
dmiMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 412, 1, 3, 1, 1)).setObjects(("DMTF-DMI-MIB", "dmiMappingAgentGroup"), ("DMTF-DMI-MIB", "dmiClassesGroup"), ("DMTF-DMI-MIB", "dmiComponentsGroup"), ("DMTF-DMI-MIB", "dmiNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dmiMIBCompliance = dmiMIBCompliance.setStatus('current')
dmiNotificationsOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 412, 1, 3, 1, 2)).setObjects(("DMTF-DMI-MIB", "dmiMappingAgentGroup"), ("DMTF-DMI-MIB", "dmiNotificationObjectGroup"), ("DMTF-DMI-MIB", "dmiNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dmiNotificationsOnlyCompliance = dmiNotificationsOnlyCompliance.setStatus('current')
mibBuilder.exportSymbols("DMTF-DMI-MIB", dmiGroupId=dmiGroupId, dmiMappingLevel=dmiMappingLevel, dmiEventVendorMsg=dmiEventVendorMsg, dmiCompDescrText=dmiCompDescrText, dmiCompGroupCount=dmiCompGroupCount, dmiGroupAddedIndication=dmiGroupAddedIndication, dmiAttributeTable=dmiAttributeTable, dmiAttrAccess=dmiAttrAccess, dmiLanguageAddedIndication=dmiLanguageAddedIndication, PYSNMP_MODULE_ID=dmiMIB, dmiClasses=dmiClasses, DmiString=DmiString, dmiComponentDeletedIndication=dmiComponentDeletedIndication, dmiNotificationGroups=dmiNotificationGroups, dmiComponentEntry=dmiComponentEntry, dmiCompDescrLength=dmiCompDescrLength, dmiMappingAgentGroup=dmiMappingAgentGroup, dmiClassIndex=dmiClassIndex, dmiClassEntry=dmiClassEntry, dmiKeyEntry=dmiKeyEntry, DmiType=DmiType, dmiGroupTable=dmiGroupTable, dmiGroupDeletedIndication=dmiGroupDeletedIndication, dmiKeyIndex=dmiKeyIndex, dmiEventSystem=dmiEventSystem, dmiEventSeverity=dmiEventSeverity, dmiEventIndication=dmiEventIndication, dmiCompDescrEntry=dmiCompDescrEntry, dmiClassName=dmiClassName, DmiAccess=DmiAccess, dmiClassString=dmiClassString, dmiEventSolution=dmiEventSolution, dmiEventType=dmiEventType, dmtfStdMifs=dmtfStdMifs, dmiMIB=dmiMIB, DmiTDAddress=DmiTDAddress, dmiNotifications=dmiNotifications, dmiClassesGroup=dmiClassesGroup, dmiIndications=dmiIndications, dmiEventVendorData=dmiEventVendorData, dmiEnumId=dmiEnumId, dmiComponents=dmiComponents, dmiKeyType=dmiKeyType, dmtfDynOids=dmtfDynOids, dmiCompDescrTable=dmiCompDescrTable, dmtf=dmtf, dmiAttrName=dmiAttrName, dmiGroupVersion=dmiGroupVersion, DmiInteger64=DmiInteger64, dmiMIBCompliance=dmiMIBCompliance, dmiAttrMaxSize=dmiAttrMaxSize, dmiGroupClassIndex=dmiGroupClassIndex, dmiClassKeyCount=dmiClassKeyCount, dmiClassPragma=dmiClassPragma, dmiCompName=dmiCompName, dmiEnumTable=dmiEnumTable, dmiComponentTable=dmiComponentTable, dmiLanguageTable=dmiLanguageTable, dmiNotificationsOnlyCompliance=dmiNotificationsOnlyCompliance, dmiGroupEntry=dmiGroupEntry, dmiEventVars=dmiEventVars, dmiEnumEntry=dmiEnumEntry, dmiGroupClassString=dmiGroupClassString, dmiLanguage=dmiLanguage, dmiLanguageDeletedIndication=dmiLanguageDeletedIndication, dmiDescrText=dmiDescrText, dmiEventDateTime=dmiEventDateTime, dmiEnumString=dmiEnumString, dmiDescrEntry=dmiDescrEntry, dmiLanguageEntry=dmiLanguageEntry, dmiAttrType=dmiAttrType, dmiEventStateKey=dmiEventStateKey, dmiAttributeEntry=dmiAttributeEntry, dmiMIBCompliances=dmiMIBCompliances, dmiClassVersion=dmiClassVersion, dmiComponentAddedIndication=dmiComponentAddedIndication, dmiMappingAgent=dmiMappingAgent, dmiAttrEnumListCount=dmiAttrEnumListCount, dmiEnumValue=dmiEnumValue, dmiDescrIndex=dmiDescrIndex, dmiMIBGroups=dmiMIBGroups, dmiEventAssociatedGroup=dmiEventAssociatedGroup, dmiClassDescrLength=dmiClassDescrLength, dmiDescrTable=dmiDescrTable, dmiNotificationsGroup=dmiNotificationsGroup, DmiDate=DmiDate, dmiEventSubSystem=dmiEventSubSystem, dmiCompPragma=dmiCompPragma, dmiCompId=dmiCompId, dmiComponentsGroup=dmiComponentsGroup, dmiClassOID=dmiClassOID, dmiEventClassString=dmiEventClassString, dmiClassTable=dmiClassTable, dmiMIBConformance=dmiMIBConformance, dmiCompDescrIndex=dmiCompDescrIndex, dmiEventSource=dmiEventSource, dmiKeyAttrId=dmiKeyAttrId, dmiMIBObjects=dmiMIBObjects, dmiKeyTable=dmiKeyTable, dmiAttrId=dmiAttrId, dmiNotificationObjectGroup=dmiNotificationObjectGroup, dmiAttrDescrLength=dmiAttrDescrLength)
