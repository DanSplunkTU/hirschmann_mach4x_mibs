#
# PySNMP MIB module PRVT-SWITCH-IPVLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-SWITCH-IPVLAN-MIB
# Produced by pysmi-1.1.3 at Thu Dec  9 14:56:10 2021
# On host fv-az42-142 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ipSwitch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "ipSwitch")
dot1qVlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "dot1qVlanIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, NotificationType, ObjectIdentity, iso, TimeTicks, Integer32, IpAddress, Bits, ModuleIdentity, Counter64, Unsigned32, MibIdentifier, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "NotificationType", "ObjectIdentity", "iso", "TimeTicks", "Integer32", "IpAddress", "Bits", "ModuleIdentity", "Counter64", "Unsigned32", "MibIdentifier", "Gauge32")
DisplayString, RowStatus, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TruthValue")
prvtSwitchIpVlanMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 6, 2))
prvtSwitchIpVlanMIB.setRevisions(('2009-10-05 00:00',))
if mibBuilder.loadTexts: prvtSwitchIpVlanMIB.setLastUpdated('200910050000Z')
if mibBuilder.loadTexts: prvtSwitchIpVlanMIB.setOrganization('BATM Advanced Communication')
ipInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 6, 2, 1))
ipInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 6, 2, 1, 1), )
if mibBuilder.loadTexts: ipInterfaceTable.setStatus('current')
ipInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 6, 2, 1, 1, 1), ).setIndexNames((0, "PRVT-SWITCH-IPVLAN-MIB", "ipInterfaceName"))
if mibBuilder.loadTexts: ipInterfaceEntry.setStatus('current')
ipInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 6, 2, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: ipInterfaceName.setStatus('current')
ipInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 6, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipInterfaceIndex.setStatus('current')
ipInterfaceIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 6, 2, 1, 1, 1, 3), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipInterfaceIpAddress.setStatus('current')
ipInterfaceSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 6, 2, 1, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipInterfaceSubnetMask.setStatus('current')
ipInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 6, 2, 1, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipInterfaceRowStatus.setStatus('current')
ipInterfaceIPv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 6, 2, 1, 1, 1, 6), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipInterfaceIPv6Address.setStatus('current')
ipVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 6, 2, 2))
ipVlanTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 6, 2, 2, 1), )
if mibBuilder.loadTexts: ipVlanTable.setStatus('current')
ipVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 6, 2, 2, 1, 1), ).setIndexNames((0, "Q-BRIDGE-MIB", "dot1qVlanIndex"), (0, "PRVT-SWITCH-IPVLAN-MIB", "ipInterfaceName"))
if mibBuilder.loadTexts: ipVlanEntry.setStatus('current')
ipVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 6, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("attached", 1), ("detached", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipVlanStatus.setStatus('current')
ipVlanManagementTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 6, 2, 2, 2), )
if mibBuilder.loadTexts: ipVlanManagementTable.setStatus('current')
ipVlanManagementEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 6, 2, 2, 2, 1), ).setIndexNames((0, "PRVT-SWITCH-IPVLAN-MIB", "ipVlanManagementVlanId"))
if mibBuilder.loadTexts: ipVlanManagementEntry.setStatus('current')
ipVlanManagementVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 6, 2, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4092)))
if mibBuilder.loadTexts: ipVlanManagementVlanId.setStatus('current')
ipVlanManagementStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 6, 2, 2, 2, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipVlanManagementStatus.setStatus('current')
mibBuilder.exportSymbols("PRVT-SWITCH-IPVLAN-MIB", ipInterfaceEntry=ipInterfaceEntry, ipInterfaceTable=ipInterfaceTable, ipVlanEntry=ipVlanEntry, ipInterfaceIndex=ipInterfaceIndex, ipVlanManagementTable=ipVlanManagementTable, ipVlanManagementVlanId=ipVlanManagementVlanId, ipVlanManagementEntry=ipVlanManagementEntry, ipVlanStatus=ipVlanStatus, ipInterfaceRowStatus=ipInterfaceRowStatus, ipVlanTable=ipVlanTable, ipInterface=ipInterface, ipInterfaceIPv6Address=ipInterfaceIPv6Address, ipVlan=ipVlan, ipInterfaceName=ipInterfaceName, ipInterfaceSubnetMask=ipInterfaceSubnetMask, ipVlanManagementStatus=ipVlanManagementStatus, prvtSwitchIpVlanMIB=prvtSwitchIpVlanMIB, ipInterfaceIpAddress=ipInterfaceIpAddress, PYSNMP_MODULE_ID=prvtSwitchIpVlanMIB)
