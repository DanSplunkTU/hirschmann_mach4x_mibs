#
# PySNMP MIB module PRVT-SWITCH-IPVLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binos/PRVT-SWITCH-IPVLAN-MIB
# Produced by pysmi-1.1.3 at Mon Nov 22 12:20:47 2021
# On host fv-az36-755 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ipSwitch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "ipSwitch")
dot1qVlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "dot1qVlanIndex")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, TimeTicks, MibIdentifier, ModuleIdentity, Integer32, iso, Gauge32, NotificationType, Unsigned32, IpAddress, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "TimeTicks", "MibIdentifier", "ModuleIdentity", "Integer32", "iso", "Gauge32", "NotificationType", "Unsigned32", "IpAddress", "ObjectIdentity")
TruthValue, DisplayString, TextualConvention, RowStatus, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention", "RowStatus", "MacAddress")
prvtSwitchIpVLANMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 1, 6, 2))
prvtSwitchIpVLANMib.setRevisions(('2008-01-01 00:00', '2006-11-03 09:59', '2005-02-16 09:59', '2000-11-24 09:59',))
if mibBuilder.loadTexts: prvtSwitchIpVLANMib.setLastUpdated('200801010000Z')
if mibBuilder.loadTexts: prvtSwitchIpVLANMib.setOrganization('BATM Advanced Communication')
ipInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 1))
ipVLAN = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 2))
ipInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 1, 1), )
if mibBuilder.loadTexts: ipInterfaceTable.setStatus('current')
ipInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 1, 1, 1), ).setIndexNames((0, "PRVT-SWITCH-IPVLAN-MIB", "ipInterfaceName"))
if mibBuilder.loadTexts: ipInterfaceEntry.setStatus('current')
ipInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipInterfaceName.setStatus('current')
ipInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipInterfaceIndex.setStatus('current')
ipInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pseudoInterface", 1), ("ipInterface", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipInterfaceType.setStatus('current')
ipInterfaceIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 1, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipInterfaceIpAddress.setStatus('current')
ipInterfaceSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 1, 1, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipInterfaceSubnetMask.setStatus('current')
ipInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 1, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipInterfaceRowStatus.setStatus('current')
ipLoInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 1, 2), )
if mibBuilder.loadTexts: ipLoInterfaceTable.setStatus('current')
ipLoInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 1, 2, 1), ).setIndexNames((0, "PRVT-SWITCH-IPVLAN-MIB", "ipLoInterfaceName"))
if mibBuilder.loadTexts: ipLoInterfaceEntry.setStatus('current')
ipLoInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipLoInterfaceName.setStatus('current')
ipLoInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipLoInterfaceIndex.setStatus('current')
ipLoInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pseudoInterface", 1), ("ipInterface", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipLoInterfaceType.setStatus('current')
ipLoInterfaceIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 1, 2, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipLoInterfaceIpAddress.setStatus('current')
ipLoInterfaceSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 1, 2, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipLoInterfaceSubnetMask.setStatus('current')
ipLoInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipLoInterfaceRowStatus.setStatus('current')
ipVLANTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 2, 1), )
if mibBuilder.loadTexts: ipVLANTable.setStatus('current')
ipVLANEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 2, 1, 1), ).setIndexNames((0, "Q-BRIDGE-MIB", "dot1qVlanIndex"), (0, "PRVT-SWITCH-IPVLAN-MIB", "ipInterfaceName"))
if mibBuilder.loadTexts: ipVLANEntry.setStatus('current')
ipVLANStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("attached", 1), ("detached", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipVLANStatus.setStatus('current')
ipPortMappingTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 2, 2), )
if mibBuilder.loadTexts: ipPortMappingTable.setStatus('current')
ipPortMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: ipPortMappingEntry.setStatus('current')
ipPortSwIface = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 2, 2, 2, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: ipPortSwIface.setStatus('current')
mibBuilder.exportSymbols("PRVT-SWITCH-IPVLAN-MIB", prvtSwitchIpVLANMib=prvtSwitchIpVLANMib, ipLoInterfaceSubnetMask=ipLoInterfaceSubnetMask, ipInterfaceSubnetMask=ipInterfaceSubnetMask, ipVLANEntry=ipVLANEntry, ipLoInterfaceIpAddress=ipLoInterfaceIpAddress, ipPortMappingTable=ipPortMappingTable, ipInterfaceTable=ipInterfaceTable, ipInterfaceIpAddress=ipInterfaceIpAddress, PYSNMP_MODULE_ID=prvtSwitchIpVLANMib, ipInterface=ipInterface, ipInterfaceType=ipInterfaceType, ipLoInterfaceEntry=ipLoInterfaceEntry, ipPortMappingEntry=ipPortMappingEntry, ipInterfaceName=ipInterfaceName, ipLoInterfaceTable=ipLoInterfaceTable, ipLoInterfaceType=ipLoInterfaceType, ipLoInterfaceRowStatus=ipLoInterfaceRowStatus, ipVLAN=ipVLAN, ipLoInterfaceName=ipLoInterfaceName, ipLoInterfaceIndex=ipLoInterfaceIndex, ipVLANTable=ipVLANTable, ipInterfaceEntry=ipInterfaceEntry, ipVLANStatus=ipVLANStatus, ipInterfaceIndex=ipInterfaceIndex, ipPortSwIface=ipPortSwIface, ipInterfaceRowStatus=ipInterfaceRowStatus)
