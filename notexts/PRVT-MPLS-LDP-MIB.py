#
# PySNMP MIB module PRVT-MPLS-LDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binos/PRVT-MPLS-LDP-MIB
# Produced by pysmi-1.1.3 at Sun Nov 28 17:13:06 2021
# On host fv-az135-491 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddressPrefixLength, InetAddress, InetPortNumber, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressPrefixLength", "InetAddress", "InetPortNumber", "InetAddressType")
MplsIndexType, = mibBuilder.importSymbols("MPLS-LSR-MIB", "MplsIndexType")
MplsAtmVcIdentifier, MplsLsrIdentifier, mplsStdMIB, MplsLdpIdentifier, MplsLspType, MplsLabelDistributionMethod, MplsLdpLabelType, MplsRetentionMode = mibBuilder.importSymbols("MPLS-TC-PRIV-STDEXT-MIB", "MplsAtmVcIdentifier", "MplsLsrIdentifier", "mplsStdMIB", "MplsLdpIdentifier", "MplsLspType", "MplsLabelDistributionMethod", "MplsLdpLabelType", "MplsRetentionMode")
prvtcrldpPmIndex, prvtcrldpSigIndex, mpls = mibBuilder.importSymbols("PRVT-CR-LDP-MIB", "prvtcrldpPmIndex", "prvtcrldpSigIndex", "mpls")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Gauge32, Integer32, ModuleIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Counter32, Counter64, IpAddress, Bits, TimeTicks, ObjectIdentity, iso, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Integer32", "ModuleIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Counter32", "Counter64", "IpAddress", "Bits", "TimeTicks", "ObjectIdentity", "iso", "NotificationType")
TruthValue, StorageType, RowStatus, TimeInterval, TimeStamp, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "StorageType", "RowStatus", "TimeInterval", "TimeStamp", "TextualConvention", "DisplayString")
mplsLdpStdMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1))
mplsLdpStdMIB.setRevisions(('2009-02-17 00:00', '2006-06-03 00:00',))
if mibBuilder.loadTexts: mplsLdpStdMIB.setLastUpdated('200902170000Z')
if mibBuilder.loadTexts: mplsLdpStdMIB.setOrganization('BATM Advanced Communication')
class MplsLabel(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class MplsLdpLabelTypes(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("generic", 1), ("atm", 2), ("frameRelay", 3))

mplsLdpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1))
mplsLdpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 2, 0))
mplsLdpConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 3))
mplsLdpLsrObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 1))
mplsLdpEntityObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2))
mplsLdpLsrTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 1, 1), )
if mibBuilder.loadTexts: mplsLdpLsrTable.setStatus('current')
mplsLdpLsrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 1, 1, 1), ).setIndexNames((0, "PRVT-CR-LDP-MIB", "prvtcrldpPmIndex"))
if mibBuilder.loadTexts: mplsLdpLsrEntry.setStatus('current')
mplsLdpLsrId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 1, 1, 1, 1), MplsLsrIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpLsrId.setStatus('current')
mplsLdpLsrLoopDetectionCapable = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("other", 2), ("hopCount", 3), ("pathVector", 4), ("hopCountAndPathVector", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpLsrLoopDetectionCapable.setStatus('current')
mplsLdpEntityTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1), )
if mibBuilder.loadTexts: mplsLdpEntityTable.setStatus('current')
mplsLdpEntityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1), ).setIndexNames((0, "PRVT-CR-LDP-MIB", "prvtcrldpSigIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityIndex"))
if mibBuilder.loadTexts: mplsLdpEntityEntry.setStatus('current')
mplsLdpEntityLdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 1), MplsLdpIdentifier())
if mibBuilder.loadTexts: mplsLdpEntityLdpId.setStatus('current')
mplsLdpEntityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: mplsLdpEntityIndex.setStatus('current')
mplsLdpEntityProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityProtocolVersion.setStatus('current')
mplsLdpEntityAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityAdminStatus.setStatus('current')
mplsLdpEntityOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("enabled", 2), ("disabled", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityOperStatus.setStatus('current')
mplsLdpEntityWellKnownTcpDiscoveryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 6), InetPortNumber().clone(646)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityWellKnownTcpDiscoveryPort.setStatus('current')
mplsLdpEntityWellKnownUdpDiscoveryPort = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 7), InetPortNumber().clone(646)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityWellKnownUdpDiscoveryPort.setStatus('current')
mplsLdpEntityMaxPduLength = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(256, 65535)).clone(4096)).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityMaxPduLength.setStatus('current')
mplsLdpEntityKeepAliveHoldTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(40)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityKeepAliveHoldTimer.setStatus('current')
mplsLdpEntityHelloHoldTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityHelloHoldTimer.setStatus('current')
mplsLdpEntityInitSessionThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(8)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityInitSessionThreshold.setStatus('current')
mplsLdpEntityLabelDistMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 12), MplsLabelDistributionMethod()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityLabelDistMethod.setStatus('current')
mplsLdpEntityLabelRetentionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 13), MplsRetentionMode()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityLabelRetentionMode.setStatus('current')
mplsLdpEntityPathVectorLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityPathVectorLimit.setStatus('current')
mplsLdpEntityHopCountLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityHopCountLimit.setStatus('current')
mplsLdpEntityTransportAddrKind = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("interface", 1), ("loopback", 2))).clone('loopback')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityTransportAddrKind.setStatus('current')
mplsLdpEntityTargetPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 17), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityTargetPeer.setStatus('current')
mplsLdpEntityTargetPeerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 18), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityTargetPeerAddrType.setStatus('current')
mplsLdpEntityTargetPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 19), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityTargetPeerAddr.setStatus('current')
mplsLdpEntityLabelType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 20), MplsLdpLabelType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityLabelType.setStatus('current')
mplsLdpEntityDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 21), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityDiscontinuityTime.setStatus('current')
mplsLdpEntityStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 22), StorageType().clone('nonVolatile')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStorageType.setStatus('current')
mplsLdpEntityRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 25), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityRowStatus.setStatus('current')
mplsLdpEntityWildcardEntity = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 1, 1, 24), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpEntityWildcardEntity.setStatus('current')
mplsLdpEntityStatsTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 4), )
if mibBuilder.loadTexts: mplsLdpEntityStatsTable.setStatus('current')
mplsLdpEntityStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 4, 1), )
mplsLdpEntityEntry.registerAugmentions(("PRVT-MPLS-LDP-MIB", "mplsLdpEntityStatsEntry"))
mplsLdpEntityStatsEntry.setIndexNames(*mplsLdpEntityEntry.getIndexNames())
if mibBuilder.loadTexts: mplsLdpEntityStatsEntry.setStatus('current')
mplsLdpEntityStatsSessionAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsSessionAttempts.setStatus('current')
mplsLdpEntityStatsSessionRejectedNoHelloErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsSessionRejectedNoHelloErrors.setStatus('current')
mplsLdpEntityStatsSessionRejectedAdErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsSessionRejectedAdErrors.setStatus('current')
mplsLdpEntityStatsSessionRejectedMaxPduErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsSessionRejectedMaxPduErrors.setStatus('current')
mplsLdpEntityStatsSessionRejectedLRErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsSessionRejectedLRErrors.setStatus('current')
mplsLdpEntityStatsBadLdpIdentifierErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsBadLdpIdentifierErrors.setStatus('current')
mplsLdpEntityStatsBadPduLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsBadPduLengthErrors.setStatus('current')
mplsLdpEntityStatsBadMessageLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsBadMessageLengthErrors.setStatus('current')
mplsLdpEntityStatsBadTlvLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsBadTlvLengthErrors.setStatus('current')
mplsLdpEntityStatsMalformedTlvValueErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsMalformedTlvValueErrors.setStatus('current')
mplsLdpEntityStatsKeepAliveTimerExpErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsKeepAliveTimerExpErrors.setStatus('current')
mplsLdpEntityStatsShutdownReceivedNotifications = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsShutdownReceivedNotifications.setStatus('current')
mplsLdpEntityStatsShutdownSentNotifications = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityStatsShutdownSentNotifications.setStatus('current')
mplsLdpSessionObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3))
mplsLdpPeerLastChange = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpPeerLastChange.setStatus('current')
mplsLdpPeerTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 2), )
if mibBuilder.loadTexts: mplsLdpPeerTable.setStatus('current')
mplsLdpPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 2, 1), ).setIndexNames((0, "PRVT-CR-LDP-MIB", "prvtcrldpPmIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpPeerLdpId"))
if mibBuilder.loadTexts: mplsLdpPeerEntry.setStatus('current')
mplsLdpPeerLdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 2, 1, 1), MplsLdpIdentifier())
if mibBuilder.loadTexts: mplsLdpPeerLdpId.setStatus('current')
mplsLdpPeerLabelDistMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 2, 1, 2), MplsLabelDistributionMethod()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpPeerLabelDistMethod.setStatus('current')
mplsLdpPeerPathVectorLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpPeerPathVectorLimit.setStatus('current')
mplsLdpPeerTransportAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 2, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpPeerTransportAddrType.setStatus('current')
mplsLdpPeerTransportAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 2, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpPeerTransportAddr.setStatus('current')
mplsLdpSessionTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 3), )
if mibBuilder.loadTexts: mplsLdpSessionTable.setStatus('current')
mplsLdpSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 3, 1), ).setIndexNames((0, "PRVT-CR-LDP-MIB", "prvtcrldpSigIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpPeerLdpId"))
if mibBuilder.loadTexts: mplsLdpSessionEntry.setStatus('current')
mplsLdpSessionStateLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 3, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionStateLastChange.setStatus('current')
mplsLdpSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("nonexistent", 1), ("initialized", 2), ("openrec", 3), ("opensent", 4), ("operational", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionState.setStatus('current')
mplsLdpSessionRole = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("active", 2), ("passive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionRole.setStatus('current')
mplsLdpSessionProtocolVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionProtocolVersion.setStatus('current')
mplsLdpSessionKeepAliveHoldTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 3, 1, 5), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionKeepAliveHoldTimeRemaining.setStatus('current')
mplsLdpSessionKeepAliveTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionKeepAliveTime.setStatus('current')
mplsLdpSessionMaxPduLength = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionMaxPduLength.setStatus('current')
mplsLdpSessionDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 3, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionDiscontinuityTime.setStatus('current')
mplsLdpSessionConfiguredHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 3, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionConfiguredHoldTime.setStatus('current')
mplsLdpSessionPeerHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 3, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionPeerHoldTime.setStatus('current')
mplsLdpSessionHoldTimeInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 3, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionHoldTimeInUse.setStatus('current')
mplsLdpSessionStatsTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 4), )
if mibBuilder.loadTexts: mplsLdpSessionStatsTable.setStatus('current')
mplsLdpSessionStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 4, 1), ).setIndexNames((0, "PRVT-CR-LDP-MIB", "prvtcrldpSigIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpPeerLdpId"))
if mibBuilder.loadTexts: mplsLdpSessionStatsEntry.setStatus('current')
mplsLdpSessionStatsUnknownMesTypeErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionStatsUnknownMesTypeErrors.setStatus('current')
mplsLdpSessionStatsUnknownTlvErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionStatsUnknownTlvErrors.setStatus('current')
mplsLdpHelloAdjacencyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 5))
mplsLdpHelloAdjacencyTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 5, 1), )
if mibBuilder.loadTexts: mplsLdpHelloAdjacencyTable.setStatus('current')
mplsLdpHelloAdjacencyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 5, 1, 1), ).setIndexNames((0, "PRVT-CR-LDP-MIB", "prvtcrldpSigIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpPeerLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpHelloAdjacencyIndex"))
if mibBuilder.loadTexts: mplsLdpHelloAdjacencyEntry.setStatus('current')
mplsLdpHelloAdjacencyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 5, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: mplsLdpHelloAdjacencyIndex.setStatus('current')
mplsLdpHelloAdjacencyHoldTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 5, 1, 1, 2), TimeInterval()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpHelloAdjacencyHoldTimeRemaining.setStatus('current')
mplsLdpHelloAdjacencyHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 5, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpHelloAdjacencyHoldTime.setStatus('current')
mplsLdpHelloAdjacencyType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("link", 1), ("targeted", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpHelloAdjacencyType.setStatus('current')
mplsLdpHelloAdjacencyConfiguredHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 5, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpHelloAdjacencyConfiguredHoldTime.setStatus('current')
mplsLdpHelloAdjacencyPeerHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 5, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpHelloAdjacencyPeerHoldTime.setStatus('current')
mplsInSegmentLdpLspTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 6), )
if mibBuilder.loadTexts: mplsInSegmentLdpLspTable.setStatus('current')
mplsInSegmentLdpLspEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 6, 1), ).setIndexNames((0, "PRVT-CR-LDP-MIB", "prvtcrldpPmIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpPeerLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsInSegmentLdpLspIndex"))
if mibBuilder.loadTexts: mplsInSegmentLdpLspEntry.setStatus('current')
mplsInSegmentLdpLspIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 6, 1, 1), MplsIndexType())
if mibBuilder.loadTexts: mplsInSegmentLdpLspIndex.setStatus('current')
mplsInSegmentLdpLspLabelType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 6, 1, 2), MplsLdpLabelType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsInSegmentLdpLspLabelType.setStatus('current')
mplsInSegmentLdpLspType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 6, 1, 3), MplsLspType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsInSegmentLdpLspType.setStatus('current')
mplsOutSegmentLdpLspTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 7), )
if mibBuilder.loadTexts: mplsOutSegmentLdpLspTable.setStatus('current')
mplsOutSegmentLdpLspEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 7, 1), ).setIndexNames((0, "PRVT-CR-LDP-MIB", "prvtcrldpPmIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpPeerLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsOutSegmentLdpLspIndex"))
if mibBuilder.loadTexts: mplsOutSegmentLdpLspEntry.setStatus('current')
mplsOutSegmentLdpLspIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 7, 1, 1), MplsIndexType())
if mibBuilder.loadTexts: mplsOutSegmentLdpLspIndex.setStatus('current')
mplsOutSegmentLdpLspLabelType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 7, 1, 2), MplsLdpLabelType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsOutSegmentLdpLspLabelType.setStatus('current')
mplsOutSegmentLdpLspType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 7, 1, 3), MplsLspType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsOutSegmentLdpLspType.setStatus('current')
mplsFecObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 10))
mplsFecLastChange = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 10, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFecLastChange.setStatus('current')
mplsFecTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 10, 2), )
if mibBuilder.loadTexts: mplsFecTable.setStatus('current')
mplsFecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 10, 2, 1), ).setIndexNames((0, "PRVT-CR-LDP-MIB", "prvtcrldpPmIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsFecIndex"))
if mibBuilder.loadTexts: mplsFecEntry.setStatus('current')
mplsFecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 10, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: mplsFecIndex.setStatus('current')
mplsFecType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 10, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("prefix", 1), ("hostAddress", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFecType.setStatus('current')
mplsFecAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 10, 2, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFecAddrType.setStatus('current')
mplsFecAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 10, 2, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFecAddr.setStatus('current')
mplsFecAddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 10, 2, 1, 3), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFecAddrPrefixLength.setStatus('current')
mplsFecStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 10, 2, 1, 6), StorageType().clone('nonVolatile')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsFecStorageType.setStatus('current')
mplsLdpLspFecLastChange = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpLspFecLastChange.setStatus('current')
mplsLdpLspFecTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 12), )
if mibBuilder.loadTexts: mplsLdpLspFecTable.setStatus('current')
mplsLdpLspFecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 12, 1), ).setIndexNames((0, "PRVT-CR-LDP-MIB", "prvtcrldpPmIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpPeerLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpLspFecSegment"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpLspFecSegmentIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpLspFecIndex"))
if mibBuilder.loadTexts: mplsLdpLspFecEntry.setStatus('current')
mplsLdpLspFecSegment = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inSegment", 1), ("outSegment", 2))))
if mibBuilder.loadTexts: mplsLdpLspFecSegment.setStatus('current')
mplsLdpLspFecSegmentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 12, 1, 2), MplsIndexType())
if mibBuilder.loadTexts: mplsLdpLspFecSegmentIndex.setStatus('current')
mplsLdpLspFecIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: mplsLdpLspFecIndex.setStatus('current')
mplsLdpLspFecStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 12, 1, 4), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpLspFecStorageType.setStatus('current')
mplsLdpLspFecRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 12, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mplsLdpLspFecRowStatus.setStatus('current')
mplsLdpSessionPeerAddrTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 13), )
if mibBuilder.loadTexts: mplsLdpSessionPeerAddrTable.setStatus('current')
mplsLdpSessionPeerAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 13, 1), ).setIndexNames((0, "PRVT-CR-LDP-MIB", "prvtcrldpPmIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpPeerLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpSessionPeerAddrIndex"))
if mibBuilder.loadTexts: mplsLdpSessionPeerAddrEntry.setStatus('current')
mplsLdpSessionPeerAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: mplsLdpSessionPeerAddrIndex.setStatus('current')
mplsLdpSessionPeerNextHopAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 13, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionPeerNextHopAddrType.setStatus('current')
mplsLdpSessionPeerNextHopAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 3, 13, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionPeerNextHopAddr.setStatus('current')
mplsLdpEntityIndexNextTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 2), )
if mibBuilder.loadTexts: mplsLdpEntityIndexNextTable.setStatus('current')
mplsLdpEntityIndexNextEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 2, 1), ).setIndexNames((0, "PRVT-CR-LDP-MIB", "prvtcrldpSigIndex"))
if mibBuilder.loadTexts: mplsLdpEntityIndexNextEntry.setStatus('current')
mplsLdpEntityIndexNext = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 1, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityIndexNext.setStatus('current')
mplsLdpInitSessionThresholdExceeded = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 2, 0, 1)).setObjects(("PRVT-MPLS-LDP-MIB", "mplsLdpEntityInitSessionThreshold"))
if mibBuilder.loadTexts: mplsLdpInitSessionThresholdExceeded.setStatus('current')
mplsLdpPathVectorLimitMismatch = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 2, 0, 2)).setObjects(("PRVT-MPLS-LDP-MIB", "mplsLdpEntityPathVectorLimit"), ("PRVT-MPLS-LDP-MIB", "mplsLdpPeerPathVectorLimit"))
if mibBuilder.loadTexts: mplsLdpPathVectorLimitMismatch.setStatus('current')
mplsLdpSessionUp = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 2, 0, 3)).setObjects(("PRVT-MPLS-LDP-MIB", "mplsLdpSessionState"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionDiscontinuityTime"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionStatsUnknownMesTypeErrors"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionStatsUnknownTlvErrors"))
if mibBuilder.loadTexts: mplsLdpSessionUp.setStatus('current')
mplsLdpSessionDown = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 2, 0, 4)).setObjects(("PRVT-MPLS-LDP-MIB", "mplsLdpSessionState"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionDiscontinuityTime"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionStatsUnknownMesTypeErrors"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionStatsUnknownTlvErrors"))
if mibBuilder.loadTexts: mplsLdpSessionDown.setStatus('current')
mplsLdpGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 3, 1))
mplsLdpCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 3, 2))
mplsLdpModuleFullCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 3, 2, 1)).setObjects(("PRVT-MPLS-LDP-MIB", "mplsLdpGeneralGroup"), ("PRVT-MPLS-LDP-MIB", "mplsLdpNotificationsGroup"), ("PRVT-MPLS-LDP-MIB", "mplsLdpLspGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpModuleFullCompliance = mplsLdpModuleFullCompliance.setStatus('current')
mplsLdpModuleReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 3, 2, 2)).setObjects(("PRVT-MPLS-LDP-MIB", "mplsLdpGeneralGroup"), ("PRVT-MPLS-LDP-MIB", "mplsLdpNotificationsGroup"), ("PRVT-MPLS-LDP-MIB", "mplsLdpLspGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpModuleReadOnlyCompliance = mplsLdpModuleReadOnlyCompliance.setStatus('current')
mplsLdpGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 3, 1, 1)).setObjects(("PRVT-MPLS-LDP-MIB", "mplsLdpLsrId"), ("PRVT-MPLS-LDP-MIB", "mplsLdpLsrLoopDetectionCapable"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityIndexNext"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityProtocolVersion"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityAdminStatus"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityOperStatus"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityWellKnownTcpDiscoveryPort"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityWellKnownUdpDiscoveryPort"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityMaxPduLength"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityKeepAliveHoldTimer"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityHelloHoldTimer"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityInitSessionThreshold"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityLabelDistMethod"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityLabelRetentionMode"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityPathVectorLimit"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityHopCountLimit"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityTransportAddrKind"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityTargetPeer"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityTargetPeerAddrType"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityTargetPeerAddr"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityLabelType"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityDiscontinuityTime"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityStorageType"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityRowStatus"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityWildcardEntity"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityStatsSessionAttempts"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityStatsSessionRejectedNoHelloErrors"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityStatsSessionRejectedAdErrors"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityStatsSessionRejectedMaxPduErrors"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityStatsSessionRejectedLRErrors"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityStatsBadLdpIdentifierErrors"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityStatsBadPduLengthErrors"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityStatsBadMessageLengthErrors"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityStatsBadTlvLengthErrors"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityStatsMalformedTlvValueErrors"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityStatsKeepAliveTimerExpErrors"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityStatsShutdownReceivedNotifications"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityStatsShutdownSentNotifications"), ("PRVT-MPLS-LDP-MIB", "mplsLdpPeerLastChange"), ("PRVT-MPLS-LDP-MIB", "mplsLdpPeerLabelDistMethod"), ("PRVT-MPLS-LDP-MIB", "mplsLdpPeerPathVectorLimit"), ("PRVT-MPLS-LDP-MIB", "mplsLdpPeerTransportAddrType"), ("PRVT-MPLS-LDP-MIB", "mplsLdpPeerTransportAddr"), ("PRVT-MPLS-LDP-MIB", "mplsLdpHelloAdjacencyHoldTimeRemaining"), ("PRVT-MPLS-LDP-MIB", "mplsLdpHelloAdjacencyHoldTime"), ("PRVT-MPLS-LDP-MIB", "mplsLdpHelloAdjacencyType"), ("PRVT-MPLS-LDP-MIB", "mplsLdpHelloAdjacencyConfiguredHoldTime"), ("PRVT-MPLS-LDP-MIB", "mplsLdpHelloAdjacencyPeerHoldTime"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionStateLastChange"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionState"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionRole"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionProtocolVersion"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionKeepAliveHoldTimeRemaining"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionKeepAliveTime"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionMaxPduLength"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionDiscontinuityTime"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionConfiguredHoldTime"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionPeerHoldTime"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionHoldTimeInUse"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionStatsUnknownMesTypeErrors"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionStatsUnknownTlvErrors"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionPeerNextHopAddrType"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionPeerNextHopAddr"), ("PRVT-MPLS-LDP-MIB", "mplsFecLastChange"), ("PRVT-MPLS-LDP-MIB", "mplsFecType"), ("PRVT-MPLS-LDP-MIB", "mplsFecAddrType"), ("PRVT-MPLS-LDP-MIB", "mplsFecAddr"), ("PRVT-MPLS-LDP-MIB", "mplsFecAddrPrefixLength"), ("PRVT-MPLS-LDP-MIB", "mplsFecStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpGeneralGroup = mplsLdpGeneralGroup.setStatus('current')
mplsLdpLspGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 3, 1, 2)).setObjects(("PRVT-MPLS-LDP-MIB", "mplsInSegmentLdpLspLabelType"), ("PRVT-MPLS-LDP-MIB", "mplsInSegmentLdpLspType"), ("PRVT-MPLS-LDP-MIB", "mplsOutSegmentLdpLspLabelType"), ("PRVT-MPLS-LDP-MIB", "mplsOutSegmentLdpLspType"), ("PRVT-MPLS-LDP-MIB", "mplsLdpLspFecLastChange"), ("PRVT-MPLS-LDP-MIB", "mplsLdpLspFecStorageType"), ("PRVT-MPLS-LDP-MIB", "mplsLdpLspFecRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpLspGroup = mplsLdpLspGroup.setStatus('current')
mplsLdpNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 3, 1, 3)).setObjects(("PRVT-MPLS-LDP-MIB", "mplsLdpInitSessionThresholdExceeded"), ("PRVT-MPLS-LDP-MIB", "mplsLdpPathVectorLimitMismatch"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionUp"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionDown"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpNotificationsGroup = mplsLdpNotificationsGroup.setStatus('current')
mplsLdpAtmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4))
mplsLdpAtmConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 5))
mplsLdpEntityAtmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1))
mplsLdpEntityAtmTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1, 1), )
if mibBuilder.loadTexts: mplsLdpEntityAtmTable.setStatus('current')
mplsLdpEntityAtmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1, 1, 1), ).setIndexNames((0, "PRVT-CR-LDP-MIB", "prvtcrldpSigIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityIndex"))
if mibBuilder.loadTexts: mplsLdpEntityAtmEntry.setStatus('current')
mplsLdpEntityAtmIfIndexOrZero = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1, 1, 1, 1), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityAtmIfIndexOrZero.setStatus('current')
mplsLdpEntityAtmMergeCap = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("notSupported", 0), ("vpMerge", 1), ("vcMerge", 2), ("vpAndVcMerge", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityAtmMergeCap.setStatus('current')
mplsLdpEntityAtmLRComponents = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityAtmLRComponents.setStatus('current')
mplsLdpEntityAtmVcDirectionality = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bidirectional", 0), ("unidirectional", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityAtmVcDirectionality.setStatus('current')
mplsLdpEntityAtmLsrConnectivity = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("direct", 1), ("indirect", 2))).clone('direct')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityAtmLsrConnectivity.setStatus('current')
mplsLdpEntityAtmDefaultControlVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityAtmDefaultControlVpi.setStatus('current')
mplsLdpEntityAtmDefaultControlVci = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1, 1, 1, 7), MplsAtmVcIdentifier().clone(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityAtmDefaultControlVci.setStatus('current')
mplsLdpEntityAtmUnlabTrafVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityAtmUnlabTrafVpi.setStatus('current')
mplsLdpEntityAtmUnlabTrafVci = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1, 1, 1, 9), MplsAtmVcIdentifier().clone(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityAtmUnlabTrafVci.setStatus('current')
mplsLdpEntityAtmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1, 1, 1, 10), StorageType().clone('nonVolatile')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityAtmStorageType.setStatus('current')
mplsLdpEntityAtmLRTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1, 2), )
if mibBuilder.loadTexts: mplsLdpEntityAtmLRTable.setStatus('current')
mplsLdpEntityAtmLREntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1, 2, 1), ).setIndexNames((0, "PRVT-CR-LDP-MIB", "prvtcrldpSigIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityAtmLRMinVpi"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityAtmLRMinVci"))
if mibBuilder.loadTexts: mplsLdpEntityAtmLREntry.setStatus('current')
mplsLdpEntityAtmLRMinVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: mplsLdpEntityAtmLRMinVpi.setStatus('current')
mplsLdpEntityAtmLRMinVci = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1, 2, 1, 2), MplsAtmVcIdentifier())
if mibBuilder.loadTexts: mplsLdpEntityAtmLRMinVci.setStatus('current')
mplsLdpEntityAtmLRMaxVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityAtmLRMaxVpi.setStatus('current')
mplsLdpEntityAtmLRMaxVci = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1, 2, 1, 4), MplsAtmVcIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityAtmLRMaxVci.setStatus('current')
mplsLdpEntityAtmLRStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 1, 2, 1, 5), StorageType().clone('nonVolatile')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityAtmLRStorageType.setStatus('current')
mplsLdpAtmSessionObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 2))
mplsLdpAtmSessionTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 2, 1), )
if mibBuilder.loadTexts: mplsLdpAtmSessionTable.setStatus('current')
mplsLdpAtmSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 2, 1, 1), ).setIndexNames((0, "PRVT-CR-LDP-MIB", "prvtcrldpPmIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpPeerLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpSessionAtmLRLowerBoundVpi"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpSessionAtmLRLowerBoundVci"))
if mibBuilder.loadTexts: mplsLdpAtmSessionEntry.setStatus('current')
mplsLdpSessionAtmLRLowerBoundVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: mplsLdpSessionAtmLRLowerBoundVpi.setStatus('current')
mplsLdpSessionAtmLRLowerBoundVci = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 2, 1, 1, 2), MplsAtmVcIdentifier())
if mibBuilder.loadTexts: mplsLdpSessionAtmLRLowerBoundVci.setStatus('current')
mplsLdpSessionAtmLRUpperBoundVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionAtmLRUpperBoundVpi.setStatus('current')
mplsLdpSessionAtmLRUpperBoundVci = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 4, 2, 1, 1, 4), MplsAtmVcIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpSessionAtmLRUpperBoundVci.setStatus('current')
mplsLdpAtmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 5, 1))
mplsLdpAtmCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 5, 2))
mplsLdpAtmModuleFullCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 5, 2, 1)).setObjects(("PRVT-MPLS-LDP-MIB", "mplsLdpAtmGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpAtmModuleFullCompliance = mplsLdpAtmModuleFullCompliance.setStatus('current')
mplsLdpAtmModuleReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 5, 2, 2)).setObjects(("PRVT-MPLS-LDP-MIB", "mplsLdpAtmGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpAtmModuleReadOnlyCompliance = mplsLdpAtmModuleReadOnlyCompliance.setStatus('current')
mplsLdpAtmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 5, 1, 1)).setObjects(("PRVT-MPLS-LDP-MIB", "mplsLdpEntityAtmIfIndexOrZero"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityAtmMergeCap"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityAtmLRComponents"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityAtmVcDirectionality"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityAtmLsrConnectivity"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityAtmDefaultControlVpi"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityAtmDefaultControlVci"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityAtmUnlabTrafVpi"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityAtmUnlabTrafVci"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityAtmStorageType"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityAtmLRMaxVpi"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityAtmLRMaxVci"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityAtmLRStorageType"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionAtmLRUpperBoundVpi"), ("PRVT-MPLS-LDP-MIB", "mplsLdpSessionAtmLRUpperBoundVci"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpAtmGroup = mplsLdpAtmGroup.setStatus('current')
mplsLdpFrameRelayObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6))
mplsLdpFrameRelayConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 7))
mplsLdpEntityFrameRelayObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 1))
mplsLdpEntityFrameRelayTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 1, 1), )
if mibBuilder.loadTexts: mplsLdpEntityFrameRelayTable.setStatus('current')
mplsLdpEntityFrameRelayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 1, 1, 1), ).setIndexNames((0, "PRVT-CR-LDP-MIB", "prvtcrldpSigIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityIndex"))
if mibBuilder.loadTexts: mplsLdpEntityFrameRelayEntry.setStatus('current')
mplsLdpEntityFrameRelayIfIndexOrZero = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 1, 1, 1, 1), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityFrameRelayIfIndexOrZero.setStatus('current')
mplsLdpEntityFrameRelayMergeCap = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notSupported", 0), ("supported", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityFrameRelayMergeCap.setStatus('current')
mplsLdpEntityFrameRelayLRComponents = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityFrameRelayLRComponents.setStatus('current')
mplsLdpEntityFrameRelayVcDirectionality = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bidirectional", 0), ("unidirection", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityFrameRelayVcDirectionality.setStatus('current')
mplsLdpEntityFrameRelayStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 1, 1, 1, 5), StorageType().clone('nonVolatile')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityFrameRelayStorageType.setStatus('current')
mplsLdpEntityFrameRelayLRTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 1, 2), )
if mibBuilder.loadTexts: mplsLdpEntityFrameRelayLRTable.setStatus('current')
mplsLdpEntityFrameRelayLREntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 1, 2, 1), ).setIndexNames((0, "PRVT-CR-LDP-MIB", "prvtcrldpSigIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityFrameRelayLRMinDlci"))
if mibBuilder.loadTexts: mplsLdpEntityFrameRelayLREntry.setStatus('current')
mplsLdpEntityFrameRelayLRMinDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: mplsLdpEntityFrameRelayLRMinDlci.setStatus('current')
mplsLdpEntityFrameRelayLRMaxDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityFrameRelayLRMaxDlci.setStatus('current')
mplsLdpEntityFrameRelayLRLen = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("tenDlciBits", 0), ("twentyThreeDlciBits", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityFrameRelayLRLen.setStatus('current')
mplsLdpEntityFrameRelayLRStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 1, 2, 1, 4), StorageType().clone('nonVolatile')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityFrameRelayLRStorageType.setStatus('current')
mplsLdpFrameRelaySessionObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 2))
mplsLdpFrameRelaySessionTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 2, 1), )
if mibBuilder.loadTexts: mplsLdpFrameRelaySessionTable.setStatus('current')
mplsLdpFrameRelaySessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 2, 1, 1), ).setIndexNames((0, "PRVT-CR-LDP-MIB", "prvtcrldpPmIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpPeerLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpFrameRelaySessionMinDlci"))
if mibBuilder.loadTexts: mplsLdpFrameRelaySessionEntry.setStatus('current')
mplsLdpFrameRelaySessionMinDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: mplsLdpFrameRelaySessionMinDlci.setStatus('current')
mplsLdpFrameRelaySessionMaxDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 2, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpFrameRelaySessionMaxDlci.setStatus('current')
mplsLdpFrameRelaySessionLen = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 6, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2))).clone(namedValues=NamedValues(("tenDlciBits", 0), ("twentyThreeDlciBits", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpFrameRelaySessionLen.setStatus('current')
mplsLdpFrameRelayGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 7, 1))
mplsLdpFrameRelayCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 7, 2))
mplsLdpFrameRelayModuleReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 7, 2, 2)).setObjects(("PRVT-MPLS-LDP-MIB", "mplsLdpFrameRelayGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpFrameRelayModuleReadOnlyCompliance = mplsLdpFrameRelayModuleReadOnlyCompliance.setStatus('current')
mplsLdpFrameRelayGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 7, 1, 1)).setObjects(("PRVT-MPLS-LDP-MIB", "mplsLdpEntityFrameRelayIfIndexOrZero"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityFrameRelayMergeCap"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityFrameRelayLRComponents"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityFrameRelayVcDirectionality"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityFrameRelayStorageType"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityFrameRelayLRMaxDlci"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityFrameRelayLRLen"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityFrameRelayLRStorageType"), ("PRVT-MPLS-LDP-MIB", "mplsLdpFrameRelaySessionMaxDlci"), ("PRVT-MPLS-LDP-MIB", "mplsLdpFrameRelaySessionLen"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpFrameRelayGroup = mplsLdpFrameRelayGroup.setStatus('current')
mplsLdpGenericObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 8))
mplsLdpGenericConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 9))
mplsLdpEntityGenericObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 8, 1))
mplsLdpEntityGenericLRTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 8, 1, 1), )
if mibBuilder.loadTexts: mplsLdpEntityGenericLRTable.setStatus('current')
mplsLdpEntityGenericLREntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 8, 1, 1, 1), ).setIndexNames((0, "PRVT-CR-LDP-MIB", "prvtcrldpSigIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityLdpId"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityIndex"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityGenericLRMin"), (0, "PRVT-MPLS-LDP-MIB", "mplsLdpEntityGenericLRMax"))
if mibBuilder.loadTexts: mplsLdpEntityGenericLREntry.setStatus('current')
mplsLdpEntityGenericLRMin = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 8, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1048575)))
if mibBuilder.loadTexts: mplsLdpEntityGenericLRMin.setStatus('current')
mplsLdpEntityGenericLRMax = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 8, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1048575)))
if mibBuilder.loadTexts: mplsLdpEntityGenericLRMax.setStatus('current')
mplsLdpEntityGenericLabelSpace = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 8, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("perPlatform", 1), ("perInterface", 2))).clone('perPlatform')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityGenericLabelSpace.setStatus('current')
mplsLdpEntityGenericIfIndexOrZero = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 8, 1, 1, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityGenericIfIndexOrZero.setStatus('current')
mplsLdpEntityGenericLRStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 8, 1, 1, 1, 5), StorageType().clone('nonVolatile')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLdpEntityGenericLRStorageType.setStatus('current')
mplsLdpGenericGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 9, 1))
mplsLdpGenericCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 9, 2))
mplsLdpGenericModuleReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 9, 2, 2)).setObjects(("PRVT-MPLS-LDP-MIB", "mplsLdpGenericGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpGenericModuleReadOnlyCompliance = mplsLdpGenericModuleReadOnlyCompliance.setStatus('current')
mplsLdpGenericGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 738, 1, 6, 5, 1, 9, 1, 1)).setObjects(("PRVT-MPLS-LDP-MIB", "mplsLdpEntityGenericLabelSpace"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityGenericIfIndexOrZero"), ("PRVT-MPLS-LDP-MIB", "mplsLdpEntityGenericLRStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mplsLdpGenericGroup = mplsLdpGenericGroup.setStatus('current')
mibBuilder.exportSymbols("PRVT-MPLS-LDP-MIB", mplsFecLastChange=mplsFecLastChange, mplsLdpEntityFrameRelayMergeCap=mplsLdpEntityFrameRelayMergeCap, mplsInSegmentLdpLspTable=mplsInSegmentLdpLspTable, mplsInSegmentLdpLspLabelType=mplsInSegmentLdpLspLabelType, mplsLdpSessionRole=mplsLdpSessionRole, mplsLdpPeerLdpId=mplsLdpPeerLdpId, mplsOutSegmentLdpLspLabelType=mplsOutSegmentLdpLspLabelType, mplsLdpEntityStatsBadPduLengthErrors=mplsLdpEntityStatsBadPduLengthErrors, mplsLdpLspFecSegment=mplsLdpLspFecSegment, mplsLdpEntityStorageType=mplsLdpEntityStorageType, mplsLdpEntityIndexNextEntry=mplsLdpEntityIndexNextEntry, mplsLdpSessionEntry=mplsLdpSessionEntry, mplsLdpSessionState=mplsLdpSessionState, mplsLdpCompliances=mplsLdpCompliances, mplsOutSegmentLdpLspIndex=mplsOutSegmentLdpLspIndex, mplsLdpEntityStatsEntry=mplsLdpEntityStatsEntry, mplsLdpEntityTable=mplsLdpEntityTable, mplsLdpLspFecEntry=mplsLdpLspFecEntry, mplsLdpLspGroup=mplsLdpLspGroup, mplsLdpSessionUp=mplsLdpSessionUp, mplsLdpEntityAtmLRComponents=mplsLdpEntityAtmLRComponents, mplsLdpEntityAtmLREntry=mplsLdpEntityAtmLREntry, mplsLdpSessionPeerHoldTime=mplsLdpSessionPeerHoldTime, mplsLdpGenericCompliances=mplsLdpGenericCompliances, mplsLdpEntityAtmUnlabTrafVpi=mplsLdpEntityAtmUnlabTrafVpi, mplsLdpSessionMaxPduLength=mplsLdpSessionMaxPduLength, mplsLdpEntityAtmObjects=mplsLdpEntityAtmObjects, mplsLdpEntityAtmIfIndexOrZero=mplsLdpEntityAtmIfIndexOrZero, mplsLdpGenericObjects=mplsLdpGenericObjects, mplsLdpEntityFrameRelayLRTable=mplsLdpEntityFrameRelayLRTable, mplsFecType=mplsFecType, mplsLdpPeerTransportAddrType=mplsLdpPeerTransportAddrType, mplsLdpEntityLabelDistMethod=mplsLdpEntityLabelDistMethod, mplsLdpFrameRelaySessionMinDlci=mplsLdpFrameRelaySessionMinDlci, mplsLdpHelloAdjacencyType=mplsLdpHelloAdjacencyType, mplsOutSegmentLdpLspType=mplsOutSegmentLdpLspType, mplsLdpSessionAtmLRLowerBoundVpi=mplsLdpSessionAtmLRLowerBoundVpi, mplsLdpLspFecSegmentIndex=mplsLdpLspFecSegmentIndex, mplsLdpEntityStatsSessionRejectedLRErrors=mplsLdpEntityStatsSessionRejectedLRErrors, mplsLdpLsrObjects=mplsLdpLsrObjects, mplsLdpAtmSessionEntry=mplsLdpAtmSessionEntry, mplsLdpStdMIB=mplsLdpStdMIB, mplsLdpEntityLabelType=mplsLdpEntityLabelType, mplsLdpPeerTransportAddr=mplsLdpPeerTransportAddr, mplsLdpModuleFullCompliance=mplsLdpModuleFullCompliance, mplsLdpAtmSessionObjects=mplsLdpAtmSessionObjects, mplsFecStorageType=mplsFecStorageType, mplsLdpSessionConfiguredHoldTime=mplsLdpSessionConfiguredHoldTime, mplsLdpLsrEntry=mplsLdpLsrEntry, mplsLdpLspFecRowStatus=mplsLdpLspFecRowStatus, mplsLdpEntityGenericLRMin=mplsLdpEntityGenericLRMin, mplsLdpSessionKeepAliveTime=mplsLdpSessionKeepAliveTime, mplsInSegmentLdpLspIndex=mplsInSegmentLdpLspIndex, mplsLdpEntityAdminStatus=mplsLdpEntityAdminStatus, mplsLdpGroups=mplsLdpGroups, mplsFecEntry=mplsFecEntry, mplsLdpEntityFrameRelayTable=mplsLdpEntityFrameRelayTable, mplsLdpEntityFrameRelayIfIndexOrZero=mplsLdpEntityFrameRelayIfIndexOrZero, mplsLdpHelloAdjacencyHoldTimeRemaining=mplsLdpHelloAdjacencyHoldTimeRemaining, mplsLdpSessionPeerAddrTable=mplsLdpSessionPeerAddrTable, mplsLdpAtmSessionTable=mplsLdpAtmSessionTable, mplsLdpFrameRelayCompliances=mplsLdpFrameRelayCompliances, mplsLdpSessionAtmLRUpperBoundVci=mplsLdpSessionAtmLRUpperBoundVci, mplsLdpEntityGenericLREntry=mplsLdpEntityGenericLREntry, mplsLdpAtmGroup=mplsLdpAtmGroup, mplsLdpEntityAtmEntry=mplsLdpEntityAtmEntry, mplsLdpSessionStateLastChange=mplsLdpSessionStateLastChange, mplsLdpSessionStatsEntry=mplsLdpSessionStatsEntry, mplsLdpEntityFrameRelayLRMaxDlci=mplsLdpEntityFrameRelayLRMaxDlci, mplsLdpEntityAtmTable=mplsLdpEntityAtmTable, mplsLdpEntityAtmUnlabTrafVci=mplsLdpEntityAtmUnlabTrafVci, mplsLdpEntityStatsSessionRejectedNoHelloErrors=mplsLdpEntityStatsSessionRejectedNoHelloErrors, mplsLdpEntityAtmLRTable=mplsLdpEntityAtmLRTable, mplsLdpPeerLabelDistMethod=mplsLdpPeerLabelDistMethod, mplsLdpConformance=mplsLdpConformance, mplsLdpEntityStatsMalformedTlvValueErrors=mplsLdpEntityStatsMalformedTlvValueErrors, mplsLdpSessionDown=mplsLdpSessionDown, mplsLdpAtmGroups=mplsLdpAtmGroups, mplsLdpEntityWildcardEntity=mplsLdpEntityWildcardEntity, mplsLdpFrameRelaySessionTable=mplsLdpFrameRelaySessionTable, mplsLdpSessionPeerAddrEntry=mplsLdpSessionPeerAddrEntry, mplsLdpEntityRowStatus=mplsLdpEntityRowStatus, mplsLdpLsrTable=mplsLdpLsrTable, mplsLdpPathVectorLimitMismatch=mplsLdpPathVectorLimitMismatch, mplsLdpEntityStatsBadTlvLengthErrors=mplsLdpEntityStatsBadTlvLengthErrors, mplsLdpEntityAtmDefaultControlVci=mplsLdpEntityAtmDefaultControlVci, mplsLdpPeerLastChange=mplsLdpPeerLastChange, mplsLdpFrameRelaySessionEntry=mplsLdpFrameRelaySessionEntry, mplsLdpSessionStatsUnknownMesTypeErrors=mplsLdpSessionStatsUnknownMesTypeErrors, mplsLdpFrameRelaySessionMaxDlci=mplsLdpFrameRelaySessionMaxDlci, mplsLdpFrameRelayModuleReadOnlyCompliance=mplsLdpFrameRelayModuleReadOnlyCompliance, mplsLdpEntityWellKnownUdpDiscoveryPort=mplsLdpEntityWellKnownUdpDiscoveryPort, mplsLdpEntityLabelRetentionMode=mplsLdpEntityLabelRetentionMode, mplsLdpEntityTargetPeer=mplsLdpEntityTargetPeer, mplsLdpModuleReadOnlyCompliance=mplsLdpModuleReadOnlyCompliance, mplsLdpGenericConformance=mplsLdpGenericConformance, mplsLdpEntityHopCountLimit=mplsLdpEntityHopCountLimit, mplsLdpEntityFrameRelayLRMinDlci=mplsLdpEntityFrameRelayLRMinDlci, mplsLdpSessionPeerNextHopAddrType=mplsLdpSessionPeerNextHopAddrType, mplsLdpEntityFrameRelayLRComponents=mplsLdpEntityFrameRelayLRComponents, mplsFecAddrPrefixLength=mplsFecAddrPrefixLength, mplsLdpHelloAdjacencyPeerHoldTime=mplsLdpHelloAdjacencyPeerHoldTime, mplsLdpHelloAdjacencyConfiguredHoldTime=mplsLdpHelloAdjacencyConfiguredHoldTime, PYSNMP_MODULE_ID=mplsLdpStdMIB, mplsLdpAtmObjects=mplsLdpAtmObjects, mplsLdpEntityStatsKeepAliveTimerExpErrors=mplsLdpEntityStatsKeepAliveTimerExpErrors, mplsFecObjects=mplsFecObjects, mplsLdpEntityStatsSessionRejectedMaxPduErrors=mplsLdpEntityStatsSessionRejectedMaxPduErrors, mplsLdpSessionProtocolVersion=mplsLdpSessionProtocolVersion, mplsLdpEntityGenericLRStorageType=mplsLdpEntityGenericLRStorageType, mplsLdpObjects=mplsLdpObjects, mplsLdpLsrId=mplsLdpLsrId, mplsLdpSessionStatsTable=mplsLdpSessionStatsTable, mplsLdpEntityTargetPeerAddrType=mplsLdpEntityTargetPeerAddrType, mplsLdpEntityAtmLRStorageType=mplsLdpEntityAtmLRStorageType, mplsLdpEntityWellKnownTcpDiscoveryPort=mplsLdpEntityWellKnownTcpDiscoveryPort, mplsLdpEntityGenericLRMax=mplsLdpEntityGenericLRMax, mplsLdpEntityStatsSessionRejectedAdErrors=mplsLdpEntityStatsSessionRejectedAdErrors, mplsLdpEntityEntry=mplsLdpEntityEntry, mplsLdpHelloAdjacencyObjects=mplsLdpHelloAdjacencyObjects, mplsLdpLsrLoopDetectionCapable=mplsLdpLsrLoopDetectionCapable, mplsLdpEntityObjects=mplsLdpEntityObjects, mplsLdpAtmCompliances=mplsLdpAtmCompliances, mplsLdpHelloAdjacencyIndex=mplsLdpHelloAdjacencyIndex, mplsLdpFrameRelayGroup=mplsLdpFrameRelayGroup, mplsLdpEntityAtmLRMaxVci=mplsLdpEntityAtmLRMaxVci, mplsLdpFrameRelaySessionLen=mplsLdpFrameRelaySessionLen, mplsLdpSessionAtmLRLowerBoundVci=mplsLdpSessionAtmLRLowerBoundVci, mplsLdpHelloAdjacencyEntry=mplsLdpHelloAdjacencyEntry, mplsLdpFrameRelayObjects=mplsLdpFrameRelayObjects, mplsLdpEntityAtmDefaultControlVpi=mplsLdpEntityAtmDefaultControlVpi, mplsLdpEntityFrameRelayLREntry=mplsLdpEntityFrameRelayLREntry, mplsLdpEntityGenericLRTable=mplsLdpEntityGenericLRTable, mplsLdpEntityIndexNextTable=mplsLdpEntityIndexNextTable, mplsLdpEntityStatsShutdownReceivedNotifications=mplsLdpEntityStatsShutdownReceivedNotifications, mplsFecIndex=mplsFecIndex, mplsLdpFrameRelayConformance=mplsLdpFrameRelayConformance, mplsLdpEntityLdpId=mplsLdpEntityLdpId, mplsLdpAtmConformance=mplsLdpAtmConformance, mplsLdpEntityFrameRelayLRStorageType=mplsLdpEntityFrameRelayLRStorageType, mplsLdpPeerEntry=mplsLdpPeerEntry, MplsLdpLabelTypes=MplsLdpLabelTypes, mplsLdpSessionKeepAliveHoldTimeRemaining=mplsLdpSessionKeepAliveHoldTimeRemaining, mplsLdpEntityPathVectorLimit=mplsLdpEntityPathVectorLimit, mplsFecAddrType=mplsFecAddrType, mplsLdpGeneralGroup=mplsLdpGeneralGroup, mplsLdpEntityIndexNext=mplsLdpEntityIndexNext, mplsLdpEntityAtmLRMinVpi=mplsLdpEntityAtmLRMinVpi, mplsLdpEntityAtmLRMinVci=mplsLdpEntityAtmLRMinVci, mplsLdpSessionStatsUnknownTlvErrors=mplsLdpSessionStatsUnknownTlvErrors, mplsLdpEntityStatsSessionAttempts=mplsLdpEntityStatsSessionAttempts, mplsLdpEntityAtmVcDirectionality=mplsLdpEntityAtmVcDirectionality, mplsLdpSessionTable=mplsLdpSessionTable, mplsLdpEntityFrameRelayStorageType=mplsLdpEntityFrameRelayStorageType, mplsOutSegmentLdpLspTable=mplsOutSegmentLdpLspTable, mplsInSegmentLdpLspEntry=mplsInSegmentLdpLspEntry, mplsLdpEntityInitSessionThreshold=mplsLdpEntityInitSessionThreshold, mplsLdpSessionPeerAddrIndex=mplsLdpSessionPeerAddrIndex, mplsLdpSessionPeerNextHopAddr=mplsLdpSessionPeerNextHopAddr, mplsLdpHelloAdjacencyHoldTime=mplsLdpHelloAdjacencyHoldTime, mplsLdpGenericGroup=mplsLdpGenericGroup, mplsLdpAtmModuleReadOnlyCompliance=mplsLdpAtmModuleReadOnlyCompliance, mplsLdpPeerTable=mplsLdpPeerTable, mplsLdpSessionHoldTimeInUse=mplsLdpSessionHoldTimeInUse, mplsLdpGenericGroups=mplsLdpGenericGroups, mplsLdpSessionDiscontinuityTime=mplsLdpSessionDiscontinuityTime, mplsLdpHelloAdjacencyTable=mplsLdpHelloAdjacencyTable, mplsLdpEntityAtmLRMaxVpi=mplsLdpEntityAtmLRMaxVpi, mplsLdpFrameRelayGroups=mplsLdpFrameRelayGroups, mplsLdpLspFecStorageType=mplsLdpLspFecStorageType, mplsLdpEntityAtmLsrConnectivity=mplsLdpEntityAtmLsrConnectivity, mplsLdpEntityFrameRelayObjects=mplsLdpEntityFrameRelayObjects, mplsLdpNotifications=mplsLdpNotifications, mplsLdpEntityStatsBadLdpIdentifierErrors=mplsLdpEntityStatsBadLdpIdentifierErrors, mplsLdpLspFecLastChange=mplsLdpLspFecLastChange, mplsLdpEntityDiscontinuityTime=mplsLdpEntityDiscontinuityTime, mplsLdpEntityStatsBadMessageLengthErrors=mplsLdpEntityStatsBadMessageLengthErrors, mplsLdpEntityFrameRelayEntry=mplsLdpEntityFrameRelayEntry, mplsFecTable=mplsFecTable, mplsLdpFrameRelaySessionObjects=mplsLdpFrameRelaySessionObjects, mplsLdpNotificationsGroup=mplsLdpNotificationsGroup, mplsLdpEntityAtmStorageType=mplsLdpEntityAtmStorageType, mplsLdpEntityFrameRelayVcDirectionality=mplsLdpEntityFrameRelayVcDirectionality, mplsFecAddr=mplsFecAddr, mplsLdpEntityMaxPduLength=mplsLdpEntityMaxPduLength, mplsLdpEntityStatsTable=mplsLdpEntityStatsTable, mplsLdpLspFecTable=mplsLdpLspFecTable, mplsLdpEntityAtmMergeCap=mplsLdpEntityAtmMergeCap, mplsLdpEntityGenericObjects=mplsLdpEntityGenericObjects, mplsLdpGenericModuleReadOnlyCompliance=mplsLdpGenericModuleReadOnlyCompliance, mplsLdpEntityGenericIfIndexOrZero=mplsLdpEntityGenericIfIndexOrZero, mplsLdpSessionObjects=mplsLdpSessionObjects, mplsLdpAtmModuleFullCompliance=mplsLdpAtmModuleFullCompliance, mplsLdpEntityStatsShutdownSentNotifications=mplsLdpEntityStatsShutdownSentNotifications, mplsLdpEntityOperStatus=mplsLdpEntityOperStatus, mplsLdpEntityFrameRelayLRLen=mplsLdpEntityFrameRelayLRLen, mplsLdpEntityProtocolVersion=mplsLdpEntityProtocolVersion, mplsLdpEntityKeepAliveHoldTimer=mplsLdpEntityKeepAliveHoldTimer, mplsLdpEntityHelloHoldTimer=mplsLdpEntityHelloHoldTimer, mplsOutSegmentLdpLspEntry=mplsOutSegmentLdpLspEntry, mplsLdpEntityIndex=mplsLdpEntityIndex, mplsLdpInitSessionThresholdExceeded=mplsLdpInitSessionThresholdExceeded, mplsLdpLspFecIndex=mplsLdpLspFecIndex, MplsLabel=MplsLabel, mplsLdpSessionAtmLRUpperBoundVpi=mplsLdpSessionAtmLRUpperBoundVpi, mplsLdpEntityTransportAddrKind=mplsLdpEntityTransportAddrKind, mplsLdpEntityTargetPeerAddr=mplsLdpEntityTargetPeerAddr, mplsInSegmentLdpLspType=mplsInSegmentLdpLspType, mplsLdpPeerPathVectorLimit=mplsLdpPeerPathVectorLimit, mplsLdpEntityGenericLabelSpace=mplsLdpEntityGenericLabelSpace)
