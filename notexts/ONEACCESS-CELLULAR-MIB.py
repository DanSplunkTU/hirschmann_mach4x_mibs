#
# PySNMP MIB module ONEACCESS-CELLULAR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/oneaccess/ONEACCESS-CELLULAR-MIB
# Produced by pysmi-1.1.8 at Tue Jan 18 14:52:52 2022
# On host fv-az39-968 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
oacExpIMCellRadio, oacMIBModules = mibBuilder.importSymbols("ONEACCESS-GLOBAL-REG", "oacExpIMCellRadio", "oacMIBModules")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
NotificationType, ObjectIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Integer32, Unsigned32, Counter64, Counter32, ModuleIdentity, MibIdentifier, IpAddress, iso, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ObjectIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Integer32", "Unsigned32", "Counter64", "Counter32", "ModuleIdentity", "MibIdentifier", "IpAddress", "iso", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
oacCellularMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 13191, 1, 100, 1000))
oacCellularMIBModule.setRevisions(('2014-04-07 00:00', '2013-10-15 00:00', '2011-10-27 00:00', '2010-07-08 00:01',))
if mibBuilder.loadTexts: oacCellularMIBModule.setLastUpdated('201310150000Z')
if mibBuilder.loadTexts: oacCellularMIBModule.setOrganization(' OneAccess ')
oacCellRadioRssi = MibIdentifier((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 1))
oacCellRssiLastHourTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 1, 1), )
if mibBuilder.loadTexts: oacCellRssiLastHourTable.setStatus('current')
oacCellRssiLastHourEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 1, 1, 1), ).setIndexNames((0, "ONEACCESS-CELLULAR-MIB", "oacCellRssiLastHourMinutes"))
if mibBuilder.loadTexts: oacCellRssiLastHourEntry.setStatus('current')
oacCellRssiLastHourMinutes = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellRssiLastHourMinutes.setStatus('current')
oacCellRssiLastHourMin = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellRssiLastHourMin.setStatus('current')
oacCellRssiLastHourAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellRssiLastHourAvg.setStatus('current')
oacCellRssiLastHourMax = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellRssiLastHourMax.setStatus('current')
oacCellRssiLastDayTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 1, 2), )
if mibBuilder.loadTexts: oacCellRssiLastDayTable.setStatus('current')
oacCellRssiLastDayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 1, 2, 1), ).setIndexNames((0, "ONEACCESS-CELLULAR-MIB", "oacCellRssiLastDayHours"))
if mibBuilder.loadTexts: oacCellRssiLastDayEntry.setStatus('current')
oacCellRssiLastDayHours = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 1, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellRssiLastDayHours.setStatus('current')
oacCellRssiLastDayMin = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellRssiLastDayMin.setStatus('current')
oacCellRssiLastDayAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 1, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellRssiLastDayAvg.setStatus('current')
oacCellRssiLastDayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellRssiLastDayMax.setStatus('current')
oacCellRssiLastMonthTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 1, 3), )
if mibBuilder.loadTexts: oacCellRssiLastMonthTable.setStatus('current')
oacCellRssiLastMonthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 1, 3, 1), ).setIndexNames((0, "ONEACCESS-CELLULAR-MIB", "oacCellRssiLastMonthDays"))
if mibBuilder.loadTexts: oacCellRssiLastMonthEntry.setStatus('current')
oacCellRssiLastMonthDays = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 1, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellRssiLastMonthDays.setStatus('current')
oacCellRssiLastMonthMin = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 1, 3, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellRssiLastMonthMin.setStatus('current')
oacCellRssiLastMonthAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellRssiLastMonthAvg.setStatus('current')
oacCellRssiLastMonthMax = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 1, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellRssiLastMonthMax.setStatus('current')
oacCellRadioModuleTable = MibTable((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2), )
if mibBuilder.loadTexts: oacCellRadioModuleTable.setStatus('current')
oacCellRadioModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1), ).setIndexNames((0, "ONEACCESS-CELLULAR-MIB", "oacCellModuleIndex"))
if mibBuilder.loadTexts: oacCellRadioModuleEntry.setStatus('current')
oacCellModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellModuleIndex.setStatus('current')
oacCellManufacturer = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellManufacturer.setStatus('current')
oacCellEquipment = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellEquipment.setStatus('current')
oacCellBootRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellBootRevision.setStatus('current')
oacCellRevision = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellRevision.setStatus('current')
oacCellIMEI = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellIMEI.setStatus('current')
oacCellMEID = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellMEID.setStatus('current')
oacCellSIMStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellSIMStatus.setStatus('current')
oacCellIMSI = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellIMSI.setStatus('current')
oacCellICCI = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellICCI.setStatus('current')
oacCellPinStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellPinStatus.setStatus('current')
oacCellSelectedOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 40), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellSelectedOperator.setStatus('current')
oacCellSignalStrength = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellSignalStrength.setStatus('current')
oacCellEcIo = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellEcIo.setStatus('current')
oacCellRSRQ = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellRSRQ.setStatus('current')
oacCellRSRP = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellRSRP.setStatus('current')
oacCellSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellSNR.setStatus('current')
oacCellRadioAccessTechnology = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 46), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellRadioAccessTechnology.setStatus('current')
oacCellCircuitSwitchedState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 47), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellCircuitSwitchedState.setStatus('current')
oacCellPacketSwitchedState = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 48), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellPacketSwitchedState.setStatus('current')
oacCellResetOnLossOfRegistration = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 60), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellResetOnLossOfRegistration.setStatus('current')
oacCellResetOnFailedRegistration = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 61), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellResetOnFailedRegistration.setStatus('current')
oacCellHardwareReset = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 62), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellHardwareReset.setStatus('current')
oacCellLAC = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 70), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellLAC.setStatus('current')
oacCellCellID = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 71), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellCellID.setStatus('current')
oacCellTAC = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 72), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellTAC.setStatus('current')
oacCellPLMN = MibTableColumn((1, 3, 6, 1, 4, 1, 13191, 10, 3, 9, 2, 1, 73), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oacCellPLMN.setStatus('current')
mibBuilder.exportSymbols("ONEACCESS-CELLULAR-MIB", oacCellRSRP=oacCellRSRP, oacCellRssiLastMonthDays=oacCellRssiLastMonthDays, oacCellRssiLastHourTable=oacCellRssiLastHourTable, oacCellRSRQ=oacCellRSRQ, oacCellRssiLastDayTable=oacCellRssiLastDayTable, oacCellRadioModuleEntry=oacCellRadioModuleEntry, oacCellRssiLastDayMin=oacCellRssiLastDayMin, oacCellRssiLastHourAvg=oacCellRssiLastHourAvg, oacCellMEID=oacCellMEID, oacCellPLMN=oacCellPLMN, oacCellIMEI=oacCellIMEI, oacCellIMSI=oacCellIMSI, oacCellResetOnLossOfRegistration=oacCellResetOnLossOfRegistration, oacCellLAC=oacCellLAC, oacCellTAC=oacCellTAC, oacCellRssiLastMonthMax=oacCellRssiLastMonthMax, oacCellSIMStatus=oacCellSIMStatus, oacCellRssiLastMonthTable=oacCellRssiLastMonthTable, PYSNMP_MODULE_ID=oacCellularMIBModule, oacCellRssiLastMonthAvg=oacCellRssiLastMonthAvg, oacCellRadioRssi=oacCellRadioRssi, oacCellRssiLastHourMin=oacCellRssiLastHourMin, oacCellRssiLastDayEntry=oacCellRssiLastDayEntry, oacCellSignalStrength=oacCellSignalStrength, oacCellSelectedOperator=oacCellSelectedOperator, oacCellularMIBModule=oacCellularMIBModule, oacCellRssiLastMonthEntry=oacCellRssiLastMonthEntry, oacCellResetOnFailedRegistration=oacCellResetOnFailedRegistration, oacCellRadioAccessTechnology=oacCellRadioAccessTechnology, oacCellRssiLastHourMinutes=oacCellRssiLastHourMinutes, oacCellBootRevision=oacCellBootRevision, oacCellRssiLastMonthMin=oacCellRssiLastMonthMin, oacCellRssiLastDayAvg=oacCellRssiLastDayAvg, oacCellEcIo=oacCellEcIo, oacCellRssiLastHourEntry=oacCellRssiLastHourEntry, oacCellPacketSwitchedState=oacCellPacketSwitchedState, oacCellRssiLastDayMax=oacCellRssiLastDayMax, oacCellRadioModuleTable=oacCellRadioModuleTable, oacCellPinStatus=oacCellPinStatus, oacCellRssiLastHourMax=oacCellRssiLastHourMax, oacCellSNR=oacCellSNR, oacCellRevision=oacCellRevision, oacCellHardwareReset=oacCellHardwareReset, oacCellManufacturer=oacCellManufacturer, oacCellICCI=oacCellICCI, oacCellModuleIndex=oacCellModuleIndex, oacCellRssiLastDayHours=oacCellRssiLastDayHours, oacCellCircuitSwitchedState=oacCellCircuitSwitchedState, oacCellCellID=oacCellCellID, oacCellEquipment=oacCellEquipment)
