#
# PySNMP MIB module NSCRTV-HFCEMS-PROPERTY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/glassway/NSCRTV-HFCEMS-PROPERTY-MIB
# Produced by pysmi-1.1.3 at Sun Nov 28 19:42:32 2021
# On host fv-az83-233 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
propertyIdent, = mibBuilder.importSymbols("NSCRTV-ROOT", "propertyIdent")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, IpAddress, iso, Bits, ObjectIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Counter32, NotificationType, MibIdentifier, ModuleIdentity, Counter64, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "IpAddress", "iso", "Bits", "ObjectIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Counter32", "NotificationType", "MibIdentifier", "ModuleIdentity", "Counter64", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
analogPropertyTable = MibTable((1, 3, 6, 1, 4, 1, 17409, 1, 1, 1), )
if mibBuilder.loadTexts: analogPropertyTable.setStatus('mandatory')
analogPropertyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17409, 1, 1, 1, 1), ).setIndexNames((0, "NSCRTV-HFCEMS-PROPERTY-MIB", "analogParameterOID"))
if mibBuilder.loadTexts: analogPropertyEntry.setStatus('mandatory')
analogParameterOID = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 1, 1, 1, 1), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: analogParameterOID.setStatus('mandatory')
alarmEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alarmEnable.setStatus('mandatory')
analogAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("aasNominal", 1), ("aasHIHI", 2), ("aasHI", 3), ("aasLO", 4), ("aasLOLO", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: analogAlarmState.setStatus('mandatory')
analogAlarmHIHI = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 1, 1, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analogAlarmHIHI.setStatus('mandatory')
analogAlarmHI = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 1, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analogAlarmHI.setStatus('mandatory')
analogAlarmLO = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 1, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analogAlarmLO.setStatus('mandatory')
analogAlarmLOLO = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 1, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analogAlarmLOLO.setStatus('mandatory')
analogAlarmDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 1, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: analogAlarmDeadband.setStatus('mandatory')
discretePropertyTable = MibTable((1, 3, 6, 1, 4, 1, 17409, 1, 1, 2), )
if mibBuilder.loadTexts: discretePropertyTable.setStatus('mandatory')
discretePropertyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17409, 1, 1, 2, 1), ).setIndexNames((0, "NSCRTV-HFCEMS-PROPERTY-MIB", "discreteParameterOID"), (0, "NSCRTV-HFCEMS-PROPERTY-MIB", "discreteAlarmValue"))
if mibBuilder.loadTexts: discretePropertyEntry.setStatus('mandatory')
discreteParameterOID = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 1, 2, 1, 1), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: discreteParameterOID.setStatus('mandatory')
discreteAlarmValue = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: discreteAlarmValue.setStatus('mandatory')
discreteAlarmEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disable", 1), ("enableMajor", 2), ("enableMinor", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: discreteAlarmEnable.setStatus('mandatory')
discreteAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 6, 7))).clone(namedValues=NamedValues(("dasNominal", 1), ("dasDiscreteMajor", 6), ("dasDiscreteMinor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: discreteAlarmState.setStatus('mandatory')
currentAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 17409, 1, 1, 3), )
if mibBuilder.loadTexts: currentAlarmTable.setStatus('mandatory')
currentAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 17409, 1, 1, 3, 1), ).setIndexNames((0, "NSCRTV-HFCEMS-PROPERTY-MIB", "currentAlarmOID"))
if mibBuilder.loadTexts: currentAlarmEntry.setStatus('mandatory')
currentAlarmOID = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 1, 3, 1, 1), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentAlarmOID.setStatus('mandatory')
currentAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("caasHIHI", 2), ("caasHI", 3), ("caasLO", 4), ("caasLOLO", 5), ("caasDiscreteMajor", 6), ("caasDiscreteMinor", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentAlarmState.setStatus('mandatory')
currentAlarmValue = MibTableColumn((1, 3, 6, 1, 4, 1, 17409, 1, 1, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: currentAlarmValue.setStatus('mandatory')
mibBuilder.exportSymbols("NSCRTV-HFCEMS-PROPERTY-MIB", analogAlarmLO=analogAlarmLO, analogAlarmLOLO=analogAlarmLOLO, discretePropertyEntry=discretePropertyEntry, currentAlarmOID=currentAlarmOID, alarmEnable=alarmEnable, analogPropertyEntry=analogPropertyEntry, analogAlarmHI=analogAlarmHI, discretePropertyTable=discretePropertyTable, analogPropertyTable=analogPropertyTable, discreteAlarmValue=discreteAlarmValue, analogAlarmState=analogAlarmState, discreteAlarmState=discreteAlarmState, currentAlarmState=currentAlarmState, analogAlarmDeadband=analogAlarmDeadband, currentAlarmTable=currentAlarmTable, analogParameterOID=analogParameterOID, currentAlarmValue=currentAlarmValue, analogAlarmHIHI=analogAlarmHIHI, discreteAlarmEnable=discreteAlarmEnable, discreteParameterOID=discreteParameterOID, currentAlarmEntry=currentAlarmEntry)
