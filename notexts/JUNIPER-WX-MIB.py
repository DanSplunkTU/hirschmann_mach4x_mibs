#
# PySNMP MIB module JUNIPER-WX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/juniper/JUNIPER-WX-MIB
# Produced by pysmi-1.1.3 at Sun Nov 28 21:27:36 2021
# On host fv-az33-735 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
jnxWxCommonEventDescr, = mibBuilder.importSymbols("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr")
jnxWxModules, jnxWxSpecificMib = mibBuilder.importSymbols("JUNIPER-WX-GLOBAL-REG", "jnxWxModules", "jnxWxSpecificMib")
TcQosIdentifier, TcAppName = mibBuilder.importSymbols("JUNIPER-WX-GLOBAL-TC", "TcQosIdentifier", "TcAppName")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Bits, ModuleIdentity, Counter32, IpAddress, NotificationType, TimeTicks, Unsigned32, MibIdentifier, Gauge32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Bits", "ModuleIdentity", "Counter32", "IpAddress", "NotificationType", "TimeTicks", "Unsigned32", "MibIdentifier", "Gauge32", "Counter64")
DisplayString, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TimeStamp")
jnxWxMibModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 8239, 1, 1, 4))
jnxWxMibModule.setRevisions(('2004-05-24 00:00', '2003-06-23 00:00', '2002-03-28 00:00', '2002-03-27 00:00', '2001-12-19 12:00',))
if mibBuilder.loadTexts: jnxWxMibModule.setLastUpdated('200203280000Z')
if mibBuilder.loadTexts: jnxWxMibModule.setOrganization('Juniper Networks, Inc')
jnxWxMib = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1))
if mibBuilder.loadTexts: jnxWxMib.setStatus('current')
jnxWxConfMib = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 1))
if mibBuilder.loadTexts: jnxWxConfMib.setStatus('current')
jnxWxObjs = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2))
if mibBuilder.loadTexts: jnxWxObjs.setStatus('current')
jnxWxEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3))
if mibBuilder.loadTexts: jnxWxEvents.setStatus('current')
jnxWxStatsUpdateTime = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxStatsUpdateTime.setStatus('current')
jnxWxStatsAsmCount = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxStatsAsmCount.setStatus('current')
jnxWxStatsVirtEndptCount = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxStatsVirtEndptCount.setStatus('current')
jnxWxStatsAppCount = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxStatsAppCount.setStatus('current')
jnxWxStatsAccelAppCount = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxStatsAccelAppCount.setStatus('current')
jnxWxStatsQosClassCount = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxStatsQosClassCount.setStatus('current')
jnxWxStatsQosEndptCount = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxStatsQosEndptCount.setStatus('current')
jnxWxStatsWpEndptCount = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxStatsWpEndptCount.setStatus('current')
jnxWxSysStats = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4))
if mibBuilder.loadTexts: jnxWxSysStats.setStatus('current')
jnxWxSysStatsBytesInAe = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsBytesInAe.setStatus('current')
jnxWxSysStatsBytesOutAe = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsBytesOutAe.setStatus('current')
jnxWxSysStatsPktsInAe = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktsInAe.setStatus('current')
jnxWxSysStatsPktsOutAe = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktsOutAe.setStatus('current')
jnxWxSysStatsBytesOutOob = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsBytesOutOob.setStatus('current')
jnxWxSysStatsBytesPtNoAe = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsBytesPtNoAe.setStatus('current')
jnxWxSysStatsPktsPtNoAe = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktsPtNoAe.setStatus('current')
jnxWxSysStatsBytesPtFilter = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsBytesPtFilter.setStatus('current')
jnxWxSysStatsPktsPtFilter = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktsPtFilter.setStatus('current')
jnxWxSysStatsBytesOfPt = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsBytesOfPt.setStatus('current')
jnxWxSysStatsPktsOfPt = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktsOfPt.setStatus('current')
jnxWxSysStatsBytesTpIn = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsBytesTpIn.setStatus('current')
jnxWxSysStatsPktsTpIn = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktsTpIn.setStatus('current')
jnxWxSysStatsBytesTpOut = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsBytesTpOut.setStatus('current')
jnxWxSysStatsPktsTpOut = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktsTpOut.setStatus('current')
jnxWxSysStatsBytesTpPt = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsBytesTpPt.setStatus('current')
jnxWxSysStatsPktsTpPt = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktsTpPt.setStatus('current')
jnxWxSysStatsPeakRdn = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPeakRdn.setStatus('current')
jnxWxSysStatsThruputIn = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsThruputIn.setStatus('current')
jnxWxSysStatsThruputOut = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsThruputOut.setStatus('current')
jnxWxSysStatsBytesInRe = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsBytesInRe.setStatus('current')
jnxWxSysStatsBytesOutRe = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsBytesOutRe.setStatus('current')
jnxWxSysStatsPktsInRe = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktsInRe.setStatus('current')
jnxWxSysStatsPktsOutRe = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktsOutRe.setStatus('current')
jnxWxSysStatsPktSizeIn1 = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktSizeIn1.setStatus('current')
jnxWxSysStatsPktSizeIn2 = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktSizeIn2.setStatus('current')
jnxWxSysStatsPktSizeIn3 = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktSizeIn3.setStatus('current')
jnxWxSysStatsPktSizeIn4 = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktSizeIn4.setStatus('current')
jnxWxSysStatsPktSizeIn5 = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktSizeIn5.setStatus('current')
jnxWxSysStatsPktSizeIn6 = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktSizeIn6.setStatus('current')
jnxWxSysStatsPktSizeOut1 = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktSizeOut1.setStatus('current')
jnxWxSysStatsPktSizeOut2 = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktSizeOut2.setStatus('current')
jnxWxSysStatsPktSizeOut3 = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktSizeOut3.setStatus('current')
jnxWxSysStatsPktSizeOut4 = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktSizeOut4.setStatus('current')
jnxWxSysStatsPktSizeOut5 = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktSizeOut5.setStatus('current')
jnxWxSysStatsPktSizeOut6 = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 4, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxSysStatsPktSizeOut6.setStatus('current')
jnxWxAsm = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 5))
if mibBuilder.loadTexts: jnxWxAsm.setStatus('current')
jnxWxAsmTable = MibTable((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 5, 1), )
if mibBuilder.loadTexts: jnxWxAsmTable.setStatus('current')
jnxWxAsmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 5, 1, 1), ).setIndexNames((0, "JUNIPER-WX-MIB", "jnxWxAsmIndex"))
if mibBuilder.loadTexts: jnxWxAsmEntry.setStatus('current')
jnxWxAsmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 5, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: jnxWxAsmIndex.setStatus('current')
jnxWxAsmIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 5, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAsmIpAddress.setStatus('current')
jnxWxAsmStatsTable = MibTable((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 5, 2), )
if mibBuilder.loadTexts: jnxWxAsmStatsTable.setStatus('current')
jnxWxAsmStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 5, 2, 1), )
jnxWxAsmEntry.registerAugmentions(("JUNIPER-WX-MIB", "jnxWxAsmStatsEntry"))
jnxWxAsmStatsEntry.setIndexNames(*jnxWxAsmEntry.getIndexNames())
if mibBuilder.loadTexts: jnxWxAsmStatsEntry.setStatus('current')
jnxWxAsmStatsPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 5, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAsmStatsPktsIn.setStatus('current')
jnxWxAsmStatsPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 5, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAsmStatsPktsOut.setStatus('current')
jnxWxAsmStatsBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 5, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAsmStatsBytesIn.setStatus('current')
jnxWxAsmStatsBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 5, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAsmStatsBytesOut.setStatus('current')
jnxWxVirtEndptTable = MibTable((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 5, 3), )
if mibBuilder.loadTexts: jnxWxVirtEndptTable.setStatus('current')
jnxWxVirtEndptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 5, 3, 1), ).setIndexNames((0, "JUNIPER-WX-MIB", "jnxWxVirtEndptIndex"))
if mibBuilder.loadTexts: jnxWxVirtEndptEntry.setStatus('current')
jnxWxVirtEndptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 5, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: jnxWxVirtEndptIndex.setStatus('current')
jnxWxVirtEndptName = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 5, 3, 1, 2), TcAppName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxVirtEndptName.setStatus('current')
jnxWxVirtEndptSubnetCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 5, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxVirtEndptSubnetCount.setStatus('current')
jnxWxApp = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6))
if mibBuilder.loadTexts: jnxWxApp.setStatus('current')
jnxWxAppTable = MibTable((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 1), )
if mibBuilder.loadTexts: jnxWxAppTable.setStatus('current')
jnxWxAppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 1, 1), ).setIndexNames((0, "JUNIPER-WX-MIB", "jnxWxAppIndex"))
if mibBuilder.loadTexts: jnxWxAppEntry.setStatus('current')
jnxWxAppIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: jnxWxAppIndex.setStatus('current')
jnxWxAppAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 1, 1, 2), TcAppName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAppAppName.setStatus('current')
jnxWxAppStatsTable = MibTable((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 2), )
if mibBuilder.loadTexts: jnxWxAppStatsTable.setStatus('current')
jnxWxAppStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 2, 1), ).setIndexNames((0, "JUNIPER-WX-MIB", "jnxWxAsmIndex"), (0, "JUNIPER-WX-MIB", "jnxWxAppIndex"))
if mibBuilder.loadTexts: jnxWxAppStatsEntry.setStatus('current')
jnxWxAppStatsBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 2, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAppStatsBytesIn.setStatus('current')
jnxWxAppStatsBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAppStatsBytesOut.setStatus('current')
jnxWxAppStatsBytesInPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAppStatsBytesInPercent.setStatus('current')
jnxWxAppStatsAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 2, 1, 4), TcAppName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAppStatsAppName.setStatus('current')
jnxWxAppStatsAccelBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAppStatsAccelBytesIn.setStatus('current')
jnxWxAppStatsActiveSessionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAppStatsActiveSessionTime.setStatus('current')
jnxWxAppStatsEstBoostBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAppStatsEstBoostBytes.setStatus('current')
jnxWxAppStatsBytesOutWxc = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAppStatsBytesOutWxc.setStatus('current')
jnxWxAppAggrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 3), )
if mibBuilder.loadTexts: jnxWxAppAggrStatsTable.setStatus('current')
jnxWxAppAggrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 3, 1), )
jnxWxAppEntry.registerAugmentions(("JUNIPER-WX-MIB", "jnxWxAppAggrStatsEntry"))
jnxWxAppAggrStatsEntry.setIndexNames(*jnxWxAppEntry.getIndexNames())
if mibBuilder.loadTexts: jnxWxAppAggrStatsEntry.setStatus('current')
jnxWxAppAggrStatsBytesInRe = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 3, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAppAggrStatsBytesInRe.setStatus('current')
jnxWxAppAggrStatsBytesOutRe = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAppAggrStatsBytesOutRe.setStatus('current')
jnxWxAppAggrStatsBytesInPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAppAggrStatsBytesInPercent.setStatus('current')
jnxWxWanStatsTable = MibTable((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 4), )
if mibBuilder.loadTexts: jnxWxWanStatsTable.setStatus('current')
jnxWxWanStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 4, 1), ).setIndexNames((0, "JUNIPER-WX-MIB", "jnxWxAsmIndex"), (0, "JUNIPER-WX-MIB", "jnxWxAppIndex"))
if mibBuilder.loadTexts: jnxWxWanStatsEntry.setStatus('current')
jnxWxWanStatsBytesToWan = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxWanStatsBytesToWan.setStatus('current')
jnxWxWanStatsBytesFromWan = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxWanStatsBytesFromWan.setStatus('current')
jnxWxAccelAppNameTable = MibTable((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 5), )
if mibBuilder.loadTexts: jnxWxAccelAppNameTable.setStatus('current')
jnxWxAccelAppNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 5, 1), ).setIndexNames((0, "JUNIPER-WX-MIB", "jnxWxAccelAppIndex"))
if mibBuilder.loadTexts: jnxWxAccelAppNameEntry.setStatus('current')
jnxWxAccelAppIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 5, 1, 1), Integer32())
if mibBuilder.loadTexts: jnxWxAccelAppIndex.setStatus('current')
jnxWxAccelAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 5, 1, 2), TcAppName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAccelAppName.setStatus('current')
jnxWxAccelAppStatsTable = MibTable((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 6), )
if mibBuilder.loadTexts: jnxWxAccelAppStatsTable.setStatus('current')
jnxWxAccelAppStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 6, 1), ).setIndexNames((0, "JUNIPER-WX-MIB", "jnxWxAsmIndex"), (0, "JUNIPER-WX-MIB", "jnxWxAccelAppIndex"))
if mibBuilder.loadTexts: jnxWxAccelAppStatsEntry.setStatus('current')
jnxWxAccelAppTimeWithAccel = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 6, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAccelAppTimeWithAccel.setStatus('current')
jnxWxAccelAppTimeWithoutAccel = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 6, 6, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxAccelAppTimeWithoutAccel.setStatus('current')
jnxWxBurstStats = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 7))
if mibBuilder.loadTexts: jnxWxBurstStats.setStatus('current')
jnxWxBurstStatsStartTime = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxBurstStatsStartTime.setStatus('current')
jnxWxBurstStatsBpsIn = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 7, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxBurstStatsBpsIn.setStatus('current')
jnxWxBurstStatsBpsOut = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 7, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxBurstStatsBpsOut.setStatus('current')
jnxWxBurstStatsBpsPt = MibScalar((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 7, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxBurstStatsBpsPt.setStatus('current')
jnxWxQos = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 10))
if mibBuilder.loadTexts: jnxWxQos.setStatus('current')
jnxWxQosEndptTable = MibTable((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 10, 1), )
if mibBuilder.loadTexts: jnxWxQosEndptTable.setStatus('current')
jnxWxQosEndptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 10, 1, 1), ).setIndexNames((0, "JUNIPER-WX-MIB", "jnxWxQosEndptIndex"))
if mibBuilder.loadTexts: jnxWxQosEndptEntry.setStatus('current')
jnxWxQosEndptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 10, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: jnxWxQosEndptIndex.setStatus('current')
jnxWxQosEndptIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 10, 1, 1, 2), TcQosIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxQosEndptIdentifier.setStatus('current')
jnxWxQosClassTable = MibTable((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 10, 2), )
if mibBuilder.loadTexts: jnxWxQosClassTable.setStatus('current')
jnxWxQosClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 10, 2, 1), ).setIndexNames((0, "JUNIPER-WX-MIB", "jnxWxQosClassIndex"))
if mibBuilder.loadTexts: jnxWxQosClassEntry.setStatus('current')
jnxWxQosClassIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 10, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: jnxWxQosClassIndex.setStatus('current')
jnxWxQosClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 10, 2, 1, 2), TcQosIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxQosClassName.setStatus('current')
jnxWxQosStatsTable = MibTable((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 10, 3), )
if mibBuilder.loadTexts: jnxWxQosStatsTable.setStatus('current')
jnxWxQosStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 10, 3, 1), ).setIndexNames((0, "JUNIPER-WX-MIB", "jnxWxQosEndptIndex"), (0, "JUNIPER-WX-MIB", "jnxWxQosClassIndex"))
if mibBuilder.loadTexts: jnxWxQosStatsEntry.setStatus('current')
jnxWxQosStatsBytesIn = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 10, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxQosStatsBytesIn.setStatus('current')
jnxWxQosStatsBytesOut = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 10, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxQosStatsBytesOut.setStatus('current')
jnxWxQosStatsBytesDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 10, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxQosStatsBytesDropped.setStatus('current')
jnxWxQosStatsPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 10, 3, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxQosStatsPktsIn.setStatus('current')
jnxWxQosStatsPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 10, 3, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxQosStatsPktsOut.setStatus('current')
jnxWxQosStatsPktsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 10, 3, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxQosStatsPktsDropped.setStatus('current')
jnxWxWanPerf = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14))
if mibBuilder.loadTexts: jnxWxWanPerf.setStatus('current')
jnxWxWpEndptTable = MibTable((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14, 1), )
if mibBuilder.loadTexts: jnxWxWpEndptTable.setStatus('current')
jnxWxWpEndptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14, 1, 1), ).setIndexNames((0, "JUNIPER-WX-MIB", "jnxWxWpEndptIndex"))
if mibBuilder.loadTexts: jnxWxWpEndptEntry.setStatus('current')
jnxWxWpEndptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: jnxWxWpEndptIndex.setStatus('current')
jnxWxWpEndptIp = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxWpEndptIp.setStatus('current')
jnxWxWpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14, 2), )
if mibBuilder.loadTexts: jnxWxWpStatsTable.setStatus('current')
jnxWxWpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14, 2, 1), ).setIndexNames((0, "JUNIPER-WX-MIB", "jnxWxWpEndptIndex"))
if mibBuilder.loadTexts: jnxWxWpStatsEntry.setStatus('current')
jnxWxWpStatsLatencyThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxWpStatsLatencyThresh.setStatus('current')
jnxWxWpStatsAvgLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxWpStatsAvgLatency.setStatus('current')
jnxWxWpStatsLatencyCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxWpStatsLatencyCount.setStatus('current')
jnxWxWpStatsLatencyAboveThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxWpStatsLatencyAboveThresh.setStatus('current')
jnxWxWpStatsLatencyAboveThreshCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxWpStatsLatencyAboveThreshCount.setStatus('current')
jnxWxWpStatsLossPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxWpStatsLossPercent.setStatus('current')
jnxWxWpStatsLossCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxWpStatsLossCount.setStatus('current')
jnxWxWpStatsEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxWpStatsEventCount.setStatus('current')
jnxWxWpStatsDiversionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxWpStatsDiversionCount.setStatus('current')
jnxWxWpStatsReturnCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxWpStatsReturnCount.setStatus('current')
jnxWxWpStatsLastDown = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14, 2, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxWpStatsLastDown.setStatus('current')
jnxWxWpStatsUnavailableCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14, 2, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxWpStatsUnavailableCount.setStatus('current')
jnxWxWpStatsMinuteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 2, 14, 2, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxWxWpStatsMinuteCount.setStatus('current')
jnxWxEventObjs = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 1))
if mibBuilder.loadTexts: jnxWxEventObjs.setStatus('current')
jnxWxEventEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2))
if mibBuilder.loadTexts: jnxWxEventEvents.setStatus('current')
jnxWxEventEventsV2 = ObjectIdentity((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0))
if mibBuilder.loadTexts: jnxWxEventEventsV2.setStatus('current')
jnxWxEventRipAuthFailure = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 1)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventRipAuthFailure.setStatus('current')
jnxWxEventCompressionBufferOverflow = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 2)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventCompressionBufferOverflow.setStatus('current')
jnxWxEventCompressionSessionClosed = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 3)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventCompressionSessionClosed.setStatus('current')
jnxWxEventDecompressionSessionClosed = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 4)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventDecompressionSessionClosed.setStatus('current')
jnxWxEventCompressionSessionOpened = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 5)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventCompressionSessionOpened.setStatus('current')
jnxWxEventDecompressionSessionOpened = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 6)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventDecompressionSessionOpened.setStatus('current')
jnxWxEventPrimaryRegServerUnreachable = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 7)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventPrimaryRegServerUnreachable.setStatus('current')
jnxWxEventSecondaryRegServerUnreachable = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 8)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventSecondaryRegServerUnreachable.setStatus('current')
jnxWxEventMultiNodeMasterUp = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 9)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventMultiNodeMasterUp.setStatus('current')
jnxWxEventMultiNodeMasterDown = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 10)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventMultiNodeMasterDown.setStatus('current')
jnxWxEventMultiNodeLastUp = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 11)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventMultiNodeLastUp.setStatus('current')
jnxWxEventMultiNodeLastDown = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 12)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventMultiNodeLastDown.setStatus('current')
jnxWxEventPrimaryDownBackupEngaged = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 13)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventPrimaryDownBackupEngaged.setStatus('current')
jnxWxEventPrimaryDownBackupEngageFailed = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 14)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventPrimaryDownBackupEngageFailed.setStatus('current')
jnxWxEventPrimaryUpBackupDisengaged = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 15)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventPrimaryUpBackupDisengaged.setStatus('current')
jnxWxEventMultiPathStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 16)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventMultiPathStatusChange.setStatus('current')
jnxWxEventDiskFailure = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 17)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventDiskFailure.setStatus('current')
jnxWxEventWanPerfStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 18)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventWanPerfStatusChange.setStatus('current')
jnxWxEventDCQAboveHiWatermark = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 19)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventDCQAboveHiWatermark.setStatus('current')
jnxWxEventDCQBelowHiWatermark = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 20)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventDCQBelowHiWatermark.setStatus('current')
jnxWxEventPerformanceThreshCrossed = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 21)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventPerformanceThreshCrossed.setStatus('current')
jnxWxEventClientLinkDown = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 22)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventClientLinkDown.setStatus('current')
jnxWxEventClientLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 8239, 2, 2, 1, 3, 2, 0, 23)).setObjects(("JUNIPER-WX-COMMON-MIB", "jnxWxCommonEventDescr"))
if mibBuilder.loadTexts: jnxWxEventClientLinkUp.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-WX-MIB", jnxWxSysStatsPktSizeOut1=jnxWxSysStatsPktSizeOut1, jnxWxVirtEndptName=jnxWxVirtEndptName, jnxWxSysStatsBytesOutAe=jnxWxSysStatsBytesOutAe, jnxWxQosClassEntry=jnxWxQosClassEntry, jnxWxWpStatsTable=jnxWxWpStatsTable, jnxWxWpStatsLatencyCount=jnxWxWpStatsLatencyCount, jnxWxWpStatsEntry=jnxWxWpStatsEntry, jnxWxEventCompressionSessionClosed=jnxWxEventCompressionSessionClosed, jnxWxEventCompressionSessionOpened=jnxWxEventCompressionSessionOpened, jnxWxAppEntry=jnxWxAppEntry, jnxWxQosStatsBytesOut=jnxWxQosStatsBytesOut, jnxWxAsm=jnxWxAsm, jnxWxAppAppName=jnxWxAppAppName, jnxWxQosEndptTable=jnxWxQosEndptTable, jnxWxAccelAppNameTable=jnxWxAccelAppNameTable, jnxWxMibModule=jnxWxMibModule, jnxWxAsmIpAddress=jnxWxAsmIpAddress, jnxWxEventCompressionBufferOverflow=jnxWxEventCompressionBufferOverflow, jnxWxAsmIndex=jnxWxAsmIndex, jnxWxVirtEndptIndex=jnxWxVirtEndptIndex, jnxWxEventWanPerfStatusChange=jnxWxEventWanPerfStatusChange, jnxWxApp=jnxWxApp, jnxWxWpStatsLatencyAboveThresh=jnxWxWpStatsLatencyAboveThresh, jnxWxWpStatsLossCount=jnxWxWpStatsLossCount, jnxWxStatsAsmCount=jnxWxStatsAsmCount, jnxWxAsmStatsEntry=jnxWxAsmStatsEntry, jnxWxAppAggrStatsBytesOutRe=jnxWxAppAggrStatsBytesOutRe, jnxWxSysStatsBytesPtNoAe=jnxWxSysStatsBytesPtNoAe, jnxWxBurstStatsBpsPt=jnxWxBurstStatsBpsPt, jnxWxAsmStatsBytesOut=jnxWxAsmStatsBytesOut, jnxWxQosStatsPktsOut=jnxWxQosStatsPktsOut, jnxWxConfMib=jnxWxConfMib, jnxWxSysStatsPktSizeOut5=jnxWxSysStatsPktSizeOut5, jnxWxWpStatsLatencyThresh=jnxWxWpStatsLatencyThresh, jnxWxAppStatsBytesOut=jnxWxAppStatsBytesOut, jnxWxQosEndptEntry=jnxWxQosEndptEntry, jnxWxAccelAppStatsEntry=jnxWxAccelAppStatsEntry, jnxWxQosClassTable=jnxWxQosClassTable, jnxWxAppAggrStatsBytesInRe=jnxWxAppAggrStatsBytesInRe, jnxWxSysStatsPktSizeOut4=jnxWxSysStatsPktSizeOut4, jnxWxSysStatsPktSizeIn3=jnxWxSysStatsPktSizeIn3, jnxWxStatsAccelAppCount=jnxWxStatsAccelAppCount, jnxWxObjs=jnxWxObjs, jnxWxVirtEndptTable=jnxWxVirtEndptTable, jnxWxStatsUpdateTime=jnxWxStatsUpdateTime, jnxWxAppStatsEstBoostBytes=jnxWxAppStatsEstBoostBytes, jnxWxWpStatsLatencyAboveThreshCount=jnxWxWpStatsLatencyAboveThreshCount, jnxWxAppStatsBytesInPercent=jnxWxAppStatsBytesInPercent, jnxWxEventPrimaryUpBackupDisengaged=jnxWxEventPrimaryUpBackupDisengaged, jnxWxQosStatsBytesDropped=jnxWxQosStatsBytesDropped, jnxWxSysStatsBytesPtFilter=jnxWxSysStatsBytesPtFilter, jnxWxSysStatsPktsTpPt=jnxWxSysStatsPktsTpPt, jnxWxAsmStatsTable=jnxWxAsmStatsTable, jnxWxQosEndptIndex=jnxWxQosEndptIndex, jnxWxAppAggrStatsBytesInPercent=jnxWxAppAggrStatsBytesInPercent, jnxWxEventPrimaryRegServerUnreachable=jnxWxEventPrimaryRegServerUnreachable, jnxWxAsmStatsPktsIn=jnxWxAsmStatsPktsIn, jnxWxVirtEndptSubnetCount=jnxWxVirtEndptSubnetCount, jnxWxWpEndptEntry=jnxWxWpEndptEntry, jnxWxWpStatsDiversionCount=jnxWxWpStatsDiversionCount, jnxWxBurstStatsStartTime=jnxWxBurstStatsStartTime, jnxWxQosClassIndex=jnxWxQosClassIndex, jnxWxSysStatsPktsTpIn=jnxWxSysStatsPktsTpIn, jnxWxSysStatsPktSizeIn6=jnxWxSysStatsPktSizeIn6, jnxWxEventDecompressionSessionOpened=jnxWxEventDecompressionSessionOpened, jnxWxEventDCQBelowHiWatermark=jnxWxEventDCQBelowHiWatermark, jnxWxWpEndptIp=jnxWxWpEndptIp, jnxWxQosClassName=jnxWxQosClassName, jnxWxWpStatsEventCount=jnxWxWpStatsEventCount, jnxWxAccelAppStatsTable=jnxWxAccelAppStatsTable, jnxWxQosStatsPktsIn=jnxWxQosStatsPktsIn, jnxWxAsmStatsPktsOut=jnxWxAsmStatsPktsOut, jnxWxQosEndptIdentifier=jnxWxQosEndptIdentifier, jnxWxAppAggrStatsEntry=jnxWxAppAggrStatsEntry, jnxWxSysStatsThruputIn=jnxWxSysStatsThruputIn, jnxWxWpStatsLossPercent=jnxWxWpStatsLossPercent, jnxWxSysStatsBytesOutOob=jnxWxSysStatsBytesOutOob, jnxWxWanStatsBytesToWan=jnxWxWanStatsBytesToWan, jnxWxAccelAppName=jnxWxAccelAppName, jnxWxSysStatsPktSizeIn5=jnxWxSysStatsPktSizeIn5, jnxWxEventPerformanceThreshCrossed=jnxWxEventPerformanceThreshCrossed, jnxWxStatsQosEndptCount=jnxWxStatsQosEndptCount, jnxWxAccelAppTimeWithAccel=jnxWxAccelAppTimeWithAccel, jnxWxSysStatsPktsPtFilter=jnxWxSysStatsPktsPtFilter, jnxWxAccelAppNameEntry=jnxWxAccelAppNameEntry, jnxWxQosStatsEntry=jnxWxQosStatsEntry, jnxWxWpStatsMinuteCount=jnxWxWpStatsMinuteCount, jnxWxEventClientLinkDown=jnxWxEventClientLinkDown, jnxWxStatsAppCount=jnxWxStatsAppCount, jnxWxStatsVirtEndptCount=jnxWxStatsVirtEndptCount, jnxWxEventMultiNodeLastUp=jnxWxEventMultiNodeLastUp, jnxWxAsmStatsBytesIn=jnxWxAsmStatsBytesIn, jnxWxSysStatsPktSizeIn1=jnxWxSysStatsPktSizeIn1, jnxWxEventClientLinkUp=jnxWxEventClientLinkUp, jnxWxSysStatsPktSizeOut3=jnxWxSysStatsPktSizeOut3, jnxWxAppStatsTable=jnxWxAppStatsTable, PYSNMP_MODULE_ID=jnxWxMibModule, jnxWxQosStatsBytesIn=jnxWxQosStatsBytesIn, jnxWxEventPrimaryDownBackupEngaged=jnxWxEventPrimaryDownBackupEngaged, jnxWxStatsQosClassCount=jnxWxStatsQosClassCount, jnxWxWpStatsLastDown=jnxWxWpStatsLastDown, jnxWxEventPrimaryDownBackupEngageFailed=jnxWxEventPrimaryDownBackupEngageFailed, jnxWxMib=jnxWxMib, jnxWxSysStatsPktsInAe=jnxWxSysStatsPktsInAe, jnxWxEventObjs=jnxWxEventObjs, jnxWxAppStatsActiveSessionTime=jnxWxAppStatsActiveSessionTime, jnxWxWpStatsUnavailableCount=jnxWxWpStatsUnavailableCount, jnxWxWpStatsAvgLatency=jnxWxWpStatsAvgLatency, jnxWxSysStatsPeakRdn=jnxWxSysStatsPeakRdn, jnxWxEventRipAuthFailure=jnxWxEventRipAuthFailure, jnxWxAppStatsEntry=jnxWxAppStatsEntry, jnxWxQosStatsPktsDropped=jnxWxQosStatsPktsDropped, jnxWxEventDCQAboveHiWatermark=jnxWxEventDCQAboveHiWatermark, jnxWxEventEvents=jnxWxEventEvents, jnxWxAppAggrStatsTable=jnxWxAppAggrStatsTable, jnxWxWpStatsReturnCount=jnxWxWpStatsReturnCount, jnxWxWpEndptIndex=jnxWxWpEndptIndex, jnxWxEventSecondaryRegServerUnreachable=jnxWxEventSecondaryRegServerUnreachable, jnxWxSysStats=jnxWxSysStats, jnxWxAppIndex=jnxWxAppIndex, jnxWxBurstStatsBpsOut=jnxWxBurstStatsBpsOut, jnxWxBurstStats=jnxWxBurstStats, jnxWxEventMultiNodeMasterDown=jnxWxEventMultiNodeMasterDown, jnxWxEventDecompressionSessionClosed=jnxWxEventDecompressionSessionClosed, jnxWxEventEventsV2=jnxWxEventEventsV2, jnxWxQos=jnxWxQos, jnxWxSysStatsBytesTpOut=jnxWxSysStatsBytesTpOut, jnxWxStatsWpEndptCount=jnxWxStatsWpEndptCount, jnxWxAppStatsBytesIn=jnxWxAppStatsBytesIn, jnxWxSysStatsPktSizeOut2=jnxWxSysStatsPktSizeOut2, jnxWxBurstStatsBpsIn=jnxWxBurstStatsBpsIn, jnxWxAppStatsBytesOutWxc=jnxWxAppStatsBytesOutWxc, jnxWxAppTable=jnxWxAppTable, jnxWxSysStatsPktsPtNoAe=jnxWxSysStatsPktsPtNoAe, jnxWxWanPerf=jnxWxWanPerf, jnxWxAccelAppIndex=jnxWxAccelAppIndex, jnxWxQosStatsTable=jnxWxQosStatsTable, jnxWxSysStatsPktsTpOut=jnxWxSysStatsPktsTpOut, jnxWxEvents=jnxWxEvents, jnxWxAppStatsAppName=jnxWxAppStatsAppName, jnxWxWanStatsBytesFromWan=jnxWxWanStatsBytesFromWan, jnxWxEventMultiNodeLastDown=jnxWxEventMultiNodeLastDown, jnxWxEventDiskFailure=jnxWxEventDiskFailure, jnxWxSysStatsBytesTpPt=jnxWxSysStatsBytesTpPt, jnxWxSysStatsPktSizeIn4=jnxWxSysStatsPktSizeIn4, jnxWxSysStatsBytesInAe=jnxWxSysStatsBytesInAe, jnxWxSysStatsThruputOut=jnxWxSysStatsThruputOut, jnxWxSysStatsPktsOutRe=jnxWxSysStatsPktsOutRe, jnxWxSysStatsPktSizeOut6=jnxWxSysStatsPktSizeOut6, jnxWxSysStatsPktsInRe=jnxWxSysStatsPktsInRe, jnxWxWpEndptTable=jnxWxWpEndptTable, jnxWxEventMultiNodeMasterUp=jnxWxEventMultiNodeMasterUp, jnxWxSysStatsBytesTpIn=jnxWxSysStatsBytesTpIn, jnxWxAccelAppTimeWithoutAccel=jnxWxAccelAppTimeWithoutAccel, jnxWxSysStatsBytesOfPt=jnxWxSysStatsBytesOfPt, jnxWxWanStatsTable=jnxWxWanStatsTable, jnxWxAsmTable=jnxWxAsmTable, jnxWxAppStatsAccelBytesIn=jnxWxAppStatsAccelBytesIn, jnxWxSysStatsPktsOfPt=jnxWxSysStatsPktsOfPt, jnxWxEventMultiPathStatusChange=jnxWxEventMultiPathStatusChange, jnxWxSysStatsBytesOutRe=jnxWxSysStatsBytesOutRe, jnxWxWanStatsEntry=jnxWxWanStatsEntry, jnxWxSysStatsBytesInRe=jnxWxSysStatsBytesInRe, jnxWxSysStatsPktsOutAe=jnxWxSysStatsPktsOutAe, jnxWxVirtEndptEntry=jnxWxVirtEndptEntry, jnxWxSysStatsPktSizeIn2=jnxWxSysStatsPktSizeIn2, jnxWxAsmEntry=jnxWxAsmEntry)
