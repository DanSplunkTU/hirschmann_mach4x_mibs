#
# PySNMP MIB module DSG-IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/DOCS-DSG-IF-MIB
# Produced by pysmi-1.1.8 at Sat Jan 15 05:10:39 2022
# On host fv-az42-839 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
clabProjDocsis, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabProjDocsis")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
InetAddress, InetPortNumber, InetAddressPrefixLength, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetPortNumber", "InetAddressPrefixLength", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
IpAddress, iso, Bits, ModuleIdentity, Integer32, Counter32, Gauge32, ObjectIdentity, TimeTicks, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "iso", "Bits", "ModuleIdentity", "Integer32", "Counter32", "Gauge32", "ObjectIdentity", "TimeTicks", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32")
TruthValue, RowStatus, MacAddress, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "MacAddress", "DisplayString", "TextualConvention")
dsgIfMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3))
dsgIfMIB.setRevisions(('2004-08-04 00:00',))
if mibBuilder.loadTexts: dsgIfMIB.setLastUpdated('200411240000Z')
if mibBuilder.loadTexts: dsgIfMIB.setOrganization('Cable Television Laboratories, Inc')
dsgIfMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 0))
dsgIfMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1))
dsgIfMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 2))
dsgIfClassifier = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1))
dsgIfTunnel = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 2))
dsgIfTunnelGrpToChannel = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3))
dsgIfDownstreamChannel = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 4))
dsgIfDCD = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5))
dsgIfClassifierTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1), )
if mibBuilder.loadTexts: dsgIfClassifierTable.setStatus('current')
dsgIfClassifierEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1), ).setIndexNames((0, "DSG-IF-MIB", "dsgIfTunnelIndex"), (0, "DSG-IF-MIB", "dsgIfClassId"))
if mibBuilder.loadTexts: dsgIfClassifierEntry.setStatus('current')
dsgIfClassId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: dsgIfClassId.setStatus('current')
dsgIfClassPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassPriority.setStatus('current')
dsgIfClassSrcIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 3), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassSrcIpAddrType.setStatus('current')
dsgIfClassSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 4), InetAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassSrcIpAddr.setStatus('current')
dsgIfClassSrcIpPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 5), InetAddressPrefixLength().clone(32)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassSrcIpPrefixLength.setStatus('current')
dsgIfClassDestIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 6), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassDestIpAddressType.setStatus('current')
dsgIfClassDestIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 7), InetAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassDestIpAddress.setStatus('current')
dsgIfClassDestPortStart = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 8), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassDestPortStart.setStatus('current')
dsgIfClassDestPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 9), InetPortNumber().clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassDestPortEnd.setStatus('current')
dsgIfClassRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassRowStatus.setStatus('current')
dsgIfClassIncludeInDCD = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 1, 1, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClassIncludeInDCD.setStatus('current')
dsgIfTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 2, 1), )
if mibBuilder.loadTexts: dsgIfTunnelTable.setStatus('current')
dsgIfTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 2, 1, 1), ).setIndexNames((0, "DSG-IF-MIB", "dsgIfTunnelIndex"))
if mibBuilder.loadTexts: dsgIfTunnelEntry.setStatus('current')
dsgIfTunnelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsgIfTunnelIndex.setStatus('current')
dsgIfTunnelGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelGroupIndex.setStatus('current')
dsgIfTunnelClientIdListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelClientIdListIndex.setStatus('current')
dsgIfTunnelMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 2, 1, 1, 4), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelMacAddress.setStatus('current')
dsgIfTunnelServiceClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 2, 1, 1, 5), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelServiceClassName.setStatus('current')
dsgIfTunnelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 2, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelRowStatus.setStatus('current')
dsgIfTunnelGrpToChannelTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3, 1), )
if mibBuilder.loadTexts: dsgIfTunnelGrpToChannelTable.setStatus('current')
dsgIfTunnelGrpToChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3, 1, 1), ).setIndexNames((0, "DSG-IF-MIB", "dsgIfTunnelGrpIndex"), (0, "DSG-IF-MIB", "dsgIfTunnelGrpChannelIndex"))
if mibBuilder.loadTexts: dsgIfTunnelGrpToChannelEntry.setStatus('current')
dsgIfTunnelGrpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsgIfTunnelGrpIndex.setStatus('current')
dsgIfTunnelGrpChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: dsgIfTunnelGrpChannelIndex.setStatus('current')
dsgIfTunnelGrpDsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3, 1, 1, 3), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelGrpDsIfIndex.setStatus('current')
dsgIfTunnelGrpRulePriority = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelGrpRulePriority.setStatus('current')
dsgIfTunnelGrpUcidList = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelGrpUcidList.setStatus('current')
dsgIfTunnelGrpVendorParamId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3, 1, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelGrpVendorParamId.setStatus('current')
dsgIfTunnelGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 3, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTunnelGrpRowStatus.setStatus('current')
dsgIfDownstreamTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 4, 1), )
if mibBuilder.loadTexts: dsgIfDownstreamTable.setStatus('current')
dsgIfDownstreamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dsgIfDownstreamEntry.setStatus('current')
dsgIfDownTimerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 4, 1, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsgIfDownTimerIndex.setStatus('current')
dsgIfDownVendorParamId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 4, 1, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsgIfDownVendorParamId.setStatus('current')
dsgIfDownChannelListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 4, 1, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsgIfDownChannelListIndex.setStatus('current')
dsgIfDownEnableDCD = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 4, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsgIfDownEnableDCD.setStatus('current')
dsgIfClientIdTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 1), )
if mibBuilder.loadTexts: dsgIfClientIdTable.setStatus('current')
dsgIfClientIdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 1, 1), ).setIndexNames((0, "DSG-IF-MIB", "dsgIfClientIdListIndex"), (0, "DSG-IF-MIB", "dsgIfClientIdIndex"))
if mibBuilder.loadTexts: dsgIfClientIdEntry.setStatus('current')
dsgIfClientIdListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsgIfClientIdListIndex.setStatus('current')
dsgIfClientIdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: dsgIfClientIdIndex.setStatus('current')
dsgIfClientIdType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("broadcast", 1), ("macAddress", 2), ("caSystemId", 3), ("applicationId", 4))).clone('broadcast')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClientIdType.setStatus('current')
dsgIfClientIdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6).clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClientIdValue.setStatus('current')
dsgIfClientVendorParamId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 1, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClientVendorParamId.setStatus('current')
dsgIfClientRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfClientRowStatus.setStatus('current')
dsgIfVendorParamTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 2), )
if mibBuilder.loadTexts: dsgIfVendorParamTable.setStatus('current')
dsgIfVendorParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 2, 1), ).setIndexNames((0, "DSG-IF-MIB", "dsgIfVendorParamId"), (0, "DSG-IF-MIB", "dsgIfVendorIndex"))
if mibBuilder.loadTexts: dsgIfVendorParamEntry.setStatus('current')
dsgIfVendorParamId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsgIfVendorParamId.setStatus('current')
dsgIfVendorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: dsgIfVendorIndex.setStatus('current')
dsgIfVendorOUI = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3).clone(hexValue="000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfVendorOUI.setStatus('current')
dsgIfVendorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfVendorValue.setStatus('current')
dsgIfVendorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfVendorRowStatus.setStatus('current')
dsgIfChannelListTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 3), )
if mibBuilder.loadTexts: dsgIfChannelListTable.setStatus('current')
dsgIfChannelListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 3, 1), ).setIndexNames((0, "DSG-IF-MIB", "dsgIfChannelListIndex"), (0, "DSG-IF-MIB", "dsgIfChannelIndex"))
if mibBuilder.loadTexts: dsgIfChannelListEntry.setStatus('current')
dsgIfChannelListIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsgIfChannelListIndex.setStatus('current')
dsgIfChannelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: dsgIfChannelIndex.setStatus('current')
dsgIfChannelDsFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000000))).setUnits('hertz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfChannelDsFreq.setStatus('current')
dsgIfChannelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfChannelRowStatus.setStatus('current')
dsgIfTimerTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 4), )
if mibBuilder.loadTexts: dsgIfTimerTable.setStatus('current')
dsgIfTimerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 4, 1), ).setIndexNames((0, "DSG-IF-MIB", "dsgIfTimerIndex"))
if mibBuilder.loadTexts: dsgIfTimerEntry.setStatus('current')
dsgIfTimerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsgIfTimerIndex.setStatus('current')
dsgIfTimerTdsg1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(2)).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTimerTdsg1.setStatus('current')
dsgIfTimerTdsg2 = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(600)).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTimerTdsg2.setStatus('current')
dsgIfTimerTdsg3 = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(300)).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTimerTdsg3.setStatus('current')
dsgIfTimerTdsg4 = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1800)).setUnits('second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTimerTdsg4.setStatus('current')
dsgIfTimerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 1, 5, 4, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dsgIfTimerRowStatus.setStatus('current')
dsgIfConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 4))
dsgIfGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 4, 1))
dsgIfCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 4, 2))
dsgIfBasicCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 4, 2, 1)).setObjects(("DSG-IF-MIB", "dsgIfClassifierGroup"), ("DSG-IF-MIB", "dsgIfBaseGroup"), ("DSG-IF-MIB", "dsgIfDCDGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dsgIfBasicCompliance = dsgIfBasicCompliance.setStatus('current')
dsgIfClassifierGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 4, 1, 1)).setObjects(("DSG-IF-MIB", "dsgIfClassPriority"), ("DSG-IF-MIB", "dsgIfClassSrcIpAddrType"), ("DSG-IF-MIB", "dsgIfClassSrcIpAddr"), ("DSG-IF-MIB", "dsgIfClassSrcIpPrefixLength"), ("DSG-IF-MIB", "dsgIfClassDestIpAddressType"), ("DSG-IF-MIB", "dsgIfClassDestIpAddress"), ("DSG-IF-MIB", "dsgIfClassDestPortStart"), ("DSG-IF-MIB", "dsgIfClassDestPortEnd"), ("DSG-IF-MIB", "dsgIfClassRowStatus"), ("DSG-IF-MIB", "dsgIfClassIncludeInDCD"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dsgIfClassifierGroup = dsgIfClassifierGroup.setStatus('current')
dsgIfBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 4, 1, 2)).setObjects(("DSG-IF-MIB", "dsgIfTunnelGroupIndex"), ("DSG-IF-MIB", "dsgIfTunnelClientIdListIndex"), ("DSG-IF-MIB", "dsgIfTunnelMacAddress"), ("DSG-IF-MIB", "dsgIfTunnelServiceClassName"), ("DSG-IF-MIB", "dsgIfTunnelRowStatus"), ("DSG-IF-MIB", "dsgIfTunnelGrpDsIfIndex"), ("DSG-IF-MIB", "dsgIfTunnelGrpRulePriority"), ("DSG-IF-MIB", "dsgIfTunnelGrpUcidList"), ("DSG-IF-MIB", "dsgIfTunnelGrpVendorParamId"), ("DSG-IF-MIB", "dsgIfTunnelGrpRowStatus"), ("DSG-IF-MIB", "dsgIfDownTimerIndex"), ("DSG-IF-MIB", "dsgIfDownVendorParamId"), ("DSG-IF-MIB", "dsgIfDownChannelListIndex"), ("DSG-IF-MIB", "dsgIfDownEnableDCD"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dsgIfBaseGroup = dsgIfBaseGroup.setStatus('current')
dsgIfDCDGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 3, 4, 1, 3)).setObjects(("DSG-IF-MIB", "dsgIfClientIdType"), ("DSG-IF-MIB", "dsgIfClientIdValue"), ("DSG-IF-MIB", "dsgIfClientVendorParamId"), ("DSG-IF-MIB", "dsgIfClientRowStatus"), ("DSG-IF-MIB", "dsgIfVendorOUI"), ("DSG-IF-MIB", "dsgIfVendorValue"), ("DSG-IF-MIB", "dsgIfVendorRowStatus"), ("DSG-IF-MIB", "dsgIfChannelDsFreq"), ("DSG-IF-MIB", "dsgIfChannelRowStatus"), ("DSG-IF-MIB", "dsgIfTimerTdsg1"), ("DSG-IF-MIB", "dsgIfTimerTdsg2"), ("DSG-IF-MIB", "dsgIfTimerTdsg3"), ("DSG-IF-MIB", "dsgIfTimerTdsg4"), ("DSG-IF-MIB", "dsgIfTimerRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dsgIfDCDGroup = dsgIfDCDGroup.setStatus('current')
mibBuilder.exportSymbols("DSG-IF-MIB", dsgIfVendorOUI=dsgIfVendorOUI, dsgIfVendorParamTable=dsgIfVendorParamTable, dsgIfTunnelGrpChannelIndex=dsgIfTunnelGrpChannelIndex, PYSNMP_MODULE_ID=dsgIfMIB, dsgIfTimerEntry=dsgIfTimerEntry, dsgIfClientIdIndex=dsgIfClientIdIndex, dsgIfBaseGroup=dsgIfBaseGroup, dsgIfDownVendorParamId=dsgIfDownVendorParamId, dsgIfClientIdType=dsgIfClientIdType, dsgIfChannelRowStatus=dsgIfChannelRowStatus, dsgIfClassifierGroup=dsgIfClassifierGroup, dsgIfClassifierEntry=dsgIfClassifierEntry, dsgIfClassSrcIpAddr=dsgIfClassSrcIpAddr, dsgIfTimerIndex=dsgIfTimerIndex, dsgIfClientIdTable=dsgIfClientIdTable, dsgIfTimerTdsg4=dsgIfTimerTdsg4, dsgIfClassId=dsgIfClassId, dsgIfTunnelEntry=dsgIfTunnelEntry, dsgIfClassSrcIpPrefixLength=dsgIfClassSrcIpPrefixLength, dsgIfMIBNotifications=dsgIfMIBNotifications, dsgIfTimerTdsg2=dsgIfTimerTdsg2, dsgIfMIB=dsgIfMIB, dsgIfVendorRowStatus=dsgIfVendorRowStatus, dsgIfClassifier=dsgIfClassifier, dsgIfDownstreamEntry=dsgIfDownstreamEntry, dsgIfClientRowStatus=dsgIfClientRowStatus, dsgIfConformance=dsgIfConformance, dsgIfDownChannelListIndex=dsgIfDownChannelListIndex, dsgIfClassPriority=dsgIfClassPriority, dsgIfClassifierTable=dsgIfClassifierTable, dsgIfChannelListTable=dsgIfChannelListTable, dsgIfDCDGroup=dsgIfDCDGroup, dsgIfClassSrcIpAddrType=dsgIfClassSrcIpAddrType, dsgIfTunnelGrpToChannel=dsgIfTunnelGrpToChannel, dsgIfTunnelGrpRulePriority=dsgIfTunnelGrpRulePriority, dsgIfTunnelTable=dsgIfTunnelTable, dsgIfTunnelMacAddress=dsgIfTunnelMacAddress, dsgIfTunnelGrpDsIfIndex=dsgIfTunnelGrpDsIfIndex, dsgIfClassDestIpAddress=dsgIfClassDestIpAddress, dsgIfVendorParamEntry=dsgIfVendorParamEntry, dsgIfClassDestPortEnd=dsgIfClassDestPortEnd, dsgIfClientIdListIndex=dsgIfClientIdListIndex, dsgIfClassIncludeInDCD=dsgIfClassIncludeInDCD, dsgIfVendorIndex=dsgIfVendorIndex, dsgIfTunnelGroupIndex=dsgIfTunnelGroupIndex, dsgIfTunnel=dsgIfTunnel, dsgIfTunnelGrpIndex=dsgIfTunnelGrpIndex, dsgIfVendorParamId=dsgIfVendorParamId, dsgIfClassDestPortStart=dsgIfClassDestPortStart, dsgIfTunnelRowStatus=dsgIfTunnelRowStatus, dsgIfChannelListIndex=dsgIfChannelListIndex, dsgIfDownstreamTable=dsgIfDownstreamTable, dsgIfTunnelGrpUcidList=dsgIfTunnelGrpUcidList, dsgIfTunnelGrpVendorParamId=dsgIfTunnelGrpVendorParamId, dsgIfTunnelGrpRowStatus=dsgIfTunnelGrpRowStatus, dsgIfClientIdValue=dsgIfClientIdValue, dsgIfTunnelGrpToChannelTable=dsgIfTunnelGrpToChannelTable, dsgIfTimerTdsg3=dsgIfTimerTdsg3, dsgIfDCD=dsgIfDCD, dsgIfDownTimerIndex=dsgIfDownTimerIndex, dsgIfMIBObjects=dsgIfMIBObjects, dsgIfTimerTable=dsgIfTimerTable, dsgIfDownstreamChannel=dsgIfDownstreamChannel, dsgIfClientIdEntry=dsgIfClientIdEntry, dsgIfClassRowStatus=dsgIfClassRowStatus, dsgIfClientVendorParamId=dsgIfClientVendorParamId, dsgIfGroups=dsgIfGroups, dsgIfTimerRowStatus=dsgIfTimerRowStatus, dsgIfChannelDsFreq=dsgIfChannelDsFreq, dsgIfBasicCompliance=dsgIfBasicCompliance, dsgIfTunnelIndex=dsgIfTunnelIndex, dsgIfTunnelGrpToChannelEntry=dsgIfTunnelGrpToChannelEntry, dsgIfTunnelServiceClassName=dsgIfTunnelServiceClassName, dsgIfDownEnableDCD=dsgIfDownEnableDCD, dsgIfTunnelClientIdListIndex=dsgIfTunnelClientIdListIndex, dsgIfVendorValue=dsgIfVendorValue, dsgIfCompliances=dsgIfCompliances, dsgIfTimerTdsg1=dsgIfTimerTdsg1, dsgIfMIBConformance=dsgIfMIBConformance, dsgIfClassDestIpAddressType=dsgIfClassDestIpAddressType, dsgIfChannelIndex=dsgIfChannelIndex, dsgIfChannelListEntry=dsgIfChannelListEntry)
