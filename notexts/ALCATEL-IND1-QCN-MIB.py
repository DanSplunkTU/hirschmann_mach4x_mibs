#
# PySNMP MIB module ALCATEL-IND1-QCN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-QCN-MIB
# Produced by pysmi-1.1.8 at Tue Jan 11 21:37:03 2022
# On host fv-az121-779 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
softentIND1QcnMib, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1QcnMib")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, MibIdentifier, NotificationType, Counter32, IpAddress, ObjectIdentity, Bits, ModuleIdentity, Gauge32, Integer32, TimeTicks, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "MibIdentifier", "NotificationType", "Counter32", "IpAddress", "ObjectIdentity", "Bits", "ModuleIdentity", "Gauge32", "Integer32", "TimeTicks", "Counter64")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
alcatelIND1QcnMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1))
alcatelIND1QcnMIB.setRevisions(('2011-09-01 00:00',))
if mibBuilder.loadTexts: alcatelIND1QcnMIB.setLastUpdated('201109010000Z')
if mibBuilder.loadTexts: alcatelIND1QcnMIB.setOrganization('Alcatel-Lucent')
alcatelIND1QcnMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 1))
if mibBuilder.loadTexts: alcatelIND1QcnMIBObjects.setStatus('current')
alcatelIND1QcnMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 2))
if mibBuilder.loadTexts: alcatelIND1QcnMIBConformance.setStatus('current')
alcatelIND1QcnMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1QcnMIBGroups.setStatus('current')
alcatelIND1QcnMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1QcnMIBCompliances.setStatus('current')
alaQcnConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 1, 1))
alaQcnConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 1, 2))
alaQcnGlobalTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 1, 1, 1), )
if mibBuilder.loadTexts: alaQcnGlobalTable.setStatus('current')
alaQcnGlobalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-QCN-MIB", "alaQcnGlobalCompId"))
if mibBuilder.loadTexts: alaQcnGlobalEntry.setStatus('current')
alaQcnGlobalCompId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: alaQcnGlobalCompId.setStatus('current')
alaQcnGlobalCNMVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQcnGlobalCNMVlanTag.setStatus('current')
alaQcnGlobalCID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQcnGlobalCID.setStatus('current')
alaQcnPortInstanceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 1, 1, 2), )
if mibBuilder.loadTexts: alaQcnPortInstanceTable.setStatus('current')
alaQcnPortInstanceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-QCN-MIB", "alaQcnPIIfIndex"), (0, "ALCATEL-IND1-QCN-MIB", "alaQcnPIPriority"))
if mibBuilder.loadTexts: alaQcnPortInstanceEntry.setStatus('current')
alaQcnPIIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 1, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaQcnPIIfIndex.setStatus('current')
alaQcnPIPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 1, 1, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: alaQcnPIPriority.setStatus('current')
alaQcnPIPriorityReset = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 1, 1, 2, 1, 3), TruthValue().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("true", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQcnPIPriorityReset.setStatus('current')
alaQcnPICncpStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 1, 1, 2, 1, 4), TruthValue().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("true", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQcnPICncpStatsClear.setStatus('current')
alaQcnPICncpReset = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 1, 1, 2, 1, 5), TruthValue().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("true", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQcnPICncpReset.setStatus('current')
alcatelIND1QcnMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-QCN-MIB", "alaQcnGlobalGroup"), ("ALCATEL-IND1-QCN-MIB", "alaQcnPortInstanceGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1QcnMIBCompliance = alcatelIND1QcnMIBCompliance.setStatus('current')
alaQcnGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-QCN-MIB", "alaQcnGlobalCNMVlanTag"), ("ALCATEL-IND1-QCN-MIB", "alaQcnGlobalCID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQcnGlobalGroup = alaQcnGlobalGroup.setStatus('current')
alaQcnPortInstanceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 71, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-QCN-MIB", "alaQcnPIPriorityReset"), ("ALCATEL-IND1-QCN-MIB", "alaQcnPICncpStatsClear"), ("ALCATEL-IND1-QCN-MIB", "alaQcnPICncpReset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQcnPortInstanceGroup = alaQcnPortInstanceGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-QCN-MIB", alcatelIND1QcnMIBCompliances=alcatelIND1QcnMIBCompliances, alcatelIND1QcnMIBCompliance=alcatelIND1QcnMIBCompliance, alaQcnGlobalCNMVlanTag=alaQcnGlobalCNMVlanTag, alaQcnPortInstanceEntry=alaQcnPortInstanceEntry, alaQcnGlobalCompId=alaQcnGlobalCompId, alaQcnPICncpReset=alaQcnPICncpReset, alcatelIND1QcnMIB=alcatelIND1QcnMIB, alaQcnGlobalTable=alaQcnGlobalTable, PYSNMP_MODULE_ID=alcatelIND1QcnMIB, alaQcnPICncpStatsClear=alaQcnPICncpStatsClear, alaQcnPIIfIndex=alaQcnPIIfIndex, alaQcnConformance=alaQcnConformance, alaQcnConfig=alaQcnConfig, alaQcnGlobalCID=alaQcnGlobalCID, alaQcnPortInstanceTable=alaQcnPortInstanceTable, alcatelIND1QcnMIBConformance=alcatelIND1QcnMIBConformance, alaQcnPIPriorityReset=alaQcnPIPriorityReset, alcatelIND1QcnMIBGroups=alcatelIND1QcnMIBGroups, alaQcnPIPriority=alaQcnPIPriority, alaQcnPortInstanceGroup=alaQcnPortInstanceGroup, alaQcnGlobalGroup=alaQcnGlobalGroup, alcatelIND1QcnMIBObjects=alcatelIND1QcnMIBObjects, alaQcnGlobalEntry=alaQcnGlobalEntry)
