#
# PySNMP MIB module GBOND-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/GBOND-MIB
# Produced by pysmi-1.1.3 at Tue Nov 30 02:15:44 2021
# On host fv-az33-471 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
HCPerfIntervalThreshold, HCPerfCurrentCount, HCPerfTotalCount, HCPerfIntervalCount, HCPerfValidIntervals, HCPerfTimeElapsed, HCPerfInvalidIntervals = mibBuilder.importSymbols("HC-PerfHist-TC-MIB", "HCPerfIntervalThreshold", "HCPerfCurrentCount", "HCPerfTotalCount", "HCPerfIntervalCount", "HCPerfValidIntervals", "HCPerfTimeElapsed", "HCPerfInvalidIntervals")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Counter64, Integer32, Unsigned32, iso, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, IpAddress, ModuleIdentity, MibIdentifier, TimeTicks, ObjectIdentity, mib_2, NotificationType, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Integer32", "Unsigned32", "iso", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "IpAddress", "ModuleIdentity", "MibIdentifier", "TimeTicks", "ObjectIdentity", "mib-2", "NotificationType", "Bits")
TruthValue, DisplayString, TextualConvention, PhysAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "TextualConvention", "PhysAddress", "RowStatus")
gBondMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 211))
gBondMIB.setRevisions(('2012-03-12 00:00',))
if mibBuilder.loadTexts: gBondMIB.setLastUpdated('201203120000Z')
if mibBuilder.loadTexts: gBondMIB.setOrganization('IETF ADSL MIB Working Group')
gBondObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 211, 1))
gBondConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 211, 2))
gBondPort = MibIdentifier((1, 3, 6, 1, 2, 1, 211, 1, 1))
gBondBce = MibIdentifier((1, 3, 6, 1, 2, 1, 211, 1, 2))
class GBondSchemeList(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("none", 0), ("g9981", 1), ("g9982", 2), ("g9983", 3))

class GBondScheme(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("g9981", 1), ("g9982", 2), ("g9983", 3))

class GBondPm1DayIntervalThreshold(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 86400)

gBondPortNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 211, 1, 1, 0))
gBondLowUpRateCrossing = NotificationType((1, 3, 6, 1, 2, 1, 211, 1, 1, 0, 1)).setObjects(("GBOND-MIB", "gBondPortStatUpDataRate"), ("GBOND-MIB", "gBondPortConfThreshLowUpRate"))
if mibBuilder.loadTexts: gBondLowUpRateCrossing.setStatus('current')
gBondLowDnRateCrossing = NotificationType((1, 3, 6, 1, 2, 1, 211, 1, 1, 0, 2)).setObjects(("GBOND-MIB", "gBondPortStatDnDataRate"), ("GBOND-MIB", "gBondPortConfThreshLowDnRate"))
if mibBuilder.loadTexts: gBondLowDnRateCrossing.setStatus('current')
gBondPmTca15MinESCrossing = NotificationType((1, 3, 6, 1, 2, 1, 211, 1, 1, 0, 3)).setObjects(("GBOND-MIB", "gBondPortPmCur15MinES"), ("GBOND-MIB", "gBondPortPmTcaProfileThresh15MinES"))
if mibBuilder.loadTexts: gBondPmTca15MinESCrossing.setStatus('current')
gBondPmTca15MinSESCrossing = NotificationType((1, 3, 6, 1, 2, 1, 211, 1, 1, 0, 4)).setObjects(("GBOND-MIB", "gBondPortPmCur15MinSES"), ("GBOND-MIB", "gBondPortPmTcaProfileThresh15MinSES"))
if mibBuilder.loadTexts: gBondPmTca15MinSESCrossing.setStatus('current')
gBondPmTca15MinUASCrossing = NotificationType((1, 3, 6, 1, 2, 1, 211, 1, 1, 0, 5)).setObjects(("GBOND-MIB", "gBondPortPmCur15MinUAS"), ("GBOND-MIB", "gBondPortPmTcaProfileThresh15MinUAS"))
if mibBuilder.loadTexts: gBondPmTca15MinUASCrossing.setStatus('current')
gBondPmTca1DayESCrossing = NotificationType((1, 3, 6, 1, 2, 1, 211, 1, 1, 0, 6)).setObjects(("GBOND-MIB", "gBondPortPmCur1DayES"), ("GBOND-MIB", "gBondPortPmTcaProfileThresh1DayES"))
if mibBuilder.loadTexts: gBondPmTca1DayESCrossing.setStatus('current')
gBondPmTca1DaySESCrossing = NotificationType((1, 3, 6, 1, 2, 1, 211, 1, 1, 0, 7)).setObjects(("GBOND-MIB", "gBondPortPmCur1DaySES"), ("GBOND-MIB", "gBondPortPmTcaProfileThresh1DaySES"))
if mibBuilder.loadTexts: gBondPmTca1DaySESCrossing.setStatus('current')
gBondPmTca1DayUASCrossing = NotificationType((1, 3, 6, 1, 2, 1, 211, 1, 1, 0, 8)).setObjects(("GBOND-MIB", "gBondPortPmCur1DayUAS"), ("GBOND-MIB", "gBondPortPmTcaProfileThresh1DayUAS"))
if mibBuilder.loadTexts: gBondPmTca1DayUASCrossing.setStatus('current')
gBondPortConfTable = MibTable((1, 3, 6, 1, 2, 1, 211, 1, 1, 1), )
if mibBuilder.loadTexts: gBondPortConfTable.setStatus('current')
gBondPortConfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: gBondPortConfEntry.setStatus('current')
gBondPortConfAdminScheme = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 1, 1), GBondScheme()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondPortConfAdminScheme.setStatus('current')
gBondPortConfPeerAdminScheme = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 1, 2), GBondScheme()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondPortConfPeerAdminScheme.setStatus('current')
gBondPortConfDiscoveryCode = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 1, 3), PhysAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondPortConfDiscoveryCode.setStatus('current')
gBondPortConfTargetUpDataRate = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 10000000), ))).setUnits('Kbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondPortConfTargetUpDataRate.setStatus('current')
gBondPortConfTargetDnDataRate = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 10000000), ))).setUnits('Kbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondPortConfTargetDnDataRate.setStatus('current')
gBondPortConfThreshLowUpRate = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000000))).setUnits('Kbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondPortConfThreshLowUpRate.setStatus('current')
gBondPortConfThreshLowDnRate = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000000))).setUnits('Kbps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondPortConfThreshLowDnRate.setStatus('current')
gBondPortConfLowRateCrossingEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondPortConfLowRateCrossingEnable.setStatus('current')
gBondPortConfPmTcaConfProfile = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('DEFVAL')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondPortConfPmTcaConfProfile.setStatus('current')
gBondPortConfPmTcaEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 1, 1, 10), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondPortConfPmTcaEnable.setStatus('current')
gBondPortCapTable = MibTable((1, 3, 6, 1, 2, 1, 211, 1, 1, 2), )
if mibBuilder.loadTexts: gBondPortCapTable.setStatus('current')
gBondPortCapEntry = MibTableRow((1, 3, 6, 1, 2, 1, 211, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: gBondPortCapEntry.setStatus('current')
gBondPortCapSchemesSupported = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 2, 1, 1), GBondSchemeList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortCapSchemesSupported.setStatus('current')
gBondPortCapPeerSchemesSupported = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 2, 1, 2), GBondSchemeList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortCapPeerSchemesSupported.setStatus('current')
gBondPortCapCapacity = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortCapCapacity.setStatus('current')
gBondPortCapPeerCapacity = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 32), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortCapPeerCapacity.setStatus('current')
gBondPortStatTable = MibTable((1, 3, 6, 1, 2, 1, 211, 1, 1, 3), )
if mibBuilder.loadTexts: gBondPortStatTable.setStatus('current')
gBondPortStatEntry = MibTableRow((1, 3, 6, 1, 2, 1, 211, 1, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: gBondPortStatEntry.setStatus('current')
gBondPortStatOperScheme = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 3, 1, 1), GBondScheme()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortStatOperScheme.setStatus('current')
gBondPortStatPeerOperScheme = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 3, 1, 2), GBondScheme()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortStatPeerOperScheme.setStatus('current')
gBondPortStatUpDataRate = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 3, 1, 3), Gauge32()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortStatUpDataRate.setStatus('current')
gBondPortStatDnDataRate = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 3, 1, 4), Gauge32()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortStatDnDataRate.setStatus('current')
gBondPortStatFltStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 3, 1, 5), Bits().clone(namedValues=NamedValues(("noPeer", 0), ("peerPowerLoss", 1), ("peerBondSchemeMismatch", 2), ("bceSubTypeMismatch", 3), ("lowRate", 4), ("init", 5), ("ready", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortStatFltStatus.setStatus('current')
gBondPortStatSide = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("subscriber", 1), ("office", 2), ("unknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortStatSide.setStatus('current')
gBondPortStatNumBCEs = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortStatNumBCEs.setStatus('current')
gBondPortPM = MibIdentifier((1, 3, 6, 1, 2, 1, 211, 1, 1, 4))
gBondPortPmCurTable = MibTable((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 1), )
if mibBuilder.loadTexts: gBondPortPmCurTable.setStatus('current')
gBondPortPmCurEntry = MibTableRow((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: gBondPortPmCurEntry.setStatus('current')
gBondPortPmCurES = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 1, 1, 1), HCPerfTotalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPmCurES.setStatus('current')
gBondPortPmCurSES = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 1, 1, 2), HCPerfTotalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPmCurSES.setStatus('current')
gBondPortPmCurUAS = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 1, 1, 3), HCPerfTotalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPmCurUAS.setStatus('current')
gBondPortPmCur15MinValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 1, 1, 4), HCPerfValidIntervals()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPmCur15MinValidIntervals.setStatus('current')
gBondPortPmCur15MinInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 1, 1, 5), HCPerfInvalidIntervals()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPmCur15MinInvalidIntervals.setStatus('current')
gBondPortPmCur15MinTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 1, 1, 6), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPmCur15MinTimeElapsed.setStatus('current')
gBondPortPmCur15MinES = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 1, 1, 7), HCPerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPmCur15MinES.setStatus('current')
gBondPortPmCur15MinSES = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 1, 1, 8), HCPerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPmCur15MinSES.setStatus('current')
gBondPortPmCur15MinUAS = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 1, 1, 9), HCPerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPmCur15MinUAS.setStatus('current')
gBondPortPmCur1DayValidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setUnits('days').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPmCur1DayValidIntervals.setStatus('current')
gBondPortPmCur1DayInvalidIntervals = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setUnits('days').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPmCur1DayInvalidIntervals.setStatus('current')
gBondPortPmCur1DayTimeElapsed = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 1, 1, 12), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPmCur1DayTimeElapsed.setStatus('current')
gBondPortPmCur1DayES = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 1, 1, 13), HCPerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPmCur1DayES.setStatus('current')
gBondPortPmCur1DaySES = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 1, 1, 14), HCPerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPmCur1DaySES.setStatus('current')
gBondPortPmCur1DayUAS = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 1, 1, 15), HCPerfCurrentCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPmCur1DayUAS.setStatus('current')
gBondPortPm15MinTable = MibTable((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 2), )
if mibBuilder.loadTexts: gBondPortPm15MinTable.setStatus('current')
gBondPortPm15MinEntry = MibTableRow((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "GBOND-MIB", "gBondPortPm15MinIntervalIndex"))
if mibBuilder.loadTexts: gBondPortPm15MinEntry.setStatus('current')
gBondPortPm15MinIntervalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: gBondPortPm15MinIntervalIndex.setStatus('current')
gBondPortPm15MinIntervalMoniTime = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 2, 1, 2), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPm15MinIntervalMoniTime.setStatus('current')
gBondPortPm15MinIntervalES = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 2, 1, 3), HCPerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPm15MinIntervalES.setStatus('current')
gBondPortPm15MinIntervalSES = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 2, 1, 4), HCPerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPm15MinIntervalSES.setStatus('current')
gBondPortPm15MinIntervalUAS = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 2, 1, 5), HCPerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPm15MinIntervalUAS.setStatus('current')
gBondPortPm15MinIntervalValid = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPm15MinIntervalValid.setStatus('current')
gBondPortPm1DayTable = MibTable((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 3), )
if mibBuilder.loadTexts: gBondPortPm1DayTable.setStatus('current')
gBondPortPm1DayEntry = MibTableRow((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "GBOND-MIB", "gBondPortPm1DayIntervalIndex"))
if mibBuilder.loadTexts: gBondPortPm1DayEntry.setStatus('current')
gBondPortPm1DayIntervalIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)))
if mibBuilder.loadTexts: gBondPortPm1DayIntervalIndex.setStatus('current')
gBondPortPm1DayIntervalMoniTime = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 3, 1, 2), HCPerfTimeElapsed()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPm1DayIntervalMoniTime.setStatus('current')
gBondPortPm1DayIntervalES = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 3, 1, 3), HCPerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPm1DayIntervalES.setStatus('current')
gBondPortPm1DayIntervalSES = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 3, 1, 4), HCPerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPm1DayIntervalSES.setStatus('current')
gBondPortPm1DayIntervalUAS = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 3, 1, 5), HCPerfIntervalCount()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPm1DayIntervalUAS.setStatus('current')
gBondPortPm1DayIntervalValid = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 3, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: gBondPortPm1DayIntervalValid.setStatus('current')
gBondPortPmTcaProfileTable = MibTable((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 4), )
if mibBuilder.loadTexts: gBondPortPmTcaProfileTable.setStatus('current')
gBondPortPmTcaProfileEntry = MibTableRow((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 4, 1), ).setIndexNames((0, "GBOND-MIB", "gBondPortPmTcaProfileName"))
if mibBuilder.loadTexts: gBondPortPmTcaProfileEntry.setStatus('current')
gBondPortPmTcaProfileName = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 4, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: gBondPortPmTcaProfileName.setStatus('current')
gBondPortPmTcaProfileThresh15MinES = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 4, 1, 2), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: gBondPortPmTcaProfileThresh15MinES.setStatus('current')
gBondPortPmTcaProfileThresh15MinSES = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 4, 1, 3), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: gBondPortPmTcaProfileThresh15MinSES.setStatus('current')
gBondPortPmTcaProfileThresh15MinUAS = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 4, 1, 4), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: gBondPortPmTcaProfileThresh15MinUAS.setStatus('current')
gBondPortPmTcaProfileThresh1DayES = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 4, 1, 5), GBondPm1DayIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: gBondPortPmTcaProfileThresh1DayES.setStatus('current')
gBondPortPmTcaProfileThresh1DaySES = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 4, 1, 6), GBondPm1DayIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: gBondPortPmTcaProfileThresh1DaySES.setStatus('current')
gBondPortPmTcaProfileThresh1DayUAS = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 4, 1, 7), GBondPm1DayIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: gBondPortPmTcaProfileThresh1DayUAS.setStatus('current')
gBondPortPmTcaProfileRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 1, 4, 4, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: gBondPortPmTcaProfileRowStatus.setStatus('current')
gBondBceConfTable = MibTable((1, 3, 6, 1, 2, 1, 211, 1, 2, 1), )
if mibBuilder.loadTexts: gBondBceConfTable.setStatus('current')
gBondBceConfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 211, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: gBondBceConfEntry.setStatus('current')
gBondBceConfRemoteDiscoveryCode = MibTableColumn((1, 3, 6, 1, 2, 1, 211, 1, 2, 1, 1, 1), PhysAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(6, 6), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: gBondBceConfRemoteDiscoveryCode.setStatus('current')
gBondGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 211, 2, 1))
gBondCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 211, 2, 2))
gBondBasicGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 211, 2, 1, 1)).setObjects(("GBOND-MIB", "gBondPortStatOperScheme"), ("GBOND-MIB", "gBondPortStatUpDataRate"), ("GBOND-MIB", "gBondPortStatDnDataRate"), ("GBOND-MIB", "gBondPortConfTargetUpDataRate"), ("GBOND-MIB", "gBondPortConfTargetDnDataRate"), ("GBOND-MIB", "gBondPortCapSchemesSupported"), ("GBOND-MIB", "gBondPortCapCapacity"), ("GBOND-MIB", "gBondPortStatNumBCEs"), ("GBOND-MIB", "gBondPortStatSide"), ("GBOND-MIB", "gBondPortStatFltStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gBondBasicGroup = gBondBasicGroup.setStatus('current')
gBondDiscoveryGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 211, 2, 1, 2)).setObjects(("GBOND-MIB", "gBondPortStatPeerOperScheme"), ("GBOND-MIB", "gBondPortCapPeerSchemesSupported"), ("GBOND-MIB", "gBondPortCapPeerCapacity"), ("GBOND-MIB", "gBondPortConfDiscoveryCode"), ("GBOND-MIB", "gBondBceConfRemoteDiscoveryCode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gBondDiscoveryGroup = gBondDiscoveryGroup.setStatus('current')
gBondMultiSchemeGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 211, 2, 1, 3)).setObjects(("GBOND-MIB", "gBondPortConfAdminScheme"), ("GBOND-MIB", "gBondPortConfPeerAdminScheme"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gBondMultiSchemeGroup = gBondMultiSchemeGroup.setStatus('current')
gBondTcaConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 211, 2, 1, 4)).setObjects(("GBOND-MIB", "gBondPortConfThreshLowUpRate"), ("GBOND-MIB", "gBondPortConfThreshLowDnRate"), ("GBOND-MIB", "gBondPortConfLowRateCrossingEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gBondTcaConfGroup = gBondTcaConfGroup.setStatus('current')
gBondTcaNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 211, 2, 1, 5)).setObjects(("GBOND-MIB", "gBondLowUpRateCrossing"), ("GBOND-MIB", "gBondLowDnRateCrossing"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gBondTcaNotificationGroup = gBondTcaNotificationGroup.setStatus('current')
gBondPmCurGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 211, 2, 1, 6)).setObjects(("GBOND-MIB", "gBondPortPmCurES"), ("GBOND-MIB", "gBondPortPmCurSES"), ("GBOND-MIB", "gBondPortPmCurUAS"), ("GBOND-MIB", "gBondPortPmCur15MinValidIntervals"), ("GBOND-MIB", "gBondPortPmCur15MinInvalidIntervals"), ("GBOND-MIB", "gBondPortPmCur15MinTimeElapsed"), ("GBOND-MIB", "gBondPortPmCur15MinES"), ("GBOND-MIB", "gBondPortPmCur15MinSES"), ("GBOND-MIB", "gBondPortPmCur15MinUAS"), ("GBOND-MIB", "gBondPortPmCur1DayValidIntervals"), ("GBOND-MIB", "gBondPortPmCur1DayInvalidIntervals"), ("GBOND-MIB", "gBondPortPmCur1DayTimeElapsed"), ("GBOND-MIB", "gBondPortPmCur1DayES"), ("GBOND-MIB", "gBondPortPmCur1DaySES"), ("GBOND-MIB", "gBondPortPmCur1DayUAS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gBondPmCurGroup = gBondPmCurGroup.setStatus('current')
gBondPm15MinGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 211, 2, 1, 7)).setObjects(("GBOND-MIB", "gBondPortPm15MinIntervalMoniTime"), ("GBOND-MIB", "gBondPortPm15MinIntervalES"), ("GBOND-MIB", "gBondPortPm15MinIntervalSES"), ("GBOND-MIB", "gBondPortPm15MinIntervalUAS"), ("GBOND-MIB", "gBondPortPm15MinIntervalValid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gBondPm15MinGroup = gBondPm15MinGroup.setStatus('current')
gBondPm1DayGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 211, 2, 1, 8)).setObjects(("GBOND-MIB", "gBondPortPm1DayIntervalMoniTime"), ("GBOND-MIB", "gBondPortPm1DayIntervalES"), ("GBOND-MIB", "gBondPortPm1DayIntervalSES"), ("GBOND-MIB", "gBondPortPm1DayIntervalUAS"), ("GBOND-MIB", "gBondPortPm1DayIntervalValid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gBondPm1DayGroup = gBondPm1DayGroup.setStatus('current')
gBondPmTcaConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 211, 2, 1, 9)).setObjects(("GBOND-MIB", "gBondPortConfPmTcaConfProfile"), ("GBOND-MIB", "gBondPortConfPmTcaEnable"), ("GBOND-MIB", "gBondPortPmTcaProfileThresh15MinES"), ("GBOND-MIB", "gBondPortPmTcaProfileThresh15MinSES"), ("GBOND-MIB", "gBondPortPmTcaProfileThresh15MinUAS"), ("GBOND-MIB", "gBondPortPmTcaProfileThresh1DayES"), ("GBOND-MIB", "gBondPortPmTcaProfileThresh1DaySES"), ("GBOND-MIB", "gBondPortPmTcaProfileThresh1DayUAS"), ("GBOND-MIB", "gBondPortPmTcaProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gBondPmTcaConfGroup = gBondPmTcaConfGroup.setStatus('current')
gBondPmTcaNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 211, 2, 1, 10)).setObjects(("GBOND-MIB", "gBondPmTca15MinESCrossing"), ("GBOND-MIB", "gBondPmTca15MinSESCrossing"), ("GBOND-MIB", "gBondPmTca15MinUASCrossing"), ("GBOND-MIB", "gBondPmTca1DayESCrossing"), ("GBOND-MIB", "gBondPmTca1DaySESCrossing"), ("GBOND-MIB", "gBondPmTca1DayUASCrossing"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gBondPmTcaNotificationGroup = gBondPmTcaNotificationGroup.setStatus('current')
gBondCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 211, 2, 2, 1)).setObjects(("GBOND-MIB", "gBondBasicGroup"), ("GBOND-MIB", "gBondTcaConfGroup"), ("GBOND-MIB", "gBondTcaNotificationGroup"), ("GBOND-MIB", "gBondDiscoveryGroup"), ("GBOND-MIB", "gBondMultiSchemeGroup"), ("GBOND-MIB", "gBondPmCurGroup"), ("GBOND-MIB", "gBondPm15MinGroup"), ("GBOND-MIB", "gBondPm1DayGroup"), ("GBOND-MIB", "gBondPmTcaConfGroup"), ("GBOND-MIB", "gBondPmTcaNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    gBondCompliance = gBondCompliance.setStatus('current')
mibBuilder.exportSymbols("GBOND-MIB", gBondPortPmCur1DayInvalidIntervals=gBondPortPmCur1DayInvalidIntervals, gBondPortPm1DayIntervalES=gBondPortPm1DayIntervalES, gBondPortCapCapacity=gBondPortCapCapacity, gBondPm15MinGroup=gBondPm15MinGroup, gBondPortPmCur1DaySES=gBondPortPmCur1DaySES, gBondPortPm15MinIntervalIndex=gBondPortPm15MinIntervalIndex, gBondMultiSchemeGroup=gBondMultiSchemeGroup, gBondPortPm1DayIntervalSES=gBondPortPm1DayIntervalSES, gBondPortPm1DayIntervalValid=gBondPortPm1DayIntervalValid, gBondPortStatOperScheme=gBondPortStatOperScheme, GBondSchemeList=GBondSchemeList, gBondPmTca15MinSESCrossing=gBondPmTca15MinSESCrossing, gBondPortPm1DayIntervalIndex=gBondPortPm1DayIntervalIndex, gBondPortPm1DayIntervalUAS=gBondPortPm1DayIntervalUAS, gBondPortPmCurEntry=gBondPortPmCurEntry, gBondPortPmTcaProfileEntry=gBondPortPmTcaProfileEntry, gBondPortPmTcaProfileName=gBondPortPmTcaProfileName, gBondTcaNotificationGroup=gBondTcaNotificationGroup, gBondPmTca1DaySESCrossing=gBondPmTca1DaySESCrossing, gBondPortStatDnDataRate=gBondPortStatDnDataRate, gBondPortPmCur15MinInvalidIntervals=gBondPortPmCur15MinInvalidIntervals, gBondLowUpRateCrossing=gBondLowUpRateCrossing, gBondCompliance=gBondCompliance, gBondPort=gBondPort, gBondPortCapPeerSchemesSupported=gBondPortCapPeerSchemesSupported, gBondLowDnRateCrossing=gBondLowDnRateCrossing, gBondPortPm15MinEntry=gBondPortPm15MinEntry, gBondPortStatPeerOperScheme=gBondPortStatPeerOperScheme, gBondBce=gBondBce, gBondPortPmCur15MinUAS=gBondPortPmCur15MinUAS, gBondPortPmTcaProfileThresh1DayES=gBondPortPmTcaProfileThresh1DayES, GBondScheme=GBondScheme, gBondPortPmCurUAS=gBondPortPmCurUAS, gBondPortPm1DayEntry=gBondPortPm1DayEntry, gBondPortPmCur1DayES=gBondPortPmCur1DayES, gBondPortConfEntry=gBondPortConfEntry, gBondPortPm15MinIntervalValid=gBondPortPm15MinIntervalValid, gBondPortPm1DayTable=gBondPortPm1DayTable, gBondPortPmTcaProfileThresh1DaySES=gBondPortPmTcaProfileThresh1DaySES, gBondPmTca15MinUASCrossing=gBondPmTca15MinUASCrossing, gBondPortNotifications=gBondPortNotifications, gBondPm1DayGroup=gBondPm1DayGroup, GBondPm1DayIntervalThreshold=GBondPm1DayIntervalThreshold, gBondPortPm15MinIntervalES=gBondPortPm15MinIntervalES, gBondPortPm1DayIntervalMoniTime=gBondPortPm1DayIntervalMoniTime, gBondPortPmTcaProfileThresh15MinES=gBondPortPmTcaProfileThresh15MinES, gBondPortPmTcaProfileThresh1DayUAS=gBondPortPmTcaProfileThresh1DayUAS, gBondPortPM=gBondPortPM, gBondPmTcaConfGroup=gBondPmTcaConfGroup, gBondObjects=gBondObjects, gBondBasicGroup=gBondBasicGroup, gBondPortPmCur15MinSES=gBondPortPmCur15MinSES, gBondMIB=gBondMIB, gBondPortPm15MinIntervalUAS=gBondPortPm15MinIntervalUAS, PYSNMP_MODULE_ID=gBondMIB, gBondPortConfPmTcaConfProfile=gBondPortConfPmTcaConfProfile, gBondPortCapEntry=gBondPortCapEntry, gBondPortConfLowRateCrossingEnable=gBondPortConfLowRateCrossingEnable, gBondPortCapSchemesSupported=gBondPortCapSchemesSupported, gBondPortConfTargetDnDataRate=gBondPortConfTargetDnDataRate, gBondGroups=gBondGroups, gBondPortPmCur15MinValidIntervals=gBondPortPmCur15MinValidIntervals, gBondPmTcaNotificationGroup=gBondPmTcaNotificationGroup, gBondPmTca15MinESCrossing=gBondPmTca15MinESCrossing, gBondPortStatSide=gBondPortStatSide, gBondPortPm15MinTable=gBondPortPm15MinTable, gBondCompliances=gBondCompliances, gBondPortConfPmTcaEnable=gBondPortConfPmTcaEnable, gBondPortPmTcaProfileThresh15MinSES=gBondPortPmTcaProfileThresh15MinSES, gBondTcaConfGroup=gBondTcaConfGroup, gBondPortStatNumBCEs=gBondPortStatNumBCEs, gBondPortConfThreshLowDnRate=gBondPortConfThreshLowDnRate, gBondBceConfTable=gBondBceConfTable, gBondPortStatTable=gBondPortStatTable, gBondBceConfRemoteDiscoveryCode=gBondBceConfRemoteDiscoveryCode, gBondPortConfDiscoveryCode=gBondPortConfDiscoveryCode, gBondPortConfTable=gBondPortConfTable, gBondPortPmCur15MinTimeElapsed=gBondPortPmCur15MinTimeElapsed, gBondPortStatEntry=gBondPortStatEntry, gBondPortPmCur1DayUAS=gBondPortPmCur1DayUAS, gBondDiscoveryGroup=gBondDiscoveryGroup, gBondPortPmCur1DayTimeElapsed=gBondPortPmCur1DayTimeElapsed, gBondPortPmCurTable=gBondPortPmCurTable, gBondPortPmTcaProfileTable=gBondPortPmTcaProfileTable, gBondConformance=gBondConformance, gBondPortConfThreshLowUpRate=gBondPortConfThreshLowUpRate, gBondPortPmCur15MinES=gBondPortPmCur15MinES, gBondPmCurGroup=gBondPmCurGroup, gBondPortPm15MinIntervalMoniTime=gBondPortPm15MinIntervalMoniTime, gBondPortPmTcaProfileThresh15MinUAS=gBondPortPmTcaProfileThresh15MinUAS, gBondPortPmTcaProfileRowStatus=gBondPortPmTcaProfileRowStatus, gBondPortCapPeerCapacity=gBondPortCapPeerCapacity, gBondPortStatUpDataRate=gBondPortStatUpDataRate, gBondPortPmCurES=gBondPortPmCurES, gBondPmTca1DayUASCrossing=gBondPmTca1DayUASCrossing, gBondPortCapTable=gBondPortCapTable, gBondPortPmCur1DayValidIntervals=gBondPortPmCur1DayValidIntervals, gBondPortPm15MinIntervalSES=gBondPortPm15MinIntervalSES, gBondPortConfTargetUpDataRate=gBondPortConfTargetUpDataRate, gBondBceConfEntry=gBondBceConfEntry, gBondPortPmCurSES=gBondPortPmCurSES, gBondPortConfAdminScheme=gBondPortConfAdminScheme, gBondPortStatFltStatus=gBondPortStatFltStatus, gBondPmTca1DayESCrossing=gBondPmTca1DayESCrossing, gBondPortConfPeerAdminScheme=gBondPortConfPeerAdminScheme)
