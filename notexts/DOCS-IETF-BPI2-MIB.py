#
# PySNMP MIB module DOCS-IETF-BPI2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/DOCS-IETF-BPI2-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 17:30:22 2022
# On host fv-az126-670 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Counter32, mib_2, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, MibIdentifier, Unsigned32, ObjectIdentity, Gauge32, iso, Integer32, NotificationType, Counter64, IpAddress, TimeTicks, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "mib-2", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "MibIdentifier", "Unsigned32", "ObjectIdentity", "Gauge32", "iso", "Integer32", "NotificationType", "Counter64", "IpAddress", "TimeTicks", "Bits")
MacAddress, StorageType, DisplayString, DateAndTime, TruthValue, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "StorageType", "DisplayString", "DateAndTime", "TruthValue", "RowStatus", "TextualConvention")
docsIetfBpi2MIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 9999))
docsIetfBpi2MIB.setRevisions(('2004-09-07 17:00',))
if mibBuilder.loadTexts: docsIetfBpi2MIB.setLastUpdated('200409071700Z')
if mibBuilder.loadTexts: docsIetfBpi2MIB.setOrganization('IETF IP over Cable Data Network (IPCDN) Working Group')
class DocsX509ASN1DEREncodedCertificate(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 4096)

class DocsSAId(TextualConvention, Integer32):
    reference = ' DOCSIS Baseline Privacy Plus Interface specification, Section 2.1.3 BPI+ Security Associations'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 16383)

class DocsSAIdOrZero(TextualConvention, Unsigned32):
    reference = ' DOCSIS Baseline Privacy Plus Interface specification, Section 2.1.3 BPI+ Security Associations'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 16383), )
class DocsBpkmSAType(TextualConvention, Integer32):
    reference = 'DOCSIS Baseline Privacy Plus Interface specification, Section 4.2.2.24'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("primary", 1), ("static", 2), ("dynamic", 3))

class DocsBpkmDataEncryptAlg(TextualConvention, Integer32):
    reference = 'DOCSIS Baseline Privacy Plus Interface Specification, Section 4.2.2.20.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("none", 0), ("des56CbcMode", 1), ("des40CbcMode", 2), ("t3Des128CbcMode", 3), ("aes128CbcMode", 4), ("aes256CbcMode", 5))

class DocsBpkmDataAuthentAlg(TextualConvention, Integer32):
    reference = 'DOCSIS Baseline Privacy Plus Interface Specification, Section 4.2.2.20.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("none", 0), ("hmacSha196", 1))

docsIetfBpi2MIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 9999, 1))
docsIetfBpi2CmObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 9999, 1, 1))
docsIetfBpi2CmBaseTable = MibTable((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1), )
if mibBuilder.loadTexts: docsIetfBpi2CmBaseTable.setStatus('current')
docsIetfBpi2CmBaseEntry = MibTableRow((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIetfBpi2CmBaseEntry.setStatus('current')
docsIetfBpi2CmPrivacyEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmPrivacyEnable.setStatus('current')
docsIetfBpi2CmPublicKey = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 524))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmPublicKey.setStatus('current')
docsIetfBpi2CmAuthState = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("start", 1), ("authWait", 2), ("authorized", 3), ("reauthWait", 4), ("authRejectWait", 5), ("silent", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmAuthState.setStatus('current')
docsIetfBpi2CmAuthKeySequenceNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmAuthKeySequenceNumber.setStatus('current')
docsIetfBpi2CmAuthExpiresOld = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmAuthExpiresOld.setStatus('current')
docsIetfBpi2CmAuthExpiresNew = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmAuthExpiresNew.setStatus('current')
docsIetfBpi2CmAuthReset = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIetfBpi2CmAuthReset.setStatus('current')
docsIetfBpi2CmAuthGraceTime = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6047999))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmAuthGraceTime.setStatus('current')
docsIetfBpi2CmTEKGraceTime = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 302399))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmTEKGraceTime.setStatus('current')
docsIetfBpi2CmAuthWaitTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmAuthWaitTimeout.setStatus('current')
docsIetfBpi2CmReauthWaitTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmReauthWaitTimeout.setStatus('current')
docsIetfBpi2CmOpWaitTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmOpWaitTimeout.setStatus('current')
docsIetfBpi2CmRekeyWaitTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmRekeyWaitTimeout.setStatus('current')
docsIetfBpi2CmAuthRejectWaitTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmAuthRejectWaitTimeout.setStatus('current')
docsIetfBpi2CmSAMapWaitTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmSAMapWaitTimeout.setStatus('current')
docsIetfBpi2CmSAMapMaxRetries = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setUnits('count').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmSAMapMaxRetries.setStatus('current')
docsIetfBpi2CmAuthentInfos = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmAuthentInfos.setStatus('current')
docsIetfBpi2CmAuthRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmAuthRequests.setStatus('current')
docsIetfBpi2CmAuthReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmAuthReplies.setStatus('current')
docsIetfBpi2CmAuthRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmAuthRejects.setStatus('current')
docsIetfBpi2CmAuthInvalids = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmAuthInvalids.setStatus('current')
docsIetfBpi2CmAuthRejectErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 8, 11))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("unauthorizedCm", 3), ("unauthorizedSaid", 4), ("permanentAuthorizationFailure", 8), ("timeOfDayNotAcquired", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmAuthRejectErrorCode.setStatus('current')
docsIetfBpi2CmAuthRejectErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 23), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmAuthRejectErrorString.setStatus('current')
docsIetfBpi2CmAuthInvalidErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("unauthorizedCm", 3), ("unsolicited", 5), ("invalidKeySequence", 6), ("keyRequestAuthenticationFailure", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmAuthInvalidErrorCode.setStatus('current')
docsIetfBpi2CmAuthInvalidErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 1, 1, 25), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmAuthInvalidErrorString.setStatus('current')
docsIetfBpi2CmTEKTable = MibTable((1, 3, 6, 1, 2, 1, 9999, 1, 1, 2), )
if mibBuilder.loadTexts: docsIetfBpi2CmTEKTable.setStatus('current')
docsIetfBpi2CmTEKEntry = MibTableRow((1, 3, 6, 1, 2, 1, 9999, 1, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmTEKSAId"))
if mibBuilder.loadTexts: docsIetfBpi2CmTEKEntry.setStatus('current')
docsIetfBpi2CmTEKSAId = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 2, 1, 1), DocsSAId())
if mibBuilder.loadTexts: docsIetfBpi2CmTEKSAId.setStatus('current')
docsIetfBpi2CmTEKSAType = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 2, 1, 2), DocsBpkmSAType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmTEKSAType.setStatus('current')
docsIetfBpi2CmTEKDataEncryptAlg = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 2, 1, 3), DocsBpkmDataEncryptAlg()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmTEKDataEncryptAlg.setStatus('current')
docsIetfBpi2CmTEKDataAuthentAlg = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 2, 1, 4), DocsBpkmDataAuthentAlg()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmTEKDataAuthentAlg.setStatus('current')
docsIetfBpi2CmTEKState = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("start", 1), ("opWait", 2), ("opReauthWait", 3), ("operational", 4), ("rekeyWait", 5), ("rekeyReauthWait", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmTEKState.setStatus('current')
docsIetfBpi2CmTEKKeySequenceNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmTEKKeySequenceNumber.setStatus('current')
docsIetfBpi2CmTEKExpiresOld = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 2, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmTEKExpiresOld.setStatus('current')
docsIetfBpi2CmTEKExpiresNew = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 2, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmTEKExpiresNew.setStatus('current')
docsIetfBpi2CmTEKKeyRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmTEKKeyRequests.setStatus('current')
docsIetfBpi2CmTEKKeyReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmTEKKeyReplies.setStatus('current')
docsIetfBpi2CmTEKKeyRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmTEKKeyRejects.setStatus('current')
docsIetfBpi2CmTEKInvalids = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmTEKInvalids.setStatus('current')
docsIetfBpi2CmTEKAuthPends = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmTEKAuthPends.setStatus('current')
docsIetfBpi2CmTEKKeyRejectErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("unauthorizedSaid", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmTEKKeyRejectErrorCode.setStatus('current')
docsIetfBpi2CmTEKKeyRejectErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 2, 1, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmTEKKeyRejectErrorString.setStatus('current')
docsIetfBpi2CmTEKInvalidErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 6))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("invalidKeySequence", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmTEKInvalidErrorCode.setStatus('current')
docsIetfBpi2CmTEKInvalidErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 2, 1, 17), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmTEKInvalidErrorString.setStatus('current')
docsIetfBpi2CmMulticastObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 9999, 1, 1, 3))
docsIetfBpi2CmIpMulticastMapTable = MibTable((1, 3, 6, 1, 2, 1, 9999, 1, 1, 3, 1), )
if mibBuilder.loadTexts: docsIetfBpi2CmIpMulticastMapTable.setStatus('current')
docsIetfBpi2CmIpMulticastMapEntry = MibTableRow((1, 3, 6, 1, 2, 1, 9999, 1, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmIpMulticastIndex"))
if mibBuilder.loadTexts: docsIetfBpi2CmIpMulticastMapEntry.setStatus('current')
docsIetfBpi2CmIpMulticastIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: docsIetfBpi2CmIpMulticastIndex.setStatus('current')
docsIetfBpi2CmIpMulticastAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 3, 1, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmIpMulticastAddressType.setStatus('current')
docsIetfBpi2CmIpMulticastAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 3, 1, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmIpMulticastAddress.setStatus('current')
docsIetfBpi2CmIpMulticastSAId = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 3, 1, 1, 4), DocsSAIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmIpMulticastSAId.setStatus('current')
docsIetfBpi2CmIpMulticastSAMapState = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("start", 1), ("mapWait", 2), ("mapped", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmIpMulticastSAMapState.setStatus('current')
docsIetfBpi2CmIpMulticastSAMapRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmIpMulticastSAMapRequests.setStatus('current')
docsIetfBpi2CmIpMulticastSAMapReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmIpMulticastSAMapReplies.setStatus('current')
docsIetfBpi2CmIpMulticastSAMapRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmIpMulticastSAMapRejects.setStatus('current')
docsIetfBpi2CmIpMulticastSAMapRejectErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("noAuthForRequestedDSFlow", 9), ("dsFlowNotMappedToSA", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmIpMulticastSAMapRejectErrorCode.setStatus('current')
docsIetfBpi2CmIpMulticastSAMapRejectErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 3, 1, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmIpMulticastSAMapRejectErrorString.setStatus('current')
docsIetfBpi2CmCertObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 9999, 1, 1, 4))
docsIetfBpi2CmDeviceCertTable = MibTable((1, 3, 6, 1, 2, 1, 9999, 1, 1, 4, 1), )
if mibBuilder.loadTexts: docsIetfBpi2CmDeviceCertTable.setStatus('current')
docsIetfBpi2CmDeviceCertEntry = MibTableRow((1, 3, 6, 1, 2, 1, 9999, 1, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIetfBpi2CmDeviceCertEntry.setStatus('current')
docsIetfBpi2CmDeviceCmCert = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 4, 1, 1, 1), DocsX509ASN1DEREncodedCertificate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIetfBpi2CmDeviceCmCert.setStatus('current')
docsIetfBpi2CmDeviceManufCert = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 4, 1, 1, 2), DocsX509ASN1DEREncodedCertificate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmDeviceManufCert.setStatus('current')
docsIetfBpi2CmCryptoSuiteTable = MibTable((1, 3, 6, 1, 2, 1, 9999, 1, 1, 5), )
if mibBuilder.loadTexts: docsIetfBpi2CmCryptoSuiteTable.setStatus('current')
docsIetfBpi2CmCryptoSuiteEntry = MibTableRow((1, 3, 6, 1, 2, 1, 9999, 1, 1, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmCryptoSuiteIndex"))
if mibBuilder.loadTexts: docsIetfBpi2CmCryptoSuiteEntry.setStatus('current')
docsIetfBpi2CmCryptoSuiteIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: docsIetfBpi2CmCryptoSuiteIndex.setStatus('current')
docsIetfBpi2CmCryptoSuiteDataEncryptAlg = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 5, 1, 2), DocsBpkmDataEncryptAlg()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmCryptoSuiteDataEncryptAlg.setStatus('current')
docsIetfBpi2CmCryptoSuiteDataAuthentAlg = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 1, 5, 1, 3), DocsBpkmDataAuthentAlg()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmCryptoSuiteDataAuthentAlg.setStatus('current')
docsIetfBpi2CmtsObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 9999, 1, 2))
docsIetfBpi2CmtsBaseTable = MibTable((1, 3, 6, 1, 2, 1, 9999, 1, 2, 1), )
if mibBuilder.loadTexts: docsIetfBpi2CmtsBaseTable.setStatus('current')
docsIetfBpi2CmtsBaseEntry = MibTableRow((1, 3, 6, 1, 2, 1, 9999, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIetfBpi2CmtsBaseEntry.setStatus('current')
docsIetfBpi2CmtsDefaultAuthLifetime = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6048000)).clone(604800)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIetfBpi2CmtsDefaultAuthLifetime.setStatus('current')
docsIetfBpi2CmtsDefaultTEKLifetime = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 604800)).clone(43200)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIetfBpi2CmtsDefaultTEKLifetime.setStatus('current')
docsIetfBpi2CmtsDefaultSelfSignedManufCertTrust = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trusted", 1), ("untrusted", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIetfBpi2CmtsDefaultSelfSignedManufCertTrust.setStatus('current')
docsIetfBpi2CmtsCheckCertValidityPeriods = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIetfBpi2CmtsCheckCertValidityPeriods.setStatus('current')
docsIetfBpi2CmtsAuthentInfos = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthentInfos.setStatus('current')
docsIetfBpi2CmtsAuthRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthRequests.setStatus('current')
docsIetfBpi2CmtsAuthReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthReplies.setStatus('current')
docsIetfBpi2CmtsAuthRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthRejects.setStatus('current')
docsIetfBpi2CmtsAuthInvalids = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthInvalids.setStatus('current')
docsIetfBpi2CmtsSAMapRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsSAMapRequests.setStatus('current')
docsIetfBpi2CmtsSAMapReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsSAMapReplies.setStatus('current')
docsIetfBpi2CmtsSAMapRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsSAMapRejects.setStatus('current')
docsIetfBpi2CmtsAuthTable = MibTable((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2), )
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthTable.setStatus('current')
docsIetfBpi2CmtsAuthEntry = MibTableRow((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthCmMacAddress"))
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthEntry.setStatus('current')
docsIetfBpi2CmtsAuthCmMacAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthCmMacAddress.setStatus('current')
docsIetfBpi2CmtsAuthCmBpiVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bpi", 0), ("bpiPlus", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthCmBpiVersion.setStatus('current')
docsIetfBpi2CmtsAuthCmPublicKey = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 524))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthCmPublicKey.setStatus('current')
docsIetfBpi2CmtsAuthCmKeySequenceNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthCmKeySequenceNumber.setStatus('current')
docsIetfBpi2CmtsAuthCmExpiresOld = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthCmExpiresOld.setStatus('current')
docsIetfBpi2CmtsAuthCmExpiresNew = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthCmExpiresNew.setStatus('current')
docsIetfBpi2CmtsAuthCmLifetime = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6048000))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthCmLifetime.setStatus('current')
docsIetfBpi2CmtsAuthCmReset = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noResetRequested", 1), ("invalidateAuth", 2), ("sendAuthInvalid", 3), ("invalidateTeks", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthCmReset.setStatus('current')
docsIetfBpi2CmtsAuthCmInfos = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthCmInfos.setStatus('current')
docsIetfBpi2CmtsAuthCmRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthCmRequests.setStatus('current')
docsIetfBpi2CmtsAuthCmReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthCmReplies.setStatus('current')
docsIetfBpi2CmtsAuthCmRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthCmRejects.setStatus('current')
docsIetfBpi2CmtsAuthCmInvalids = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthCmInvalids.setStatus('current')
docsIetfBpi2CmtsAuthRejectErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 8, 11))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("unauthorizedCm", 3), ("unauthorizedSaid", 4), ("permanentAuthorizationFailure", 8), ("timeOfDayNotAcquired", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthRejectErrorCode.setStatus('current')
docsIetfBpi2CmtsAuthRejectErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthRejectErrorString.setStatus('current')
docsIetfBpi2CmtsAuthInvalidErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 6, 7))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("unauthorizedCm", 3), ("unsolicited", 5), ("invalidKeySequence", 6), ("keyRequestAuthenticationFailure", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthInvalidErrorCode.setStatus('current')
docsIetfBpi2CmtsAuthInvalidErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 17), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthInvalidErrorString.setStatus('current')
docsIetfBpi2CmtsAuthPrimarySAId = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 18), DocsSAIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthPrimarySAId.setStatus('current')
docsIetfBpi2CmtsAuthBpkmCmCertValid = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("unknown", 0), ("validCmChained", 1), ("validCmTrusted", 2), ("invalidCmUntrusted", 3), ("invalidCAUntrusted", 4), ("invalidCmOther", 5), ("invalidCAOther", 6), ("invalidCmRevoked", 7), ("invalidCARevoked", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthBpkmCmCertValid.setStatus('current')
docsIetfBpi2CmtsAuthBpkmCmCert = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 20), DocsX509ASN1DEREncodedCertificate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthBpkmCmCert.setStatus('current')
docsIetfBpi2CmtsAuthCACertIndexPtr = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 2, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsAuthCACertIndexPtr.setStatus('current')
docsIetfBpi2CmtsTEKTable = MibTable((1, 3, 6, 1, 2, 1, 9999, 1, 2, 3), )
if mibBuilder.loadTexts: docsIetfBpi2CmtsTEKTable.setStatus('current')
docsIetfBpi2CmtsTEKEntry = MibTableRow((1, 3, 6, 1, 2, 1, 9999, 1, 2, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsTEKSAId"))
if mibBuilder.loadTexts: docsIetfBpi2CmtsTEKEntry.setStatus('current')
docsIetfBpi2CmtsTEKSAId = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 3, 1, 1), DocsSAId())
if mibBuilder.loadTexts: docsIetfBpi2CmtsTEKSAId.setStatus('current')
docsIetfBpi2CmtsTEKSAType = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 3, 1, 2), DocsBpkmSAType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsTEKSAType.setStatus('current')
docsIetfBpi2CmtsTEKDataEncryptAlg = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 3, 1, 3), DocsBpkmDataEncryptAlg()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsTEKDataEncryptAlg.setStatus('current')
docsIetfBpi2CmtsTEKDataAuthentAlg = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 3, 1, 4), DocsBpkmDataAuthentAlg()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsTEKDataAuthentAlg.setStatus('current')
docsIetfBpi2CmtsTEKLifetime = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 604800))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIetfBpi2CmtsTEKLifetime.setStatus('current')
docsIetfBpi2CmtsTEKKeySequenceNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsTEKKeySequenceNumber.setStatus('current')
docsIetfBpi2CmtsTEKExpiresOld = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 3, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsTEKExpiresOld.setStatus('current')
docsIetfBpi2CmtsTEKExpiresNew = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 3, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsTEKExpiresNew.setStatus('current')
docsIetfBpi2CmtsTEKReset = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 3, 1, 9), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIetfBpi2CmtsTEKReset.setStatus('current')
docsIetfBpi2CmtsKeyRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsKeyRequests.setStatus('current')
docsIetfBpi2CmtsKeyReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsKeyReplies.setStatus('current')
docsIetfBpi2CmtsKeyRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsKeyRejects.setStatus('current')
docsIetfBpi2CmtsTEKInvalids = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsTEKInvalids.setStatus('current')
docsIetfBpi2CmtsKeyRejectErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("unauthorizedSaid", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsKeyRejectErrorCode.setStatus('current')
docsIetfBpi2CmtsKeyRejectErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 3, 1, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsKeyRejectErrorString.setStatus('current')
docsIetfBpi2CmtsTEKInvalidErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 6))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("invalidKeySequence", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsTEKInvalidErrorCode.setStatus('current')
docsIetfBpi2CmtsTEKInvalidErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 3, 1, 17), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsTEKInvalidErrorString.setStatus('current')
docsIetfBpi2CmtsMulticastObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4))
docsIetfBpi2CmtsIpMulticastMapTable = MibTable((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 1), )
if mibBuilder.loadTexts: docsIetfBpi2CmtsIpMulticastMapTable.setStatus('current')
docsIetfBpi2CmtsIpMulticastMapEntry = MibTableRow((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsIpMulticastIndex"))
if mibBuilder.loadTexts: docsIetfBpi2CmtsIpMulticastMapEntry.setStatus('current')
docsIetfBpi2CmtsIpMulticastIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: docsIetfBpi2CmtsIpMulticastIndex.setStatus('current')
docsIetfBpi2CmtsIpMulticastAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 1, 1, 2), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIetfBpi2CmtsIpMulticastAddressType.setStatus('current')
docsIetfBpi2CmtsIpMulticastAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 1, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIetfBpi2CmtsIpMulticastAddress.setStatus('current')
docsIetfBpi2CmtsIpMulticastMask = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 1, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIetfBpi2CmtsIpMulticastMask.setStatus('current')
docsIetfBpi2CmtsIpMulticastSAId = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 1, 1, 5), DocsSAIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIetfBpi2CmtsIpMulticastSAId.setStatus('current')
docsIetfBpi2CmtsIpMulticastSAType = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 1, 1, 6), DocsBpkmSAType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIetfBpi2CmtsIpMulticastSAType.setStatus('current')
docsIetfBpi2CmtsIpMulticastDataEncryptAlg = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 1, 1, 7), DocsBpkmDataEncryptAlg().clone('des56CbcMode')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIetfBpi2CmtsIpMulticastDataEncryptAlg.setStatus('current')
docsIetfBpi2CmtsIpMulticastDataAuthentAlg = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 1, 1, 8), DocsBpkmDataAuthentAlg().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIetfBpi2CmtsIpMulticastDataAuthentAlg.setStatus('current')
docsIetfBpi2CmtsIpMulticastSAMapRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsIpMulticastSAMapRequests.setStatus('current')
docsIetfBpi2CmtsIpMulticastSAMapReplies = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsIpMulticastSAMapReplies.setStatus('current')
docsIetfBpi2CmtsIpMulticastSAMapRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsIpMulticastSAMapRejects.setStatus('current')
docsIetfBpi2CmtsIpMulticastSAMapRejectErrorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("unknown", 2), ("noAuthForRequestedDSFlow", 9), ("dsFlowNotMappedToSA", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsIpMulticastSAMapRejectErrorCode.setStatus('current')
docsIetfBpi2CmtsIpMulticastSAMapRejectErrorString = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 1, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsIpMulticastSAMapRejectErrorString.setStatus('current')
docsIetfBpi2CmtsIpMulticastMapControl = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 1, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIetfBpi2CmtsIpMulticastMapControl.setStatus('current')
docsIetfBpi2CmtsIpMulticastMapStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 1, 1, 15), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsIpMulticastMapStorageType.setStatus('current')
docsIetfBpi2CmtsMulticastAuthTable = MibTable((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 2), )
if mibBuilder.loadTexts: docsIetfBpi2CmtsMulticastAuthTable.setStatus('current')
docsIetfBpi2CmtsMulticastAuthEntry = MibTableRow((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsMulticastAuthSAId"), (0, "DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsMulticastAuthCmMacAddress"))
if mibBuilder.loadTexts: docsIetfBpi2CmtsMulticastAuthEntry.setStatus('current')
docsIetfBpi2CmtsMulticastAuthSAId = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 2, 1, 1), DocsSAId())
if mibBuilder.loadTexts: docsIetfBpi2CmtsMulticastAuthSAId.setStatus('current')
docsIetfBpi2CmtsMulticastAuthCmMacAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 2, 1, 2), MacAddress())
if mibBuilder.loadTexts: docsIetfBpi2CmtsMulticastAuthCmMacAddress.setStatus('current')
docsIetfBpi2CmtsMulticastAuthControl = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 4, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIetfBpi2CmtsMulticastAuthControl.setStatus('current')
docsIetfBpi2CmtsCertObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 9999, 1, 2, 5))
docsIetfBpi2CmtsProvisionedCmCertTable = MibTable((1, 3, 6, 1, 2, 1, 9999, 1, 2, 5, 1), )
if mibBuilder.loadTexts: docsIetfBpi2CmtsProvisionedCmCertTable.setStatus('current')
docsIetfBpi2CmtsProvisionedCmCertEntry = MibTableRow((1, 3, 6, 1, 2, 1, 9999, 1, 2, 5, 1, 1), ).setIndexNames((0, "DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsProvisionedCmCertMacAddress"))
if mibBuilder.loadTexts: docsIetfBpi2CmtsProvisionedCmCertEntry.setStatus('current')
docsIetfBpi2CmtsProvisionedCmCertMacAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 5, 1, 1, 1), MacAddress())
if mibBuilder.loadTexts: docsIetfBpi2CmtsProvisionedCmCertMacAddress.setStatus('current')
docsIetfBpi2CmtsProvisionedCmCertTrust = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trusted", 1), ("untrusted", 2))).clone('untrusted')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIetfBpi2CmtsProvisionedCmCertTrust.setStatus('current')
docsIetfBpi2CmtsProvisionedCmCertSource = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("snmp", 1), ("configurationFile", 2), ("externalDatabase", 3), ("other", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsProvisionedCmCertSource.setStatus('current')
docsIetfBpi2CmtsProvisionedCmCertStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 5, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIetfBpi2CmtsProvisionedCmCertStatus.setStatus('current')
docsIetfBpi2CmtsProvisionedCmCert = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 5, 1, 1, 5), DocsX509ASN1DEREncodedCertificate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIetfBpi2CmtsProvisionedCmCert.setStatus('current')
docsIetfBpi2CmtsCACertTable = MibTable((1, 3, 6, 1, 2, 1, 9999, 1, 2, 5, 2), )
if mibBuilder.loadTexts: docsIetfBpi2CmtsCACertTable.setStatus('current')
docsIetfBpi2CmtsCACertEntry = MibTableRow((1, 3, 6, 1, 2, 1, 9999, 1, 2, 5, 2, 1), ).setIndexNames((0, "DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsCACertIndex"))
if mibBuilder.loadTexts: docsIetfBpi2CmtsCACertEntry.setStatus('current')
docsIetfBpi2CmtsCACertIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 5, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: docsIetfBpi2CmtsCACertIndex.setStatus('current')
docsIetfBpi2CmtsCACertSubject = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 5, 2, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsCACertSubject.setStatus('current')
docsIetfBpi2CmtsCACertIssuer = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 5, 2, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsCACertIssuer.setStatus('current')
docsIetfBpi2CmtsCACertSerialNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 5, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsCACertSerialNumber.setStatus('current')
docsIetfBpi2CmtsCACertTrust = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 5, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("trusted", 1), ("untrusted", 2), ("chained", 3), ("root", 4))).clone('chained')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIetfBpi2CmtsCACertTrust.setStatus('current')
docsIetfBpi2CmtsCACertSource = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 5, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("snmp", 1), ("configurationFile", 2), ("externalDatabase", 3), ("other", 4), ("authentInfo", 5), ("compiledIntoCode", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsCACertSource.setStatus('current')
docsIetfBpi2CmtsCACertStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 5, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIetfBpi2CmtsCACertStatus.setStatus('current')
docsIetfBpi2CmtsCACert = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 5, 2, 1, 8), DocsX509ASN1DEREncodedCertificate()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIetfBpi2CmtsCACert.setStatus('current')
docsIetfBpi2CmtsCACertThumbprint = MibTableColumn((1, 3, 6, 1, 2, 1, 9999, 1, 2, 5, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(20, 20)).setFixedLength(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CmtsCACertThumbprint.setStatus('current')
docsIetfBpi2CodeDownloadControl = MibIdentifier((1, 3, 6, 1, 2, 1, 9999, 1, 4))
docsIetfBpi2CodeDownloadStatusCode = MibScalar((1, 3, 6, 1, 2, 1, 9999, 1, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("configFileCvcVerified", 1), ("configFileCvcRejected", 2), ("snmpCvcVerified", 3), ("snmpCvcRejected", 4), ("codeFileVerified", 5), ("codeFileRejected", 6), ("other", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CodeDownloadStatusCode.setStatus('current')
docsIetfBpi2CodeDownloadStatusString = MibScalar((1, 3, 6, 1, 2, 1, 9999, 1, 4, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CodeDownloadStatusString.setStatus('current')
docsIetfBpi2CodeMfgOrgName = MibScalar((1, 3, 6, 1, 2, 1, 9999, 1, 4, 3), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CodeMfgOrgName.setStatus('current')
docsIetfBpi2CodeMfgCodeAccessStart = MibScalar((1, 3, 6, 1, 2, 1, 9999, 1, 4, 4), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(11, 11)).setFixedLength(11)).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CodeMfgCodeAccessStart.setStatus('current')
docsIetfBpi2CodeMfgCvcAccessStart = MibScalar((1, 3, 6, 1, 2, 1, 9999, 1, 4, 5), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(11, 11)).setFixedLength(11)).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CodeMfgCvcAccessStart.setStatus('current')
docsIetfBpi2CodeCoSignerOrgName = MibScalar((1, 3, 6, 1, 2, 1, 9999, 1, 4, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CodeCoSignerOrgName.setStatus('current')
docsIetfBpi2CodeCoSignerCodeAccessStart = MibScalar((1, 3, 6, 1, 2, 1, 9999, 1, 4, 7), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(11, 11)).setFixedLength(11)).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CodeCoSignerCodeAccessStart.setStatus('current')
docsIetfBpi2CodeCoSignerCvcAccessStart = MibScalar((1, 3, 6, 1, 2, 1, 9999, 1, 4, 8), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(11, 11)).setFixedLength(11)).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIetfBpi2CodeCoSignerCvcAccessStart.setStatus('current')
docsIetfBpi2CodeCvcUpdate = MibScalar((1, 3, 6, 1, 2, 1, 9999, 1, 4, 9), DocsX509ASN1DEREncodedCertificate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIetfBpi2CodeCvcUpdate.setStatus('current')
docsIetfBpi2Notification = MibIdentifier((1, 3, 6, 1, 2, 1, 9999, 0))
docsIetfBpi2Conformance = MibIdentifier((1, 3, 6, 1, 2, 1, 9999, 2))
docsIetfBpi2Compliances = MibIdentifier((1, 3, 6, 1, 2, 1, 9999, 2, 1))
docsIetfBpi2Groups = MibIdentifier((1, 3, 6, 1, 2, 1, 9999, 2, 2))
docsIetfBpi2CmCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 9999, 2, 1, 1)).setObjects(("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmGroup"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CodeDownloadGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIetfBpi2CmCompliance = docsIetfBpi2CmCompliance.setStatus('current')
docsIetfBpi2CmtsCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 9999, 2, 1, 2)).setObjects(("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsGroup"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CodeDownloadGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIetfBpi2CmtsCompliance = docsIetfBpi2CmtsCompliance.setStatus('current')
docsIetfBpi2CmGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 9999, 2, 2, 1)).setObjects(("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmPrivacyEnable"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmPublicKey"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmAuthState"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmAuthKeySequenceNumber"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmAuthExpiresOld"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmAuthExpiresNew"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmAuthReset"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmAuthGraceTime"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmTEKGraceTime"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmAuthWaitTimeout"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmReauthWaitTimeout"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmOpWaitTimeout"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmRekeyWaitTimeout"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmAuthRejectWaitTimeout"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmSAMapWaitTimeout"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmSAMapMaxRetries"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmAuthentInfos"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmAuthRequests"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmAuthReplies"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmAuthRejects"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmAuthInvalids"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmAuthRejectErrorCode"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmAuthRejectErrorString"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmAuthInvalidErrorCode"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmAuthInvalidErrorString"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmTEKSAType"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmTEKDataEncryptAlg"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmTEKDataAuthentAlg"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmTEKState"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmTEKKeySequenceNumber"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmTEKExpiresOld"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmTEKExpiresNew"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmTEKKeyRequests"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmTEKKeyReplies"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmTEKKeyRejects"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmTEKInvalids"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmTEKAuthPends"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmTEKKeyRejectErrorCode"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmTEKKeyRejectErrorString"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmTEKInvalidErrorCode"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmTEKInvalidErrorString"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmIpMulticastAddressType"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmIpMulticastAddress"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmIpMulticastSAId"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmIpMulticastSAMapState"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmIpMulticastSAMapRequests"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmIpMulticastSAMapReplies"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmIpMulticastSAMapRejects"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmIpMulticastSAMapRejectErrorCode"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmIpMulticastSAMapRejectErrorString"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmDeviceCmCert"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmDeviceManufCert"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmCryptoSuiteDataEncryptAlg"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmCryptoSuiteDataAuthentAlg"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIetfBpi2CmGroup = docsIetfBpi2CmGroup.setStatus('current')
docsIetfBpi2CmtsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 9999, 2, 2, 2)).setObjects(("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsDefaultAuthLifetime"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsDefaultTEKLifetime"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsDefaultSelfSignedManufCertTrust"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsCheckCertValidityPeriods"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthentInfos"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthRequests"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthReplies"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthRejects"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthInvalids"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsSAMapRequests"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsSAMapReplies"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsSAMapRejects"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthCmBpiVersion"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthCmPublicKey"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthCmKeySequenceNumber"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthCmExpiresOld"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthCmExpiresNew"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthCmLifetime"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthCmReset"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthCmInfos"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthCmRequests"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthCmReplies"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthCmRejects"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthCmInvalids"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthRejectErrorCode"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthRejectErrorString"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthInvalidErrorCode"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthInvalidErrorString"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthPrimarySAId"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthBpkmCmCertValid"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthBpkmCmCert"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsAuthCACertIndexPtr"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsTEKSAType"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsTEKDataEncryptAlg"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsTEKDataAuthentAlg"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsTEKLifetime"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsTEKKeySequenceNumber"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsTEKExpiresOld"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsTEKExpiresNew"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsTEKReset"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsKeyRequests"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsKeyReplies"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsKeyRejects"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsTEKInvalids"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsKeyRejectErrorCode"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsKeyRejectErrorString"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsTEKInvalidErrorCode"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsTEKInvalidErrorString"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsIpMulticastAddressType"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsIpMulticastAddress"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsIpMulticastMask"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsIpMulticastSAId"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsIpMulticastSAType"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsIpMulticastDataEncryptAlg"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsIpMulticastDataAuthentAlg"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsIpMulticastSAMapRequests"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsIpMulticastSAMapReplies"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsIpMulticastSAMapRejects"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsIpMulticastSAMapRejectErrorCode"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsIpMulticastSAMapRejectErrorString"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsIpMulticastMapControl"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsIpMulticastMapStorageType"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsMulticastAuthControl"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsProvisionedCmCertTrust"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsProvisionedCmCertSource"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsProvisionedCmCertStatus"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsProvisionedCmCert"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsCACertSubject"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsCACertIssuer"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsCACertSerialNumber"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsCACertTrust"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsCACertSource"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsCACertStatus"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsCACert"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CmtsCACertThumbprint"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIetfBpi2CmtsGroup = docsIetfBpi2CmtsGroup.setStatus('current')
docsIetfBpi2CodeDownloadGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 9999, 2, 2, 3)).setObjects(("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CodeDownloadStatusCode"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CodeDownloadStatusString"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CodeMfgOrgName"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CodeMfgCodeAccessStart"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CodeMfgCvcAccessStart"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CodeCoSignerOrgName"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CodeCoSignerCodeAccessStart"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CodeCoSignerCvcAccessStart"), ("DOCS-IETF-BPI2-MIB", "docsIetfBpi2CodeCvcUpdate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIetfBpi2CodeDownloadGroup = docsIetfBpi2CodeDownloadGroup.setStatus('current')
mibBuilder.exportSymbols("DOCS-IETF-BPI2-MIB", docsIetfBpi2CmtsCACertThumbprint=docsIetfBpi2CmtsCACertThumbprint, docsIetfBpi2CmtsTEKReset=docsIetfBpi2CmtsTEKReset, docsIetfBpi2CmtsCACertSource=docsIetfBpi2CmtsCACertSource, docsIetfBpi2CmTEKExpiresNew=docsIetfBpi2CmTEKExpiresNew, docsIetfBpi2CmtsCompliance=docsIetfBpi2CmtsCompliance, docsIetfBpi2CmtsGroup=docsIetfBpi2CmtsGroup, docsIetfBpi2CmTEKInvalidErrorString=docsIetfBpi2CmTEKInvalidErrorString, docsIetfBpi2CmTEKState=docsIetfBpi2CmTEKState, docsIetfBpi2CmtsObjects=docsIetfBpi2CmtsObjects, docsIetfBpi2CmtsIpMulticastSAMapReplies=docsIetfBpi2CmtsIpMulticastSAMapReplies, docsIetfBpi2CmtsCACertEntry=docsIetfBpi2CmtsCACertEntry, docsIetfBpi2CodeCvcUpdate=docsIetfBpi2CodeCvcUpdate, docsIetfBpi2CmtsCACertTrust=docsIetfBpi2CmtsCACertTrust, docsIetfBpi2CmtsAuthCACertIndexPtr=docsIetfBpi2CmtsAuthCACertIndexPtr, docsIetfBpi2CmtsAuthInvalids=docsIetfBpi2CmtsAuthInvalids, docsIetfBpi2CmtsTEKExpiresOld=docsIetfBpi2CmtsTEKExpiresOld, docsIetfBpi2CmTEKGraceTime=docsIetfBpi2CmTEKGraceTime, docsIetfBpi2CmtsCACert=docsIetfBpi2CmtsCACert, docsIetfBpi2CmTEKSAType=docsIetfBpi2CmTEKSAType, docsIetfBpi2CmtsIpMulticastSAType=docsIetfBpi2CmtsIpMulticastSAType, docsIetfBpi2CmTEKKeyRejectErrorString=docsIetfBpi2CmTEKKeyRejectErrorString, docsIetfBpi2CmtsAuthRejectErrorCode=docsIetfBpi2CmtsAuthRejectErrorCode, docsIetfBpi2CmtsKeyRejectErrorCode=docsIetfBpi2CmtsKeyRejectErrorCode, docsIetfBpi2CmtsIpMulticastMapControl=docsIetfBpi2CmtsIpMulticastMapControl, docsIetfBpi2CmtsTEKDataAuthentAlg=docsIetfBpi2CmtsTEKDataAuthentAlg, docsIetfBpi2CmtsDefaultTEKLifetime=docsIetfBpi2CmtsDefaultTEKLifetime, docsIetfBpi2CmtsIpMulticastSAId=docsIetfBpi2CmtsIpMulticastSAId, docsIetfBpi2CmtsAuthCmExpiresNew=docsIetfBpi2CmtsAuthCmExpiresNew, docsIetfBpi2CmIpMulticastSAId=docsIetfBpi2CmIpMulticastSAId, docsIetfBpi2CmCompliance=docsIetfBpi2CmCompliance, docsIetfBpi2CmCertObjects=docsIetfBpi2CmCertObjects, docsIetfBpi2CmCryptoSuiteDataAuthentAlg=docsIetfBpi2CmCryptoSuiteDataAuthentAlg, docsIetfBpi2CmtsProvisionedCmCert=docsIetfBpi2CmtsProvisionedCmCert, docsIetfBpi2CmIpMulticastSAMapRejectErrorCode=docsIetfBpi2CmIpMulticastSAMapRejectErrorCode, docsIetfBpi2CodeCoSignerOrgName=docsIetfBpi2CodeCoSignerOrgName, docsIetfBpi2CmtsIpMulticastSAMapRejects=docsIetfBpi2CmtsIpMulticastSAMapRejects, docsIetfBpi2CmAuthExpiresNew=docsIetfBpi2CmAuthExpiresNew, docsIetfBpi2CmAuthReplies=docsIetfBpi2CmAuthReplies, docsIetfBpi2CmtsAuthCmBpiVersion=docsIetfBpi2CmtsAuthCmBpiVersion, docsIetfBpi2CmtsAuthCmRejects=docsIetfBpi2CmtsAuthCmRejects, docsIetfBpi2CmtsCACertSubject=docsIetfBpi2CmtsCACertSubject, docsIetfBpi2Groups=docsIetfBpi2Groups, docsIetfBpi2CmAuthState=docsIetfBpi2CmAuthState, docsIetfBpi2CmSAMapMaxRetries=docsIetfBpi2CmSAMapMaxRetries, docsIetfBpi2CmtsAuthEntry=docsIetfBpi2CmtsAuthEntry, docsIetfBpi2CmtsAuthCmInfos=docsIetfBpi2CmtsAuthCmInfos, docsIetfBpi2CmTEKInvalidErrorCode=docsIetfBpi2CmTEKInvalidErrorCode, docsIetfBpi2CmtsMulticastAuthEntry=docsIetfBpi2CmtsMulticastAuthEntry, docsIetfBpi2CmtsAuthentInfos=docsIetfBpi2CmtsAuthentInfos, DocsSAIdOrZero=DocsSAIdOrZero, docsIetfBpi2CmtsTEKEntry=docsIetfBpi2CmtsTEKEntry, docsIetfBpi2CmtsIpMulticastAddress=docsIetfBpi2CmtsIpMulticastAddress, docsIetfBpi2CmtsMulticastObjects=docsIetfBpi2CmtsMulticastObjects, docsIetfBpi2CodeCoSignerCodeAccessStart=docsIetfBpi2CodeCoSignerCodeAccessStart, docsIetfBpi2CmtsKeyReplies=docsIetfBpi2CmtsKeyReplies, docsIetfBpi2CmAuthReset=docsIetfBpi2CmAuthReset, docsIetfBpi2CmtsKeyRejectErrorString=docsIetfBpi2CmtsKeyRejectErrorString, docsIetfBpi2CmReauthWaitTimeout=docsIetfBpi2CmReauthWaitTimeout, docsIetfBpi2CmTEKInvalids=docsIetfBpi2CmTEKInvalids, docsIetfBpi2CmtsCACertStatus=docsIetfBpi2CmtsCACertStatus, PYSNMP_MODULE_ID=docsIetfBpi2MIB, docsIetfBpi2CmMulticastObjects=docsIetfBpi2CmMulticastObjects, docsIetfBpi2CmIpMulticastSAMapState=docsIetfBpi2CmIpMulticastSAMapState, docsIetfBpi2CmAuthInvalids=docsIetfBpi2CmAuthInvalids, docsIetfBpi2CmtsAuthCmInvalids=docsIetfBpi2CmtsAuthCmInvalids, docsIetfBpi2CmtsAuthBpkmCmCert=docsIetfBpi2CmtsAuthBpkmCmCert, docsIetfBpi2CmTEKKeyRejects=docsIetfBpi2CmTEKKeyRejects, docsIetfBpi2CmTEKEntry=docsIetfBpi2CmTEKEntry, docsIetfBpi2CmtsTEKLifetime=docsIetfBpi2CmtsTEKLifetime, docsIetfBpi2CmtsIpMulticastDataEncryptAlg=docsIetfBpi2CmtsIpMulticastDataEncryptAlg, docsIetfBpi2CmtsAuthCmKeySequenceNumber=docsIetfBpi2CmtsAuthCmKeySequenceNumber, docsIetfBpi2CmtsTEKSAType=docsIetfBpi2CmtsTEKSAType, docsIetfBpi2CmtsTEKExpiresNew=docsIetfBpi2CmtsTEKExpiresNew, docsIetfBpi2CmtsMulticastAuthControl=docsIetfBpi2CmtsMulticastAuthControl, docsIetfBpi2CmIpMulticastMapEntry=docsIetfBpi2CmIpMulticastMapEntry, docsIetfBpi2CodeDownloadControl=docsIetfBpi2CodeDownloadControl, docsIetfBpi2CmtsDefaultSelfSignedManufCertTrust=docsIetfBpi2CmtsDefaultSelfSignedManufCertTrust, docsIetfBpi2CmAuthRejectErrorCode=docsIetfBpi2CmAuthRejectErrorCode, docsIetfBpi2CmCryptoSuiteEntry=docsIetfBpi2CmCryptoSuiteEntry, docsIetfBpi2CmBaseTable=docsIetfBpi2CmBaseTable, docsIetfBpi2CmtsIpMulticastMapTable=docsIetfBpi2CmtsIpMulticastMapTable, DocsX509ASN1DEREncodedCertificate=DocsX509ASN1DEREncodedCertificate, docsIetfBpi2CmDeviceManufCert=docsIetfBpi2CmDeviceManufCert, docsIetfBpi2CmtsProvisionedCmCertTable=docsIetfBpi2CmtsProvisionedCmCertTable, DocsSAId=DocsSAId, docsIetfBpi2CmtsProvisionedCmCertMacAddress=docsIetfBpi2CmtsProvisionedCmCertMacAddress, docsIetfBpi2CmAuthRequests=docsIetfBpi2CmAuthRequests, docsIetfBpi2CmtsIpMulticastMapEntry=docsIetfBpi2CmtsIpMulticastMapEntry, docsIetfBpi2CmtsMulticastAuthSAId=docsIetfBpi2CmtsMulticastAuthSAId, docsIetfBpi2CmTEKAuthPends=docsIetfBpi2CmTEKAuthPends, docsIetfBpi2CmIpMulticastSAMapRejectErrorString=docsIetfBpi2CmIpMulticastSAMapRejectErrorString, docsIetfBpi2CmtsProvisionedCmCertSource=docsIetfBpi2CmtsProvisionedCmCertSource, docsIetfBpi2CmtsAuthRequests=docsIetfBpi2CmtsAuthRequests, docsIetfBpi2CmTEKTable=docsIetfBpi2CmTEKTable, docsIetfBpi2CmtsAuthCmReplies=docsIetfBpi2CmtsAuthCmReplies, docsIetfBpi2CmIpMulticastAddressType=docsIetfBpi2CmIpMulticastAddressType, docsIetfBpi2CmtsAuthCmMacAddress=docsIetfBpi2CmtsAuthCmMacAddress, docsIetfBpi2CmIpMulticastAddress=docsIetfBpi2CmIpMulticastAddress, docsIetfBpi2CmtsTEKKeySequenceNumber=docsIetfBpi2CmtsTEKKeySequenceNumber, docsIetfBpi2CmtsCACertSerialNumber=docsIetfBpi2CmtsCACertSerialNumber, docsIetfBpi2CmtsCACertIndex=docsIetfBpi2CmtsCACertIndex, docsIetfBpi2CodeDownloadStatusCode=docsIetfBpi2CodeDownloadStatusCode, docsIetfBpi2CodeCoSignerCvcAccessStart=docsIetfBpi2CodeCoSignerCvcAccessStart, docsIetfBpi2CmIpMulticastIndex=docsIetfBpi2CmIpMulticastIndex, docsIetfBpi2CmAuthExpiresOld=docsIetfBpi2CmAuthExpiresOld, DocsBpkmSAType=DocsBpkmSAType, docsIetfBpi2CmDeviceCertTable=docsIetfBpi2CmDeviceCertTable, docsIetfBpi2CmPublicKey=docsIetfBpi2CmPublicKey, docsIetfBpi2CmTEKKeyRequests=docsIetfBpi2CmTEKKeyRequests, docsIetfBpi2CmTEKSAId=docsIetfBpi2CmTEKSAId, docsIetfBpi2CmtsMulticastAuthCmMacAddress=docsIetfBpi2CmtsMulticastAuthCmMacAddress, docsIetfBpi2CodeMfgCodeAccessStart=docsIetfBpi2CodeMfgCodeAccessStart, docsIetfBpi2CmtsAuthTable=docsIetfBpi2CmtsAuthTable, docsIetfBpi2CmBaseEntry=docsIetfBpi2CmBaseEntry, docsIetfBpi2CmAuthInvalidErrorCode=docsIetfBpi2CmAuthInvalidErrorCode, docsIetfBpi2CmtsIpMulticastSAMapRejectErrorString=docsIetfBpi2CmtsIpMulticastSAMapRejectErrorString, docsIetfBpi2CmCryptoSuiteTable=docsIetfBpi2CmCryptoSuiteTable, docsIetfBpi2CmtsAuthReplies=docsIetfBpi2CmtsAuthReplies, docsIetfBpi2CmtsSAMapRequests=docsIetfBpi2CmtsSAMapRequests, docsIetfBpi2CmAuthRejectErrorString=docsIetfBpi2CmAuthRejectErrorString, docsIetfBpi2CmTEKKeyReplies=docsIetfBpi2CmTEKKeyReplies, docsIetfBpi2CmTEKDataEncryptAlg=docsIetfBpi2CmTEKDataEncryptAlg, docsIetfBpi2Notification=docsIetfBpi2Notification, docsIetfBpi2CmtsAuthCmRequests=docsIetfBpi2CmtsAuthCmRequests, docsIetfBpi2MIBObjects=docsIetfBpi2MIBObjects, docsIetfBpi2CmRekeyWaitTimeout=docsIetfBpi2CmRekeyWaitTimeout, docsIetfBpi2CmtsAuthInvalidErrorCode=docsIetfBpi2CmtsAuthInvalidErrorCode, docsIetfBpi2CmIpMulticastSAMapRejects=docsIetfBpi2CmIpMulticastSAMapRejects, docsIetfBpi2CmtsBaseTable=docsIetfBpi2CmtsBaseTable, docsIetfBpi2CmDeviceCmCert=docsIetfBpi2CmDeviceCmCert, docsIetfBpi2CmAuthRejects=docsIetfBpi2CmAuthRejects, docsIetfBpi2CmAuthKeySequenceNumber=docsIetfBpi2CmAuthKeySequenceNumber, docsIetfBpi2CmTEKDataAuthentAlg=docsIetfBpi2CmTEKDataAuthentAlg, docsIetfBpi2CmOpWaitTimeout=docsIetfBpi2CmOpWaitTimeout, docsIetfBpi2CmtsAuthCmExpiresOld=docsIetfBpi2CmtsAuthCmExpiresOld, docsIetfBpi2CmAuthWaitTimeout=docsIetfBpi2CmAuthWaitTimeout, docsIetfBpi2CmtsCheckCertValidityPeriods=docsIetfBpi2CmtsCheckCertValidityPeriods, docsIetfBpi2CmtsTEKTable=docsIetfBpi2CmtsTEKTable, docsIetfBpi2CmtsIpMulticastAddressType=docsIetfBpi2CmtsIpMulticastAddressType, docsIetfBpi2CodeMfgOrgName=docsIetfBpi2CodeMfgOrgName, docsIetfBpi2CmtsTEKInvalidErrorCode=docsIetfBpi2CmtsTEKInvalidErrorCode, docsIetfBpi2CmtsKeyRejects=docsIetfBpi2CmtsKeyRejects, docsIetfBpi2CmtsSAMapRejects=docsIetfBpi2CmtsSAMapRejects, docsIetfBpi2Compliances=docsIetfBpi2Compliances, docsIetfBpi2CmIpMulticastSAMapRequests=docsIetfBpi2CmIpMulticastSAMapRequests, docsIetfBpi2CmtsAuthBpkmCmCertValid=docsIetfBpi2CmtsAuthBpkmCmCertValid, docsIetfBpi2CmIpMulticastMapTable=docsIetfBpi2CmIpMulticastMapTable, docsIetfBpi2CmtsTEKInvalids=docsIetfBpi2CmtsTEKInvalids, docsIetfBpi2CmDeviceCertEntry=docsIetfBpi2CmDeviceCertEntry, docsIetfBpi2CmtsIpMulticastSAMapRejectErrorCode=docsIetfBpi2CmtsIpMulticastSAMapRejectErrorCode, docsIetfBpi2CmCryptoSuiteDataEncryptAlg=docsIetfBpi2CmCryptoSuiteDataEncryptAlg, docsIetfBpi2MIB=docsIetfBpi2MIB, docsIetfBpi2CmtsAuthCmReset=docsIetfBpi2CmtsAuthCmReset, docsIetfBpi2CmtsTEKInvalidErrorString=docsIetfBpi2CmtsTEKInvalidErrorString, docsIetfBpi2CmPrivacyEnable=docsIetfBpi2CmPrivacyEnable, docsIetfBpi2CmTEKKeyRejectErrorCode=docsIetfBpi2CmTEKKeyRejectErrorCode, docsIetfBpi2CmtsIpMulticastMask=docsIetfBpi2CmtsIpMulticastMask, docsIetfBpi2CmtsCertObjects=docsIetfBpi2CmtsCertObjects, docsIetfBpi2CmtsIpMulticastMapStorageType=docsIetfBpi2CmtsIpMulticastMapStorageType, docsIetfBpi2CmtsAuthInvalidErrorString=docsIetfBpi2CmtsAuthInvalidErrorString, docsIetfBpi2CmtsMulticastAuthTable=docsIetfBpi2CmtsMulticastAuthTable, docsIetfBpi2CmtsCACertTable=docsIetfBpi2CmtsCACertTable, docsIetfBpi2CmAuthGraceTime=docsIetfBpi2CmAuthGraceTime, docsIetfBpi2CmTEKExpiresOld=docsIetfBpi2CmTEKExpiresOld, docsIetfBpi2CmtsAuthPrimarySAId=docsIetfBpi2CmtsAuthPrimarySAId, docsIetfBpi2CodeMfgCvcAccessStart=docsIetfBpi2CodeMfgCvcAccessStart, docsIetfBpi2CmtsAuthCmPublicKey=docsIetfBpi2CmtsAuthCmPublicKey, docsIetfBpi2CmtsSAMapReplies=docsIetfBpi2CmtsSAMapReplies, docsIetfBpi2CmCryptoSuiteIndex=docsIetfBpi2CmCryptoSuiteIndex, docsIetfBpi2CmtsAuthRejectErrorString=docsIetfBpi2CmtsAuthRejectErrorString, docsIetfBpi2CmtsKeyRequests=docsIetfBpi2CmtsKeyRequests, docsIetfBpi2CmtsAuthRejects=docsIetfBpi2CmtsAuthRejects, docsIetfBpi2CmtsIpMulticastSAMapRequests=docsIetfBpi2CmtsIpMulticastSAMapRequests, DocsBpkmDataEncryptAlg=DocsBpkmDataEncryptAlg, docsIetfBpi2CmIpMulticastSAMapReplies=docsIetfBpi2CmIpMulticastSAMapReplies, docsIetfBpi2CodeDownloadStatusString=docsIetfBpi2CodeDownloadStatusString, docsIetfBpi2CmtsIpMulticastIndex=docsIetfBpi2CmtsIpMulticastIndex, docsIetfBpi2CmtsDefaultAuthLifetime=docsIetfBpi2CmtsDefaultAuthLifetime, docsIetfBpi2CmAuthentInfos=docsIetfBpi2CmAuthentInfos, docsIetfBpi2CmtsBaseEntry=docsIetfBpi2CmtsBaseEntry, docsIetfBpi2CmtsAuthCmLifetime=docsIetfBpi2CmtsAuthCmLifetime, docsIetfBpi2CmAuthRejectWaitTimeout=docsIetfBpi2CmAuthRejectWaitTimeout, docsIetfBpi2CmSAMapWaitTimeout=docsIetfBpi2CmSAMapWaitTimeout, docsIetfBpi2CmtsProvisionedCmCertTrust=docsIetfBpi2CmtsProvisionedCmCertTrust, DocsBpkmDataAuthentAlg=DocsBpkmDataAuthentAlg, docsIetfBpi2CmtsIpMulticastDataAuthentAlg=docsIetfBpi2CmtsIpMulticastDataAuthentAlg, docsIetfBpi2CmObjects=docsIetfBpi2CmObjects, docsIetfBpi2CmtsProvisionedCmCertEntry=docsIetfBpi2CmtsProvisionedCmCertEntry, docsIetfBpi2CmGroup=docsIetfBpi2CmGroup, docsIetfBpi2CmtsProvisionedCmCertStatus=docsIetfBpi2CmtsProvisionedCmCertStatus, docsIetfBpi2CodeDownloadGroup=docsIetfBpi2CodeDownloadGroup, docsIetfBpi2CmTEKKeySequenceNumber=docsIetfBpi2CmTEKKeySequenceNumber, docsIetfBpi2CmtsTEKDataEncryptAlg=docsIetfBpi2CmtsTEKDataEncryptAlg, docsIetfBpi2CmtsCACertIssuer=docsIetfBpi2CmtsCACertIssuer, docsIetfBpi2Conformance=docsIetfBpi2Conformance, docsIetfBpi2CmAuthInvalidErrorString=docsIetfBpi2CmAuthInvalidErrorString, docsIetfBpi2CmtsTEKSAId=docsIetfBpi2CmtsTEKSAId)
