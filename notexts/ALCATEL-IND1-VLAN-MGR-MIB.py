#
# PySNMP MIB module ALCATEL-IND1-VLAN-MGR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-VLAN-MGR-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 01:18:01 2022
# On host fv-az74-997 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
softentIND1VlanMgt, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1VlanMgt")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Integer32, iso, NotificationType, TimeTicks, MibIdentifier, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ModuleIdentity, IpAddress, Counter32, Gauge32, ObjectIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "iso", "NotificationType", "TimeTicks", "MibIdentifier", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ModuleIdentity", "IpAddress", "Counter32", "Gauge32", "ObjectIdentity", "Bits")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
alcatelIND1VLANMgrMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1))
alcatelIND1VLANMgrMIB.setRevisions(('2007-04-03 00:00',))
if mibBuilder.loadTexts: alcatelIND1VLANMgrMIB.setLastUpdated('200704030000Z')
if mibBuilder.loadTexts: alcatelIND1VLANMgrMIB.setOrganization('Alcatel-Lucent')
alcatelIND1VLANMgrMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1))
if mibBuilder.loadTexts: alcatelIND1VLANMgrMIBObjects.setStatus('current')
alcatelIND1VLANMgrMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 2))
if mibBuilder.loadTexts: alcatelIND1VLANMgrMIBConformance.setStatus('current')
alcatelIND1VLANMgrMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1VLANMgrMIBGroups.setStatus('current')
alcatelIND1VLANMgrMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1VLANMgrMIBCompliances.setStatus('current')
vlanMgrVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 1))
vlanTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 1, 1), )
if mibBuilder.loadTexts: vlanTable.setStatus('current')
vlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-VLAN-MGR-MIB", "vlanNumber"))
if mibBuilder.loadTexts: vlanEntry.setStatus('current')
vlanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: vlanNumber.setStatus('current')
vlanDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanDescription.setStatus('current')
vlanAdmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanAdmStatus.setStatus('current')
vlanOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanOperStatus.setStatus('current')
vlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 1, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanStatus.setStatus('current')
vlanRouterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("ipv4router", 1), ("ipv6router", 2), ("both", 3))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanRouterStatus.setStatus('current')
vlanSrcLearningStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanSrcLearningStatus.setStatus('current')
vlanType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("invalid", 0), ("service", 1), ("multicastEnt", 2), ("multicastService", 3), ("dynamic", 4), ("standard", 5), ("ipc", 6), ("vipVlan", 7), ("erpVlan", 8), ("mtpVlan", 9), ("unpDynamic", 10), ("dynamicRemote", 11), ("bvlan", 12), ("controlBvlan", 13), ("evbVlan", 14), ("vcmipc", 15), ("fcoeVlan", 16), ("openflowVlan", 17), ("routerVlan", 18), ("primaryVlan", 19), ("isolatedVlan", 20), ("communityVlan", 21), ("allVlan", 22), ("invalidVlan", 23))).clone('standard')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanType.setStatus('current')
vlanMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 10222)).clone(1500)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vlanMtu.setStatus('current')
vlanAfdCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanAfdCfg.setStatus('current')
vlanMgrVpa = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 2))
vpaTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 2, 1), )
if mibBuilder.loadTexts: vpaTable.setStatus('current')
vpaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 2, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-VLAN-MGR-MIB", "vpaVlanNumber"), (0, "ALCATEL-IND1-VLAN-MGR-MIB", "vpaIfIndex"))
if mibBuilder.loadTexts: vpaEntry.setStatus('current')
vpaVlanNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: vpaVlanNumber.setStatus('current')
vpaIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 2, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1001, 4294967295)))
if mibBuilder.loadTexts: vpaIfIndex.setStatus('current')
vpaType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("invalid", 0), ("cfgDefault", 1), ("qTagged", 2), ("dynamic", 3), ("vstkDoubleTag", 4), ("vstkTranslate", 5), ("forbidden", 6), ("mirrored", 7), ("bvpa", 8), ("unpUntagged", 9), ("unpTagged", 10), ("evbTagged", 11))).clone('cfgDefault')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vpaType.setStatus('current')
vpaState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("forwarding", 0), ("blocking", 1), ("inactive", 2), ("invalid", 3), ("dhlBlocking", 4))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: vpaState.setStatus('current')
vpaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vpaStatus.setStatus('current')
vlanMgrVlanSet = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 3))
vlanSetVlanCount = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSetVlanCount.setStatus('current')
vlanSetDynamicVlanCount = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSetDynamicVlanCount.setStatus('current')
vlanSetIpRouterCount = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSetIpRouterCount.setStatus('current')
vlanSetVstkVlanCount = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 1, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vlanSetVstkVlanCount.setStatus('current')
alcatelIND1VLANMgrMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-VLAN-MGR-MIB", "vlanMgrVlanGroup"), ("ALCATEL-IND1-VLAN-MGR-MIB", "vlanMgrVpaGroup"), ("ALCATEL-IND1-VLAN-MGR-MIB", "vlanMgrVlanSetGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1VLANMgrMIBCompliance = alcatelIND1VLANMgrMIBCompliance.setStatus('current')
vlanMgrVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-VLAN-MGR-MIB", "vlanDescription"), ("ALCATEL-IND1-VLAN-MGR-MIB", "vlanAdmStatus"), ("ALCATEL-IND1-VLAN-MGR-MIB", "vlanOperStatus"), ("ALCATEL-IND1-VLAN-MGR-MIB", "vlanStatus"), ("ALCATEL-IND1-VLAN-MGR-MIB", "vlanRouterStatus"), ("ALCATEL-IND1-VLAN-MGR-MIB", "vlanSrcLearningStatus"), ("ALCATEL-IND1-VLAN-MGR-MIB", "vlanType"), ("ALCATEL-IND1-VLAN-MGR-MIB", "vlanMtu"), ("ALCATEL-IND1-VLAN-MGR-MIB", "vlanAfdCfg"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vlanMgrVlanGroup = vlanMgrVlanGroup.setStatus('current')
vlanMgrVpaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-VLAN-MGR-MIB", "vpaType"), ("ALCATEL-IND1-VLAN-MGR-MIB", "vpaState"), ("ALCATEL-IND1-VLAN-MGR-MIB", "vpaStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vlanMgrVpaGroup = vlanMgrVpaGroup.setStatus('current')
vlanMgrVlanSetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 3, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-VLAN-MGR-MIB", "vlanSetVlanCount"), ("ALCATEL-IND1-VLAN-MGR-MIB", "vlanSetDynamicVlanCount"), ("ALCATEL-IND1-VLAN-MGR-MIB", "vlanSetIpRouterCount"), ("ALCATEL-IND1-VLAN-MGR-MIB", "vlanSetVstkVlanCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vlanMgrVlanSetGroup = vlanMgrVlanSetGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-VLAN-MGR-MIB", vlanType=vlanType, alcatelIND1VLANMgrMIBConformance=alcatelIND1VLANMgrMIBConformance, vpaVlanNumber=vpaVlanNumber, alcatelIND1VLANMgrMIBCompliances=alcatelIND1VLANMgrMIBCompliances, vlanAfdCfg=vlanAfdCfg, vlanSrcLearningStatus=vlanSrcLearningStatus, vlanSetIpRouterCount=vlanSetIpRouterCount, alcatelIND1VLANMgrMIBGroups=alcatelIND1VLANMgrMIBGroups, alcatelIND1VLANMgrMIBCompliance=alcatelIND1VLANMgrMIBCompliance, vpaStatus=vpaStatus, vlanMgrVlan=vlanMgrVlan, vpaType=vpaType, vpaState=vpaState, vlanSetDynamicVlanCount=vlanSetDynamicVlanCount, vlanSetVstkVlanCount=vlanSetVstkVlanCount, vlanMtu=vlanMtu, alcatelIND1VLANMgrMIB=alcatelIND1VLANMgrMIB, vlanTable=vlanTable, vlanOperStatus=vlanOperStatus, vlanEntry=vlanEntry, vpaTable=vpaTable, vlanNumber=vlanNumber, vlanMgrVpa=vlanMgrVpa, vpaIfIndex=vpaIfIndex, vlanDescription=vlanDescription, PYSNMP_MODULE_ID=alcatelIND1VLANMgrMIB, vpaEntry=vpaEntry, vlanMgrVlanSet=vlanMgrVlanSet, vlanMgrVlanSetGroup=vlanMgrVlanSetGroup, vlanStatus=vlanStatus, vlanMgrVpaGroup=vlanMgrVpaGroup, alcatelIND1VLANMgrMIBObjects=alcatelIND1VLANMgrMIBObjects, vlanSetVlanCount=vlanSetVlanCount, vlanAdmStatus=vlanAdmStatus, vlanMgrVlanGroup=vlanMgrVlanGroup, vlanRouterStatus=vlanRouterStatus)
