#
# PySNMP MIB module FCIP-MGMT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/FCIP-MGMT-MIB
# Produced by pysmi-1.1.8 at Sat Jan 15 19:25:34 2022
# On host fv-az121-65 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection")
FcNameIdOrZero, = mibBuilder.importSymbols("FC-MGMT-MIB", "FcNameIdOrZero")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddress, InetAddressType, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType", "InetPortNumber")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Bits, iso, ModuleIdentity, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Integer32, IpAddress, NotificationType, Gauge32, mib_2, TimeTicks, ObjectIdentity, MibIdentifier, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "iso", "ModuleIdentity", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Integer32", "IpAddress", "NotificationType", "Gauge32", "mib-2", "TimeTicks", "ObjectIdentity", "MibIdentifier", "Unsigned32")
TimeStamp, RowStatus, TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "RowStatus", "TextualConvention", "DisplayString", "TruthValue")
fcipMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 224))
fcipMIB.setRevisions(('2006-02-06 00:00',))
if mibBuilder.loadTexts: fcipMIB.setLastUpdated('200602060000Z')
if mibBuilder.loadTexts: fcipMIB.setOrganization('IETF IPFC Working Group')
fcipObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 224, 1))
fcipConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 224, 2))
fcipConfig = MibIdentifier((1, 3, 6, 1, 2, 1, 224, 1, 1))
class FcipDomainIdInOctetForm(TextualConvention, OctetString):
    reference = 'FC-SW-3 section 4.8'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 1)
    fixedLength = 1

class FcipEntityMode(TextualConvention, Integer32):
    reference = 'FC-BB, rev 4.7, 2 May 1997, section 3.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("ePortMode", 1), ("bPortMode", 2))

class FcipEntityId(TextualConvention, OctetString):
    reference = 'RFC 3821, Section 7.1, FCIP Special Frame Format'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

fcipDynIpConfType = MibScalar((1, 3, 6, 1, 2, 1, 224, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("slpv2", 1), ("none", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fcipDynIpConfType.setStatus('current')
fcipDeviceWWN = MibScalar((1, 3, 6, 1, 2, 1, 224, 1, 1, 2), FcNameIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipDeviceWWN.setStatus('current')
fcipEntitySACKOption = MibScalar((1, 3, 6, 1, 2, 1, 224, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipEntitySACKOption.setStatus('current')
fcipEntityInstanceTable = MibTable((1, 3, 6, 1, 2, 1, 224, 1, 1, 4), )
if mibBuilder.loadTexts: fcipEntityInstanceTable.setStatus('current')
fcipEntityInstanceEntry = MibTableRow((1, 3, 6, 1, 2, 1, 224, 1, 1, 4, 1), ).setIndexNames((0, "FCIP-MGMT-MIB", "fcipEntityId"))
if mibBuilder.loadTexts: fcipEntityInstanceEntry.setStatus('current')
fcipEntityId = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 4, 1, 1), FcipEntityId())
if mibBuilder.loadTexts: fcipEntityId.setStatus('current')
fcipEntityName = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 4, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcipEntityName.setStatus('current')
fcipEntityAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 4, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcipEntityAddressType.setStatus('current')
fcipEntityAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 4, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcipEntityAddress.setStatus('current')
fcipEntityTcpConnPort = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 4, 1, 5), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcipEntityTcpConnPort.setStatus('current')
fcipEntitySeqNumWrap = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 4, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipEntitySeqNumWrap.setStatus('current')
fcipEntityPHBSupport = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 4, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipEntityPHBSupport.setStatus('current')
fcipEntityStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 4, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcipEntityStatus.setStatus('current')
fcipLinkTable = MibTable((1, 3, 6, 1, 2, 1, 224, 1, 1, 5), )
if mibBuilder.loadTexts: fcipLinkTable.setStatus('current')
fcipLinkEntry = MibTableRow((1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1), ).setIndexNames((0, "FCIP-MGMT-MIB", "fcipEntityId"), (0, "FCIP-MGMT-MIB", "fcipLinkIndex"))
if mibBuilder.loadTexts: fcipLinkEntry.setStatus('current')
fcipLinkIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: fcipLinkIndex.setStatus('current')
fcipLinkIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipLinkIfIndex.setStatus('current')
fcipLinkCost = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcipLinkCost.setStatus('current')
fcipLinkLocalFcipEntityMode = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 4), FcipEntityMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipLinkLocalFcipEntityMode.setStatus('current')
fcipLinkLocalFcipEntityAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 5), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcipLinkLocalFcipEntityAddressType.setStatus('current')
fcipLinkLocalFcipEntityAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcipLinkLocalFcipEntityAddress.setStatus('current')
fcipLinkRemFcipEntityWWN = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 7), FcNameIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcipLinkRemFcipEntityWWN.setStatus('current')
fcipLinkRemFcipEntityId = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 8), FcipEntityId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcipLinkRemFcipEntityId.setStatus('current')
fcipLinkRemFcipEntityAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 9), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcipLinkRemFcipEntityAddressType.setStatus('current')
fcipLinkRemFcipEntityAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 10), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcipLinkRemFcipEntityAddress.setStatus('current')
fcipLinkStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcipLinkStatus.setStatus('current')
fcipLinkCreateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 5, 1, 12), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipLinkCreateTime.setStatus('current')
fcipTcpConnTable = MibTable((1, 3, 6, 1, 2, 1, 224, 1, 1, 6), )
if mibBuilder.loadTexts: fcipTcpConnTable.setStatus('current')
fcipTcpConnEntry = MibTableRow((1, 3, 6, 1, 2, 1, 224, 1, 1, 6, 1), ).setIndexNames((0, "FCIP-MGMT-MIB", "fcipEntityId"), (0, "FCIP-MGMT-MIB", "fcipLinkIndex"), (0, "FCIP-MGMT-MIB", "fcipTcpConnLocalPort"), (0, "FCIP-MGMT-MIB", "fcipTcpConnRemPort"))
if mibBuilder.loadTexts: fcipTcpConnEntry.setStatus('current')
fcipTcpConnLocalPort = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 6, 1, 1), InetPortNumber())
if mibBuilder.loadTexts: fcipTcpConnLocalPort.setStatus('current')
fcipTcpConnRemPort = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 6, 1, 2), InetPortNumber())
if mibBuilder.loadTexts: fcipTcpConnRemPort.setStatus('current')
fcipTcpConnRWSize = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 6, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipTcpConnRWSize.setStatus('current')
fcipTcpConnMSS = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 6, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipTcpConnMSS.setStatus('current')
fcipDynamicRouteTable = MibTable((1, 3, 6, 1, 2, 1, 224, 1, 1, 7), )
if mibBuilder.loadTexts: fcipDynamicRouteTable.setStatus('current')
fcipDynamicRouteEntry = MibTableRow((1, 3, 6, 1, 2, 1, 224, 1, 1, 7, 1), ).setIndexNames((0, "FCIP-MGMT-MIB", "fcipEntityId"), (0, "FCIP-MGMT-MIB", "fcipDynamicRouteDID"))
if mibBuilder.loadTexts: fcipDynamicRouteEntry.setStatus('current')
fcipDynamicRouteDID = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 7, 1, 1), FcipDomainIdInOctetForm())
if mibBuilder.loadTexts: fcipDynamicRouteDID.setStatus('current')
fcipDynamicRouteLinkIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipDynamicRouteLinkIndex.setStatus('current')
fcipStaticRouteTable = MibTable((1, 3, 6, 1, 2, 1, 224, 1, 1, 8), )
if mibBuilder.loadTexts: fcipStaticRouteTable.setStatus('current')
fcipStaticRouteEntry = MibTableRow((1, 3, 6, 1, 2, 1, 224, 1, 1, 8, 1), ).setIndexNames((0, "FCIP-MGMT-MIB", "fcipEntityId"), (0, "FCIP-MGMT-MIB", "fcipStaticRouteDID"))
if mibBuilder.loadTexts: fcipStaticRouteEntry.setStatus('current')
fcipStaticRouteDID = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 8, 1, 1), FcipDomainIdInOctetForm())
if mibBuilder.loadTexts: fcipStaticRouteDID.setStatus('current')
fcipStaticRouteLinkIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 8, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcipStaticRouteLinkIndex.setStatus('current')
fcipStaticRouteStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 8, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: fcipStaticRouteStatus.setStatus('current')
fcipDiscoveryDomainTable = MibTable((1, 3, 6, 1, 2, 1, 224, 1, 1, 9), )
if mibBuilder.loadTexts: fcipDiscoveryDomainTable.setStatus('current')
fcipDiscoveryDomainEntry = MibTableRow((1, 3, 6, 1, 2, 1, 224, 1, 1, 9, 1), ).setIndexNames((0, "FCIP-MGMT-MIB", "fcipEntityId"), (0, "FCIP-MGMT-MIB", "fcipDiscoveryDomainIndex"))
if mibBuilder.loadTexts: fcipDiscoveryDomainEntry.setStatus('current')
fcipDiscoveryDomainIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: fcipDiscoveryDomainIndex.setStatus('current')
fcipDiscoveryDomainName = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 9, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fcipDiscoveryDomainName.setStatus('current')
fcipLinkErrorsTable = MibTable((1, 3, 6, 1, 2, 1, 224, 1, 1, 10), )
if mibBuilder.loadTexts: fcipLinkErrorsTable.setStatus('current')
fcipLinkErrorsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1), ).setIndexNames((0, "FCIP-MGMT-MIB", "fcipEntityId"), (0, "FCIP-MGMT-MIB", "fcipLinkIndex"))
if mibBuilder.loadTexts: fcipLinkErrorsEntry.setStatus('current')
fcipLinkFcipLossofFcSynchs = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipLinkFcipLossofFcSynchs.setStatus('current')
fcipLinkFcipEncapErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipLinkFcipEncapErrors.setStatus('current')
fcipLinkFcipNotReceivedSfResps = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipLinkFcipNotReceivedSfResps.setStatus('current')
fcipLinkFcipSfRespMismatches = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipLinkFcipSfRespMismatches.setStatus('current')
fcipLinkFcipSfInvalidNonces = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipLinkFcipSfInvalidNonces.setStatus('current')
fcipLinkFcipReceivedSfDuplicates = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipLinkFcipReceivedSfDuplicates.setStatus('current')
fcipLinkFcipSfInvalidWWNs = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipLinkFcipSfInvalidWWNs.setStatus('current')
fcipLinkFcipBB2LkaTimeOuts = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipLinkFcipBB2LkaTimeOuts.setStatus('current')
fcipLinkFcipSntpExpiredTimeStamps = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipLinkFcipSntpExpiredTimeStamps.setStatus('current')
fcipLinkTcpTooManyErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipLinkTcpTooManyErrors.setStatus('current')
fcipLinkTcpExcessiveDroppedDatagrams = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipLinkTcpExcessiveDroppedDatagrams.setStatus('current')
fcipLinkTcpSaParamMismatches = MibTableColumn((1, 3, 6, 1, 2, 1, 224, 1, 1, 10, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fcipLinkTcpSaParamMismatches.setStatus('current')
fcipCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 224, 2, 1))
fcipGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 224, 2, 2))
fcipCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 224, 2, 1, 1)).setObjects(("FCIP-MGMT-MIB", "fcipEntityScalarGroup"), ("FCIP-MGMT-MIB", "fcipEntityInstanceGroup"), ("FCIP-MGMT-MIB", "fcipLinkGroup"), ("FCIP-MGMT-MIB", "fcipTcpConnGroup"), ("FCIP-MGMT-MIB", "fcipDiscoveryDomainGroup"), ("FCIP-MGMT-MIB", "fcipLinkErrorsGroup"), ("FCIP-MGMT-MIB", "fcipDynamicRouteGroup"), ("FCIP-MGMT-MIB", "fcipStaticRouteGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcipCompliance = fcipCompliance.setStatus('current')
fcipEntityScalarGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 224, 2, 2, 1)).setObjects(("FCIP-MGMT-MIB", "fcipDynIpConfType"), ("FCIP-MGMT-MIB", "fcipDeviceWWN"), ("FCIP-MGMT-MIB", "fcipEntitySACKOption"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcipEntityScalarGroup = fcipEntityScalarGroup.setStatus('current')
fcipEntityInstanceGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 224, 2, 2, 2)).setObjects(("FCIP-MGMT-MIB", "fcipEntityName"), ("FCIP-MGMT-MIB", "fcipEntityAddressType"), ("FCIP-MGMT-MIB", "fcipEntityAddress"), ("FCIP-MGMT-MIB", "fcipEntityTcpConnPort"), ("FCIP-MGMT-MIB", "fcipEntitySeqNumWrap"), ("FCIP-MGMT-MIB", "fcipEntityPHBSupport"), ("FCIP-MGMT-MIB", "fcipEntityStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcipEntityInstanceGroup = fcipEntityInstanceGroup.setStatus('current')
fcipLinkGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 224, 2, 2, 3)).setObjects(("FCIP-MGMT-MIB", "fcipLinkIfIndex"), ("FCIP-MGMT-MIB", "fcipLinkCost"), ("FCIP-MGMT-MIB", "fcipLinkLocalFcipEntityMode"), ("FCIP-MGMT-MIB", "fcipLinkLocalFcipEntityAddressType"), ("FCIP-MGMT-MIB", "fcipLinkLocalFcipEntityAddress"), ("FCIP-MGMT-MIB", "fcipLinkRemFcipEntityWWN"), ("FCIP-MGMT-MIB", "fcipLinkRemFcipEntityId"), ("FCIP-MGMT-MIB", "fcipLinkRemFcipEntityAddressType"), ("FCIP-MGMT-MIB", "fcipLinkRemFcipEntityAddress"), ("FCIP-MGMT-MIB", "fcipLinkStatus"), ("FCIP-MGMT-MIB", "fcipLinkCreateTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcipLinkGroup = fcipLinkGroup.setStatus('current')
fcipTcpConnGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 224, 2, 2, 4)).setObjects(("FCIP-MGMT-MIB", "fcipTcpConnRWSize"), ("FCIP-MGMT-MIB", "fcipTcpConnMSS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcipTcpConnGroup = fcipTcpConnGroup.setStatus('current')
fcipDiscoveryDomainGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 224, 2, 2, 5)).setObjects(("FCIP-MGMT-MIB", "fcipDiscoveryDomainName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcipDiscoveryDomainGroup = fcipDiscoveryDomainGroup.setStatus('current')
fcipLinkErrorsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 224, 2, 2, 6)).setObjects(("FCIP-MGMT-MIB", "fcipLinkFcipLossofFcSynchs"), ("FCIP-MGMT-MIB", "fcipLinkFcipEncapErrors"), ("FCIP-MGMT-MIB", "fcipLinkFcipNotReceivedSfResps"), ("FCIP-MGMT-MIB", "fcipLinkFcipSfRespMismatches"), ("FCIP-MGMT-MIB", "fcipLinkFcipSfInvalidNonces"), ("FCIP-MGMT-MIB", "fcipLinkFcipReceivedSfDuplicates"), ("FCIP-MGMT-MIB", "fcipLinkFcipSfInvalidWWNs"), ("FCIP-MGMT-MIB", "fcipLinkFcipBB2LkaTimeOuts"), ("FCIP-MGMT-MIB", "fcipLinkFcipSntpExpiredTimeStamps"), ("FCIP-MGMT-MIB", "fcipLinkTcpTooManyErrors"), ("FCIP-MGMT-MIB", "fcipLinkTcpExcessiveDroppedDatagrams"), ("FCIP-MGMT-MIB", "fcipLinkTcpSaParamMismatches"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcipLinkErrorsGroup = fcipLinkErrorsGroup.setStatus('current')
fcipDynamicRouteGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 224, 2, 2, 7)).setObjects(("FCIP-MGMT-MIB", "fcipDynamicRouteLinkIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcipDynamicRouteGroup = fcipDynamicRouteGroup.setStatus('current')
fcipStaticRouteGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 224, 2, 2, 8)).setObjects(("FCIP-MGMT-MIB", "fcipStaticRouteLinkIndex"), ("FCIP-MGMT-MIB", "fcipStaticRouteStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    fcipStaticRouteGroup = fcipStaticRouteGroup.setStatus('current')
mibBuilder.exportSymbols("FCIP-MGMT-MIB", fcipLinkRemFcipEntityId=fcipLinkRemFcipEntityId, fcipLinkFcipEncapErrors=fcipLinkFcipEncapErrors, fcipLinkFcipLossofFcSynchs=fcipLinkFcipLossofFcSynchs, fcipStaticRouteTable=fcipStaticRouteTable, fcipDiscoveryDomainEntry=fcipDiscoveryDomainEntry, fcipTcpConnRemPort=fcipTcpConnRemPort, fcipEntityPHBSupport=fcipEntityPHBSupport, fcipLinkErrorsGroup=fcipLinkErrorsGroup, fcipEntityAddress=fcipEntityAddress, fcipConformance=fcipConformance, FcipDomainIdInOctetForm=FcipDomainIdInOctetForm, fcipLinkLocalFcipEntityAddress=fcipLinkLocalFcipEntityAddress, fcipEntityInstanceGroup=fcipEntityInstanceGroup, fcipDeviceWWN=fcipDeviceWWN, fcipLinkRemFcipEntityAddressType=fcipLinkRemFcipEntityAddressType, fcipLinkEntry=fcipLinkEntry, fcipEntityInstanceTable=fcipEntityInstanceTable, fcipLinkTcpExcessiveDroppedDatagrams=fcipLinkTcpExcessiveDroppedDatagrams, fcipLinkCreateTime=fcipLinkCreateTime, fcipTcpConnMSS=fcipTcpConnMSS, fcipLinkCost=fcipLinkCost, fcipEntityStatus=fcipEntityStatus, fcipLinkFcipSfInvalidNonces=fcipLinkFcipSfInvalidNonces, fcipLinkFcipSntpExpiredTimeStamps=fcipLinkFcipSntpExpiredTimeStamps, fcipLinkFcipSfRespMismatches=fcipLinkFcipSfRespMismatches, fcipStaticRouteEntry=fcipStaticRouteEntry, fcipTcpConnEntry=fcipTcpConnEntry, fcipCompliances=fcipCompliances, FcipEntityMode=FcipEntityMode, PYSNMP_MODULE_ID=fcipMIB, fcipTcpConnGroup=fcipTcpConnGroup, fcipLinkFcipSfInvalidWWNs=fcipLinkFcipSfInvalidWWNs, fcipLinkRemFcipEntityWWN=fcipLinkRemFcipEntityWWN, fcipGroups=fcipGroups, fcipMIB=fcipMIB, fcipStaticRouteStatus=fcipStaticRouteStatus, fcipLinkErrorsTable=fcipLinkErrorsTable, fcipLinkGroup=fcipLinkGroup, fcipDynamicRouteEntry=fcipDynamicRouteEntry, fcipLinkIfIndex=fcipLinkIfIndex, fcipLinkLocalFcipEntityMode=fcipLinkLocalFcipEntityMode, fcipDynIpConfType=fcipDynIpConfType, fcipObjects=fcipObjects, fcipLinkLocalFcipEntityAddressType=fcipLinkLocalFcipEntityAddressType, fcipEntityTcpConnPort=fcipEntityTcpConnPort, fcipStaticRouteGroup=fcipStaticRouteGroup, fcipEntityName=fcipEntityName, fcipTcpConnRWSize=fcipTcpConnRWSize, fcipLinkRemFcipEntityAddress=fcipLinkRemFcipEntityAddress, fcipEntityInstanceEntry=fcipEntityInstanceEntry, fcipCompliance=fcipCompliance, fcipConfig=fcipConfig, fcipDiscoveryDomainIndex=fcipDiscoveryDomainIndex, fcipDynamicRouteDID=fcipDynamicRouteDID, fcipEntityScalarGroup=fcipEntityScalarGroup, fcipDiscoveryDomainGroup=fcipDiscoveryDomainGroup, fcipLinkIndex=fcipLinkIndex, fcipEntityAddressType=fcipEntityAddressType, fcipEntityId=fcipEntityId, fcipDynamicRouteTable=fcipDynamicRouteTable, fcipDynamicRouteGroup=fcipDynamicRouteGroup, fcipEntitySeqNumWrap=fcipEntitySeqNumWrap, fcipStaticRouteLinkIndex=fcipStaticRouteLinkIndex, fcipLinkFcipBB2LkaTimeOuts=fcipLinkFcipBB2LkaTimeOuts, fcipLinkTcpTooManyErrors=fcipLinkTcpTooManyErrors, fcipLinkErrorsEntry=fcipLinkErrorsEntry, fcipLinkTable=fcipLinkTable, fcipDynamicRouteLinkIndex=fcipDynamicRouteLinkIndex, fcipLinkFcipNotReceivedSfResps=fcipLinkFcipNotReceivedSfResps, fcipTcpConnLocalPort=fcipTcpConnLocalPort, fcipLinkFcipReceivedSfDuplicates=fcipLinkFcipReceivedSfDuplicates, fcipEntitySACKOption=fcipEntitySACKOption, FcipEntityId=FcipEntityId, fcipTcpConnTable=fcipTcpConnTable, fcipLinkStatus=fcipLinkStatus, fcipDiscoveryDomainTable=fcipDiscoveryDomainTable, fcipDiscoveryDomainName=fcipDiscoveryDomainName, fcipStaticRouteDID=fcipStaticRouteDID, fcipLinkTcpSaParamMismatches=fcipLinkTcpSaParamMismatches)
