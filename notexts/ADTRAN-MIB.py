#
# PySNMP MIB module ADTRAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/adtran/ADTRAN-MIB
# Produced by pysmi-1.1.3 at Mon Nov 22 12:34:45 2021
# On host fv-az83-627 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter64, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, IpAddress, iso, MibIdentifier, enterprises, Bits, NotificationType, Gauge32, Unsigned32, ObjectIdentity, TimeTicks, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "IpAddress", "iso", "MibIdentifier", "enterprises", "Bits", "NotificationType", "Gauge32", "Unsigned32", "ObjectIdentity", "TimeTicks", "Integer32")
DisplayString, PhysAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "PhysAddress", "TextualConvention")
adtran = ModuleIdentity((1, 3, 6, 1, 4, 1, 664))
if mibBuilder.loadTexts: adtran.setLastUpdated('0208090000Z')
if mibBuilder.loadTexts: adtran.setOrganization('ADTRAN, Inc.')
adProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 1))
adMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 2))
adAdmin = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 3))
adPerform = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 4))
adShared = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 5))
adIdentity = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 6))
adIdentityShared = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 6, 10000))
adAgentCapModule = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 7))
adAgentCapProduct = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 7, 1))
adAgentCapShared = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 7, 2))
adConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 99))
adComplianceShared = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 99, 10000))
adProductInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 3, 1))
adProdName = MibScalar((1, 3, 6, 1, 4, 1, 664, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adProdName.setStatus('current')
adProdPartNumber = MibScalar((1, 3, 6, 1, 4, 1, 664, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adProdPartNumber.setStatus('current')
adProdCLEIcode = MibScalar((1, 3, 6, 1, 4, 1, 664, 3, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adProdCLEIcode.setStatus('current')
adProdSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 664, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adProdSerialNumber.setStatus('current')
adProdRevision = MibScalar((1, 3, 6, 1, 4, 1, 664, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adProdRevision.setStatus('current')
adProdSwVersion = MibScalar((1, 3, 6, 1, 4, 1, 664, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adProdSwVersion.setStatus('current')
adProdPhysAddress = MibScalar((1, 3, 6, 1, 4, 1, 664, 3, 1, 7), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adProdPhysAddress.setStatus('current')
adProdProductID = MibScalar((1, 3, 6, 1, 4, 1, 664, 3, 1, 8), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adProdProductID.setStatus('current')
adProdTransType = MibScalar((1, 3, 6, 1, 4, 1, 664, 3, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: adProdTransType.setStatus('current')
adCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 99, 1))
adMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 664, 99, 2))
adCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 664, 99, 1, 1)).setObjects(("ADTRAN-MIB", "adBaseGroup"), ("ADTRAN-MIB", "adCNDGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adCompliance = adCompliance.setStatus('current')
adBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 99, 2, 1)).setObjects(("ADTRAN-MIB", "adProdName"), ("ADTRAN-MIB", "adProdPartNumber"), ("ADTRAN-MIB", "adProdCLEIcode"), ("ADTRAN-MIB", "adProdSerialNumber"), ("ADTRAN-MIB", "adProdRevision"), ("ADTRAN-MIB", "adProdSwVersion"), ("ADTRAN-MIB", "adProdPhysAddress"), ("ADTRAN-MIB", "adProdProductID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adBaseGroup = adBaseGroup.setStatus('current')
adCNDGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 664, 99, 2, 2)).setObjects(("ADTRAN-MIB", "adProdTransType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    adCNDGroup = adCNDGroup.setStatus('current')
mibBuilder.exportSymbols("ADTRAN-MIB", adtran=adtran, adAgentCapProduct=adAgentCapProduct, adProdTransType=adProdTransType, adMIBGroups=adMIBGroups, adCNDGroup=adCNDGroup, adCompliance=adCompliance, adProdSwVersion=adProdSwVersion, adAgentCapShared=adAgentCapShared, adProdRevision=adProdRevision, adProdCLEIcode=adProdCLEIcode, adProdSerialNumber=adProdSerialNumber, adAgentCapModule=adAgentCapModule, adCompliances=adCompliances, adProductInfo=adProductInfo, adProducts=adProducts, adIdentityShared=adIdentityShared, PYSNMP_MODULE_ID=adtran, adProdName=adProdName, adMgmt=adMgmt, adBaseGroup=adBaseGroup, adShared=adShared, adComplianceShared=adComplianceShared, adProdPhysAddress=adProdPhysAddress, adPerform=adPerform, adProdPartNumber=adProdPartNumber, adProdProductID=adProdProductID, adAdmin=adAdmin, adConformance=adConformance, adIdentity=adIdentity)
