#
# PySNMP MIB module PRVT-PORTS-AGGREGATION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-PORTS-AGGREGATION-MIB
# Produced by pysmi-1.1.3 at Wed Dec  8 18:20:48 2021
# On host fv-az74-115 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
switch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "switch")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, ModuleIdentity, Counter64, Gauge32, ObjectIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, MibIdentifier, TimeTicks, Integer32, Counter32, Bits, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ModuleIdentity", "Counter64", "Gauge32", "ObjectIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "MibIdentifier", "TimeTicks", "Integer32", "Counter32", "Bits", "Unsigned32")
DisplayString, TruthValue, TextualConvention, RowStatus, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "RowStatus", "MacAddress")
prvtPortsAggregationMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 5, 106))
prvtPortsAggregationMIB.setRevisions(('2010-01-07 00:00',))
if mibBuilder.loadTexts: prvtPortsAggregationMIB.setLastUpdated('201402050000Z')
if mibBuilder.loadTexts: prvtPortsAggregationMIB.setOrganization('BATM Advanced Communication')
class PrvtPortsAggregationMacSecType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("noViolation", 1), ("watermarkReached", 2), ("maxMacCountReached", 3), ("errorState", 4))

prvtPortsAggregationNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 0))
prvtPortsAggregationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1))
prvtPortsAggregationDistributionType = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("l2", 1), ("l3", 2), ("l4", 3), ("mpls", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtPortsAggregationDistributionType.setStatus('current')
portsAggregationTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2), )
if mibBuilder.loadTexts: portsAggregationTable.setStatus('current')
portsAggregationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1), ).setIndexNames((0, "PRVT-PORTS-AGGREGATION-MIB", "portsAggregationName"))
if mibBuilder.loadTexts: portsAggregationEntry.setStatus('current')
portsAggregationName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 5)))
if mibBuilder.loadTexts: portsAggregationName.setStatus('current')
portsAggregationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsAggregationRowStatus.setStatus('current')
portsAggregationDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsAggregationDescription.setStatus('current')
portsAggregationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("access", 1), ("network", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsAggregationMode.setStatus('current')
portsAggregationLacpEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsAggregationLacpEnable.setStatus('current')
portsAggregationLacpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("passive", 1), ("active", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsAggregationLacpMode.setStatus('current')
portsAggregationLacpAdminKey = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsAggregationLacpAdminKey.setStatus('current')
portsAggregationLacpId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 8), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsAggregationLacpId.setStatus('current')
portsAggregationLacpMarker = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 9), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsAggregationLacpMarker.setStatus('current')
portsAggregationLacpSystemPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsAggregationLacpSystemPriority.setStatus('current')
portsAggregationOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationOperStatus.setStatus('current')
portsAggregationPortCount = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationPortCount.setStatus('current')
portsAggregationUplinkCount = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationUplinkCount.setStatus('current')
portsAggregationIfInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationIfInOctets.setStatus('current')
portsAggregationIfInUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationIfInUcastPkts.setStatus('current')
portsAggregationIfInNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationIfInNUcastPkts.setStatus('current')
portsAggregationIfInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationIfInErrors.setStatus('current')
portsAggregationIfInUnknownProtos = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationIfInUnknownProtos.setStatus('current')
portsAggregationIfOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationIfOutOctets.setStatus('current')
portsAggregationIfOutUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationIfOutUcastPkts.setStatus('current')
portsAggregationIfOutNUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationIfOutNUcastPkts.setStatus('current')
portsAggregationIfOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationIfOutErrors.setStatus('current')
portsAggregationIfInMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationIfInMulticastPkts.setStatus('current')
portsAggregationIfInBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationIfInBroadcastPkts.setStatus('current')
portsAggregationIfInDiscardsPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationIfInDiscardsPkts.setStatus('current')
portsAggregationIfOutMulticastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationIfOutMulticastPkts.setStatus('current')
portsAggregationIfOutBroadcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationIfOutBroadcastPkts.setStatus('current')
portsAggregationLacpFastRate = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 28), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsAggregationLacpFastRate.setStatus('current')
portsAggregationLacpSelectionCriteria = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("highest-count", 1), ("highest-weight", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsAggregationLacpSelectionCriteria.setStatus('current')
portsAggregationLacpTxOnStandby = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 30), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsAggregationLacpTxOnStandby.setStatus('current')
portsAggregationLacpForceActive = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsAggregationLacpForceActive.setStatus('current')
portsAggregationFailoverTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 32), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationFailoverTime.setStatus('current')
portsAggregationMacSecIfProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 33), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsAggregationMacSecIfProfile.setStatus('current')
portsAggregationMacSecIfCurrMacCount = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 34), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationMacSecIfCurrMacCount.setStatus('current')
portsAggregationMacSecIfState = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 35), PrvtPortsAggregationMacSecType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: portsAggregationMacSecIfState.setStatus('current')
portsAggregationEvPropProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 2, 1, 36), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsAggregationEvPropProfile.setStatus('current')
portsAggregationPortsTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 3), )
if mibBuilder.loadTexts: portsAggregationPortsTable.setStatus('current')
portsAggregationPortsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 3, 1), ).setIndexNames((0, "PRVT-PORTS-AGGREGATION-MIB", "portsAggregationName"), (0, "PRVT-PORTS-AGGREGATION-MIB", "portsAggregationPortsIfIndex"))
if mibBuilder.loadTexts: portsAggregationPortsEntry.setStatus('current')
portsAggregationPortsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: portsAggregationPortsIfIndex.setStatus('current')
portsAggregationPortsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsAggregationPortsRowStatus.setStatus('current')
portsAggregationPortsPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsAggregationPortsPriority.setStatus('current')
portsAggregationPortsSubLag = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 1, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: portsAggregationPortsSubLag.setStatus('current')
lagMemberLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 0, 1)).setObjects(("PRVT-PORTS-AGGREGATION-MIB", "portsAggregationUplinkCount"))
if mibBuilder.loadTexts: lagMemberLinkUp.setStatus('current')
lagMemberLinkDown = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 0, 2)).setObjects(("PRVT-PORTS-AGGREGATION-MIB", "portsAggregationUplinkCount"))
if mibBuilder.loadTexts: lagMemberLinkDown.setStatus('current')
lagMemberAdd = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 0, 3)).setObjects(("PRVT-PORTS-AGGREGATION-MIB", "portsAggregationPortCount"))
if mibBuilder.loadTexts: lagMemberAdd.setStatus('current')
lagMemberRemove = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 0, 4)).setObjects(("PRVT-PORTS-AGGREGATION-MIB", "portsAggregationPortCount"))
if mibBuilder.loadTexts: lagMemberRemove.setStatus('current')
lagLinkUp = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 0, 5)).setObjects(("PRVT-PORTS-AGGREGATION-MIB", "portsAggregationOperStatus"))
if mibBuilder.loadTexts: lagLinkUp.setStatus('current')
lagLinkDown = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 0, 6)).setObjects(("PRVT-PORTS-AGGREGATION-MIB", "portsAggregationOperStatus"))
if mibBuilder.loadTexts: lagLinkDown.setStatus('current')
portsAggregationWmarkViolation = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 0, 7)).setObjects(("PRVT-PORTS-AGGREGATION-MIB", "portsAggregationName"))
if mibBuilder.loadTexts: portsAggregationWmarkViolation.setStatus('current')
portsAggregationViolation = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 106, 0, 8)).setObjects(("PRVT-PORTS-AGGREGATION-MIB", "portsAggregationName"))
if mibBuilder.loadTexts: portsAggregationViolation.setStatus('current')
mibBuilder.exportSymbols("PRVT-PORTS-AGGREGATION-MIB", portsAggregationFailoverTime=portsAggregationFailoverTime, portsAggregationLacpSystemPriority=portsAggregationLacpSystemPriority, portsAggregationMacSecIfCurrMacCount=portsAggregationMacSecIfCurrMacCount, portsAggregationLacpAdminKey=portsAggregationLacpAdminKey, portsAggregationDescription=portsAggregationDescription, prvtPortsAggregationObjects=prvtPortsAggregationObjects, PrvtPortsAggregationMacSecType=PrvtPortsAggregationMacSecType, portsAggregationTable=portsAggregationTable, portsAggregationOperStatus=portsAggregationOperStatus, portsAggregationIfOutUcastPkts=portsAggregationIfOutUcastPkts, portsAggregationEvPropProfile=portsAggregationEvPropProfile, portsAggregationLacpEnable=portsAggregationLacpEnable, portsAggregationViolation=portsAggregationViolation, portsAggregationIfInNUcastPkts=portsAggregationIfInNUcastPkts, portsAggregationIfInOctets=portsAggregationIfInOctets, lagMemberLinkUp=lagMemberLinkUp, lagMemberRemove=lagMemberRemove, portsAggregationName=portsAggregationName, portsAggregationWmarkViolation=portsAggregationWmarkViolation, lagLinkDown=lagLinkDown, prvtPortsAggregationNotifications=prvtPortsAggregationNotifications, portsAggregationIfOutMulticastPkts=portsAggregationIfOutMulticastPkts, portsAggregationLacpMode=portsAggregationLacpMode, portsAggregationLacpTxOnStandby=portsAggregationLacpTxOnStandby, lagMemberAdd=lagMemberAdd, lagLinkUp=lagLinkUp, portsAggregationIfOutBroadcastPkts=portsAggregationIfOutBroadcastPkts, portsAggregationUplinkCount=portsAggregationUplinkCount, portsAggregationRowStatus=portsAggregationRowStatus, portsAggregationPortsEntry=portsAggregationPortsEntry, prvtPortsAggregationMIB=prvtPortsAggregationMIB, portsAggregationPortsSubLag=portsAggregationPortsSubLag, portsAggregationPortsRowStatus=portsAggregationPortsRowStatus, portsAggregationIfOutNUcastPkts=portsAggregationIfOutNUcastPkts, prvtPortsAggregationDistributionType=prvtPortsAggregationDistributionType, portsAggregationIfInUcastPkts=portsAggregationIfInUcastPkts, portsAggregationIfInDiscardsPkts=portsAggregationIfInDiscardsPkts, portsAggregationIfInUnknownProtos=portsAggregationIfInUnknownProtos, portsAggregationMode=portsAggregationMode, portsAggregationLacpMarker=portsAggregationLacpMarker, portsAggregationIfInBroadcastPkts=portsAggregationIfInBroadcastPkts, portsAggregationLacpSelectionCriteria=portsAggregationLacpSelectionCriteria, portsAggregationLacpForceActive=portsAggregationLacpForceActive, portsAggregationLacpFastRate=portsAggregationLacpFastRate, portsAggregationPortsTable=portsAggregationPortsTable, portsAggregationMacSecIfState=portsAggregationMacSecIfState, PYSNMP_MODULE_ID=prvtPortsAggregationMIB, portsAggregationIfOutErrors=portsAggregationIfOutErrors, portsAggregationIfOutOctets=portsAggregationIfOutOctets, portsAggregationEntry=portsAggregationEntry, portsAggregationPortsPriority=portsAggregationPortsPriority, portsAggregationIfInMulticastPkts=portsAggregationIfInMulticastPkts, portsAggregationMacSecIfProfile=portsAggregationMacSecIfProfile, portsAggregationPortsIfIndex=portsAggregationPortsIfIndex, lagMemberLinkDown=lagMemberLinkDown, portsAggregationIfInErrors=portsAggregationIfInErrors, portsAggregationPortCount=portsAggregationPortCount, portsAggregationLacpId=portsAggregationLacpId)
