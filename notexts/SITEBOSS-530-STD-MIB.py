#
# PySNMP MIB module SITEBOSS-530-STD-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/asentria/SITEBOSS-530-STD-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 00:55:57 2022
# On host fv-az74-997 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
asentria, = mibBuilder.importSymbols("ASENTRIA-ROOT-MIB", "asentria")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Bits, Integer32, IpAddress, MibIdentifier, Counter64, Gauge32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Unsigned32, iso, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Bits", "Integer32", "IpAddress", "MibIdentifier", "Counter64", "Gauge32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Unsigned32", "iso", "ModuleIdentity", "TimeTicks")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
s530 = ModuleIdentity((1, 3, 6, 1, 4, 1, 3052, 12))
s530.setRevisions(('2016-01-07 01:43', '2015-04-03 01:57', '2014-12-30 01:41', '2014-12-11 01:40', '2014-10-16 01:39', '2014-10-03 01:38', '2014-08-14 01:37', '2014-07-03 01:36', '2014-06-24 01:35', '2014-05-29 01:34', '2014-04-11 01:33', '2014-01-17 01:32', '2013-12-04 01:31', '2013-08-01 01:30', '2013-06-12 01:29', '2013-05-28 01:28', '2013-05-10 01:27', '2013-03-15 01:26', '2013-02-06 01:25', '2013-01-14 01:24', '2012-11-26 01:23', '2012-08-22 01:22', '2012-07-09 01:21', '2012-06-12 01:20', '2012-05-02 01:19', '2012-04-05 01:18', '2012-03-06 01:17', '2011-08-08 09:00', '2011-08-01 09:00', '2011-07-08 09:00', '2011-01-05 09:00', '2010-11-03 09:00', '2010-08-24 09:00', '2010-03-16 09:00', '2010-01-19 09:00', '2009-03-31 09:00', '2008-11-12 09:00', '2008-06-09 09:00', '2008-06-02 11:00', '2008-05-15 15:00', '2008-04-22 16:52', '2008-04-09 16:40', '2008-03-21 16:50', '2008-02-13 14:20',))
if mibBuilder.loadTexts: s530.setLastUpdated('201601070143Z')
if mibBuilder.loadTexts: s530.setOrganization('Asentria Corporation')
status = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 1))
eventSensorStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 1, 1))
dataEventStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 1, 2))
powerDistributionStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5))
pdNextGen = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4))
pdSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 5))
fuelSensorStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 1, 6))
wirelessModemStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7))
acPowerMonitorStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8))
config = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2))
eventSensorBasics = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1))
eventSensorPointConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2))
serialPorts = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3))
network = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4))
interface = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 1))
ethernet = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 1, 1))
ethernet1 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 1, 1, 1))
ethernet2 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 1, 1, 2))
snmp = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 8))
snmpNotificationTx = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 8, 7))
ftpPush = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9))
ppp = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 10))
pppDial = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 10, 1))
pppHost = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 10, 2))
routing = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 11))
netSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 12))
ipRestriction = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 12, 1))
rts = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13))
rtsAlarms = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 2))
trap = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 14))
trapInclude = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 14, 1))
routeTest = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 15))
wireless = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 16))
wirelessConnectivity = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 16, 20))
email = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 17))
netAdvanced = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 18))
web = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 19))
ethExpan = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 20))
ethExpanDHCP = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 20, 6))
ipv6 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 21))
cpe = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 22))
modem = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 5))
modemClid = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 5, 8))
time = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 8))
console = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 10))
unitSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11))
secCore = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 1))
secFactory = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 3))
secVPN = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 5))
event = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12))
evCore = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 1))
evLog = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 1, 3))
evMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 1, 4))
evData = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2))
evdCore = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 1))
evNoData1 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 3))
evNoData2 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 4))
evSched1 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 5))
evSched2 = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 6))
evNoSensor = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 9))
fuelSensor = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11))
acPowerMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12))
evReset = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 16))
action = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14))
actionSched = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 3))
actionAsentria = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 4))
sys = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16))
sysTime = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 1))
sysTimeNet = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 1, 4))
sysPT = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 2))
sysTimeStamp = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 8))
sysLog = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 9))
sysCRDB = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 10))
sysLoc = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 14))
sysAssetMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 15))
auditLog = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 2, 17))
productIds = MibIdentifier((1, 3, 6, 1, 4, 1, 3052, 12, 3))
esPointTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 1, 1, 1), )
if mibBuilder.loadTexts: esPointTable.setStatus('current')
esPointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 1, 1, 1, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "esIndexES"), (0, "SITEBOSS-530-STD-MIB", "esIndexPC"), (0, "SITEBOSS-530-STD-MIB", "esIndexPoint"))
if mibBuilder.loadTexts: esPointEntry.setStatus('current')
esIndexES = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: esIndexES.setStatus('current')
esIndexPC = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: esIndexPC.setStatus('current')
esIndexPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: esIndexPoint.setStatus('current')
esPointName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: esPointName.setStatus('current')
esPointInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 1, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: esPointInEventState.setStatus('current')
esPointValueInt = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: esPointValueInt.setStatus('current')
esPointValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esPointValueStr.setStatus('current')
esPointTimeLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esPointTimeLastChange.setStatus('current')
esPointTimetickLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 1, 1, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esPointTimetickLastChange.setStatus('current')
esPointAliasValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esPointAliasValueStr.setStatus('current')
esPointClassValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 1, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esPointClassValueStr.setStatus('current')
deStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 1, 2, 1), )
if mibBuilder.loadTexts: deStatusTable.setStatus('current')
deStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 1, 2, 1, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "deStatusIndex"))
if mibBuilder.loadTexts: deStatusEntry.setStatus('current')
deStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: deStatusIndex.setStatus('current')
deStatusName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deStatusName.setStatus('current')
deStatusCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 2, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deStatusCounter.setStatus('current')
deStatusThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 2, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deStatusThreshold.setStatus('current')
modemStatus = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemStatus.setStatus('current')
modemCLIDLogTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 1, 4), )
if mibBuilder.loadTexts: modemCLIDLogTable.setStatus('current')
modemCLIDLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 1, 4, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "modemCLIDLogIndex"))
if mibBuilder.loadTexts: modemCLIDLogEntry.setStatus('current')
modemCLIDLogIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCLIDLogIndex.setStatus('current')
modemCLIDLogNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemCLIDLogNumber.setStatus('current')
pdConfig = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdConfig.setStatus('current')
pdnTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1), )
if mibBuilder.loadTexts: pdnTable.setStatus('current')
pdnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "pdnIndexPD"), (0, "SITEBOSS-530-STD-MIB", "pdnIndexOutput"))
if mibBuilder.loadTexts: pdnEntry.setStatus('current')
pdnIndexPD = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnIndexPD.setStatus('current')
pdnIndexOutput = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnIndexOutput.setStatus('current')
pdnConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnConfig.setStatus('current')
pdnMainCurrentInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainCurrentInEventState.setStatus('current')
pdnMainCurrentValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainCurrentValue.setStatus('current')
pdnMainCurrentValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainCurrentValueStr.setStatus('current')
pdnMainCurrentDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainCurrentDeadband.setStatus('current')
pdnMainCurrentVHighCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainCurrentVHighCurrent.setStatus('current')
pdnMainCurrentHighCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainCurrentHighCurrent.setStatus('current')
pdnMainCurrentLowCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainCurrentLowCurrent.setStatus('current')
pdnMainCurrentVLowCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainCurrentVLowCurrent.setStatus('current')
pdnMainVoltageInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainVoltageInEventState.setStatus('current')
pdnMainVoltageValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainVoltageValue.setStatus('current')
pdnMainVoltageValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainVoltageValueStr.setStatus('current')
pdnMainVoltageDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainVoltageDeadband.setStatus('current')
pdnMainVoltageVHighVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainVoltageVHighVoltage.setStatus('current')
pdnMainVoltageHighVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainVoltageHighVoltage.setStatus('current')
pdnMainVoltageLowVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainVoltageLowVoltage.setStatus('current')
pdnMainVoltageVLowVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainVoltageVLowVoltage.setStatus('current')
pdnMainPowerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainPowerValue.setStatus('current')
pdnMainPowerValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainPowerValueStr.setStatus('current')
pdnOutputCurrentInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCurrentInEventState.setStatus('current')
pdnOutputCurrentValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCurrentValue.setStatus('current')
pdnOutputCurrentValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCurrentValueStr.setStatus('current')
pdnOutputCurrentDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCurrentDeadband.setStatus('current')
pdnOutputCurrentVHighCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCurrentVHighCurrent.setStatus('current')
pdnOutputCurrentHighCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 27), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCurrentHighCurrent.setStatus('current')
pdnOutputCurrentLowCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCurrentLowCurrent.setStatus('current')
pdnOutputCurrentVLowCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCurrentVLowCurrent.setStatus('current')
pdnOutputFuseInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputFuseInEventState.setStatus('current')
pdnOutputFuseValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputFuseValueStr.setStatus('current')
pdnMainCombinedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnMainCombinedStatus.setStatus('current')
pdnOutputCombinedStatusBlock1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 33), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCombinedStatusBlock1.setStatus('current')
pdnOutputCombinedStatusBlock2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnOutputCombinedStatusBlock2.setStatus('current')
pdnDeviceCurrentValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDeviceCurrentValue.setStatus('current')
pdnDeviceCurrentValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 4, 1, 1, 36), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdnDeviceCurrentValueStr.setStatus('current')
pdSystemCurrent = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 5, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdSystemCurrent.setStatus('current')
pdSystemPower = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 5, 5, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pdSystemPower.setStatus('current')
fsStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 1, 6, 1), )
if mibBuilder.loadTexts: fsStatusTable.setStatus('current')
fsStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 1, 6, 1, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "fsStatusIndex"))
if mibBuilder.loadTexts: fsStatusEntry.setStatus('current')
fsStatusIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsStatusIndex.setStatus('current')
fsStatusName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsStatusName.setStatus('current')
fsStatusDeviceState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 6, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsStatusDeviceState.setStatus('current')
fsStatusVolumeValueString = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 6, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsStatusVolumeValueString.setStatus('current')
fsStatusVolumePercentLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 6, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsStatusVolumePercentLevel.setStatus('current')
fsStatusVolumeInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 6, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsStatusVolumeInEventState.setStatus('current')
fsStatusCombined = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 6, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsStatusCombined.setStatus('current')
wmsStatus = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsStatus.setStatus('current')
wmsSignal = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsSignal.setStatus('current')
wmsRSSI = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsRSSI.setStatus('current')
wmsBER = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsBER.setStatus('current')
wmsUpdated = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsUpdated.setStatus('current')
wmsRegistration = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsRegistration.setStatus('current')
wmsLAC = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsLAC.setStatus('current')
wmsCellID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCellID.setStatus('current')
wmsIMSI = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsIMSI.setStatus('current')
wmsPhnum = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsPhnum.setStatus('current')
wmsLocalIP = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsLocalIP.setStatus('current')
wmsMgfID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsMgfID.setStatus('current')
wmsModelID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsModelID.setStatus('current')
wmsIMEI = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsIMEI.setStatus('current')
wmsRevID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsRevID.setStatus('current')
wmsNetName = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsNetName.setStatus('current')
wmsGPRSStatus = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsGPRSStatus.setStatus('current')
wmsBand = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsBand.setStatus('current')
wmsChannel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsChannel.setStatus('current')
wmsCountryCode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsCountryCode.setStatus('current')
wmsNetCode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsNetCode.setStatus('current')
wmsPLMNColor = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsPLMNColor.setStatus('current')
wmsBScolor = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsBScolor.setStatus('current')
wmsMpRACH = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsMpRACH.setStatus('current')
wmsMinRxLevel = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsMinRxLevel.setStatus('current')
wmsBaseCoeff = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsBaseCoeff.setStatus('current')
wmsSIMStatus = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsSIMStatus.setStatus('current')
wmsICCID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsICCID.setStatus('current')
wmsModemType = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 1, 7, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wmsModemType.setStatus('current')
acpmStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1), )
if mibBuilder.loadTexts: acpmStatusTable.setStatus('current')
acpmStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "acpmsIndex"))
if mibBuilder.loadTexts: acpmStatusEntry.setStatus('current')
acpmsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsIndex.setStatus('current')
acpmsName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsName.setStatus('current')
acpmsAvgVoltageValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgVoltageValueStr.setStatus('current')
acpmsAvgVoltageMinStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgVoltageMinStr.setStatus('current')
acpmsAvgVoltageMaxStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgVoltageMaxStr.setStatus('current')
acpmsAvgVoltageAvgStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgVoltageAvgStr.setStatus('current')
acpmsAvgVoltageInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgVoltageInEventState.setStatus('current')
acpmsVoltagePhaseAValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsVoltagePhaseAValueStr.setStatus('current')
acpmsVoltagePhaseBValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsVoltagePhaseBValueStr.setStatus('current')
acpmsVoltagePhaseCValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsVoltagePhaseCValueStr.setStatus('current')
acpmsAvgCurrentValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgCurrentValueStr.setStatus('current')
acpmsAvgCurrentMinStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgCurrentMinStr.setStatus('current')
acpmsAvgCurrentMaxStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgCurrentMaxStr.setStatus('current')
acpmsAvgCurrentAvgStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgCurrentAvgStr.setStatus('current')
acpmsAvgCurrentInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgCurrentInEventState.setStatus('current')
acpmsCurrentPhaseAValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsCurrentPhaseAValueStr.setStatus('current')
acpmsCurrentPhaseBValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsCurrentPhaseBValueStr.setStatus('current')
acpmsCurrentPhaseCValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsCurrentPhaseCValueStr.setStatus('current')
acpmsAvgFreqValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgFreqValueStr.setStatus('current')
acpmsAvgFreqMinStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgFreqMinStr.setStatus('current')
acpmsAvgFreqMaxStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgFreqMaxStr.setStatus('current')
acpmsAvgFreqAvgStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgFreqAvgStr.setStatus('current')
acpmsAvgFreqInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAvgFreqInEventState.setStatus('current')
acpmsTRPValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTRPValueStr.setStatus('current')
acpmsTRPMinStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTRPMinStr.setStatus('current')
acpmsTRPMaxStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTRPMaxStr.setStatus('current')
acpmsTRPAvgStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTRPAvgStr.setStatus('current')
acpmsTRPInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTRPInEventState.setStatus('current')
acpmsRPPhaseAValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsRPPhaseAValueStr.setStatus('current')
acpmsRPPhaseBValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsRPPhaseBValueStr.setStatus('current')
acpmsRPPhaseCValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsRPPhaseCValueStr.setStatus('current')
acpmsCombined = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsCombined.setStatus('current')
acpmsTPFValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 33), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTPFValueStr.setStatus('current')
acpmsTPFMinStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTPFMinStr.setStatus('current')
acpmsTPFMaxStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTPFMaxStr.setStatus('current')
acpmsTPFAvgStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 36), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTPFAvgStr.setStatus('current')
acpmsTPFInEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 37), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTPFInEventState.setStatus('current')
acpmsPFPhaseAValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 38), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsPFPhaseAValueStr.setStatus('current')
acpmsPFPhaseBValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 39), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsPFPhaseBValueStr.setStatus('current')
acpmsPFPhaseCValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 40), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsPFPhaseCValueStr.setStatus('current')
acpmsTRcPValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 41), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTRcPValueStr.setStatus('current')
acpmsTRcPMinStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 42), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTRcPMinStr.setStatus('current')
acpmsTRcPMaxStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 43), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTRcPMaxStr.setStatus('current')
acpmsTRcPAvgStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 44), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTRcPAvgStr.setStatus('current')
acpmsRcPPhaseAValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 45), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsRcPPhaseAValueStr.setStatus('current')
acpmsRcPPhaseBValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 46), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsRcPPhaseBValueStr.setStatus('current')
acpmsRcPPhaseCValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 47), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsRcPPhaseCValueStr.setStatus('current')
acpmsTAPValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 48), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTAPValueStr.setStatus('current')
acpmsTAPMinStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 49), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTAPMinStr.setStatus('current')
acpmsTAPMaxStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 50), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTAPMaxStr.setStatus('current')
acpmsTAPAvgStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 51), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTAPAvgStr.setStatus('current')
acpmsAPPhaseAValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 52), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAPPhaseAValueStr.setStatus('current')
acpmsAPPhaseBValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 53), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAPPhaseBValueStr.setStatus('current')
acpmsAPPhaseCValueStr = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 54), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsAPPhaseCValueStr.setStatus('current')
acpmsTotalEnergyWh = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTotalEnergyWh.setStatus('current')
acpmsTotalEnergyVAR = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTotalEnergyVAR.setStatus('current')
acpmsTotalEnergyVA = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 1, 8, 1, 1, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmsTotalEnergyVA.setStatus('current')
esNumberEventSensors = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberEventSensors.setStatus('current')
esTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2), )
if mibBuilder.loadTexts: esTable.setStatus('current')
esEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "esIndex"))
if mibBuilder.loadTexts: esEntry.setStatus('current')
esIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: esIndex.setStatus('current')
esName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esName.setStatus('current')
esID = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esID.setStatus('current')
esNumberTempSensors = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberTempSensors.setStatus('current')
esTempReportingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esTempReportingMode.setStatus('current')
esNumberCCs = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberCCs.setStatus('current')
esCCReportingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCCReportingMode.setStatus('current')
esNumberHumidSensors = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberHumidSensors.setStatus('current')
esHumidReportingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esHumidReportingMode.setStatus('current')
esNumberNoiseSensors = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberNoiseSensors.setStatus('current')
esNoiseReportingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNoiseReportingMode.setStatus('current')
esNumberAirflowSensors = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberAirflowSensors.setStatus('current')
esAirflowReportingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esAirflowReportingMode.setStatus('current')
esNumberAnalog = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberAnalog.setStatus('current')
esAnalogReportingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esAnalogReportingMode.setStatus('current')
esNumberOutputs = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNumberOutputs.setStatus('current')
esOutputReportingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 17), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esOutputReportingMode.setStatus('current')
esTempCombinedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 18), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esTempCombinedStatus.setStatus('current')
esCCCombinedStatusBlock1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 19), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCCCombinedStatusBlock1.setStatus('current')
esCCCombinedStatusBlock2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 20), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCCCombinedStatusBlock2.setStatus('current')
esCCCombinedStatusBlock3 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCCCombinedStatusBlock3.setStatus('current')
esCCCombinedStatusBlock4 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 22), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCCCombinedStatusBlock4.setStatus('current')
esCCCombinedStatusBlock5 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCCCombinedStatusBlock5.setStatus('current')
esCCCombinedStatusBlock6 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCCCombinedStatusBlock6.setStatus('current')
esCCCombinedStatusBlock7 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 25), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCCCombinedStatusBlock7.setStatus('current')
esCCCombinedStatusBlock8 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esCCCombinedStatusBlock8.setStatus('current')
esHumidCombinedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esHumidCombinedStatus.setStatus('current')
esAnalogCombinedStatusBlock1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esAnalogCombinedStatusBlock1.setStatus('current')
esAnalogCombinedStatusBlock2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 29), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esAnalogCombinedStatusBlock2.setStatus('current')
esAnalogCombinedStatusBlock3 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esAnalogCombinedStatusBlock3.setStatus('current')
esAnalogCombinedStatusBlock4 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 31), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esAnalogCombinedStatusBlock4.setStatus('current')
esAnalogCombinedStatusBlock5 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esAnalogCombinedStatusBlock5.setStatus('current')
esAnalogCombinedStatusBlock6 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 33), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esAnalogCombinedStatusBlock6.setStatus('current')
esOutputCombinedStatusBlock1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 34), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esOutputCombinedStatusBlock1.setStatus('current')
esOutputCombinedStatusBlock2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 2, 1, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esOutputCombinedStatusBlock2.setStatus('current')
esNewSensors = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: esNewSensors.setStatus('current')
esPointConfigTempTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1), )
if mibBuilder.loadTexts: esPointConfigTempTable.setStatus('current')
esPointConfigTempEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "espcTempIndexES"), (0, "SITEBOSS-530-STD-MIB", "espcTempIndexPoint"))
if mibBuilder.loadTexts: esPointConfigTempEntry.setStatus('current')
espcTempIndexES = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcTempIndexES.setStatus('current')
espcTempIndexPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcTempIndexPoint.setStatus('current')
espcTempEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempEnable.setStatus('current')
espcTempScale = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempScale.setStatus('current')
espcTempDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempDeadband.setStatus('current')
espcTempVHighTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempVHighTemp.setStatus('current')
espcTempVHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempVHighActions.setStatus('current')
espcTempVHighTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempVHighTrapnum.setStatus('current')
espcTempVHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempVHighClass.setStatus('current')
espcTempHighTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempHighTemp.setStatus('current')
espcTempHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempHighActions.setStatus('current')
espcTempHighTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempHighTrapnum.setStatus('current')
espcTempHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempHighClass.setStatus('current')
espcTempNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempNormalActions.setStatus('current')
espcTempNormalTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempNormalTrapnum.setStatus('current')
espcTempNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempNormalClass.setStatus('current')
espcTempLowTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempLowTemp.setStatus('current')
espcTempLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempLowActions.setStatus('current')
espcTempLowTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempLowTrapnum.setStatus('current')
espcTempLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempLowClass.setStatus('current')
espcTempVLowTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempVLowTemp.setStatus('current')
espcTempVLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempVLowActions.setStatus('current')
espcTempVLowTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempVLowTrapnum.setStatus('current')
espcTempVLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 1, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcTempVLowClass.setStatus('current')
esPointConfigCCTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 2), )
if mibBuilder.loadTexts: esPointConfigCCTable.setStatus('current')
esPointConfigCCEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 2, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "espcCCIndexES"), (0, "SITEBOSS-530-STD-MIB", "espcCCIndexPoint"))
if mibBuilder.loadTexts: esPointConfigCCEntry.setStatus('current')
espcCCIndexES = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcCCIndexES.setStatus('current')
espcCCIndexPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcCCIndexPoint.setStatus('current')
espcCCEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCEnable.setStatus('current')
espcCCName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCName.setStatus('current')
espcCCEventState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCEventState.setStatus('current')
espcCCThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCThreshold.setStatus('current')
espcCCEventActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCEventActions.setStatus('current')
espcCCEventTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCEventTrapnum.setStatus('current')
espcCCEventClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 2, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCEventClass.setStatus('current')
espcCCNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 2, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCNormalActions.setStatus('current')
espcCCNormalTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 2, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCNormalTrapnum.setStatus('current')
espcCCNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 2, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCNormalClass.setStatus('current')
espcCCAlarmAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 2, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCAlarmAlias.setStatus('current')
espcCCNormalAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 2, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCNormalAlias.setStatus('current')
espcCCNormalThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCNormalThreshold.setStatus('current')
espcCCOverrideGlobalReminder = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 2, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCOverrideGlobalReminder.setStatus('current')
espcCCReminderInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 2, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcCCReminderInterval.setStatus('current')
esPointConfigHumidTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3), )
if mibBuilder.loadTexts: esPointConfigHumidTable.setStatus('current')
esPointConfigHumidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "espcHumidIndexES"), (0, "SITEBOSS-530-STD-MIB", "espcHumidIndexPoint"))
if mibBuilder.loadTexts: esPointConfigHumidEntry.setStatus('current')
espcHumidIndexES = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcHumidIndexES.setStatus('current')
espcHumidIndexPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcHumidIndexPoint.setStatus('current')
espcHumidEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidEnable.setStatus('current')
espcHumidDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidDeadband.setStatus('current')
espcHumidVHighHumid = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidVHighHumid.setStatus('current')
espcHumidVHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidVHighActions.setStatus('current')
espcHumidVHighTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidVHighTrapnum.setStatus('current')
espcHumidVHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidVHighClass.setStatus('current')
espcHumidHighHumid = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidHighHumid.setStatus('current')
espcHumidHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidHighActions.setStatus('current')
espcHumidHighTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidHighTrapnum.setStatus('current')
espcHumidHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidHighClass.setStatus('current')
espcHumidNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidNormalActions.setStatus('current')
espcHumidNormalTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidNormalTrapnum.setStatus('current')
espcHumidNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidNormalClass.setStatus('current')
espcHumidLowHumid = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidLowHumid.setStatus('current')
espcHumidLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidLowActions.setStatus('current')
espcHumidLowTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidLowTrapnum.setStatus('current')
espcHumidLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidLowClass.setStatus('current')
espcHumidVLowHumid = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidVLowHumid.setStatus('current')
espcHumidVLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidVLowActions.setStatus('current')
espcHumidVLowTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidVLowTrapnum.setStatus('current')
espcHumidVLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 3, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcHumidVLowClass.setStatus('current')
esPointConfigAITable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5), )
if mibBuilder.loadTexts: esPointConfigAITable.setStatus('current')
esPointConfigAIEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "espcHumidIndexES"), (0, "SITEBOSS-530-STD-MIB", "espcHumidIndexPoint"))
if mibBuilder.loadTexts: esPointConfigAIEntry.setStatus('current')
espcAIIndexES = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcAIIndexES.setStatus('current')
espcAIIndexPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcAIIndexPoint.setStatus('current')
espcAIEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIEnable.setStatus('current')
espcAIDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIDeadband.setStatus('current')
espcAIVhighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIVhighValue.setStatus('current')
espcAIVhighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIVhighActions.setStatus('current')
espcAIVhighTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIVhighTrapnum.setStatus('current')
espcAIVhighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIVhighClass.setStatus('current')
espcAIHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIHighValue.setStatus('current')
espcAIHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIHighActions.setStatus('current')
espcAIHighTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIHighTrapnum.setStatus('current')
espcAIHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIHighClass.setStatus('current')
espcAINormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAINormalActions.setStatus('current')
espcAINormalTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAINormalTrapnum.setStatus('current')
espcAINormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAINormalClass.setStatus('current')
espcAILowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAILowValue.setStatus('current')
espcAILowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAILowActions.setStatus('current')
espcAILowTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAILowTrapnum.setStatus('current')
espcAILowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAILowClass.setStatus('current')
espcAIVlowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIVlowValue.setStatus('current')
espcAIVlowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIVlowActions.setStatus('current')
espcAIVlowTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIVlowTrapnum.setStatus('current')
espcAIVlowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIVlowClass.setStatus('current')
espcAIConvUnitName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIConvUnitName.setStatus('current')
espcAIConvHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 26), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIConvHighValue.setStatus('current')
espcAIConvHighUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 27), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIConvHighUnit.setStatus('current')
espcAIConvLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 29), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIConvLowValue.setStatus('current')
espcAIConvLowUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 30), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIConvLowUnit.setStatus('current')
espcAIDisplayFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 5, 1, 32), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcAIDisplayFormat.setStatus('current')
esPointConfigOutputTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 6), )
if mibBuilder.loadTexts: esPointConfigOutputTable.setStatus('current')
esPointConfigOutputEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 6, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "espcOutputIndexES"), (0, "SITEBOSS-530-STD-MIB", "espcOutputIndexPoint"))
if mibBuilder.loadTexts: esPointConfigOutputEntry.setStatus('current')
espcOutputIndexES = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcOutputIndexES.setStatus('current')
espcOutputIndexPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcOutputIndexPoint.setStatus('current')
espcOutputEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 6, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputEnable.setStatus('current')
espcOutputActiveState = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 6, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputActiveState.setStatus('current')
espcOutputType = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 6, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcOutputType.setStatus('current')
espcOutputAliasValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 6, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcOutputAliasValue.setStatus('current')
espcOutputAliasColor = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 6, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: espcOutputAliasColor.setStatus('current')
espcOutputActiveAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 6, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputActiveAlias.setStatus('current')
espcOutputActiveColor = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 6, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputActiveColor.setStatus('current')
espcOutputActiveActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 6, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputActiveActions.setStatus('current')
espcOutputActiveTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 6, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(150, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputActiveTrapnum.setStatus('current')
espcOutputActiveClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 6, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputActiveClass.setStatus('current')
espcOutputInactiveAlias = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 6, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputInactiveAlias.setStatus('current')
espcOutputInactiveColor = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 6, 1, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputInactiveColor.setStatus('current')
espcOutputInactiveActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 6, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputInactiveActions.setStatus('current')
espcOutputInactiveTrapnum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 6, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(150, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputInactiveTrapnum.setStatus('current')
espcOutputInactiveClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 2, 6, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: espcOutputInactiveClass.setStatus('current')
numberPorts = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: numberPorts.setStatus('current')
portConfigTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2), )
if mibBuilder.loadTexts: portConfigTable.setStatus('current')
portConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "portConfigIndex"))
if mibBuilder.loadTexts: portConfigEntry.setStatus('current')
portConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: portConfigIndex.setStatus('current')
portConfigBaud = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigBaud.setStatus('current')
portConfigDataFormat = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigDataFormat.setStatus('current')
portConfigStripPtOutputLfs = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigStripPtOutputLfs.setStatus('current')
portConfigStripPtInputLfs = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigStripPtInputLfs.setStatus('current')
portConfigMaskEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigMaskEnable.setStatus('current')
portConfigDAEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigDAEnable.setStatus('current')
portConfigStoreAlarmsDPT = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigStoreAlarmsDPT.setStatus('current')
portConfigRecordTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigRecordTimeout.setStatus('current')
portConfigDataType = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigDataType.setStatus('current')
portConfigEtxToCRLF = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigEtxToCRLF.setStatus('current')
portConfigMLREnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigMLREnable.setStatus('current')
portConfigMLRStartField1Pos = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigMLRStartField1Pos.setStatus('current')
portConfigMLRStartField1Text = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigMLRStartField1Text.setStatus('current')
portConfigMLRStartField2Pos = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigMLRStartField2Pos.setStatus('current')
portConfigMLRStartField2Text = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigMLRStartField2Text.setStatus('current')
portConfigMLRNumLinesBefore = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigMLRNumLinesBefore.setStatus('current')
portConfigMLREndDetection = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigMLREndDetection.setStatus('current')
portConfigMLRLineCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigMLRLineCount.setStatus('current')
portConfigMLREndField1Pos = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigMLREndField1Pos.setStatus('current')
portConfigMLREndField1Text = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigMLREndField1Text.setStatus('current')
portConfigMLREndField2Pos = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigMLREndField2Pos.setStatus('current')
portConfigMLREndField2Text = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigMLREndField2Text.setStatus('current')
portConfigMLRUseComplexRules = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigMLRUseComplexRules.setStatus('current')
portConfigBufferPT = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 26), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigBufferPT.setStatus('current')
portConfigId = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 27), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigId.setStatus('current')
portConfigMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 28), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigMode.setStatus('current')
portConfigHsk = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 3, 2, 1, 29), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portConfigHsk.setStatus('current')
eth1Mode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eth1Mode.setStatus('current')
eth1Address = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 1, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1Address.setStatus('current')
eth1SubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 1, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1SubnetMask.setStatus('current')
eth1Router = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 1, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth1Router.setStatus('current')
eth1MAC = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eth1MAC.setStatus('current')
eth2Mode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 1, 1, 2, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eth2Mode.setStatus('current')
eth2Address = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 1, 1, 2, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2Address.setStatus('current')
eth2SubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 1, 1, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2SubnetMask.setStatus('current')
eth2Router = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 1, 1, 2, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: eth2Router.setStatus('current')
eth2MAC = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 1, 1, 2, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eth2MAC.setStatus('current')
defaultRouter = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: defaultRouter.setStatus('current')
dnsTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 3), )
if mibBuilder.loadTexts: dnsTable.setStatus('current')
dnsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 3, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "dnsIndex"))
if mibBuilder.loadTexts: dnsEntry.setStatus('current')
dnsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dnsIndex.setStatus('current')
dnsAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 3, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dnsAddress.setStatus('current')
hostname = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hostname.setStatus('current')
hostTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 5), )
if mibBuilder.loadTexts: hostTable.setStatus('current')
hostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 5, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "hostIndex"))
if mibBuilder.loadTexts: hostEntry.setStatus('current')
hostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hostIndex.setStatus('current')
hostDeclaration = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hostDeclaration.setStatus('current')
ncpDuplex = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncpDuplex.setStatus('current')
ncpTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ncpTimeout.setStatus('current')
snmpAgentEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 8, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpAgentEnable.setStatus('current')
snmpNotificationCaptureEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 8, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpNotificationCaptureEnable.setStatus('current')
snmpNotificationCaptureFile = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 8, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpNotificationCaptureFile.setStatus('current')
snmpNtfnAttempts = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 8, 7, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpNtfnAttempts.setStatus('current')
snmpNtfnTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 8, 7, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpNtfnTimeout.setStatus('current')
snmpNtfnCycles = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 8, 7, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpNtfnCycles.setStatus('current')
snmpNtfnSnooze = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 8, 7, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snmpNtfnSnooze.setStatus('current')
ftpPushEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushEnable.setStatus('current')
ftpPushServer = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushServer.setStatus('current')
ftpPushAccount = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushAccount.setStatus('current')
ftpPushDirectory = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushDirectory.setStatus('current')
ftpPushperiod = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushperiod.setStatus('current')
ftpPushPushFileTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 8), )
if mibBuilder.loadTexts: ftpPushPushFileTable.setStatus('current')
ftpPushPushFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 8, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "ftpPushPushFileIndex"))
if mibBuilder.loadTexts: ftpPushPushFileEntry.setStatus('current')
ftpPushPushFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpPushPushFileIndex.setStatus('current')
ftpPushPushFile = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 8, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushPushFile.setStatus('current')
ftpPushPushAudit = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushPushAudit.setStatus('current')
ftpPushPushAlarms = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushPushAlarms.setStatus('current')
ftpPushRemoteFileTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 11), )
if mibBuilder.loadTexts: ftpPushRemoteFileTable.setStatus('current')
ftpPushRemoteFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 11, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "ftpPushRemoteFileIndex"))
if mibBuilder.loadTexts: ftpPushRemoteFileEntry.setStatus('current')
ftpPushRemoteFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ftpPushRemoteFileIndex.setStatus('current')
ftpPushRemoteFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 11, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushRemoteFileName.setStatus('current')
ftpPushRemoteAlarmName = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushRemoteAlarmName.setStatus('current')
ftpPushPassive = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushPassive.setStatus('current')
ftpPushIncludeDate = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushIncludeDate.setStatus('current')
ftpPushIncludeTime = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushIncludeTime.setStatus('current')
ftpPushIncludeSeq = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushIncludeSeq.setStatus('current')
ftpPushPermissions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 9, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ftpPushPermissions.setStatus('current')
pppDialEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 10, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppDialEnable.setStatus('current')
pppDialNumber = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 10, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppDialNumber.setStatus('current')
pppDialIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 10, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppDialIdleTimeout.setStatus('current')
pppDialRetries = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 10, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppDialRetries.setStatus('current')
pppDialCDTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 10, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppDialCDTimeout.setStatus('current')
pppDialLoginTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 10, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppDialLoginTimeout.setStatus('current')
pppDialMdmInit = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 10, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppDialMdmInit.setStatus('current')
pppDialSuggestIP = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 10, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppDialSuggestIP.setStatus('current')
pppDialPlainLogin = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 10, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppDialPlainLogin.setStatus('current')
pppHostEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 10, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppHostEnable.setStatus('current')
pppHostIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 10, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppHostIdleTimeout.setStatus('current')
pppHostLocalIP = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 10, 2, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppHostLocalIP.setStatus('current')
pppHostRemoteIP = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 10, 2, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppHostRemoteIP.setStatus('current')
pppRoutingEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 11, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppRoutingEnable.setStatus('current')
routingInterface = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 11, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: routingInterface.setStatus('current')
ipRestrictionTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 12, 1, 1), )
if mibBuilder.loadTexts: ipRestrictionTable.setStatus('current')
ipRestrictionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 12, 1, 1, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "ipRestrictionIndex"))
if mibBuilder.loadTexts: ipRestrictionEntry.setStatus('current')
ipRestrictionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 12, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipRestrictionIndex.setStatus('current')
ipRestrictionEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 12, 1, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipRestrictionEnable.setStatus('current')
ipRestrictionMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 12, 1, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipRestrictionMask.setStatus('current')
rtsFileTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 1), )
if mibBuilder.loadTexts: rtsFileTable.setStatus('current')
rtsFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 1, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "rtsFileIndex"))
if mibBuilder.loadTexts: rtsFileEntry.setStatus('current')
rtsFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rtsFileIndex.setStatus('current')
rtsFileMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtsFileMode.setStatus('current')
rtsFileShowAnswer = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtsFileShowAnswer.setStatus('current')
rtsFileReqXON = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtsFileReqXON.setStatus('current')
rtsFileTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtsFileTimeout.setStatus('current')
rtsFileEmptyClose = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtsFileEmptyClose.setStatus('current')
rtsFilePushHost = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtsFilePushHost.setStatus('current')
rtsFilePushPort = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtsFilePushPort.setStatus('current')
rtsFilePushRetryTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtsFilePushRetryTimer.setStatus('current')
rtsAlarmsMode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtsAlarmsMode.setStatus('current')
rtsAlarmsShowAnswer = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtsAlarmsShowAnswer.setStatus('current')
rtsAlarmsReqXON = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 2, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtsAlarmsReqXON.setStatus('current')
rtsAlarmsTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 2, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtsAlarmsTimeout.setStatus('current')
rtsAlarmsEmptyClose = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 2, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtsAlarmsEmptyClose.setStatus('current')
rtsAlarmsPushHost = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 2, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtsAlarmsPushHost.setStatus('current')
rtsAlarmsPushPort = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 2, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtsAlarmsPushPort.setStatus('current')
rtsAlarmsPushRetryTimer = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 13, 2, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rtsAlarmsPushRetryTimer.setStatus('current')
trapIncludeDateTime = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 14, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIncludeDateTime.setStatus('current')
trapIncludeSiteName = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 14, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIncludeSiteName.setStatus('current')
trapIncludeSensorID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 14, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIncludeSensorID.setStatus('current')
trapIncludeUDName = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 14, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIncludeUDName.setStatus('current')
trapIncludeUDState = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 14, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIncludeUDState.setStatus('current')
trapIncludeSourceAddress = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 14, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapIncludeSourceAddress.setStatus('current')
trapAuthFailEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 14, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapAuthFailEnable.setStatus('current')
routeTestEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 15, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: routeTestEnable.setStatus('current')
routeTestPeriod = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 15, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: routeTestPeriod.setStatus('current')
routeTestAddressTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 15, 3), )
if mibBuilder.loadTexts: routeTestAddressTable.setStatus('current')
routeTestAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 15, 3, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "routeTestAddressIndex"))
if mibBuilder.loadTexts: routeTestAddressEntry.setStatus('current')
routeTestAddressIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 15, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: routeTestAddressIndex.setStatus('current')
routeTestAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 15, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: routeTestAddress.setStatus('current')
wirelessMode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 16, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessMode.setStatus('current')
wirelessAPN = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 16, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessAPN.setStatus('current')
wirelessIdleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 16, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessIdleTimeout.setStatus('current')
wirelessDRE = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 16, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessDRE.setStatus('current')
wirelessPPPUsername = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 16, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessPPPUsername.setStatus('current')
wirelessFirewall = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 16, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessFirewall.setStatus('current')
wirelessKeepaliveThreshold = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 16, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessKeepaliveThreshold.setStatus('current')
wirelessPPPDebug = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 16, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessPPPDebug.setStatus('current')
wirelessConnEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 16, 20, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessConnEnable.setStatus('current')
wirelessConnCheckInterval = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 16, 20, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessConnCheckInterval.setStatus('current')
wirelessConnFailThreshold = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 16, 20, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessConnFailThreshold.setStatus('current')
wirelessConnIP1 = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 16, 20, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessConnIP1.setStatus('current')
wirelessConnIP2 = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 16, 20, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wirelessConnIP2.setStatus('current')
emailServer = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 17, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: emailServer.setStatus('current')
emailDomain = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 17, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: emailDomain.setStatus('current')
emailAuthEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 17, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: emailAuthEnable.setStatus('current')
arpFilter = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 18, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: arpFilter.setStatus('current')
webEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 19, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: webEnable.setStatus('current')
webPort = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 19, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: webPort.setStatus('current')
webTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 19, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: webTimeout.setStatus('current')
ethExpanIp = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 20, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethExpanIp.setStatus('current')
ethExpanMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 20, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethExpanMask.setStatus('current')
ethExpanCardTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 20, 3), )
if mibBuilder.loadTexts: ethExpanCardTable.setStatus('current')
ethExpanCardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 20, 3, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "ethExpanCardIndex"))
if mibBuilder.loadTexts: ethExpanCardEntry.setStatus('current')
ethExpanCardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 20, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethExpanCardIndex.setStatus('current')
ethExpanCardMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 20, 3, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ethExpanCardMAC.setStatus('current')
ethExpanDHCPStartIp = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 20, 6, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethExpanDHCPStartIp.setStatus('current')
ethExpanDHCPLeaseTime = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 20, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ethExpanDHCPLeaseTime.setStatus('current')
ipv6DefaultRouter = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 21, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipv6DefaultRouter.setStatus('current')
cpeTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 22, 1), )
if mibBuilder.loadTexts: cpeTable.setStatus('current')
cpeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 22, 1, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "cpeIndex"))
if mibBuilder.loadTexts: cpeEntry.setStatus('current')
cpeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 22, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeIndex.setStatus('current')
cpeHost = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 22, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeHost.setStatus('current')
cpeName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 22, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeName.setStatus('current')
cpeDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 22, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeDescription.setStatus('current')
cpeKeepalive = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 22, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeKeepalive.setStatus('current')
cpeThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 22, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeThreshold.setStatus('current')
cpeEventReminderInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 22, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeEventReminderInterval.setStatus('current')
cpeKeepaliveTicks = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 22, 1, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpeKeepaliveTicks.setStatus('current')
cpePingSize = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 22, 1, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cpePingSize.setStatus('current')
cpeInfoReset = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 22, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeInfoReset.setStatus('current')
cpeInfoNumReq = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 22, 1, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeInfoNumReq.setStatus('current')
cpeInfoNumGoodResp = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 22, 1, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeInfoNumGoodResp.setStatus('current')
cpeInfoNumBadResp = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 22, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeInfoNumBadResp.setStatus('current')
cpeInfoNumLostResp = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 22, 1, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeInfoNumLostResp.setStatus('current')
cpeInfoPercentLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 22, 1, 1, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeInfoPercentLoss.setStatus('current')
cpeInfoPercentBad = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 4, 22, 1, 1, 36), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpeInfoPercentBad.setStatus('current')
modemFormat = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 5, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemFormat.setStatus('current')
modemInitString = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 5, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemInitString.setStatus('current')
modemCallAttempts = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 5, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemCallAttempts.setStatus('current')
modemCallDelay = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 5, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemCallDelay.setStatus('current')
modemCmdTimout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 5, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemCmdTimout.setStatus('current')
modemGoto = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 5, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemGoto.setStatus('current')
modemCLIDEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 5, 8, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemCLIDEnable.setStatus('current')
modemCLIDNumberTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 5, 8, 2), )
if mibBuilder.loadTexts: modemCLIDNumberTable.setStatus('current')
modemCLIDNumberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 5, 8, 2, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "modemCLIDNumberIndex"))
if mibBuilder.loadTexts: modemCLIDNumberEntry.setStatus('current')
modemCLIDNumberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 5, 8, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: modemCLIDNumberIndex.setStatus('current')
modemCLIDNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 5, 8, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemCLIDNumber.setStatus('current')
modemTAPInitString = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 5, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemTAPInitString.setStatus('current')
modemTAP8N1 = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 5, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: modemTAP8N1.setStatus('current')
clock = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 8, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clock.setStatus('current')
consoleDuplex = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 10, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: consoleDuplex.setStatus('current')
consoleTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 10, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: consoleTimeout.setStatus('current')
consoleConfirm = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 10, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: consoleConfirm.setStatus('current')
scShowPasswordPrompt = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scShowPasswordPrompt.setStatus('current')
scConsoleLoginRequired = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scConsoleLoginRequired.setStatus('current')
scModemLoginRequired = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scModemLoginRequired.setStatus('current')
scTelnetLoginRequired = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scTelnetLoginRequired.setStatus('current')
scTelnetPTLoginRequired = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scTelnetPTLoginRequired.setStatus('current')
scRTSLoginRequired = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scRTSLoginRequired.setStatus('current')
scAuthMode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scAuthMode.setStatus('current')
scRightsGroup = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: scRightsGroup.setStatus('current')
secUserTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2), )
if mibBuilder.loadTexts: secUserTable.setStatus('current')
secUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "secUserIndex"))
if mibBuilder.loadTexts: secUserEntry.setStatus('current')
secUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: secUserIndex.setStatus('current')
secUserEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserEnable.setStatus('current')
secUserConnectVia = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserConnectVia.setStatus('current')
secUserLoginTo = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserLoginTo.setStatus('current')
secUserAccessFile = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserAccessFile.setStatus('current')
secUserPTEscapeTo = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserPTEscapeTo.setStatus('current')
secUserPPPType = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserPPPType.setStatus('current')
secUserRights = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserRights.setStatus('current')
secUserEventsReadAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserEventsReadAccess.setStatus('current')
secUserAuditReadAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserAuditReadAccess.setStatus('current')
secUserEventsWriteAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserEventsWriteAccess.setStatus('current')
secUserAuditWriteAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserAuditWriteAccess.setStatus('current')
secUserExpiration = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserExpiration.setStatus('current')
secUserCallbackNumber1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserCallbackNumber1.setStatus('current')
secUserCallbackNumber2 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserCallbackNumber2.setStatus('current')
secUserCallbackNumber3 = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserCallbackNumber3.setStatus('current')
secUserChallengeTelnetMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserChallengeTelnetMode.setStatus('current')
secUserChallengeModemMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserChallengeModemMode.setStatus('current')
secUserChallengeConsoleMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserChallengeConsoleMode.setStatus('current')
secUserChallengeTelnetSendTo = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserChallengeTelnetSendTo.setStatus('current')
secUserChallengeModemSendTo = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 26), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserChallengeModemSendTo.setStatus('current')
secUserChallengeExpiration = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 2, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 180))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secUserChallengeExpiration.setStatus('current')
sfEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfEnable.setStatus('current')
sfSecret = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 11, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sfSecret.setStatus('current')
evClassNameTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 1, 1), )
if mibBuilder.loadTexts: evClassNameTable.setStatus('current')
evClassNameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 1, 1, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "evClassNameIndex"))
if mibBuilder.loadTexts: evClassNameEntry.setStatus('current')
evClassNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: evClassNameIndex.setStatus('current')
evClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 1, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evClassName.setStatus('current')
evReminderInterval = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evReminderInterval.setStatus('current')
evLogEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 1, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLogEnable.setStatus('current')
evLogStoreAlarm = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 1, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLogStoreAlarm.setStatus('current')
evLogMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 1, 3, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLogMaxSize.setStatus('current')
evLogStoreSensor = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 1, 3, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLogStoreSensor.setStatus('current')
evLogTimeStampAlarms = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 1, 3, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLogTimeStampAlarms.setStatus('current')
evLogPrependName = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 1, 3, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evLogPrependName.setStatus('current')
evMgmtReprocess = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 1, 4, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evMgmtReprocess.setStatus('current')
evdExitOnTrue = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdExitOnTrue.setStatus('current')
evdFilterAction = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdFilterAction.setStatus('current')
evdWildCardChar = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdWildCardChar.setStatus('current')
evdTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 2), )
if mibBuilder.loadTexts: evdTable.setStatus('current')
evdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 2, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "evdIndex"))
if mibBuilder.loadTexts: evdEntry.setStatus('current')
evdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: evdIndex.setStatus('current')
evdEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdEnable.setStatus('current')
evdName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdName.setStatus('current')
evdEquation = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdEquation.setStatus('current')
evdThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 2, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdThreshold.setStatus('current')
evdAutoClear = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 2, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdAutoClear.setStatus('current')
evdClearInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdClearInterval.setStatus('current')
evdClearTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 2, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdClearTime.setStatus('current')
evdActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 2, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdActions.setStatus('current')
evdClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 2, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdClass.setStatus('current')
evdTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 2, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdTrapNum.setStatus('current')
evdMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 2, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdMode.setStatus('current')
evdFieldTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 3), )
if mibBuilder.loadTexts: evdFieldTable.setStatus('current')
evdFieldEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 3, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "evdFieldIndex"))
if mibBuilder.loadTexts: evdFieldEntry.setStatus('current')
evdFieldIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: evdFieldIndex.setStatus('current')
evdFieldStart = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdFieldStart.setStatus('current')
evdFieldLength = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 3, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdFieldLength.setStatus('current')
evdFieldName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 3, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdFieldName.setStatus('current')
evdFieldLine = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdFieldLine.setStatus('current')
evdFieldType = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 3, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdFieldType.setStatus('current')
evdMacroTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 4), )
if mibBuilder.loadTexts: evdMacroTable.setStatus('current')
evdMacroEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 4, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "evdMacroIndex"))
if mibBuilder.loadTexts: evdMacroEntry.setStatus('current')
evdMacroIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: evdMacroIndex.setStatus('current')
evdMacroName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdMacroName.setStatus('current')
evdMacroEquation = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 2, 4, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evdMacroEquation.setStatus('current')
evNoData1Enable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData1Enable.setStatus('current')
evNoData1Actions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData1Actions.setStatus('current')
evNoData1Message = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData1Message.setStatus('current')
evNoData1TrapNum = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(505, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData1TrapNum.setStatus('current')
evNoData1Class = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 3, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData1Class.setStatus('current')
evNoData1Sched1Begin = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 3, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData1Sched1Begin.setStatus('current')
evNoData1Sched1End = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 3, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData1Sched1End.setStatus('current')
evNoData1Sched1Duration = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 3, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData1Sched1Duration.setStatus('current')
evNoData1Sched2Begin = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 3, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData1Sched2Begin.setStatus('current')
evNoData1Sched2End = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 3, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData1Sched2End.setStatus('current')
evNoData1Sched2Duration = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 3, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData1Sched2Duration.setStatus('current')
evNoData1PortEnableTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 3, 12), )
if mibBuilder.loadTexts: evNoData1PortEnableTable.setStatus('current')
evNoData1PortEnableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 3, 12, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "evNoData1PortEnableIndex"))
if mibBuilder.loadTexts: evNoData1PortEnableEntry.setStatus('current')
evNoData1PortEnableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 3, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: evNoData1PortEnableIndex.setStatus('current')
evNoData1PortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 3, 12, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData1PortEnable.setStatus('current')
evNoData1Exclusions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 3, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData1Exclusions.setStatus('current')
evNoData1Days = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 3, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData1Days.setStatus('current')
evNoData2Enable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 4, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData2Enable.setStatus('current')
evNoData2Actions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 4, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData2Actions.setStatus('current')
evNoData2Message = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 4, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData2Message.setStatus('current')
evNoData2TrapNum = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(505, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData2TrapNum.setStatus('current')
evNoData2Class = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 4, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData2Class.setStatus('current')
evNoData2Sched1Begin = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 4, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData2Sched1Begin.setStatus('current')
evNoData2Sched1End = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 4, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData2Sched1End.setStatus('current')
evNoData2Sched1Duration = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 4, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData2Sched1Duration.setStatus('current')
evNoData2Sched2Begin = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 4, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData2Sched2Begin.setStatus('current')
evNoData2Sched2End = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 4, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData2Sched2End.setStatus('current')
evNoData2Sched2Duration = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 4, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData2Sched2Duration.setStatus('current')
evNoData2PortEnableTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 4, 12), )
if mibBuilder.loadTexts: evNoData2PortEnableTable.setStatus('current')
evNoData2PortEnableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 4, 12, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "evNoData2PortEnableIndex"))
if mibBuilder.loadTexts: evNoData2PortEnableEntry.setStatus('current')
evNoData2PortEnableIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 4, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: evNoData2PortEnableIndex.setStatus('current')
evNoData2PortEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 4, 12, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData2PortEnable.setStatus('current')
evNoData2Exclusions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 4, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData2Exclusions.setStatus('current')
evNoData2Days = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 4, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoData2Days.setStatus('current')
evSched1Enable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 5, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Enable.setStatus('current')
evSched1Actions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 5, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Actions.setStatus('current')
evSched1Message = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 5, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Message.setStatus('current')
evSched1TrapNum = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 5, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1TrapNum.setStatus('current')
evSched1Class = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 5, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Class.setStatus('current')
evSched1Sunday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 5, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Sunday.setStatus('current')
evSched1Monday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 5, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Monday.setStatus('current')
evSched1Tuesday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 5, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Tuesday.setStatus('current')
evSched1Wednesday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 5, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Wednesday.setStatus('current')
evSched1Thursday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 5, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Thursday.setStatus('current')
evSched1Friday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 5, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Friday.setStatus('current')
evSched1Saturday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 5, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Saturday.setStatus('current')
evSched1Exclusions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 5, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched1Exclusions.setStatus('current')
evSched2Enable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 6, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Enable.setStatus('current')
evSched2Actions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 6, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Actions.setStatus('current')
evSched2Message = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 6, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Message.setStatus('current')
evSched2TrapNum = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 6, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2TrapNum.setStatus('current')
evSched2Class = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 6, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Class.setStatus('current')
evSched2Sunday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 6, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Sunday.setStatus('current')
evSched2Monday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 6, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Monday.setStatus('current')
evSched2Tuesday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 6, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Tuesday.setStatus('current')
evSched2Wednesday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 6, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Wednesday.setStatus('current')
evSched2Thursday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 6, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Thursday.setStatus('current')
evSched2Friday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 6, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Friday.setStatus('current')
evSched2Saturday = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 6, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Saturday.setStatus('current')
evSched2Exclusions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 6, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evSched2Exclusions.setStatus('current')
evShskLowTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 7), )
if mibBuilder.loadTexts: evShskLowTable.setStatus('current')
evShskLowEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 7, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "evShskLowIndex"))
if mibBuilder.loadTexts: evShskLowEntry.setStatus('current')
evShskLowIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: evShskLowIndex.setStatus('current')
evShskLowEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 7, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskLowEnable.setStatus('current')
evShskLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 7, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskLowActions.setStatus('current')
evShskLowMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 7, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskLowMessage.setStatus('current')
evShskLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 7, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskLowClass.setStatus('current')
evShskLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 7, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskLowTrapNum.setStatus('current')
evShskHighTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 8), )
if mibBuilder.loadTexts: evShskHighTable.setStatus('current')
evShskHighEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 8, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "evShskHighIndex"))
if mibBuilder.loadTexts: evShskHighEntry.setStatus('current')
evShskHighIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: evShskHighIndex.setStatus('current')
evShskHighEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 8, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskHighEnable.setStatus('current')
evShskHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 8, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskHighActions.setStatus('current')
evShskHighMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 8, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskHighMessage.setStatus('current')
evShskHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 8, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskHighClass.setStatus('current')
evShskHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 8, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evShskHighTrapNum.setStatus('current')
evNoSensorTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 9, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoSensorTimeout.setStatus('current')
evNoSensorActions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 9, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoSensorActions.setStatus('current')
evNoSensorTrapNum = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 9, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoSensorTrapNum.setStatus('current')
evNoSensorClass = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 9, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evNoSensorClass.setStatus('current')
fuelSensorGeneralTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1), )
if mibBuilder.loadTexts: fuelSensorGeneralTable.setStatus('current')
fsGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "fsGenIndex"))
if mibBuilder.loadTexts: fsGenEntry.setStatus('current')
fsGenIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsGenIndex.setStatus('current')
fsGenName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenName.setStatus('current')
fsGenSensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenSensorType.setStatus('current')
fsGenDistanceUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenDistanceUnit.setStatus('current')
fsGenRawValueTop = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenRawValueTop.setStatus('current')
fsGenTopOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenTopOffset.setStatus('current')
fsGenRawValueBottom = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenRawValueBottom.setStatus('current')
fsGenBottomOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenBottomOffset.setStatus('current')
fsGenInputES = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenInputES.setStatus('current')
fsGenInputPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenInputPoint.setStatus('current')
fsGenFilterAveraging = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenFilterAveraging.setStatus('current')
fsGenSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenSysrepEnable.setStatus('current')
fsGenSysrepThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenSysrepThreshold.setStatus('current')
fsGenSysrepLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenSysrepLimit.setStatus('current')
fsGenSysrepPackage = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenSysrepPackage.setStatus('current')
fsGenSysrepType = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenSysrepType.setStatus('current')
fsGenEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenEnable.setStatus('current')
fsGenFuelType = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 1, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsGenFuelType.setStatus('current')
fuelSensorTankTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 2), )
if mibBuilder.loadTexts: fuelSensorTankTable.setStatus('current')
fsTankEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 2, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "fsTankIndex"))
if mibBuilder.loadTexts: fsTankEntry.setStatus('current')
fsTankIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsTankIndex.setStatus('current')
fsTankHeight = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsTankHeight.setStatus('current')
fsTankDimA = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsTankDimA.setStatus('current')
fsTankDimB = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsTankDimB.setStatus('current')
fsTankVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsTankVolume.setStatus('current')
fsTankVolumeUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 2, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsTankVolumeUnit.setStatus('current')
fsTankShape = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsTankShape.setStatus('current')
fuelSensorCustomTankTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 3), )
if mibBuilder.loadTexts: fuelSensorCustomTankTable.setStatus('current')
fsCustomTankEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 3, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "fsCustomTankIndexFS"), (0, "SITEBOSS-530-STD-MIB", "fsCustomTankIndexDatum"))
if mibBuilder.loadTexts: fsCustomTankEntry.setStatus('current')
fsCustomTankIndexFS = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsCustomTankIndexFS.setStatus('current')
fsCustomTankIndexDatum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsCustomTankIndexDatum.setStatus('current')
fsCustomTankHeight = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 3, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsCustomTankHeight.setStatus('current')
fsCustomTankVolume = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 3, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsCustomTankVolume.setStatus('current')
fuelSensorVolumeTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4), )
if mibBuilder.loadTexts: fuelSensorVolumeTable.setStatus('current')
fsVolumeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "fsVolumeIndex"))
if mibBuilder.loadTexts: fsVolumeEntry.setStatus('current')
fsVolumeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsVolumeIndex.setStatus('current')
fsVolumeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeEnable.setStatus('current')
fsVolumeDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeDeadband.setStatus('current')
fsVolumeVHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeVHighValue.setStatus('current')
fsVolumeVHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeVHighActions.setStatus('current')
fsVolumeVHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(519, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeVHighTrapNum.setStatus('current')
fsVolumeVHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeVHighClass.setStatus('current')
fsVolumeHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeHighValue.setStatus('current')
fsVolumeHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeHighActions.setStatus('current')
fsVolumeHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(519, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeHighTrapNum.setStatus('current')
fsVolumeHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeHighClass.setStatus('current')
fsVolumeNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeNormalActions.setStatus('current')
fsVolumeNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(519, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeNormalTrapNum.setStatus('current')
fsVolumeNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeNormalClass.setStatus('current')
fsVolumeLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeLowValue.setStatus('current')
fsVolumeLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeLowActions.setStatus('current')
fsVolumeLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(519, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeLowTrapNum.setStatus('current')
fsVolumeLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeLowClass.setStatus('current')
fsVolumeVLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeVLowValue.setStatus('current')
fsVolumeVLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeVLowActions.setStatus('current')
fsVolumeVLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(519, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeVLowTrapNum.setStatus('current')
fsVolumeVLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 4, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsVolumeVLowClass.setStatus('current')
fuelSensorDisconnectTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 5), )
if mibBuilder.loadTexts: fuelSensorDisconnectTable.setStatus('current')
fsDiscEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 5, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "fsDiscIndex"))
if mibBuilder.loadTexts: fsDiscEntry.setStatus('current')
fsDiscIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsDiscIndex.setStatus('current')
fsDiscEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsDiscEnable.setStatus('current')
fsDiscHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsDiscHighValue.setStatus('current')
fsDiscLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 5, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsDiscLowValue.setStatus('current')
fsDiscActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 5, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsDiscActions.setStatus('current')
fsDiscTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(515, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsDiscTrapNum.setStatus('current')
fsDiscClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 5, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsDiscClass.setStatus('current')
fsDiscNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 5, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsDiscNormalActions.setStatus('current')
fsDiscNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(515, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsDiscNormalTrapNum.setStatus('current')
fsDiscNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 11, 5, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsDiscNormalClass.setStatus('current')
acpmGeneralTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 1), )
if mibBuilder.loadTexts: acpmGeneralTable.setStatus('current')
acpmGenEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 1, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "acpmGenIndex"))
if mibBuilder.loadTexts: acpmGenEntry.setStatus('current')
acpmGenIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmGenIndex.setStatus('current')
acpmGenDevice = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmGenDevice.setStatus('current')
acpmGenName = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmGenName.setStatus('current')
acpmGenAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 247))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmGenAddress.setStatus('current')
acpmGenPtRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmGenPtRatio.setStatus('current')
acpmGenCtRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmGenCtRatio.setStatus('current')
acpmGenPowerType = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 1, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmGenPowerType.setStatus('current')
acpmGenSysrepPackage = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmGenSysrepPackage.setStatus('current')
acpmGenSysrepType = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 1, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmGenSysrepType.setStatus('current')
acpmGenEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 1, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmGenEnable.setStatus('current')
acpmAvgVoltageTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2), )
if mibBuilder.loadTexts: acpmAvgVoltageTable.setStatus('current')
acpmAvgVoltageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "acpmAvgVoltageIndex"))
if mibBuilder.loadTexts: acpmAvgVoltageEntry.setStatus('current')
acpmAvgVoltageIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmAvgVoltageIndex.setStatus('current')
acpmAvgVoltageEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageEnable.setStatus('current')
acpmAvgVoltageDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageDeadband.setStatus('current')
acpmAvgVoltageVHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageVHighValue.setStatus('current')
acpmAvgVoltageVHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageVHighActions.setStatus('current')
acpmAvgVoltageVHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(520, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageVHighTrapNum.setStatus('current')
acpmAvgVoltageVHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageVHighClass.setStatus('current')
acpmAvgVoltageHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageHighValue.setStatus('current')
acpmAvgVoltageHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageHighActions.setStatus('current')
acpmAvgVoltageHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(520, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageHighTrapNum.setStatus('current')
acpmAvgVoltageHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageHighClass.setStatus('current')
acpmAvgVoltageNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageNormalActions.setStatus('current')
acpmAvgVoltageNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(520, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageNormalTrapNum.setStatus('current')
acpmAvgVoltageNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageNormalClass.setStatus('current')
acpmAvgVoltageLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageLowValue.setStatus('current')
acpmAvgVoltageLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageLowActions.setStatus('current')
acpmAvgVoltageLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(520, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageLowTrapNum.setStatus('current')
acpmAvgVoltageLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageLowClass.setStatus('current')
acpmAvgVoltageVLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageVLowValue.setStatus('current')
acpmAvgVoltageVLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageVLowActions.setStatus('current')
acpmAvgVoltageVLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(520, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageVLowTrapNum.setStatus('current')
acpmAvgVoltageVLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageVLowClass.setStatus('current')
acpmAvgVoltageSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageSysrepEnable.setStatus('current')
acpmAvgVoltageSysrepThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageSysrepThreshold.setStatus('current')
acpmAvgVoltageSysrepLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 2, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgVoltageSysrepLimit.setStatus('current')
acpmAvgCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3), )
if mibBuilder.loadTexts: acpmAvgCurrentTable.setStatus('current')
acpmAvgCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "acpmAvgCurrentIndex"))
if mibBuilder.loadTexts: acpmAvgCurrentEntry.setStatus('current')
acpmAvgCurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmAvgCurrentIndex.setStatus('current')
acpmAvgCurrentEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentEnable.setStatus('current')
acpmAvgCurrentDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentDeadband.setStatus('current')
acpmAvgCurrentVHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentVHighValue.setStatus('current')
acpmAvgCurrentVHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentVHighActions.setStatus('current')
acpmAvgCurrentVHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(521, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentVHighTrapNum.setStatus('current')
acpmAvgCurrentVHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentVHighClass.setStatus('current')
acpmAvgCurrentHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentHighValue.setStatus('current')
acpmAvgCurrentHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentHighActions.setStatus('current')
acpmAvgCurrentHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(521, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentHighTrapNum.setStatus('current')
acpmAvgCurrentHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentHighClass.setStatus('current')
acpmAvgCurrentNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentNormalActions.setStatus('current')
acpmAvgCurrentNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(521, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentNormalTrapNum.setStatus('current')
acpmAvgCurrentNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentNormalClass.setStatus('current')
acpmAvgCurrentLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentLowValue.setStatus('current')
acpmAvgCurrentLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentLowActions.setStatus('current')
acpmAvgCurrentLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(521, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentLowTrapNum.setStatus('current')
acpmAvgCurrentLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentLowClass.setStatus('current')
acpmAvgCurrentVLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentVLowValue.setStatus('current')
acpmAvgCurrentVLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentVLowActions.setStatus('current')
acpmAvgCurrentVLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(521, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentVLowTrapNum.setStatus('current')
acpmAvgCurrentVLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentVLowClass.setStatus('current')
acpmAvgCurrentSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentSysrepEnable.setStatus('current')
acpmAvgCurrentSysrepThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentSysrepThreshold.setStatus('current')
acpmAvgCurrentSysrepLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 3, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmAvgCurrentSysrepLimit.setStatus('current')
acpmFreqTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4), )
if mibBuilder.loadTexts: acpmFreqTable.setStatus('current')
acpmFreqEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "acpmFreqIndex"))
if mibBuilder.loadTexts: acpmFreqEntry.setStatus('current')
acpmFreqIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmFreqIndex.setStatus('current')
acpmFreqEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqEnable.setStatus('current')
acpmFreqDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqDeadband.setStatus('current')
acpmFreqVHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqVHighValue.setStatus('current')
acpmFreqVHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqVHighActions.setStatus('current')
acpmFreqVHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(522, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqVHighTrapNum.setStatus('current')
acpmFreqVHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqVHighClass.setStatus('current')
acpmFreqHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqHighValue.setStatus('current')
acpmFreqHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqHighActions.setStatus('current')
acpmFreqHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(522, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqHighTrapNum.setStatus('current')
acpmFreqHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqHighClass.setStatus('current')
acpmFreqNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqNormalActions.setStatus('current')
acpmFreqNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(522, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqNormalTrapNum.setStatus('current')
acpmFreqNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqNormalClass.setStatus('current')
acpmFreqLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqLowValue.setStatus('current')
acpmFreqLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqLowActions.setStatus('current')
acpmFreqLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(522, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqLowTrapNum.setStatus('current')
acpmFreqLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqLowClass.setStatus('current')
acpmFreqVLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqVLowValue.setStatus('current')
acpmFreqVLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqVLowActions.setStatus('current')
acpmFreqVLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(522, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqVLowTrapNum.setStatus('current')
acpmFreqVLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqVLowClass.setStatus('current')
acpmFreqSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqSysrepEnable.setStatus('current')
acpmFreqSysrepThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqSysrepThreshold.setStatus('current')
acpmFreqSysrepLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 4, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmFreqSysrepLimit.setStatus('current')
acpmTotalRealPowerTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5), )
if mibBuilder.loadTexts: acpmTotalRealPowerTable.setStatus('current')
acpmTRPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "acpmTRPIndex"))
if mibBuilder.loadTexts: acpmTRPEntry.setStatus('current')
acpmTRPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmTRPIndex.setStatus('current')
acpmTRPEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPEnable.setStatus('current')
acpmTRPDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPDeadband.setStatus('current')
acpmTRPVHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPVHighValue.setStatus('current')
acpmTRPVHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPVHighActions.setStatus('current')
acpmTRPVHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(523, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPVHighTrapNum.setStatus('current')
acpmTRPVHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPVHighClass.setStatus('current')
acpmTRPHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPHighValue.setStatus('current')
acpmTRPHighActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPHighActions.setStatus('current')
acpmTRPHighTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(523, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPHighTrapNum.setStatus('current')
acpmTRPHighClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPHighClass.setStatus('current')
acpmTRPNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPNormalActions.setStatus('current')
acpmTRPNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(523, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPNormalTrapNum.setStatus('current')
acpmTRPNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPNormalClass.setStatus('current')
acpmTRPLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPLowValue.setStatus('current')
acpmTRPLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPLowActions.setStatus('current')
acpmTRPLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(523, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPLowTrapNum.setStatus('current')
acpmTRPLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPLowClass.setStatus('current')
acpmTRPVLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPVLowValue.setStatus('current')
acpmTRPVLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPVLowActions.setStatus('current')
acpmTRPVLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(523, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPVLowTrapNum.setStatus('current')
acpmTRPVLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPVLowClass.setStatus('current')
acpmTRPSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPSysrepEnable.setStatus('current')
acpmTRPSysrepThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 24), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPSysrepThreshold.setStatus('current')
acpmTRPSysrepLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 5, 1, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTRPSysrepLimit.setStatus('current')
acpmDisconnectTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 6), )
if mibBuilder.loadTexts: acpmDisconnectTable.setStatus('current')
acpmDisconnectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 6, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "acpmDisconnectIndex"))
if mibBuilder.loadTexts: acpmDisconnectEntry.setStatus('current')
acpmDisconnectIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmDisconnectIndex.setStatus('current')
acpmDisconnectEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 6, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmDisconnectEnable.setStatus('current')
acpmDisconnectActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 6, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmDisconnectActions.setStatus('current')
acpmDisconnectTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(524, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmDisconnectTrapNum.setStatus('current')
acpmDisconnectClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 6, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmDisconnectClass.setStatus('current')
acpmDisconnectNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 6, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmDisconnectNormalActions.setStatus('current')
acpmDisconnectNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(524, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmDisconnectNormalTrapNum.setStatus('current')
acpmDisconnectNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 6, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmDisconnectNormalClass.setStatus('current')
acpmTotalPowerFactorTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 7), )
if mibBuilder.loadTexts: acpmTotalPowerFactorTable.setStatus('current')
acpmTPFEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 7, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "acpmTPFIndex"))
if mibBuilder.loadTexts: acpmTPFEntry.setStatus('current')
acpmTPFIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: acpmTPFIndex.setStatus('current')
acpmTPFEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 7, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFEnable.setStatus('current')
acpmTPFDeadband = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 7, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFDeadband.setStatus('current')
acpmTPFNormalActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 7, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFNormalActions.setStatus('current')
acpmTPFNormalTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 7, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFNormalTrapNum.setStatus('current')
acpmTPFNormalClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 7, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFNormalClass.setStatus('current')
acpmTPFLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 7, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFLowValue.setStatus('current')
acpmTPFLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 7, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFLowActions.setStatus('current')
acpmTPFLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 7, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFLowTrapNum.setStatus('current')
acpmTPFLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 7, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFLowClass.setStatus('current')
acpmTPFVLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 7, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFVLowValue.setStatus('current')
acpmTPFVLowActions = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 7, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFVLowActions.setStatus('current')
acpmTPFVLowTrapNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 7, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFVLowTrapNum.setStatus('current')
acpmTPFVLowClass = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 7, 1, 14), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFVLowClass.setStatus('current')
acpmTPFSysrepEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 7, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFSysrepEnable.setStatus('current')
acpmTPFSysrepThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 7, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFSysrepThreshold.setStatus('current')
acpmTPFSysrepLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 12, 7, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: acpmTPFSysrepLimit.setStatus('current')
evResetEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 16, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evResetEnable.setStatus('current')
evResetDelay = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 16, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evResetDelay.setStatus('current')
evResetActions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 16, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evResetActions.setStatus('current')
evResetMessage = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 16, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evResetMessage.setStatus('current')
evResetTrapnum = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 16, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(543, 1199))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evResetTrapnum.setStatus('current')
evResetClass = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 12, 16, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: evResetClass.setStatus('current')
actionCallNumberTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 1), )
if mibBuilder.loadTexts: actionCallNumberTable.setStatus('current')
actionCallNumberEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 1, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "actionCallNumberIndex"))
if mibBuilder.loadTexts: actionCallNumberEntry.setStatus('current')
actionCallNumberIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: actionCallNumberIndex.setStatus('current')
actionCallNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionCallNumber.setStatus('current')
actionPagerTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 2), )
if mibBuilder.loadTexts: actionPagerTable.setStatus('current')
actionPagerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 2, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "actionPagerIndex"))
if mibBuilder.loadTexts: actionPagerEntry.setStatus('current')
actionPagerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: actionPagerIndex.setStatus('current')
actionPagerType = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionPagerType.setStatus('current')
actionPagerNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionPagerNumber.setStatus('current')
actionPagerID = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionPagerID.setStatus('current')
actionPagerMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionPagerMessage.setStatus('current')
actionPagerPostCalloutDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionPagerPostCalloutDelay.setStatus('current')
actionPagerPostIDDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionPagerPostIDDelay.setStatus('current')
actionSchedEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionSchedEnable.setStatus('current')
actionSchedBegin = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionSchedBegin.setStatus('current')
actionSchedEnd = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 3, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionSchedEnd.setStatus('current')
actionSchedWeekdaysOnly = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 3, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionSchedWeekdaysOnly.setStatus('current')
actionAsentriaRequireAck = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 4, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionAsentriaRequireAck.setStatus('current')
actionAsentriaVersion = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 4, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionAsentriaVersion.setStatus('current')
actionAsentriaTCPPort = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 4, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionAsentriaTCPPort.setStatus('current')
actionHostTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 6), )
if mibBuilder.loadTexts: actionHostTable.setStatus('current')
actionHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 6, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "actionHostIndex"))
if mibBuilder.loadTexts: actionHostEntry.setStatus('current')
actionHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: actionHostIndex.setStatus('current')
actionHost = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 6, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionHost.setStatus('current')
actionEmailTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 7), )
if mibBuilder.loadTexts: actionEmailTable.setStatus('current')
actionEmailEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 7, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "actionEmailIndex"))
if mibBuilder.loadTexts: actionEmailEntry.setStatus('current')
actionEmailIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: actionEmailIndex.setStatus('current')
actionEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 7, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: actionEmail.setStatus('current')
actionParseError = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 14, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: actionParseError.setStatus('current')
sysTimeAutoDST = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTimeAutoDST.setStatus('current')
sysTimeGMTOffset = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTimeGMTOffset.setStatus('current')
sysTimeGMTDirection = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTimeGMTDirection.setStatus('current')
sysTimeNetEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 1, 4, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTimeNetEnable.setStatus('current')
sysTimeNetHostTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 1, 4, 2), )
if mibBuilder.loadTexts: sysTimeNetHostTable.setStatus('current')
sysTimeNetHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 1, 4, 2, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "sysTimeNetHostIndex"))
if mibBuilder.loadTexts: sysTimeNetHostEntry.setStatus('current')
sysTimeNetHostIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysTimeNetHostIndex.setStatus('current')
sysTimeNetHost = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 1, 4, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTimeNetHost.setStatus('current')
sysPTTimeout = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 2, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPTTimeout.setStatus('current')
sysPTEndPause = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPTEndPause.setStatus('current')
sysPTJoinable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 2, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPTJoinable.setStatus('current')
sysMTU = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysMTU.setStatus('current')
sysAnswerString = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysAnswerString.setStatus('current')
sysEventFileID = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysEventFileID.setStatus('current')
sysEscapeCharacter = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysEscapeCharacter.setStatus('current')
sysTimeStampTimeFormat = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 8, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTimeStampTimeFormat.setStatus('current')
sysTimeStampDateFormat = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 8, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTimeStampDateFormat.setStatus('current')
sysTimeStampSpaceAfter = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 8, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysTimeStampSpaceAfter.setStatus('current')
sysLogMode = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 9, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLogMode.setStatus('current')
sysLoghost = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 9, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLoghost.setStatus('current')
sysLogFilter = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 9, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLogFilter.setStatus('current')
sysLogFileSize = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 9, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLogFileSize.setStatus('current')
sysLogFileCount = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 9, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLogFileCount.setStatus('current')
sysLogListenPort = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 9, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLogListenPort.setStatus('current')
sysCRDBCapacity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 10, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysCRDBCapacity.setStatus('current')
sysCRDBPercentFull = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 10, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysCRDBPercentFull.setStatus('current')
sysCRDBFileIDTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 10, 3), )
if mibBuilder.loadTexts: sysCRDBFileIDTable.setStatus('current')
sysCRDBFileIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 10, 3, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "sysCRDBFileIDIndex"))
if mibBuilder.loadTexts: sysCRDBFileIDEntry.setStatus('current')
sysCRDBFileIDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 10, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysCRDBFileIDIndex.setStatus('current')
sysCRDBFileID = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 10, 3, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysCRDBFileID.setStatus('current')
sysCRDBFileEnforceMinTable = MibTable((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 10, 4), )
if mibBuilder.loadTexts: sysCRDBFileEnforceMinTable.setStatus('current')
sysCRDBFileEnforceMinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 10, 4, 1), ).setIndexNames((0, "SITEBOSS-530-STD-MIB", "sysCRDBFileEnforceMinIndex"))
if mibBuilder.loadTexts: sysCRDBFileEnforceMinEntry.setStatus('current')
sysCRDBFileEnforceMinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 10, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysCRDBFileEnforceMinIndex.setStatus('current')
sysCRDBFileEnforceMin = MibTableColumn((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 10, 4, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysCRDBFileEnforceMin.setStatus('current')
sysCharMask = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 11), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysCharMask.setStatus('current')
sysPrompt = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysPrompt.setStatus('current')
sysBootStatus = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysBootStatus.setStatus('current')
sysLocLatitude = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 14, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLocLatitude.setStatus('current')
sysLocLongitude = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 14, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLocLongitude.setStatus('current')
sysLocXOffset = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 14, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLocXOffset.setStatus('current')
sysLocYOffset = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 14, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLocYOffset.setStatus('current')
sysLocAngle = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 14, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLocAngle.setStatus('current')
sysLocAltitude = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 14, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysLocAltitude.setStatus('current')
sysAMManufacturer = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 15, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysAMManufacturer.setStatus('current')
sysAMProduct = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 15, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysAMProduct.setStatus('current')
sysAMSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 15, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysAMSerialNumber.setStatus('current')
sysAMHardwareOptions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 15, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysAMHardwareOptions.setStatus('current')
sysAMSoftwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 15, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sysAMSoftwareVersion.setStatus('current')
sysAMSiteName = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 16, 15, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sysAMSiteName.setStatus('current')
auditLogEnable = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 17, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogEnable.setStatus('current')
auditLogStoreResets = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 17, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStoreResets.setStatus('current')
auditLogStoreCommands = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 17, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStoreCommands.setStatus('current')
auditLogStoreOutputs = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 17, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStoreOutputs.setStatus('current')
auditLogStoreAlarmActions = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 17, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStoreAlarmActions.setStatus('current')
auditLogStorePwdFailures = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 17, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStorePwdFailures.setStatus('current')
auditLogStoreLogins = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 17, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStoreLogins.setStatus('current')
auditLogStoreSHSK = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 17, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStoreSHSK.setStatus('current')
auditLogStorePassthrough = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 17, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStorePassthrough.setStatus('current')
auditLogStoreInactivity = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 17, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStoreInactivity.setStatus('current')
auditLogStorePolling = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 17, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogStorePolling.setStatus('current')
auditLogMaxSize = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 2, 17, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: auditLogMaxSize.setStatus('current')
siteName = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 3, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: siteName.setStatus('current')
thisProduct = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 3, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: thisProduct.setStatus('current')
stockTrapString = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 3, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stockTrapString.setStatus('current')
trapEventTypeNumber = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapEventTypeNumber.setStatus('current')
trapEventTypeName = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 3, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapEventTypeName.setStatus('current')
trapIncludedValue = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapIncludedValue.setStatus('current')
trapIncludedString = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 3, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapIncludedString.setStatus('current')
trapTypeString = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 3, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapTypeString.setStatus('current')
trapEventClassNumber = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 3, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapEventClassNumber.setStatus('current')
trapEventClassName = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 3, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapEventClassName.setStatus('current')
keyInterface = MibScalar((1, 3, 6, 1, 4, 1, 3052, 12, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: keyInterface.setStatus('current')
s530StockContactClosureTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 110)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530StockContactClosureTrap.setStatus('current')
s530StockTempTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 120)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530StockTempTrap.setStatus('current')
s530StockHumidityTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 130)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530StockHumidityTrap.setStatus('current')
s530StockAnalogTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 140)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530StockAnalogTrap.setStatus('current')
s530StockOutputTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 150)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530StockOutputTrap.setStatus('current')
s530StockPDCurrentTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 180)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530StockPDCurrentTrap.setStatus('current')
s530StockPDVoltageTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 190)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530StockPDVoltageTrap.setStatus('current')
s530StockPDFuseTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 210)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530StockPDFuseTrap.setStatus('current')
s530StockDbasePfullTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 501)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530StockDbasePfullTrap.setStatus('current')
s530StockDataAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 503)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530StockDataAlarmTrap.setStatus('current')
s530StockNoDataAlarmTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 505)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530StockNoDataAlarmTrap.setStatus('current')
s530StockSchedTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 506)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530StockSchedTrap.setStatus('current')
s530StockImmediateTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 507)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530StockImmediateTrap.setStatus('current')
s530StockCTSTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 510)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530StockCTSTrap.setStatus('current')
s530CPEDownTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 511)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530CPEDownTrap.setStatus('current')
s530FuelSensorDisconnectTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 515)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530FuelSensorDisconnectTrap.setStatus('current')
s530FuelSensorVolumeTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 519)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530FuelSensorVolumeTrap.setStatus('current')
s530ACPowerMonitorAvgVoltageTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 520)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530ACPowerMonitorAvgVoltageTrap.setStatus('current')
s530ACPowerMonitorAvgCurrentTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 521)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530ACPowerMonitorAvgCurrentTrap.setStatus('current')
s530ACPowerMonitorFrequencyTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 522)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530ACPowerMonitorFrequencyTrap.setStatus('current')
s530ACPowerMonitorTRPTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 523)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530ACPowerMonitorTRPTrap.setStatus('current')
s530ACPowerMonitorDisconnectTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 524)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530ACPowerMonitorDisconnectTrap.setStatus('current')
s530ACTotalPowerFactorTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 540)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530ACTotalPowerFactorTrap.setStatus('current')
s530ResetTrap = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 543)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "stockTrapString"), ("SITEBOSS-530-STD-MIB", "trapTypeString"))
if mibBuilder.loadTexts: s530ResetTrap.setStatus('current')
s530UserTrap1000 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1000)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1000.setStatus('current')
s530UserTrap1001 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1001)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1001.setStatus('current')
s530UserTrap1002 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1002)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1002.setStatus('current')
s530UserTrap1003 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1003)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1003.setStatus('current')
s530UserTrap1004 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1004)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1004.setStatus('current')
s530UserTrap1005 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1005)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1005.setStatus('current')
s530UserTrap1006 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1006)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1006.setStatus('current')
s530UserTrap1007 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1007)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1007.setStatus('current')
s530UserTrap1008 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1008)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1008.setStatus('current')
s530UserTrap1009 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1009)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1009.setStatus('current')
s530UserTrap1010 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1010)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1010.setStatus('current')
s530UserTrap1011 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1011)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1011.setStatus('current')
s530UserTrap1012 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1012)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1012.setStatus('current')
s530UserTrap1013 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1013)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1013.setStatus('current')
s530UserTrap1014 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1014)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1014.setStatus('current')
s530UserTrap1015 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1015)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1015.setStatus('current')
s530UserTrap1016 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1016)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1016.setStatus('current')
s530UserTrap1017 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1017)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1017.setStatus('current')
s530UserTrap1018 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1018)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1018.setStatus('current')
s530UserTrap1019 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1019)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1019.setStatus('current')
s530UserTrap1020 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1020)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1020.setStatus('current')
s530UserTrap1021 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1021)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1021.setStatus('current')
s530UserTrap1022 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1022)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1022.setStatus('current')
s530UserTrap1023 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1023)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1023.setStatus('current')
s530UserTrap1024 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1024)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1024.setStatus('current')
s530UserTrap1025 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1025)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1025.setStatus('current')
s530UserTrap1026 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1026)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1026.setStatus('current')
s530UserTrap1027 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1027)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1027.setStatus('current')
s530UserTrap1028 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1028)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1028.setStatus('current')
s530UserTrap1029 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1029)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1029.setStatus('current')
s530UserTrap1030 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1030)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1030.setStatus('current')
s530UserTrap1031 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1031)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1031.setStatus('current')
s530UserTrap1032 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1032)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1032.setStatus('current')
s530UserTrap1033 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1033)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1033.setStatus('current')
s530UserTrap1034 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1034)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1034.setStatus('current')
s530UserTrap1035 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1035)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1035.setStatus('current')
s530UserTrap1036 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1036)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1036.setStatus('current')
s530UserTrap1037 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1037)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1037.setStatus('current')
s530UserTrap1038 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1038)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1038.setStatus('current')
s530UserTrap1039 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1039)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1039.setStatus('current')
s530UserTrap1040 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1040)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1040.setStatus('current')
s530UserTrap1041 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1041)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1041.setStatus('current')
s530UserTrap1042 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1042)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1042.setStatus('current')
s530UserTrap1043 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1043)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1043.setStatus('current')
s530UserTrap1044 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1044)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1044.setStatus('current')
s530UserTrap1045 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1045)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1045.setStatus('current')
s530UserTrap1046 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1046)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1046.setStatus('current')
s530UserTrap1047 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1047)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1047.setStatus('current')
s530UserTrap1048 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1048)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1048.setStatus('current')
s530UserTrap1049 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1049)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1049.setStatus('current')
s530UserTrap1050 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1050)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1050.setStatus('current')
s530UserTrap1051 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1051)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1051.setStatus('current')
s530UserTrap1052 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1052)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1052.setStatus('current')
s530UserTrap1053 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1053)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1053.setStatus('current')
s530UserTrap1054 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1054)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1054.setStatus('current')
s530UserTrap1055 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1055)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1055.setStatus('current')
s530UserTrap1056 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1056)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1056.setStatus('current')
s530UserTrap1057 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1057)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1057.setStatus('current')
s530UserTrap1058 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1058)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1058.setStatus('current')
s530UserTrap1059 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1059)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1059.setStatus('current')
s530UserTrap1060 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1060)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1060.setStatus('current')
s530UserTrap1061 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1061)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1061.setStatus('current')
s530UserTrap1062 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1062)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1062.setStatus('current')
s530UserTrap1063 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1063)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1063.setStatus('current')
s530UserTrap1064 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1064)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1064.setStatus('current')
s530UserTrap1065 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1065)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1065.setStatus('current')
s530UserTrap1066 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1066)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1066.setStatus('current')
s530UserTrap1067 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1067)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1067.setStatus('current')
s530UserTrap1068 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1068)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1068.setStatus('current')
s530UserTrap1069 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1069)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1069.setStatus('current')
s530UserTrap1070 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1070)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1070.setStatus('current')
s530UserTrap1071 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1071)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1071.setStatus('current')
s530UserTrap1072 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1072)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1072.setStatus('current')
s530UserTrap1073 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1073)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1073.setStatus('current')
s530UserTrap1074 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1074)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1074.setStatus('current')
s530UserTrap1075 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1075)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1075.setStatus('current')
s530UserTrap1076 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1076)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1076.setStatus('current')
s530UserTrap1077 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1077)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1077.setStatus('current')
s530UserTrap1078 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1078)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1078.setStatus('current')
s530UserTrap1079 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1079)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1079.setStatus('current')
s530UserTrap1080 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1080)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1080.setStatus('current')
s530UserTrap1081 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1081)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1081.setStatus('current')
s530UserTrap1082 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1082)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1082.setStatus('current')
s530UserTrap1083 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1083)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1083.setStatus('current')
s530UserTrap1084 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1084)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1084.setStatus('current')
s530UserTrap1085 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1085)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1085.setStatus('current')
s530UserTrap1086 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1086)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1086.setStatus('current')
s530UserTrap1087 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1087)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1087.setStatus('current')
s530UserTrap1088 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1088)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1088.setStatus('current')
s530UserTrap1089 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1089)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1089.setStatus('current')
s530UserTrap1090 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1090)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1090.setStatus('current')
s530UserTrap1091 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1091)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1091.setStatus('current')
s530UserTrap1092 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1092)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1092.setStatus('current')
s530UserTrap1093 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1093)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1093.setStatus('current')
s530UserTrap1094 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1094)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1094.setStatus('current')
s530UserTrap1095 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1095)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1095.setStatus('current')
s530UserTrap1096 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1096)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1096.setStatus('current')
s530UserTrap1097 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1097)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1097.setStatus('current')
s530UserTrap1098 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1098)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1098.setStatus('current')
s530UserTrap1099 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1099)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1099.setStatus('current')
s530UserTrap1100 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1100)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1100.setStatus('current')
s530UserTrap1101 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1101)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1101.setStatus('current')
s530UserTrap1102 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1102)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1102.setStatus('current')
s530UserTrap1103 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1103)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1103.setStatus('current')
s530UserTrap1104 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1104)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1104.setStatus('current')
s530UserTrap1105 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1105)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1105.setStatus('current')
s530UserTrap1106 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1106)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1106.setStatus('current')
s530UserTrap1107 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1107)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1107.setStatus('current')
s530UserTrap1108 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1108)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1108.setStatus('current')
s530UserTrap1109 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1109)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1109.setStatus('current')
s530UserTrap1110 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1110)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1110.setStatus('current')
s530UserTrap1111 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1111)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1111.setStatus('current')
s530UserTrap1112 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1112)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1112.setStatus('current')
s530UserTrap1113 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1113)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1113.setStatus('current')
s530UserTrap1114 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1114)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1114.setStatus('current')
s530UserTrap1115 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1115)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1115.setStatus('current')
s530UserTrap1116 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1116)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1116.setStatus('current')
s530UserTrap1117 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1117)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1117.setStatus('current')
s530UserTrap1118 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1118)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1118.setStatus('current')
s530UserTrap1119 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1119)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1119.setStatus('current')
s530UserTrap1120 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1120)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1120.setStatus('current')
s530UserTrap1121 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1121)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1121.setStatus('current')
s530UserTrap1122 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1122)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1122.setStatus('current')
s530UserTrap1123 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1123)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1123.setStatus('current')
s530UserTrap1124 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1124)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1124.setStatus('current')
s530UserTrap1125 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1125)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1125.setStatus('current')
s530UserTrap1126 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1126)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1126.setStatus('current')
s530UserTrap1127 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1127)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1127.setStatus('current')
s530UserTrap1128 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1128)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1128.setStatus('current')
s530UserTrap1129 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1129)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1129.setStatus('current')
s530UserTrap1130 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1130)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1130.setStatus('current')
s530UserTrap1131 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1131)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1131.setStatus('current')
s530UserTrap1132 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1132)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1132.setStatus('current')
s530UserTrap1133 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1133)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1133.setStatus('current')
s530UserTrap1134 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1134)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1134.setStatus('current')
s530UserTrap1135 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1135)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1135.setStatus('current')
s530UserTrap1136 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1136)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1136.setStatus('current')
s530UserTrap1137 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1137)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1137.setStatus('current')
s530UserTrap1138 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1138)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1138.setStatus('current')
s530UserTrap1139 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1139)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1139.setStatus('current')
s530UserTrap1140 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1140)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1140.setStatus('current')
s530UserTrap1141 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1141)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1141.setStatus('current')
s530UserTrap1142 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1142)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1142.setStatus('current')
s530UserTrap1143 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1143)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1143.setStatus('current')
s530UserTrap1144 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1144)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1144.setStatus('current')
s530UserTrap1145 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1145)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1145.setStatus('current')
s530UserTrap1146 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1146)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1146.setStatus('current')
s530UserTrap1147 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1147)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1147.setStatus('current')
s530UserTrap1148 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1148)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1148.setStatus('current')
s530UserTrap1149 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1149)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1149.setStatus('current')
s530UserTrap1150 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1150)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1150.setStatus('current')
s530UserTrap1151 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1151)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1151.setStatus('current')
s530UserTrap1152 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1152)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1152.setStatus('current')
s530UserTrap1153 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1153)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1153.setStatus('current')
s530UserTrap1154 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1154)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1154.setStatus('current')
s530UserTrap1155 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1155)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1155.setStatus('current')
s530UserTrap1156 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1156)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1156.setStatus('current')
s530UserTrap1157 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1157)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1157.setStatus('current')
s530UserTrap1158 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1158)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1158.setStatus('current')
s530UserTrap1159 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1159)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1159.setStatus('current')
s530UserTrap1160 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1160)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1160.setStatus('current')
s530UserTrap1161 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1161)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1161.setStatus('current')
s530UserTrap1162 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1162)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1162.setStatus('current')
s530UserTrap1163 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1163)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1163.setStatus('current')
s530UserTrap1164 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1164)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1164.setStatus('current')
s530UserTrap1165 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1165)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1165.setStatus('current')
s530UserTrap1166 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1166)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1166.setStatus('current')
s530UserTrap1167 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1167)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1167.setStatus('current')
s530UserTrap1168 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1168)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1168.setStatus('current')
s530UserTrap1169 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1169)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1169.setStatus('current')
s530UserTrap1170 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1170)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1170.setStatus('current')
s530UserTrap1171 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1171)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1171.setStatus('current')
s530UserTrap1172 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1172)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1172.setStatus('current')
s530UserTrap1173 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1173)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1173.setStatus('current')
s530UserTrap1174 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1174)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1174.setStatus('current')
s530UserTrap1175 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1175)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1175.setStatus('current')
s530UserTrap1176 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1176)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1176.setStatus('current')
s530UserTrap1177 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1177)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1177.setStatus('current')
s530UserTrap1178 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1178)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1178.setStatus('current')
s530UserTrap1179 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1179)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1179.setStatus('current')
s530UserTrap1180 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1180)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1180.setStatus('current')
s530UserTrap1181 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1181)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1181.setStatus('current')
s530UserTrap1182 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1182)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1182.setStatus('current')
s530UserTrap1183 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1183)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1183.setStatus('current')
s530UserTrap1184 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1184)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1184.setStatus('current')
s530UserTrap1185 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1185)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1185.setStatus('current')
s530UserTrap1186 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1186)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1186.setStatus('current')
s530UserTrap1187 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1187)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1187.setStatus('current')
s530UserTrap1188 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1188)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1188.setStatus('current')
s530UserTrap1189 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1189)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1189.setStatus('current')
s530UserTrap1190 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1190)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1190.setStatus('current')
s530UserTrap1191 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1191)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1191.setStatus('current')
s530UserTrap1192 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1192)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1192.setStatus('current')
s530UserTrap1193 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1193)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1193.setStatus('current')
s530UserTrap1194 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1194)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1194.setStatus('current')
s530UserTrap1195 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1195)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1195.setStatus('current')
s530UserTrap1196 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1196)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1196.setStatus('current')
s530UserTrap1197 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1197)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1197.setStatus('current')
s530UserTrap1198 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1198)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1198.setStatus('current')
s530UserTrap1199 = NotificationType((1, 3, 6, 1, 4, 1, 3052, 12, 1199)).setObjects(("SITEBOSS-530-STD-MIB", "siteName"), ("SITEBOSS-530-STD-MIB", "esIndex"), ("SITEBOSS-530-STD-MIB", "esName"), ("SITEBOSS-530-STD-MIB", "trapEventTypeNumber"), ("SITEBOSS-530-STD-MIB", "trapEventTypeName"), ("SITEBOSS-530-STD-MIB", "esIndexPoint"), ("SITEBOSS-530-STD-MIB", "esPointName"), ("SITEBOSS-530-STD-MIB", "esID"), ("SITEBOSS-530-STD-MIB", "clock"), ("SITEBOSS-530-STD-MIB", "trapIncludedValue"), ("SITEBOSS-530-STD-MIB", "trapIncludedString"), ("SITEBOSS-530-STD-MIB", "trapEventClassNumber"), ("SITEBOSS-530-STD-MIB", "trapEventClassName"))
if mibBuilder.loadTexts: s530UserTrap1199.setStatus('current')
mibBuilder.exportSymbols("SITEBOSS-530-STD-MIB", evLogMaxSize=evLogMaxSize, fsVolumeLowActions=fsVolumeLowActions, esPointConfigAITable=esPointConfigAITable, action=action, fsGenSensorType=fsGenSensorType, sysLoghost=sysLoghost, acpmTRPVLowTrapNum=acpmTRPVLowTrapNum, acpmAvgVoltageNormalClass=acpmAvgVoltageNormalClass, rtsFilePushHost=rtsFilePushHost, esPointConfigTempEntry=esPointConfigTempEntry, esPointValueStr=esPointValueStr, acpmAvgCurrentDeadband=acpmAvgCurrentDeadband, espcAIConvHighValue=espcAIConvHighValue, s530UserTrap1061=s530UserTrap1061, acpmFreqVHighActions=acpmFreqVHighActions, espcCCEventActions=espcCCEventActions, espcHumidIndexES=espcHumidIndexES, s530UserTrap1070=s530UserTrap1070, acpmTRPVLowValue=acpmTRPVLowValue, evNoData2PortEnableTable=evNoData2PortEnableTable, sys=sys, scModemLoginRequired=scModemLoginRequired, wmsBaseCoeff=wmsBaseCoeff, fsGenBottomOffset=fsGenBottomOffset, s530UserTrap1162=s530UserTrap1162, s530UserTrap1056=s530UserTrap1056, rtsAlarms=rtsAlarms, s530UserTrap1032=s530UserTrap1032, s530UserTrap1064=s530UserTrap1064, acpmTPFNormalTrapNum=acpmTPFNormalTrapNum, cpeTable=cpeTable, fsGenDistanceUnit=fsGenDistanceUnit, espcHumidVHighActions=espcHumidVHighActions, s530UserTrap1053=s530UserTrap1053, espcHumidHighActions=espcHumidHighActions, wirelessMode=wirelessMode, secUserLoginTo=secUserLoginTo, espcAINormalClass=espcAINormalClass, sysTimeNetHost=sysTimeNetHost, cpeInfoPercentLoss=cpeInfoPercentLoss, portConfigMLRUseComplexRules=portConfigMLRUseComplexRules, s530UserTrap1149=s530UserTrap1149, espcTempVHighTrapnum=espcTempVHighTrapnum, fsCustomTankEntry=fsCustomTankEntry, console=console, actionAsentriaTCPPort=actionAsentriaTCPPort, modemCLIDEnable=modemCLIDEnable, fsGenInputES=fsGenInputES, acpmTPFVLowValue=acpmTPFVLowValue, actionCallNumberTable=actionCallNumberTable, s530UserTrap1017=s530UserTrap1017, acpmTRPSysrepThreshold=acpmTRPSysrepThreshold, espcTempVHighActions=espcTempVHighActions, portConfigMLREnable=portConfigMLREnable, auditLogStoreCommands=auditLogStoreCommands, s530UserTrap1195=s530UserTrap1195, ethernet=ethernet, secUserConnectVia=secUserConnectVia, s530StockNoDataAlarmTrap=s530StockNoDataAlarmTrap, evSched1Monday=evSched1Monday, espcAIHighTrapnum=espcAIHighTrapnum, pdnOutputCurrentValue=pdnOutputCurrentValue, s530UserTrap1166=s530UserTrap1166, s530UserTrap1116=s530UserTrap1116, secUserCallbackNumber3=secUserCallbackNumber3, cpeName=cpeName, acpmFreqVLowTrapNum=acpmFreqVLowTrapNum, portConfigMLRStartField1Pos=portConfigMLRStartField1Pos, fsGenSysrepEnable=fsGenSysrepEnable, actionAsentriaVersion=actionAsentriaVersion, sysAMSiteName=sysAMSiteName, routeTestAddress=routeTestAddress, s530UserTrap1071=s530UserTrap1071, wirelessFirewall=wirelessFirewall, esPointValueInt=esPointValueInt, acpmFreqHighTrapNum=acpmFreqHighTrapNum, snmpAgentEnable=snmpAgentEnable, evNoData1Message=evNoData1Message, evShskHighIndex=evShskHighIndex, evNoSensorActions=evNoSensorActions, acpmAvgCurrentVLowValue=acpmAvgCurrentVLowValue, fsGenFilterAveraging=fsGenFilterAveraging, modemCallAttempts=modemCallAttempts, wmsLAC=wmsLAC, s530UserTrap1127=s530UserTrap1127, evdFieldLine=evdFieldLine, s530UserTrap1087=s530UserTrap1087, fsGenEnable=fsGenEnable, eventSensorStatus=eventSensorStatus, s530UserTrap1096=s530UserTrap1096, espcAILowValue=espcAILowValue, stockTrapString=stockTrapString, rtsAlarmsShowAnswer=rtsAlarmsShowAnswer, sysLocXOffset=sysLocXOffset, esPointConfigOutputTable=esPointConfigOutputTable, pppHostLocalIP=pppHostLocalIP, s530UserTrap1039=s530UserTrap1039, espcHumidDeadband=espcHumidDeadband, esPointAliasValueStr=esPointAliasValueStr, acpmTPFVLowTrapNum=acpmTPFVLowTrapNum, s530UserTrap1168=s530UserTrap1168, acpmAvgCurrentLowActions=acpmAvgCurrentLowActions, s530UserTrap1008=s530UserTrap1008, sysCRDBFileEnforceMinTable=sysCRDBFileEnforceMinTable, s530UserTrap1104=s530UserTrap1104, sysTimeNet=sysTimeNet, espcCCAlarmAlias=espcCCAlarmAlias, espcAIHighActions=espcAIHighActions, pppDialCDTimeout=pppDialCDTimeout, s530UserTrap1125=s530UserTrap1125, ftpPushAccount=ftpPushAccount, s530UserTrap1012=s530UserTrap1012, acpmGenAddress=acpmGenAddress, wmsPLMNColor=wmsPLMNColor, espcHumidNormalTrapnum=espcHumidNormalTrapnum, espcTempVLowClass=espcTempVLowClass, ftpPushPushFileTable=ftpPushPushFileTable, pdnDeviceCurrentValueStr=pdnDeviceCurrentValueStr, s530UserTrap1043=s530UserTrap1043, pdSystemPower=pdSystemPower, acpmsAPPhaseBValueStr=acpmsAPPhaseBValueStr, s530UserTrap1181=s530UserTrap1181, esEntry=esEntry, evdMacroEquation=evdMacroEquation, auditLogStoreOutputs=auditLogStoreOutputs, config=config, ftpPushRemoteAlarmName=ftpPushRemoteAlarmName, ethernet2=ethernet2, espcTempEnable=espcTempEnable, portConfigTable=portConfigTable, acpmDisconnectNormalActions=acpmDisconnectNormalActions, s530UserTrap1150=s530UserTrap1150, s530UserTrap1148=s530UserTrap1148, s530StockContactClosureTrap=s530StockContactClosureTrap, acpmsTAPAvgStr=acpmsTAPAvgStr, modemCallDelay=modemCallDelay, acpmsAvgCurrentValueStr=acpmsAvgCurrentValueStr, evNoData1TrapNum=evNoData1TrapNum, acpmsRcPPhaseAValueStr=acpmsRcPPhaseAValueStr, rtsAlarmsMode=rtsAlarmsMode, portConfigBufferPT=portConfigBufferPT, wmsRevID=wmsRevID, evSched2Class=evSched2Class, pdNextGen=pdNextGen, evNoSensor=evNoSensor, acpmFreqLowActions=acpmFreqLowActions, sysEventFileID=sysEventFileID, secUserAuditWriteAccess=secUserAuditWriteAccess, pdnOutputCurrentLowCurrent=pdnOutputCurrentLowCurrent, acpmTRPNormalClass=acpmTRPNormalClass, s530UserTrap1113=s530UserTrap1113, s530UserTrap1033=s530UserTrap1033, s530UserTrap1046=s530UserTrap1046, portConfigRecordTimeout=portConfigRecordTimeout, modemCLIDNumberTable=modemCLIDNumberTable, evSched1Exclusions=evSched1Exclusions, fsGenRawValueBottom=fsGenRawValueBottom, actionPagerType=actionPagerType, acpmsAvgVoltageValueStr=acpmsAvgVoltageValueStr, acpmTRPEnable=acpmTRPEnable, s530UserTrap1084=s530UserTrap1084, fuelSensorGeneralTable=fuelSensorGeneralTable, acpmsAvgCurrentAvgStr=acpmsAvgCurrentAvgStr, pdnOutputCurrentDeadband=pdnOutputCurrentDeadband, ethExpan=ethExpan, s530UserTrap1155=s530UserTrap1155, acpmAvgVoltageNormalActions=acpmAvgVoltageNormalActions, trapInclude=trapInclude, portConfigEntry=portConfigEntry, secUserCallbackNumber2=secUserCallbackNumber2, acpmGenPtRatio=acpmGenPtRatio, fsVolumeVHighClass=fsVolumeVHighClass, auditLogEnable=auditLogEnable, fsStatusCombined=fsStatusCombined, ftpPushRemoteFileEntry=ftpPushRemoteFileEntry, evReminderInterval=evReminderInterval, s530UserTrap1059=s530UserTrap1059, s530UserTrap1045=s530UserTrap1045, wmsSignal=wmsSignal, acpmAvgVoltageEnable=acpmAvgVoltageEnable, acpmTRPSysrepEnable=acpmTRPSysrepEnable, sysLog=sysLog, acpmAvgVoltageHighValue=acpmAvgVoltageHighValue, acpmAvgVoltageVLowClass=acpmAvgVoltageVLowClass, acpmTotalRealPowerTable=acpmTotalRealPowerTable, acpmAvgVoltageVHighTrapNum=acpmAvgVoltageVHighTrapNum, fsVolumeLowClass=fsVolumeLowClass, acpmAvgCurrentSysrepThreshold=acpmAvgCurrentSysrepThreshold, sysTimeNetHostIndex=sysTimeNetHostIndex, s530UserTrap1141=s530UserTrap1141, s530UserTrap1187=s530UserTrap1187, pdnMainVoltageValue=pdnMainVoltageValue, espcCCNormalActions=espcCCNormalActions, esPointName=esPointName, acpmAvgVoltageVLowTrapNum=acpmAvgVoltageVLowTrapNum, acPowerMonitor=acPowerMonitor, acpmFreqVHighTrapNum=acpmFreqVHighTrapNum, s530UserTrap1102=s530UserTrap1102, actionCallNumberEntry=actionCallNumberEntry, actionPagerTable=actionPagerTable, pdnTable=pdnTable, espcOutputInactiveActions=espcOutputInactiveActions, rtsFileEmptyClose=rtsFileEmptyClose, ftpPushPushAlarms=ftpPushPushAlarms, s530UserTrap1060=s530UserTrap1060, trap=trap, wirelessAPN=wirelessAPN, evClassNameTable=evClassNameTable, espcAIIndexES=espcAIIndexES, esAnalogCombinedStatusBlock3=esAnalogCombinedStatusBlock3, wmsBScolor=wmsBScolor, s530UserTrap1173=s530UserTrap1173, s530UserTrap1019=s530UserTrap1019, s530UserTrap1139=s530UserTrap1139, s530UserTrap1006=s530UserTrap1006, s530UserTrap1140=s530UserTrap1140, snmpNotificationCaptureFile=snmpNotificationCaptureFile, evdFieldLength=evdFieldLength, s530UserTrap1000=s530UserTrap1000, secUserAccessFile=secUserAccessFile, cpeInfoNumBadResp=cpeInfoNumBadResp, espcTempVLowActions=espcTempVLowActions, esPointConfigOutputEntry=esPointConfigOutputEntry, portConfigIndex=portConfigIndex, esPointConfigCCEntry=esPointConfigCCEntry, secUserPPPType=secUserPPPType, evdClearInterval=evdClearInterval, acpmTPFNormalClass=acpmTPFNormalClass, fsTankIndex=fsTankIndex, portConfigMLREndField2Text=portConfigMLREndField2Text, s530StockAnalogTrap=s530StockAnalogTrap, evSched2Exclusions=evSched2Exclusions, acpmAvgVoltageNormalTrapNum=acpmAvgVoltageNormalTrapNum, wmsModelID=wmsModelID, evClassName=evClassName, s530UserTrap1194=s530UserTrap1194, ethExpanDHCPLeaseTime=ethExpanDHCPLeaseTime, evShskHighMessage=evShskHighMessage, evShskHighTable=evShskHighTable, espcAILowTrapnum=espcAILowTrapnum, auditLogMaxSize=auditLogMaxSize, ftpPushDirectory=ftpPushDirectory, wmsIMEI=wmsIMEI, acpmsAvgFreqMinStr=acpmsAvgFreqMinStr, esIndex=esIndex, evdMacroEntry=evdMacroEntry, fsStatusTable=fsStatusTable, evdTable=evdTable, evdAutoClear=evdAutoClear, sysCRDBFileEnforceMinIndex=sysCRDBFileEnforceMinIndex, evSched1Saturday=evSched1Saturday, esAnalogCombinedStatusBlock2=esAnalogCombinedStatusBlock2, evSched2Monday=evSched2Monday, acpmAvgCurrentNormalActions=acpmAvgCurrentNormalActions)
mibBuilder.exportSymbols("SITEBOSS-530-STD-MIB", wirelessModemStatus=wirelessModemStatus, modem=modem, esTempReportingMode=esTempReportingMode, acpmTRPHighTrapNum=acpmTRPHighTrapNum, modemCLIDLogTable=modemCLIDLogTable, fsVolumeVLowTrapNum=fsVolumeVLowTrapNum, consoleDuplex=consoleDuplex, s530UserTrap1002=s530UserTrap1002, s530StockTempTrap=s530StockTempTrap, portConfigMLRStartField2Text=portConfigMLRStartField2Text, sysTimeStampSpaceAfter=sysTimeStampSpaceAfter, evCore=evCore, s530UserTrap1164=s530UserTrap1164, s530UserTrap1021=s530UserTrap1021, espcCCNormalAlias=espcCCNormalAlias, espcOutputActiveTrapnum=espcOutputActiveTrapnum, evSched1Tuesday=evSched1Tuesday, sysLogListenPort=sysLogListenPort, evdWildCardChar=evdWildCardChar, s530UserTrap1022=s530UserTrap1022, acpmsTPFInEventState=acpmsTPFInEventState, evNoData2Enable=evNoData2Enable, espcAIHighClass=espcAIHighClass, s530UserTrap1171=s530UserTrap1171, wmsRSSI=wmsRSSI, acpmTRPVHighValue=acpmTRPVHighValue, s530UserTrap1028=s530UserTrap1028, s530UserTrap1198=s530UserTrap1198, s530ACPowerMonitorAvgCurrentTrap=s530ACPowerMonitorAvgCurrentTrap, acpmsIndex=acpmsIndex, espcTempHighTemp=espcTempHighTemp, fsTankDimA=fsTankDimA, secFactory=secFactory, espcOutputActiveState=espcOutputActiveState, s530UserTrap1009=s530UserTrap1009, secUserChallengeTelnetMode=secUserChallengeTelnetMode, espcAIVlowClass=espcAIVlowClass, portConfigId=portConfigId, actionSchedBegin=actionSchedBegin, trapEventTypeName=trapEventTypeName, s530UserTrap1196=s530UserTrap1196, s530UserTrap1190=s530UserTrap1190, pdnMainVoltageVHighVoltage=pdnMainVoltageVHighVoltage, pppRoutingEnable=pppRoutingEnable, evReset=evReset, secUserEventsWriteAccess=secUserEventsWriteAccess, ethExpanDHCP=ethExpanDHCP, auditLogStorePwdFailures=auditLogStorePwdFailures, s530StockDataAlarmTrap=s530StockDataAlarmTrap, s530StockOutputTrap=s530StockOutputTrap, pppDialEnable=pppDialEnable, espcAIEnable=espcAIEnable, acpmFreqTable=acpmFreqTable, acpmDisconnectNormalTrapNum=acpmDisconnectNormalTrapNum, sysCRDBFileIDIndex=sysCRDBFileIDIndex, fsGenSysrepType=fsGenSysrepType, s530UserTrap1179=s530UserTrap1179, acpmTRPHighClass=acpmTRPHighClass, espcTempLowClass=espcTempLowClass, fsStatusVolumeInEventState=fsStatusVolumeInEventState, acpmsTRPMinStr=acpmsTRPMinStr, portConfigMLRStartField1Text=portConfigMLRStartField1Text, evSched1TrapNum=evSched1TrapNum, s530UserTrap1050=s530UserTrap1050, wmsMgfID=wmsMgfID, espcOutputActiveColor=espcOutputActiveColor, evSched2Tuesday=evSched2Tuesday, evNoData1Sched1Duration=evNoData1Sched1Duration, acpmsPFPhaseBValueStr=acpmsPFPhaseBValueStr, acpmTRPVHighActions=acpmTRPVHighActions, evdFieldType=evdFieldType, evResetDelay=evResetDelay, rtsFileShowAnswer=rtsFileShowAnswer, espcHumidVLowTrapnum=espcHumidVLowTrapnum, scTelnetLoginRequired=scTelnetLoginRequired, acpmTRPVLowActions=acpmTRPVLowActions, sysCRDBFileEnforceMinEntry=sysCRDBFileEnforceMinEntry, s530UserTrap1144=s530UserTrap1144, ethExpanCardEntry=ethExpanCardEntry, esCCCombinedStatusBlock2=esCCCombinedStatusBlock2, s530UserTrap1077=s530UserTrap1077, fuelSensor=fuelSensor, fsGenRawValueTop=fsGenRawValueTop, s530UserTrap1025=s530UserTrap1025, fsGenSysrepLimit=fsGenSysrepLimit, espcAINormalTrapnum=espcAINormalTrapnum, secUserExpiration=secUserExpiration, evNoData1Actions=evNoData1Actions, fsDiscIndex=fsDiscIndex, fsVolumeLowTrapNum=fsVolumeLowTrapNum, evNoData2Sched1End=evNoData2Sched1End, espcTempVLowTemp=espcTempVLowTemp, s530UserTrap1193=s530UserTrap1193, wmsIMSI=wmsIMSI, wirelessPPPUsername=wirelessPPPUsername, s530UserTrap1177=s530UserTrap1177, acpmTPFLowTrapNum=acpmTPFLowTrapNum, s530UserTrap1100=s530UserTrap1100, acpmsCurrentPhaseCValueStr=acpmsCurrentPhaseCValueStr, esOutputCombinedStatusBlock1=esOutputCombinedStatusBlock1, esTempCombinedStatus=esTempCombinedStatus, ftpPushPushFile=ftpPushPushFile, auditLogStoreResets=auditLogStoreResets, evdExitOnTrue=evdExitOnTrue, ethExpanCardMAC=ethExpanCardMAC, espcTempIndexPoint=espcTempIndexPoint, s530UserTrap1040=s530UserTrap1040, routeTestAddressIndex=routeTestAddressIndex, fsDiscNormalClass=fsDiscNormalClass, evdFieldTable=evdFieldTable, acpmsTPFAvgStr=acpmsTPFAvgStr, acpmAvgVoltageHighActions=acpmAvgVoltageHighActions, wirelessIdleTimeout=wirelessIdleTimeout, fuelSensorTankTable=fuelSensorTankTable, espcOutputAliasColor=espcOutputAliasColor, evNoData1PortEnableIndex=evNoData1PortEnableIndex, esNumberTempSensors=esNumberTempSensors, acpmAvgCurrentLowValue=acpmAvgCurrentLowValue, rtsFilePushRetryTimer=rtsFilePushRetryTimer, acpmFreqSysrepLimit=acpmFreqSysrepLimit, sysTimeNetHostEntry=sysTimeNetHostEntry, evNoData1PortEnableTable=evNoData1PortEnableTable, portConfigDataFormat=portConfigDataFormat, actionHostIndex=actionHostIndex, secCore=secCore, s530UserTrap1131=s530UserTrap1131, event=event, fsStatusVolumeValueString=fsStatusVolumeValueString, ftpPushPassive=ftpPushPassive, espcHumidHighTrapnum=espcHumidHighTrapnum, secUserChallengeTelnetSendTo=secUserChallengeTelnetSendTo, ftpPushRemoteFileName=ftpPushRemoteFileName, s530UserTrap1086=s530UserTrap1086, s530UserTrap1055=s530UserTrap1055, ethernet1=ethernet1, acpmFreqNormalClass=acpmFreqNormalClass, modemTAPInitString=modemTAPInitString, acpmFreqDeadband=acpmFreqDeadband, pdnIndexOutput=pdnIndexOutput, s530UserTrap1126=s530UserTrap1126, scRightsGroup=scRightsGroup, evLogEnable=evLogEnable, acpmAvgVoltageVLowActions=acpmAvgVoltageVLowActions, s530UserTrap1079=s530UserTrap1079, ftpPushRemoteFileIndex=ftpPushRemoteFileIndex, rtsFileTable=rtsFileTable, s530StockPDCurrentTrap=s530StockPDCurrentTrap, cpeThreshold=cpeThreshold, acpmAvgCurrentHighValue=acpmAvgCurrentHighValue, acpmTRPLowTrapNum=acpmTRPLowTrapNum, espcTempHighTrapnum=espcTempHighTrapnum, s530UserTrap1146=s530UserTrap1146, acpmAvgVoltageVLowValue=acpmAvgVoltageVLowValue, actionPagerIndex=actionPagerIndex, hostTable=hostTable, evClassNameIndex=evClassNameIndex, fsVolumeEnable=fsVolumeEnable, evResetClass=evResetClass, scRTSLoginRequired=scRTSLoginRequired, pdnMainCurrentValue=pdnMainCurrentValue, espcAIConvUnitName=espcAIConvUnitName, ipv6=ipv6, acpmTPFSysrepLimit=acpmTPFSysrepLimit, sysEscapeCharacter=sysEscapeCharacter, s530UserTrap1024=s530UserTrap1024, pdnMainVoltageVLowVoltage=pdnMainVoltageVLowVoltage, s530UserTrap1092=s530UserTrap1092, s530UserTrap1184=s530UserTrap1184, wmsBand=wmsBand, s530UserTrap1067=s530UserTrap1067, fsVolumeHighValue=fsVolumeHighValue, pdnOutputCurrentVHighCurrent=pdnOutputCurrentVHighCurrent, sfSecret=sfSecret, s530UserTrap1169=s530UserTrap1169, fsGenSysrepThreshold=fsGenSysrepThreshold, espcTempIndexES=espcTempIndexES, acpmsPFPhaseCValueStr=acpmsPFPhaseCValueStr, s530UserTrap1134=s530UserTrap1134, s530UserTrap1029=s530UserTrap1029, eventSensorPointConfig=eventSensorPointConfig, s530UserTrap1068=s530UserTrap1068, fsStatusVolumePercentLevel=fsStatusVolumePercentLevel, esAirflowReportingMode=esAirflowReportingMode, auditLogStoreSHSK=auditLogStoreSHSK, evSched2TrapNum=evSched2TrapNum, fsVolumeDeadband=fsVolumeDeadband, acpmsTAPMaxStr=acpmsTAPMaxStr, espcCCNormalClass=espcCCNormalClass, esIndexPoint=esIndexPoint, s530UserTrap1172=s530UserTrap1172, evNoData2Sched2End=evNoData2Sched2End, portConfigMaskEnable=portConfigMaskEnable, s530UserTrap1078=s530UserTrap1078, modemTAP8N1=modemTAP8N1, s530StockCTSTrap=s530StockCTSTrap, s530UserTrap1188=s530UserTrap1188, trapAuthFailEnable=trapAuthFailEnable, pdnMainPowerValue=pdnMainPowerValue, pppHost=pppHost, fsDiscHighValue=fsDiscHighValue, s530UserTrap1082=s530UserTrap1082, espcOutputInactiveClass=espcOutputInactiveClass, evShskHighEntry=evShskHighEntry, acpmTotalPowerFactorTable=acpmTotalPowerFactorTable, s530UserTrap1118=s530UserTrap1118, esPointConfigHumidTable=esPointConfigHumidTable, sysLoc=sysLoc, espcHumidVLowClass=espcHumidVLowClass, evNoData2Days=evNoData2Days, wmsMpRACH=wmsMpRACH, acpmTRPLowClass=acpmTRPLowClass, s530UserTrap1170=s530UserTrap1170, acpmFreqLowValue=acpmFreqLowValue, cpeHost=cpeHost, espcTempLowActions=espcTempLowActions, evLogTimeStampAlarms=evLogTimeStampAlarms, s530UserTrap1176=s530UserTrap1176, acpmFreqEnable=acpmFreqEnable, s530UserTrap1073=s530UserTrap1073, espcAIDeadband=espcAIDeadband, acpmsTRcPValueStr=acpmsTRcPValueStr, evNoData1Enable=evNoData1Enable, acpmTPFVLowActions=acpmTPFVLowActions, sysCRDBFileEnforceMin=sysCRDBFileEnforceMin, auditLogStorePassthrough=auditLogStorePassthrough, acpmAvgCurrentLowTrapNum=acpmAvgCurrentLowTrapNum, wirelessConnEnable=wirelessConnEnable, acpmGenIndex=acpmGenIndex, evSched2Wednesday=evSched2Wednesday, acpmsRcPPhaseBValueStr=acpmsRcPPhaseBValueStr, acpmsTRPMaxStr=acpmsTRPMaxStr, esCCCombinedStatusBlock3=esCCCombinedStatusBlock3, eth1Router=eth1Router, modemClid=modemClid, acpmsAvgFreqInEventState=acpmsAvgFreqInEventState, s530UserTrap1085=s530UserTrap1085, wmsNetCode=wmsNetCode, dnsTable=dnsTable, pppHostEnable=pppHostEnable, espcTempNormalTrapnum=espcTempNormalTrapnum, fsTankVolume=fsTankVolume, acpmFreqEntry=acpmFreqEntry, acpmAvgCurrentEnable=acpmAvgCurrentEnable, acpmAvgVoltageVHighValue=acpmAvgVoltageVHighValue, acpmTRPSysrepLimit=acpmTRPSysrepLimit, s530ACTotalPowerFactorTrap=s530ACTotalPowerFactorTrap, pdnOutputFuseValueStr=pdnOutputFuseValueStr, espcHumidVHighClass=espcHumidVHighClass, esNumberOutputs=esNumberOutputs, snmpNtfnSnooze=snmpNtfnSnooze, espcTempVHighTemp=espcTempVHighTemp, acpmTRPEntry=acpmTRPEntry, esPointEntry=esPointEntry, fsCustomTankHeight=fsCustomTankHeight)
mibBuilder.exportSymbols("SITEBOSS-530-STD-MIB", s530UserTrap1076=s530UserTrap1076, s530UserTrap1189=s530UserTrap1189, evResetTrapnum=evResetTrapnum, espcTempNormalActions=espcTempNormalActions, actionHost=actionHost, fuelSensorCustomTankTable=fuelSensorCustomTankTable, s530UserTrap1027=s530UserTrap1027, trapIncludedValue=trapIncludedValue, espcAILowClass=espcAILowClass, pdnDeviceCurrentValue=pdnDeviceCurrentValue, fsDiscTrapNum=fsDiscTrapNum, pdnOutputCombinedStatusBlock1=pdnOutputCombinedStatusBlock1, ipRestrictionEntry=ipRestrictionEntry, fuelSensorStatus=fuelSensorStatus, sysTimeNetEnable=sysTimeNetEnable, rtsFileMode=rtsFileMode, s530UserTrap1106=s530UserTrap1106, espcHumidVLowHumid=espcHumidVLowHumid, acpmsAvgFreqMaxStr=acpmsAvgFreqMaxStr, pdConfig=pdConfig, acpmFreqVLowActions=acpmFreqVLowActions, webPort=webPort, acpmsVoltagePhaseBValueStr=acpmsVoltagePhaseBValueStr, s530StockHumidityTrap=s530StockHumidityTrap, fsTankEntry=fsTankEntry, rtsFileReqXON=rtsFileReqXON, espcOutputActiveAlias=espcOutputActiveAlias, acpmFreqHighClass=acpmFreqHighClass, s530UserTrap1091=s530UserTrap1091, wmsChannel=wmsChannel, s530UserTrap1097=s530UserTrap1097, espcAILowActions=espcAILowActions, portConfigMLRNumLinesBefore=portConfigMLRNumLinesBefore, s530UserTrap1135=s530UserTrap1135, s530UserTrap1014=s530UserTrap1014, esCCCombinedStatusBlock6=esCCCombinedStatusBlock6, s530UserTrap1047=s530UserTrap1047, consoleTimeout=consoleTimeout, evdFieldIndex=evdFieldIndex, s530UserTrap1038=s530UserTrap1038, secUserChallengeModemSendTo=secUserChallengeModemSendTo, acpmAvgVoltageTable=acpmAvgVoltageTable, esNumberHumidSensors=esNumberHumidSensors, acpmsAPPhaseCValueStr=acpmsAPPhaseCValueStr, espcTempScale=espcTempScale, acpmsCurrentPhaseBValueStr=acpmsCurrentPhaseBValueStr, acpmStatusTable=acpmStatusTable, fsDiscActions=fsDiscActions, wirelessConnectivity=wirelessConnectivity, evdMode=evdMode, arpFilter=arpFilter, acpmAvgCurrentVLowTrapNum=acpmAvgCurrentVLowTrapNum, evdThreshold=evdThreshold, evNoData2Sched1Duration=evNoData2Sched1Duration, espcHumidHighHumid=espcHumidHighHumid, esNewSensors=esNewSensors, evResetActions=evResetActions, numberPorts=numberPorts, s530UserTrap1093=s530UserTrap1093, s530UserTrap1124=s530UserTrap1124, acpmGenEntry=acpmGenEntry, espcOutputInactiveAlias=espcOutputInactiveAlias, evdName=evdName, actionPagerEntry=actionPagerEntry, evNoSensorClass=evNoSensorClass, wirelessDRE=wirelessDRE, espcCCName=espcCCName, acpmGenName=acpmGenName, s530UserTrap1035=s530UserTrap1035, espcCCIndexPoint=espcCCIndexPoint, trapIncludeDateTime=trapIncludeDateTime, acpmAvgCurrentHighActions=acpmAvgCurrentHighActions, eth2Address=eth2Address, s530UserTrap1034=s530UserTrap1034, siteName=siteName, evNoSensorTrapNum=evNoSensorTrapNum, pdnOutputCurrentHighCurrent=pdnOutputCurrentHighCurrent, pdnOutputCurrentInEventState=pdnOutputCurrentInEventState, s530UserTrap1031=s530UserTrap1031, eth1Address=eth1Address, actionCallNumber=actionCallNumber, s530UserTrap1099=s530UserTrap1099, acpmsAvgFreqAvgStr=acpmsAvgFreqAvgStr, actionAsentriaRequireAck=actionAsentriaRequireAck, esIndexES=esIndexES, espcCCThreshold=espcCCThreshold, acpmsAvgVoltageMinStr=acpmsAvgVoltageMinStr, acpmStatusEntry=acpmStatusEntry, acpmTRPVLowClass=acpmTRPVLowClass, wirelessConnIP1=wirelessConnIP1, evNoData1Exclusions=evNoData1Exclusions, espcTempHighClass=espcTempHighClass, trapIncludeUDState=trapIncludeUDState, s530UserTrap1157=s530UserTrap1157, sysTimeNetHostTable=sysTimeNetHostTable, acpmAvgCurrentVHighTrapNum=acpmAvgCurrentVHighTrapNum, pdnMainCurrentVLowCurrent=pdnMainCurrentVLowCurrent, auditLog=auditLog, evResetMessage=evResetMessage, evdMacroName=evdMacroName, s530UserTrap1128=s530UserTrap1128, acpmAvgCurrentTable=acpmAvgCurrentTable, acpmAvgVoltageEntry=acpmAvgVoltageEntry, evdEquation=evdEquation, acpmTRPHighActions=acpmTRPHighActions, s530UserTrap1037=s530UserTrap1037, acpmsTotalEnergyVAR=acpmsTotalEnergyVAR, s530UserTrap1186=s530UserTrap1186, ftpPushPushFileEntry=ftpPushPushFileEntry, evShskLowActions=evShskLowActions, s530UserTrap1129=s530UserTrap1129, netAdvanced=netAdvanced, espcOutputAliasValue=espcOutputAliasValue, fsVolumeHighActions=fsVolumeHighActions, acpmAvgCurrentHighClass=acpmAvgCurrentHighClass, acpmsTPFMaxStr=acpmsTPFMaxStr, fsCustomTankIndexFS=fsCustomTankIndexFS, wmsModemType=wmsModemType, ftpPushIncludeSeq=ftpPushIncludeSeq, acpmsTRPValueStr=acpmsTRPValueStr, evNoData2Actions=evNoData2Actions, scAuthMode=scAuthMode, ftpPushIncludeDate=ftpPushIncludeDate, rtsFileIndex=rtsFileIndex, s530UserTrap1163=s530UserTrap1163, acpmsRPPhaseCValueStr=acpmsRPPhaseCValueStr, espcAIVhighClass=espcAIVhighClass, evShskHighClass=evShskHighClass, actionEmailTable=actionEmailTable, s530UserTrap1080=s530UserTrap1080, s530UserTrap1161=s530UserTrap1161, esHumidCombinedStatus=esHumidCombinedStatus, fsGenFuelType=fsGenFuelType, emailServer=emailServer, hostEntry=hostEntry, s530UserTrap1095=s530UserTrap1095, espcAIVlowValue=espcAIVlowValue, scTelnetPTLoginRequired=scTelnetPTLoginRequired, trapEventClassNumber=trapEventClassNumber, eth2SubnetMask=eth2SubnetMask, fsTankHeight=fsTankHeight, espcCCNormalThreshold=espcCCNormalThreshold, fsTankVolumeUnit=fsTankVolumeUnit, fsVolumeVHighTrapNum=fsVolumeVHighTrapNum, s530StockPDVoltageTrap=s530StockPDVoltageTrap, s530UserTrap1107=s530UserTrap1107, acpmsTRcPMinStr=acpmsTRcPMinStr, pppDialNumber=pppDialNumber, espcCCReminderInterval=espcCCReminderInterval, trapIncludeSensorID=trapIncludeSensorID, evSched1Sunday=evSched1Sunday, s530UserTrap1103=s530UserTrap1103, modemFormat=modemFormat, s530UserTrap1018=s530UserTrap1018, acpmTPFSysrepThreshold=acpmTPFSysrepThreshold, esTable=esTable, modemGoto=modemGoto, cpeDescription=cpeDescription, s530UserTrap1069=s530UserTrap1069, s530UserTrap1083=s530UserTrap1083, ftpPushRemoteFileTable=ftpPushRemoteFileTable, ipRestrictionEnable=ipRestrictionEnable, ftpPushperiod=ftpPushperiod, evNoData2PortEnableEntry=evNoData2PortEnableEntry, sysAMProduct=sysAMProduct, pdnMainCombinedStatus=pdnMainCombinedStatus, s530ACPowerMonitorAvgVoltageTrap=s530ACPowerMonitorAvgVoltageTrap, ipRestrictionIndex=ipRestrictionIndex, acpmGeneralTable=acpmGeneralTable, sysAMSoftwareVersion=sysAMSoftwareVersion, acpmDisconnectIndex=acpmDisconnectIndex, ipRestriction=ipRestriction, actionParseError=actionParseError, esAnalogCombinedStatusBlock6=esAnalogCombinedStatusBlock6, scShowPasswordPrompt=scShowPasswordPrompt, espcTempNormalClass=espcTempNormalClass, acPowerMonitorStatus=acPowerMonitorStatus, emailDomain=emailDomain, fsStatusEntry=fsStatusEntry, auditLogStoreAlarmActions=auditLogStoreAlarmActions, ftpPush=ftpPush, evSched1Message=evSched1Message, esCCReportingMode=esCCReportingMode, routeTestPeriod=routeTestPeriod, ipRestrictionTable=ipRestrictionTable, acpmsTotalEnergyVA=acpmsTotalEnergyVA, s530UserTrap1058=s530UserTrap1058, s530UserTrap1185=s530UserTrap1185, s530UserTrap1088=s530UserTrap1088, espcAIConvLowUnit=espcAIConvLowUnit, secUserIndex=secUserIndex, s530UserTrap1010=s530UserTrap1010, dnsEntry=dnsEntry, acpmAvgVoltageHighTrapNum=acpmAvgVoltageHighTrapNum, actionPagerPostCalloutDelay=actionPagerPostCalloutDelay, actionSched=actionSched, rtsAlarmsPushRetryTimer=rtsAlarmsPushRetryTimer, s530UserTrap1133=s530UserTrap1133, s530UserTrap1142=s530UserTrap1142, fsDiscEnable=fsDiscEnable, s530UserTrap1110=s530UserTrap1110, ethExpanDHCPStartIp=ethExpanDHCPStartIp, acpmTPFNormalActions=acpmTPFNormalActions, wmsMinRxLevel=wmsMinRxLevel, pdnOutputFuseInEventState=pdnOutputFuseInEventState, evShskLowEnable=evShskLowEnable, s530StockImmediateTrap=s530StockImmediateTrap, eth1MAC=eth1MAC, esIndexPC=esIndexPC, esName=esName, acpmAvgCurrentVLowClass=acpmAvgCurrentVLowClass, espcOutputType=espcOutputType, esPointTable=esPointTable, actionEmailEntry=actionEmailEntry, s530UserTrap1182=s530UserTrap1182, pdnMainVoltageLowVoltage=pdnMainVoltageLowVoltage, esPointInEventState=esPointInEventState, acpmsTPFValueStr=acpmsTPFValueStr, acpmAvgCurrentSysrepEnable=acpmAvgCurrentSysrepEnable, sysPTEndPause=sysPTEndPause, acpmAvgVoltageIndex=acpmAvgVoltageIndex, actionHostEntry=actionHostEntry, evSched2Friday=evSched2Friday, acpmFreqNormalTrapNum=acpmFreqNormalTrapNum, webEnable=webEnable, esAnalogCombinedStatusBlock1=esAnalogCombinedStatusBlock1, pdnMainCurrentVHighCurrent=pdnMainCurrentVHighCurrent, eth1SubnetMask=eth1SubnetMask, wmsCellID=wmsCellID, eth2MAC=eth2MAC, acpmGenSysrepPackage=acpmGenSysrepPackage, acpmFreqNormalActions=acpmFreqNormalActions, s530StockPDFuseTrap=s530StockPDFuseTrap, routeTest=routeTest, wmsGPRSStatus=wmsGPRSStatus, snmp=snmp, esPointConfigAIEntry=esPointConfigAIEntry, s530UserTrap1117=s530UserTrap1117, wmsCountryCode=wmsCountryCode, portConfigMLREndField2Pos=portConfigMLREndField2Pos, scConsoleLoginRequired=scConsoleLoginRequired, acpmsVoltagePhaseAValueStr=acpmsVoltagePhaseAValueStr, acpmTRPLowValue=acpmTRPLowValue, espcTempVLowTrapnum=espcTempVLowTrapnum, actionPagerPostIDDelay=actionPagerPostIDDelay, evNoData1Class=evNoData1Class, espcAIVhighValue=espcAIVhighValue, emailAuthEnable=emailAuthEnable, s530UserTrap1041=s530UserTrap1041, pppDialSuggestIP=pppDialSuggestIP, acpmAvgVoltageHighClass=acpmAvgVoltageHighClass, sysCRDBFileIDEntry=sysCRDBFileIDEntry, evShskLowTrapNum=evShskLowTrapNum, acpmFreqLowTrapNum=acpmFreqLowTrapNum)
mibBuilder.exportSymbols("SITEBOSS-530-STD-MIB", acpmTPFEntry=acpmTPFEntry, secUserChallengeExpiration=secUserChallengeExpiration, snmpNtfnCycles=snmpNtfnCycles, sysLocAltitude=sysLocAltitude, webTimeout=webTimeout, acpmGenEnable=acpmGenEnable, cpeInfoNumGoodResp=cpeInfoNumGoodResp, auditLogStorePolling=auditLogStorePolling, cpePingSize=cpePingSize, sysPT=sysPT, fsTankShape=fsTankShape, ncpDuplex=ncpDuplex, evNoData2PortEnableIndex=evNoData2PortEnableIndex, ftpPushPushAudit=ftpPushPushAudit, s530UserTrap1175=s530UserTrap1175, acpmTPFSysrepEnable=acpmTPFSysrepEnable, web=web, ftpPushPermissions=ftpPushPermissions, unitSecurity=unitSecurity, s530UserTrap1183=s530UserTrap1183, netSecurity=netSecurity, espcCCEventState=espcCCEventState, espcHumidVHighHumid=espcHumidVHighHumid, sysAssetMgmt=sysAssetMgmt, espcCCIndexES=espcCCIndexES, evdCore=evdCore, trapIncludeUDName=trapIncludeUDName, esNumberEventSensors=esNumberEventSensors, secUserTable=secUserTable, fsDiscEntry=fsDiscEntry, acpmGenDevice=acpmGenDevice, acpmTRPVHighClass=acpmTRPVHighClass, espcHumidHighClass=espcHumidHighClass, s530UserTrap1136=s530UserTrap1136, evNoData1Sched2Duration=evNoData1Sched2Duration, evNoData2=evNoData2, eventSensorBasics=eventSensorBasics, esHumidReportingMode=esHumidReportingMode, fsVolumeVLowClass=fsVolumeVLowClass, ethExpanCardIndex=ethExpanCardIndex, modemCLIDNumberEntry=modemCLIDNumberEntry, acpmAvgVoltageVHighClass=acpmAvgVoltageVHighClass, acpmsAvgCurrentMinStr=acpmsAvgCurrentMinStr, fsVolumeNormalActions=fsVolumeNormalActions, espcTempVHighClass=espcTempVHighClass, espcCCOverrideGlobalReminder=espcCCOverrideGlobalReminder, modemCLIDNumberIndex=modemCLIDNumberIndex, snmpNotificationCaptureEnable=snmpNotificationCaptureEnable, deStatusTable=deStatusTable, portConfigStripPtOutputLfs=portConfigStripPtOutputLfs, sysPTJoinable=sysPTJoinable, evdTrapNum=evdTrapNum, acpmsRPPhaseBValueStr=acpmsRPPhaseBValueStr, espcOutputEnable=espcOutputEnable, espcHumidEnable=espcHumidEnable, sysPTTimeout=sysPTTimeout, actionSchedEnable=actionSchedEnable, thisProduct=thisProduct, espcAIConvHighUnit=espcAIConvHighUnit, s530UserTrap1013=s530UserTrap1013, s530UserTrap1049=s530UserTrap1049, evdIndex=evdIndex, hostDeclaration=hostDeclaration, acpmsAPPhaseAValueStr=acpmsAPPhaseAValueStr, s530StockSchedTrap=s530StockSchedTrap, espcHumidIndexPoint=espcHumidIndexPoint, evLogStoreSensor=evLogStoreSensor, ethExpanMask=ethExpanMask, acpmsTPFMinStr=acpmsTPFMinStr, evNoSensorTimeout=evNoSensorTimeout, pdSystem=pdSystem, evNoData2Sched1Begin=evNoData2Sched1Begin, evSched1Friday=evSched1Friday, modemStatus=modemStatus, esAnalogCombinedStatusBlock5=esAnalogCombinedStatusBlock5, trapEventTypeNumber=trapEventTypeNumber, evShskLowIndex=evShskLowIndex, pdSystemCurrent=pdSystemCurrent, sysTimeAutoDST=sysTimeAutoDST, espcCCEventClass=espcCCEventClass, evLogPrependName=evLogPrependName, s530UserTrap1191=s530UserTrap1191, s530UserTrap1156=s530UserTrap1156, esPointConfigTempTable=esPointConfigTempTable, s530UserTrap1054=s530UserTrap1054, portConfigEtxToCRLF=portConfigEtxToCRLF, s530UserTrap1151=s530UserTrap1151, evSched1Actions=evSched1Actions, s530UserTrap1051=s530UserTrap1051, acpmDisconnectNormalClass=acpmDisconnectNormalClass, evLog=evLog, snmpNtfnTimeout=snmpNtfnTimeout, pdnOutputCombinedStatusBlock2=pdnOutputCombinedStatusBlock2, espcCCNormalTrapnum=espcCCNormalTrapnum, sysCharMask=sysCharMask, wmsICCID=wmsICCID, evShskHighActions=evShskHighActions, fsCustomTankVolume=fsCustomTankVolume, acpmTRPNormalTrapNum=acpmTRPNormalTrapNum, secUserEventsReadAccess=secUserEventsReadAccess, pdnMainCurrentDeadband=pdnMainCurrentDeadband, acpmsRPPhaseAValueStr=acpmsRPPhaseAValueStr, cpe=cpe, deStatusCounter=deStatusCounter, sysBootStatus=sysBootStatus, fsVolumeVLowActions=fsVolumeVLowActions, sysLocLatitude=sysLocLatitude, acpmFreqSysrepEnable=acpmFreqSysrepEnable, evClassNameEntry=evClassNameEntry, cpeInfoNumLostResp=cpeInfoNumLostResp, acpmTRPVHighTrapNum=acpmTRPVHighTrapNum, rtsFileEntry=rtsFileEntry, fsGenEntry=fsGenEntry, s530UserTrap1152=s530UserTrap1152, fsVolumeVHighActions=fsVolumeVHighActions, s530ACPowerMonitorTRPTrap=s530ACPowerMonitorTRPTrap, s530UserTrap1145=s530UserTrap1145, s530UserTrap1062=s530UserTrap1062, dnsAddress=dnsAddress, acpmsTRcPMaxStr=acpmsTRcPMaxStr, acpmDisconnectEntry=acpmDisconnectEntry, esPointConfigHumidEntry=esPointConfigHumidEntry, pdnMainPowerValueStr=pdnMainPowerValueStr, acpmTRPNormalActions=acpmTRPNormalActions, esNumberAnalog=esNumberAnalog, wireless=wireless, espcHumidLowClass=espcHumidLowClass, sysCRDBFileID=sysCRDBFileID, snmpNtfnAttempts=snmpNtfnAttempts, cpeIndex=cpeIndex, acpmGenSysrepType=acpmGenSysrepType, acpmGenPowerType=acpmGenPowerType, evSched1Thursday=evSched1Thursday, ftpPushIncludeTime=ftpPushIncludeTime, evSched2Enable=evSched2Enable, esAnalogReportingMode=esAnalogReportingMode, acpmTPFDeadband=acpmTPFDeadband, acpmGenCtRatio=acpmGenCtRatio, acpmsPFPhaseAValueStr=acpmsPFPhaseAValueStr, evNoData2Sched2Begin=evNoData2Sched2Begin, s530UserTrap1167=s530UserTrap1167, pdnConfig=pdnConfig, ftpPushEnable=ftpPushEnable, s530ResetTrap=s530ResetTrap, sysAnswerString=sysAnswerString, portConfigDataType=portConfigDataType, acpmTPFLowValue=acpmTPFLowValue, pdnMainVoltageDeadband=pdnMainVoltageDeadband, s530UserTrap1003=s530UserTrap1003, evdClearTime=evdClearTime, evShskLowEntry=evShskLowEntry, fsVolumeNormalTrapNum=fsVolumeNormalTrapNum, actionEmail=actionEmail, s530UserTrap1089=s530UserTrap1089, acpmDisconnectClass=acpmDisconnectClass, fsDiscNormalTrapNum=fsDiscNormalTrapNum, rtsFileTimeout=rtsFileTimeout, pdnOutputCurrentValueStr=pdnOutputCurrentValueStr, evdFieldName=evdFieldName, acpmAvgCurrentIndex=acpmAvgCurrentIndex, fsVolumeHighClass=fsVolumeHighClass, trapIncludeSiteName=trapIncludeSiteName, rtsFilePushPort=rtsFilePushPort, pdnMainCurrentValueStr=pdnMainCurrentValueStr, acpmTPFLowActions=acpmTPFLowActions, acpmDisconnectTable=acpmDisconnectTable, s530UserTrap1030=s530UserTrap1030, evdFieldEntry=evdFieldEntry, acpmDisconnectEnable=acpmDisconnectEnable, sysLogFileCount=sysLogFileCount, ethExpanIp=ethExpanIp, pppDialIdleTimeout=pppDialIdleTimeout, wmsPhnum=wmsPhnum, s530UserTrap1192=s530UserTrap1192, pppHostRemoteIP=pppHostRemoteIP, s530UserTrap1153=s530UserTrap1153, pppDial=pppDial, fsStatusName=fsStatusName, secVPN=secVPN, rtsAlarmsEmptyClose=rtsAlarmsEmptyClose, s530UserTrap1132=s530UserTrap1132, evResetEnable=evResetEnable, rts=rts, s530UserTrap1026=s530UserTrap1026, evSched1Wednesday=evSched1Wednesday, email=email, sysLocYOffset=sysLocYOffset, secUserEnable=secUserEnable, esCCCombinedStatusBlock1=esCCCombinedStatusBlock1, cpeEventReminderInterval=cpeEventReminderInterval, trapIncludedString=trapIncludedString, s530UserTrap1114=s530UserTrap1114, espcOutputIndexES=espcOutputIndexES, acpmAvgCurrentNormalTrapNum=acpmAvgCurrentNormalTrapNum, wirelessPPPDebug=wirelessPPPDebug, sysTimeStamp=sysTimeStamp, evMgmtReprocess=evMgmtReprocess, s530UserTrap1057=s530UserTrap1057, evNoData2Message=evNoData2Message, pdnIndexPD=pdnIndexPD, fsGenName=fsGenName, espcOutputActiveActions=espcOutputActiveActions, pdnEntry=pdnEntry, portConfigStoreAlarmsDPT=portConfigStoreAlarmsDPT, espcTempDeadband=espcTempDeadband, portConfigStripPtInputLfs=portConfigStripPtInputLfs, ncpTimeout=ncpTimeout, espcTempHighActions=espcTempHighActions, PYSNMP_MODULE_ID=s530, fsGenTopOffset=fsGenTopOffset, status=status, acpmFreqVLowValue=acpmFreqVLowValue, network=network, sysAMManufacturer=sysAMManufacturer, evShskHighEnable=evShskHighEnable, evNoData1Days=evNoData1Days, serialPorts=serialPorts, acpmAvgCurrentLowClass=acpmAvgCurrentLowClass, acpmAvgVoltageLowTrapNum=acpmAvgVoltageLowTrapNum, esPointConfigCCTable=esPointConfigCCTable, s530UserTrap1065=s530UserTrap1065, acpmTPFEnable=acpmTPFEnable, wmsLocalIP=wmsLocalIP, portConfigHsk=portConfigHsk, s530UserTrap1122=s530UserTrap1122, esNumberCCs=esNumberCCs, acpmDisconnectActions=acpmDisconnectActions, acpmsVoltagePhaseCValueStr=acpmsVoltagePhaseCValueStr, s530UserTrap1048=s530UserTrap1048, actionEmailIndex=actionEmailIndex, s530ACPowerMonitorFrequencyTrap=s530ACPowerMonitorFrequencyTrap, pdnMainCurrentHighCurrent=pdnMainCurrentHighCurrent, esPointClassValueStr=esPointClassValueStr, acpmsTAPMinStr=acpmsTAPMinStr, s530UserTrap1112=s530UserTrap1112, productIds=productIds, s530UserTrap1130=s530UserTrap1130, interface=interface, evNoData2PortEnable=evNoData2PortEnable, esOutputCombinedStatusBlock2=esOutputCombinedStatusBlock2, s530UserTrap1075=s530UserTrap1075, sfEnable=sfEnable, evdFieldStart=evdFieldStart, wirelessConnFailThreshold=wirelessConnFailThreshold, evNoData1Sched1End=evNoData1Sched1End, esAnalogCombinedStatusBlock4=esAnalogCombinedStatusBlock4, acpmAvgCurrentVHighClass=acpmAvgCurrentVHighClass, espcOutputInactiveColor=espcOutputInactiveColor, deStatusThreshold=deStatusThreshold, evData=evData, eth2Mode=eth2Mode, evSched2Saturday=evSched2Saturday, deStatusName=deStatusName, s530UserTrap1066=s530UserTrap1066)
mibBuilder.exportSymbols("SITEBOSS-530-STD-MIB", acpmFreqSysrepThreshold=acpmFreqSysrepThreshold, actionCallNumberIndex=actionCallNumberIndex, espcOutputInactiveTrapnum=espcOutputInactiveTrapnum, wmsStatus=wmsStatus, ppp=ppp, s530UserTrap1063=s530UserTrap1063, actionSchedEnd=actionSchedEnd, trapEventClassName=trapEventClassName, acpmTRPHighValue=acpmTRPHighValue, acpmFreqVLowClass=acpmFreqVLowClass, s530UserTrap1119=s530UserTrap1119, s530ACPowerMonitorDisconnectTrap=s530ACPowerMonitorDisconnectTrap, s530StockDbasePfullTrap=s530StockDbasePfullTrap, sysLogFilter=sysLogFilter, auditLogStoreInactivity=auditLogStoreInactivity, actionPagerID=actionPagerID, secUserChallengeConsoleMode=secUserChallengeConsoleMode, fsTankDimB=fsTankDimB, s530UserTrap1015=s530UserTrap1015, pdnMainCurrentLowCurrent=pdnMainCurrentLowCurrent, s530UserTrap1044=s530UserTrap1044, wmsUpdated=wmsUpdated, acpmAvgCurrentEntry=acpmAvgCurrentEntry, rtsAlarmsTimeout=rtsAlarmsTimeout, wmsSIMStatus=wmsSIMStatus, consoleConfirm=consoleConfirm, auditLogStoreLogins=auditLogStoreLogins, cpeKeepaliveTicks=cpeKeepaliveTicks, s530UserTrap1199=s530UserTrap1199, cpeInfoPercentBad=cpeInfoPercentBad, espcOutputActiveClass=espcOutputActiveClass, cpeKeepalive=cpeKeepalive, modemCLIDNumber=modemCLIDNumber, acpmAvgVoltageSysrepThreshold=acpmAvgVoltageSysrepThreshold, esCCCombinedStatusBlock7=esCCCombinedStatusBlock7, sysTime=sysTime, acpmAvgVoltageSysrepLimit=acpmAvgVoltageSysrepLimit, s530UserTrap1052=s530UserTrap1052, evNoData1Sched2Begin=evNoData1Sched2Begin, evSched2Actions=evSched2Actions, acpmsAvgVoltageInEventState=acpmsAvgVoltageInEventState, evdEntry=evdEntry, acpmsAvgVoltageMaxStr=acpmsAvgVoltageMaxStr, evdActions=evdActions, s530UserTrap1074=s530UserTrap1074, espcHumidVLowActions=espcHumidVLowActions, s530UserTrap1178=s530UserTrap1178, espcHumidNormalActions=espcHumidNormalActions, espcHumidLowTrapnum=espcHumidLowTrapnum, powerDistributionStatus=powerDistributionStatus, espcAIVhighActions=espcAIVhighActions, sysCRDBPercentFull=sysCRDBPercentFull, sysTimeStampTimeFormat=sysTimeStampTimeFormat, pdnMainVoltageValueStr=pdnMainVoltageValueStr, wmsBER=wmsBER, evdEnable=evdEnable, acpmsAvgCurrentInEventState=acpmsAvgCurrentInEventState, acpmsCurrentPhaseAValueStr=acpmsCurrentPhaseAValueStr, s530UserTrap1138=s530UserTrap1138, clock=clock, espcOutputIndexPoint=espcOutputIndexPoint, acpmTRPIndex=acpmTRPIndex, espcAIDisplayFormat=espcAIDisplayFormat, fsVolumeNormalClass=fsVolumeNormalClass, cpeInfoReset=cpeInfoReset, actionSchedWeekdaysOnly=actionSchedWeekdaysOnly, espcHumidVHighTrapnum=espcHumidVHighTrapnum, acpmAvgVoltageDeadband=acpmAvgVoltageDeadband, portConfigDAEnable=portConfigDAEnable, evSched1Enable=evSched1Enable, s530UserTrap1036=s530UserTrap1036, wmsRegistration=wmsRegistration, routeTestAddressEntry=routeTestAddressEntry, secUserAuditReadAccess=secUserAuditReadAccess, sysCRDBCapacity=sysCRDBCapacity, acpmFreqHighActions=acpmFreqHighActions, s530UserTrap1090=s530UserTrap1090, espcTempLowTemp=espcTempLowTemp, wirelessConnIP2=wirelessConnIP2, sysLocAngle=sysLocAngle, esOutputReportingMode=esOutputReportingMode, evLogStoreAlarm=evLogStoreAlarm, espcAIHighValue=espcAIHighValue, esPointTimeLastChange=esPointTimeLastChange, ipRestrictionMask=ipRestrictionMask, espcHumidNormalClass=espcHumidNormalClass, s530UserTrap1115=s530UserTrap1115, modemCLIDLogIndex=modemCLIDLogIndex, acpmsAvgCurrentMaxStr=acpmsAvgCurrentMaxStr, espcHumidLowActions=espcHumidLowActions, s530UserTrap1105=s530UserTrap1105, deStatusIndex=deStatusIndex, eth1Mode=eth1Mode, s530UserTrap1143=s530UserTrap1143, rtsAlarmsPushHost=rtsAlarmsPushHost, modemCLIDLogEntry=modemCLIDLogEntry, eth2Router=eth2Router, evNoData1PortEnable=evNoData1PortEnable, evShskHighTrapNum=evShskHighTrapNum, esCCCombinedStatusBlock4=esCCCombinedStatusBlock4, acpmsAvgFreqValueStr=acpmsAvgFreqValueStr, trapIncludeSourceAddress=trapIncludeSourceAddress, sysTimeStampDateFormat=sysTimeStampDateFormat, s530UserTrap1005=s530UserTrap1005, esCCCombinedStatusBlock5=esCCCombinedStatusBlock5, esCCCombinedStatusBlock8=esCCCombinedStatusBlock8, pdnOutputCurrentVLowCurrent=pdnOutputCurrentVLowCurrent, actionPagerMessage=actionPagerMessage, evSched2Message=evSched2Message, fsVolumeEntry=fsVolumeEntry, espcAIConvLowValue=espcAIConvLowValue, espcHumidLowHumid=espcHumidLowHumid, esPointTimetickLastChange=esPointTimetickLastChange, fsDiscClass=fsDiscClass, s530UserTrap1111=s530UserTrap1111, wirelessConnCheckInterval=wirelessConnCheckInterval, s530CPEDownTrap=s530CPEDownTrap, s530UserTrap1001=s530UserTrap1001, routeTestAddressTable=routeTestAddressTable, evNoData2Exclusions=evNoData2Exclusions, espcAIVhighTrapnum=espcAIVhighTrapnum, fsVolumeHighTrapNum=fsVolumeHighTrapNum, sysCRDB=sysCRDB, evNoData2Class=evNoData2Class, evdFilterAction=evdFilterAction, ftpPushServer=ftpPushServer, sysAMSerialNumber=sysAMSerialNumber, s530UserTrap1158=s530UserTrap1158, routing=routing, acpmAvgVoltageLowActions=acpmAvgVoltageLowActions, fsGenSysrepPackage=fsGenSysrepPackage, trapTypeString=trapTypeString, acpmsTotalEnergyWh=acpmsTotalEnergyWh, fsGenIndex=fsGenIndex, cpeInfoNumReq=cpeInfoNumReq, pppDialPlainLogin=pppDialPlainLogin, s530FuelSensorVolumeTrap=s530FuelSensorVolumeTrap, evSched2=evSched2, s530UserTrap1004=s530UserTrap1004, esNumberAirflowSensors=esNumberAirflowSensors, actionPagerNumber=actionPagerNumber, s530UserTrap1023=s530UserTrap1023, espcAIVlowTrapnum=espcAIVlowTrapnum, hostname=hostname, pdnMainCurrentInEventState=pdnMainCurrentInEventState, s530UserTrap1147=s530UserTrap1147, defaultRouter=defaultRouter, acpmAvgVoltageLowValue=acpmAvgVoltageLowValue, dataEventStatus=dataEventStatus, evNoData2Sched2Duration=evNoData2Sched2Duration, evdMacroTable=evdMacroTable, acpmTPFLowClass=acpmTPFLowClass, s530UserTrap1109=s530UserTrap1109, acpmAvgCurrentNormalClass=acpmAvgCurrentNormalClass, s530UserTrap1098=s530UserTrap1098, portConfigBaud=portConfigBaud, acpmAvgCurrentSysrepLimit=acpmAvgCurrentSysrepLimit, evdMacroIndex=evdMacroIndex, acpmAvgVoltageVHighActions=acpmAvgVoltageVHighActions, sysTimeGMTOffset=sysTimeGMTOffset, portConfigMLRLineCount=portConfigMLRLineCount, hostIndex=hostIndex, modemCLIDLogNumber=modemCLIDLogNumber, s530UserTrap1020=s530UserTrap1020, portConfigMode=portConfigMode, evSched2Sunday=evSched2Sunday, cpeEntry=cpeEntry, fsStatusDeviceState=fsStatusDeviceState, acpmAvgVoltageSysrepEnable=acpmAvgVoltageSysrepEnable, dnsIndex=dnsIndex, espcAINormalActions=espcAINormalActions, espcAIVlowActions=espcAIVlowActions, secUserRights=secUserRights, s530UserTrap1094=s530UserTrap1094, acpmsTRcPAvgStr=acpmsTRcPAvgStr, s530UserTrap1072=s530UserTrap1072, acpmsTRPAvgStr=acpmsTRPAvgStr, ethExpanCardTable=ethExpanCardTable, fsDiscLowValue=fsDiscLowValue, evdClass=evdClass, acpmsTRPInEventState=acpmsTRPInEventState, acpmAvgCurrentVHighValue=acpmAvgCurrentVHighValue, portConfigMLREndField1Text=portConfigMLREndField1Text, s530UserTrap1120=s530UserTrap1120, acpmFreqIndex=acpmFreqIndex, evNoData2TrapNum=evNoData2TrapNum, s530UserTrap1007=s530UserTrap1007, pppDialLoginTimeout=pppDialLoginTimeout, s530UserTrap1137=s530UserTrap1137, s530UserTrap1154=s530UserTrap1154, secUserEntry=secUserEntry, snmpNotificationTx=snmpNotificationTx, pdnMainVoltageInEventState=pdnMainVoltageInEventState, s530UserTrap1011=s530UserTrap1011, esNumberNoiseSensors=esNumberNoiseSensors, pppDialMdmInit=pppDialMdmInit, rtsAlarmsPushPort=rtsAlarmsPushPort, deStatusEntry=deStatusEntry, sysLogFileSize=sysLogFileSize, s530UserTrap1042=s530UserTrap1042, s530UserTrap1159=s530UserTrap1159, s530UserTrap1016=s530UserTrap1016, esID=esID, s530UserTrap1165=s530UserTrap1165, wmsNetName=wmsNetName, s530UserTrap1160=s530UserTrap1160, acpmsName=acpmsName, pppDialRetries=pppDialRetries, modemCmdTimout=modemCmdTimout, evMgmt=evMgmt, acpmDisconnectTrapNum=acpmDisconnectTrapNum, secUserCallbackNumber1=secUserCallbackNumber1, espcTempLowTrapnum=espcTempLowTrapnum, rtsAlarmsReqXON=rtsAlarmsReqXON, s530UserTrap1180=s530UserTrap1180, time=time, s530UserTrap1108=s530UserTrap1108, routeTestEnable=routeTestEnable, evShskLowClass=evShskLowClass, acpmFreqLowClass=acpmFreqLowClass, s530UserTrap1081=s530UserTrap1081, evSched1=evSched1, s530UserTrap1197=s530UserTrap1197, fsVolumeLowValue=fsVolumeLowValue, s530UserTrap1174=s530UserTrap1174, secUserPTEscapeTo=secUserPTEscapeTo, fsVolumeIndex=fsVolumeIndex, espcAIIndexPoint=espcAIIndexPoint, evSched1Class=evSched1Class, evNoData1=evNoData1, s530FuelSensorDisconnectTrap=s530FuelSensorDisconnectTrap, actionHostTable=actionHostTable, fsStatusIndex=fsStatusIndex, sysMTU=sysMTU, sysLocLongitude=sysLocLongitude, acpmsAvgVoltageAvgStr=acpmsAvgVoltageAvgStr, evNoData1Sched2End=evNoData1Sched2End, pppHostIdleTimeout=pppHostIdleTimeout, keyInterface=keyInterface, evShskLowMessage=evShskLowMessage, acpmsRcPPhaseCValueStr=acpmsRcPPhaseCValueStr, acpmsTAPValueStr=acpmsTAPValueStr, s530UserTrap1123=s530UserTrap1123, fuelSensorDisconnectTable=fuelSensorDisconnectTable, ipv6DefaultRouter=ipv6DefaultRouter, sysTimeGMTDirection=sysTimeGMTDirection, fsCustomTankIndexDatum=fsCustomTankIndexDatum, ftpPushPushFileIndex=ftpPushPushFileIndex, evShskLowTable=evShskLowTable, sysLogMode=sysLogMode, secUserChallengeModemMode=secUserChallengeModemMode, acpmFreqVHighValue=acpmFreqVHighValue, pdnMainVoltageHighVoltage=pdnMainVoltageHighVoltage, actionAsentria=actionAsentria)
mibBuilder.exportSymbols("SITEBOSS-530-STD-MIB", s530=s530, acpmTPFIndex=acpmTPFIndex, acpmFreqVHighClass=acpmFreqVHighClass, acpmAvgCurrentVHighActions=acpmAvgCurrentVHighActions, acpmAvgCurrentVLowActions=acpmAvgCurrentVLowActions, sysAMHardwareOptions=sysAMHardwareOptions, portConfigMLREndDetection=portConfigMLREndDetection, acpmAvgVoltageLowClass=acpmAvgVoltageLowClass, s530UserTrap1101=s530UserTrap1101, acpmsCombined=acpmsCombined, portConfigMLRStartField2Pos=portConfigMLRStartField2Pos, portConfigMLREndField1Pos=portConfigMLREndField1Pos, fuelSensorVolumeTable=fuelSensorVolumeTable, acpmTPFVLowClass=acpmTPFVLowClass, acpmTRPLowActions=acpmTRPLowActions, espcCCEnable=espcCCEnable, evNoData1Sched1Begin=evNoData1Sched1Begin, sysPrompt=sysPrompt, fsGenInputPoint=fsGenInputPoint, wirelessKeepaliveThreshold=wirelessKeepaliveThreshold, fsDiscNormalActions=fsDiscNormalActions, acpmFreqHighValue=acpmFreqHighValue, acpmTRPDeadband=acpmTRPDeadband, evSched2Thursday=evSched2Thursday, routingInterface=routingInterface, esNoiseReportingMode=esNoiseReportingMode, s530UserTrap1121=s530UserTrap1121, evNoData1PortEnableEntry=evNoData1PortEnableEntry, espcCCEventTrapnum=espcCCEventTrapnum, acpmAvgCurrentHighTrapNum=acpmAvgCurrentHighTrapNum, sysCRDBFileIDTable=sysCRDBFileIDTable, fsVolumeVHighValue=fsVolumeVHighValue, modemInitString=modemInitString, fsVolumeVLowValue=fsVolumeVLowValue)
