#
# PySNMP MIB module ISIS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/output/asn1/ISIS-MIB
# Produced by pysmi-1.1.8 at Thu Jan  6 19:44:27 2022
# On host fv-az121-779 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
InetAddressPrefixLength, InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressPrefixLength", "InetAddress", "InetAddressType")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter32, ObjectIdentity, Counter64, TimeTicks, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, iso, IpAddress, experimental, MibIdentifier, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "Counter64", "TimeTicks", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "iso", "IpAddress", "experimental", "MibIdentifier", "Integer32", "ModuleIdentity")
RowStatus, TextualConvention, DisplayString, TestAndIncr, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString", "TestAndIncr", "TruthValue")
isisMIB = ModuleIdentity((1, 3, 6, 1, 3, 37))
if mibBuilder.loadTexts: isisMIB.setLastUpdated('200111151200Z')
if mibBuilder.loadTexts: isisMIB.setOrganization('IETF IS-IS for IP Internets Working Group')
isisObjects = MibIdentifier((1, 3, 6, 1, 3, 37, 1))
isisNotifications = MibIdentifier((1, 3, 6, 1, 3, 37, 2))
isisConformance = MibIdentifier((1, 3, 6, 1, 3, 37, 3))
isisSystem = ObjectIdentity((1, 3, 6, 1, 3, 37, 1, 1))
if mibBuilder.loadTexts: isisSystem.setStatus('current')
isisCirc = ObjectIdentity((1, 3, 6, 1, 3, 37, 1, 2))
if mibBuilder.loadTexts: isisCirc.setStatus('current')
isisCircLevelValues = ObjectIdentity((1, 3, 6, 1, 3, 37, 1, 3))
if mibBuilder.loadTexts: isisCircLevelValues.setStatus('current')
isisCircPDUCounters = ObjectIdentity((1, 3, 6, 1, 3, 37, 1, 4))
if mibBuilder.loadTexts: isisCircPDUCounters.setStatus('current')
isisISAdj = ObjectIdentity((1, 3, 6, 1, 3, 37, 1, 5))
if mibBuilder.loadTexts: isisISAdj.setStatus('current')
isisReachAddr = ObjectIdentity((1, 3, 6, 1, 3, 37, 1, 6))
if mibBuilder.loadTexts: isisReachAddr.setStatus('current')
isisIPReachAddr = ObjectIdentity((1, 3, 6, 1, 3, 37, 1, 7))
if mibBuilder.loadTexts: isisIPReachAddr.setStatus('current')
class OSINSAddress(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 20)

class SNPAAddress(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 20)

class NSAPPrefix(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 21)

class SNPAPrefix(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 21)

class SystemID(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 6)

class AdminState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("off", 1), ("on", 2))

class UpTime(TextualConvention, Integer32):
    status = 'current'

class LSPBuffSize(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(512, 1492)

class LevelState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("off", 1), ("on", 2), ("waiting", 3))

class SupportedProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(129, 204, 205))
    namedValues = NamedValues(("iso8473", 129), ("ip", 204), ("ipV6", 205))

class DefaultMetric(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 63)

class MetricType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("internal", 1), ("external", 2))

class CircuitID(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(2, 9)

class ISPriority(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 127)

isisSysTable = MibTable((1, 3, 6, 1, 3, 37, 1, 1, 1), )
if mibBuilder.loadTexts: isisSysTable.setStatus('current')
isisSysEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 1, 1, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"))
if mibBuilder.loadTexts: isisSysEntry.setStatus('current')
isisSysInstance = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)))
if mibBuilder.loadTexts: isisSysInstance.setStatus('current')
isisSysVersion = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysVersion.setStatus('current')
isisSysType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("level1IS", 1), ("level2IS", 2), ("level1L2IS", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSysType.setStatus('current')
isisSysID = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 4), SystemID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSysID.setStatus('current')
isisSysMaxPathSplits = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSysMaxPathSplits.setStatus('current')
isisSysMaxLSPGenInt = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(900)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSysMaxLSPGenInt.setStatus('current')
isisSysOrigL1LSPBuffSize = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 7), LSPBuffSize().clone(1492)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSysOrigL1LSPBuffSize.setStatus('current')
isisSysMaxAreaAddresses = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 254)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSysMaxAreaAddresses.setStatus('current')
isisSysMinL1LSPGenInt = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSysMinL1LSPGenInt.setStatus('current')
isisSysMinL2LSPGenInt = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSysMinL2LSPGenInt.setStatus('current')
isisSysPollESHelloRate = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSysPollESHelloRate.setStatus('current')
isisSysWaitTime = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSysWaitTime.setStatus('current')
isisSysAdminState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 13), AdminState().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSysAdminState.setStatus('current')
isisSysL1State = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 14), LevelState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysL1State.setStatus('current')
isisSysCorrLSPs = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysCorrLSPs.setStatus('current')
isisSysLSPL1DbaseOloads = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysLSPL1DbaseOloads.setStatus('current')
isisSysManAddrDropFromAreas = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysManAddrDropFromAreas.setStatus('current')
isisSysAttmptToExMaxSeqNums = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysAttmptToExMaxSeqNums.setStatus('current')
isisSysSeqNumSkips = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysSeqNumSkips.setStatus('current')
isisSysOwnLSPPurges = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysOwnLSPPurges.setStatus('current')
isisSysIDFieldLenMismatches = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysIDFieldLenMismatches.setStatus('current')
isisSysMaxAreaAddrMismatches = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysMaxAreaAddrMismatches.setStatus('current')
isisSysOrigL2LSPBuffSize = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 23), LSPBuffSize().clone(1492)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSysOrigL2LSPBuffSize.setStatus('current')
isisSysL2State = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 24), LevelState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysL2State.setStatus('current')
isisSysLSPL2DbaseOloads = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysLSPL2DbaseOloads.setStatus('current')
isisSysAuthFails = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysAuthFails.setStatus('current')
isisSysLSPIgnoreErrors = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 27), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSysLSPIgnoreErrors.setStatus('current')
isisSysLogAdjacencyChanges = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 28), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSysLogAdjacencyChanges.setStatus('current')
isisSysPartChanges = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysPartChanges.setStatus('current')
isisSysMaxAreaCheck = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 30), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSysMaxAreaCheck.setStatus('current')
isisSysNextCircIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 31), TestAndIncr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisSysNextCircIndex.setStatus('current')
isisSysExistState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 32), RowStatus().clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSysExistState.setStatus('current')
isisSysL2toL1Leaking = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 33), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSysL2toL1Leaking.setStatus('current')
isisSysSetOverload = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("setL1Overload", 1), ("setL2Overload", 2), ("setL1L2Overload", 3), ("overloadClear", 4))).clone('overloadClear')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSysSetOverload.setStatus('current')
isisManAreaAddrTable = MibTable((1, 3, 6, 1, 3, 37, 1, 1, 2), )
if mibBuilder.loadTexts: isisManAreaAddrTable.setStatus('current')
isisManAreaAddrEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 1, 2, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ISIS-MIB", "isisManAreaAddr"))
if mibBuilder.loadTexts: isisManAreaAddrEntry.setStatus('current')
isisManAreaAddr = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 2, 1, 1), OSINSAddress())
if mibBuilder.loadTexts: isisManAreaAddr.setStatus('current')
isisManAreaAddrExistState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 2, 1, 2), RowStatus().clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisManAreaAddrExistState.setStatus('current')
isisAreaAddrTable = MibTable((1, 3, 6, 1, 3, 37, 1, 1, 3), )
if mibBuilder.loadTexts: isisAreaAddrTable.setStatus('current')
isisAreaAddrEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 1, 3, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ISIS-MIB", "isisAreaAddr"))
if mibBuilder.loadTexts: isisAreaAddrEntry.setStatus('current')
isisAreaAddr = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 3, 1, 1), OSINSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisAreaAddr.setStatus('current')
isisSysProtSuppTable = MibTable((1, 3, 6, 1, 3, 37, 1, 1, 4), )
if mibBuilder.loadTexts: isisSysProtSuppTable.setStatus('current')
isisSysProtSuppEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 1, 4, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ISIS-MIB", "isisSysProtSuppProtocol"))
if mibBuilder.loadTexts: isisSysProtSuppEntry.setStatus('current')
isisSysProtSuppProtocol = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 4, 1, 1), SupportedProtocol())
if mibBuilder.loadTexts: isisSysProtSuppProtocol.setStatus('current')
isisSysProtSuppExistState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 4, 1, 2), RowStatus().clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSysProtSuppExistState.setStatus('current')
isisSummAddrTable = MibTable((1, 3, 6, 1, 3, 37, 1, 1, 5), )
if mibBuilder.loadTexts: isisSummAddrTable.setStatus('current')
isisSummAddrEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 1, 5, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ISIS-MIB", "isisSummAddressType"), (0, "ISIS-MIB", "isisSummAddress"), (0, "ISIS-MIB", "isisSummAddrPrefixLen"))
if mibBuilder.loadTexts: isisSummAddrEntry.setStatus('current')
isisSummAddressType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 5, 1, 1), InetAddressType())
if mibBuilder.loadTexts: isisSummAddressType.setStatus('current')
isisSummAddress = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 5, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: isisSummAddress.setStatus('current')
isisSummAddrPrefixLen = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 5, 1, 3), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: isisSummAddrPrefixLen.setStatus('current')
isisSummAddrExistState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 5, 1, 4), RowStatus().clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSummAddrExistState.setStatus('current')
isisSummAddrAdminState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("summaryL1", 1), ("summaryL2", 2), ("summaryL1L2", 3), ("summaryOff", 4))).clone('summaryOff')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSummAddrAdminState.setStatus('current')
isisSummAddrDefaultMetric = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 1, 5, 1, 6), DefaultMetric().clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisSummAddrDefaultMetric.setStatus('current')
isisCircTable = MibTable((1, 3, 6, 1, 3, 37, 1, 2, 1), )
if mibBuilder.loadTexts: isisCircTable.setStatus('current')
isisCircEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 2, 1, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ISIS-MIB", "isisCircIndex"))
if mibBuilder.loadTexts: isisCircEntry.setStatus('current')
isisCircIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000000000)))
if mibBuilder.loadTexts: isisCircIndex.setStatus('current')
isisCircIfIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircIfIndex.setStatus('current')
isisCircIfSubIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircIfSubIndex.setStatus('current')
isisCircLocalID = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircLocalID.setStatus('current')
isisCircAdminState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 5), AdminState().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircAdminState.setStatus('current')
isisCircExistState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 6), RowStatus().clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircExistState.setStatus('current')
isisCircType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("broadcast", 1), ("ptToPt", 2), ("staticIn", 3), ("staticOut", 4), ("dA", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircType.setStatus('current')
isisCircExtDomain = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircExtDomain.setStatus('current')
isisCircAdjChanges = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircAdjChanges.setStatus('current')
isisCircInitFails = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircInitFails.setStatus('current')
isisCircRejAdjs = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircRejAdjs.setStatus('current')
isisCircOutCtrlPDUs = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircOutCtrlPDUs.setStatus('current')
isisCircInCtrlPDUs = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircInCtrlPDUs.setStatus('current')
isisCircIDFieldLenMismatches = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircIDFieldLenMismatches.setStatus('current')
isisCircLevel = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2), ("level1L2", 3))).clone('level1L2')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircLevel.setStatus('current')
isisCircMCAddr = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("group", 1), ("functional", 2))).clone('group')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircMCAddr.setStatus('current')
isisCircPtToPtCircID = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 22), CircuitID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircPtToPtCircID.setStatus('current')
isisCircPassiveCircuit = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 23), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircPassiveCircuit.setStatus('current')
isisCircMeshGroupEnabled = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("blocked", 2), ("set", 3))).clone('inactive')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircMeshGroupEnabled.setStatus('current')
isisCircMeshGroup = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000000000)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircMeshGroup.setStatus('current')
isisCircSmallHellos = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 26), AdminState().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircSmallHellos.setStatus('current')
isisCircUpTime = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 2, 1, 1, 27), UpTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircUpTime.setStatus('current')
isisCircLevelTable = MibTable((1, 3, 6, 1, 3, 37, 1, 3, 1), )
if mibBuilder.loadTexts: isisCircLevelTable.setStatus('current')
isisCircLevelEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 3, 1, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ISIS-MIB", "isisCircIndex"), (0, "ISIS-MIB", "isisCircLevelIndex"))
if mibBuilder.loadTexts: isisCircLevelEntry.setStatus('current')
isisCircLevelIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level1IS", 1), ("level2IS", 2))))
if mibBuilder.loadTexts: isisCircLevelIndex.setStatus('current')
isisCircLevelDefaultMetric = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 2), DefaultMetric().clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircLevelDefaultMetric.setStatus('current')
isisCircLevelISPriority = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 3), ISPriority().clone(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircLevelISPriority.setStatus('current')
isisCircLevelCircID = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 4), CircuitID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircLevelCircID.setStatus('current')
isisCircLevelDesIS = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 5), SystemID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircLevelDesIS.setStatus('current')
isisCircLevelLANDesISChanges = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisCircLevelLANDesISChanges.setStatus('current')
isisCircLevelHelloMultiplier = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 100)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircLevelHelloMultiplier.setStatus('current')
isisCircLevelHelloTimer = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 600000)).clone(3000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircLevelHelloTimer.setStatus('current')
isisCircLevelDRHelloTimer = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 120000)).clone(1000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircLevelDRHelloTimer.setStatus('current')
isisCircLevelLSPThrottle = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircLevelLSPThrottle.setStatus('current')
isisCircLevelMinLSPRetransInt = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircLevelMinLSPRetransInt.setStatus('current')
isisCircLevelCSNPInterval = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 600)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircLevelCSNPInterval.setStatus('current')
isisCircLevelPartSNPInterval = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisCircLevelPartSNPInterval.setStatus('current')
isisPacketCountTable = MibTable((1, 3, 6, 1, 3, 37, 1, 4, 1), )
if mibBuilder.loadTexts: isisPacketCountTable.setStatus('current')
isisPacketCountEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 4, 1, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ISIS-MIB", "isisCircIndex"), (0, "ISIS-MIB", "isisPacketCountLevel"), (0, "ISIS-MIB", "isisPacketCountDirection"))
if mibBuilder.loadTexts: isisPacketCountEntry.setStatus('current')
isisPacketCountLevel = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2))))
if mibBuilder.loadTexts: isisPacketCountLevel.setStatus('current')
isisPacketCountDirection = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sending", 1), ("receiving", 2))))
if mibBuilder.loadTexts: isisPacketCountDirection.setStatus('current')
isisPacketCountHello = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisPacketCountHello.setStatus('current')
isisPacketCountLSP = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisPacketCountLSP.setStatus('current')
isisPacketCountCSNP = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisPacketCountCSNP.setStatus('current')
isisPacketCountPSNP = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 4, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisPacketCountPSNP.setStatus('current')
isisISAdjTable = MibTable((1, 3, 6, 1, 3, 37, 1, 5, 1), )
if mibBuilder.loadTexts: isisISAdjTable.setStatus('current')
isisISAdjEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 5, 1, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ISIS-MIB", "isisCircIndex"), (0, "ISIS-MIB", "isisISAdjIndex"))
if mibBuilder.loadTexts: isisISAdjEntry.setStatus('current')
isisISAdjIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000000000)))
if mibBuilder.loadTexts: isisISAdjIndex.setStatus('current')
isisISAdjState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("initializing", 1), ("up", 2), ("failed", 3), ("down", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjState.setStatus('current')
isisISAdjNeighSNPAAddress = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 3), SNPAAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjNeighSNPAAddress.setStatus('current')
isisISAdjNeighSysType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("l1IntermediateSystem", 1), ("l2IntermediateSystem", 2), ("l1L2IntermediateSystem", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjNeighSysType.setStatus('current')
isisISAdjNeighSysID = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjNeighSysID.setStatus('current')
isisISAdjUsage = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 1), ("level1", 2), ("level2", 3), ("level1and2", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjUsage.setStatus('current')
isisISAdjHoldTimer = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjHoldTimer.setStatus('current')
isisISAdjNeighPriority = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 8), ISPriority()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjNeighPriority.setStatus('current')
isisISAdjUpTime = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 1, 1, 9), UpTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjUpTime.setStatus('current')
isisISAdjAreaAddrTable = MibTable((1, 3, 6, 1, 3, 37, 1, 5, 2), )
if mibBuilder.loadTexts: isisISAdjAreaAddrTable.setStatus('current')
isisISAdjAreaAddrEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 5, 2, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ISIS-MIB", "isisCircIndex"), (0, "ISIS-MIB", "isisISAdjAreaAddrAdjIndex"), (0, "ISIS-MIB", "isisISAdjAreaAddress"))
if mibBuilder.loadTexts: isisISAdjAreaAddrEntry.setStatus('current')
isisISAdjAreaAddrAdjIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000000000)))
if mibBuilder.loadTexts: isisISAdjAreaAddrAdjIndex.setStatus('current')
isisISAdjAreaAddress = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 2, 1, 2), OSINSAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjAreaAddress.setStatus('current')
isisISAdjIPAddrTable = MibTable((1, 3, 6, 1, 3, 37, 1, 5, 3), )
if mibBuilder.loadTexts: isisISAdjIPAddrTable.setStatus('current')
isisISAdjIPAddrEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 5, 3, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ISIS-MIB", "isisCircIndex"), (0, "ISIS-MIB", "isisISAdjIPAddrAdjIndex"))
if mibBuilder.loadTexts: isisISAdjIPAddrEntry.setStatus('current')
isisISAdjIPAddrAdjIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000000000)))
if mibBuilder.loadTexts: isisISAdjIPAddrAdjIndex.setStatus('current')
isisISAdjIPAddressType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 3, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjIPAddressType.setStatus('current')
isisISAdjIPAddress = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 3, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjIPAddress.setStatus('current')
isisISAdjProtSuppTable = MibTable((1, 3, 6, 1, 3, 37, 1, 5, 4), )
if mibBuilder.loadTexts: isisISAdjProtSuppTable.setStatus('current')
isisISAdjProtSuppEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 5, 4, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ISIS-MIB", "isisCircIndex"), (0, "ISIS-MIB", "isisISAdjProtSuppAdjIndex"), (0, "ISIS-MIB", "isisISAdjProtSuppProtocol"))
if mibBuilder.loadTexts: isisISAdjProtSuppEntry.setStatus('current')
isisISAdjProtSuppAdjIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000000000)))
if mibBuilder.loadTexts: isisISAdjProtSuppAdjIndex.setStatus('current')
isisISAdjProtSuppProtocol = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 5, 4, 1, 2), SupportedProtocol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: isisISAdjProtSuppProtocol.setStatus('current')
isisRATable = MibTable((1, 3, 6, 1, 3, 37, 1, 6, 1), )
if mibBuilder.loadTexts: isisRATable.setStatus('current')
isisRAEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 6, 1, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ISIS-MIB", "isisCircIndex"), (0, "ISIS-MIB", "isisRAIndex"))
if mibBuilder.loadTexts: isisRAEntry.setStatus('current')
isisRAIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000000000)))
if mibBuilder.loadTexts: isisRAIndex.setStatus('current')
isisRAExistState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 2), RowStatus().clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRAExistState.setStatus('current')
isisRAAdminState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 3), AdminState().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRAAdminState.setStatus('current')
isisRAAddrPrefix = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 4), NSAPPrefix()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRAAddrPrefix.setStatus('current')
isisRAMapType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("explicit", 2), ("extractIDI", 3), ("extractDSP", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRAMapType.setStatus('current')
isisRADefMetric = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 6), DefaultMetric().clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRADefMetric.setStatus('current')
isisRADefMetricType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 7), MetricType().clone('internal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRADefMetricType.setStatus('current')
isisRASNPAAddress = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 8), SNPAAddress().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRASNPAAddress.setStatus('current')
isisRASNPAMask = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 9), SNPAPrefix().clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRASNPAMask.setStatus('current')
isisRASNPAPrefix = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 10), SNPAPrefix().clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRASNPAPrefix.setStatus('current')
isisRAType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 6, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("automatic", 2))).clone('manual')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisRAType.setStatus('current')
isisIPRATable = MibTable((1, 3, 6, 1, 3, 37, 1, 7, 1), )
if mibBuilder.loadTexts: isisIPRATable.setStatus('current')
isisIPRAEntry = MibTableRow((1, 3, 6, 1, 3, 37, 1, 7, 1, 1), ).setIndexNames((0, "ISIS-MIB", "isisSysInstance"), (0, "ISIS-MIB", "isisCircIndex"), (0, "ISIS-MIB", "isisIPRAType"), (0, "ISIS-MIB", "isisIPRAIndex"))
if mibBuilder.loadTexts: isisIPRAEntry.setStatus('current')
isisIPRAIndex = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2000000000)))
if mibBuilder.loadTexts: isisIPRAIndex.setStatus('current')
isisIPRAType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("automatic", 2))))
if mibBuilder.loadTexts: isisIPRAType.setStatus('current')
isisIPRADestType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisIPRADestType.setStatus('current')
isisIPRADest = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisIPRADest.setStatus('current')
isisIPRADestPrefixLen = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 5), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisIPRADestPrefixLen.setStatus('current')
isisIPRAExistState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 6), RowStatus().clone('active')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisIPRAExistState.setStatus('current')
isisIPRAAdminState = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 7), AdminState().clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisIPRAAdminState.setStatus('current')
isisIPRADefMetric = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 8), DefaultMetric().clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisIPRADefMetric.setStatus('current')
isisIPRADefMetricType = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 9), MetricType().clone('internal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisIPRADefMetricType.setStatus('current')
isisIPRASNPAAddress = MibTableColumn((1, 3, 6, 1, 3, 37, 1, 7, 1, 1, 10), SNPAAddress().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: isisIPRASNPAAddress.setStatus('current')
isisGroups = MibIdentifier((1, 3, 6, 1, 3, 37, 3, 1))
isisCompliances = MibIdentifier((1, 3, 6, 1, 3, 37, 3, 2))
isisCompliance = ModuleCompliance((1, 3, 6, 1, 3, 37, 3, 2, 1)).setObjects(("ISIS-MIB", "isisSystemGroup"), ("ISIS-MIB", "isisCircuitGroup"), ("ISIS-MIB", "isisISAdjGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisCompliance = isisCompliance.setStatus('current')
isisSystemGroup = ObjectGroup((1, 3, 6, 1, 3, 37, 3, 1, 1)).setObjects(("ISIS-MIB", "isisSysVersion"), ("ISIS-MIB", "isisSysType"), ("ISIS-MIB", "isisSysID"), ("ISIS-MIB", "isisSysMaxPathSplits"), ("ISIS-MIB", "isisSysMaxLSPGenInt"), ("ISIS-MIB", "isisSysOrigL1LSPBuffSize"), ("ISIS-MIB", "isisSysMaxAreaAddresses"), ("ISIS-MIB", "isisSysMinL1LSPGenInt"), ("ISIS-MIB", "isisSysMinL2LSPGenInt"), ("ISIS-MIB", "isisSysPollESHelloRate"), ("ISIS-MIB", "isisSysWaitTime"), ("ISIS-MIB", "isisSysAdminState"), ("ISIS-MIB", "isisSysL1State"), ("ISIS-MIB", "isisSysCorrLSPs"), ("ISIS-MIB", "isisSysLSPL1DbaseOloads"), ("ISIS-MIB", "isisSysManAddrDropFromAreas"), ("ISIS-MIB", "isisSysAttmptToExMaxSeqNums"), ("ISIS-MIB", "isisSysSeqNumSkips"), ("ISIS-MIB", "isisSysOwnLSPPurges"), ("ISIS-MIB", "isisSysIDFieldLenMismatches"), ("ISIS-MIB", "isisSysMaxAreaAddrMismatches"), ("ISIS-MIB", "isisSysOrigL2LSPBuffSize"), ("ISIS-MIB", "isisSysL2State"), ("ISIS-MIB", "isisSysLSPL2DbaseOloads"), ("ISIS-MIB", "isisSysAuthFails"), ("ISIS-MIB", "isisSysLSPIgnoreErrors"), ("ISIS-MIB", "isisSysLogAdjacencyChanges"), ("ISIS-MIB", "isisSysPartChanges"), ("ISIS-MIB", "isisSysMaxAreaCheck"), ("ISIS-MIB", "isisSysNextCircIndex"), ("ISIS-MIB", "isisSysExistState"), ("ISIS-MIB", "isisSysL2toL1Leaking"), ("ISIS-MIB", "isisSysSetOverload"), ("ISIS-MIB", "isisManAreaAddrExistState"), ("ISIS-MIB", "isisAreaAddr"), ("ISIS-MIB", "isisSysProtSuppExistState"), ("ISIS-MIB", "isisSummAddrExistState"), ("ISIS-MIB", "isisSummAddrAdminState"), ("ISIS-MIB", "isisSummAddrDefaultMetric"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisSystemGroup = isisSystemGroup.setStatus('current')
isisCircuitGroup = ObjectGroup((1, 3, 6, 1, 3, 37, 3, 1, 2)).setObjects(("ISIS-MIB", "isisCircIfSubIndex"), ("ISIS-MIB", "isisCircLocalID"), ("ISIS-MIB", "isisCircAdminState"), ("ISIS-MIB", "isisCircExistState"), ("ISIS-MIB", "isisCircType"), ("ISIS-MIB", "isisCircExtDomain"), ("ISIS-MIB", "isisCircAdjChanges"), ("ISIS-MIB", "isisCircInitFails"), ("ISIS-MIB", "isisCircRejAdjs"), ("ISIS-MIB", "isisCircOutCtrlPDUs"), ("ISIS-MIB", "isisCircInCtrlPDUs"), ("ISIS-MIB", "isisCircIDFieldLenMismatches"), ("ISIS-MIB", "isisCircLevel"), ("ISIS-MIB", "isisCircMCAddr"), ("ISIS-MIB", "isisCircPtToPtCircID"), ("ISIS-MIB", "isisCircPassiveCircuit"), ("ISIS-MIB", "isisCircMeshGroupEnabled"), ("ISIS-MIB", "isisCircMeshGroup"), ("ISIS-MIB", "isisCircSmallHellos"), ("ISIS-MIB", "isisCircUpTime"), ("ISIS-MIB", "isisCircIfIndex"), ("ISIS-MIB", "isisCircLevelDefaultMetric"), ("ISIS-MIB", "isisCircLevelISPriority"), ("ISIS-MIB", "isisCircLevelCircID"), ("ISIS-MIB", "isisCircLevelDesIS"), ("ISIS-MIB", "isisCircLevelLANDesISChanges"), ("ISIS-MIB", "isisCircLevelHelloMultiplier"), ("ISIS-MIB", "isisCircLevelHelloTimer"), ("ISIS-MIB", "isisCircLevelDRHelloTimer"), ("ISIS-MIB", "isisCircLevelLSPThrottle"), ("ISIS-MIB", "isisCircLevelMinLSPRetransInt"), ("ISIS-MIB", "isisCircLevelCSNPInterval"), ("ISIS-MIB", "isisCircLevelPartSNPInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisCircuitGroup = isisCircuitGroup.setStatus('current')
isisISAdjGroup = ObjectGroup((1, 3, 6, 1, 3, 37, 3, 1, 3)).setObjects(("ISIS-MIB", "isisISAdjState"), ("ISIS-MIB", "isisISAdjNeighSNPAAddress"), ("ISIS-MIB", "isisISAdjNeighSysType"), ("ISIS-MIB", "isisISAdjNeighSysID"), ("ISIS-MIB", "isisISAdjUsage"), ("ISIS-MIB", "isisISAdjHoldTimer"), ("ISIS-MIB", "isisISAdjNeighPriority"), ("ISIS-MIB", "isisISAdjUpTime"), ("ISIS-MIB", "isisISAdjAreaAddress"), ("ISIS-MIB", "isisISAdjIPAddressType"), ("ISIS-MIB", "isisISAdjIPAddress"), ("ISIS-MIB", "isisISAdjProtSuppProtocol"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisISAdjGroup = isisISAdjGroup.setStatus('current')
isisISPDUCounterGroup = ObjectGroup((1, 3, 6, 1, 3, 37, 3, 1, 4)).setObjects(("ISIS-MIB", "isisPacketCountHello"), ("ISIS-MIB", "isisPacketCountLSP"), ("ISIS-MIB", "isisPacketCountCSNP"), ("ISIS-MIB", "isisPacketCountPSNP"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisISPDUCounterGroup = isisISPDUCounterGroup.setStatus('current')
isisRATableGroup = ObjectGroup((1, 3, 6, 1, 3, 37, 3, 1, 5)).setObjects(("ISIS-MIB", "isisRAExistState"), ("ISIS-MIB", "isisRAAdminState"), ("ISIS-MIB", "isisRAAddrPrefix"), ("ISIS-MIB", "isisRAMapType"), ("ISIS-MIB", "isisRADefMetric"), ("ISIS-MIB", "isisRADefMetricType"), ("ISIS-MIB", "isisRASNPAAddress"), ("ISIS-MIB", "isisRASNPAMask"), ("ISIS-MIB", "isisRASNPAPrefix"), ("ISIS-MIB", "isisRAType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisRATableGroup = isisRATableGroup.setStatus('current')
isisISIPRADestGroup = ObjectGroup((1, 3, 6, 1, 3, 37, 3, 1, 6)).setObjects(("ISIS-MIB", "isisIPRADestType"), ("ISIS-MIB", "isisIPRADest"), ("ISIS-MIB", "isisIPRADestPrefixLen"), ("ISIS-MIB", "isisIPRAExistState"), ("ISIS-MIB", "isisIPRAAdminState"), ("ISIS-MIB", "isisIPRADefMetric"), ("ISIS-MIB", "isisIPRADefMetricType"), ("ISIS-MIB", "isisIPRASNPAAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    isisISIPRADestGroup = isisISIPRADestGroup.setStatus('current')
mibBuilder.exportSymbols("ISIS-MIB", isisCircPDUCounters=isisCircPDUCounters, isisSysSetOverload=isisSysSetOverload, isisRATableGroup=isisRATableGroup, LSPBuffSize=LSPBuffSize, isisSysVersion=isisSysVersion, isisCircSmallHellos=isisCircSmallHellos, isisSysOrigL2LSPBuffSize=isisSysOrigL2LSPBuffSize, isisCircIfIndex=isisCircIfIndex, isisCircType=isisCircType, isisSysInstance=isisSysInstance, isisCircPtToPtCircID=isisCircPtToPtCircID, isisISAdjProtSuppTable=isisISAdjProtSuppTable, isisSysLSPL1DbaseOloads=isisSysLSPL1DbaseOloads, isisISAdjEntry=isisISAdjEntry, isisISAdjNeighSysType=isisISAdjNeighSysType, isisISAdjIPAddrEntry=isisISAdjIPAddrEntry, isisPacketCountPSNP=isisPacketCountPSNP, isisISAdjTable=isisISAdjTable, isisSummAddress=isisSummAddress, isisCircInitFails=isisCircInitFails, DefaultMetric=DefaultMetric, isisSysPollESHelloRate=isisSysPollESHelloRate, isisGroups=isisGroups, isisRAAddrPrefix=isisRAAddrPrefix, isisSysWaitTime=isisSysWaitTime, isisSummAddrAdminState=isisSummAddrAdminState, isisCircLevelLSPThrottle=isisCircLevelLSPThrottle, isisIPRADefMetric=isisIPRADefMetric, isisIPRASNPAAddress=isisIPRASNPAAddress, isisISAdjUsage=isisISAdjUsage, isisCircLevelEntry=isisCircLevelEntry, isisCircExistState=isisCircExistState, isisObjects=isisObjects, isisRAType=isisRAType, isisCircMeshGroupEnabled=isisCircMeshGroupEnabled, isisISAdjHoldTimer=isisISAdjHoldTimer, isisISAdjAreaAddrAdjIndex=isisISAdjAreaAddrAdjIndex, isisSysL2toL1Leaking=isisSysL2toL1Leaking, LevelState=LevelState, isisISPDUCounterGroup=isisISPDUCounterGroup, isisReachAddr=isisReachAddr, SNPAPrefix=SNPAPrefix, isisCircLevelHelloTimer=isisCircLevelHelloTimer, isisRASNPAPrefix=isisRASNPAPrefix, isisSummAddrDefaultMetric=isisSummAddrDefaultMetric, isisSysExistState=isisSysExistState, isisPacketCountTable=isisPacketCountTable, isisIPRAExistState=isisIPRAExistState, isisIPRAEntry=isisIPRAEntry, SupportedProtocol=SupportedProtocol, isisCircEntry=isisCircEntry, AdminState=AdminState, isisCircLevelMinLSPRetransInt=isisCircLevelMinLSPRetransInt, isisSysID=isisSysID, isisSysLogAdjacencyChanges=isisSysLogAdjacencyChanges, isisSysAttmptToExMaxSeqNums=isisSysAttmptToExMaxSeqNums, isisSysNextCircIndex=isisSysNextCircIndex, isisSummAddrPrefixLen=isisSummAddrPrefixLen, isisAreaAddrTable=isisAreaAddrTable, SNPAAddress=SNPAAddress, isisCircTable=isisCircTable, isisCircuitGroup=isisCircuitGroup, isisSysMaxAreaAddresses=isisSysMaxAreaAddresses, isisSysSeqNumSkips=isisSysSeqNumSkips, isisISAdjNeighSysID=isisISAdjNeighSysID, isisSysMinL1LSPGenInt=isisSysMinL1LSPGenInt, isisRAEntry=isisRAEntry, isisSummAddrEntry=isisSummAddrEntry, isisCircLevelPartSNPInterval=isisCircLevelPartSNPInterval, isisCompliance=isisCompliance, isisManAreaAddr=isisManAreaAddr, isisPacketCountHello=isisPacketCountHello, isisCircLevelCircID=isisCircLevelCircID, isisISAdjIPAddrAdjIndex=isisISAdjIPAddrAdjIndex, isisCircAdminState=isisCircAdminState, isisMIB=isisMIB, isisSysAdminState=isisSysAdminState, isisSummAddressType=isisSummAddressType, isisIPRADest=isisIPRADest, MetricType=MetricType, isisIPRATable=isisIPRATable, isisCircLevelDesIS=isisCircLevelDesIS, isisSysManAddrDropFromAreas=isisSysManAddrDropFromAreas, isisISAdjAreaAddress=isisISAdjAreaAddress, isisRAIndex=isisRAIndex, isisRASNPAAddress=isisRASNPAAddress, isisRADefMetricType=isisRADefMetricType, isisSystemGroup=isisSystemGroup, isisCircUpTime=isisCircUpTime, isisRASNPAMask=isisRASNPAMask, NSAPPrefix=NSAPPrefix, isisPacketCountLSP=isisPacketCountLSP, isisSysIDFieldLenMismatches=isisSysIDFieldLenMismatches, isisSysMaxPathSplits=isisSysMaxPathSplits, isisCircLevelValues=isisCircLevelValues, isisPacketCountCSNP=isisPacketCountCSNP, isisISAdjAreaAddrEntry=isisISAdjAreaAddrEntry, isisISAdjGroup=isisISAdjGroup, isisSysL2State=isisSysL2State, isisManAreaAddrEntry=isisManAreaAddrEntry, isisISAdjProtSuppProtocol=isisISAdjProtSuppProtocol, SystemID=SystemID, isisManAreaAddrTable=isisManAreaAddrTable, isisSysProtSuppEntry=isisSysProtSuppEntry, isisCirc=isisCirc, isisPacketCountLevel=isisPacketCountLevel, isisCircLevel=isisCircLevel, isisIPRAIndex=isisIPRAIndex, isisCircInCtrlPDUs=isisCircInCtrlPDUs, PYSNMP_MODULE_ID=isisMIB, isisCircLevelIndex=isisCircLevelIndex, isisSysProtSuppExistState=isisSysProtSuppExistState, isisCircLevelDefaultMetric=isisCircLevelDefaultMetric, isisSysOrigL1LSPBuffSize=isisSysOrigL1LSPBuffSize, isisCircLocalID=isisCircLocalID, CircuitID=CircuitID, isisIPReachAddr=isisIPReachAddr, ISPriority=ISPriority, isisConformance=isisConformance, isisManAreaAddrExistState=isisManAreaAddrExistState, isisCircRejAdjs=isisCircRejAdjs, isisIPRADestPrefixLen=isisIPRADestPrefixLen, isisSysMaxAreaCheck=isisSysMaxAreaCheck, isisCircOutCtrlPDUs=isisCircOutCtrlPDUs, UpTime=UpTime, isisCircMCAddr=isisCircMCAddr, isisCircLevelISPriority=isisCircLevelISPriority, isisCircIDFieldLenMismatches=isisCircIDFieldLenMismatches, isisISAdjNeighPriority=isisISAdjNeighPriority, isisSummAddrTable=isisSummAddrTable, isisIPRAType=isisIPRAType, isisCircMeshGroup=isisCircMeshGroup, isisAreaAddr=isisAreaAddr, isisIPRADefMetricType=isisIPRADefMetricType, isisCircLevelDRHelloTimer=isisCircLevelDRHelloTimer, isisISIPRADestGroup=isisISIPRADestGroup, isisISAdj=isisISAdj, isisSysProtSuppTable=isisSysProtSuppTable, isisRAExistState=isisRAExistState, isisISAdjState=isisISAdjState, isisISAdjProtSuppEntry=isisISAdjProtSuppEntry, isisSysMaxAreaAddrMismatches=isisSysMaxAreaAddrMismatches, isisRATable=isisRATable, isisSysL1State=isisSysL1State, isisSysType=isisSysType, isisSystem=isisSystem, isisRADefMetric=isisRADefMetric, isisCircAdjChanges=isisCircAdjChanges, isisISAdjIndex=isisISAdjIndex, isisISAdjAreaAddrTable=isisISAdjAreaAddrTable, isisIPRAAdminState=isisIPRAAdminState, isisPacketCountDirection=isisPacketCountDirection, isisRAAdminState=isisRAAdminState, isisISAdjNeighSNPAAddress=isisISAdjNeighSNPAAddress, isisCircLevelCSNPInterval=isisCircLevelCSNPInterval, isisAreaAddrEntry=isisAreaAddrEntry, isisCircExtDomain=isisCircExtDomain, isisSysLSPL2DbaseOloads=isisSysLSPL2DbaseOloads, isisSummAddrExistState=isisSummAddrExistState, isisSysLSPIgnoreErrors=isisSysLSPIgnoreErrors, isisCircPassiveCircuit=isisCircPassiveCircuit, OSINSAddress=OSINSAddress, isisCircLevelHelloMultiplier=isisCircLevelHelloMultiplier, isisCompliances=isisCompliances, isisISAdjProtSuppAdjIndex=isisISAdjProtSuppAdjIndex, isisSysAuthFails=isisSysAuthFails, isisCircLevelTable=isisCircLevelTable, isisSysMaxLSPGenInt=isisSysMaxLSPGenInt, isisSysOwnLSPPurges=isisSysOwnLSPPurges, isisSysPartChanges=isisSysPartChanges, isisSysProtSuppProtocol=isisSysProtSuppProtocol, isisCircLevelLANDesISChanges=isisCircLevelLANDesISChanges, isisISAdjIPAddressType=isisISAdjIPAddressType, isisRAMapType=isisRAMapType, isisISAdjIPAddrTable=isisISAdjIPAddrTable, isisSysCorrLSPs=isisSysCorrLSPs, isisCircIndex=isisCircIndex, isisCircIfSubIndex=isisCircIfSubIndex, isisSysEntry=isisSysEntry, isisNotifications=isisNotifications, isisISAdjIPAddress=isisISAdjIPAddress, isisSysMinL2LSPGenInt=isisSysMinL2LSPGenInt, isisISAdjUpTime=isisISAdjUpTime, isisPacketCountEntry=isisPacketCountEntry, isisSysTable=isisSysTable, isisIPRADestType=isisIPRADestType)
