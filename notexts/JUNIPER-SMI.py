#
# PySNMP MIB module JUNIPER-SMI (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/juniper/JUNIPER-SMI
# Produced by pysmi-1.1.3 at Wed Dec  8 20:16:29 2021
# On host fv-az42-142 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
enterprises, iso, Counter64, ModuleIdentity, Integer32, NotificationType, Gauge32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, MibIdentifier, Bits, ObjectIdentity, TimeTicks, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "enterprises", "iso", "Counter64", "ModuleIdentity", "Integer32", "NotificationType", "Gauge32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "MibIdentifier", "Bits", "ObjectIdentity", "TimeTicks", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
juniperMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636))
juniperMIB.setRevisions(('2009-10-29 00:00', '2003-04-17 01:00', '2005-08-17 01:00', '2006-12-14 01:00', '2007-01-01 00:00', '2007-10-09 00:00',))
if mibBuilder.loadTexts: juniperMIB.setLastUpdated('200910290000Z')
if mibBuilder.loadTexts: juniperMIB.setOrganization('Juniper Networks, Inc.')
jnxProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 1))
if mibBuilder.loadTexts: jnxProducts.setStatus('current')
jnxReservedProducts1 = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 1, 2))
jnxReservedProducts2 = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 1, 3))
jnxReservedProducts3 = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 1, 4))
jnxReservedProducts4 = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 1, 5))
jnxReservedProducts5 = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 1, 6))
jnxServices = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 2))
if mibBuilder.loadTexts: jnxServices.setStatus('current')
jnxMibs = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3))
if mibBuilder.loadTexts: jnxMibs.setStatus('current')
jnxJsMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39))
jnxExMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 40))
jnxWxMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 41))
jnxReservedMibs4 = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 42))
jnxReservedMibs5 = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 43))
jnxPfeMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 44))
jnxBfdMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 45))
jnxXstpMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 46))
jnxUtilMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 47))
jnxl2aldMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 48))
jnxL2tpMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 49))
jnxRpmMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 50))
jnxUserAAAMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 51))
jnxIpSecMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 52))
jnxL2cpMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 53))
jnxPwTdmMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 54))
jnxPwTCMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 55))
jnxOtnMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 56))
jnxTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 4))
if mibBuilder.loadTexts: jnxTraps.setStatus('current')
jnxChassisTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 1))
jnxChassisOKTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 2))
jnxRmonTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 3))
jnxLdpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 4))
jnxCmNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 5))
jnxSonetNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 6))
jnxPMonNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 7))
jnxCollectorNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 8))
jnxPingNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 9))
jnxSpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 10))
jnxDfcNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 11))
jnxSyslogNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 12))
jnxEventNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 13))
jnxVccpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 14))
jnxOtnNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 15))
jnxSAIDPNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 16))
jnxCosNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 17))
jnxExperiment = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5))
jnxNsm = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 6))
jnxCA = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 7))
jnxAAA = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 8))
jnxAdvancedInsightMgr = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 9))
mibBuilder.exportSymbols("JUNIPER-SMI", jnxReservedProducts5=jnxReservedProducts5, jnxOtnMibRoot=jnxOtnMibRoot, jnxOtnNotifications=jnxOtnNotifications, jnxJsMibRoot=jnxJsMibRoot, jnxl2aldMibRoot=jnxl2aldMibRoot, jnxPingNotifications=jnxPingNotifications, juniperMIB=juniperMIB, jnxUserAAAMibRoot=jnxUserAAAMibRoot, jnxPMonNotifications=jnxPMonNotifications, jnxCmNotifications=jnxCmNotifications, jnxChassisOKTraps=jnxChassisOKTraps, jnxAAA=jnxAAA, jnxSAIDPNotifications=jnxSAIDPNotifications, jnxVccpNotifications=jnxVccpNotifications, jnxReservedProducts1=jnxReservedProducts1, jnxSpNotifications=jnxSpNotifications, jnxExperiment=jnxExperiment, jnxL2tpMibRoot=jnxL2tpMibRoot, jnxPfeMibRoot=jnxPfeMibRoot, jnxEventNotifications=jnxEventNotifications, jnxCosNotifications=jnxCosNotifications, jnxL2cpMibRoot=jnxL2cpMibRoot, jnxReservedMibs4=jnxReservedMibs4, jnxLdpTraps=jnxLdpTraps, jnxWxMibRoot=jnxWxMibRoot, jnxCA=jnxCA, jnxUtilMibRoot=jnxUtilMibRoot, jnxProducts=jnxProducts, jnxRpmMibRoot=jnxRpmMibRoot, jnxSonetNotifications=jnxSonetNotifications, jnxExMibRoot=jnxExMibRoot, jnxDfcNotifications=jnxDfcNotifications, jnxAdvancedInsightMgr=jnxAdvancedInsightMgr, jnxPwTCMibRoot=jnxPwTCMibRoot, jnxNsm=jnxNsm, jnxXstpMibs=jnxXstpMibs, jnxRmonTraps=jnxRmonTraps, jnxServices=jnxServices, jnxReservedProducts3=jnxReservedProducts3, jnxReservedProducts2=jnxReservedProducts2, jnxReservedMibs5=jnxReservedMibs5, PYSNMP_MODULE_ID=juniperMIB, jnxCollectorNotifications=jnxCollectorNotifications, jnxReservedProducts4=jnxReservedProducts4, jnxIpSecMibRoot=jnxIpSecMibRoot, jnxChassisTraps=jnxChassisTraps, jnxSyslogNotifications=jnxSyslogNotifications, jnxTraps=jnxTraps, jnxPwTdmMibRoot=jnxPwTdmMibRoot, jnxBfdMibRoot=jnxBfdMibRoot, jnxMibs=jnxMibs)
