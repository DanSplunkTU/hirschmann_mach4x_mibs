#
# PySNMP MIB module NAT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/NAT-TC
# Produced by pysmi-1.1.8 at Sat Jan 15 05:10:38 2022
# On host fv-az42-839 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint")
InterfaceIndex, ifIndex, ifCounterDiscontinuityGroup = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex", "ifCounterDiscontinuityGroup")
InetAddress, InetPortNumber, InetAddressPrefixLength, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetPortNumber", "InetAddressPrefixLength", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
IpAddress, mib_2, iso, Bits, ModuleIdentity, Integer32, Counter32, Gauge32, ObjectIdentity, TimeTicks, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "mib-2", "iso", "Bits", "ModuleIdentity", "Integer32", "Counter32", "Gauge32", "ObjectIdentity", "TimeTicks", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Unsigned32")
StorageType, DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "DisplayString", "TextualConvention", "RowStatus")
VPNIdOrZero, = mibBuilder.importSymbols("VPN-TC-STD-MIB", "VPNIdOrZero")
natMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 123))
natMIB.setRevisions(('2013-04-26 00:00', '2005-03-21 00:00',))
if mibBuilder.loadTexts: natMIB.setLastUpdated('201304260000Z')
if mibBuilder.loadTexts: natMIB.setOrganization('IETF Behavior Engineering for Hindrance Avoidance (BEHAVE) Working Group')
natMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 123, 1))
class NatProtocolType(TextualConvention, Integer32):
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("none", 1), ("other", 2), ("icmp", 3), ("udp", 4), ("tcp", 5))

class NatProtocolMap(TextualConvention, Bits):
    status = 'deprecated'
    namedValues = NamedValues(("other", 0), ("icmp", 1), ("udp", 2), ("tcp", 3))

class NatAddrMapId(TextualConvention, Unsigned32):
    status = 'deprecated'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class NatBindIdOrZero(TextualConvention, Unsigned32):
    status = 'deprecated'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 4294967295)

class NatBindId(TextualConvention, Unsigned32):
    status = 'deprecated'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class NatSessionId(TextualConvention, Unsigned32):
    status = 'deprecated'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class NatBindMode(TextualConvention, Integer32):
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("addressBind", 1), ("addressPortBind", 2))

class NatAssociationType(TextualConvention, Integer32):
    status = 'deprecated'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("static", 1), ("dynamic", 2))

class NatTranslationEntity(TextualConvention, Bits):
    status = 'deprecated'
    namedValues = NamedValues(("inboundSrcEndPoint", 0), ("outboundDstEndPoint", 1), ("inboundDstEndPoint", 2), ("outboundSrcEndPoint", 3))

natDefTimeouts = MibIdentifier((1, 3, 6, 1, 2, 1, 123, 1, 1))
natNotifCtrl = MibIdentifier((1, 3, 6, 1, 2, 1, 123, 1, 2))
natBindDefIdleTimeout = MibScalar((1, 3, 6, 1, 2, 1, 123, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: natBindDefIdleTimeout.setStatus('deprecated')
natUdpDefIdleTimeout = MibScalar((1, 3, 6, 1, 2, 1, 123, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: natUdpDefIdleTimeout.setStatus('deprecated')
natIcmpDefIdleTimeout = MibScalar((1, 3, 6, 1, 2, 1, 123, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: natIcmpDefIdleTimeout.setStatus('deprecated')
natOtherDefIdleTimeout = MibScalar((1, 3, 6, 1, 2, 1, 123, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: natOtherDefIdleTimeout.setStatus('deprecated')
natTcpDefIdleTimeout = MibScalar((1, 3, 6, 1, 2, 1, 123, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(86400)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: natTcpDefIdleTimeout.setStatus('deprecated')
natTcpDefNegTimeout = MibScalar((1, 3, 6, 1, 2, 1, 123, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: natTcpDefNegTimeout.setStatus('deprecated')
natNotifThrottlingInterval = MibScalar((1, 3, 6, 1, 2, 1, 123, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5, 3600), ))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: natNotifThrottlingInterval.setStatus('deprecated')
natInterfaceTable = MibTable((1, 3, 6, 1, 2, 1, 123, 1, 3), )
if mibBuilder.loadTexts: natInterfaceTable.setStatus('deprecated')
natInterfaceEntry = MibTableRow((1, 3, 6, 1, 2, 1, 123, 1, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: natInterfaceEntry.setStatus('deprecated')
natInterfaceRealm = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("private", 1), ("public", 2))).clone('public')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natInterfaceRealm.setStatus('deprecated')
natInterfaceServiceType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 3, 1, 2), Bits().clone(namedValues=NamedValues(("basicNat", 0), ("napt", 1), ("bidirectionalNat", 2), ("twiceNat", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natInterfaceServiceType.setStatus('deprecated')
natInterfaceInTranslates = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natInterfaceInTranslates.setStatus('deprecated')
natInterfaceOutTranslates = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natInterfaceOutTranslates.setStatus('deprecated')
natInterfaceDiscards = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natInterfaceDiscards.setStatus('deprecated')
natInterfaceStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 3, 1, 6), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natInterfaceStorageType.setStatus('deprecated')
natInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 3, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natInterfaceRowStatus.setStatus('deprecated')
natAddrMapTable = MibTable((1, 3, 6, 1, 2, 1, 123, 1, 4), )
if mibBuilder.loadTexts: natAddrMapTable.setStatus('deprecated')
natAddrMapEntry = MibTableRow((1, 3, 6, 1, 2, 1, 123, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "NAT-MIB", "natAddrMapIndex"))
if mibBuilder.loadTexts: natAddrMapEntry.setStatus('deprecated')
natAddrMapIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 1), NatAddrMapId())
if mibBuilder.loadTexts: natAddrMapIndex.setStatus('deprecated')
natAddrMapName = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natAddrMapName.setStatus('deprecated')
natAddrMapEntryType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 3), NatAssociationType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natAddrMapEntryType.setStatus('deprecated')
natAddrMapTranslationEntity = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 4), NatTranslationEntity()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natAddrMapTranslationEntity.setStatus('deprecated')
natAddrMapLocalAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 5), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natAddrMapLocalAddrType.setStatus('deprecated')
natAddrMapLocalAddrFrom = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natAddrMapLocalAddrFrom.setStatus('deprecated')
natAddrMapLocalAddrTo = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 7), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natAddrMapLocalAddrTo.setStatus('deprecated')
natAddrMapLocalPortFrom = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 8), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natAddrMapLocalPortFrom.setStatus('deprecated')
natAddrMapLocalPortTo = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 9), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natAddrMapLocalPortTo.setStatus('deprecated')
natAddrMapGlobalAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 10), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natAddrMapGlobalAddrType.setStatus('deprecated')
natAddrMapGlobalAddrFrom = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 11), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natAddrMapGlobalAddrFrom.setStatus('deprecated')
natAddrMapGlobalAddrTo = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 12), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natAddrMapGlobalAddrTo.setStatus('deprecated')
natAddrMapGlobalPortFrom = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 13), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natAddrMapGlobalPortFrom.setStatus('deprecated')
natAddrMapGlobalPortTo = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 14), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natAddrMapGlobalPortTo.setStatus('deprecated')
natAddrMapProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 15), NatProtocolMap()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natAddrMapProtocol.setStatus('deprecated')
natAddrMapInTranslates = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrMapInTranslates.setStatus('deprecated')
natAddrMapOutTranslates = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrMapOutTranslates.setStatus('deprecated')
natAddrMapDiscards = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrMapDiscards.setStatus('deprecated')
natAddrMapAddrUsed = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrMapAddrUsed.setStatus('deprecated')
natAddrMapStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 20), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natAddrMapStorageType.setStatus('deprecated')
natAddrMapRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 4, 1, 21), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natAddrMapRowStatus.setStatus('deprecated')
natAddrBindNumberOfEntries = MibScalar((1, 3, 6, 1, 2, 1, 123, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrBindNumberOfEntries.setStatus('deprecated')
natAddrBindTable = MibTable((1, 3, 6, 1, 2, 1, 123, 1, 6), )
if mibBuilder.loadTexts: natAddrBindTable.setStatus('deprecated')
natAddrBindEntry = MibTableRow((1, 3, 6, 1, 2, 1, 123, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "NAT-MIB", "natAddrBindLocalAddrType"), (0, "NAT-MIB", "natAddrBindLocalAddr"))
if mibBuilder.loadTexts: natAddrBindEntry.setStatus('deprecated')
natAddrBindLocalAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 6, 1, 1), InetAddressType())
if mibBuilder.loadTexts: natAddrBindLocalAddrType.setStatus('deprecated')
natAddrBindLocalAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 6, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: natAddrBindLocalAddr.setStatus('deprecated')
natAddrBindGlobalAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 6, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrBindGlobalAddrType.setStatus('deprecated')
natAddrBindGlobalAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 6, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrBindGlobalAddr.setStatus('deprecated')
natAddrBindId = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 6, 1, 5), NatBindId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrBindId.setStatus('deprecated')
natAddrBindTranslationEntity = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 6, 1, 6), NatTranslationEntity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrBindTranslationEntity.setStatus('deprecated')
natAddrBindType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 6, 1, 7), NatAssociationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrBindType.setStatus('deprecated')
natAddrBindMapIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 6, 1, 8), NatAddrMapId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrBindMapIndex.setStatus('deprecated')
natAddrBindSessions = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 6, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrBindSessions.setStatus('deprecated')
natAddrBindMaxIdleTime = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 6, 1, 10), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrBindMaxIdleTime.setStatus('deprecated')
natAddrBindCurrentIdleTime = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 6, 1, 11), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrBindCurrentIdleTime.setStatus('deprecated')
natAddrBindInTranslates = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 6, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrBindInTranslates.setStatus('deprecated')
natAddrBindOutTranslates = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 6, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrBindOutTranslates.setStatus('deprecated')
natAddrPortBindNumberOfEntries = MibScalar((1, 3, 6, 1, 2, 1, 123, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrPortBindNumberOfEntries.setStatus('deprecated')
natAddrPortBindTable = MibTable((1, 3, 6, 1, 2, 1, 123, 1, 8), )
if mibBuilder.loadTexts: natAddrPortBindTable.setStatus('deprecated')
natAddrPortBindEntry = MibTableRow((1, 3, 6, 1, 2, 1, 123, 1, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "NAT-MIB", "natAddrPortBindLocalAddrType"), (0, "NAT-MIB", "natAddrPortBindLocalAddr"), (0, "NAT-MIB", "natAddrPortBindLocalPort"), (0, "NAT-MIB", "natAddrPortBindProtocol"))
if mibBuilder.loadTexts: natAddrPortBindEntry.setStatus('deprecated')
natAddrPortBindLocalAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 8, 1, 1), InetAddressType())
if mibBuilder.loadTexts: natAddrPortBindLocalAddrType.setStatus('deprecated')
natAddrPortBindLocalAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 8, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: natAddrPortBindLocalAddr.setStatus('deprecated')
natAddrPortBindLocalPort = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 8, 1, 3), InetPortNumber())
if mibBuilder.loadTexts: natAddrPortBindLocalPort.setStatus('deprecated')
natAddrPortBindProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 8, 1, 4), NatProtocolType())
if mibBuilder.loadTexts: natAddrPortBindProtocol.setStatus('deprecated')
natAddrPortBindGlobalAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 8, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrPortBindGlobalAddrType.setStatus('deprecated')
natAddrPortBindGlobalAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 8, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrPortBindGlobalAddr.setStatus('deprecated')
natAddrPortBindGlobalPort = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 8, 1, 7), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrPortBindGlobalPort.setStatus('deprecated')
natAddrPortBindId = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 8, 1, 8), NatBindId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrPortBindId.setStatus('deprecated')
natAddrPortBindTranslationEntity = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 8, 1, 9), NatTranslationEntity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrPortBindTranslationEntity.setStatus('deprecated')
natAddrPortBindType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 8, 1, 10), NatAssociationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrPortBindType.setStatus('deprecated')
natAddrPortBindMapIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 8, 1, 11), NatAddrMapId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrPortBindMapIndex.setStatus('deprecated')
natAddrPortBindSessions = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 8, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrPortBindSessions.setStatus('deprecated')
natAddrPortBindMaxIdleTime = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 8, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrPortBindMaxIdleTime.setStatus('deprecated')
natAddrPortBindCurrentIdleTime = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 8, 1, 14), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrPortBindCurrentIdleTime.setStatus('deprecated')
natAddrPortBindInTranslates = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 8, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrPortBindInTranslates.setStatus('deprecated')
natAddrPortBindOutTranslates = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 8, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddrPortBindOutTranslates.setStatus('deprecated')
natSessionTable = MibTable((1, 3, 6, 1, 2, 1, 123, 1, 9), )
if mibBuilder.loadTexts: natSessionTable.setStatus('deprecated')
natSessionEntry = MibTableRow((1, 3, 6, 1, 2, 1, 123, 1, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "NAT-MIB", "natSessionIndex"))
if mibBuilder.loadTexts: natSessionEntry.setStatus('deprecated')
natSessionIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 1), NatSessionId())
if mibBuilder.loadTexts: natSessionIndex.setStatus('deprecated')
natSessionPrivateSrcEPBindId = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 2), NatBindIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionPrivateSrcEPBindId.setStatus('deprecated')
natSessionPrivateSrcEPBindMode = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 3), NatBindMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionPrivateSrcEPBindMode.setStatus('deprecated')
natSessionPrivateDstEPBindId = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 4), NatBindIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionPrivateDstEPBindId.setStatus('deprecated')
natSessionPrivateDstEPBindMode = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 5), NatBindMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionPrivateDstEPBindMode.setStatus('deprecated')
natSessionDirection = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionDirection.setStatus('deprecated')
natSessionUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionUpTime.setStatus('deprecated')
natSessionAddrMapIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 8), NatAddrMapId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionAddrMapIndex.setStatus('deprecated')
natSessionProtocolType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 9), NatProtocolType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionProtocolType.setStatus('deprecated')
natSessionPrivateAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 10), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionPrivateAddrType.setStatus('deprecated')
natSessionPrivateSrcAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 11), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionPrivateSrcAddr.setStatus('deprecated')
natSessionPrivateSrcPort = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 12), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionPrivateSrcPort.setStatus('deprecated')
natSessionPrivateDstAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 13), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionPrivateDstAddr.setStatus('deprecated')
natSessionPrivateDstPort = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 14), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionPrivateDstPort.setStatus('deprecated')
natSessionPublicAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 15), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionPublicAddrType.setStatus('deprecated')
natSessionPublicSrcAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 16), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionPublicSrcAddr.setStatus('deprecated')
natSessionPublicSrcPort = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 17), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionPublicSrcPort.setStatus('deprecated')
natSessionPublicDstAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 18), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionPublicDstAddr.setStatus('deprecated')
natSessionPublicDstPort = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 19), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionPublicDstPort.setStatus('deprecated')
natSessionMaxIdleTime = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 20), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionMaxIdleTime.setStatus('deprecated')
natSessionCurrentIdleTime = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 21), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionCurrentIdleTime.setStatus('deprecated')
natSessionInTranslates = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionInTranslates.setStatus('deprecated')
natSessionOutTranslates = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 9, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSessionOutTranslates.setStatus('deprecated')
natProtocolTable = MibTable((1, 3, 6, 1, 2, 1, 123, 1, 10), )
if mibBuilder.loadTexts: natProtocolTable.setStatus('deprecated')
natProtocolEntry = MibTableRow((1, 3, 6, 1, 2, 1, 123, 1, 10, 1), ).setIndexNames((0, "NAT-MIB", "natProtocol"))
if mibBuilder.loadTexts: natProtocolEntry.setStatus('deprecated')
natProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 10, 1, 1), NatProtocolType())
if mibBuilder.loadTexts: natProtocol.setStatus('deprecated')
natProtocolInTranslates = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 10, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natProtocolInTranslates.setStatus('deprecated')
natProtocolOutTranslates = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natProtocolOutTranslates.setStatus('deprecated')
natProtocolDiscards = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natProtocolDiscards.setStatus('deprecated')
natMIBNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 123, 0))
natPacketDiscard = NotificationType((1, 3, 6, 1, 2, 1, 123, 0, 1)).setObjects(("IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: natPacketDiscard.setStatus('deprecated')
natMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 123, 2))
natMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 123, 2, 1))
natMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 123, 2, 2))
natConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 123, 2, 1, 1)).setObjects(("NAT-MIB", "natInterfaceRealm"), ("NAT-MIB", "natInterfaceServiceType"), ("NAT-MIB", "natInterfaceStorageType"), ("NAT-MIB", "natInterfaceRowStatus"), ("NAT-MIB", "natAddrMapName"), ("NAT-MIB", "natAddrMapEntryType"), ("NAT-MIB", "natAddrMapTranslationEntity"), ("NAT-MIB", "natAddrMapLocalAddrType"), ("NAT-MIB", "natAddrMapLocalAddrFrom"), ("NAT-MIB", "natAddrMapLocalAddrTo"), ("NAT-MIB", "natAddrMapLocalPortFrom"), ("NAT-MIB", "natAddrMapLocalPortTo"), ("NAT-MIB", "natAddrMapGlobalAddrType"), ("NAT-MIB", "natAddrMapGlobalAddrFrom"), ("NAT-MIB", "natAddrMapGlobalAddrTo"), ("NAT-MIB", "natAddrMapGlobalPortFrom"), ("NAT-MIB", "natAddrMapGlobalPortTo"), ("NAT-MIB", "natAddrMapProtocol"), ("NAT-MIB", "natAddrMapStorageType"), ("NAT-MIB", "natAddrMapRowStatus"), ("NAT-MIB", "natBindDefIdleTimeout"), ("NAT-MIB", "natUdpDefIdleTimeout"), ("NAT-MIB", "natIcmpDefIdleTimeout"), ("NAT-MIB", "natOtherDefIdleTimeout"), ("NAT-MIB", "natTcpDefIdleTimeout"), ("NAT-MIB", "natTcpDefNegTimeout"), ("NAT-MIB", "natNotifThrottlingInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natConfigGroup = natConfigGroup.setStatus('deprecated')
natTranslationGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 123, 2, 1, 2)).setObjects(("NAT-MIB", "natAddrBindNumberOfEntries"), ("NAT-MIB", "natAddrBindGlobalAddrType"), ("NAT-MIB", "natAddrBindGlobalAddr"), ("NAT-MIB", "natAddrBindId"), ("NAT-MIB", "natAddrBindTranslationEntity"), ("NAT-MIB", "natAddrBindType"), ("NAT-MIB", "natAddrBindMapIndex"), ("NAT-MIB", "natAddrBindSessions"), ("NAT-MIB", "natAddrBindMaxIdleTime"), ("NAT-MIB", "natAddrBindCurrentIdleTime"), ("NAT-MIB", "natAddrBindInTranslates"), ("NAT-MIB", "natAddrBindOutTranslates"), ("NAT-MIB", "natAddrPortBindNumberOfEntries"), ("NAT-MIB", "natAddrPortBindGlobalAddrType"), ("NAT-MIB", "natAddrPortBindGlobalAddr"), ("NAT-MIB", "natAddrPortBindGlobalPort"), ("NAT-MIB", "natAddrPortBindId"), ("NAT-MIB", "natAddrPortBindTranslationEntity"), ("NAT-MIB", "natAddrPortBindType"), ("NAT-MIB", "natAddrPortBindMapIndex"), ("NAT-MIB", "natAddrPortBindSessions"), ("NAT-MIB", "natAddrPortBindMaxIdleTime"), ("NAT-MIB", "natAddrPortBindCurrentIdleTime"), ("NAT-MIB", "natAddrPortBindInTranslates"), ("NAT-MIB", "natAddrPortBindOutTranslates"), ("NAT-MIB", "natSessionPrivateSrcEPBindId"), ("NAT-MIB", "natSessionPrivateSrcEPBindMode"), ("NAT-MIB", "natSessionPrivateDstEPBindId"), ("NAT-MIB", "natSessionPrivateDstEPBindMode"), ("NAT-MIB", "natSessionDirection"), ("NAT-MIB", "natSessionUpTime"), ("NAT-MIB", "natSessionAddrMapIndex"), ("NAT-MIB", "natSessionProtocolType"), ("NAT-MIB", "natSessionPrivateAddrType"), ("NAT-MIB", "natSessionPrivateSrcAddr"), ("NAT-MIB", "natSessionPrivateSrcPort"), ("NAT-MIB", "natSessionPrivateDstAddr"), ("NAT-MIB", "natSessionPrivateDstPort"), ("NAT-MIB", "natSessionPublicAddrType"), ("NAT-MIB", "natSessionPublicSrcAddr"), ("NAT-MIB", "natSessionPublicSrcPort"), ("NAT-MIB", "natSessionPublicDstAddr"), ("NAT-MIB", "natSessionPublicDstPort"), ("NAT-MIB", "natSessionMaxIdleTime"), ("NAT-MIB", "natSessionCurrentIdleTime"), ("NAT-MIB", "natSessionInTranslates"), ("NAT-MIB", "natSessionOutTranslates"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natTranslationGroup = natTranslationGroup.setStatus('deprecated')
natStatsInterfaceGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 123, 2, 1, 3)).setObjects(("NAT-MIB", "natInterfaceInTranslates"), ("NAT-MIB", "natInterfaceOutTranslates"), ("NAT-MIB", "natInterfaceDiscards"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natStatsInterfaceGroup = natStatsInterfaceGroup.setStatus('deprecated')
natStatsProtocolGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 123, 2, 1, 4)).setObjects(("NAT-MIB", "natProtocolInTranslates"), ("NAT-MIB", "natProtocolOutTranslates"), ("NAT-MIB", "natProtocolDiscards"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natStatsProtocolGroup = natStatsProtocolGroup.setStatus('deprecated')
natStatsAddrMapGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 123, 2, 1, 5)).setObjects(("NAT-MIB", "natAddrMapInTranslates"), ("NAT-MIB", "natAddrMapOutTranslates"), ("NAT-MIB", "natAddrMapDiscards"), ("NAT-MIB", "natAddrMapAddrUsed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natStatsAddrMapGroup = natStatsAddrMapGroup.setStatus('deprecated')
natMIBNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 123, 2, 1, 6)).setObjects(("NAT-MIB", "natPacketDiscard"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natMIBNotificationGroup = natMIBNotificationGroup.setStatus('deprecated')
natMIBFullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 123, 2, 2, 1)).setObjects(("IF-MIB", "ifCounterDiscontinuityGroup"), ("NAT-MIB", "natConfigGroup"), ("NAT-MIB", "natTranslationGroup"), ("NAT-MIB", "natStatsInterfaceGroup"), ("NAT-MIB", "natStatsProtocolGroup"), ("NAT-MIB", "natStatsAddrMapGroup"), ("NAT-MIB", "natMIBNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natMIBFullCompliance = natMIBFullCompliance.setStatus('deprecated')
natMIBReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 123, 2, 2, 2)).setObjects(("IF-MIB", "ifCounterDiscontinuityGroup"), ("NAT-MIB", "natConfigGroup"), ("NAT-MIB", "natTranslationGroup"), ("NAT-MIB", "natStatsInterfaceGroup"), ("NAT-MIB", "natStatsProtocolGroup"), ("NAT-MIB", "natStatsAddrMapGroup"), ("NAT-MIB", "natMIBNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natMIBReadOnlyCompliance = natMIBReadOnlyCompliance.setStatus('deprecated')
class ProtocolNumber(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 255)

class NatPoolId(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class NatBehaviorType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("endpointIndependent", 0), ("addressDependent", 1), ("addressAndPortDependent", 2))

class NatPoolingType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("arbitrary", 0), ("paired", 1))

class VlanIndexOrZero(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'

class SubscriberIndex(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class SubscriberIdentifierType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("null", 0), ("interfaces", 1), ("vlan", 2), ("vpn", 3), ("ipencaps", 4), ("other", 5))

class SubsInterfaceIdRowIndex(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

natNotifPoolWatermarkLow = NotificationType((1, 3, 6, 1, 2, 1, 123, 0, 2)).setObjects(("NAT-MIB", "natPoolWatermarkLow"))
if mibBuilder.loadTexts: natNotifPoolWatermarkLow.setStatus('current')
natNotifPoolWatermarkHigh = NotificationType((1, 3, 6, 1, 2, 1, 123, 0, 3)).setObjects(("NAT-MIB", "natPoolWatermarkHigh"))
if mibBuilder.loadTexts: natNotifPoolWatermarkHigh.setStatus('current')
natNotifMappings = NotificationType((1, 3, 6, 1, 2, 1, 123, 0, 4)).setObjects(("NAT-MIB", "natMappingCreations"), ("NAT-MIB", "natMappingRemovals"))
if mibBuilder.loadTexts: natNotifMappings.setStatus('current')
natNotifAddrMappings = NotificationType((1, 3, 6, 1, 2, 1, 123, 0, 5)).setObjects(("NAT-MIB", "natAddressMappingCreations"), ("NAT-MIB", "natAddressMappingRemovals"))
if mibBuilder.loadTexts: natNotifAddrMappings.setStatus('current')
natNotifSubscriberMappings = NotificationType((1, 3, 6, 1, 2, 1, 123, 0, 6)).setObjects(("NAT-MIB", "natSubscriberMappingCreations"), ("NAT-MIB", "natSubscriberMappingRemovals"))
if mibBuilder.loadTexts: natNotifSubscriberMappings.setStatus('current')
natInstanceTable = MibTable((1, 3, 6, 1, 2, 1, 123, 1, 11), )
if mibBuilder.loadTexts: natInstanceTable.setStatus('current')
natInstanceEntry = MibTableRow((1, 3, 6, 1, 2, 1, 123, 1, 11, 1), ).setIndexNames((0, "NAT-MIB", "natInstanceIndex"))
if mibBuilder.loadTexts: natInstanceEntry.setStatus('current')
natInstanceIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 11, 1, 1), Unsigned32())
if mibBuilder.loadTexts: natInstanceIndex.setStatus('current')
natInstanceAlias = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 11, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: natInstanceAlias.setStatus('current')
natCounters = MibIdentifier((1, 3, 6, 1, 2, 1, 123, 1, 12))
natCountersTable = MibTable((1, 3, 6, 1, 2, 1, 123, 1, 12, 1), )
if mibBuilder.loadTexts: natCountersTable.setStatus('current')
natCountersEntry = MibTableRow((1, 3, 6, 1, 2, 1, 123, 1, 12, 1, 1), ).setIndexNames((0, "NAT-MIB", "natInstanceIndex"))
if mibBuilder.loadTexts: natCountersEntry.setStatus('current')
natTranslations = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 12, 1, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natTranslations.setStatus('current')
natOutOfPortErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 12, 1, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natOutOfPortErrors.setStatus('current')
natResourceErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 12, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natResourceErrors.setStatus('current')
natQuotaDrops = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 12, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natQuotaDrops.setStatus('current')
natMappingCreations = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 12, 1, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natMappingCreations.setStatus('current')
natMappingRemovals = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 12, 1, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natMappingRemovals.setStatus('current')
natAddressMappingCreations = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 12, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddressMappingCreations.setStatus('current')
natAddressMappingRemovals = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 12, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natAddressMappingRemovals.setStatus('current')
natL4ProtocolTable = MibTable((1, 3, 6, 1, 2, 1, 123, 1, 12, 2), )
if mibBuilder.loadTexts: natL4ProtocolTable.setStatus('current')
natL4ProtocolEntry = MibTableRow((1, 3, 6, 1, 2, 1, 123, 1, 12, 2, 1), ).setIndexNames((0, "NAT-MIB", "natInstanceIndex"), (0, "NAT-MIB", "natL4ProtocolNumber"))
if mibBuilder.loadTexts: natL4ProtocolEntry.setStatus('current')
natL4ProtocolNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 12, 2, 1, 1), ProtocolNumber())
if mibBuilder.loadTexts: natL4ProtocolNumber.setStatus('current')
natL4ProtocolTranslations = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 12, 2, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natL4ProtocolTranslations.setStatus('current')
natL4ProtocolOutOfPortErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 12, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natL4ProtocolOutOfPortErrors.setStatus('current')
natL4ProtocolResourceErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 12, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natL4ProtocolResourceErrors.setStatus('current')
natL4ProtocolQuotaDrops = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 12, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natL4ProtocolQuotaDrops.setStatus('current')
natL4ProtocolMappingCreations = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 12, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natL4ProtocolMappingCreations.setStatus('current')
natL4ProtocolMappingRemovals = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 12, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natL4ProtocolMappingRemovals.setStatus('current')
natLimitsTable = MibTable((1, 3, 6, 1, 2, 1, 123, 1, 13), )
if mibBuilder.loadTexts: natLimitsTable.setStatus('current')
natLimitsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 123, 1, 13, 1), ).setIndexNames((0, "NAT-MIB", "natInstanceIndex"))
if mibBuilder.loadTexts: natLimitsEntry.setStatus('current')
natLimitMappings = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 13, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: natLimitMappings.setStatus('current')
natMappingsNotifyThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 13, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: natMappingsNotifyThreshold.setStatus('current')
natLimitAddressMappings = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 13, 1, 3), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: natLimitAddressMappings.setStatus('current')
natAddrMapNotifyThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 13, 1, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: natAddrMapNotifyThreshold.setStatus('current')
natLimitFragments = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 13, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: natLimitFragments.setStatus('current')
natLimitSubscribers = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 13, 1, 6), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: natLimitSubscribers.setStatus('current')
natPoolObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 123, 1, 14))
natPoolTable = MibTable((1, 3, 6, 1, 2, 1, 123, 1, 14, 1), )
if mibBuilder.loadTexts: natPoolTable.setStatus('current')
natPoolEntry = MibTableRow((1, 3, 6, 1, 2, 1, 123, 1, 14, 1, 1), ).setIndexNames((0, "NAT-MIB", "natInstanceIndex"), (0, "NAT-MIB", "natPoolIndex"))
if mibBuilder.loadTexts: natPoolEntry.setStatus('current')
natPoolIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 14, 1, 1, 1), NatPoolId())
if mibBuilder.loadTexts: natPoolIndex.setStatus('current')
natPoolRealm = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 14, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: natPoolRealm.setStatus('current')
natPoolWatermarkLow = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 14, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 100), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natPoolWatermarkLow.setStatus('current')
natPoolWatermarkHigh = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 14, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 100), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natPoolWatermarkHigh.setStatus('current')
natPoolPortMin = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 14, 1, 1, 5), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natPoolPortMin.setStatus('current')
natPoolPortMax = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 14, 1, 1, 6), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: natPoolPortMax.setStatus('current')
natPoolRangeTable = MibTable((1, 3, 6, 1, 2, 1, 123, 1, 14, 2), )
if mibBuilder.loadTexts: natPoolRangeTable.setStatus('current')
natPoolRangeEntry = MibTableRow((1, 3, 6, 1, 2, 1, 123, 1, 14, 2, 1), ).setIndexNames((0, "NAT-MIB", "natInstanceIndex"), (0, "NAT-MIB", "natPoolRangePoolIndex"))
if mibBuilder.loadTexts: natPoolRangeEntry.setStatus('current')
natPoolRangePoolIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 14, 2, 1, 1), NatPoolId())
if mibBuilder.loadTexts: natPoolRangePoolIndex.setStatus('current')
natPoolRangeType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 14, 2, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natPoolRangeType.setStatus('current')
natPoolRangeBegin = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 14, 2, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natPoolRangeBegin.setStatus('current')
natPoolRangeEnd = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 14, 2, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natPoolRangeEnd.setStatus('current')
natPoolRangeAllocations = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 14, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natPoolRangeAllocations.setStatus('current')
natPoolRangeDeallocations = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 14, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natPoolRangeDeallocations.setStatus('current')
natMapObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 123, 1, 15))
natMapIntAddrTable = MibTable((1, 3, 6, 1, 2, 1, 123, 1, 15, 1), )
if mibBuilder.loadTexts: natMapIntAddrTable.setStatus('current')
natMapIntAddrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 123, 1, 15, 1, 1), ).setIndexNames((0, "NAT-MIB", "natInstanceIndex"), (0, "NAT-MIB", "natMapIntAddrIntRealm"), (0, "NAT-MIB", "natMapIntAddrIntType"), (0, "NAT-MIB", "natMapIntAddrInt"))
if mibBuilder.loadTexts: natMapIntAddrEntry.setStatus('current')
natMapIntAddrIntRealm = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: natMapIntAddrIntRealm.setStatus('current')
natMapIntAddrExtRealm = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natMapIntAddrExtRealm.setStatus('current')
natMapIntAddrIntType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 1, 1, 3), InetAddressType())
if mibBuilder.loadTexts: natMapIntAddrIntType.setStatus('current')
natMapIntAddrInt = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 1, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: natMapIntAddrInt.setStatus('current')
natMapIntAddrExtType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 1, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natMapIntAddrExtType.setStatus('current')
natMapIntAddrExt = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 1, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natMapIntAddrExt.setStatus('current')
natMapIntAddrSubsIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4294967295), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: natMapIntAddrSubsIndex.setStatus('current')
natMappingTable = MibTable((1, 3, 6, 1, 2, 1, 123, 1, 15, 2), )
if mibBuilder.loadTexts: natMappingTable.setStatus('current')
natMappingEntry = MibTableRow((1, 3, 6, 1, 2, 1, 123, 1, 15, 2, 1), ).setIndexNames((0, "NAT-MIB", "natInstanceIndex"), (0, "NAT-MIB", "natMappingProto"), (0, "NAT-MIB", "natMappingExtRealm"), (0, "NAT-MIB", "natMappingExtAddressType"), (0, "NAT-MIB", "natMappingExtAddress"), (0, "NAT-MIB", "natMappingExtPort"))
if mibBuilder.loadTexts: natMappingEntry.setStatus('current')
natMappingProto = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 2, 1, 1), ProtocolNumber())
if mibBuilder.loadTexts: natMappingProto.setStatus('current')
natMappingExtRealm = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: natMappingExtRealm.setStatus('current')
natMappingExtAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 2, 1, 3), InetAddressType())
if mibBuilder.loadTexts: natMappingExtAddressType.setStatus('current')
natMappingExtAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 2, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: natMappingExtAddress.setStatus('current')
natMappingExtPort = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 2, 1, 5), InetPortNumber())
if mibBuilder.loadTexts: natMappingExtPort.setStatus('current')
natMappingIntRealm = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 2, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natMappingIntRealm.setStatus('current')
natMappingIntAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 2, 1, 7), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natMappingIntAddressType.setStatus('current')
natMappingIntAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 2, 1, 8), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natMappingIntAddress.setStatus('current')
natMappingIntPort = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 2, 1, 9), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natMappingIntPort.setStatus('current')
natMappingPool = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4294967295), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: natMappingPool.setStatus('current')
natMappingMapBehavior = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 2, 1, 11), NatBehaviorType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natMappingMapBehavior.setStatus('current')
natMappingFilterBehavior = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 2, 1, 12), NatBehaviorType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natMappingFilterBehavior.setStatus('current')
natMappingAddressPooling = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 2, 1, 13), NatPoolingType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natMappingAddressPooling.setStatus('current')
natMappingSubsIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 15, 2, 1, 14), SubscriberIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natMappingSubsIndex.setStatus('current')
natSubscribers = MibIdentifier((1, 3, 6, 1, 2, 1, 123, 1, 16))
natSubscribersTable = MibTable((1, 3, 6, 1, 2, 1, 123, 1, 16, 1), )
if mibBuilder.loadTexts: natSubscribersTable.setStatus('current')
natSubscribersEntry = MibTableRow((1, 3, 6, 1, 2, 1, 123, 1, 16, 1, 1), ).setIndexNames((0, "NAT-MIB", "natInstanceIndex"), (0, "NAT-MIB", "natSubscriberIndex"))
if mibBuilder.loadTexts: natSubscribersEntry.setStatus('current')
natSubscriberIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 1, 1, 1), SubscriberIndex())
if mibBuilder.loadTexts: natSubscriberIndex.setStatus('current')
natSubscriberIdentifierType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 1, 1, 2), SubscriberIdentifierType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSubscriberIdentifierType.setStatus('current')
natSubscriberIntPrefixType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 1, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSubscriberIntPrefixType.setStatus('current')
natSubscriberIntPrefix = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 1, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSubscriberIntPrefix.setStatus('current')
natSubscriberIntPrefixLength = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 1, 1, 5), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSubscriberIntPrefixLength.setStatus('current')
natSubscriberRealm = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 1, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSubscriberRealm.setStatus('current')
natSubscriberTranslations = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 1, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSubscriberTranslations.setStatus('current')
natSubscriberOutOfPortErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 1, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSubscriberOutOfPortErrors.setStatus('current')
natSubscriberResourceErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 1, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSubscriberResourceErrors.setStatus('current')
natSubscriberQuotaDrops = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 1, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSubscriberQuotaDrops.setStatus('current')
natSubscriberMappingCreations = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 1, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSubscriberMappingCreations.setStatus('current')
natSubscriberMappingRemovals = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 1, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSubscriberMappingRemovals.setStatus('current')
natSubscriberLimitMappings = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 1, 1, 13), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: natSubscriberLimitMappings.setStatus('current')
natSubscriberMapNotifyThresh = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 1, 1, 14), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: natSubscriberMapNotifyThresh.setStatus('current')
natSubscriberVlanIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 1, 1, 15), VlanIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSubscriberVlanIdentifier.setStatus('current')
natSubscriberVpnIdentifier = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 1, 1, 16), VPNIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSubscriberVpnIdentifier.setStatus('current')
natSubscriberIPEncapsIdType = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 1, 1, 17), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSubscriberIPEncapsIdType.setStatus('current')
natSubscriberIPEncapsIdAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 1, 1, 18), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSubscriberIPEncapsIdAddr.setStatus('current')
natSubsInterfaceIdentifierTable = MibTable((1, 3, 6, 1, 2, 1, 123, 1, 16, 2), )
if mibBuilder.loadTexts: natSubsInterfaceIdentifierTable.setStatus('current')
natSubsInterfaceIdentifierEntry = MibTableRow((1, 3, 6, 1, 2, 1, 123, 1, 16, 2, 1), ).setIndexNames((0, "NAT-MIB", "natInstanceIndex"), (0, "NAT-MIB", "natSubsInterfaceIdSubsIndex"), (0, "NAT-MIB", "natSubsInterfaceIdRowIndex"))
if mibBuilder.loadTexts: natSubsInterfaceIdentifierEntry.setStatus('current')
natSubsInterfaceIdSubsIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 2, 1, 1), SubscriberIndex())
if mibBuilder.loadTexts: natSubsInterfaceIdSubsIndex.setStatus('current')
natSubsInterfaceIdRowIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 2, 1, 2), SubsInterfaceIdRowIndex())
if mibBuilder.loadTexts: natSubsInterfaceIdRowIndex.setStatus('current')
natSubsInterfaceIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 123, 1, 16, 2, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: natSubsInterfaceIndex.setStatus('current')
natGroupStatelessObjects = ObjectGroup((1, 3, 6, 1, 2, 1, 123, 2, 1, 7)).setObjects(("NAT-MIB", "natInstanceAlias"), ("NAT-MIB", "natTranslations"), ("NAT-MIB", "natResourceErrors"), ("NAT-MIB", "natQuotaDrops"), ("NAT-MIB", "natMappingCreations"), ("NAT-MIB", "natMappingRemovals"), ("NAT-MIB", "natL4ProtocolTranslations"), ("NAT-MIB", "natL4ProtocolResourceErrors"), ("NAT-MIB", "natL4ProtocolQuotaDrops"), ("NAT-MIB", "natL4ProtocolMappingCreations"), ("NAT-MIB", "natL4ProtocolMappingRemovals"), ("NAT-MIB", "natMappingIntRealm"), ("NAT-MIB", "natMappingIntAddressType"), ("NAT-MIB", "natMappingIntAddress"), ("NAT-MIB", "natMappingIntPort"), ("NAT-MIB", "natMappingPool"), ("NAT-MIB", "natMappingMapBehavior"), ("NAT-MIB", "natMappingFilterBehavior"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natGroupStatelessObjects = natGroupStatelessObjects.setStatus('current')
natGroupStatefulObjects = ObjectGroup((1, 3, 6, 1, 2, 1, 123, 2, 1, 8)).setObjects(("NAT-MIB", "natOutOfPortErrors"), ("NAT-MIB", "natL4ProtocolOutOfPortErrors"), ("NAT-MIB", "natLimitMappings"), ("NAT-MIB", "natMappingsNotifyThreshold"), ("NAT-MIB", "natPoolRealm"), ("NAT-MIB", "natPoolWatermarkLow"), ("NAT-MIB", "natPoolWatermarkHigh"), ("NAT-MIB", "natPoolPortMin"), ("NAT-MIB", "natPoolPortMax"), ("NAT-MIB", "natPoolRangeType"), ("NAT-MIB", "natPoolRangeBegin"), ("NAT-MIB", "natPoolRangeEnd"), ("NAT-MIB", "natPoolRangeAllocations"), ("NAT-MIB", "natPoolRangeDeallocations"), ("NAT-MIB", "natMappingAddressPooling"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natGroupStatefulObjects = natGroupStatefulObjects.setStatus('current')
natGroupAddrMapObjects = ObjectGroup((1, 3, 6, 1, 2, 1, 123, 2, 1, 9)).setObjects(("NAT-MIB", "natAddressMappingCreations"), ("NAT-MIB", "natAddressMappingRemovals"), ("NAT-MIB", "natLimitAddressMappings"), ("NAT-MIB", "natAddrMapNotifyThreshold"), ("NAT-MIB", "natMapIntAddrExtRealm"), ("NAT-MIB", "natMapIntAddrExtType"), ("NAT-MIB", "natMapIntAddrExt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natGroupAddrMapObjects = natGroupAddrMapObjects.setStatus('current')
natGroupFragmentObjects = ObjectGroup((1, 3, 6, 1, 2, 1, 123, 2, 1, 10)).setObjects(("NAT-MIB", "natLimitFragments"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natGroupFragmentObjects = natGroupFragmentObjects.setStatus('current')
natGroupBasicNotifications = NotificationGroup((1, 3, 6, 1, 2, 1, 123, 2, 1, 11)).setObjects(("NAT-MIB", "natNotifPoolWatermarkLow"), ("NAT-MIB", "natNotifPoolWatermarkHigh"), ("NAT-MIB", "natNotifMappings"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natGroupBasicNotifications = natGroupBasicNotifications.setStatus('current')
natGroupAddrMapNotifications = NotificationGroup((1, 3, 6, 1, 2, 1, 123, 2, 1, 12)).setObjects(("NAT-MIB", "natNotifAddrMappings"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natGroupAddrMapNotifications = natGroupAddrMapNotifications.setStatus('current')
natGroupSubscriberObjects = ObjectGroup((1, 3, 6, 1, 2, 1, 123, 2, 1, 13)).setObjects(("NAT-MIB", "natMapIntAddrSubsIndex"), ("NAT-MIB", "natMappingSubsIndex"), ("NAT-MIB", "natSubscriberIdentifierType"), ("NAT-MIB", "natSubscriberIntPrefixType"), ("NAT-MIB", "natSubscriberIntPrefix"), ("NAT-MIB", "natSubscriberIntPrefixLength"), ("NAT-MIB", "natSubscriberRealm"), ("NAT-MIB", "natSubscriberTranslations"), ("NAT-MIB", "natSubscriberOutOfPortErrors"), ("NAT-MIB", "natSubscriberResourceErrors"), ("NAT-MIB", "natSubscriberQuotaDrops"), ("NAT-MIB", "natSubscriberMappingCreations"), ("NAT-MIB", "natSubscriberMappingRemovals"), ("NAT-MIB", "natSubscriberLimitMappings"), ("NAT-MIB", "natSubscriberVlanIdentifier"), ("NAT-MIB", "natSubscriberVpnIdentifier"), ("NAT-MIB", "natSubscriberIPEncapsIdType"), ("NAT-MIB", "natSubscriberIPEncapsIdAddr"), ("NAT-MIB", "natSubsInterfaceIndex"), ("NAT-MIB", "natLimitSubscribers"), ("NAT-MIB", "natSubscriberMapNotifyThresh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natGroupSubscriberObjects = natGroupSubscriberObjects.setStatus('current')
natGroupSubscriberNotifications = NotificationGroup((1, 3, 6, 1, 2, 1, 123, 2, 1, 14)).setObjects(("NAT-MIB", "natNotifSubscriberMappings"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natGroupSubscriberNotifications = natGroupSubscriberNotifications.setStatus('current')
natBasicStatelessCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 123, 2, 2, 3)).setObjects(("NAT-MIB", "natGroupStatelessObjects"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natBasicStatelessCompliance = natBasicStatelessCompliance.setStatus('current')
natBasicStatefulCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 123, 2, 2, 4)).setObjects(("NAT-MIB", "natGroupStatelessObjects"), ("NAT-MIB", "natGroupStatefulObjects"), ("NAT-MIB", "natGroupBasicNotifications"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natBasicStatefulCompliance = natBasicStatefulCompliance.setStatus('current')
natAddrMapCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 123, 2, 2, 5)).setObjects(("NAT-MIB", "natGroupStatelessObjects"), ("NAT-MIB", "natGroupStatefulObjects"), ("NAT-MIB", "natGroupBasicNotifications"), ("NAT-MIB", "natGroupAddrMapObjects"), ("NAT-MIB", "natGroupAddrMapNotifications"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natAddrMapCompliance = natAddrMapCompliance.setStatus('current')
natFragmentsCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 123, 2, 2, 6)).setObjects(("NAT-MIB", "natGroupStatelessObjects"), ("NAT-MIB", "natGroupStatefulObjects"), ("NAT-MIB", "natGroupBasicNotifications"), ("NAT-MIB", "natGroupFragmentObjects"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natFragmentsCompliance = natFragmentsCompliance.setStatus('current')
natCGNCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 123, 2, 2, 7)).setObjects(("NAT-MIB", "natGroupStatelessObjects"), ("NAT-MIB", "natGroupStatefulObjects"), ("NAT-MIB", "natGroupBasicNotifications"), ("NAT-MIB", "natGroupAddrMapObjects"), ("NAT-MIB", "natGroupAddrMapNotifications"), ("NAT-MIB", "natGroupFragmentObjects"), ("NAT-MIB", "natGroupSubscriberObjects"), ("NAT-MIB", "natGroupSubscriberNotifications"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    natCGNCompliance = natCGNCompliance.setStatus('current')
mibBuilder.exportSymbols("NAT-MIB", natStatsAddrMapGroup=natStatsAddrMapGroup, NatPoolingType=NatPoolingType, natMappingPool=natMappingPool, natBasicStatefulCompliance=natBasicStatefulCompliance, natOtherDefIdleTimeout=natOtherDefIdleTimeout, NatSessionId=NatSessionId, natMapIntAddrExt=natMapIntAddrExt, natSessionAddrMapIndex=natSessionAddrMapIndex, natSubscriberRealm=natSubscriberRealm, natAddrMapEntry=natAddrMapEntry, natBasicStatelessCompliance=natBasicStatelessCompliance, natLimitsTable=natLimitsTable, natSessionInTranslates=natSessionInTranslates, natAddrMapIndex=natAddrMapIndex, natSubscriberResourceErrors=natSubscriberResourceErrors, natInstanceIndex=natInstanceIndex, natMIBGroups=natMIBGroups, natNotifPoolWatermarkHigh=natNotifPoolWatermarkHigh, natNotifMappings=natNotifMappings, natNotifSubscriberMappings=natNotifSubscriberMappings, natL4ProtocolOutOfPortErrors=natL4ProtocolOutOfPortErrors, natAddrMapGlobalAddrFrom=natAddrMapGlobalAddrFrom, natAddrPortBindMaxIdleTime=natAddrPortBindMaxIdleTime, natAddrPortBindNumberOfEntries=natAddrPortBindNumberOfEntries, natNotifThrottlingInterval=natNotifThrottlingInterval, natAddrPortBindCurrentIdleTime=natAddrPortBindCurrentIdleTime, natAddrPortBindLocalPort=natAddrPortBindLocalPort, natIcmpDefIdleTimeout=natIcmpDefIdleTimeout, natAddrPortBindLocalAddrType=natAddrPortBindLocalAddrType, natSessionUpTime=natSessionUpTime, natProtocolTable=natProtocolTable, natPoolRangeBegin=natPoolRangeBegin, natGroupAddrMapNotifications=natGroupAddrMapNotifications, natAddrMapGlobalAddrType=natAddrMapGlobalAddrType, natAddrPortBindInTranslates=natAddrPortBindInTranslates, natAddrMapLocalAddrFrom=natAddrMapLocalAddrFrom, natL4ProtocolMappingRemovals=natL4ProtocolMappingRemovals, natGroupStatelessObjects=natGroupStatelessObjects, natSessionPublicDstPort=natSessionPublicDstPort, natProtocolOutTranslates=natProtocolOutTranslates, natPoolRangeDeallocations=natPoolRangeDeallocations, natAddrMapGlobalAddrTo=natAddrMapGlobalAddrTo, natOutOfPortErrors=natOutOfPortErrors, natMappingRemovals=natMappingRemovals, SubscriberIdentifierType=SubscriberIdentifierType, natInterfaceInTranslates=natInterfaceInTranslates, natAddrPortBindTable=natAddrPortBindTable, NatProtocolType=NatProtocolType, natAddrMapOutTranslates=natAddrMapOutTranslates, natAddrPortBindOutTranslates=natAddrPortBindOutTranslates, natCountersTable=natCountersTable, natMappingEntry=natMappingEntry, natMappingMapBehavior=natMappingMapBehavior, natAddrMapName=natAddrMapName, natSubscribersEntry=natSubscribersEntry, natSubscriberMappingRemovals=natSubscriberMappingRemovals, natTranslationGroup=natTranslationGroup, natProtocolDiscards=natProtocolDiscards, natMappingFilterBehavior=natMappingFilterBehavior, natAddrMapTranslationEntity=natAddrMapTranslationEntity, natAddrPortBindType=natAddrPortBindType, NatAssociationType=NatAssociationType, natAddrBindLocalAddrType=natAddrBindLocalAddrType, natAddrMapLocalPortTo=natAddrMapLocalPortTo, natAddrPortBindProtocol=natAddrPortBindProtocol, natAddrPortBindGlobalPort=natAddrPortBindGlobalPort, natAddrMapNotifyThreshold=natAddrMapNotifyThreshold, natL4ProtocolTranslations=natL4ProtocolTranslations, natSubscriberMapNotifyThresh=natSubscriberMapNotifyThresh, PYSNMP_MODULE_ID=natMIB, natMapIntAddrSubsIndex=natMapIntAddrSubsIndex, natLimitMappings=natLimitMappings, natMIBCompliances=natMIBCompliances, natSessionIndex=natSessionIndex, natAddrBindLocalAddr=natAddrBindLocalAddr, natStatsProtocolGroup=natStatsProtocolGroup, natFragmentsCompliance=natFragmentsCompliance, natL4ProtocolEntry=natL4ProtocolEntry, natAddrMapGlobalPortTo=natAddrMapGlobalPortTo, natSubscriberIndex=natSubscriberIndex, natAddrBindTable=natAddrBindTable, natAddrBindSessions=natAddrBindSessions, NatTranslationEntity=NatTranslationEntity, natAddrMapLocalPortFrom=natAddrMapLocalPortFrom, natAddrBindTranslationEntity=natAddrBindTranslationEntity, natSessionMaxIdleTime=natSessionMaxIdleTime, natPoolEntry=natPoolEntry, natSubsInterfaceIdSubsIndex=natSubsInterfaceIdSubsIndex, natSubscriberIntPrefix=natSubscriberIntPrefix, natPoolPortMax=natPoolPortMax, natGroupBasicNotifications=natGroupBasicNotifications, natMIBObjects=natMIBObjects, natMappingSubsIndex=natMappingSubsIndex, natMIB=natMIB, NatAddrMapId=NatAddrMapId, natInterfaceEntry=natInterfaceEntry, natAddrMapEntryType=natAddrMapEntryType, natSessionPrivateSrcEPBindId=natSessionPrivateSrcEPBindId, natSessionPrivateAddrType=natSessionPrivateAddrType, natSessionPrivateSrcPort=natSessionPrivateSrcPort, natMapIntAddrIntRealm=natMapIntAddrIntRealm, natAddrMapCompliance=natAddrMapCompliance, natInterfaceStorageType=natInterfaceStorageType, natAddrMapLocalAddrType=natAddrMapLocalAddrType, natAddrPortBindTranslationEntity=natAddrPortBindTranslationEntity, natMappingsNotifyThreshold=natMappingsNotifyThreshold, natProtocolEntry=natProtocolEntry, natMappingCreations=natMappingCreations, natAddrPortBindSessions=natAddrPortBindSessions, natTcpDefIdleTimeout=natTcpDefIdleTimeout, natSessionPublicSrcAddr=natSessionPublicSrcAddr, natNotifPoolWatermarkLow=natNotifPoolWatermarkLow, natAddrBindNumberOfEntries=natAddrBindNumberOfEntries, natPoolRangeEnd=natPoolRangeEnd, natGroupFragmentObjects=natGroupFragmentObjects, natLimitFragments=natLimitFragments, SubsInterfaceIdRowIndex=SubsInterfaceIdRowIndex, natAddrPortBindGlobalAddr=natAddrPortBindGlobalAddr, natSessionTable=natSessionTable, natNotifCtrl=natNotifCtrl, NatPoolId=NatPoolId, natMappingIntPort=natMappingIntPort, natSessionCurrentIdleTime=natSessionCurrentIdleTime, natSessionDirection=natSessionDirection, natPoolWatermarkHigh=natPoolWatermarkHigh, natMappingIntRealm=natMappingIntRealm, natCountersEntry=natCountersEntry, natPoolRealm=natPoolRealm, natPoolIndex=natPoolIndex, natSessionPrivateSrcAddr=natSessionPrivateSrcAddr, natMapIntAddrExtRealm=natMapIntAddrExtRealm, natSubscriberTranslations=natSubscriberTranslations, natLimitsEntry=natLimitsEntry, natAddrPortBindId=natAddrPortBindId, natInterfaceServiceType=natInterfaceServiceType, natTcpDefNegTimeout=natTcpDefNegTimeout, natAddrBindCurrentIdleTime=natAddrBindCurrentIdleTime, natL4ProtocolNumber=natL4ProtocolNumber, natPoolRangeTable=natPoolRangeTable, natMIBNotificationGroup=natMIBNotificationGroup, VlanIndexOrZero=VlanIndexOrZero, natAddrMapRowStatus=natAddrMapRowStatus, natResourceErrors=natResourceErrors, natL4ProtocolQuotaDrops=natL4ProtocolQuotaDrops, natMapObjects=natMapObjects, NatBindIdOrZero=NatBindIdOrZero, natBindDefIdleTimeout=natBindDefIdleTimeout, natAddrMapGlobalPortFrom=natAddrMapGlobalPortFrom, natSessionProtocolType=natSessionProtocolType, natConfigGroup=natConfigGroup, natDefTimeouts=natDefTimeouts, natAddressMappingCreations=natAddressMappingCreations, natPoolWatermarkLow=natPoolWatermarkLow, natMapIntAddrEntry=natMapIntAddrEntry, natAddrMapDiscards=natAddrMapDiscards, natSubscriberIntPrefixType=natSubscriberIntPrefixType, natGroupSubscriberNotifications=natGroupSubscriberNotifications, natMIBNotifications=natMIBNotifications, natMIBFullCompliance=natMIBFullCompliance, natSubscriberMappingCreations=natSubscriberMappingCreations, natInterfaceTable=natInterfaceTable, natSubsInterfaceIdentifierTable=natSubsInterfaceIdentifierTable, natSubscriberQuotaDrops=natSubscriberQuotaDrops, natSessionEntry=natSessionEntry, natTranslations=natTranslations, natSessionOutTranslates=natSessionOutTranslates, NatBehaviorType=NatBehaviorType, natAddrMapLocalAddrTo=natAddrMapLocalAddrTo, natMapIntAddrIntType=natMapIntAddrIntType, natL4ProtocolMappingCreations=natL4ProtocolMappingCreations, natLimitSubscribers=natLimitSubscribers, NatProtocolMap=NatProtocolMap, natAddrBindGlobalAddrType=natAddrBindGlobalAddrType, natSubscriberIPEncapsIdType=natSubscriberIPEncapsIdType, natSubscriberLimitMappings=natSubscriberLimitMappings, NatBindId=NatBindId, natInterfaceDiscards=natInterfaceDiscards, natAddrMapInTranslates=natAddrMapInTranslates, natAddrPortBindEntry=natAddrPortBindEntry, natSubscriberIdentifierType=natSubscriberIdentifierType, natL4ProtocolTable=natL4ProtocolTable, natAddrBindType=natAddrBindType, natPoolRangeAllocations=natPoolRangeAllocations, natAddrBindId=natAddrBindId, natSubsInterfaceIndex=natSubsInterfaceIndex, natMIBReadOnlyCompliance=natMIBReadOnlyCompliance, natUdpDefIdleTimeout=natUdpDefIdleTimeout, natAddrPortBindMapIndex=natAddrPortBindMapIndex, natQuotaDrops=natQuotaDrops, natInstanceAlias=natInstanceAlias, natSubscriberVpnIdentifier=natSubscriberVpnIdentifier, natMappingExtRealm=natMappingExtRealm, natAddrBindMaxIdleTime=natAddrBindMaxIdleTime, natSessionPrivateDstEPBindId=natSessionPrivateDstEPBindId, natMappingTable=natMappingTable, SubscriberIndex=SubscriberIndex, natSubscriberVlanIdentifier=natSubscriberVlanIdentifier, natSessionPrivateDstPort=natSessionPrivateDstPort, natMapIntAddrInt=natMapIntAddrInt, natPoolRangeEntry=natPoolRangeEntry, natSessionPrivateDstAddr=natSessionPrivateDstAddr, natSessionPrivateSrcEPBindMode=natSessionPrivateSrcEPBindMode, natSubsInterfaceIdRowIndex=natSubsInterfaceIdRowIndex, natMappingExtPort=natMappingExtPort, natAddrMapTable=natAddrMapTable, natAddressMappingRemovals=natAddressMappingRemovals, natMappingIntAddressType=natMappingIntAddressType, natAddrBindGlobalAddr=natAddrBindGlobalAddr, natStatsInterfaceGroup=natStatsInterfaceGroup, natAddrPortBindGlobalAddrType=natAddrPortBindGlobalAddrType, natSubscribers=natSubscribers, natPoolTable=natPoolTable, natInterfaceOutTranslates=natInterfaceOutTranslates, natGroupSubscriberObjects=natGroupSubscriberObjects, natPacketDiscard=natPacketDiscard, natAddrMapAddrUsed=natAddrMapAddrUsed, natNotifAddrMappings=natNotifAddrMappings, natProtocolInTranslates=natProtocolInTranslates, natCounters=natCounters, natInterfaceRealm=natInterfaceRealm, natPoolPortMin=natPoolPortMin, natGroupAddrMapObjects=natGroupAddrMapObjects, natMappingExtAddressType=natMappingExtAddressType, natAddrBindEntry=natAddrBindEntry, natMIBConformance=natMIBConformance, natAddrBindMapIndex=natAddrBindMapIndex, natSessionPublicSrcPort=natSessionPublicSrcPort, natSessionPublicAddrType=natSessionPublicAddrType, natMappingAddressPooling=natMappingAddressPooling, natInstanceEntry=natInstanceEntry, natMapIntAddrTable=natMapIntAddrTable, natPoolRangePoolIndex=natPoolRangePoolIndex, natInterfaceRowStatus=natInterfaceRowStatus, NatBindMode=NatBindMode, natProtocol=natProtocol, natAddrMapStorageType=natAddrMapStorageType, natSubscriberOutOfPortErrors=natSubscriberOutOfPortErrors, natSubscriberIPEncapsIdAddr=natSubscriberIPEncapsIdAddr, natMapIntAddrExtType=natMapIntAddrExtType, natSubsInterfaceIdentifierEntry=natSubsInterfaceIdentifierEntry, natGroupStatefulObjects=natGroupStatefulObjects, natMappingIntAddress=natMappingIntAddress, natPoolRangeType=natPoolRangeType, natAddrMapProtocol=natAddrMapProtocol, natSessionPublicDstAddr=natSessionPublicDstAddr, ProtocolNumber=ProtocolNumber, natMappingExtAddress=natMappingExtAddress, natLimitAddressMappings=natLimitAddressMappings, natSubscribersTable=natSubscribersTable, natMappingProto=natMappingProto, natInstanceTable=natInstanceTable, natSubscriberIntPrefixLength=natSubscriberIntPrefixLength, natSessionPrivateDstEPBindMode=natSessionPrivateDstEPBindMode, natPoolObjects=natPoolObjects)
mibBuilder.exportSymbols("NAT-MIB", natL4ProtocolResourceErrors=natL4ProtocolResourceErrors, natAddrBindOutTranslates=natAddrBindOutTranslates, natCGNCompliance=natCGNCompliance, natAddrPortBindLocalAddr=natAddrPortBindLocalAddr, natAddrBindInTranslates=natAddrBindInTranslates)
