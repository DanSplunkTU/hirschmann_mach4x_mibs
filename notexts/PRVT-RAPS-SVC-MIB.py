#
# PySNMP MIB module PRVT-RAPS-SVC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-RAPS-SVC-MIB
# Produced by pysmi-1.1.3 at Sun Nov 28 16:43:35 2021
# On host fv-az126-355 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
PrvtRapsRingIdType, PrvtRapsLinkOperStatusType, PrvtRapsCfmLevelType, PrvtRapsVlanIdType, PrvtRapsGuardTimerType, PrvtRapsLinkAggIdType, PrvtRapsBlockTimerType, PrvtRapsHoldOffType, PrvtRapsReceivedInfoType, PrvtRapsMonitoringMethodType, PrvtRapsWaitTimerType, PrvtRapsReceivedCommandType, PrvtRapsRoleType, PrvtRapsTopPriCmdType, PrvtRapsActionType, PrvtRapsInstIndexType, PrvtRapsStatesType, PrvtRapsMepIdType, PrvtRapsInstStatusType = mibBuilder.importSymbols("PRVT-RAPS-MIB", "PrvtRapsRingIdType", "PrvtRapsLinkOperStatusType", "PrvtRapsCfmLevelType", "PrvtRapsVlanIdType", "PrvtRapsGuardTimerType", "PrvtRapsLinkAggIdType", "PrvtRapsBlockTimerType", "PrvtRapsHoldOffType", "PrvtRapsReceivedInfoType", "PrvtRapsMonitoringMethodType", "PrvtRapsWaitTimerType", "PrvtRapsReceivedCommandType", "PrvtRapsRoleType", "PrvtRapsTopPriCmdType", "PrvtRapsActionType", "PrvtRapsInstIndexType", "PrvtRapsStatesType", "PrvtRapsMepIdType", "PrvtRapsInstStatusType")
serviceAccessSwitch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "serviceAccessSwitch")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, ObjectIdentity, TimeTicks, iso, Counter64, MibIdentifier, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Unsigned32, Bits, Integer32, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "ObjectIdentity", "TimeTicks", "iso", "Counter64", "MibIdentifier", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Unsigned32", "Bits", "Integer32", "ModuleIdentity", "NotificationType")
DisplayString, TextualConvention, MacAddress, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "MacAddress", "RowStatus", "TruthValue")
prvtRapsSvcMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 7, 6))
prvtRapsSvcMIB.setRevisions(('2011-03-02 00:00',))
if mibBuilder.loadTexts: prvtRapsSvcMIB.setLastUpdated('201103020000Z')
if mibBuilder.loadTexts: prvtRapsSvcMIB.setOrganization('BATM Advanced Communication')
prvtRapsSvcMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 0))
prvtRapsSvcMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1))
prvtRapsSvcInstTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 1), )
if mibBuilder.loadTexts: prvtRapsSvcInstTable.setStatus('current')
prvtRapsSvcInstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 1, 1), ).setIndexNames((0, "PRVT-RAPS-SVC-MIB", "prvtRapsSvcInstIndex"))
if mibBuilder.loadTexts: prvtRapsSvcInstEntry.setStatus('current')
prvtRapsSvcInstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 1, 1, 1), PrvtRapsInstIndexType())
if mibBuilder.loadTexts: prvtRapsSvcInstIndex.setStatus('current')
prvtRapsSvcInstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstRowStatus.setStatus('current')
prvtRapsSvcInstCfmDomainLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 1, 1, 3), PrvtRapsCfmLevelType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstCfmDomainLevel.setStatus('current')
prvtRapsSvcInstDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstDescription.setStatus('current')
prvtRapsSvcInstSubRingTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2), )
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingTable.setStatus('current')
prvtRapsSvcInstSubRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1), ).setIndexNames((0, "PRVT-RAPS-SVC-MIB", "prvtRapsSvcInstIndex"), (0, "PRVT-RAPS-SVC-MIB", "prvtRapsSvcInstSubRingIndex"))
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingEntry.setStatus('current')
prvtRapsSvcInstSubRingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 1), PrvtRapsInstIndexType())
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingIndex.setStatus('current')
prvtRapsSvcInstSubRingRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingRowStatus.setStatus('current')
prvtRapsSvcInstSubRingId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 3), PrvtRapsRingIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingId.setStatus('current')
prvtRapsSvcInstSubRingRole = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 4), PrvtRapsRoleType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingRole.setStatus('current')
prvtRapsSvcInstSubRingVirtChanService = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967294))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingVirtChanService.setStatus('current')
prvtRapsSvcInstSubRingRevertiveMode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 6), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingRevertiveMode.setStatus('current')
prvtRapsSvcInstSubRingHoldOffTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 7), PrvtRapsHoldOffType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingHoldOffTimer.setStatus('current')
prvtRapsSvcInstSubRingWaitTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 8), PrvtRapsWaitTimerType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingWaitTimer.setStatus('current')
prvtRapsSvcInstSubRingGuardTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 9), PrvtRapsGuardTimerType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingGuardTimer.setStatus('current')
prvtRapsSvcInstSubRingBlockTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 10), PrvtRapsBlockTimerType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingBlockTimer.setStatus('current')
prvtRapsSvcInstSubRingPropTopChng = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingPropTopChng.setStatus('current')
prvtRapsSvcInstSubRingShutdown = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 12), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingShutdown.setStatus('current')
prvtRapsSvcInstSubRingClear = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 13), PrvtRapsActionType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingClear.setStatus('current')
prvtRapsSvcInstSubRingManualSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 14), PrvtRapsActionType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingManualSwitch.setStatus('current')
prvtRapsSvcInstSubRingForcedSwitch = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 15), PrvtRapsActionType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingForcedSwitch.setStatus('current')
prvtRapsSvcInstSubRingOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 16), PrvtRapsInstStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingOperStatus.setStatus('current')
prvtRapsSvcInstSubRingRapsState = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 17), PrvtRapsStatesType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingRapsState.setStatus('current')
prvtRapsSvcInstSubRingTopPriCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 18), PrvtRapsTopPriCmdType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingTopPriCmd.setStatus('current')
prvtRapsSvcInstSubRingPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 19), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingPortName.setStatus('current')
prvtRapsSvcInstSubRingLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 20), PrvtRapsLinkOperStatusType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingLinkStatus.setStatus('current')
prvtRapsSvcInstSubRingRcvdNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 21), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingRcvdNodeId.setStatus('current')
prvtRapsSvcInstSubRingRcvdCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 22), PrvtRapsReceivedCommandType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingRcvdCmd.setStatus('current')
prvtRapsSvcInstSubRingRcvdInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 23), PrvtRapsReceivedInfoType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingRcvdInfo.setStatus('current')
prvtRapsSvcInstSubRingDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 24), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingDescription.setStatus('current')
prvtRapsSvcInstSubRingVcRcvdNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 25), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingVcRcvdNodeId.setStatus('current')
prvtRapsSvcInstSubRingVcRcvdCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 26), PrvtRapsReceivedCommandType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingVcRcvdCmd.setStatus('current')
prvtRapsSvcInstSubRingVcRcvdInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 27), PrvtRapsReceivedInfoType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingVcRcvdInfo.setStatus('current')
prvtRapsSvcInstSubRingControlVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 2, 1, 28), PrvtRapsVlanIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingControlVlan.setStatus('current')
prvtRapsSvcInstSubRingPortTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 3), )
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingPortTable.setStatus('current')
prvtRapsSvcInstSubRingPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 3, 1), ).setIndexNames((0, "PRVT-RAPS-SVC-MIB", "prvtRapsSvcInstIndex"), (0, "PRVT-RAPS-SVC-MIB", "prvtRapsSvcInstSubRingIndex"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingPortEntry.setStatus('current')
prvtRapsSvcInstSubRingPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 3, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingPortRowStatus.setStatus('current')
prvtRapsSvcInstSubRingPortMep = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 3, 1, 2), PrvtRapsMepIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingPortMep.setStatus('current')
prvtRapsSvcInstSubRingPortRpl = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 3, 1, 3), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingPortRpl.setStatus('current')
prvtRapsSvcInstSubRingPortMonitoringMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 3, 1, 4), PrvtRapsMonitoringMethodType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingPortMonitoringMethod.setStatus('current')
prvtRapsSvcInstSubRingLagTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 4), )
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingLagTable.setStatus('current')
prvtRapsSvcInstSubRingLagEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 4, 1), ).setIndexNames((0, "PRVT-RAPS-SVC-MIB", "prvtRapsSvcInstIndex"), (0, "PRVT-RAPS-SVC-MIB", "prvtRapsSvcInstSubRingIndex"), (0, "PRVT-RAPS-SVC-MIB", "prvtRapsSvcInstSubRingLagId"))
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingLagEntry.setStatus('current')
prvtRapsSvcInstSubRingLagId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 4, 1, 1), PrvtRapsLinkAggIdType())
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingLagId.setStatus('current')
prvtRapsSvcInstSubRingLagRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingLagRowStatus.setStatus('current')
prvtRapsSvcInstSubRingLagMep = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 4, 1, 3), PrvtRapsMepIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingLagMep.setStatus('current')
prvtRapsSvcInstSubRingLagRpl = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 4, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingLagRpl.setStatus('current')
prvtRapsSvcInstSubRingLagMonitoringMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 1, 4, 1, 5), PrvtRapsMonitoringMethodType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingLagMonitoringMethod.setStatus('current')
prvtRapsSvcInstSubRingDefectAlarm = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 0, 1)).setObjects(("PRVT-RAPS-SVC-MIB", "prvtRapsSvcInstSubRingOperStatus"), ("PRVT-RAPS-SVC-MIB", "prvtRapsSvcInstSubRingControlVlan"))
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingDefectAlarm.setStatus('current')
prvtRapsSvcInstSubRingSwitchoverAlarm = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 7, 6, 0, 2)).setObjects(("PRVT-RAPS-SVC-MIB", "prvtRapsSvcInstSubRingRapsState"), ("PRVT-RAPS-SVC-MIB", "prvtRapsSvcInstSubRingControlVlan"))
if mibBuilder.loadTexts: prvtRapsSvcInstSubRingSwitchoverAlarm.setStatus('current')
mibBuilder.exportSymbols("PRVT-RAPS-SVC-MIB", prvtRapsSvcInstSubRingLinkStatus=prvtRapsSvcInstSubRingLinkStatus, prvtRapsSvcInstCfmDomainLevel=prvtRapsSvcInstCfmDomainLevel, prvtRapsSvcInstSubRingLagEntry=prvtRapsSvcInstSubRingLagEntry, prvtRapsSvcInstSubRingLagMonitoringMethod=prvtRapsSvcInstSubRingLagMonitoringMethod, prvtRapsSvcInstSubRingPortName=prvtRapsSvcInstSubRingPortName, prvtRapsSvcInstIndex=prvtRapsSvcInstIndex, prvtRapsSvcInstSubRingWaitTimer=prvtRapsSvcInstSubRingWaitTimer, prvtRapsSvcInstSubRingLagId=prvtRapsSvcInstSubRingLagId, prvtRapsSvcInstSubRingVcRcvdNodeId=prvtRapsSvcInstSubRingVcRcvdNodeId, prvtRapsSvcInstSubRingPortMep=prvtRapsSvcInstSubRingPortMep, prvtRapsSvcInstSubRingVirtChanService=prvtRapsSvcInstSubRingVirtChanService, prvtRapsSvcMIB=prvtRapsSvcMIB, prvtRapsSvcInstSubRingId=prvtRapsSvcInstSubRingId, prvtRapsSvcInstSubRingLagTable=prvtRapsSvcInstSubRingLagTable, prvtRapsSvcInstSubRingPortEntry=prvtRapsSvcInstSubRingPortEntry, prvtRapsSvcInstSubRingIndex=prvtRapsSvcInstSubRingIndex, prvtRapsSvcInstSubRingLagRpl=prvtRapsSvcInstSubRingLagRpl, prvtRapsSvcInstDescription=prvtRapsSvcInstDescription, prvtRapsSvcInstSubRingEntry=prvtRapsSvcInstSubRingEntry, prvtRapsSvcInstSubRingGuardTimer=prvtRapsSvcInstSubRingGuardTimer, PYSNMP_MODULE_ID=prvtRapsSvcMIB, prvtRapsSvcInstTable=prvtRapsSvcInstTable, prvtRapsSvcInstSubRingRevertiveMode=prvtRapsSvcInstSubRingRevertiveMode, prvtRapsSvcInstSubRingPortMonitoringMethod=prvtRapsSvcInstSubRingPortMonitoringMethod, prvtRapsSvcInstSubRingRole=prvtRapsSvcInstSubRingRole, prvtRapsSvcInstSubRingRowStatus=prvtRapsSvcInstSubRingRowStatus, prvtRapsSvcInstSubRingDescription=prvtRapsSvcInstSubRingDescription, prvtRapsSvcInstSubRingVcRcvdInfo=prvtRapsSvcInstSubRingVcRcvdInfo, prvtRapsSvcInstSubRingControlVlan=prvtRapsSvcInstSubRingControlVlan, prvtRapsSvcInstSubRingDefectAlarm=prvtRapsSvcInstSubRingDefectAlarm, prvtRapsSvcInstSubRingRcvdNodeId=prvtRapsSvcInstSubRingRcvdNodeId, prvtRapsSvcInstSubRingOperStatus=prvtRapsSvcInstSubRingOperStatus, prvtRapsSvcInstEntry=prvtRapsSvcInstEntry, prvtRapsSvcMIBNotifications=prvtRapsSvcMIBNotifications, prvtRapsSvcInstSubRingRcvdCmd=prvtRapsSvcInstSubRingRcvdCmd, prvtRapsSvcInstSubRingTopPriCmd=prvtRapsSvcInstSubRingTopPriCmd, prvtRapsSvcInstSubRingVcRcvdCmd=prvtRapsSvcInstSubRingVcRcvdCmd, prvtRapsSvcInstSubRingManualSwitch=prvtRapsSvcInstSubRingManualSwitch, prvtRapsSvcInstSubRingLagMep=prvtRapsSvcInstSubRingLagMep, prvtRapsSvcInstSubRingClear=prvtRapsSvcInstSubRingClear, prvtRapsSvcInstSubRingForcedSwitch=prvtRapsSvcInstSubRingForcedSwitch, prvtRapsSvcMIBObjects=prvtRapsSvcMIBObjects, prvtRapsSvcInstSubRingBlockTimer=prvtRapsSvcInstSubRingBlockTimer, prvtRapsSvcInstSubRingPortRowStatus=prvtRapsSvcInstSubRingPortRowStatus, prvtRapsSvcInstSubRingShutdown=prvtRapsSvcInstSubRingShutdown, prvtRapsSvcInstRowStatus=prvtRapsSvcInstRowStatus, prvtRapsSvcInstSubRingPortRpl=prvtRapsSvcInstSubRingPortRpl, prvtRapsSvcInstSubRingPortTable=prvtRapsSvcInstSubRingPortTable, prvtRapsSvcInstSubRingSwitchoverAlarm=prvtRapsSvcInstSubRingSwitchoverAlarm, prvtRapsSvcInstSubRingHoldOffTimer=prvtRapsSvcInstSubRingHoldOffTimer, prvtRapsSvcInstSubRingRcvdInfo=prvtRapsSvcInstSubRingRcvdInfo, prvtRapsSvcInstSubRingTable=prvtRapsSvcInstSubRingTable, prvtRapsSvcInstSubRingLagRowStatus=prvtRapsSvcInstSubRingLagRowStatus, prvtRapsSvcInstSubRingPropTopChng=prvtRapsSvcInstSubRingPropTopChng, prvtRapsSvcInstSubRingRapsState=prvtRapsSvcInstSubRingRapsState)
