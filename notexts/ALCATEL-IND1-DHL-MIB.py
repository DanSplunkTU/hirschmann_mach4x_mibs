#
# PySNMP MIB module ALCATEL-IND1-DHL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-DHL-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 17:14:57 2022
# On host fv-az135-792 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
softentIND1DHL, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1DHL")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibIdentifier, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter64, IpAddress, NotificationType, Integer32, Bits, TimeTicks, Gauge32, iso, Unsigned32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter64", "IpAddress", "NotificationType", "Integer32", "Bits", "TimeTicks", "Gauge32", "iso", "Unsigned32", "ModuleIdentity")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
alcatelIND1DHLMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1))
if mibBuilder.loadTexts: alcatelIND1DHLMIB.setLastUpdated('201008150000Z')
if mibBuilder.loadTexts: alcatelIND1DHLMIB.setOrganization('Alcatel - Architects Of An Internet World')
alcatelIND1DHLMIBNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 0))
if mibBuilder.loadTexts: alcatelIND1DHLMIBNotifications.setStatus('current')
alcatelIND1DHLMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1))
if mibBuilder.loadTexts: alcatelIND1DHLMIBObjects.setStatus('current')
alcatelIND1DHLMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 2))
if mibBuilder.loadTexts: alcatelIND1DHLMIBConformance.setStatus('current')
alcatelIND1DHLMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1DHLMIBGroups.setStatus('current')
alcatelIND1DHLMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1DHLMIBCompliances.setStatus('current')
alaDHLSessionConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 1))
alaDHLSessionTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 1, 1), )
if mibBuilder.loadTexts: alaDHLSessionTable.setStatus('current')
alaDHLSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-DHL-MIB", "alaDHLSessionIndex"))
if mibBuilder.loadTexts: alaDHLSessionEntry.setStatus('current')
alaDHLSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000)))
if mibBuilder.loadTexts: alaDHLSessionIndex.setStatus('current')
alaDHLSessionDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 1, 1, 1, 2), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDHLSessionDescr.setStatus('current')
alaDHLSessionAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDHLSessionAdminStatus.setStatus('current')
alaDHLSessionOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDHLSessionOperStatus.setStatus('current')
alaDHLSessionPreemptionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600)).clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDHLSessionPreemptionTime.setStatus('current')
alaDHLSessionAdminMacFlushing = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("raw", 2), ("mvrp", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDHLSessionAdminMacFlushing.setStatus('current')
alaDHLSessionActiveMacFlushing = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("raw", 2), ("mvrp", 3))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDHLSessionActiveMacFlushing.setStatus('current')
alaDHLSessionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 1, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDHLSessionRowStatus.setStatus('current')
alaDHLLinksConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 2))
alaDHLLinksTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 2, 1), )
if mibBuilder.loadTexts: alaDHLLinksTable.setStatus('current')
alaDHLLinksEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 2, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-DHL-MIB", "alaDHLSessionIndex"), (0, "ALCATEL-IND1-DHL-MIB", "alaDHLLinkslinkA"), (0, "ALCATEL-IND1-DHL-MIB", "alaDHLLinkslinkB"))
if mibBuilder.loadTexts: alaDHLLinksEntry.setStatus('current')
alaDHLLinkslinkA = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 2, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaDHLLinkslinkA.setStatus('current')
alaDHLLinkslinkB = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 2, 1, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: alaDHLLinkslinkB.setStatus('current')
alaDHLLinkslinkAOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDHLLinkslinkAOperStatus.setStatus('current')
alaDHLLinkslinkBOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDHLLinkslinkBOperStatus.setStatus('current')
alaDHLLinksRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDHLLinksRowStatus.setStatus('current')
alaDHLVpa = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 3))
alaDHLVpaTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 3, 1), )
if mibBuilder.loadTexts: alaDHLVpaTable.setStatus('current')
alaDHLVpaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 3, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-DHL-MIB", "alaDHLSessionIndex"), (0, "ALCATEL-IND1-DHL-MIB", "alaDHLVpalink"), (0, "ALCATEL-IND1-DHL-MIB", "alaDHLVpaVlan"))
if mibBuilder.loadTexts: alaDHLVpaEntry.setStatus('current')
alaDHLVpalink = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 3, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaDHLVpalink.setStatus('current')
alaDHLVpaVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaDHLVpaVlan.setStatus('current')
alaDHLVpaVlanType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("protectedVlan", 1), ("unprotectedVlan", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDHLVpaVlanType.setStatus('current')
alaDHLVpaActiveLink = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 3, 1, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDHLVpaActiveLink.setStatus('current')
alaDHLVlanMap = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 4))
alaDHLVlanMapTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 4, 1), )
if mibBuilder.loadTexts: alaDHLVlanMapTable.setStatus('current')
alaDHLVlanMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 4, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-DHL-MIB", "alaDHLSessionIndex"), (0, "ALCATEL-IND1-DHL-MIB", "alaDHLVlanMapVlanStart"), (0, "ALCATEL-IND1-DHL-MIB", "alaDHLVlanMapVlanEnd"))
if mibBuilder.loadTexts: alaDHLVlanMapEntry.setStatus('current')
alaDHLVlanMapVlanStart = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaDHLVlanMapVlanStart.setStatus('current')
alaDHLVlanMapVlanEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaDHLVlanMapVlanEnd.setStatus('current')
alaDHLVlanMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 4, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDHLVlanMapRowStatus.setStatus('current')
alaDHLTrapsObj = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 5))
alaDHLVlanMoveTrap = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 0, 1)).setObjects(("ALCATEL-IND1-DHL-MIB", "alaDHLSessionID"), ("ALCATEL-IND1-DHL-MIB", "alaDHLPortFrom"), ("ALCATEL-IND1-DHL-MIB", "alaDHLPortTo"), ("ALCATEL-IND1-DHL-MIB", "alaDHLVlanMoveReason"))
if mibBuilder.loadTexts: alaDHLVlanMoveTrap.setStatus('current')
alaDHLSessionID = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 5, 1), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDHLSessionID.setStatus('current')
alaDHLPortFrom = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 5, 2), InterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDHLPortFrom.setStatus('current')
alaDHLPortTo = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 5, 3), InterfaceIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDHLPortTo.setStatus('current')
alaDHLVlanMoveReason = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 1, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("linkUp", 1), ("linkDown", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDHLVlanMoveReason.setStatus('current')
alcatelIND1DHLMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-DHL-MIB", "alaDHLSessionGroup"), ("ALCATEL-IND1-DHL-MIB", "alaDHLLinksGroup"), ("ALCATEL-IND1-DHL-MIB", "alaDHLVpaGroup"), ("ALCATEL-IND1-DHL-MIB", "alaDHLVlanMapGroup"), ("ALCATEL-IND1-DHL-MIB", "alaDHLNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1DHLMIBCompliance = alcatelIND1DHLMIBCompliance.setStatus('current')
alaDHLSessionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-DHL-MIB", "alaDHLSessionDescr"), ("ALCATEL-IND1-DHL-MIB", "alaDHLSessionAdminStatus"), ("ALCATEL-IND1-DHL-MIB", "alaDHLSessionOperStatus"), ("ALCATEL-IND1-DHL-MIB", "alaDHLSessionPreemptionTime"), ("ALCATEL-IND1-DHL-MIB", "alaDHLSessionAdminMacFlushing"), ("ALCATEL-IND1-DHL-MIB", "alaDHLSessionActiveMacFlushing"), ("ALCATEL-IND1-DHL-MIB", "alaDHLSessionRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDHLSessionGroup = alaDHLSessionGroup.setStatus('current')
alaDHLLinksGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-DHL-MIB", "alaDHLLinkslinkAOperStatus"), ("ALCATEL-IND1-DHL-MIB", "alaDHLLinkslinkBOperStatus"), ("ALCATEL-IND1-DHL-MIB", "alaDHLLinksRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDHLLinksGroup = alaDHLLinksGroup.setStatus('current')
alaDHLVpaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-DHL-MIB", "alaDHLVpaVlanType"), ("ALCATEL-IND1-DHL-MIB", "alaDHLVpaActiveLink"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDHLVpaGroup = alaDHLVpaGroup.setStatus('current')
alaDHLVlanMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-DHL-MIB", "alaDHLVlanMapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDHLVlanMapGroup = alaDHLVlanMapGroup.setStatus('current')
alaDHLNotificationObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-DHL-MIB", "alaDHLSessionID"), ("ALCATEL-IND1-DHL-MIB", "alaDHLPortFrom"), ("ALCATEL-IND1-DHL-MIB", "alaDHLPortTo"), ("ALCATEL-IND1-DHL-MIB", "alaDHLVlanMoveReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDHLNotificationObjectGroup = alaDHLNotificationObjectGroup.setStatus('current')
alaDHLNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 65, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-DHL-MIB", "alaDHLVlanMoveTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDHLNotificationGroup = alaDHLNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-DHL-MIB", alaDHLSessionOperStatus=alaDHLSessionOperStatus, alaDHLVpaActiveLink=alaDHLVpaActiveLink, alaDHLLinkslinkBOperStatus=alaDHLLinkslinkBOperStatus, alaDHLLinksTable=alaDHLLinksTable, alaDHLNotificationObjectGroup=alaDHLNotificationObjectGroup, alcatelIND1DHLMIBCompliance=alcatelIND1DHLMIBCompliance, alaDHLLinkslinkB=alaDHLLinkslinkB, alcatelIND1DHLMIBConformance=alcatelIND1DHLMIBConformance, alaDHLSessionRowStatus=alaDHLSessionRowStatus, alaDHLSessionDescr=alaDHLSessionDescr, alaDHLLinksConfig=alaDHLLinksConfig, alaDHLVlanMapVlanEnd=alaDHLVlanMapVlanEnd, alaDHLPortFrom=alaDHLPortFrom, alaDHLSessionIndex=alaDHLSessionIndex, alaDHLVlanMap=alaDHLVlanMap, alaDHLVlanMapEntry=alaDHLVlanMapEntry, alcatelIND1DHLMIBNotifications=alcatelIND1DHLMIBNotifications, alaDHLSessionTable=alaDHLSessionTable, alaDHLVpaTable=alaDHLVpaTable, alcatelIND1DHLMIB=alcatelIND1DHLMIB, alaDHLSessionID=alaDHLSessionID, PYSNMP_MODULE_ID=alcatelIND1DHLMIB, alaDHLSessionPreemptionTime=alaDHLSessionPreemptionTime, alaDHLVpa=alaDHLVpa, alaDHLVpaVlan=alaDHLVpaVlan, alaDHLSessionActiveMacFlushing=alaDHLSessionActiveMacFlushing, alaDHLVlanMoveTrap=alaDHLVlanMoveTrap, alaDHLLinksEntry=alaDHLLinksEntry, alaDHLVpaEntry=alaDHLVpaEntry, alaDHLNotificationGroup=alaDHLNotificationGroup, alcatelIND1DHLMIBCompliances=alcatelIND1DHLMIBCompliances, alaDHLVlanMapRowStatus=alaDHLVlanMapRowStatus, alaDHLSessionAdminStatus=alaDHLSessionAdminStatus, alaDHLSessionGroup=alaDHLSessionGroup, alaDHLVpaVlanType=alaDHLVpaVlanType, alaDHLTrapsObj=alaDHLTrapsObj, alaDHLSessionConfig=alaDHLSessionConfig, alaDHLVlanMapVlanStart=alaDHLVlanMapVlanStart, alaDHLVlanMoveReason=alaDHLVlanMoveReason, alcatelIND1DHLMIBObjects=alcatelIND1DHLMIBObjects, alaDHLLinkslinkAOperStatus=alaDHLLinkslinkAOperStatus, alaDHLVpalink=alaDHLVpalink, alaDHLVlanMapGroup=alaDHLVlanMapGroup, alcatelIND1DHLMIBGroups=alcatelIND1DHLMIBGroups, alaDHLLinksGroup=alaDHLLinksGroup, alaDHLVlanMapTable=alaDHLVlanMapTable, alaDHLVpaGroup=alaDHLVpaGroup, alaDHLLinksRowStatus=alaDHLLinksRowStatus, alaDHLSessionEntry=alaDHLSessionEntry, alaDHLPortTo=alaDHLPortTo, alaDHLLinkslinkA=alaDHLLinkslinkA, alaDHLSessionAdminMacFlushing=alaDHLSessionAdminMacFlushing)
