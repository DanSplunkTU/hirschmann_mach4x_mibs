#
# PySNMP MIB module ALCATEL-IND1-OSPF3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-OSPF3-MIB
# Produced by pysmi-1.1.8 at Thu Jan 13 23:55:51 2022
# On host fv-az74-435 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
routingIND1Ospf3, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "routingIND1Ospf3")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
Ipv6Address, Ipv6IfIndexOrZero = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address", "Ipv6IfIndexOrZero")
ospfv3IfEntry, ospfv3AreaEntry = mibBuilder.importSymbols("OSPFV3-MIB", "ospfv3IfEntry", "ospfv3AreaEntry")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Gauge32, Counter64, ObjectIdentity, IpAddress, Bits, NotificationType, MibIdentifier, Counter32, ModuleIdentity, TimeTicks, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Gauge32", "Counter64", "ObjectIdentity", "IpAddress", "Bits", "NotificationType", "MibIdentifier", "Counter32", "ModuleIdentity", "TimeTicks", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
alcatelIND1OSPF3MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1))
alcatelIND1OSPF3MIB.setRevisions(('2014-10-06 00:00', '2007-04-03 00:00',))
if mibBuilder.loadTexts: alcatelIND1OSPF3MIB.setLastUpdated('201410060000Z')
if mibBuilder.loadTexts: alcatelIND1OSPF3MIB.setOrganization('Alcatel-Lucent')
alcatelIND1OSPF3MIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1))
alaProtocolOspf3 = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1))
alaOspf3OrigRouteTag = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaOspf3OrigRouteTag.setStatus('current')
alaOspf3TimerSpfDelay = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaOspf3TimerSpfDelay.setStatus('current')
alaOspf3TimerSpfHold = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaOspf3TimerSpfHold.setStatus('current')
alaOspf3RestartHelperSupport = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaOspf3RestartHelperSupport.setStatus('current')
alaOspf3RestartStrictLsaChecking = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaOspf3RestartStrictLsaChecking.setStatus('current')
alaOspf3RestartInitiate = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaOspf3RestartInitiate.setStatus('current')
alaOspf3MTUCheck = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaOspf3MTUCheck.setStatus('current')
alaOspf3RouteTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 8), )
if mibBuilder.loadTexts: alaOspf3RouteTable.setStatus('current')
alaOspf3RouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 8, 1), ).setIndexNames((0, "ALCATEL-IND1-OSPF3-MIB", "alaOspf3RouteDest"), (0, "ALCATEL-IND1-OSPF3-MIB", "alaOspf3RoutePfxLength"), (0, "ALCATEL-IND1-OSPF3-MIB", "alaOspf3RouteNextHop"), (0, "ALCATEL-IND1-OSPF3-MIB", "alaOspf3RouteIfIndex"))
if mibBuilder.loadTexts: alaOspf3RouteEntry.setStatus('current')
alaOspf3RouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 8, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: alaOspf3RouteDest.setStatus('current')
alaOspf3RoutePfxLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setUnits('bits')
if mibBuilder.loadTexts: alaOspf3RoutePfxLength.setStatus('current')
alaOspf3RouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 8, 1, 3), Ipv6Address())
if mibBuilder.loadTexts: alaOspf3RouteNextHop.setStatus('current')
alaOspf3RouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 8, 1, 4), Ipv6IfIndexOrZero())
if mibBuilder.loadTexts: alaOspf3RouteIfIndex.setStatus('current')
alaOspf3RouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("host", 1), ("other", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaOspf3RouteType.setStatus('current')
alaOspf3RoutePathType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("intraArea", 1), ("interArea", 2), ("externalType1", 3), ("externalType2", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaOspf3RoutePathType.setStatus('current')
alaOspf3RouteMetric1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 8, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaOspf3RouteMetric1.setStatus('current')
alaOspf3RouteMetric2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 8, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaOspf3RouteMetric2.setStatus('current')
alaOspf3BfdStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaOspf3BfdStatus.setStatus('current')
alaOspf3BfdAllInterfaceStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaOspf3BfdAllInterfaceStatus.setStatus('current')
alaOspf3IfAugTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 11), )
if mibBuilder.loadTexts: alaOspf3IfAugTable.setStatus('current')
alaOspf3IfAugEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 11, 1), )
ospfv3IfEntry.registerAugmentions(("ALCATEL-IND1-OSPF3-MIB", "alaOspf3IfAugEntry"))
alaOspf3IfAugEntry.setIndexNames(*ospfv3IfEntry.getIndexNames())
if mibBuilder.loadTexts: alaOspf3IfAugEntry.setStatus('current')
alaOspf3IfBfdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaOspf3IfBfdStatus.setStatus('current')
alaOspf3IfBfdDrsOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaOspf3IfBfdDrsOnly.setStatus('current')
alaOspf3AreaAugTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 12), )
if mibBuilder.loadTexts: alaOspf3AreaAugTable.setStatus('current')
alaOspf3AreaAugEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 12, 1), )
ospfv3AreaEntry.registerAugmentions(("ALCATEL-IND1-OSPF3-MIB", "alaOspf3AreaAugEntry"))
alaOspf3AreaAugEntry.setIndexNames(*ospfv3AreaEntry.getIndexNames())
if mibBuilder.loadTexts: alaOspf3AreaAugEntry.setStatus('current')
alaOspf3AreaRouterLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 12, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaOspf3AreaRouterLsaCount.setStatus('current')
alaOspf3AreaNetworkLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 12, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaOspf3AreaNetworkLsaCount.setStatus('current')
alaOspf3AreaIntraAreaPrefixLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 12, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaOspf3AreaIntraAreaPrefixLsaCount.setStatus('current')
alaOspf3AreaInterAreaPrefixLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 12, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaOspf3AreaInterAreaPrefixLsaCount.setStatus('current')
alaOspf3AreaInterAreaRouterLsaCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 12, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaOspf3AreaInterAreaRouterLsaCount.setStatus('current')
alaOspf3AreaHostCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 12, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaOspf3AreaHostCount.setStatus('current')
alaOspf3AreaInterfaceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 12, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaOspf3AreaInterfaceCount.setStatus('current')
alaOspf3AreaSummarizationRangeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 1, 1, 12, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaOspf3AreaSummarizationRangeCount.setStatus('current')
alcatelIND1OSPF3MIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 2))
alcatelIND1OSPF3MIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 2, 1))
alcatelIND1OSPF3MIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 2, 2))
alcatelIND1OSPF3MIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-OSPF3-MIB", "alaOSPF3ConfigMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1OSPF3MIBCompliance = alcatelIND1OSPF3MIBCompliance.setStatus('current')
alaOSPF3ConfigMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-OSPF3-MIB", "alaOspf3OrigRouteTag"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3TimerSpfDelay"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3TimerSpfHold"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3RestartHelperSupport"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3RestartStrictLsaChecking"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3RestartInitiate"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3MTUCheck"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaOSPF3ConfigMIBGroup = alaOSPF3ConfigMIBGroup.setStatus('current')
alaOspf3RouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 2, 2, 2)).setObjects(("ALCATEL-IND1-OSPF3-MIB", "alaOspf3RouteType"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3RoutePathType"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3RouteMetric1"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3RouteMetric2"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3BfdStatus"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3BfdAllInterfaceStatus"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3IfBfdDrsOnly"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3IfBfdStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaOspf3RouteGroup = alaOspf3RouteGroup.setStatus('current')
alaOspf3AreaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 13, 1, 2, 2, 3)).setObjects(("ALCATEL-IND1-OSPF3-MIB", "alaOspf3AreaRouterLsaCount"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3AreaNetworkLsaCount"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3AreaIntraAreaPrefixLsaCount"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3AreaInterAreaPrefixLsaCount"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3AreaInterAreaRouterLsaCount"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3AreaHostCount"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3AreaInterfaceCount"), ("ALCATEL-IND1-OSPF3-MIB", "alaOspf3AreaSummarizationRangeCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaOspf3AreaGroup = alaOspf3AreaGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-OSPF3-MIB", alaOspf3RouteNextHop=alaOspf3RouteNextHop, alaOspf3RouteMetric2=alaOspf3RouteMetric2, alaOspf3AreaInterAreaRouterLsaCount=alaOspf3AreaInterAreaRouterLsaCount, alaOspf3IfBfdStatus=alaOspf3IfBfdStatus, alaOspf3MTUCheck=alaOspf3MTUCheck, alaOspf3AreaGroup=alaOspf3AreaGroup, alcatelIND1OSPF3MIB=alcatelIND1OSPF3MIB, alaProtocolOspf3=alaProtocolOspf3, alaOspf3TimerSpfHold=alaOspf3TimerSpfHold, alaOspf3AreaNetworkLsaCount=alaOspf3AreaNetworkLsaCount, alaOspf3RouteType=alaOspf3RouteType, alaOspf3RouteIfIndex=alaOspf3RouteIfIndex, alcatelIND1OSPF3MIBConformance=alcatelIND1OSPF3MIBConformance, alaOspf3RestartStrictLsaChecking=alaOspf3RestartStrictLsaChecking, alaOspf3RouteGroup=alaOspf3RouteGroup, alaOspf3RouteDest=alaOspf3RouteDest, alaOspf3IfAugTable=alaOspf3IfAugTable, alaOspf3AreaRouterLsaCount=alaOspf3AreaRouterLsaCount, alaOspf3AreaHostCount=alaOspf3AreaHostCount, alaOspf3RoutePfxLength=alaOspf3RoutePfxLength, alaOspf3AreaAugEntry=alaOspf3AreaAugEntry, alaOspf3IfBfdDrsOnly=alaOspf3IfBfdDrsOnly, alaOspf3RouteTable=alaOspf3RouteTable, alaOspf3AreaInterfaceCount=alaOspf3AreaInterfaceCount, alaOspf3RestartHelperSupport=alaOspf3RestartHelperSupport, alaOspf3AreaInterAreaPrefixLsaCount=alaOspf3AreaInterAreaPrefixLsaCount, alaOspf3RoutePathType=alaOspf3RoutePathType, alaOspf3AreaAugTable=alaOspf3AreaAugTable, alaOspf3RouteEntry=alaOspf3RouteEntry, alaOspf3TimerSpfDelay=alaOspf3TimerSpfDelay, alaOspf3BfdStatus=alaOspf3BfdStatus, alaOspf3BfdAllInterfaceStatus=alaOspf3BfdAllInterfaceStatus, alcatelIND1OSPF3MIBGroups=alcatelIND1OSPF3MIBGroups, alaOSPF3ConfigMIBGroup=alaOSPF3ConfigMIBGroup, alaOspf3RouteMetric1=alaOspf3RouteMetric1, alaOspf3OrigRouteTag=alaOspf3OrigRouteTag, alaOspf3AreaSummarizationRangeCount=alaOspf3AreaSummarizationRangeCount, alaOspf3IfAugEntry=alaOspf3IfAugEntry, alaOspf3AreaIntraAreaPrefixLsaCount=alaOspf3AreaIntraAreaPrefixLsaCount, alcatelIND1OSPF3MIBCompliance=alcatelIND1OSPF3MIBCompliance, alcatelIND1OSPF3MIBObjects=alcatelIND1OSPF3MIBObjects, PYSNMP_MODULE_ID=alcatelIND1OSPF3MIB, alcatelIND1OSPF3MIBCompliances=alcatelIND1OSPF3MIBCompliances, alaOspf3RestartInitiate=alaOspf3RestartInitiate)
