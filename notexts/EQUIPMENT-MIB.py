#
# PySNMP MIB module EQUIPMENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/sagemcom/EQUIPMENT-MIB
# Produced by pysmi-1.1.3 at Sun Nov 21 13:48:12 2021
# On host fv-az74-779 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
sagemDr, = mibBuilder.importSymbols("SAGEM-DR-MIB", "sagemDr")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, ModuleIdentity, IpAddress, Bits, Counter32, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, Gauge32, ObjectIdentity, Integer32, iso, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ModuleIdentity", "IpAddress", "Bits", "Counter32", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "Gauge32", "ObjectIdentity", "Integer32", "iso", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
equip = ModuleIdentity((1, 3, 6, 1, 4, 1, 1038, 107))
equip.setRevisions(('1998-08-04 00:00',))
if mibBuilder.loadTexts: equip.setLastUpdated('0211150000Z')
if mibBuilder.loadTexts: equip.setOrganization('SAGEM/DR Tolbiac Centre')
class SagemBoolean(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("true", 1), ("false", 2))

class IntDateTime(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

class Severity(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))
    namedValues = NamedValues(("nonAlarmed", 1), ("minor", 2), ("major", 3), ("critical", 4), ("warning", 5), ("invNonAlarmed", 6), ("invMinor", 7), ("invMajor", 8), ("invCritical", 9), ("invWarning", 10))

equipDateTime = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 1), IntDateTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: equipDateTime.setStatus('current')
equipLastModif = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 2), IntDateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: equipLastModif.setStatus('current')
equipWarmStart = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 3), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: equipWarmStart.setStatus('current')
equipClearConf = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 4), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: equipClearConf.setStatus('current')
communityNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: communityNumber.setStatus('current')
communityTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 107, 6), )
if mibBuilder.loadTexts: communityTable.setStatus('current')
communityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 107, 6, 1), ).setIndexNames((0, "EQUIPMENT-MIB", "communityIndex"))
if mibBuilder.loadTexts: communityEntry.setStatus('current')
communityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 107, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: communityIndex.setStatus('current')
communityString = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 107, 6, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: communityString.setStatus('current')
communityAcces = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 107, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("iONOSANMobserver", 1), ("iONOSANMoperator", 2), ("iONOSANMsupervisor", 3), ("dIRECTACCESSobserver", 4), ("dIRECTACCESSoperator", 5), ("dIRECTACCESSsupervisor", 6), ("iONOSANMclientobserver", 7), ("iONOSANMclientoperator", 8), ("dIRECTACCESSclientobserver", 9), ("dIRECTACCESSclientoperator", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: communityAcces.setStatus('current')
trapNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapNumber.setStatus('current')
trapTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 107, 8), )
if mibBuilder.loadTexts: trapTable.setStatus('current')
trapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 107, 8, 1), ).setIndexNames((0, "EQUIPMENT-MIB", "trapIndex"))
if mibBuilder.loadTexts: trapEntry.setStatus('current')
trapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 107, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapIndex.setStatus('current')
trapDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 107, 8, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapDestination.setStatus('current')
trapCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 107, 8, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapCommunity.setStatus('current')
equipLoad = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 107, 9))
equipLocalFile = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 9, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: equipLocalFile.setStatus('current')
equipServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 9, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: equipServerAddress.setStatus('current')
equipRemoteFile = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 9, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: equipRemoteFile.setStatus('current')
equipDirection = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 9, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("download", 0), ("upload", 1), ("backupDownload", 2), ("switching", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: equipDirection.setStatus('current')
equipLoadProceed = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 9, 5), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: equipLoadProceed.setStatus('current')
equipLoadDiagnostic = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 9, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: equipLoadDiagnostic.setStatus('current')
equipLoadProtocole = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 9, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ftp", 1), ("tftp", 2), ("http", 3), ("telnet", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: equipLoadProtocole.setStatus('current')
transferedItemTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 107, 30), )
if mibBuilder.loadTexts: transferedItemTable.setStatus('current')
transferedItemEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 107, 30, 1), ).setIndexNames((0, "EQUIPMENT-MIB", "transferedItemIndex"))
if mibBuilder.loadTexts: transferedItemEntry.setStatus('current')
transferedItemIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 107, 30, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: transferedItemIndex.setStatus('current')
transferedItemType = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 107, 30, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: transferedItemType.setStatus('current')
transferedItemVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 107, 30, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: transferedItemVersion.setStatus('current')
transferedItemComment = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 107, 30, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: transferedItemComment.setStatus('current')
equipStatus = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 10), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: equipStatus.setStatus('current')
equipStatusV2 = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 11), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: equipStatusV2.setStatus('current')
equipCptModif = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: equipCptModif.setStatus('current')
cptModif = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 107, 14))
cptSNC = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 14, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cptSNC.setStatus('current')
cptCnx = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 14, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cptCnx.setStatus('current')
cptMSP = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 14, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cptMSP.setStatus('current')
cptMsSpring = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 14, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cptMsSpring.setStatus('current')
cptSynchro = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 14, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cptSynchro.setStatus('current')
cptMngt = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 14, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cptMngt.setStatus('current')
cptNet = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 14, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cptNet.setStatus('current')
equipManagerNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 107, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: equipManagerNumber.setStatus('current')
equipManagerTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 107, 21), )
if mibBuilder.loadTexts: equipManagerTable.setStatus('current')
equipManagerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 107, 21, 1), ).setIndexNames((0, "EQUIPMENT-MIB", "equipManagerIndex"))
if mibBuilder.loadTexts: equipManagerEntry.setStatus('current')
equipManagerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 107, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: equipManagerIndex.setStatus('current')
equipManagerAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 107, 21, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: equipManagerAddress.setStatus('current')
equipManagerADM = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 107, 21, 1, 3), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: equipManagerADM.setStatus('current')
equipManagerOPR = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 107, 21, 1, 4), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: equipManagerOPR.setStatus('current')
equipManagerOBS = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 107, 21, 1, 5), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: equipManagerOBS.setStatus('current')
equipTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 107, 0))
equipStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 1038, 107, 0, 1)).setObjects(("EQUIPMENT-MIB", "equipStatus"))
if mibBuilder.loadTexts: equipStatusTrap.setStatus('current')
mibBuilder.exportSymbols("EQUIPMENT-MIB", transferedItemIndex=transferedItemIndex, communityAcces=communityAcces, SagemBoolean=SagemBoolean, equipCptModif=equipCptModif, Severity=Severity, cptCnx=cptCnx, cptMSP=cptMSP, equipStatus=equipStatus, cptSynchro=cptSynchro, cptNet=cptNet, transferedItemEntry=transferedItemEntry, trapDestination=trapDestination, equipLoadProceed=equipLoadProceed, PYSNMP_MODULE_ID=equip, equipDirection=equipDirection, cptModif=cptModif, equipManagerOPR=equipManagerOPR, transferedItemTable=transferedItemTable, equipManagerIndex=equipManagerIndex, equipLoadProtocole=equipLoadProtocole, equipLastModif=equipLastModif, equipStatusTrap=equipStatusTrap, equipRemoteFile=equipRemoteFile, equip=equip, equipTraps=equipTraps, equipManagerOBS=equipManagerOBS, IntDateTime=IntDateTime, transferedItemType=transferedItemType, equipLoad=equipLoad, communityEntry=communityEntry, equipManagerNumber=equipManagerNumber, trapTable=trapTable, communityIndex=communityIndex, equipManagerAddress=equipManagerAddress, trapNumber=trapNumber, equipDateTime=equipDateTime, transferedItemComment=transferedItemComment, cptMngt=cptMngt, equipStatusV2=equipStatusV2, equipManagerEntry=equipManagerEntry, transferedItemVersion=transferedItemVersion, communityNumber=communityNumber, equipWarmStart=equipWarmStart, cptSNC=cptSNC, communityString=communityString, equipManagerTable=equipManagerTable, cptMsSpring=cptMsSpring, trapIndex=trapIndex, trapCommunity=trapCommunity, communityTable=communityTable, equipLocalFile=equipLocalFile, equipLoadDiagnostic=equipLoadDiagnostic, equipServerAddress=equipServerAddress, equipManagerADM=equipManagerADM, trapEntry=trapEntry, equipClearConf=equipClearConf)
