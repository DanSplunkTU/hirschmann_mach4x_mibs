#
# PySNMP MIB module EQLAGENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/equallogic/EQLAGENT-MIB
# Produced by pysmi-1.1.8 at Sun Jan 16 00:36:32 2022
# On host fv-az42-839 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
eqlGroupId, = mibBuilder.importSymbols("EQLGROUP-MIB", "eqlGroupId")
eqlMemberIndex, = mibBuilder.importSymbols("EQLMEMBER-MIB", "eqlMemberIndex")
equalLogic, = mibBuilder.importSymbols("EQUALLOGIC-SMI", "equalLogic")
ifEntry, = mibBuilder.importSymbols("IF-MIB", "ifEntry")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, TimeTicks, Bits, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, NotificationType, Integer32, Gauge32, iso, MibIdentifier, enterprises, ObjectIdentity, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "TimeTicks", "Bits", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "NotificationType", "Integer32", "Gauge32", "iso", "MibIdentifier", "enterprises", "ObjectIdentity", "ModuleIdentity")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
eqlAgentModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 12740, 12))
eqlAgentModule.setRevisions(('2002-11-11 00:00',))
if mibBuilder.loadTexts: eqlAgentModule.setLastUpdated('201503171528Z')
if mibBuilder.loadTexts: eqlAgentModule.setOrganization('EqualLogic Inc.')
eqlAgentObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 12740, 12, 1))
eqlAgentNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 12740, 12, 2))
eqlAgentConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 12740, 12, 3))
eqlAgentInetObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 12740, 12, 4))
eqlExtErrorTable = MibTable((1, 3, 6, 1, 4, 1, 12740, 12, 1, 1), )
if mibBuilder.loadTexts: eqlExtErrorTable.setStatus('current')
eqlExtErrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12740, 12, 1, 1, 1), ).setIndexNames((0, "EQLAGENT-MIB", "eqlEntIpAddr"), (0, "EQLAGENT-MIB", "eqlSNMPrid"))
if mibBuilder.loadTexts: eqlExtErrorEntry.setStatus('current')
eqlEntIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 12, 1, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: eqlEntIpAddr.setStatus('current')
eqlSNMPrid = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 12, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlSNMPrid.setStatus('current')
eqlSNMPExtErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 12, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlSNMPExtErrCode.setStatus('current')
eqlSNMPExtErrMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 12, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlSNMPExtErrMsg.setStatus('current')
eqlExtInetErrorTable = MibTable((1, 3, 6, 1, 4, 1, 12740, 12, 4, 4), )
if mibBuilder.loadTexts: eqlExtInetErrorTable.setStatus('current')
eqlExtInetErrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 12740, 12, 4, 4, 1), ).setIndexNames((0, "EQLAGENT-MIB", "eqlEntInetAddrType"), (0, "EQLAGENT-MIB", "eqlEntInetAddr"), (0, "EQLAGENT-MIB", "eqlSNMPInetrid"))
if mibBuilder.loadTexts: eqlExtInetErrorEntry.setStatus('current')
eqlEntInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 12, 4, 4, 1, 1), InetAddressType())
if mibBuilder.loadTexts: eqlEntInetAddrType.setStatus('current')
eqlEntInetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 12, 4, 4, 1, 2), InetAddress())
if mibBuilder.loadTexts: eqlEntInetAddr.setStatus('current')
eqlSNMPInetrid = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 12, 4, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlSNMPInetrid.setStatus('current')
eqlSNMPInetExtErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 12, 4, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlSNMPInetExtErrCode.setStatus('current')
eqlSNMPInetExtErrMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 12740, 12, 4, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: eqlSNMPInetExtErrMsg.setStatus('current')
mibBuilder.exportSymbols("EQLAGENT-MIB", eqlSNMPInetrid=eqlSNMPInetrid, eqlAgentInetObjects=eqlAgentInetObjects, eqlEntInetAddr=eqlEntInetAddr, eqlExtInetErrorTable=eqlExtInetErrorTable, eqlSNMPInetExtErrCode=eqlSNMPInetExtErrCode, eqlExtErrorEntry=eqlExtErrorEntry, eqlSNMPrid=eqlSNMPrid, eqlEntInetAddrType=eqlEntInetAddrType, eqlAgentObjects=eqlAgentObjects, eqlAgentModule=eqlAgentModule, eqlSNMPExtErrCode=eqlSNMPExtErrCode, eqlAgentConformance=eqlAgentConformance, eqlAgentNotifications=eqlAgentNotifications, PYSNMP_MODULE_ID=eqlAgentModule, eqlExtInetErrorEntry=eqlExtInetErrorEntry, eqlEntIpAddr=eqlEntIpAddr, eqlSNMPInetExtErrMsg=eqlSNMPInetExtErrMsg, eqlSNMPExtErrMsg=eqlSNMPExtErrMsg, eqlExtErrorTable=eqlExtErrorTable)
