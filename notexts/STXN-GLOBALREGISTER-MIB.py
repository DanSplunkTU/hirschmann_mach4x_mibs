#
# PySNMP MIB module STXN-GLOBALREGISTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/aviat-wtm/STXN-GLOBALREGISTER-MIB
# Produced by pysmi-1.1.8 at Sat Jan 15 17:07:35 2022
# On host fv-az39-968 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, NotificationType, Unsigned32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, IpAddress, iso, enterprises, TimeTicks, Gauge32, Bits, ModuleIdentity, ObjectIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "NotificationType", "Unsigned32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "IpAddress", "iso", "enterprises", "TimeTicks", "Gauge32", "Bits", "ModuleIdentity", "ObjectIdentity", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
stxnGlobalRegModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 2509, 6, 1))
stxnGlobalRegModule.setRevisions(('2014-01-21 03:58', '2011-11-28 00:07', '2011-03-14 01:19', '2009-07-23 04:15', '2009-04-16 23:58', '2004-02-20 00:55', '2003-01-29 03:31', '2002-11-28 23:58', '2002-10-08 19:35', '2002-09-03 23:15', '2001-11-15 01:10', '2001-03-14 20:41', '2001-02-13 20:21',))
if mibBuilder.loadTexts: stxnGlobalRegModule.setLastUpdated('201401210358Z')
if mibBuilder.loadTexts: stxnGlobalRegModule.setOrganization('Aviat Networks')
dmc = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509))
if mibBuilder.loadTexts: dmc.setStatus('current')
dmcNet = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 1))
if mibBuilder.loadTexts: dmcNet.setStatus('current')
proxyAgent = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 1, 1))
if mibBuilder.loadTexts: proxyAgent.setStatus('current')
nonsnmpRadio = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 1, 2))
if mibBuilder.loadTexts: nonsnmpRadio.setStatus('current')
snmpRadio = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 1, 3))
if mibBuilder.loadTexts: snmpRadio.setStatus('current')
dmcEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 1, 4))
if mibBuilder.loadTexts: dmcEvents.setStatus('current')
dmcSecurity = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 1, 5))
if mibBuilder.loadTexts: dmcSecurity.setStatus('current')
sp2Radio = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 1, 3, 1))
if mibBuilder.loadTexts: sp2Radio.setStatus('current')
altium = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 1, 3, 2))
if mibBuilder.loadTexts: altium.setStatus('current')
dmcModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 2))
if mibBuilder.loadTexts: dmcModules.setStatus('current')
stxnEngineering = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 4))
if mibBuilder.loadTexts: stxnEngineering.setStatus('current')
stxnProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 5))
if mibBuilder.loadTexts: stxnProducts.setStatus('current')
stxnLMCDR = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 5, 1))
if mibBuilder.loadTexts: stxnLMCDR.setStatus('current')
stxnAOU = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 5, 2))
if mibBuilder.loadTexts: stxnAOU.setStatus('current')
stxnCTU = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 5, 3))
if mibBuilder.loadTexts: stxnCTU.setStatus('current')
stxnUNITY = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 5, 4))
if mibBuilder.loadTexts: stxnUNITY.setStatus('current')
stxnProVision = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 5, 5))
if mibBuilder.loadTexts: stxnProVision.setStatus('current')
stxnEfficientSite = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 5, 6))
if mibBuilder.loadTexts: stxnEfficientSite.setStatus('current')
stxnEfficientSiteControllerUnit = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 5, 6, 1))
if mibBuilder.loadTexts: stxnEfficientSiteControllerUnit.setStatus('current')
stxnProductOIDs = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 5, 10))
if mibBuilder.loadTexts: stxnProductOIDs.setStatus('current')
stxnModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 6))
if mibBuilder.loadTexts: stxnModules.setStatus('current')
stxnEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 7))
if mibBuilder.loadTexts: stxnEvents.setStatus('current')
stxnGeneric = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 8))
if mibBuilder.loadTexts: stxnGeneric.setStatus('current')
aviatModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 9))
if mibBuilder.loadTexts: aviatModules.setStatus('current')
aviatAfModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 9, 1000))
if mibBuilder.loadTexts: aviatAfModules.setStatus('current')
aviatAaModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 9, 1001))
if mibBuilder.loadTexts: aviatAaModules.setStatus('current')
aviatAlModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 9, 1002))
if mibBuilder.loadTexts: aviatAlModules.setStatus('current')
aviatAmModules = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 9, 1003))
if mibBuilder.loadTexts: aviatAmModules.setStatus('current')
aviatEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 10))
if mibBuilder.loadTexts: aviatEvents.setStatus('current')
aviatProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 11))
if mibBuilder.loadTexts: aviatProducts.setStatus('current')
stxnOvationEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 7, 1))
if mibBuilder.loadTexts: stxnOvationEvents.setStatus('current')
stxnUnityAOUEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 7, 2))
if mibBuilder.loadTexts: stxnUnityAOUEvents.setStatus('current')
stxnUnityCTUEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 7, 3))
if mibBuilder.loadTexts: stxnUnityCTUEvents.setStatus('current')
stxnUnityIDUEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 7, 4))
if mibBuilder.loadTexts: stxnUnityIDUEvents.setStatus('current')
stxnEfficientSiteEvents = ObjectIdentity((1, 3, 6, 1, 4, 1, 2509, 7, 5))
if mibBuilder.loadTexts: stxnEfficientSiteEvents.setStatus('current')
mibBuilder.exportSymbols("STXN-GLOBALREGISTER-MIB", aviatAfModules=aviatAfModules, sp2Radio=sp2Radio, stxnEfficientSite=stxnEfficientSite, stxnEvents=stxnEvents, aviatAaModules=aviatAaModules, dmc=dmc, stxnOvationEvents=stxnOvationEvents, stxnEngineering=stxnEngineering, proxyAgent=proxyAgent, stxnModules=stxnModules, aviatModules=aviatModules, aviatAmModules=aviatAmModules, PYSNMP_MODULE_ID=stxnGlobalRegModule, aviatProducts=aviatProducts, dmcEvents=dmcEvents, stxnUnityCTUEvents=stxnUnityCTUEvents, stxnUNITY=stxnUNITY, stxnUnityAOUEvents=stxnUnityAOUEvents, dmcNet=dmcNet, stxnLMCDR=stxnLMCDR, stxnUnityIDUEvents=stxnUnityIDUEvents, nonsnmpRadio=nonsnmpRadio, stxnGeneric=stxnGeneric, dmcSecurity=dmcSecurity, aviatEvents=aviatEvents, stxnEfficientSiteControllerUnit=stxnEfficientSiteControllerUnit, stxnProductOIDs=stxnProductOIDs, stxnAOU=stxnAOU, dmcModules=dmcModules, altium=altium, stxnCTU=stxnCTU, stxnProVision=stxnProVision, stxnGlobalRegModule=stxnGlobalRegModule, stxnEfficientSiteEvents=stxnEfficientSiteEvents, aviatAlModules=aviatAlModules, stxnProducts=stxnProducts, snmpRadio=snmpRadio)
