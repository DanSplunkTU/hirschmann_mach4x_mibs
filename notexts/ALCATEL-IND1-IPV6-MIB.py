#
# PySNMP MIB module ALCATEL-IND1-IPV6-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-IPV6-MIB
# Produced by pysmi-1.1.8 at Tue Jan 11 21:37:02 2022
# On host fv-az121-779 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
softentIND1Ipv6, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1Ipv6")
alaVirtualRouterName, = mibBuilder.importSymbols("ALCATEL-IND1-VIRTUALROUTER-MIB", "alaVirtualRouterName")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ipv6RouteEntry, ipv6IfIndex = mibBuilder.importSymbols("IPV6-MIB", "ipv6RouteEntry", "ipv6IfIndex")
Ipv6Address, Ipv6IfIndexOrZero = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address", "Ipv6IfIndexOrZero")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, iso, MibIdentifier, NotificationType, Counter32, IpAddress, ObjectIdentity, Bits, ModuleIdentity, Gauge32, Integer32, TimeTicks, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "iso", "MibIdentifier", "NotificationType", "Counter32", "IpAddress", "ObjectIdentity", "Bits", "ModuleIdentity", "Gauge32", "Integer32", "TimeTicks", "Counter64")
TruthValue, TimeStamp, DateAndTime, RowStatus, PhysAddress, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TimeStamp", "DateAndTime", "RowStatus", "PhysAddress", "TextualConvention", "DisplayString")
alcatelIND1IPv6MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1))
alcatelIND1IPv6MIB.setRevisions(('2016-04-12 00:00', '2015-03-24 00:00', '2014-10-14 00:00', '2014-09-18 00:00', '2014-08-12 00:00', '2014-05-20 00:00', '2014-02-28 00:00', '2013-07-30 00:00', '2013-07-29 00:00', '2013-03-13 00:00', '2012-02-07 00:00', '2011-03-09 00:00', '2010-05-13 00:00', '2010-01-06 00:00',))
if mibBuilder.loadTexts: alcatelIND1IPv6MIB.setLastUpdated('201503240000Z')
if mibBuilder.loadTexts: alcatelIND1IPv6MIB.setOrganization('Alcatel-Lucent')
alcatelIND1IPv6MIBNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 0))
if mibBuilder.loadTexts: alcatelIND1IPv6MIBNotifications.setStatus('current')
alcatelIND1IPv6MIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1))
class AlaIPv6AddressPrefix(TextualConvention, OctetString):
    status = 'current'
    displayHint = '2x:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(8, 8)
    fixedLength = 8

class AlaIPv6RAFilterTrustedSourceType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("port", 1), ("netAddress", 2), ("physAddress", 3))

class AlaIPv6RAFilterTrustedSourceValue(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 255)

class AlaIPv6RAFilterTrustedSourceIfIndex(TextualConvention, OctetString):
    status = 'current'
    displayHint = '4d'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

alaIPv6Config = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 1))
alaIPv6ClearNeighbors = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIPv6ClearNeighbors.setStatus('current')
alaIPv6ClearTraffic = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIPv6ClearTraffic.setStatus('current')
alaIPv6ClearPMTUTable = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIPv6ClearPMTUTable.setStatus('current')
alaIPv6PMTUMinLifetime = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 1440)).clone(60)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIPv6PMTUMinLifetime.setStatus('current')
alaIPv6NeighborStaleLifetime = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 2880)).clone(10)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIPv6NeighborStaleLifetime.setStatus('current')
alaIPv6GlobalID = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIPv6GlobalID.setStatus('current')
alaIPv6VirtualSourceMAC = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIPv6VirtualSourceMAC.setStatus('current')
alaIPv6NeighborLimit = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 1, 8), Unsigned32().clone(8000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIPv6NeighborLimit.setStatus('current')
alaIPv6NeighborVRFLimit = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 1, 9), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaIPv6NeighborVRFLimit.setStatus('current')
alaIPv6InterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2), )
if mibBuilder.loadTexts: alaIPv6InterfaceTable.setStatus('current')
alaIPv6InterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1), ).setIndexNames((0, "IPV6-MIB", "ipv6IfIndex"))
if mibBuilder.loadTexts: alaIPv6InterfaceEntry.setStatus('current')
alaIPv6InterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceRowStatus.setStatus('current')
alaIPv6InterfaceDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6InterfaceDescription.setStatus('current')
alaIPv6InterfaceMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceMtu.setStatus('current')
alaIPv6InterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("vlan", 2), ("tunnel", 3), ("loopback", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6InterfaceType.setStatus('current')
alaIPv6InterfaceAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceAdminStatus.setStatus('current')
alaIPv6InterfaceSendRouterAdvertisements = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceSendRouterAdvertisements.setStatus('current')
alaIPv6InterfaceMaxRtrAdvInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 1800)).clone(600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceMaxRtrAdvInterval.setStatus('current')
alaIPv6InterfaceAdvManagedFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceAdvManagedFlag.setStatus('current')
alaIPv6InterfaceAdvOtherConfigFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceAdvOtherConfigFlag.setStatus('current')
alaIPv6InterfaceAdvReachableTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600000))).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceAdvReachableTime.setStatus('current')
alaIPv6InterfaceAdvRetransTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 11), Unsigned32()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceAdvRetransTimer.setStatus('current')
alaIPv6InterfaceAdvDefaultLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 9000)).clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceAdvDefaultLifetime.setStatus('current')
alaIPv6InterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceName.setStatus('current')
alaIPv6InterfaceAdvSendMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 14), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceAdvSendMtu.setStatus('current')
alaIPv6InterfaceReachableTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 15), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6InterfaceReachableTime.setStatus('current')
alaIPv6InterfaceBaseReachableTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceBaseReachableTime.setStatus('current')
alaIPv6InterfaceMinRtrAdvInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1350))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceMinRtrAdvInterval.setStatus('current')
alaIPv6InterfaceClockSkew = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceClockSkew.setStatus('current')
alaIPv6InterfaceRetransTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 30000)).clone(1000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceRetransTimer.setStatus('current')
alaIPv6InterfaceDADTransmits = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceDADTransmits.setStatus('current')
alaIPv6InterfaceAdvHopLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceAdvHopLimit.setStatus('current')
alaIPv6InterfaceLPND = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceLPND.setStatus('current')
alaIPv6InterfaceRAFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceRAFilter.setStatus('deprecated')
alaIPv6InterfaceNeighborLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 24), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceNeighborLimit.setStatus('current')
alaIPv6InterfaceRetransBackoff = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceRetransBackoff.setStatus('current')
alaIPv6InterfaceRetransMax = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceRetransMax.setStatus('current')
alaIPv6InterfaceRouterPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3))).clone(namedValues=NamedValues(("medium", 0), ("high", 1), ("low", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceRouterPreference.setStatus('current')
alaIPv6TunnelConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 3))
alaIPv6ConfigTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 3, 2), )
if mibBuilder.loadTexts: alaIPv6ConfigTunnelTable.setStatus('current')
alaIPv6ConfigTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 3, 2, 1), ).setIndexNames((0, "IPV6-MIB", "ipv6IfIndex"))
if mibBuilder.loadTexts: alaIPv6ConfigTunnelEntry.setStatus('current')
alaIPv6ConfigTunnelV4Source = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 3, 2, 1, 1), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6ConfigTunnelV4Source.setStatus('current')
alaIPv6ConfigTunnelV4Dest = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 3, 2, 1, 2), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6ConfigTunnelV4Dest.setStatus('current')
alaIPv6InterfaceAddressTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 4), )
if mibBuilder.loadTexts: alaIPv6InterfaceAddressTable.setStatus('current')
alaIPv6InterfaceAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 4, 1), ).setIndexNames((0, "IPV6-MIB", "ipv6IfIndex"), (0, "ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceAddress"))
if mibBuilder.loadTexts: alaIPv6InterfaceAddressEntry.setStatus('current')
alaIPv6InterfaceAddressRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 4, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceAddressRowStatus.setStatus('current')
alaIPv6InterfaceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 4, 1, 2), Ipv6Address())
if mibBuilder.loadTexts: alaIPv6InterfaceAddress.setStatus('current')
alaIPv6InterfaceAddressPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceAddressPrefixLength.setStatus('current')
alaIPv6InterfaceAddressAnycastFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 4, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceAddressAnycastFlag.setStatus('current')
alaIPv6InterfaceAddressDADStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 0), ("pending", 1), ("duplicate", 2), ("passed", 3), ("check", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceAddressDADStatus.setStatus('current')
alaIPv6InterfaceEUI64AddressTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 5), )
if mibBuilder.loadTexts: alaIPv6InterfaceEUI64AddressTable.setStatus('current')
alaIPv6InterfaceEUI64AddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 5, 1), ).setIndexNames((0, "IPV6-MIB", "ipv6IfIndex"), (0, "ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceEUI64AddressPrefix"))
if mibBuilder.loadTexts: alaIPv6InterfaceEUI64AddressEntry.setStatus('current')
alaIPv6InterfaceEUI64AddressRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 5, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceEUI64AddressRowStatus.setStatus('current')
alaIPv6InterfaceEUI64AddressPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 5, 1, 2), AlaIPv6AddressPrefix())
if mibBuilder.loadTexts: alaIPv6InterfaceEUI64AddressPrefix.setStatus('current')
alaIPv6InterfaceEUI64AddressPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 5, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfaceEUI64AddressPrefixLength.setStatus('current')
alaIPv6InterfaceEUI64AddressIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6InterfaceEUI64AddressIdentifier.setStatus('current')
alaIPv6NeighborTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 6), )
if mibBuilder.loadTexts: alaIPv6NeighborTable.setStatus('current')
alaIPv6NeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 6, 1), ).setIndexNames((0, "IPV6-MIB", "ipv6IfIndex"), (0, "ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborNetAddress"))
if mibBuilder.loadTexts: alaIPv6NeighborEntry.setStatus('current')
alaIPv6NeighborNetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 6, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: alaIPv6NeighborNetAddress.setStatus('current')
alaIPv6NeighborPhysAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 6, 1, 2), PhysAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6NeighborPhysAddress.setStatus('current')
alaIPv6NeighborSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 6, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6NeighborSlot.setStatus('deprecated')
alaIPv6NeighborPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 6, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6NeighborPort.setStatus('deprecated')
alaIPv6NeighborType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("dynamic", 2), ("static", 3), ("local", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6NeighborType.setStatus('current')
alaIPv6NeighborState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("reachable", 1), ("stale", 2), ("delay", 3), ("probe", 4), ("invalid", 5), ("unknown", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6NeighborState.setStatus('deprecated')
alaIPv6NeighborLastUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 6, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6NeighborLastUpdated.setStatus('current')
alaIPv6NeighborRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 6, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6NeighborRowStatus.setStatus('current')
alaIPv6NeighborLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 6, 1, 9), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6NeighborLifetime.setStatus('current')
alaIPv6NeighborReachability = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("confirmed", 1), ("unconfirmed", 2), ("incomplete", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6NeighborReachability.setStatus('current')
alaIPv6NeighborChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 6, 1, 11), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6NeighborChassis.setStatus('deprecated')
alaIPv6NeighborPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 6, 1, 12), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6NeighborPortIfIndex.setStatus('current')
alaIPv6StaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 7), )
if mibBuilder.loadTexts: alaIPv6StaticRouteTable.setStatus('obsolete')
alaIPv6StaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 7, 1), ).setIndexNames((0, "ALCATEL-IND1-IPV6-MIB", "alaIPv6StaticRouteDest"), (0, "ALCATEL-IND1-IPV6-MIB", "alaIPv6StaticRoutePfxLength"))
if mibBuilder.loadTexts: alaIPv6StaticRouteEntry.setStatus('obsolete')
alaIPv6StaticRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 7, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: alaIPv6StaticRouteDest.setStatus('obsolete')
alaIPv6StaticRoutePfxLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: alaIPv6StaticRoutePfxLength.setStatus('obsolete')
alaIPv6StaticRouteIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 7, 1, 3), Ipv6IfIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6StaticRouteIfIndex.setStatus('obsolete')
alaIPv6StaticRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 7, 1, 4), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6StaticRouteNextHop.setStatus('obsolete')
alaIPv6StaticRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 7, 1, 5), Unsigned32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6StaticRouteMetric.setStatus('obsolete')
alaIPv6StaticRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 7, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6StaticRouteRowStatus.setStatus('obsolete')
alaIPv6HostTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 8), )
if mibBuilder.loadTexts: alaIPv6HostTable.setStatus('current')
alaIPv6HostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 8, 1), ).setIndexNames((0, "ALCATEL-IND1-IPV6-MIB", "alaIPv6HostName"), (0, "ALCATEL-IND1-IPV6-MIB", "alaIPv6HostAddress"))
if mibBuilder.loadTexts: alaIPv6HostEntry.setStatus('current')
alaIPv6HostName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 8, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: alaIPv6HostName.setStatus('current')
alaIPv6HostAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 8, 1, 2), Ipv6Address())
if mibBuilder.loadTexts: alaIPv6HostAddress.setStatus('current')
alaIPv6HostRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 8, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6HostRowStatus.setStatus('current')
alaIPv6InterfacePrefixTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 9), )
if mibBuilder.loadTexts: alaIPv6InterfacePrefixTable.setStatus('current')
alaIPv6InterfacePrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 9, 1), ).setIndexNames((0, "IPV6-MIB", "ipv6IfIndex"), (0, "ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfacePrefix"), (0, "ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfacePrefixLength"))
if mibBuilder.loadTexts: alaIPv6InterfacePrefixEntry.setStatus('current')
alaIPv6InterfacePrefixRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 9, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfacePrefixRowStatus.setStatus('current')
alaIPv6InterfacePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 9, 1, 2), Ipv6Address())
if mibBuilder.loadTexts: alaIPv6InterfacePrefix.setStatus('current')
alaIPv6InterfacePrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 9, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)))
if mibBuilder.loadTexts: alaIPv6InterfacePrefixLength.setStatus('current')
alaIPv6InterfacePrefixValidLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 9, 1, 4), Unsigned32().clone(2592000)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfacePrefixValidLifetime.setStatus('current')
alaIPv6InterfacePrefixOnLinkFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 9, 1, 5), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfacePrefixOnLinkFlag.setStatus('current')
alaIPv6InterfacePrefixPreferredLifetime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 9, 1, 6), Unsigned32().clone(604800)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfacePrefixPreferredLifetime.setStatus('current')
alaIPv6InterfacePrefixAutonomousFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 9, 1, 7), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfacePrefixAutonomousFlag.setStatus('current')
alaIPv6InterfacePrefixSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 9, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("dynamic", 2), ("configured", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6InterfacePrefixSource.setStatus('current')
alaIPv6InterfacePrefixValidLifetimeDecrement = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 9, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfacePrefixValidLifetimeDecrement.setStatus('current')
alaIPv6InterfacePrefixValidLifetimeExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 9, 1, 10), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfacePrefixValidLifetimeExpire.setStatus('current')
alaIPv6InterfacePrefixPreferredLifetimeDecrement = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 9, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfacePrefixPreferredLifetimeDecrement.setStatus('current')
alaIPv6InterfacePrefixPreferredLifetimeExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 9, 1, 12), DateAndTime()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6InterfacePrefixPreferredLifetimeExpire.setStatus('current')
alaIPv6PMTUTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 10), )
if mibBuilder.loadTexts: alaIPv6PMTUTable.setStatus('current')
alaIPv6PMTUEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 10, 1), ).setIndexNames((0, "ALCATEL-IND1-IPV6-MIB", "alaIPv6PMTUDest"))
if mibBuilder.loadTexts: alaIPv6PMTUEntry.setStatus('current')
alaIPv6PMTUDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 10, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: alaIPv6PMTUDest.setStatus('current')
alaIPv6PMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 10, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6PMTU.setStatus('current')
alaIPv6PMTUExpire = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 10, 1, 3), Unsigned32()).setUnits('minutes').setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6PMTUExpire.setStatus('current')
alaIPv6PMTUHits = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6PMTUHits.setStatus('current')
alaIPv6PMTUUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6PMTUUpdates.setStatus('current')
alaIPv6RouteFlagsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 11), )
if mibBuilder.loadTexts: alaIPv6RouteFlagsTable.setStatus('current')
alaIPv6RouteFlagsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 11, 1), )
ipv6RouteEntry.registerAugmentions(("ALCATEL-IND1-IPV6-MIB", "alaIPv6RouteFlagsEntry"))
alaIPv6RouteFlagsEntry.setIndexNames(*ipv6RouteEntry.getIndexNames())
if mibBuilder.loadTexts: alaIPv6RouteFlagsEntry.setStatus('current')
alaIPv6RouteFlagsUp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 11, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6RouteFlagsUp.setStatus('current')
alaIPv6RouteFlagsGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 11, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6RouteFlagsGateway.setStatus('current')
alaIPv6RouteFlagsHost = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 11, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6RouteFlagsHost.setStatus('current')
alaIPv6RouteFlagsStatic = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 11, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6RouteFlagsStatic.setStatus('current')
alaIPv6RouteFlagsCloneable = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 11, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6RouteFlagsCloneable.setStatus('current')
alaIPv6RouteFlagsDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 11, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6RouteFlagsDiscard.setStatus('current')
alaIPv6RouteFlagsECMP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 11, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6RouteFlagsECMP.setStatus('current')
alaIPv6RouteFlagsTransient = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 11, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaIPv6RouteFlagsTransient.setStatus('current')
alaIPv6LocalUnicastTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 13), )
if mibBuilder.loadTexts: alaIPv6LocalUnicastTable.setStatus('current')
alaIPv6LocalUnicastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 13, 1), ).setIndexNames((0, "IPV6-MIB", "ipv6IfIndex"), (0, "ALCATEL-IND1-IPV6-MIB", "alaIPv6LocalUnicastGlobalID"), (0, "ALCATEL-IND1-IPV6-MIB", "alaIPv6LocalUnicastSubnetID"), (0, "ALCATEL-IND1-IPV6-MIB", "alaIPv6LocalUnicastInterfaceID"))
if mibBuilder.loadTexts: alaIPv6LocalUnicastEntry.setStatus('current')
alaIPv6LocalUnicastGlobalID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 13, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5))
if mibBuilder.loadTexts: alaIPv6LocalUnicastGlobalID.setStatus('current')
alaIPv6LocalUnicastSubnetID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 13, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2))
if mibBuilder.loadTexts: alaIPv6LocalUnicastSubnetID.setStatus('current')
alaIPv6LocalUnicastInterfaceID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 13, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8))
if mibBuilder.loadTexts: alaIPv6LocalUnicastInterfaceID.setStatus('current')
alaIPv6LocalUnicastPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 13, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 128)).clone(64)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6LocalUnicastPrefixLength.setStatus('current')
alaIPv6LocalUnicastEUI64 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 13, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6LocalUnicastEUI64.setStatus('current')
alaIPv6LocalUnicastRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 13, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6LocalUnicastRowStatus.setStatus('current')
alaIPv6RAFilterTrustedPortTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 15), )
if mibBuilder.loadTexts: alaIPv6RAFilterTrustedPortTable.setStatus('deprecated')
alaIPv6RAFilterTrustedPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 15, 1), ).setIndexNames((0, "IPV6-MIB", "ipv6IfIndex"), (0, "ALCATEL-IND1-IPV6-MIB", "alaIPv6RAFilterTrustedPortIfIndex"))
if mibBuilder.loadTexts: alaIPv6RAFilterTrustedPortEntry.setStatus('deprecated')
alaIPv6RAFilterTrustedPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 15, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaIPv6RAFilterTrustedPortIfIndex.setStatus('deprecated')
alaIPv6RAFilterTrustedPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 15, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6RAFilterTrustedPortRowStatus.setStatus('deprecated')
alaIPv6RAFilterInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 16), )
if mibBuilder.loadTexts: alaIPv6RAFilterInterfaceTable.setStatus('current')
alaIPv6RAFilterInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 16, 1), ).setIndexNames((0, "ALCATEL-IND1-IPV6-MIB", "alaIPv6RAFilterInterfaceVlan"))
if mibBuilder.loadTexts: alaIPv6RAFilterInterfaceEntry.setStatus('current')
alaIPv6RAFilterInterfaceVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 16, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaIPv6RAFilterInterfaceVlan.setStatus('current')
alaIPv6RAFilterInterfaceAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6RAFilterInterfaceAdminStatus.setStatus('current')
alaIPv6RAFilterInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 16, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6RAFilterInterfaceRowStatus.setStatus('current')
alaIPv6RAFilterTrustedSourceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 17), )
if mibBuilder.loadTexts: alaIPv6RAFilterTrustedSourceTable.setStatus('current')
alaIPv6RAFilterTrustedSourceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 17, 1), ).setIndexNames((0, "ALCATEL-IND1-IPV6-MIB", "alaIPv6RAFilterInterfaceVlan"), (0, "ALCATEL-IND1-IPV6-MIB", "alaIPv6RAFilterTrustedSourceType"), (0, "ALCATEL-IND1-IPV6-MIB", "alaIPv6RAFilterTrustedSourceValue"))
if mibBuilder.loadTexts: alaIPv6RAFilterTrustedSourceEntry.setStatus('current')
alaIPv6RAFilterTrustedSourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 17, 1, 1), AlaIPv6RAFilterTrustedSourceType())
if mibBuilder.loadTexts: alaIPv6RAFilterTrustedSourceType.setStatus('current')
alaIPv6RAFilterTrustedSourceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 17, 1, 2), AlaIPv6RAFilterTrustedSourceValue())
if mibBuilder.loadTexts: alaIPv6RAFilterTrustedSourceValue.setStatus('current')
alaIPv6RAFilterTrustedSourceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 1, 17, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaIPv6RAFilterTrustedSourceRowStatus.setStatus('current')
ndpMaxLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 0, 1))
if mibBuilder.loadTexts: ndpMaxLimitReached.setStatus('deprecated')
alaIPv6NeighborLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 0, 2)).setObjects(("ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborLimit"))
if mibBuilder.loadTexts: alaIPv6NeighborLimitExceeded.setStatus('current')
alaIPv6NeighborVRFLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 0, 3)).setObjects(("ALCATEL-IND1-VIRTUALROUTER-MIB", "alaVirtualRouterName"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborVRFLimit"))
if mibBuilder.loadTexts: alaIPv6NeighborVRFLimitExceeded.setStatus('current')
alaIPv6InterfaceNeighborLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 0, 4)).setObjects(("IPV6-MIB", "ipv6IfIndex"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceNeighborLimit"))
if mibBuilder.loadTexts: alaIPv6InterfaceNeighborLimitExceeded.setStatus('current')
alcatelIND1IPv6MIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2))
alcatelIND1IPv6MIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2, 1))
alcatelIND1IPv6MIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2, 2))
alaIPv6Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-IPV6-MIB", "alaIPv6TunnelConfigGroup"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6ConfigGroup"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborGroup"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceGroup"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceAddressGroup"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceEUI64AddressGroup"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfacePrefixGroup"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6PMTUGroup"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6RouteFlagsGroup"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6LocalUnicastGroup"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6RAFilterGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIPv6Compliance = alaIPv6Compliance.setStatus('current')
alaIPv6TunnelConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-IPV6-MIB", "alaIPv6ConfigTunnelV4Source"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6ConfigTunnelV4Dest"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIPv6TunnelConfigGroup = alaIPv6TunnelConfigGroup.setStatus('current')
alaIPv6ConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2, 2, 2)).setObjects(("ALCATEL-IND1-IPV6-MIB", "alaIPv6ClearNeighbors"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6ClearTraffic"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6ClearPMTUTable"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6PMTUMinLifetime"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborStaleLifetime"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6GlobalID"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6VirtualSourceMAC"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborLimit"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborVRFLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIPv6ConfigGroup = alaIPv6ConfigGroup.setStatus('current')
alaIPv6NeighborGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2, 2, 3)).setObjects(("ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborPhysAddress"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborType"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborLastUpdated"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborRowStatus"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborLifetime"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborReachability"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborPortIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIPv6NeighborGroup = alaIPv6NeighborGroup.setStatus('current')
alaIPv6StaticRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2, 2, 4)).setObjects(("ALCATEL-IND1-IPV6-MIB", "alaIPv6StaticRouteIfIndex"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6StaticRouteNextHop"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6StaticRouteMetric"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6StaticRouteRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIPv6StaticRouteGroup = alaIPv6StaticRouteGroup.setStatus('obsolete')
alaIPv6InterfaceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2, 2, 5)).setObjects(("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceRowStatus"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceDescription"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceMtu"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceType"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceAdminStatus"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceSendRouterAdvertisements"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceMaxRtrAdvInterval"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceAdvManagedFlag"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceAdvOtherConfigFlag"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceAdvReachableTime"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceAdvRetransTimer"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceAdvDefaultLifetime"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceName"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceAdvSendMtu"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceReachableTime"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceBaseReachableTime"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceMinRtrAdvInterval"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceClockSkew"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceRetransTimer"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceDADTransmits"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceAdvHopLimit"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceLPND"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceNeighborLimit"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceRetransBackoff"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceRetransMax"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceRouterPreference"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIPv6InterfaceGroup = alaIPv6InterfaceGroup.setStatus('current')
alaIPv6InterfaceAddressGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2, 2, 6)).setObjects(("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceAddressRowStatus"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceAddressPrefixLength"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceAddressAnycastFlag"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceAddressDADStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIPv6InterfaceAddressGroup = alaIPv6InterfaceAddressGroup.setStatus('current')
alaIPv6InterfaceEUI64AddressGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2, 2, 7)).setObjects(("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceEUI64AddressRowStatus"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceEUI64AddressPrefixLength"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceEUI64AddressIdentifier"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIPv6InterfaceEUI64AddressGroup = alaIPv6InterfaceEUI64AddressGroup.setStatus('current')
alaIPv6InterfacePrefixGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2, 2, 8)).setObjects(("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfacePrefixRowStatus"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfacePrefixValidLifetime"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfacePrefixOnLinkFlag"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfacePrefixPreferredLifetime"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfacePrefixAutonomousFlag"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfacePrefixSource"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfacePrefixValidLifetimeDecrement"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfacePrefixValidLifetimeExpire"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfacePrefixPreferredLifetimeDecrement"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfacePrefixPreferredLifetimeExpire"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIPv6InterfacePrefixGroup = alaIPv6InterfacePrefixGroup.setStatus('current')
alaIPv6PMTUGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2, 2, 9)).setObjects(("ALCATEL-IND1-IPV6-MIB", "alaIPv6PMTU"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6PMTUExpire"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6PMTUHits"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6PMTUUpdates"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIPv6PMTUGroup = alaIPv6PMTUGroup.setStatus('current')
alaIPv6RouteFlagsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2, 2, 10)).setObjects(("ALCATEL-IND1-IPV6-MIB", "alaIPv6RouteFlagsUp"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6RouteFlagsGateway"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6RouteFlagsHost"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6RouteFlagsStatic"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6RouteFlagsCloneable"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6RouteFlagsDiscard"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6RouteFlagsECMP"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6RouteFlagsTransient"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIPv6RouteFlagsGroup = alaIPv6RouteFlagsGroup.setStatus('current')
alaIPv6LocalUnicastGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2, 2, 11)).setObjects(("ALCATEL-IND1-IPV6-MIB", "alaIPv6LocalUnicastPrefixLength"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6LocalUnicastEUI64"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6LocalUnicastRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIPv6LocalUnicastGroup = alaIPv6LocalUnicastGroup.setStatus('current')
alaIPv6HostGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2, 2, 12)).setObjects(("ALCATEL-IND1-IPV6-MIB", "alaIPv6HostRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIPv6HostGroup = alaIPv6HostGroup.setStatus('current')
alcatelIND1IPv6NotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2, 2, 13)).setObjects(("ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborLimitExceeded"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborVRFLimitExceeded"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceNeighborLimitExceeded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IPv6NotificationGroup = alcatelIND1IPv6NotificationGroup.setStatus('current')
alcatelIND1IPv6DeprecatedObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2, 2, 14)).setObjects(("ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborSlot"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborPort"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborState"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6NeighborChassis"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6InterfaceRAFilter"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6RAFilterTrustedPortRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IPv6DeprecatedObjectGroup = alcatelIND1IPv6DeprecatedObjectGroup.setStatus('current')
alcatelIND1IPv6DeprecatedNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2, 2, 15)).setObjects(("ALCATEL-IND1-IPV6-MIB", "ndpMaxLimitReached"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1IPv6DeprecatedNotificationGroup = alcatelIND1IPv6DeprecatedNotificationGroup.setStatus('current')
alaIPv6RAFilterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 1, 2, 2, 16)).setObjects(("ALCATEL-IND1-IPV6-MIB", "alaIPv6RAFilterInterfaceAdminStatus"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6RAFilterInterfaceRowStatus"), ("ALCATEL-IND1-IPV6-MIB", "alaIPv6RAFilterTrustedSourceRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIPv6RAFilterGroup = alaIPv6RAFilterGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-IPV6-MIB", alaIPv6InterfaceAddressTable=alaIPv6InterfaceAddressTable, alcatelIND1IPv6MIBCompliances=alcatelIND1IPv6MIBCompliances, AlaIPv6RAFilterTrustedSourceIfIndex=AlaIPv6RAFilterTrustedSourceIfIndex, alaIPv6InterfacePrefixGroup=alaIPv6InterfacePrefixGroup, alaIPv6RAFilterInterfaceEntry=alaIPv6RAFilterInterfaceEntry, alaIPv6RAFilterTrustedPortEntry=alaIPv6RAFilterTrustedPortEntry, alaIPv6PMTUUpdates=alaIPv6PMTUUpdates, alaIPv6LocalUnicastPrefixLength=alaIPv6LocalUnicastPrefixLength, alaIPv6InterfaceAddressAnycastFlag=alaIPv6InterfaceAddressAnycastFlag, alaIPv6InterfaceAdvManagedFlag=alaIPv6InterfaceAdvManagedFlag, alaIPv6RouteFlagsEntry=alaIPv6RouteFlagsEntry, alaIPv6InterfaceAdvReachableTime=alaIPv6InterfaceAdvReachableTime, alaIPv6RAFilterInterfaceVlan=alaIPv6RAFilterInterfaceVlan, alaIPv6NeighborState=alaIPv6NeighborState, alaIPv6StaticRouteDest=alaIPv6StaticRouteDest, alaIPv6LocalUnicastInterfaceID=alaIPv6LocalUnicastInterfaceID, alaIPv6InterfaceAdvOtherConfigFlag=alaIPv6InterfaceAdvOtherConfigFlag, alaIPv6RouteFlagsDiscard=alaIPv6RouteFlagsDiscard, alaIPv6InterfacePrefixValidLifetimeDecrement=alaIPv6InterfacePrefixValidLifetimeDecrement, alaIPv6ClearTraffic=alaIPv6ClearTraffic, alcatelIND1IPv6MIBConformance=alcatelIND1IPv6MIBConformance, alaIPv6NeighborStaleLifetime=alaIPv6NeighborStaleLifetime, alaIPv6InterfaceAddressPrefixLength=alaIPv6InterfaceAddressPrefixLength, alaIPv6NeighborChassis=alaIPv6NeighborChassis, alaIPv6LocalUnicastGroup=alaIPv6LocalUnicastGroup, ndpMaxLimitReached=ndpMaxLimitReached, alaIPv6InterfaceRAFilter=alaIPv6InterfaceRAFilter, alaIPv6RouteFlagsStatic=alaIPv6RouteFlagsStatic, alaIPv6InterfaceClockSkew=alaIPv6InterfaceClockSkew, alaIPv6HostTable=alaIPv6HostTable, alaIPv6NeighborType=alaIPv6NeighborType, alaIPv6PMTUExpire=alaIPv6PMTUExpire, alaIPv6PMTU=alaIPv6PMTU, PYSNMP_MODULE_ID=alcatelIND1IPv6MIB, alaIPv6InterfacePrefixPreferredLifetimeDecrement=alaIPv6InterfacePrefixPreferredLifetimeDecrement, alaIPv6InterfaceReachableTime=alaIPv6InterfaceReachableTime, alaIPv6InterfacePrefixOnLinkFlag=alaIPv6InterfacePrefixOnLinkFlag, alaIPv6InterfacePrefixSource=alaIPv6InterfacePrefixSource, alaIPv6InterfaceAddress=alaIPv6InterfaceAddress, alcatelIND1IPv6MIBObjects=alcatelIND1IPv6MIBObjects, alaIPv6RAFilterTrustedSourceEntry=alaIPv6RAFilterTrustedSourceEntry, alaIPv6PMTUTable=alaIPv6PMTUTable, alaIPv6PMTUEntry=alaIPv6PMTUEntry, alaIPv6Compliance=alaIPv6Compliance, alaIPv6ConfigTunnelEntry=alaIPv6ConfigTunnelEntry, alaIPv6RAFilterTrustedSourceTable=alaIPv6RAFilterTrustedSourceTable, alaIPv6NeighborVRFLimit=alaIPv6NeighborVRFLimit, alaIPv6RouteFlagsCloneable=alaIPv6RouteFlagsCloneable, alaIPv6StaticRouteGroup=alaIPv6StaticRouteGroup, alaIPv6PMTUDest=alaIPv6PMTUDest, alaIPv6InterfacePrefix=alaIPv6InterfacePrefix, alaIPv6InterfaceEUI64AddressIdentifier=alaIPv6InterfaceEUI64AddressIdentifier, alaIPv6RAFilterTrustedPortRowStatus=alaIPv6RAFilterTrustedPortRowStatus, alaIPv6InterfaceAdvSendMtu=alaIPv6InterfaceAdvSendMtu, alaIPv6NeighborLastUpdated=alaIPv6NeighborLastUpdated, alaIPv6InterfaceAddressRowStatus=alaIPv6InterfaceAddressRowStatus, alaIPv6NeighborNetAddress=alaIPv6NeighborNetAddress, alaIPv6InterfaceAdvRetransTimer=alaIPv6InterfaceAdvRetransTimer, alaIPv6NeighborGroup=alaIPv6NeighborGroup, alaIPv6RouteFlagsECMP=alaIPv6RouteFlagsECMP, alaIPv6InterfaceEUI64AddressPrefix=alaIPv6InterfaceEUI64AddressPrefix, alaIPv6InterfaceAddressEntry=alaIPv6InterfaceAddressEntry, alaIPv6NeighborPort=alaIPv6NeighborPort, alaIPv6TunnelConfig=alaIPv6TunnelConfig, alaIPv6InterfaceRowStatus=alaIPv6InterfaceRowStatus, alaIPv6PMTUMinLifetime=alaIPv6PMTUMinLifetime, alaIPv6InterfaceEUI64AddressGroup=alaIPv6InterfaceEUI64AddressGroup, alaIPv6InterfacePrefixLength=alaIPv6InterfacePrefixLength, alaIPv6InterfacePrefixValidLifetime=alaIPv6InterfacePrefixValidLifetime, alaIPv6InterfaceEUI64AddressTable=alaIPv6InterfaceEUI64AddressTable, alcatelIND1IPv6DeprecatedNotificationGroup=alcatelIND1IPv6DeprecatedNotificationGroup, alaIPv6StaticRouteNextHop=alaIPv6StaticRouteNextHop, alcatelIND1IPv6MIBGroups=alcatelIND1IPv6MIBGroups, alaIPv6InterfacePrefixPreferredLifetimeExpire=alaIPv6InterfacePrefixPreferredLifetimeExpire, alaIPv6RAFilterGroup=alaIPv6RAFilterGroup, alaIPv6ClearNeighbors=alaIPv6ClearNeighbors, alaIPv6ConfigTunnelV4Source=alaIPv6ConfigTunnelV4Source, alaIPv6StaticRouteEntry=alaIPv6StaticRouteEntry, alaIPv6RAFilterTrustedSourceValue=alaIPv6RAFilterTrustedSourceValue, alaIPv6InterfaceAdvDefaultLifetime=alaIPv6InterfaceAdvDefaultLifetime, alcatelIND1IPv6DeprecatedObjectGroup=alcatelIND1IPv6DeprecatedObjectGroup, alaIPv6NeighborEntry=alaIPv6NeighborEntry, alaIPv6RAFilterTrustedSourceRowStatus=alaIPv6RAFilterTrustedSourceRowStatus, alaIPv6InterfacePrefixValidLifetimeExpire=alaIPv6InterfacePrefixValidLifetimeExpire, alaIPv6InterfaceLPND=alaIPv6InterfaceLPND, alaIPv6RouteFlagsHost=alaIPv6RouteFlagsHost, alaIPv6InterfaceDADTransmits=alaIPv6InterfaceDADTransmits, alaIPv6InterfaceDescription=alaIPv6InterfaceDescription, alaIPv6InterfaceMaxRtrAdvInterval=alaIPv6InterfaceMaxRtrAdvInterval, alaIPv6VirtualSourceMAC=alaIPv6VirtualSourceMAC, alaIPv6InterfaceAddressDADStatus=alaIPv6InterfaceAddressDADStatus, alaIPv6InterfaceEntry=alaIPv6InterfaceEntry, alaIPv6NeighborTable=alaIPv6NeighborTable, alcatelIND1IPv6MIBNotifications=alcatelIND1IPv6MIBNotifications, alaIPv6StaticRouteTable=alaIPv6StaticRouteTable, alaIPv6InterfaceEUI64AddressRowStatus=alaIPv6InterfaceEUI64AddressRowStatus, alaIPv6InterfaceSendRouterAdvertisements=alaIPv6InterfaceSendRouterAdvertisements, alaIPv6InterfaceRetransBackoff=alaIPv6InterfaceRetransBackoff, AlaIPv6AddressPrefix=AlaIPv6AddressPrefix, AlaIPv6RAFilterTrustedSourceValue=AlaIPv6RAFilterTrustedSourceValue, alaIPv6InterfaceNeighborLimitExceeded=alaIPv6InterfaceNeighborLimitExceeded, alaIPv6HostEntry=alaIPv6HostEntry, alaIPv6InterfaceEUI64AddressEntry=alaIPv6InterfaceEUI64AddressEntry, alaIPv6LocalUnicastEntry=alaIPv6LocalUnicastEntry, alaIPv6StaticRouteMetric=alaIPv6StaticRouteMetric, alaIPv6NeighborVRFLimitExceeded=alaIPv6NeighborVRFLimitExceeded, alaIPv6NeighborLimitExceeded=alaIPv6NeighborLimitExceeded, alaIPv6RouteFlagsTransient=alaIPv6RouteFlagsTransient, alaIPv6InterfaceGroup=alaIPv6InterfaceGroup, alaIPv6TunnelConfigGroup=alaIPv6TunnelConfigGroup, alaIPv6RouteFlagsGateway=alaIPv6RouteFlagsGateway, alaIPv6ConfigGroup=alaIPv6ConfigGroup, alaIPv6NeighborLimit=alaIPv6NeighborLimit, alaIPv6InterfaceName=alaIPv6InterfaceName, alaIPv6Config=alaIPv6Config, alaIPv6NeighborReachability=alaIPv6NeighborReachability, alaIPv6PMTUHits=alaIPv6PMTUHits, alaIPv6GlobalID=alaIPv6GlobalID, alaIPv6InterfaceAdvHopLimit=alaIPv6InterfaceAdvHopLimit, alaIPv6NeighborPortIfIndex=alaIPv6NeighborPortIfIndex, alaIPv6RouteFlagsTable=alaIPv6RouteFlagsTable, alaIPv6InterfacePrefixPreferredLifetime=alaIPv6InterfacePrefixPreferredLifetime, alaIPv6PMTUGroup=alaIPv6PMTUGroup, alaIPv6RAFilterTrustedPortTable=alaIPv6RAFilterTrustedPortTable, alaIPv6InterfacePrefixTable=alaIPv6InterfacePrefixTable, alaIPv6LocalUnicastTable=alaIPv6LocalUnicastTable, alaIPv6LocalUnicastRowStatus=alaIPv6LocalUnicastRowStatus, alcatelIND1IPv6MIB=alcatelIND1IPv6MIB, alaIPv6InterfacePrefixAutonomousFlag=alaIPv6InterfacePrefixAutonomousFlag, alaIPv6ConfigTunnelV4Dest=alaIPv6ConfigTunnelV4Dest, alaIPv6RouteFlagsUp=alaIPv6RouteFlagsUp, alaIPv6RAFilterTrustedSourceType=alaIPv6RAFilterTrustedSourceType, alaIPv6InterfaceBaseReachableTime=alaIPv6InterfaceBaseReachableTime, alaIPv6InterfacePrefixRowStatus=alaIPv6InterfacePrefixRowStatus, alaIPv6RouteFlagsGroup=alaIPv6RouteFlagsGroup, alaIPv6ClearPMTUTable=alaIPv6ClearPMTUTable, AlaIPv6RAFilterTrustedSourceType=AlaIPv6RAFilterTrustedSourceType, alaIPv6StaticRouteRowStatus=alaIPv6StaticRouteRowStatus, alaIPv6LocalUnicastEUI64=alaIPv6LocalUnicastEUI64, alaIPv6HostRowStatus=alaIPv6HostRowStatus, alaIPv6RAFilterInterfaceRowStatus=alaIPv6RAFilterInterfaceRowStatus, alaIPv6InterfaceMinRtrAdvInterval=alaIPv6InterfaceMinRtrAdvInterval, alaIPv6LocalUnicastGlobalID=alaIPv6LocalUnicastGlobalID, alaIPv6InterfaceRouterPreference=alaIPv6InterfaceRouterPreference, alaIPv6StaticRouteIfIndex=alaIPv6StaticRouteIfIndex, alaIPv6HostGroup=alaIPv6HostGroup, alaIPv6InterfaceType=alaIPv6InterfaceType, alcatelIND1IPv6NotificationGroup=alcatelIND1IPv6NotificationGroup, alaIPv6InterfaceEUI64AddressPrefixLength=alaIPv6InterfaceEUI64AddressPrefixLength, alaIPv6InterfaceAddressGroup=alaIPv6InterfaceAddressGroup, alaIPv6ConfigTunnelTable=alaIPv6ConfigTunnelTable, alaIPv6RAFilterInterfaceAdminStatus=alaIPv6RAFilterInterfaceAdminStatus, alaIPv6RAFilterInterfaceTable=alaIPv6RAFilterInterfaceTable, alaIPv6NeighborLifetime=alaIPv6NeighborLifetime, alaIPv6LocalUnicastSubnetID=alaIPv6LocalUnicastSubnetID, alaIPv6StaticRoutePfxLength=alaIPv6StaticRoutePfxLength, alaIPv6InterfaceTable=alaIPv6InterfaceTable, alaIPv6NeighborRowStatus=alaIPv6NeighborRowStatus, alaIPv6InterfacePrefixEntry=alaIPv6InterfacePrefixEntry, alaIPv6InterfaceNeighborLimit=alaIPv6InterfaceNeighborLimit, alaIPv6InterfaceMtu=alaIPv6InterfaceMtu, alaIPv6InterfaceRetransTimer=alaIPv6InterfaceRetransTimer, alaIPv6RAFilterTrustedPortIfIndex=alaIPv6RAFilterTrustedPortIfIndex, alaIPv6InterfaceAdminStatus=alaIPv6InterfaceAdminStatus, alaIPv6NeighborPhysAddress=alaIPv6NeighborPhysAddress, alaIPv6InterfaceRetransMax=alaIPv6InterfaceRetransMax, alaIPv6NeighborSlot=alaIPv6NeighborSlot, alaIPv6HostName=alaIPv6HostName, alaIPv6HostAddress=alaIPv6HostAddress)
