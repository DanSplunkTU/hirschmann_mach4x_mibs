#
# PySNMP MIB module PRVT-SAA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-SAA-MIB
# Produced by pysmi-1.1.3 at Wed Dec  8 18:22:09 2021
# On host fv-az121-73 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
switch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "switch")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits, Counter64, IpAddress, Gauge32, NotificationType, Counter32, Integer32, Unsigned32, iso, ObjectIdentity, TimeTicks, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits", "Counter64", "IpAddress", "Gauge32", "NotificationType", "Counter32", "Integer32", "Unsigned32", "iso", "ObjectIdentity", "TimeTicks", "MibIdentifier")
TextualConvention, DisplayString, RowStatus, MacAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "MacAddress", "TruthValue")
prvtSaaMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 5, 130))
prvtSaaMIB.setRevisions(('2014-05-16 00:00', '2014-01-23 00:00', '2013-11-18 00:00', '2013-03-27 00:00', '2013-01-23 00:00', '2010-05-27 00:00',))
if mibBuilder.loadTexts: prvtSaaMIB.setLastUpdated('201405160000Z')
if mibBuilder.loadTexts: prvtSaaMIB.setOrganization('BATM Advanced Communication')
class PrvtSaaNameType(TextualConvention, OctetString):
    status = 'current'
    displayHint = '32a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 32)

prvtSaaNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0))
prvtSaaObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1))
prvtSaaProfiles = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1))
prvtSaaProfileTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1), )
if mibBuilder.loadTexts: prvtSaaProfileTable.setStatus('current')
prvtSaaProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1, 1), ).setIndexNames((0, "PRVT-SAA-MIB", "prvtSaaProfileName"))
if mibBuilder.loadTexts: prvtSaaProfileEntry.setStatus('current')
prvtSaaProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1, 1, 1), PrvtSaaNameType())
if mibBuilder.loadTexts: prvtSaaProfileName.setStatus('current')
prvtSaaProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaProfileRowStatus.setStatus('current')
prvtSaaProfileType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("y1731", 1), ("rfc2544", 2), ("y1564", 3), ("y1731slm", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaProfileType.setStatus('current')
prvtSaaProfileY1731DelayNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaProfileY1731DelayNearEnd.setStatus('current')
prvtSaaProfileY1731DelayFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaProfileY1731DelayFarEnd.setStatus('current')
prvtSaaProfileY1731JitterNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaProfileY1731JitterNearEnd.setStatus('current')
prvtSaaProfileY1731JitterFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaProfileY1731JitterFarEnd.setStatus('current')
prvtSaaProfileY1731FrameLossNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaProfileY1731FrameLossNearEnd.setStatus('current')
prvtSaaProfileY1731FrameLossFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaProfileY1731FrameLossFarEnd.setStatus('current')
prvtSaaProfileRfc2544FrameLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaProfileRfc2544FrameLoss.setStatus('current')
prvtSaaProfileY1564FrameLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaProfileY1564FrameLoss.setStatus('current')
prvtSaaProfileY1564FrameDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaProfileY1564FrameDelay.setStatus('current')
prvtSaaProfileY1731SlmDelayNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaProfileY1731SlmDelayNearEnd.setStatus('current')
prvtSaaProfileY1731SlmDelayFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaProfileY1731SlmDelayFarEnd.setStatus('current')
prvtSaaProfileY1731SlmJitterNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaProfileY1731SlmJitterNearEnd.setStatus('current')
prvtSaaProfileY1731SlmJitterFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaProfileY1731SlmJitterFarEnd.setStatus('current')
prvtSaaProfileY1731SlmFrameLossNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaProfileY1731SlmFrameLossNearEnd.setStatus('current')
prvtSaaProfileY1731SlmFrameLossFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 1, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaProfileY1731SlmFrameLossFarEnd.setStatus('current')
prvtSaaTest = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2))
prvtSaaTestTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1), )
if mibBuilder.loadTexts: prvtSaaTestTable.setStatus('current')
prvtSaaTestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1), ).setIndexNames((0, "PRVT-SAA-MIB", "prvtSaaTestName"), (0, "PRVT-SAA-MIB", "prvtSaaTestOwner"))
if mibBuilder.loadTexts: prvtSaaTestEntry.setStatus('current')
prvtSaaTestName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 1), PrvtSaaNameType())
if mibBuilder.loadTexts: prvtSaaTestName.setStatus('current')
prvtSaaTestOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 2), PrvtSaaNameType())
if mibBuilder.loadTexts: prvtSaaTestOwner.setStatus('current')
prvtSaaTestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRowStatus.setStatus('current')
prvtSaaTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("y1731", 1), ("rfc2544", 2), ("y1564", 3), ("y1731slm", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestType.setStatus('current')
prvtSaaTestProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 5), PrvtSaaNameType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestProfile.setStatus('current')
prvtSaaTestEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 6), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestEnable.setStatus('current')
prvtSaaTestStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("na", 0), ("pending", 1), ("started", 2), ("running", 3), ("finished", 4), ("stopped", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestStatus.setStatus('current')
prvtSaaTestY1731Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("test", 1), ("loopback", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731Mode.setStatus('current')
prvtSaaTestY1731Domain = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 22))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731Domain.setStatus('current')
prvtSaaTestY1731MA = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 22))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731MA.setStatus('current')
prvtSaaTestY1731Mep = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731Mep.setStatus('current')
prvtSaaTestY1731TargetType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mac", 1), ("mep", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731TargetType.setStatus('current')
prvtSaaTestY1731TargetMac = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 14), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731TargetMac.setStatus('current')
prvtSaaTestY1731TargetMep = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731TargetMep.setStatus('current')
prvtSaaTestY1731Priority = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731Priority.setStatus('current')
prvtSaaTestY1731Frequency = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731Frequency.setStatus('current')
prvtSaaTestY1731Interval = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 3600))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731Interval.setStatus('current')
prvtSaaTestY1731Period = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 10000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731Period.setStatus('current')
prvtSaaTestY1731Timeout = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731Timeout.setStatus('current')
prvtSaaTestY1731Function = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("lossMeasurement", 1), ("delayMeasurement", 2), ("both", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731Function.setStatus('current')
prvtSaaTestY1731DelayMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("average", 1), ("pPercentile", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731DelayMethod.setStatus('current')
prvtSaaTestY1731DelayPValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731DelayPValue.setStatus('current')
prvtSaaTestY1731JitterMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("peakToPeak", 1), ("variance", 2), ("pPercentile", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731JitterMethod.setStatus('current')
prvtSaaTestY1731JitterPValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731JitterPValue.setStatus('current')
prvtSaaTestY1731History = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731History.setStatus('current')
prvtSaaTestRfc2544Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("uniTestHead", 1), ("biTestHead", 2), ("uniTestTail", 3), ("biTestLoopback", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544Mode.setStatus('current')
prvtSaaTestRfc2544Domain = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 29), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 22))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544Domain.setStatus('current')
prvtSaaTestRfc2544MA = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 30), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 22))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544MA.setStatus('current')
prvtSaaTestRfc2544Mep = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544Mep.setStatus('current')
prvtSaaTestRfc2544TargetType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mac", 1), ("mep", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544TargetType.setStatus('current')
prvtSaaTestRfc2544TargetMac = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 33), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544TargetMac.setStatus('current')
prvtSaaTestRfc2544TargetMep = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 34), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544TargetMep.setStatus('current')
prvtSaaTestRfc2544Cir = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 35), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 10000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544Cir.setStatus('current')
prvtSaaTestRfc2544Cbs = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 36), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 2048))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544Cbs.setStatus('current')
prvtSaaTestRfc2544BurstPercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 37), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544BurstPercentage.setStatus('current')
prvtSaaTestRfc2544Duration = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 38), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 180))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544Duration.setStatus('current')
prvtSaaTestRfc2544Pattern = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 8))).clone(namedValues=NamedValues(("null", 1), ("nullCrc", 2), ("prbs", 3), ("prbsCrc", 4), ("none", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544Pattern.setStatus('current')
prvtSaaTestRfc2544LoopbackType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("macSwap", 1), ("oam", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544LoopbackType.setStatus('current')
prvtSaaTestRfc2544CVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 41), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544CVlan.setStatus('current')
prvtSaaTestRfc2544CVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 42), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544CVlanPriority.setStatus('current')
prvtSaaTestRfc2544CVlanDropEligible = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 43), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544CVlanDropEligible.setStatus('current')
prvtSaaTestRfc2544SVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 44), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544SVlanPriority.setStatus('current')
prvtSaaTestRfc2544SVlanDropEligible = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 45), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544SVlanDropEligible.setStatus('current')
prvtSaaTestRfc2544Timeout = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 46), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544Timeout.setStatus('current')
prvtSaaTestRfc2544ResultAckTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 47), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestRfc2544ResultAckTimeout.setStatus('current')
prvtSaaTestY1564Mode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("biTestHead", 1), ("biTestLoopback", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564Mode.setStatus('current')
prvtSaaTestY1564Domain = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 49), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 22))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564Domain.setStatus('current')
prvtSaaTestY1564Ma = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 50), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 22))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564Ma.setStatus('current')
prvtSaaTestY1564Mep = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 51), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564Mep.setStatus('current')
prvtSaaTestY1564Function = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("configuration", 1), ("performance", 2), ("both", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564Function.setStatus('current')
prvtSaaTestY1564CVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 53), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564CVlan.setStatus('current')
prvtSaaTestY1564CVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 54), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564CVlanPriority.setStatus('current')
prvtSaaTestY1564CVlanDropEligible = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 55), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564CVlanDropEligible.setStatus('current')
prvtSaaTestY1564SVlanPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 56), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564SVlanPriority.setStatus('current')
prvtSaaTestY1564SVlanDropEligible = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 57), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564SVlanDropEligible.setStatus('current')
prvtSaaTestY1564TargetType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mac", 1), ("mep", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564TargetType.setStatus('current')
prvtSaaTestY1564TargetMac = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 59), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564TargetMac.setStatus('current')
prvtSaaTestY1564TargetMep = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 60), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564TargetMep.setStatus('current')
prvtSaaTestY1564Cir = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 61), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564Cir.setStatus('current')
prvtSaaTestY1564Eir = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 62), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564Eir.setStatus('current')
prvtSaaTestY1564Pattern = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 8))).clone(namedValues=NamedValues(("null", 1), ("nullCrc", 2), ("prbs", 3), ("prbsCrc", 4), ("none", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564Pattern.setStatus('current')
prvtSaaTestY1564ConfigurationStepDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 64), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564ConfigurationStepDuration.setStatus('current')
prvtSaaTestY1564PerformanceTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("duration15min", 1), ("duration30min", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564PerformanceTestDuration.setStatus('current')
prvtSaaTestY1564TrafficPolicing = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 66), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564TrafficPolicing.setStatus('current')
prvtSaaTestY1564CirSteps = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 67), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564CirSteps.setStatus('current')
prvtSaaTestY1564Timeout = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 68), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564Timeout.setStatus('current')
prvtSaaTestY1564LoopbackType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 69), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("macSwap", 1), ("oam", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564LoopbackType.setStatus('current')
prvtSaaTestY1564DataSize = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 70), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564DataSize.setStatus('current')
prvtSaaTestY1564CustomDataSize = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 71), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 9000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1564CustomDataSize.setStatus('current')
prvtSaaTestY1731SlmMode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 72), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("uni-test-head", 1), ("bi-test-head", 2), ("uni-test-tail", 3), ("bi-test-loopback", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmMode.setStatus('current')
prvtSaaTestY1731SlmDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 73), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 22))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmDomain.setStatus('current')
prvtSaaTestY1731SlmMA = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 74), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 22))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmMA.setStatus('current')
prvtSaaTestY1731SlmMep = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 75), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmMep.setStatus('current')
prvtSaaTestY1731SlmTargetType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 76), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mac", 1), ("mep", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmTargetType.setStatus('current')
prvtSaaTestY1731SlmTargetMac = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 77), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmTargetMac.setStatus('current')
prvtSaaTestY1731SlmTargetMep = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 78), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmTargetMep.setStatus('current')
prvtSaaTestY1731SlmPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 79), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmPriority.setStatus('current')
prvtSaaTestY1731SlmInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 80), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 3600))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmInterval.setStatus('current')
prvtSaaTestY1731SlmPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 81), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 10, 100, 1000))).clone(namedValues=NamedValues(("i300Hz", 3), ("i10msec", 10), ("i100msec", 100), ("i1sec", 1000)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmPeriod.setStatus('current')
prvtSaaTestY1731SlmTestId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 82), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmTestId.setStatus('current')
prvtSaaTestY1731SlmPduSize = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 83), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 9000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmPduSize.setStatus('current')
prvtSaaTestY1731SlmDropEligible = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 84), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmDropEligible.setStatus('current')
prvtSaaTestY1731SlmIncludeDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 85), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmIncludeDelay.setStatus('current')
prvtSaaTestY1731SlmHistory = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 86), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 120))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmHistory.setStatus('current')
prvtSaaTestY1731CountAllPriorities = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 1, 1, 87), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestY1731CountAllPriorities.setStatus('current')
prvtSaaTestDataSizeTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 2), )
if mibBuilder.loadTexts: prvtSaaTestDataSizeTable.setStatus('current')
prvtSaaTestDataSizeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 2, 1), ).setIndexNames((0, "PRVT-SAA-MIB", "prvtSaaTestName"), (0, "PRVT-SAA-MIB", "prvtSaaTestOwner"), (0, "PRVT-SAA-MIB", "prvtSaaTestDataSizeIdx"))
if mibBuilder.loadTexts: prvtSaaTestDataSizeEntry.setStatus('current')
prvtSaaTestDataSizeIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096))).clone(namedValues=NamedValues(("i64", 1), ("i128", 2), ("i256", 4), ("i512", 8), ("i1024", 16), ("i1280", 32), ("i1518", 64), ("i1522", 128), ("i1526", 256), ("i1530", 512), ("i1534", 1024), ("i2000", 2048), ("i9000", 4096))))
if mibBuilder.loadTexts: prvtSaaTestDataSizeIdx.setStatus('current')
prvtSaaTestDataSizeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 2, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSaaTestDataSizeRowStatus.setStatus('current')
prvtSaaTestResult = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3))
prvtSaaTestY1731ResultTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 1), )
if mibBuilder.loadTexts: prvtSaaTestY1731ResultTable.setStatus('current')
prvtSaaTestY1731ResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 1, 1), ).setIndexNames((0, "PRVT-SAA-MIB", "prvtSaaTestName"), (0, "PRVT-SAA-MIB", "prvtSaaTestOwner"), (0, "PRVT-SAA-MIB", "prvtSaaTestY1731ResultIndex"))
if mibBuilder.loadTexts: prvtSaaTestY1731ResultEntry.setStatus('current')
prvtSaaTestY1731ResultIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: prvtSaaTestY1731ResultIndex.setStatus('current')
prvtSaaTestY1731ResultMep = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731ResultMep.setStatus('current')
prvtSaaTestY1731ResultDelayNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731ResultDelayNearEnd.setStatus('current')
prvtSaaTestY1731ResultDelayFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731ResultDelayFarEnd.setStatus('current')
prvtSaaTestY1731ResultJitterNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731ResultJitterNearEnd.setStatus('current')
prvtSaaTestY1731ResultJitterFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731ResultJitterFarEnd.setStatus('current')
prvtSaaTestY1731ResultFrameLossNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731ResultFrameLossNearEnd.setStatus('current')
prvtSaaTestY1731ResultFrameLossFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731ResultFrameLossFarEnd.setStatus('current')
prvtSaaTestY1731ResultFramesSentNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731ResultFramesSentNearEnd.setStatus('current')
prvtSaaTestY1731ResultFramesSentFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731ResultFramesSentFarEnd.setStatus('current')
prvtSaaTestY1731ResultFramesReceivedNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731ResultFramesReceivedNearEnd.setStatus('current')
prvtSaaTestY1731ResultFramesReceivedFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731ResultFramesReceivedFarEnd.setStatus('current')
prvtSaaTestY1731ResultFramesPacketSend = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731ResultFramesPacketSend.setStatus('current')
prvtSaaTestY1731ResultTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731ResultTimeouts.setStatus('current')
prvtSaaTestY1731ResultErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731ResultErrors.setStatus('current')
prvtSaaTestY1731ResultCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731ResultCompletionTime.setStatus('current')
prvtSaaTestEpsSwitchover = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 1, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestEpsSwitchover.setStatus('current')
prvtSaaTestRfc2544ResultTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 2), )
if mibBuilder.loadTexts: prvtSaaTestRfc2544ResultTable.setStatus('current')
prvtSaaTestRfc2544ResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 2, 1), ).setIndexNames((0, "PRVT-SAA-MIB", "prvtSaaTestName"), (0, "PRVT-SAA-MIB", "prvtSaaTestOwner"), (0, "PRVT-SAA-MIB", "prvtSaaTestRfc2544ResultIndex"), (0, "PRVT-SAA-MIB", "prvtSaaTestRfc2544ResultPduIndex"))
if mibBuilder.loadTexts: prvtSaaTestRfc2544ResultEntry.setStatus('current')
prvtSaaTestRfc2544ResultIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: prvtSaaTestRfc2544ResultIndex.setStatus('current')
prvtSaaTestRfc2544ResultPduIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 2, 1, 2), Unsigned32())
if mibBuilder.loadTexts: prvtSaaTestRfc2544ResultPduIndex.setStatus('current')
prvtSaaTestRfc2544ResultFrameLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestRfc2544ResultFrameLoss.setStatus('current')
prvtSaaTestRfc2544ResultThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestRfc2544ResultThroughput.setStatus('current')
prvtSaaTestRfc2544ResultNetThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestRfc2544ResultNetThroughput.setStatus('current')
prvtSaaTestRfc2544ResultMinDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestRfc2544ResultMinDelay.setStatus('current')
prvtSaaTestRfc2544ResultMaxDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestRfc2544ResultMaxDelay.setStatus('current')
prvtSaaTestRfc2544ResultAvgDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestRfc2544ResultAvgDelay.setStatus('current')
prvtSaaTestRfc2544ResultStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestRfc2544ResultStatus.setStatus('current')
prvtSaaTestY1564ResultTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 3), )
if mibBuilder.loadTexts: prvtSaaTestY1564ResultTable.setStatus('current')
prvtSaaTestY1564ResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 3, 1), ).setIndexNames((0, "PRVT-SAA-MIB", "prvtSaaTestName"), (0, "PRVT-SAA-MIB", "prvtSaaTestOwner"), (0, "PRVT-SAA-MIB", "prvtSaaTestY1564ResultIndex"), (0, "PRVT-SAA-MIB", "prvtSaaTestY1564ResultStep"), (0, "PRVT-SAA-MIB", "prvtSaaTestY1564ResultPdu"))
if mibBuilder.loadTexts: prvtSaaTestY1564ResultEntry.setStatus('current')
prvtSaaTestY1564ResultIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: prvtSaaTestY1564ResultIndex.setStatus('current')
prvtSaaTestY1564ResultStep = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: prvtSaaTestY1564ResultStep.setStatus('current')
prvtSaaTestY1564ResultPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 3, 1, 3), Unsigned32())
if mibBuilder.loadTexts: prvtSaaTestY1564ResultPdu.setStatus('current')
prvtSaaTestY1564ResultFrameloss = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 3, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1564ResultFrameloss.setStatus('current')
prvtSaaTestY1564ResultThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 3, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1564ResultThroughput.setStatus('current')
prvtSaaTestY1564ResultNetThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 3, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1564ResultNetThroughput.setStatus('current')
prvtSaaTestY1564ResultFrameDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 3, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1564ResultFrameDelay.setStatus('current')
prvtSaaTestY1564ResultStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 3, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1564ResultStatus.setStatus('current')
prvtSaaTestY1731SlmResultTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 4), )
if mibBuilder.loadTexts: prvtSaaTestY1731SlmResultTable.setStatus('current')
prvtSaaTestY1731SlmResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 4, 1), ).setIndexNames((0, "PRVT-SAA-MIB", "prvtSaaTestName"), (0, "PRVT-SAA-MIB", "prvtSaaTestOwner"), (0, "PRVT-SAA-MIB", "prvtSaaTestY1731SlmResultIndex"))
if mibBuilder.loadTexts: prvtSaaTestY1731SlmResultEntry.setStatus('current')
prvtSaaTestY1731SlmResultIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: prvtSaaTestY1731SlmResultIndex.setStatus('current')
prvtSaaTestY1731SlmResultMep = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmResultMep.setStatus('current')
prvtSaaTestY1731SlmResultDelayNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmResultDelayNearEnd.setStatus('current')
prvtSaaTestY1731SlmResultDelayFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmResultDelayFarEnd.setStatus('current')
prvtSaaTestY1731SlmResultJitterNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmResultJitterNearEnd.setStatus('current')
prvtSaaTestY1731SlmResultJitterFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 4, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmResultJitterFarEnd.setStatus('current')
prvtSaaTestY1731SlmResultFrameLossNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 4, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmResultFrameLossNearEnd.setStatus('current')
prvtSaaTestY1731SlmResultFrameLossFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 4, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmResultFrameLossFarEnd.setStatus('current')
prvtSaaTestY1731SlmResultFramesSentNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmResultFramesSentNearEnd.setStatus('current')
prvtSaaTestY1731SlmResultFramesSentFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmResultFramesSentFarEnd.setStatus('current')
prvtSaaTestY1731SlmResultFramesReceivedNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmResultFramesReceivedNearEnd.setStatus('current')
prvtSaaTestY1731SlmResultFramesReceivedFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmResultFramesReceivedFarEnd.setStatus('current')
prvtSaaTestY1731SlmResultCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 4, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmResultCompletionTime.setStatus('current')
prvtSaaY1731SlmTestEpsSwitchover = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 3, 4, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaY1731SlmTestEpsSwitchover.setStatus('current')
prvtSaaY1731NotificationTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 4), )
if mibBuilder.loadTexts: prvtSaaY1731NotificationTable.setStatus('current')
prvtSaaY1731NotificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 4, 1), ).setIndexNames((0, "PRVT-SAA-MIB", "prvtSaaTestName"), (0, "PRVT-SAA-MIB", "prvtSaaTestOwner"), (0, "PRVT-SAA-MIB", "prvtSaaProfileName"), (0, "PRVT-SAA-MIB", "prvtSaaY1731NotificationId"))
if mibBuilder.loadTexts: prvtSaaY1731NotificationEntry.setStatus('current')
prvtSaaY1731NotificationId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: prvtSaaY1731NotificationId.setStatus('current')
prvtSaaY1731NotificationDelayThresholdNE = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 4, 1, 2), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtSaaY1731NotificationDelayThresholdNE.setStatus('current')
prvtSaaY1731NotificationDelayCurrentNE = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 4, 1, 3), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtSaaY1731NotificationDelayCurrentNE.setStatus('current')
prvtSaaY1731NotificationDelayThresholdFE = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 4, 1, 4), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtSaaY1731NotificationDelayThresholdFE.setStatus('current')
prvtSaaY1731NotificationDelayCurrentFE = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 4, 1, 5), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtSaaY1731NotificationDelayCurrentFE.setStatus('current')
prvtSaaY1731NotificationJitterThresholdNE = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 4, 1, 6), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtSaaY1731NotificationJitterThresholdNE.setStatus('current')
prvtSaaY1731NotificationJitterCurrentNE = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 4, 1, 7), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtSaaY1731NotificationJitterCurrentNE.setStatus('current')
prvtSaaY1731NotificationJitterThresholdFE = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 4, 1, 8), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtSaaY1731NotificationJitterThresholdFE.setStatus('current')
prvtSaaY1731NotificationJitterCurrentFE = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 4, 1, 9), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtSaaY1731NotificationJitterCurrentFE.setStatus('current')
prvtSaaY1731NotificationFramelossThresholdNE = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 4, 1, 10), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtSaaY1731NotificationFramelossThresholdNE.setStatus('current')
prvtSaaY1731NotificationFramelossCurrentNE = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 4, 1, 11), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtSaaY1731NotificationFramelossCurrentNE.setStatus('current')
prvtSaaY1731NotificationFramelossThresholdFE = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 4, 1, 12), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtSaaY1731NotificationFramelossThresholdFE.setStatus('current')
prvtSaaY1731NotificationFramelossCurrentFE = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 4, 1, 13), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtSaaY1731NotificationFramelossCurrentFE.setStatus('current')
prvtSaaLastTestResult = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5))
prvtSaaTestY1731LastResultTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 1), )
if mibBuilder.loadTexts: prvtSaaTestY1731LastResultTable.setStatus('current')
prvtSaaTestY1731LastResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 1, 1), ).setIndexNames((0, "PRVT-SAA-MIB", "prvtSaaTestName"), (0, "PRVT-SAA-MIB", "prvtSaaTestOwner"))
if mibBuilder.loadTexts: prvtSaaTestY1731LastResultEntry.setStatus('current')
prvtSaaTestY1731LastResultIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731LastResultIndex.setStatus('current')
prvtSaaTestY1731LastResultMep = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731LastResultMep.setStatus('current')
prvtSaaTestY1731LastResultDelayNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731LastResultDelayNearEnd.setStatus('current')
prvtSaaTestY1731LastResultDelayFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731LastResultDelayFarEnd.setStatus('current')
prvtSaaTestY1731LastResultJitterNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731LastResultJitterNearEnd.setStatus('current')
prvtSaaTestY1731LastResultJitterFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731LastResultJitterFarEnd.setStatus('current')
prvtSaaTestY1731LastResultFrameLossNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731LastResultFrameLossNearEnd.setStatus('current')
prvtSaaTestY1731LastResultFrameLossFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731LastResultFrameLossFarEnd.setStatus('current')
prvtSaaTestY1731LastResultFramesSentNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731LastResultFramesSentNearEnd.setStatus('current')
prvtSaaTestY1731LastResultFramesSentFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731LastResultFramesSentFarEnd.setStatus('current')
prvtSaaTestY1731LastResultFramesReceivedNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731LastResultFramesReceivedNearEnd.setStatus('current')
prvtSaaTestY1731LastResultFramesReceivedFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731LastResultFramesReceivedFarEnd.setStatus('current')
prvtSaaTestY1731LastResultFramesPacketSend = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731LastResultFramesPacketSend.setStatus('current')
prvtSaaTestY1731LastResultTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 1, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731LastResultTimeouts.setStatus('current')
prvtSaaTestY1731LastResultErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 1, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731LastResultErrors.setStatus('current')
prvtSaaTestY1731LastResultCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 1, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731LastResultCompletionTime.setStatus('current')
prvtSaaTestY1731LastResultEpsSwitchover = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 1, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731LastResultEpsSwitchover.setStatus('current')
prvtSaaTestY1731SlmLastResultTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 2), )
if mibBuilder.loadTexts: prvtSaaTestY1731SlmLastResultTable.setStatus('current')
prvtSaaTestY1731SlmLastResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 2, 1), ).setIndexNames((0, "PRVT-SAA-MIB", "prvtSaaTestName"), (0, "PRVT-SAA-MIB", "prvtSaaTestOwner"))
if mibBuilder.loadTexts: prvtSaaTestY1731SlmLastResultEntry.setStatus('current')
prvtSaaTestY1731SlmLastResultIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmLastResultIndex.setStatus('current')
prvtSaaTestY1731SlmLastResultMep = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmLastResultMep.setStatus('current')
prvtSaaTestY1731SlmLastResultDelayNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmLastResultDelayNearEnd.setStatus('current')
prvtSaaTestY1731SlmLastResultDelayFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmLastResultDelayFarEnd.setStatus('current')
prvtSaaTestY1731SlmLastResultJitterNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmLastResultJitterNearEnd.setStatus('current')
prvtSaaTestY1731SlmLastResultJitterFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmLastResultJitterFarEnd.setStatus('current')
prvtSaaTestY1731SlmLastResultFrameLossNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmLastResultFrameLossNearEnd.setStatus('current')
prvtSaaTestY1731SlmLastResultFrameLossFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmLastResultFrameLossFarEnd.setStatus('current')
prvtSaaTestY1731SlmLastResultFramesSentNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmLastResultFramesSentNearEnd.setStatus('current')
prvtSaaTestY1731SlmLastResultFramesSentFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmLastResultFramesSentFarEnd.setStatus('current')
prvtSaaTestY1731SlmLastResultFramesReceivedNearEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmLastResultFramesReceivedNearEnd.setStatus('current')
prvtSaaTestY1731SlmLastResultFramesReceivedFarEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmLastResultFramesReceivedFarEnd.setStatus('current')
prvtSaaTestY1731SlmLastResultCompletionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 2, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmLastResultCompletionTime.setStatus('current')
prvtSaaTestY1731SlmLastResultEpsSwitchover = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 1, 5, 2, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSaaTestY1731SlmLastResultEpsSwitchover.setStatus('current')
prvtSaaRfc2544ProbeFailed = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 1)).setObjects(("PRVT-SAA-MIB", "prvtSaaTestRfc2544ResultStatus"), ("PRVT-SAA-MIB", "prvtSaaTestRfc2544Cir"), ("PRVT-SAA-MIB", "prvtSaaTestRfc2544ResultFrameLoss"))
if mibBuilder.loadTexts: prvtSaaRfc2544ProbeFailed.setStatus('current')
prvtSaaRfc2544ProbeSuccess = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 2)).setObjects(("PRVT-SAA-MIB", "prvtSaaTestRfc2544ResultStatus"), ("PRVT-SAA-MIB", "prvtSaaTestRfc2544Cir"), ("PRVT-SAA-MIB", "prvtSaaTestRfc2544ResultFrameLoss"))
if mibBuilder.loadTexts: prvtSaaRfc2544ProbeSuccess.setStatus('current')
prvtSaaTestRfc2544Finished = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 3)).setObjects(("PRVT-SAA-MIB", "prvtSaaTestRfc2544ResultStatus"))
if mibBuilder.loadTexts: prvtSaaTestRfc2544Finished.setStatus('current')
prvtSaaY1731DelayNearEndThreshold = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 4)).setObjects(("PRVT-SAA-MIB", "prvtSaaTestY1731ResultDelayNearEnd"), ("PRVT-SAA-MIB", "prvtSaaProfileY1731DelayNearEnd"))
if mibBuilder.loadTexts: prvtSaaY1731DelayNearEndThreshold.setStatus('current')
prvtSaaY1731DelayFarEndThreshold = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 5)).setObjects(("PRVT-SAA-MIB", "prvtSaaTestY1731ResultDelayFarEnd"), ("PRVT-SAA-MIB", "prvtSaaProfileY1731DelayFarEnd"))
if mibBuilder.loadTexts: prvtSaaY1731DelayFarEndThreshold.setStatus('current')
prvtSaaY1731JitterNearEndThreshold = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 6)).setObjects(("PRVT-SAA-MIB", "prvtSaaTestY1731ResultJitterNearEnd"), ("PRVT-SAA-MIB", "prvtSaaProfileY1731JitterNearEnd"))
if mibBuilder.loadTexts: prvtSaaY1731JitterNearEndThreshold.setStatus('current')
prvtSaaY1731JitterFarEndThreshold = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 7)).setObjects(("PRVT-SAA-MIB", "prvtSaaTestY1731ResultJitterFarEnd"), ("PRVT-SAA-MIB", "prvtSaaProfileY1731JitterFarEnd"))
if mibBuilder.loadTexts: prvtSaaY1731JitterFarEndThreshold.setStatus('current')
prvtSaaY1731FrLossNearEndThreshold = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 8)).setObjects(("PRVT-SAA-MIB", "prvtSaaTestY1731ResultFrameLossNearEnd"), ("PRVT-SAA-MIB", "prvtSaaProfileY1731FrameLossNearEnd"))
if mibBuilder.loadTexts: prvtSaaY1731FrLossNearEndThreshold.setStatus('current')
prvtSaaY1731FrLossFEThreshold = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 9)).setObjects(("PRVT-SAA-MIB", "prvtSaaTestY1731ResultFrameLossFarEnd"), ("PRVT-SAA-MIB", "prvtSaaProfileY1731FrameLossFarEnd"))
if mibBuilder.loadTexts: prvtSaaY1731FrLossFEThreshold.setStatus('current')
prvtSaaY1564ProbeFailed = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 10)).setObjects(("PRVT-SAA-MIB", "prvtSaaTestY1564ResultStatus"), ("PRVT-SAA-MIB", "prvtSaaTestY1564ResultThroughput"), ("PRVT-SAA-MIB", "prvtSaaTestY1564ResultFrameloss"), ("PRVT-SAA-MIB", "prvtSaaTestY1564ResultFrameDelay"))
if mibBuilder.loadTexts: prvtSaaY1564ProbeFailed.setStatus('current')
prvtSaaY1564ProbeSuccess = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 11)).setObjects(("PRVT-SAA-MIB", "prvtSaaTestY1564ResultStatus"), ("PRVT-SAA-MIB", "prvtSaaTestY1564ResultThroughput"), ("PRVT-SAA-MIB", "prvtSaaTestY1564ResultFrameloss"), ("PRVT-SAA-MIB", "prvtSaaTestY1564ResultFrameDelay"))
if mibBuilder.loadTexts: prvtSaaY1564ProbeSuccess.setStatus('current')
prvtSaaY1564TestFinished = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 12)).setObjects(("PRVT-SAA-MIB", "prvtSaaTestY1564ResultStatus"))
if mibBuilder.loadTexts: prvtSaaY1564TestFinished.setStatus('current')
prvtSaaY1564DelayThreshold = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 13)).setObjects(("PRVT-SAA-MIB", "prvtSaaTestY1564ResultFrameDelay"))
if mibBuilder.loadTexts: prvtSaaY1564DelayThreshold.setStatus('current')
prvtSaaY1564FramelossThreshold = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 14)).setObjects(("PRVT-SAA-MIB", "prvtSaaTestY1564ResultFrameloss"))
if mibBuilder.loadTexts: prvtSaaY1564FramelossThreshold.setStatus('current')
prvtSaaY1731slmDelayNearEndThreshold = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 15)).setObjects(("PRVT-SAA-MIB", "prvtSaaY1731NotificationDelayCurrentNE"), ("PRVT-SAA-MIB", "prvtSaaY1731NotificationDelayThresholdNE"))
if mibBuilder.loadTexts: prvtSaaY1731slmDelayNearEndThreshold.setStatus('current')
prvtSaaY1731slmDelayFarEndThreshold = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 16)).setObjects(("PRVT-SAA-MIB", "prvtSaaY1731NotificationDelayCurrentFE"), ("PRVT-SAA-MIB", "prvtSaaY1731NotificationDelayThresholdFE"))
if mibBuilder.loadTexts: prvtSaaY1731slmDelayFarEndThreshold.setStatus('current')
prvtSaaY1731slmJitterNearEndThreshold = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 17)).setObjects(("PRVT-SAA-MIB", "prvtSaaY1731NotificationJitterCurrentNE"), ("PRVT-SAA-MIB", "prvtSaaY1731NotificationJitterThresholdNE"))
if mibBuilder.loadTexts: prvtSaaY1731slmJitterNearEndThreshold.setStatus('current')
prvtSaaY1731slmJitterFarEndThreshold = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 18)).setObjects(("PRVT-SAA-MIB", "prvtSaaY1731NotificationJitterCurrentFE"), ("PRVT-SAA-MIB", "prvtSaaY1731NotificationJitterThresholdFE"))
if mibBuilder.loadTexts: prvtSaaY1731slmJitterFarEndThreshold.setStatus('current')
prvtSaaY1731slmFramelossNearEndThreshold = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 19)).setObjects(("PRVT-SAA-MIB", "prvtSaaY1731NotificationFramelossCurrentNE"), ("PRVT-SAA-MIB", "prvtSaaY1731NotificationFramelossThresholdNE"))
if mibBuilder.loadTexts: prvtSaaY1731slmFramelossNearEndThreshold.setStatus('current')
prvtSaaY1731slmFramelossFarEndThreshold = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 130, 0, 20)).setObjects(("PRVT-SAA-MIB", "prvtSaaY1731NotificationFramelossCurrentFE"), ("PRVT-SAA-MIB", "prvtSaaY1731NotificationFramelossThresholdFE"))
if mibBuilder.loadTexts: prvtSaaY1731slmFramelossFarEndThreshold.setStatus('current')
mibBuilder.exportSymbols("PRVT-SAA-MIB", prvtSaaProfileY1731SlmJitterFarEnd=prvtSaaProfileY1731SlmJitterFarEnd, prvtSaaProfileEntry=prvtSaaProfileEntry, prvtSaaProfileY1731FrameLossNearEnd=prvtSaaProfileY1731FrameLossNearEnd, prvtSaaTestY1731ResultFrameLossNearEnd=prvtSaaTestY1731ResultFrameLossNearEnd, prvtSaaTestY1731SlmLastResultFrameLossNearEnd=prvtSaaTestY1731SlmLastResultFrameLossNearEnd, prvtSaaTestRfc2544ResultAckTimeout=prvtSaaTestRfc2544ResultAckTimeout, prvtSaaTestY1731SlmLastResultFrameLossFarEnd=prvtSaaTestY1731SlmLastResultFrameLossFarEnd, prvtSaaTestRfc2544ResultEntry=prvtSaaTestRfc2544ResultEntry, prvtSaaTestResult=prvtSaaTestResult, prvtSaaProfileType=prvtSaaProfileType, prvtSaaTestRfc2544ResultMaxDelay=prvtSaaTestRfc2544ResultMaxDelay, prvtSaaY1731NotificationJitterThresholdNE=prvtSaaY1731NotificationJitterThresholdNE, prvtSaaTestY1731SlmDomain=prvtSaaTestY1731SlmDomain, prvtSaaTestY1564TargetMep=prvtSaaTestY1564TargetMep, prvtSaaTestY1731ResultTimeouts=prvtSaaTestY1731ResultTimeouts, prvtSaaTestY1731Timeout=prvtSaaTestY1731Timeout, prvtSaaTestY1564ResultFrameloss=prvtSaaTestY1564ResultFrameloss, prvtSaaTestY1731LastResultJitterFarEnd=prvtSaaTestY1731LastResultJitterFarEnd, prvtSaaProfileY1731DelayFarEnd=prvtSaaProfileY1731DelayFarEnd, prvtSaaTestY1731ResultFramesReceivedFarEnd=prvtSaaTestY1731ResultFramesReceivedFarEnd, prvtSaaProfileY1564FrameDelay=prvtSaaProfileY1564FrameDelay, prvtSaaTestY1731ResultFramesReceivedNearEnd=prvtSaaTestY1731ResultFramesReceivedNearEnd, prvtSaaTestRfc2544ResultAvgDelay=prvtSaaTestRfc2544ResultAvgDelay, prvtSaaTestY1731SlmResultMep=prvtSaaTestY1731SlmResultMep, prvtSaaTestY1731SlmLastResultJitterNearEnd=prvtSaaTestY1731SlmLastResultJitterNearEnd, prvtSaaY1731FrLossNearEndThreshold=prvtSaaY1731FrLossNearEndThreshold, prvtSaaProfileY1564FrameLoss=prvtSaaProfileY1564FrameLoss, prvtSaaTestY1731ResultFramesSentFarEnd=prvtSaaTestY1731ResultFramesSentFarEnd, prvtSaaTestY1564ResultEntry=prvtSaaTestY1564ResultEntry, prvtSaaTestY1731SlmResultFramesSentFarEnd=prvtSaaTestY1731SlmResultFramesSentFarEnd, prvtSaaTestY1731ResultJitterFarEnd=prvtSaaTestY1731ResultJitterFarEnd, prvtSaaTestRfc2544Mep=prvtSaaTestRfc2544Mep, prvtSaaY1731NotificationFramelossThresholdFE=prvtSaaY1731NotificationFramelossThresholdFE, prvtSaaTestY1564TrafficPolicing=prvtSaaTestY1564TrafficPolicing, prvtSaaTestRfc2544Finished=prvtSaaTestRfc2544Finished, prvtSaaTestEntry=prvtSaaTestEntry, prvtSaaTestY1731Frequency=prvtSaaTestY1731Frequency, prvtSaaTestY1564CustomDataSize=prvtSaaTestY1564CustomDataSize, prvtSaaTestRfc2544SVlanPriority=prvtSaaTestRfc2544SVlanPriority, prvtSaaTestY1731SlmPduSize=prvtSaaTestY1731SlmPduSize, prvtSaaTestY1731LastResultFramesSentFarEnd=prvtSaaTestY1731LastResultFramesSentFarEnd, prvtSaaTestY1731Function=prvtSaaTestY1731Function, prvtSaaTestY1564Mode=prvtSaaTestY1564Mode, prvtSaaTestY1731Interval=prvtSaaTestY1731Interval, prvtSaaTestRfc2544Domain=prvtSaaTestRfc2544Domain, prvtSaaTestY1564CirSteps=prvtSaaTestY1564CirSteps, prvtSaaTestY1731SlmResultTable=prvtSaaTestY1731SlmResultTable, prvtSaaY1564DelayThreshold=prvtSaaY1564DelayThreshold, prvtSaaTestY1731DelayMethod=prvtSaaTestY1731DelayMethod, prvtSaaTestRfc2544LoopbackType=prvtSaaTestRfc2544LoopbackType, prvtSaaTestY1731LastResultJitterNearEnd=prvtSaaTestY1731LastResultJitterNearEnd, prvtSaaTestRfc2544ResultMinDelay=prvtSaaTestRfc2544ResultMinDelay, prvtSaaTestY1731SlmResultDelayFarEnd=prvtSaaTestY1731SlmResultDelayFarEnd, prvtSaaProfileY1731SlmFrameLossNearEnd=prvtSaaProfileY1731SlmFrameLossNearEnd, prvtSaaTestY1564ResultStatus=prvtSaaTestY1564ResultStatus, prvtSaaY1731NotificationJitterCurrentNE=prvtSaaY1731NotificationJitterCurrentNE, prvtSaaProfileRfc2544FrameLoss=prvtSaaProfileRfc2544FrameLoss, prvtSaaTestY1731JitterMethod=prvtSaaTestY1731JitterMethod, prvtSaaTestY1731LastResultErrors=prvtSaaTestY1731LastResultErrors, prvtSaaTestY1564Mep=prvtSaaTestY1564Mep, prvtSaaTestY1564Cir=prvtSaaTestY1564Cir, prvtSaaTestY1731SlmLastResultMep=prvtSaaTestY1731SlmLastResultMep, prvtSaaProfileTable=prvtSaaProfileTable, prvtSaaTestY1731LastResultFrameLossFarEnd=prvtSaaTestY1731LastResultFrameLossFarEnd, prvtSaaTestRfc2544ResultTable=prvtSaaTestRfc2544ResultTable, prvtSaaTestY1731LastResultFrameLossNearEnd=prvtSaaTestY1731LastResultFrameLossNearEnd, prvtSaaTestY1731SlmMA=prvtSaaTestY1731SlmMA, prvtSaaRfc2544ProbeFailed=prvtSaaRfc2544ProbeFailed, prvtSaaY1731FrLossFEThreshold=prvtSaaY1731FrLossFEThreshold, prvtSaaTestY1731ResultTable=prvtSaaTestY1731ResultTable, prvtSaaTestY1564Domain=prvtSaaTestY1564Domain, prvtSaaY1731NotificationDelayCurrentFE=prvtSaaY1731NotificationDelayCurrentFE, prvtSaaTestRfc2544BurstPercentage=prvtSaaTestRfc2544BurstPercentage, prvtSaaTestY1731SlmLastResultDelayFarEnd=prvtSaaTestY1731SlmLastResultDelayFarEnd, prvtSaaY1731slmFramelossNearEndThreshold=prvtSaaY1731slmFramelossNearEndThreshold, prvtSaaTestRfc2544CVlanDropEligible=prvtSaaTestRfc2544CVlanDropEligible, prvtSaaTestY1731History=prvtSaaTestY1731History, prvtSaaTestRfc2544SVlanDropEligible=prvtSaaTestRfc2544SVlanDropEligible, prvtSaaTestY1564TargetType=prvtSaaTestY1564TargetType, prvtSaaTestY1731LastResultFramesSentNearEnd=prvtSaaTestY1731LastResultFramesSentNearEnd, prvtSaaTestY1731SlmResultCompletionTime=prvtSaaTestY1731SlmResultCompletionTime, prvtSaaTestY1731LastResultFramesPacketSend=prvtSaaTestY1731LastResultFramesPacketSend, prvtSaaY1731NotificationFramelossCurrentNE=prvtSaaY1731NotificationFramelossCurrentNE, prvtSaaTestY1731ResultJitterNearEnd=prvtSaaTestY1731ResultJitterNearEnd, prvtSaaY1564FramelossThreshold=prvtSaaY1564FramelossThreshold, prvtSaaTestY1731LastResultFramesReceivedNearEnd=prvtSaaTestY1731LastResultFramesReceivedNearEnd, prvtSaaTestY1731SlmPeriod=prvtSaaTestY1731SlmPeriod, prvtSaaTestRfc2544ResultIndex=prvtSaaTestRfc2544ResultIndex, prvtSaaTestY1731SlmLastResultEpsSwitchover=prvtSaaTestY1731SlmLastResultEpsSwitchover, prvtSaaTestY1731LastResultEpsSwitchover=prvtSaaTestY1731LastResultEpsSwitchover, prvtSaaTestY1564ConfigurationStepDuration=prvtSaaTestY1564ConfigurationStepDuration, prvtSaaTestY1731SlmTestId=prvtSaaTestY1731SlmTestId, prvtSaaTestY1564PerformanceTestDuration=prvtSaaTestY1564PerformanceTestDuration, prvtSaaTestY1731SlmHistory=prvtSaaTestY1731SlmHistory, prvtSaaProfileY1731SlmDelayFarEnd=prvtSaaProfileY1731SlmDelayFarEnd, prvtSaaProfileY1731SlmFrameLossFarEnd=prvtSaaProfileY1731SlmFrameLossFarEnd, prvtSaaTestY1731TargetMac=prvtSaaTestY1731TargetMac, prvtSaaTestY1731ResultFramesPacketSend=prvtSaaTestY1731ResultFramesPacketSend, prvtSaaTestY1731LastResultIndex=prvtSaaTestY1731LastResultIndex, prvtSaaTestRfc2544TargetMac=prvtSaaTestRfc2544TargetMac, prvtSaaTestY1731TargetMep=prvtSaaTestY1731TargetMep, prvtSaaTestEpsSwitchover=prvtSaaTestEpsSwitchover, prvtSaaY1731NotificationFramelossThresholdNE=prvtSaaY1731NotificationFramelossThresholdNE, prvtSaaTestOwner=prvtSaaTestOwner, prvtSaaTest=prvtSaaTest, prvtSaaTestY1731ResultMep=prvtSaaTestY1731ResultMep, prvtSaaTestY1731Domain=prvtSaaTestY1731Domain, prvtSaaTestY1564ResultStep=prvtSaaTestY1564ResultStep, prvtSaaY1731slmDelayFarEndThreshold=prvtSaaY1731slmDelayFarEndThreshold, prvtSaaProfileName=prvtSaaProfileName, PYSNMP_MODULE_ID=prvtSaaMIB, prvtSaaTestRfc2544Timeout=prvtSaaTestRfc2544Timeout, prvtSaaTestStatus=prvtSaaTestStatus, prvtSaaTestY1731SlmLastResultTable=prvtSaaTestY1731SlmLastResultTable, prvtSaaNotifications=prvtSaaNotifications, prvtSaaTestY1731SlmDropEligible=prvtSaaTestY1731SlmDropEligible, prvtSaaTestRfc2544ResultThroughput=prvtSaaTestRfc2544ResultThroughput, prvtSaaY1731SlmTestEpsSwitchover=prvtSaaY1731SlmTestEpsSwitchover, prvtSaaProfileY1731FrameLossFarEnd=prvtSaaProfileY1731FrameLossFarEnd, prvtSaaObjects=prvtSaaObjects, prvtSaaTestY1731SlmLastResultCompletionTime=prvtSaaTestY1731SlmLastResultCompletionTime, prvtSaaProfileY1731DelayNearEnd=prvtSaaProfileY1731DelayNearEnd, prvtSaaTestY1564Eir=prvtSaaTestY1564Eir, prvtSaaY1731NotificationDelayCurrentNE=prvtSaaY1731NotificationDelayCurrentNE, prvtSaaTestY1564CVlanPriority=prvtSaaTestY1564CVlanPriority, prvtSaaTestY1731SlmResultFramesReceivedNearEnd=prvtSaaTestY1731SlmResultFramesReceivedNearEnd, prvtSaaY1731NotificationDelayThresholdNE=prvtSaaY1731NotificationDelayThresholdNE, prvtSaaTestRfc2544ResultFrameLoss=prvtSaaTestRfc2544ResultFrameLoss, prvtSaaTestY1564Timeout=prvtSaaTestY1564Timeout, prvtSaaRfc2544ProbeSuccess=prvtSaaRfc2544ProbeSuccess, prvtSaaTestY1731SlmResultFrameLossFarEnd=prvtSaaTestY1731SlmResultFrameLossFarEnd, prvtSaaTestY1731DelayPValue=prvtSaaTestY1731DelayPValue, prvtSaaTestY1731SlmResultIndex=prvtSaaTestY1731SlmResultIndex, prvtSaaY1731NotificationJitterCurrentFE=prvtSaaY1731NotificationJitterCurrentFE, prvtSaaTestY1731SlmResultJitterFarEnd=prvtSaaTestY1731SlmResultJitterFarEnd, prvtSaaTestY1731LastResultCompletionTime=prvtSaaTestY1731LastResultCompletionTime, prvtSaaY1564ProbeSuccess=prvtSaaY1564ProbeSuccess, prvtSaaTestY1731ResultErrors=prvtSaaTestY1731ResultErrors, prvtSaaTestY1731Mep=prvtSaaTestY1731Mep, prvtSaaTestY1731SlmMode=prvtSaaTestY1731SlmMode, prvtSaaTestEnable=prvtSaaTestEnable, prvtSaaTestY1731SlmResultDelayNearEnd=prvtSaaTestY1731SlmResultDelayNearEnd, prvtSaaLastTestResult=prvtSaaLastTestResult, prvtSaaTestY1564CVlan=prvtSaaTestY1564CVlan, prvtSaaTestY1731ResultDelayNearEnd=prvtSaaTestY1731ResultDelayNearEnd, prvtSaaTestY1731LastResultDelayFarEnd=prvtSaaTestY1731LastResultDelayFarEnd, prvtSaaTestY1731SlmLastResultJitterFarEnd=prvtSaaTestY1731SlmLastResultJitterFarEnd, prvtSaaProfileY1731JitterNearEnd=prvtSaaProfileY1731JitterNearEnd, prvtSaaY1731DelayNearEndThreshold=prvtSaaY1731DelayNearEndThreshold, prvtSaaTestRfc2544TargetType=prvtSaaTestRfc2544TargetType, prvtSaaTestY1731SlmTargetMac=prvtSaaTestY1731SlmTargetMac, prvtSaaTestY1731SlmLastResultFramesReceivedFarEnd=prvtSaaTestY1731SlmLastResultFramesReceivedFarEnd, prvtSaaTestTable=prvtSaaTestTable, prvtSaaY1731slmJitterFarEndThreshold=prvtSaaY1731slmJitterFarEndThreshold, prvtSaaTestY1731SlmTargetMep=prvtSaaTestY1731SlmTargetMep, prvtSaaTestY1564SVlanDropEligible=prvtSaaTestY1564SVlanDropEligible, prvtSaaTestY1731SlmResultFrameLossNearEnd=prvtSaaTestY1731SlmResultFrameLossNearEnd, prvtSaaTestRfc2544ResultStatus=prvtSaaTestRfc2544ResultStatus, prvtSaaTestY1731SlmLastResultFramesSentFarEnd=prvtSaaTestY1731SlmLastResultFramesSentFarEnd, prvtSaaTestY1731LastResultTimeouts=prvtSaaTestY1731LastResultTimeouts, prvtSaaProfileY1731SlmDelayNearEnd=prvtSaaProfileY1731SlmDelayNearEnd, prvtSaaTestRfc2544Cir=prvtSaaTestRfc2544Cir, prvtSaaTestY1731SlmResultJitterNearEnd=prvtSaaTestY1731SlmResultJitterNearEnd, prvtSaaProfileRowStatus=prvtSaaProfileRowStatus, prvtSaaTestY1731LastResultEntry=prvtSaaTestY1731LastResultEntry, prvtSaaTestY1731Mode=prvtSaaTestY1731Mode, prvtSaaTestY1731Period=prvtSaaTestY1731Period, prvtSaaTestY1731ResultFrameLossFarEnd=prvtSaaTestY1731ResultFrameLossFarEnd, prvtSaaY1731slmDelayNearEndThreshold=prvtSaaY1731slmDelayNearEndThreshold, prvtSaaY1731JitterNearEndThreshold=prvtSaaY1731JitterNearEndThreshold, prvtSaaTestY1731TargetType=prvtSaaTestY1731TargetType, prvtSaaY1564TestFinished=prvtSaaY1564TestFinished, prvtSaaTestY1731SlmResultFramesReceivedFarEnd=prvtSaaTestY1731SlmResultFramesReceivedFarEnd, prvtSaaTestY1731LastResultTable=prvtSaaTestY1731LastResultTable, prvtSaaY1731NotificationFramelossCurrentFE=prvtSaaY1731NotificationFramelossCurrentFE, prvtSaaTestY1731ResultCompletionTime=prvtSaaTestY1731ResultCompletionTime, prvtSaaTestY1731SlmIncludeDelay=prvtSaaTestY1731SlmIncludeDelay, prvtSaaTestRfc2544CVlanPriority=prvtSaaTestRfc2544CVlanPriority, PrvtSaaNameType=PrvtSaaNameType, prvtSaaTestY1564SVlanPriority=prvtSaaTestY1564SVlanPriority, prvtSaaTestY1731SlmMep=prvtSaaTestY1731SlmMep, prvtSaaProfiles=prvtSaaProfiles, prvtSaaTestDataSizeTable=prvtSaaTestDataSizeTable, prvtSaaTestY1731SlmResultEntry=prvtSaaTestY1731SlmResultEntry, prvtSaaTestY1731SlmLastResultDelayNearEnd=prvtSaaTestY1731SlmLastResultDelayNearEnd, prvtSaaY1731DelayFarEndThreshold=prvtSaaY1731DelayFarEndThreshold, prvtSaaTestY1731ResultIndex=prvtSaaTestY1731ResultIndex, prvtSaaTestDataSizeRowStatus=prvtSaaTestDataSizeRowStatus, prvtSaaTestY1731JitterPValue=prvtSaaTestY1731JitterPValue, prvtSaaY1731NotificationId=prvtSaaY1731NotificationId, prvtSaaTestRfc2544MA=prvtSaaTestRfc2544MA, prvtSaaTestY1564Pattern=prvtSaaTestY1564Pattern, prvtSaaTestY1731SlmTargetType=prvtSaaTestY1731SlmTargetType, prvtSaaY1731slmFramelossFarEndThreshold=prvtSaaY1731slmFramelossFarEndThreshold, prvtSaaTestY1564LoopbackType=prvtSaaTestY1564LoopbackType, prvtSaaTestY1731Priority=prvtSaaTestY1731Priority, prvtSaaTestRfc2544Pattern=prvtSaaTestRfc2544Pattern, prvtSaaTestY1731SlmLastResultEntry=prvtSaaTestY1731SlmLastResultEntry, prvtSaaY1731NotificationEntry=prvtSaaY1731NotificationEntry, prvtSaaTestY1564Function=prvtSaaTestY1564Function, prvtSaaTestRfc2544ResultPduIndex=prvtSaaTestRfc2544ResultPduIndex, prvtSaaProfileY1731SlmJitterNearEnd=prvtSaaProfileY1731SlmJitterNearEnd, prvtSaaTestY1731CountAllPriorities=prvtSaaTestY1731CountAllPriorities, prvtSaaTestRfc2544Mode=prvtSaaTestRfc2544Mode, prvtSaaTestY1564ResultTable=prvtSaaTestY1564ResultTable, prvtSaaTestY1731SlmResultFramesSentNearEnd=prvtSaaTestY1731SlmResultFramesSentNearEnd, prvtSaaY1731NotificationDelayThresholdFE=prvtSaaY1731NotificationDelayThresholdFE, prvtSaaTestType=prvtSaaTestType, prvtSaaTestDataSizeEntry=prvtSaaTestDataSizeEntry, prvtSaaY1564ProbeFailed=prvtSaaY1564ProbeFailed, prvtSaaTestY1731MA=prvtSaaTestY1731MA, prvtSaaTestRfc2544ResultNetThroughput=prvtSaaTestRfc2544ResultNetThroughput, prvtSaaTestY1731LastResultMep=prvtSaaTestY1731LastResultMep, prvtSaaTestY1731ResultEntry=prvtSaaTestY1731ResultEntry, prvtSaaMIB=prvtSaaMIB, prvtSaaTestName=prvtSaaTestName, prvtSaaTestRowStatus=prvtSaaTestRowStatus, prvtSaaTestRfc2544Cbs=prvtSaaTestRfc2544Cbs, prvtSaaTestY1564DataSize=prvtSaaTestY1564DataSize, prvtSaaTestDataSizeIdx=prvtSaaTestDataSizeIdx, prvtSaaTestY1731ResultFramesSentNearEnd=prvtSaaTestY1731ResultFramesSentNearEnd, prvtSaaTestRfc2544Duration=prvtSaaTestRfc2544Duration, prvtSaaY1731NotificationTable=prvtSaaY1731NotificationTable, prvtSaaTestY1731SlmLastResultIndex=prvtSaaTestY1731SlmLastResultIndex, prvtSaaTestY1731SlmLastResultFramesSentNearEnd=prvtSaaTestY1731SlmLastResultFramesSentNearEnd, prvtSaaTestY1731SlmInterval=prvtSaaTestY1731SlmInterval, prvtSaaY1731slmJitterNearEndThreshold=prvtSaaY1731slmJitterNearEndThreshold, prvtSaaProfileY1731JitterFarEnd=prvtSaaProfileY1731JitterFarEnd, prvtSaaTestRfc2544CVlan=prvtSaaTestRfc2544CVlan, prvtSaaTestY1731ResultDelayFarEnd=prvtSaaTestY1731ResultDelayFarEnd, prvtSaaTestY1564ResultFrameDelay=prvtSaaTestY1564ResultFrameDelay, prvtSaaTestY1564CVlanDropEligible=prvtSaaTestY1564CVlanDropEligible, prvtSaaTestY1731SlmPriority=prvtSaaTestY1731SlmPriority, prvtSaaTestY1731LastResultFramesReceivedFarEnd=prvtSaaTestY1731LastResultFramesReceivedFarEnd, prvtSaaY1731JitterFarEndThreshold=prvtSaaY1731JitterFarEndThreshold, prvtSaaTestY1564ResultThroughput=prvtSaaTestY1564ResultThroughput, prvtSaaY1731NotificationJitterThresholdFE=prvtSaaY1731NotificationJitterThresholdFE, prvtSaaTestY1564ResultIndex=prvtSaaTestY1564ResultIndex, prvtSaaTestY1564ResultPdu=prvtSaaTestY1564ResultPdu, prvtSaaTestY1564ResultNetThroughput=prvtSaaTestY1564ResultNetThroughput, prvtSaaTestY1564Ma=prvtSaaTestY1564Ma, prvtSaaTestY1731SlmLastResultFramesReceivedNearEnd=prvtSaaTestY1731SlmLastResultFramesReceivedNearEnd, prvtSaaTestProfile=prvtSaaTestProfile, prvtSaaTestY1731LastResultDelayNearEnd=prvtSaaTestY1731LastResultDelayNearEnd, prvtSaaTestY1564TargetMac=prvtSaaTestY1564TargetMac, prvtSaaTestRfc2544TargetMep=prvtSaaTestRfc2544TargetMep)
