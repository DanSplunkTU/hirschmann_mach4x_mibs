#
# PySNMP MIB module NBS-PART-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/mrv/NBS-PART-MIB
# Produced by pysmi-1.1.8 at Mon Jan 17 18:29:56 2022
# On host fv-az39-968 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
nbs, NbsTcPartIndex = mibBuilder.importSymbols("NBS-MIB", "nbs", "NbsTcPartIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, Bits, iso, NotificationType, Counter32, Integer32, MibIdentifier, IpAddress, Unsigned32, ObjectIdentity, TimeTicks, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Bits", "iso", "NotificationType", "Counter32", "Integer32", "MibIdentifier", "IpAddress", "Unsigned32", "ObjectIdentity", "TimeTicks", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
nbsPartMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 629, 231))
if mibBuilder.loadTexts: nbsPartMib.setLastUpdated('201503090000Z')
if mibBuilder.loadTexts: nbsPartMib.setOrganization('NBS')
nbsPartHardGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 231, 1))
if mibBuilder.loadTexts: nbsPartHardGrp.setStatus('current')
nbsPartFirmGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 231, 2))
if mibBuilder.loadTexts: nbsPartFirmGrp.setStatus('current')
nbsPartProgGrp = ObjectIdentity((1, 3, 6, 1, 4, 1, 629, 231, 3))
if mibBuilder.loadTexts: nbsPartProgGrp.setStatus('current')
nbsPartHardTable = MibTable((1, 3, 6, 1, 4, 1, 629, 231, 1, 1), )
if mibBuilder.loadTexts: nbsPartHardTable.setStatus('current')
nbsPartHardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 231, 1, 1, 1), ).setIndexNames((0, "NBS-PART-MIB", "nbsPartHardIfIndex"), (0, "NBS-PART-MIB", "nbsPartHardPartIndex"))
if mibBuilder.loadTexts: nbsPartHardEntry.setStatus('current')
nbsPartHardIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: nbsPartHardIfIndex.setStatus('current')
nbsPartHardPartIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 1, 1, 1, 2), NbsTcPartIndex())
if mibBuilder.loadTexts: nbsPartHardPartIndex.setStatus('current')
nbsPartHardDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 1, 1, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPartHardDescription.setStatus('current')
nbsPartHardSerialNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 1, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPartHardSerialNumber.setStatus('current')
nbsPartHardProductionId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 1, 1, 1, 20), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPartHardProductionId.setStatus('current')
nbsPartHardVendor = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 1, 1, 1, 30), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPartHardVendor.setStatus('current')
nbsPartHardModel = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 1, 1, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPartHardModel.setStatus('current')
nbsPartHardWareRev = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 1, 1, 1, 32), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPartHardWareRev.setStatus('current')
nbsPartFirmTable = MibTable((1, 3, 6, 1, 4, 1, 629, 231, 2, 1), )
if mibBuilder.loadTexts: nbsPartFirmTable.setStatus('current')
nbsPartFirmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 231, 2, 1, 1), ).setIndexNames((0, "NBS-PART-MIB", "nbsPartFirmIfIndex"), (0, "NBS-PART-MIB", "nbsPartFirmPartIndex"))
if mibBuilder.loadTexts: nbsPartFirmEntry.setStatus('current')
nbsPartFirmIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 2, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: nbsPartFirmIfIndex.setStatus('current')
nbsPartFirmPartIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 2, 1, 1, 2), NbsTcPartIndex())
if mibBuilder.loadTexts: nbsPartFirmPartIndex.setStatus('current')
nbsPartFirmFpgaRev = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 2, 1, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPartFirmFpgaRev.setStatus('current')
nbsPartFirmSwMajor = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 2, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPartFirmSwMajor.setStatus('current')
nbsPartFirmSwMinor = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 2, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPartFirmSwMinor.setStatus('current')
nbsPartFirmSwBuild = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 2, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPartFirmSwBuild.setStatus('current')
nbsPartFirmWareIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 2, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPartFirmWareIndex.setStatus('current')
nbsPartProgTable = MibTable((1, 3, 6, 1, 4, 1, 629, 231, 3, 1), )
if mibBuilder.loadTexts: nbsPartProgTable.setStatus('current')
nbsPartProgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 231, 3, 1, 1), ).setIndexNames((0, "NBS-PART-MIB", "nbsPartProgIfIndex"), (0, "NBS-PART-MIB", "nbsPartProgPartIndex"))
if mibBuilder.loadTexts: nbsPartProgEntry.setStatus('current')
nbsPartProgIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 3, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: nbsPartProgIfIndex.setStatus('current')
nbsPartProgPartIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 3, 1, 1, 2), NbsTcPartIndex())
if mibBuilder.loadTexts: nbsPartProgPartIndex.setStatus('current')
nbsPartProgFirmwareCaps = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 3, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPartProgFirmwareCaps.setStatus('current')
nbsPartProgFirmwareLoad = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 3, 1, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsPartProgFirmwareLoad.setStatus('current')
nbsPartProgLoader = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 3, 1, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPartProgLoader.setStatus('current')
nbsPartProgNVAreaAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 3, 1, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsPartProgNVAreaAdmin.setStatus('current')
nbsPartProgNVAreaOper = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 3, 1, 1, 23), Integer32().clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPartProgNVAreaOper.setStatus('current')
nbsPartProgNVAreaStart = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 3, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPartProgNVAreaStart.setStatus('current')
nbsPartProgNVAreaBanks = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 231, 3, 1, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsPartProgNVAreaBanks.setStatus('current')
mibBuilder.exportSymbols("NBS-PART-MIB", nbsPartProgTable=nbsPartProgTable, nbsPartFirmSwMajor=nbsPartFirmSwMajor, nbsPartFirmSwMinor=nbsPartFirmSwMinor, nbsPartFirmGrp=nbsPartFirmGrp, nbsPartHardProductionId=nbsPartHardProductionId, nbsPartFirmSwBuild=nbsPartFirmSwBuild, nbsPartFirmPartIndex=nbsPartFirmPartIndex, nbsPartHardDescription=nbsPartHardDescription, nbsPartFirmIfIndex=nbsPartFirmIfIndex, nbsPartMib=nbsPartMib, nbsPartProgIfIndex=nbsPartProgIfIndex, nbsPartProgNVAreaAdmin=nbsPartProgNVAreaAdmin, nbsPartProgNVAreaBanks=nbsPartProgNVAreaBanks, nbsPartProgNVAreaOper=nbsPartProgNVAreaOper, nbsPartProgFirmwareLoad=nbsPartProgFirmwareLoad, nbsPartProgGrp=nbsPartProgGrp, nbsPartHardTable=nbsPartHardTable, nbsPartHardVendor=nbsPartHardVendor, nbsPartProgNVAreaStart=nbsPartProgNVAreaStart, nbsPartHardModel=nbsPartHardModel, nbsPartHardWareRev=nbsPartHardWareRev, nbsPartHardEntry=nbsPartHardEntry, nbsPartHardIfIndex=nbsPartHardIfIndex, nbsPartHardSerialNumber=nbsPartHardSerialNumber, nbsPartProgLoader=nbsPartProgLoader, nbsPartFirmTable=nbsPartFirmTable, nbsPartHardPartIndex=nbsPartHardPartIndex, nbsPartFirmEntry=nbsPartFirmEntry, nbsPartHardGrp=nbsPartHardGrp, nbsPartProgFirmwareCaps=nbsPartProgFirmwareCaps, PYSNMP_MODULE_ID=nbsPartMib, nbsPartFirmFpgaRev=nbsPartFirmFpgaRev, nbsPartProgEntry=nbsPartProgEntry, nbsPartFirmWareIndex=nbsPartFirmWareIndex, nbsPartProgPartIndex=nbsPartProgPartIndex)
