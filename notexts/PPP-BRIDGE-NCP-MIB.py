#
# PySNMP MIB module PPP-BRIDGE-NCP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/sagemcom/PPP-BRIDGE-NCP-MIB
# Produced by pysmi-1.1.3 at Wed Dec  8 17:49:21 2021
# On host fv-az36-855 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ppp, = mibBuilder.importSymbols("PPP-LCP-MIB", "ppp")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, iso, Bits, IpAddress, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter64, TimeTicks, NotificationType, MibIdentifier, ObjectIdentity, Unsigned32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "iso", "Bits", "IpAddress", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter64", "TimeTicks", "NotificationType", "MibIdentifier", "ObjectIdentity", "Unsigned32", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
pppBridge = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 23, 4))
pppBridgeTable = MibTable((1, 3, 6, 1, 2, 1, 10, 23, 4, 1), )
if mibBuilder.loadTexts: pppBridgeTable.setStatus('mandatory')
pppBridgeEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 23, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pppBridgeEntry.setStatus('mandatory')
pppBridgeOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 23, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("opened", 1), ("not-opened", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppBridgeOperStatus.setStatus('mandatory')
pppBridgeLocalToRemoteTinygramCompression = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 23, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppBridgeLocalToRemoteTinygramCompression.setStatus('mandatory')
pppBridgeRemoteToLocalTinygramCompression = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 23, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppBridgeRemoteToLocalTinygramCompression.setStatus('mandatory')
pppBridgeLocalToRemoteLanId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 23, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppBridgeLocalToRemoteLanId.setStatus('mandatory')
pppBridgeRemoteToLocalLanId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 23, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppBridgeRemoteToLocalLanId.setStatus('mandatory')
pppBridgeConfigTable = MibTable((1, 3, 6, 1, 2, 1, 10, 23, 4, 2), )
if mibBuilder.loadTexts: pppBridgeConfigTable.setStatus('mandatory')
pppBridgeConfigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 23, 4, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: pppBridgeConfigEntry.setStatus('mandatory')
pppBridgeConfigAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 23, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("open", 1), ("close", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppBridgeConfigAdminStatus.setStatus('mandatory')
pppBridgeConfigTinygram = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 23, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2))).clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppBridgeConfigTinygram.setStatus('mandatory')
pppBridgeConfigRingId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 23, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppBridgeConfigRingId.setStatus('mandatory')
pppBridgeConfigLineId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 23, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppBridgeConfigLineId.setStatus('mandatory')
pppBridgeConfigLanId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 23, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("false", 1), ("true", 2))).clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppBridgeConfigLanId.setStatus('mandatory')
pppBridgeMediaTable = MibTable((1, 3, 6, 1, 2, 1, 10, 23, 4, 3), )
if mibBuilder.loadTexts: pppBridgeMediaTable.setStatus('mandatory')
pppBridgeMediaEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 23, 4, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "PPP-BRIDGE-NCP-MIB", "pppBridgeMediaMacType"))
if mibBuilder.loadTexts: pppBridgeMediaEntry.setStatus('mandatory')
pppBridgeMediaMacType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 23, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppBridgeMediaMacType.setStatus('mandatory')
pppBridgeMediaLocalStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 23, 4, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("accept", 1), ("dont-accept", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppBridgeMediaLocalStatus.setStatus('mandatory')
pppBridgeMediaRemoteStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 23, 4, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("accept", 1), ("dont-accept", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pppBridgeMediaRemoteStatus.setStatus('mandatory')
pppBridgeMediaConfigTable = MibTable((1, 3, 6, 1, 2, 1, 10, 23, 4, 4), )
if mibBuilder.loadTexts: pppBridgeMediaConfigTable.setStatus('mandatory')
pppBridgeMediaConfigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 23, 4, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "PPP-BRIDGE-NCP-MIB", "pppBridgeMediaConfigMacType"))
if mibBuilder.loadTexts: pppBridgeMediaConfigEntry.setStatus('mandatory')
pppBridgeMediaConfigMacType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 23, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppBridgeMediaConfigMacType.setStatus('mandatory')
pppBridgeMediaConfigLocalStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 23, 4, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("accept", 1), ("dont-accept", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pppBridgeMediaConfigLocalStatus.setStatus('mandatory')
mibBuilder.exportSymbols("PPP-BRIDGE-NCP-MIB", pppBridgeMediaLocalStatus=pppBridgeMediaLocalStatus, pppBridgeEntry=pppBridgeEntry, pppBridgeConfigLineId=pppBridgeConfigLineId, pppBridgeLocalToRemoteTinygramCompression=pppBridgeLocalToRemoteTinygramCompression, pppBridgeConfigAdminStatus=pppBridgeConfigAdminStatus, pppBridgeConfigTinygram=pppBridgeConfigTinygram, pppBridgeMediaRemoteStatus=pppBridgeMediaRemoteStatus, pppBridgeMediaEntry=pppBridgeMediaEntry, pppBridgeMediaConfigMacType=pppBridgeMediaConfigMacType, pppBridge=pppBridge, pppBridgeMediaMacType=pppBridgeMediaMacType, pppBridgeOperStatus=pppBridgeOperStatus, pppBridgeMediaConfigLocalStatus=pppBridgeMediaConfigLocalStatus, pppBridgeLocalToRemoteLanId=pppBridgeLocalToRemoteLanId, pppBridgeMediaConfigEntry=pppBridgeMediaConfigEntry, pppBridgeRemoteToLocalLanId=pppBridgeRemoteToLocalLanId, pppBridgeConfigRingId=pppBridgeConfigRingId, pppBridgeConfigEntry=pppBridgeConfigEntry, pppBridgeConfigTable=pppBridgeConfigTable, pppBridgeMediaConfigTable=pppBridgeMediaConfigTable, pppBridgeTable=pppBridgeTable, pppBridgeRemoteToLocalTinygramCompression=pppBridgeRemoteToLocalTinygramCompression, pppBridgeConfigLanId=pppBridgeConfigLanId, pppBridgeMediaTable=pppBridgeMediaTable)
