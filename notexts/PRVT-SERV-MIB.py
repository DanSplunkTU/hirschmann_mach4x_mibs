#
# PySNMP MIB module PRVT-SERV-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-SERV-MIB
# Produced by pysmi-1.1.3 at Tue Dec  7 17:25:02 2021
# On host fv-az121-73 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
serviceAccessSwitch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "serviceAccessSwitch")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, TimeTicks, ObjectIdentity, Counter32, Integer32, iso, IpAddress, Counter64, Bits, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "TimeTicks", "ObjectIdentity", "Counter32", "Integer32", "iso", "IpAddress", "Counter64", "Bits", "Unsigned32", "MibIdentifier")
TruthValue, RowStatus, TimeStamp, DisplayString, TextualConvention, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "TimeStamp", "DisplayString", "TextualConvention", "MacAddress")
prvtServicesMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 7, 2))
prvtServicesMIB.setRevisions(('2013-07-15 00:00', '2013-02-04 00:00', '2011-10-19 00:00', '2009-01-19 00:00',))
if mibBuilder.loadTexts: prvtServicesMIB.setLastUpdated('201307150000Z')
if mibBuilder.loadTexts: prvtServicesMIB.setOrganization('BATM Advanced Communication')
prvtServicesMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 0))
prvtServicesMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1))
customerTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 1), )
if mibBuilder.loadTexts: customerTable.setStatus('current')
customerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 1, 1), ).setIndexNames((0, "PRVT-SERV-MIB", "customerName"))
if mibBuilder.loadTexts: customerEntry.setStatus('current')
customerName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 29)))
if mibBuilder.loadTexts: customerName.setStatus('current')
customerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: customerRowStatus.setStatus('current')
customerContact = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: customerContact.setStatus('current')
customerPhone = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: customerPhone.setStatus('current')
serviceTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2), )
if mibBuilder.loadTexts: serviceTable.setStatus('current')
serviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1), ).setIndexNames((0, "PRVT-SERV-MIB", "serviceId"))
if mibBuilder.loadTexts: serviceEntry.setStatus('current')
serviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967294)))
if mibBuilder.loadTexts: serviceId.setStatus('current')
serviceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceRowStatus.setStatus('current')
serviceVpnId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceVpnId.setStatus('current')
serviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("epipe", 1), ("p3pipe", 2), ("tls", 3), ("vprn", 4), ("ies", 5), ("mirror", 6), ("apipe", 7), ("fpipe", 8), ("vpws", 9), ("vplsPe", 10), ("vplsMtu", 11), ("dot1q", 12)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceType.setStatus('current')
serviceDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceDescription.setStatus('current')
serviceMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 9216))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceMtu.setStatus('current')
serviceAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("down", 1), ("up", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceAdminStatus.setStatus('current')
serviceOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: serviceOperStatus.setStatus('current')
serviceNumSaps = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serviceNumSaps.setStatus('current')
serviceNumSdps = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serviceNumSdps.setStatus('current')
serviceLastMgmtChange = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serviceLastMgmtChange.setStatus('current')
serviceEnableSecureSaps = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1, 13), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceEnableSecureSaps.setStatus('current')
serviceRevertTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7200))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceRevertTimer.setStatus('current')
servicePwRedundOperModeMesh = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("independent", 1), ("master", 2), ("slave", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: servicePwRedundOperModeMesh.setStatus('current')
servicePwRedundOperModeSpoke = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("independent", 1), ("master", 2), ("slave", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: servicePwRedundOperModeSpoke.setStatus('current')
serviceCustName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceCustName.setStatus('current')
serviceVlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(33024, 34984, 37120))).clone(namedValues=NamedValues(("vlan", 33024), ("dot1ad", 34984), ("qinq", 37120)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceVlanEtherType.setStatus('current')
serviceBackupVlanEtherType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(33024, 34984, 37120))).clone(namedValues=NamedValues(("vlan", 33024), ("dot1ad", 34984), ("qinq", 37120)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceBackupVlanEtherType.setStatus('current')
serviceVlanAction = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("replace", 0), ("add", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceVlanAction.setStatus('current')
sapTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3), )
if mibBuilder.loadTexts: sapTable.setStatus('current')
sapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1), ).setIndexNames((0, "PRVT-SERV-MIB", "serviceId"), (0, "PRVT-SERV-MIB", "sapPortId"), (0, "PRVT-SERV-MIB", "sapEncapValue"))
if mibBuilder.loadTexts: sapEntry.setStatus('current')
sapPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: sapPortId.setStatus('current')
sapEncapValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: sapEncapValue.setStatus('current')
sapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sapRowStatus.setStatus('current')
sapType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("epipe", 1), ("p3pipe", 2), ("tls", 3), ("vprn", 4), ("ies", 5), ("mirror", 6), ("apipe", 7), ("fpipe", 8), ("vpws", 9), ("vplsPe", 10), ("vplsMtu", 11), ("dot1q", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sapType.setStatus('current')
sapDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sapDescription.setStatus('current')
sapAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("down", 1), ("up", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sapAdminStatus.setStatus('current')
sapOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("ingressQosMismatch", 3), ("egressQosMismatch", 4), ("svcAdminDown", 5), ("portMtuTooSmall", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sapOperStatus.setStatus('current')
sapLastMgmtChange = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sapLastMgmtChange.setStatus('current')
sapOperFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 9), Bits().clone(namedValues=NamedValues(("sapAdminDown", 0), ("svcAdminDown", 1), ("portOperDown", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sapOperFlags.setStatus('current')
sapCustMultSvcSiteName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 9))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sapCustMultSvcSiteName.setStatus('current')
sapIngressQosPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sapIngressQosPolicyId.setStatus('current')
sapEgressQosPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sapEgressQosPolicyId.setStatus('current')
sapIngressQosSchedulerPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 14), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sapIngressQosSchedulerPolicy.setStatus('current')
sapEgressQosSchedulerPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 15), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sapEgressQosSchedulerPolicy.setStatus('current')
sapLearnMode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("qualified", 1), ("unqualified", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sapLearnMode.setStatus('current')
sapLearnEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 17), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sapLearnEnable.setStatus('current')
sapUntaggedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 18), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sapUntaggedMode.setStatus('current')
sapProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 30))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sapProfileName.setStatus('current')
sapCurrentMacCount = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sapCurrentMacCount.setStatus('current')
sapMacLearningProfileState = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noViolation", 1), ("watermarkReached", 2), ("maxMacCountReached", 3), ("errorState", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sapMacLearningProfileState.setStatus('current')
prvtSapEventPropagationProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 22), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSapEventPropagationProfile.setStatus('current')
prvtTlsSapEventPropagationProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 3, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtTlsSapEventPropagationProfile.setStatus('current')
sdpNextFreeId = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdpNextFreeId.setStatus('current')
sdpTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5), )
if mibBuilder.loadTexts: sdpTable.setStatus('current')
sdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1), ).setIndexNames((0, "PRVT-SERV-MIB", "serviceId"), (0, "PRVT-SERV-MIB", "sdpId"))
if mibBuilder.loadTexts: sdpEntry.setStatus('current')
sdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: sdpId.setStatus('current')
sdpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpRowStatus.setStatus('current')
sdpDelivery = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("gre", 1), ("mpls", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpDelivery.setStatus('current')
sdpFarEndIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpFarEndIpAddress.setStatus('current')
sdpDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 29))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpDescription.setStatus('current')
sdpLabelSignaling = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("tldp", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpLabelSignaling.setStatus('current')
sdpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("down", 1), ("up", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpAdminStatus.setStatus('current')
sdpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("goingUp", 3), ("tunnelDown", 4), ("transportSelected", 5), ("supressed", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdpOperStatus.setStatus('current')
sdpLastMgmtChange = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdpLastMgmtChange.setStatus('current')
sdpLdpEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdpLdpEnabled.setStatus('current')
sdpOperFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 11), Bits().clone(namedValues=NamedValues(("sdpAdminDown", 0), ("signalingSessionDown", 1), ("transportTunnelDown", 2), ("invalidEgressInterface", 3), ("noSystemIpAddress", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdpOperFlags.setStatus('current')
sdpAdminIngressLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpAdminIngressLabel.setStatus('current')
sdpAdminEgressLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpAdminEgressLabel.setStatus('current')
sdpOutInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 15), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpOutInterface.setStatus('current')
sdpGroupIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 16), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpGroupIdentifier.setStatus('current')
sdpTransportTunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpTransportTunnelName.setStatus('current')
sdpVCType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 5))).clone(namedValues=NamedValues(("ethernetVlan", 4), ("ethernet", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpVCType.setStatus('current')
sdpType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("invalidType", 0), ("generic", 1), ("spoke", 2), ("mesh", 3), ("hub", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpType.setStatus('current')
sdpMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 9190))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpMtu.setStatus('current')
sdpBindVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4092))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpBindVlanTag.setStatus('current')
sdpLearnEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 22), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpLearnEnable.setStatus('current')
sdpSecuredEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 23), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpSecuredEnable.setStatus('current')
sdpSignalPwStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 24), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpSignalPwStatus.setStatus('current')
sdpPwRedundancyEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 25), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpPwRedundancyEnable.setStatus('current')
sdpPwPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 26), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpPwPrecedence.setStatus('current')
sdpPwActivate = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 27), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sdpPwActivate.setStatus('current')
sdpDynamicVcIngressLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 28), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdpDynamicVcIngressLabel.setStatus('current')
sdpDynamicVcEgressLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 5, 1, 29), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sdpDynamicVcEgressLabel.setStatus('current')
serviceMacAddressSapTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 7), )
if mibBuilder.loadTexts: serviceMacAddressSapTable.setStatus('current')
serviceMacAddressSapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 7, 1), ).setIndexNames((0, "PRVT-SERV-MIB", "serviceMacAddressSapServiceId"), (0, "PRVT-SERV-MIB", "serviceMacAddressSapMacAddress"), (0, "PRVT-SERV-MIB", "serviceMacAddressSapPortId"), (0, "PRVT-SERV-MIB", "serviceMacAddressSapEncapValue"))
if mibBuilder.loadTexts: serviceMacAddressSapEntry.setStatus('current')
serviceMacAddressSapServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 7, 1, 1), Unsigned32())
if mibBuilder.loadTexts: serviceMacAddressSapServiceId.setStatus('current')
serviceMacAddressSapMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 7, 1, 2), MacAddress())
if mibBuilder.loadTexts: serviceMacAddressSapMacAddress.setStatus('current')
serviceMacAddressSapPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: serviceMacAddressSapPortId.setStatus('current')
serviceMacAddressSapEncapValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 7, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)))
if mibBuilder.loadTexts: serviceMacAddressSapEncapValue.setStatus('current')
serviceMacAddressSapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 7, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceMacAddressSapRowStatus.setStatus('current')
serviceMacAddressSapPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 7, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceMacAddressSapPriority.setStatus('current')
serviceMacAddressSdpTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 8), )
if mibBuilder.loadTexts: serviceMacAddressSdpTable.setStatus('current')
serviceMacAddressSdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 8, 1), ).setIndexNames((0, "PRVT-SERV-MIB", "serviceMacAddressSdpServiceId"), (0, "PRVT-SERV-MIB", "serviceMacAddressSdpMacAddress"), (0, "PRVT-SERV-MIB", "serviceMacAddressSdpId"))
if mibBuilder.loadTexts: serviceMacAddressSdpEntry.setStatus('current')
serviceMacAddressSdpServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 8, 1, 1), Unsigned32())
if mibBuilder.loadTexts: serviceMacAddressSdpServiceId.setStatus('current')
serviceMacAddressSdpMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 8, 1, 2), MacAddress())
if mibBuilder.loadTexts: serviceMacAddressSdpMacAddress.setStatus('current')
serviceMacAddressSdpId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 8, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: serviceMacAddressSdpId.setStatus('current')
serviceMacAddressSdpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 8, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceMacAddressSdpRowStatus.setStatus('current')
serviceMacAddressSdpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 1, 8, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: serviceMacAddressSdpPriority.setStatus('current')
customerCreated = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 0, 1)).setObjects(("PRVT-SERV-MIB", "customerName"))
if mibBuilder.loadTexts: customerCreated.setStatus('current')
customerDeleted = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 0, 2)).setObjects(("PRVT-SERV-MIB", "customerName"))
if mibBuilder.loadTexts: customerDeleted.setStatus('current')
serviceCreated = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 0, 3)).setObjects(("PRVT-SERV-MIB", "serviceId"))
if mibBuilder.loadTexts: serviceCreated.setStatus('current')
serviceDeleted = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 0, 4)).setObjects(("PRVT-SERV-MIB", "serviceId"))
if mibBuilder.loadTexts: serviceDeleted.setStatus('current')
sapCreated = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 0, 5)).setObjects(("PRVT-SERV-MIB", "serviceId"), ("PRVT-SERV-MIB", "sapPortId"), ("PRVT-SERV-MIB", "sapEncapValue"))
if mibBuilder.loadTexts: sapCreated.setStatus('current')
sapDeleted = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 0, 6)).setObjects(("PRVT-SERV-MIB", "serviceId"), ("PRVT-SERV-MIB", "sapPortId"), ("PRVT-SERV-MIB", "sapEncapValue"))
if mibBuilder.loadTexts: sapDeleted.setStatus('current')
sdpCreated = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 0, 7)).setObjects(("PRVT-SERV-MIB", "serviceId"), ("PRVT-SERV-MIB", "sdpId"))
if mibBuilder.loadTexts: sdpCreated.setStatus('current')
sdpDeleted = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 7, 2, 0, 8)).setObjects(("PRVT-SERV-MIB", "serviceId"), ("PRVT-SERV-MIB", "sdpId"))
if mibBuilder.loadTexts: sdpDeleted.setStatus('current')
mibBuilder.exportSymbols("PRVT-SERV-MIB", sapMacLearningProfileState=sapMacLearningProfileState, sapLastMgmtChange=sapLastMgmtChange, serviceEnableSecureSaps=serviceEnableSecureSaps, serviceMacAddressSapTable=serviceMacAddressSapTable, serviceRevertTimer=serviceRevertTimer, sapCurrentMacCount=sapCurrentMacCount, sdpNextFreeId=sdpNextFreeId, sdpPwPrecedence=sdpPwPrecedence, serviceMacAddressSapRowStatus=serviceMacAddressSapRowStatus, customerPhone=customerPhone, serviceOperStatus=serviceOperStatus, sapPortId=sapPortId, sapDeleted=sapDeleted, sapOperFlags=sapOperFlags, sapLearnMode=sapLearnMode, prvtServicesMIB=prvtServicesMIB, prvtServicesMIBObjects=prvtServicesMIBObjects, sdpLastMgmtChange=sdpLastMgmtChange, serviceCustName=serviceCustName, sapIngressQosSchedulerPolicy=sapIngressQosSchedulerPolicy, prvtSapEventPropagationProfile=prvtSapEventPropagationProfile, serviceType=serviceType, sdpFarEndIpAddress=sdpFarEndIpAddress, serviceNumSdps=serviceNumSdps, prvtTlsSapEventPropagationProfile=prvtTlsSapEventPropagationProfile, sapType=sapType, sdpAdminIngressLabel=sdpAdminIngressLabel, sdpLearnEnable=sdpLearnEnable, sdpTransportTunnelName=sdpTransportTunnelName, sdpDescription=sdpDescription, sdpSignalPwStatus=sdpSignalPwStatus, serviceDescription=serviceDescription, sdpOutInterface=sdpOutInterface, sdpType=sdpType, sdpPwActivate=sdpPwActivate, serviceEntry=serviceEntry, serviceNumSaps=serviceNumSaps, sapEgressQosPolicyId=sapEgressQosPolicyId, customerCreated=customerCreated, sdpDelivery=sdpDelivery, sapIngressQosPolicyId=sapIngressQosPolicyId, serviceMacAddressSdpTable=serviceMacAddressSdpTable, serviceVpnId=serviceVpnId, customerTable=customerTable, serviceMacAddressSapPriority=serviceMacAddressSapPriority, serviceMacAddressSapServiceId=serviceMacAddressSapServiceId, sapCreated=sapCreated, serviceVlanAction=serviceVlanAction, servicePwRedundOperModeSpoke=servicePwRedundOperModeSpoke, sdpBindVlanTag=sdpBindVlanTag, serviceDeleted=serviceDeleted, serviceMacAddressSdpMacAddress=serviceMacAddressSdpMacAddress, customerRowStatus=customerRowStatus, serviceRowStatus=serviceRowStatus, sdpEntry=sdpEntry, sdpDeleted=sdpDeleted, serviceBackupVlanEtherType=serviceBackupVlanEtherType, serviceMacAddressSdpEntry=serviceMacAddressSdpEntry, sdpCreated=sdpCreated, sapDescription=sapDescription, sdpAdminEgressLabel=sdpAdminEgressLabel, sdpAdminStatus=sdpAdminStatus, customerName=customerName, sapEncapValue=sapEncapValue, sdpVCType=sdpVCType, sapCustMultSvcSiteName=sapCustMultSvcSiteName, customerEntry=customerEntry, sapLearnEnable=sapLearnEnable, sapEgressQosSchedulerPolicy=sapEgressQosSchedulerPolicy, serviceMacAddressSdpPriority=serviceMacAddressSdpPriority, customerContact=customerContact, sapUntaggedMode=sapUntaggedMode, serviceMacAddressSapPortId=serviceMacAddressSapPortId, sdpMtu=sdpMtu, serviceMacAddressSdpServiceId=serviceMacAddressSdpServiceId, serviceMacAddressSapEntry=serviceMacAddressSapEntry, sapAdminStatus=sapAdminStatus, sapOperStatus=sapOperStatus, serviceAdminStatus=serviceAdminStatus, serviceVlanEtherType=serviceVlanEtherType, serviceId=serviceId, serviceMacAddressSdpId=serviceMacAddressSdpId, sdpGroupIdentifier=sdpGroupIdentifier, sapRowStatus=sapRowStatus, serviceTable=serviceTable, sapProfileName=sapProfileName, sdpDynamicVcEgressLabel=sdpDynamicVcEgressLabel, sdpRowStatus=sdpRowStatus, customerDeleted=customerDeleted, sapTable=sapTable, serviceLastMgmtChange=serviceLastMgmtChange, sdpSecuredEnable=sdpSecuredEnable, serviceMacAddressSapEncapValue=serviceMacAddressSapEncapValue, sdpOperFlags=sdpOperFlags, sapEntry=sapEntry, sdpLabelSignaling=sdpLabelSignaling, serviceMacAddressSdpRowStatus=serviceMacAddressSdpRowStatus, sdpDynamicVcIngressLabel=sdpDynamicVcIngressLabel, sdpPwRedundancyEnable=sdpPwRedundancyEnable, PYSNMP_MODULE_ID=prvtServicesMIB, servicePwRedundOperModeMesh=servicePwRedundOperModeMesh, serviceCreated=serviceCreated, serviceMtu=serviceMtu, prvtServicesMIBNotifications=prvtServicesMIBNotifications, sdpTable=sdpTable, sdpLdpEnabled=sdpLdpEnabled, sdpId=sdpId, serviceMacAddressSapMacAddress=serviceMacAddressSapMacAddress, sdpOperStatus=sdpOperStatus)
