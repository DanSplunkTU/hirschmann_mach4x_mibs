#
# PySNMP MIB module BASIS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source https://pysnmp.github.io:443/mibs/asn1/BASIS-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 15:51:05 2022
# On host fv-az135-792 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint")
ciscoWan, stratacom = mibBuilder.importSymbols("CISCOWAN-SMI", "ciscoWan", "stratacom")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, NotificationType, Gauge32, ObjectIdentity, Unsigned32, Counter32, MibIdentifier, TimeTicks, ModuleIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "NotificationType", "Gauge32", "ObjectIdentity", "Unsigned32", "Counter32", "MibIdentifier", "TimeTicks", "ModuleIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "iso", "Integer32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
basisMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 150, 67))
basisMIB.setRevisions(('2003-04-04 00:00',))
if mibBuilder.loadTexts: basisMIB.setLastUpdated('200304040000Z')
if mibBuilder.loadTexts: basisMIB.setOrganization('Cisco Systems, Inc.')
basis = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110))
par = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 130))
basisSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 1))
cardGeneric = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 2))
cardSpecific = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 3))
basisLines = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4))
basisServices = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5))
axisDiagnostics = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 6))
basisShelf = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 1, 1))
basisAsm = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 1, 2))
axisRedundancy = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 1, 3))
axisSvc = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 1, 4))
atmLmiSignaling = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 3, 4))
atmAddressRegistration = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 1, 4, 1))
dsx1 = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 3))
dsx3 = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 4))
x21 = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 5))
sonet = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 6))
dsx0Vism = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 7))
dsx1Line = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 3, 1))
dsx1Framing = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 3, 2))
dsx1Plcp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 3, 3))
dsx3Line = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 1))
dsx3Framing = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 2))
plcp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 4, 3))
cwsonetObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 4, 6, 1))
frameRelay = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 1))
frPort = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1))
frChan = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 2))
frPortCnf = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1))
frPortCnfSig = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 2))
frPortCnfX21PortGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 3))
frPortServiceQueGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 4))
frPortCnfResPartGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 1, 5))
frPortCnt = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2))
frPortCntSig = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 1, 1, 2, 2))
atm = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2))
ausmPort = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 1))
ausmPortCnf = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 1, 1))
ausmPortCnt = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 1, 3))
ausmChan = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 2))
circuitEmulation = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 3))
cesmChan = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 3, 2))
sna = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 4))
snaport = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 4, 1))
snaportCnf = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 4, 1, 1))
snaportCnfSig = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 4, 1, 1, 2))
snaportCnt = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 4, 1, 2))
snaPortCntSig = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 4, 1, 2, 2))
voice = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 5))
vismPort = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 2))
vismChanGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3))
vismChanCnfGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 3, 1))
atmLines = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 5))
bbInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6))
bbChan = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 7))
virtualInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 8))
rpmInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 9))
rpmChan = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 10))
atmLineCnfGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 5, 1))
atmLineCntGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 5, 2))
bbIfCnf = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 1))
bbIfCnfResPartGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 2))
bbIfStateGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 3))
bbIfCnt = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 6, 4))
bbChanCnfGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 7, 1))
bbChanStateGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 7, 2))
bbChanCntGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 7, 3))
rpmPort = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 9, 1))
rpmChanGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 2, 10, 1))
mibBuilder.exportSymbols("BASIS-MIB", sna=sna, vismChanCnfGrp=vismChanCnfGrp, bbChanStateGrp=bbChanStateGrp, rpmChanGrp=rpmChanGrp, basisServices=basisServices, atmAddressRegistration=atmAddressRegistration, axisSvc=axisSvc, frPortCnfSig=frPortCnfSig, atmLines=atmLines, PYSNMP_MODULE_ID=basisMIB, x21=x21, cwsonetObjects=cwsonetObjects, dsx0Vism=dsx0Vism, frameRelay=frameRelay, frPortCnfX21PortGrp=frPortCnfX21PortGrp, cardGeneric=cardGeneric, ausmPort=ausmPort, ausmPortCnf=ausmPortCnf, plcp=plcp, snaportCnt=snaportCnt, virtualInterface=virtualInterface, atm=atm, bbIfCnfResPartGrp=bbIfCnfResPartGrp, bbIfStateGrp=bbIfStateGrp, dsx3Line=dsx3Line, frPortCnfResPartGrp=frPortCnfResPartGrp, bbChanCnfGrp=bbChanCnfGrp, ausmChan=ausmChan, cesmChan=cesmChan, sonet=sonet, bbChanCntGrp=bbChanCntGrp, basisMIB=basisMIB, dsx1=dsx1, dsx3=dsx3, rpmChan=rpmChan, snaportCnf=snaportCnf, rpmInterface=rpmInterface, atmLineCnfGrp=atmLineCnfGrp, bbInterface=bbInterface, snaportCnfSig=snaportCnfSig, basisSystem=basisSystem, dsx1Framing=dsx1Framing, dsx1Plcp=dsx1Plcp, frPortCnt=frPortCnt, circuitEmulation=circuitEmulation, snaPortCntSig=snaPortCntSig, ausmPortCnt=ausmPortCnt, frPort=frPort, atmLmiSignaling=atmLmiSignaling, frChan=frChan, frPortServiceQueGrp=frPortServiceQueGrp, vismPort=vismPort, bbIfCnf=bbIfCnf, bbChan=bbChan, frPortCntSig=frPortCntSig, axisRedundancy=axisRedundancy, voice=voice, rpmPort=rpmPort, axisDiagnostics=axisDiagnostics, frPortCnf=frPortCnf, vismChanGrp=vismChanGrp, atmLineCntGrp=atmLineCntGrp, par=par, cardSpecific=cardSpecific, basisLines=basisLines, basisShelf=basisShelf, dsx3Framing=dsx3Framing, bbIfCnt=bbIfCnt, dsx1Line=dsx1Line, snaport=snaport, basisAsm=basisAsm, basis=basis)
