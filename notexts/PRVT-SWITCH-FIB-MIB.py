#
# PySNMP MIB module PRVT-SWITCH-FIB-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binos/PRVT-SWITCH-FIB-MIB
# Produced by pysmi-1.1.8 at Fri Jan 14 00:02:12 2022
# On host fv-az74-435 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint")
ipNetToMediaNetAddress, ipNetToMediaPhysAddress, ipNetToMediaIfIndex = mibBuilder.importSymbols("IP-MIB", "ipNetToMediaNetAddress", "ipNetToMediaPhysAddress", "ipNetToMediaIfIndex")
ipSwitch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "ipSwitch")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, iso, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, IpAddress, ObjectIdentity, Unsigned32, Bits, Counter32, Counter64, Integer32, NotificationType, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "iso", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "IpAddress", "ObjectIdentity", "Unsigned32", "Bits", "Counter32", "Counter64", "Integer32", "NotificationType", "TimeTicks")
MacAddress, TruthValue, TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TruthValue", "TextualConvention", "DisplayString", "RowStatus")
prvtSwitchFIBMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 1, 6, 3))
prvtSwitchFIBMib.setRevisions(('2008-01-01 00:00', '2005-02-18 00:00', '2003-05-08 00:00', '2002-05-21 09:59', '2001-01-21 09:59',))
if mibBuilder.loadTexts: prvtSwitchFIBMib.setLastUpdated('200801010000Z')
if mibBuilder.loadTexts: prvtSwitchFIBMib.setOrganization('BATM Advanced Communication')
prvtSwitchFIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 3, 0))
fib = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 3, 1))
prvtSwitchFIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 3, 3))
fibTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 6, 3, 1, 1), )
if mibBuilder.loadTexts: fibTable.setStatus('current')
fibEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 6, 3, 1, 1, 1), ).setIndexNames((0, "PRVT-SWITCH-FIB-MIB", "fibIP"), (0, "PRVT-SWITCH-FIB-MIB", "fibMask"))
if mibBuilder.loadTexts: fibEntry.setStatus('current')
fibIP = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 3, 1, 1, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibIP.setStatus('current')
fibMask = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 3, 1, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibMask.setStatus('current')
fibProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 3, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 16, 100))).clone(namedValues=NamedValues(("other", 1), ("direct", 2), ("static", 3), ("icmp", 4), ("egp", 5), ("ggp", 6), ("hello", 7), ("rip", 8), ("ospf", 13), ("bgp", 14), ("arp", 15), ("remote", 16), ("unknown", 100)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fibProtocol.setStatus('current')
fibNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 3, 1, 1, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fibNextHop.setStatus('current')
fibNextHopMac = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 3, 1, 1, 1, 5), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fibNextHopMac.setStatus('current')
fibVID = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 3, 1, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fibVID.setStatus('current')
fibOutPort = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 3, 1, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fibOutPort.setStatus('current')
fibPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 3, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fibPriority.setStatus('current')
fibDiscardabilty = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 3, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("discard", 1), ("nondiscard", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fibDiscardabilty.setStatus('current')
fibDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 3, 1, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fibDSCP.setStatus('current')
fibRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 6, 3, 1, 1, 1, 11), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fibRowStatus.setStatus('current')
newIP = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 6, 3, 0, 1)).setObjects(("IP-MIB", "ipNetToMediaIfIndex"), ("IP-MIB", "ipNetToMediaPhysAddress"), ("IP-MIB", "ipNetToMediaNetAddress"))
if mibBuilder.loadTexts: newIP.setStatus('current')
prvtSwitchFIBMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 6, 3, 3, 2))
prvtSwitchFIBNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 738, 1, 6, 3, 3, 2, 3)).setObjects(("PRVT-SWITCH-FIB-MIB", "newIP"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    prvtSwitchFIBNotificationGroup = prvtSwitchFIBNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("PRVT-SWITCH-FIB-MIB", fibPriority=fibPriority, newIP=newIP, fibDSCP=fibDSCP, fib=fib, prvtSwitchFIBConformance=prvtSwitchFIBConformance, prvtSwitchFIBMIBGroups=prvtSwitchFIBMIBGroups, fibProtocol=fibProtocol, prvtSwitchFIBNotifications=prvtSwitchFIBNotifications, fibDiscardabilty=fibDiscardabilty, prvtSwitchFIBNotificationGroup=prvtSwitchFIBNotificationGroup, fibVID=fibVID, fibEntry=fibEntry, fibTable=fibTable, fibIP=fibIP, fibRowStatus=fibRowStatus, fibNextHopMac=fibNextHopMac, prvtSwitchFIBMib=prvtSwitchFIBMib, fibNextHop=fibNextHop, PYSNMP_MODULE_ID=prvtSwitchFIBMib, fibMask=fibMask, fibOutPort=fibOutPort)
