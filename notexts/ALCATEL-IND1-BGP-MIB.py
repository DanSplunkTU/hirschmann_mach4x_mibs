#
# PySNMP MIB module ALCATEL-IND1-BGP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-BGP-MIB
# Produced by pysmi-1.1.8 at Thu Jan 13 23:55:51 2022
# On host fv-az74-435 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
routingIND1Bgp, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "routingIND1Bgp")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
InetAutonomousSystemNumber, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAutonomousSystemNumber")
Ipv6Address, = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Gauge32, Counter64, ObjectIdentity, IpAddress, Bits, NotificationType, MibIdentifier, Counter32, ModuleIdentity, TimeTicks, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Gauge32", "Counter64", "ObjectIdentity", "IpAddress", "Bits", "NotificationType", "MibIdentifier", "Counter32", "ModuleIdentity", "TimeTicks", "iso")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
alcatelIND1BGPMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1))
if mibBuilder.loadTexts: alcatelIND1BGPMIB.setLastUpdated('201010121800Z')
if mibBuilder.loadTexts: alcatelIND1BGPMIB.setOrganization('Alcatel-Lucent')
alcatelIND1BGPMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1))
if mibBuilder.loadTexts: alcatelIND1BGPMIBObjects.setStatus('current')
alcatelIND1BGPMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2))
if mibBuilder.loadTexts: alcatelIND1BGPMIBConformance.setStatus('current')
alcatelIND1BGPMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1BGPMIBGroups.setStatus('current')
alcatelIND1BGPMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1BGPMIBCompliances.setStatus('current')
alaBgpGlobal = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1))
alaBgpProtoStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpProtoStatus.setStatus('current')
alaBgpAutonomousSystemNumber = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 2), InetAutonomousSystemNumber().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpAutonomousSystemNumber.setStatus('current')
alaBgpRouterId = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 3), IpAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouterId.setStatus('current')
alaBgpIgpSynchStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpIgpSynchStatus.setStatus('current')
alaBgpMedAlways = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpMedAlways.setStatus('current')
alaBgpDefaultLocalPref = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpDefaultLocalPref.setStatus('current')
alaBgpMissingMed = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("worst", 1), ("best", 2))).clone('worst')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpMissingMed.setStatus('current')
alaBgpManualTag = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 8), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpManualTag.setStatus('current')
alaBgpConfedId = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 9), InetAutonomousSystemNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpConfedId.setStatus('current')
alaBgpDampening = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpDampening.setStatus('current')
alaBgpDampMaxFlapHistory = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1800)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpDampMaxFlapHistory.setStatus('current')
alaBgpFastExternalFailOver = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpFastExternalFailOver.setStatus('current')
alaBgpPeerChanges = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpPeerChanges.setStatus('current')
alaBgpVersion = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpVersion.setStatus('current')
alaBgpProtoOperState = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpProtoOperState.setStatus('current')
alaBgpMaxPeers = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpMaxPeers.setStatus('current')
alaBgpNumActiveRoutes = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpNumActiveRoutes.setStatus('current')
alaBgpNumEstabExternalPeers = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpNumEstabExternalPeers.setStatus('current')
alaBgpNumEstabInternalPeers = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpNumEstabInternalPeers.setStatus('current')
alaBgpNumPaths = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpNumPaths.setStatus('current')
alaBgpNumFeasiblePaths = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpNumFeasiblePaths.setStatus('current')
alaBgpNumDampenedPaths = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpNumDampenedPaths.setStatus('current')
alaBgpNumIgpSyncWaitPaths = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpNumIgpSyncWaitPaths.setStatus('current')
alaBgpNumPolicyChgPaths = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpNumPolicyChgPaths.setStatus('current')
alaBgpMultiPath = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpMultiPath.setStatus('current')
alaBgpRouteReflection = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpRouteReflection.setStatus('current')
alaBgpClusterId = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 27), IpAddress().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpClusterId.setStatus('current')
alaBgpDampeningClear = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1))).clone('clear')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpDampeningClear.setStatus('current')
alaBgpDampCutOff = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9999)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpDampCutOff.setStatus('current')
alaBgpDampReuse = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 9999)).clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpDampReuse.setStatus('current')
alaBgpDampCeil = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 9999)).clone(1600)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpDampCeil.setStatus('current')
alaBgpAspathCompare = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpAspathCompare.setStatus('current')
alaBgpAsOriginInterval = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpAsOriginInterval.setStatus('current')
alaBgpDampHalfLife = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpDampHalfLife.setStatus('current')
alaBgpGracefulRestart = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpGracefulRestart.setStatus('current')
alaBgpRestartInterval = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3600)).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpRestartInterval.setStatus('current')
alaBgpRestartStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notRestarting", 1), ("inProgress", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRestartStatus.setStatus('current')
alaBgpMultiProtocolIpv4 = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpMultiProtocolIpv4.setStatus('current')
alaBgpMultiProtocolIpv6 = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpMultiProtocolIpv6.setStatus('current')
alaBgpBfdStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpBfdStatus.setStatus('current')
alaBgpBfdAllNeighborStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpBfdAllNeighborStatus.setStatus('current')
alaBgpAsnFormat = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("asplain", 1), ("asdot", 2))).clone('asplain')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpAsnFormat.setStatus('current')
alaBgpClearAllNeighborStats = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1))).clone('clear')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpClearAllNeighborStats.setStatus('current')
alaBgpPeerTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2), )
if mibBuilder.loadTexts: alaBgpPeerTable.setStatus('current')
alaBgpPeerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-BGP-MIB", "alaBgpPeerAddr"))
if mibBuilder.loadTexts: alaBgpPeerEntry.setStatus('current')
alaBgpPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerAddr.setStatus('current')
alaBgpPeerAS = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 2), InetAutonomousSystemNumber().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerAS.setStatus('current')
alaBgpPeerPassive = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerPassive.setStatus('current')
alaBgpPeerName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 60))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerName.setStatus('current')
alaBgpPeerMultiHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerMultiHop.setStatus('current')
alaBgpPeerMaxPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(5000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerMaxPrefix.setStatus('current')
alaBgpPeerMaxPrefixWarnOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerMaxPrefixWarnOnly.setStatus('current')
alaBgpPeerNextHopSelf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerNextHopSelf.setStatus('current')
alaBgpPeerSoftReconfig = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerSoftReconfig.setStatus('current')
alaBgpPeerInSoftReset = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerInSoftReset.setStatus('current')
alaBgpPeerIpv4Unicast = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerIpv4Unicast.setStatus('current')
alaBgpPeerIpv4Multicast = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerIpv4Multicast.setStatus('current')
alaBgpPeerRcvdRtRefreshMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerRcvdRtRefreshMsgs.setStatus('current')
alaBgpPeerSentRtRefreshMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerSentRtRefreshMsgs.setStatus('current')
alaBgpPeerRouteMapOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerRouteMapOut.setStatus('current')
alaBgpPeerRouteMapIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 16), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerRouteMapIn.setStatus('current')
alaBgpPeerLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 17), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerLocalAddr.setStatus('current')
alaBgpPeerLastDownReason = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("userRequest", 1), ("connectionTimeout", 2), ("holdTimeout", 3), ("badMsg", 4), ("fsmUnexpectedEvent", 5), ("peerClosed", 6), ("peerNotify", 7), ("transportError", 8), ("none", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerLastDownReason.setStatus('current')
alaBgpPeerLastDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 19), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerLastDownTime.setStatus('current')
alaBgpPeerLastReadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 20), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerLastReadTime.setStatus('current')
alaBgpPeerRcvdNotifyMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerRcvdNotifyMsgs.setStatus('current')
alaBgpPeerSentNotifyMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerSentNotifyMsgs.setStatus('current')
alaBgpPeerLastSentNotifyReason = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32))).clone(namedValues=NamedValues(("msghdrNoSync", 1), ("msghdrBadLen", 2), ("msghdrBadType", 3), ("openUnsuppVersion", 4), ("openBadAs", 5), ("openBadId", 6), ("openUnsuppOption", 7), ("openAuthFail", 8), ("openBadHoldtime", 9), ("openUnsuppCapability", 10), ("updateMalformAttr", 11), ("updateUnsuppWknwnAttr", 12), ("updateMissingWknwnAttr", 13), ("updateBadAttrFlags", 14), ("updateBadAttrLen", 15), ("updateBadOrigin", 16), ("updateAsLoop", 17), ("updateBadNexthop", 18), ("updateBadOptAttr", 19), ("updateBadNet", 20), ("updateBadAspath", 21), ("holdTimeout", 22), ("fsmError", 23), ("ceaseMaxPrefixReached", 24), ("ceaseAdminShutdown", 25), ("ceasePeerDeconfigured", 26), ("ceaseAdminReset", 27), ("ceaseConnRejected", 28), ("ceaseOtherConfChange", 29), ("ceaseConnCollisionResolution", 30), ("ceaseOutOfResources", 31), ("none", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerLastSentNotifyReason.setStatus('current')
alaBgpPeerLastRecvNotifyReason = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32))).clone(namedValues=NamedValues(("msghdrNoSync", 1), ("msghdrBadLen", 2), ("msghdrBadType", 3), ("openUnsuppVersion", 4), ("openBadAs", 5), ("openBadId", 6), ("openUnsuppOption", 7), ("openAuthFail", 8), ("openBadHoldtime", 9), ("openUnsuppCapability", 10), ("updateMalformAttr", 11), ("updateUnsuppWknwnAttr", 12), ("updateMissingWknwnAttr", 13), ("updateBadAttrFlags", 14), ("updateBadAttrLen", 15), ("updateBadOrigin", 16), ("updateAsLoop", 17), ("updateBadNexthop", 18), ("updateBadOptAttr", 19), ("updateBadNet", 20), ("updateBadAspath", 21), ("holdTimeout", 22), ("fsmError", 23), ("ceaseMaxPrefixReached", 24), ("ceaseAdminShutdown", 25), ("ceasePeerDeconfigured", 26), ("ceaseAdminReset", 27), ("ceaseConnRejected", 28), ("ceaseOtherConfChange", 29), ("ceaseConnCollisionResolution", 30), ("ceaseOutOfResources", 31), ("none", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerLastRecvNotifyReason.setStatus('current')
alaBgpPeerRcvdPrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerRcvdPrefixes.setStatus('current')
alaBgpPeerDownTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerDownTransitions.setStatus('current')
alaBgpPeerType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerType.setStatus('current')
alaBgpPeerClearCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1))).clone('clear')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerClearCounter.setStatus('current')
alaBgpPeerAutoReStart = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerAutoReStart.setStatus('current')
alaBgpPeerClientStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerClientStatus.setStatus('current')
alaBgpPeerConfedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerConfedStatus.setStatus('current')
alaBgpPeerRemovePrivateAs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerRemovePrivateAs.setStatus('current')
alaBgpPeerTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerTTL.setStatus('current')
alaBgpPeerAspathListOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 34), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerAspathListOut.setStatus('current')
alaBgpPeerAspathListIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 35), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerAspathListIn.setStatus('current')
alaBgpPeerPrefixListOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 36), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerPrefixListOut.setStatus('current')
alaBgpPeerPrefixListIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 37), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerPrefixListIn.setStatus('current')
alaBgpPeerCommunityListOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 38), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerCommunityListOut.setStatus('current')
alaBgpPeerCommunityListIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 39), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerCommunityListIn.setStatus('current')
alaBgpPeerRestart = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("restart", 1))).clone('restart')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerRestart.setStatus('current')
alaBgpPeerDefaultOriginate = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerDefaultOriginate.setStatus('current')
alaBgpPeerReconfigureInBound = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reconfigure", 1))).clone('reconfigure')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerReconfigureInBound.setStatus('current')
alaBgpPeerReconfigureOutBound = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reconfigure", 1))).clone('reconfigure')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerReconfigureOutBound.setStatus('current')
alaBgpPeerMD5Key = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 44), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerMD5Key.setStatus('current')
alaBgpPeerMD5KeyEncrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 45), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerMD5KeyEncrypt.setStatus('current')
alaBgpPeerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 46), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerRowStatus.setStatus('current')
alaBgpPeerUpTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerUpTransitions.setStatus('current')
alaBgpPeerLastWriteTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 48), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerLastWriteTime.setStatus('current')
alaBgpPeerRcvdMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerRcvdMsgs.setStatus('current')
alaBgpPeerSentMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerSentMsgs.setStatus('current')
alaBgpPeerRcvdUpdMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerRcvdUpdMsgs.setStatus('current')
alaBgpPeerSentUpdMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerSentUpdMsgs.setStatus('current')
alaBgpPeerLastTransitionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 53), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerLastTransitionTime.setStatus('current')
alaBgpPeerLastUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 54), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerLastUpTime.setStatus('current')
alaBgpPeerBgpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 55), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerBgpId.setStatus('current')
alaBgpPeerLocalIntfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 56), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerLocalIntfName.setStatus('current')
alaBgpPeerRestartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 57), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerRestartTime.setStatus('current')
alaBgpPeerRestartState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notRestarting", 1), ("restarting", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerRestartState.setStatus('current')
alaBgpPeerRestartFwdState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notPreserved", 1), ("preserved", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerRestartFwdState.setStatus('current')
alaBgpPeerIpv6Unicast = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerIpv6Unicast.setStatus('current')
alaBgpPeerIpv6NextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 61), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerIpv6NextHop.setStatus('current')
alaBgpPeerLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 62), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerLocalPort.setStatus('current')
alaBgpPeerTcpWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeerTcpWindowSize.setStatus('current')
alaBgpPeerActivateIpv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerActivateIpv6.setStatus('current')
alaBgpPeerBfdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerBfdStatus.setStatus('current')
alaBgpPeerPrefix6ListOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 66), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerPrefix6ListOut.setStatus('current')
alaBgpPeerPrefix6ListIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 67), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerPrefix6ListIn.setStatus('current')
alaBgpPeerActivateIpv4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 2, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeerActivateIpv4.setStatus('current')
alaBgpAggrTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 3), )
if mibBuilder.loadTexts: alaBgpAggrTable.setStatus('current')
alaBgpAggrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-BGP-MIB", "alaBgpAggrAddr"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpAggrMask"))
if mibBuilder.loadTexts: alaBgpAggrEntry.setStatus('current')
alaBgpAggrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 3, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpAggrAddr.setStatus('current')
alaBgpAggrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpAggrMask.setStatus('current')
alaBgpAggrSummarize = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpAggrSummarize.setStatus('current')
alaBgpAggrSet = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpAggrSet.setStatus('current')
alaBgpAggrState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpAggrState.setStatus('current')
alaBgpAggrMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 3, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpAggrMetric.setStatus('current')
alaBgpAggrLocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 3, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpAggrLocalPref.setStatus('current')
alaBgpAggrCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 3, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpAggrCommunity.setStatus('current')
alaBgpAggrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 3, 1, 9), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpAggrRowStatus.setStatus('current')
alaBgpNetworkTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 4), )
if mibBuilder.loadTexts: alaBgpNetworkTable.setStatus('current')
alaBgpNetworkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-BGP-MIB", "alaBgpNetworkAddr"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpNetworkMask"))
if mibBuilder.loadTexts: alaBgpNetworkEntry.setStatus('current')
alaBgpNetworkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 4, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpNetworkAddr.setStatus('current')
alaBgpNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 4, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpNetworkMask.setStatus('current')
alaBgpNetworkState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpNetworkState.setStatus('current')
alaBgpNetworkMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 4, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpNetworkMetric.setStatus('current')
alaBgpNetworkLocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 4, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpNetworkLocalPref.setStatus('current')
alaBgpNetworkCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 4, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpNetworkCommunity.setStatus('current')
alaBgpNetworkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 4, 1, 7), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpNetworkRowStatus.setStatus('current')
alaBgpRouteTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5), )
if mibBuilder.loadTexts: alaBgpRouteTable.setStatus('current')
alaBgpRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1), ).setIndexNames((0, "ALCATEL-IND1-BGP-MIB", "alaBgpRouteAddr"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpRouteMask"))
if mibBuilder.loadTexts: alaBgpRouteEntry.setStatus('current')
alaBgpRouteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteAddr.setStatus('current')
alaBgpRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteMask.setStatus('current')
alaBgpRouteState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteState.setStatus('current')
alaBgpRoutePaths = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoutePaths.setStatus('current')
alaBgpRouteFeasiblePaths = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteFeasiblePaths.setStatus('current')
alaBgpRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteNextHop.setStatus('current')
alaBgpRouteIgpNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteIgpNextHop.setStatus('current')
alaBgpRouteIsHidden = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteIsHidden.setStatus('current')
alaBgpRouteIsAggregate = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteIsAggregate.setStatus('current')
alaBgpRouteIsAggregateContributor = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteIsAggregateContributor.setStatus('current')
alaBgpRouteAdvNeighbors = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteAdvNeighbors.setStatus('current')
alaBgpRouteIsAggregateList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteIsAggregateList.setStatus('current')
alaBgpRouteIsAggregateWait = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteIsAggregateWait.setStatus('current')
alaBgpRouteIsOnEbgpChgList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteIsOnEbgpChgList.setStatus('current')
alaBgpRouteIsOnIbgpClientChgList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteIsOnIbgpClientChgList.setStatus('current')
alaBgpRouteIsOnIbgpChgList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteIsOnIbgpChgList.setStatus('current')
alaBgpRouteIsOnLocalChgList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteIsOnLocalChgList.setStatus('current')
alaBgpRouteIsOnDeleteList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteIsOnDeleteList.setStatus('current')
alaBgpRouteIsDampened = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 5, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteIsDampened.setStatus('current')
alaBgpPathTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6), )
if mibBuilder.loadTexts: alaBgpPathTable.setStatus('current')
alaBgpPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1), ).setIndexNames((0, "ALCATEL-IND1-BGP-MIB", "alaBgpPathAddr"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpPathMask"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpPathPeerAddr"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpPathSrcProto"))
if mibBuilder.loadTexts: alaBgpPathEntry.setStatus('current')
alaBgpPathAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathAddr.setStatus('current')
alaBgpPathMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathMask.setStatus('current')
alaBgpPathPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathPeerAddr.setStatus('current')
alaBgpPathSrcProto = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("static", 3), ("directHost", 4), ("rip", 5), ("ospf", 6), ("isis", 7), ("ebgp", 9), ("ibgp", 10), ("aggregate", 11), ("network", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathSrcProto.setStatus('current')
alaBgpPathWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathWeight.setStatus('current')
alaBgpPathPref = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathPref.setStatus('current')
alaBgpPathState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("best", 1), ("feasible", 2), ("policyWait", 3), ("unSynchronized", 4), ("dampened", 5), ("none", 6), ("stale", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathState.setStatus('current')
alaBgpPathOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 9))).clone(namedValues=NamedValues(("igp", 1), ("egp", 2), ("incomplete", 3), ("none", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathOrigin.setStatus('current')
alaBgpPathNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 9), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathNextHop.setStatus('current')
alaBgpPathAs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathAs.setStatus('current')
alaBgpPathLocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathLocalPref.setStatus('current')
alaBgpPathMed = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 12), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathMed.setStatus('current')
alaBgpPathAtomic = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathAtomic.setStatus('current')
alaBgpPathAggregatorAs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 14), InetAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathAggregatorAs.setStatus('current')
alaBgpPathAggregatorAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathAggregatorAddr.setStatus('current')
alaBgpPathCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 16), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathCommunity.setStatus('current')
alaBgpPathUnknownAttr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathUnknownAttr.setStatus('current')
alaBgpPathOriginatorId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 18), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathOriginatorId.setStatus('current')
alaBgpPathClusterList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 19), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathClusterList.setStatus('current')
alaBgpPathPeerInetType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathPeerInetType.setStatus('current')
alaBgpPathPeerName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 6, 1, 21), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPathPeerName.setStatus('current')
alaBgpDampTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 7), )
if mibBuilder.loadTexts: alaBgpDampTable.setStatus('current')
alaBgpDampEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 7, 1), ).setIndexNames((0, "ALCATEL-IND1-BGP-MIB", "alaBgpDampAddr"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpDampMask"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpDampPeerAddr"))
if mibBuilder.loadTexts: alaBgpDampEntry.setStatus('current')
alaBgpDampAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 7, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpDampAddr.setStatus('current')
alaBgpDampMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 7, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpDampMask.setStatus('current')
alaBgpDampPeerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 7, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpDampPeerAddr.setStatus('current')
alaBgpDampFigureOfMerit = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpDampFigureOfMerit.setStatus('current')
alaBgpDampFlaps = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 7, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpDampFlaps.setStatus('current')
alaBgpDampDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 7, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpDampDuration.setStatus('current')
alaBgpDampLastUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 7, 1, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpDampLastUpdateTime.setStatus('current')
alaBgpDampReuseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 7, 1, 8), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpDampReuseTime.setStatus('current')
alaBgpDampClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1))).clone('clear')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaBgpDampClear.setStatus('current')
alaBgpPolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8))
alaBgpRouteMapTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1), )
if mibBuilder.loadTexts: alaBgpRouteMapTable.setStatus('current')
alaBgpRouteMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapName"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapInst"))
if mibBuilder.loadTexts: alaBgpRouteMapEntry.setStatus('current')
alaBgpRouteMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 70))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteMapName.setStatus('current')
alaBgpRouteMapInst = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRouteMapInst.setStatus('current')
alaBgpRouteMapAsPathMatchListId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapAsPathMatchListId.setStatus('current')
alaBgpRouteMapPrefixMatchListId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapPrefixMatchListId.setStatus('current')
alaBgpRouteMapCommunityMatchListId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapCommunityMatchListId.setStatus('current')
alaBgpRouteMapOrigin = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 255))).clone(namedValues=NamedValues(("igp", 1), ("egp", 2), ("incomplete", 3), ("none", 255))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapOrigin.setStatus('current')
alaBgpRouteMapLocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapLocalPref.setStatus('current')
alaBgpRouteMapLocalPrefMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("inc", 2), ("dec", 3), ("rep", 4))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapLocalPrefMode.setStatus('current')
alaBgpRouteMapMed = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapMed.setStatus('current')
alaBgpRouteMapMedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("inc", 2), ("dec", 3), ("rep", 4))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapMedMode.setStatus('current')
alaBgpRouteMapAsPrepend = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapAsPrepend.setStatus('current')
alaBgpRouteMapSetCommunityMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("add", 1), ("replace", 2))).clone('add')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapSetCommunityMode.setStatus('current')
alaBgpRouteMapCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapCommunity.setStatus('current')
alaBgpRouteMapMatchAsRegExp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapMatchAsRegExp.setStatus('current')
alaBgpRouteMapMatchPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 15), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapMatchPrefix.setStatus('current')
alaBgpRouteMapMatchMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 16), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapMatchMask.setStatus('current')
alaBgpRouteMapMatchCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 17), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapMatchCommunity.setStatus('current')
alaBgpRouteMapWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapWeight.setStatus('current')
alaBgpRouteMapAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2))).clone('permit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapAction.setStatus('current')
alaBgpRouteMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 20), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapRowStatus.setStatus('current')
alaBgpRouteMapPrefix6MatchListId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 21), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapPrefix6MatchListId.setStatus('current')
alaBgpRouteMapMatchPrefix6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 22), Ipv6Address().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapMatchPrefix6.setStatus('current')
alaBgpRouteMapMatchMaskLength6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapMatchMaskLength6.setStatus('current')
alaBgpRouteMapCommunityStrip = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 1, 1, 24), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpRouteMapCommunityStrip.setStatus('current')
alaBgpAspathMatchListTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 2), )
if mibBuilder.loadTexts: alaBgpAspathMatchListTable.setStatus('current')
alaBgpAspathMatchListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-BGP-MIB", "alaBgpAspathMatchListId"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpAspathMatchListRegExp"))
if mibBuilder.loadTexts: alaBgpAspathMatchListEntry.setStatus('current')
alaBgpAspathMatchListId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 70))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpAspathMatchListId.setStatus('current')
alaBgpAspathMatchListRegExp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 70))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpAspathMatchListRegExp.setStatus('current')
alaBgpAspathMatchListPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpAspathMatchListPriority.setStatus('current')
alaBgpAspathMatchListAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2))).clone('deny')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpAspathMatchListAction.setStatus('current')
alaBgpAspathMatchListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 2, 1, 5), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpAspathMatchListRowStatus.setStatus('current')
alaBgpAspathMatchListSubIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpAspathMatchListSubIndex.setStatus('current')
alaBgpPrefixMatchListTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 3), )
if mibBuilder.loadTexts: alaBgpPrefixMatchListTable.setStatus('current')
alaBgpPrefixMatchListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-BGP-MIB", "alaBgpPrefixMatchListId"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpPrefixMatchListAddr"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpPrefixMatchListMask"))
if mibBuilder.loadTexts: alaBgpPrefixMatchListEntry.setStatus('current')
alaBgpPrefixMatchListId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 3, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 70))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPrefixMatchListId.setStatus('current')
alaBgpPrefixMatchListAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPrefixMatchListAddr.setStatus('current')
alaBgpPrefixMatchListMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 3, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPrefixMatchListMask.setStatus('current')
alaBgpPrefixMatchListGE = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPrefixMatchListGE.setStatus('current')
alaBgpPrefixMatchListLE = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPrefixMatchListLE.setStatus('current')
alaBgpPrefixMatchListAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2))).clone('deny')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPrefixMatchListAction.setStatus('current')
alaBgpPrefixMatchListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 3, 1, 7), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPrefixMatchListRowStatus.setStatus('current')
alaBgpCommunityMatchListTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 4), )
if mibBuilder.loadTexts: alaBgpCommunityMatchListTable.setStatus('current')
alaBgpCommunityMatchListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-BGP-MIB", "alaBgpCommunityMatchListId"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpCommunityMatchListString"))
if mibBuilder.loadTexts: alaBgpCommunityMatchListEntry.setStatus('current')
alaBgpCommunityMatchListId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 4, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 70))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpCommunityMatchListId.setStatus('current')
alaBgpCommunityMatchListString = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 4, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 70))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpCommunityMatchListString.setStatus('current')
alaBgpCommunityMatchListPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpCommunityMatchListPriority.setStatus('current')
alaBgpCommunityMatchListType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("exact", 1), ("occur", 2))).clone('exact')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpCommunityMatchListType.setStatus('current')
alaBgpCommunityMatchListAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2))).clone('deny')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpCommunityMatchListAction.setStatus('current')
alaBgpCommunityMatchListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 4, 1, 6), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpCommunityMatchListRowStatus.setStatus('current')
alaBgpCommunityMatchListSubIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 4, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpCommunityMatchListSubIndex.setStatus('current')
alaBgpAspathPriMatchListTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 5), )
if mibBuilder.loadTexts: alaBgpAspathPriMatchListTable.setStatus('current')
alaBgpAspathPriMatchListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 5, 1), ).setIndexNames((0, "ALCATEL-IND1-BGP-MIB", "alaBgpAspathPriMatchListId"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpAspathPriMatchListPriority"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpAspathPriMatchListIntIdx"))
if mibBuilder.loadTexts: alaBgpAspathPriMatchListEntry.setStatus('current')
alaBgpAspathPriMatchListId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 5, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 70))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpAspathPriMatchListId.setStatus('current')
alaBgpAspathPriMatchListPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpAspathPriMatchListPriority.setStatus('current')
alaBgpAspathPriMatchListIntIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpAspathPriMatchListIntIdx.setStatus('current')
alaBgpAspathPriMatchListRegExp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 5, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 70))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpAspathPriMatchListRegExp.setStatus('current')
alaBgpAspathPriMatchListAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpAspathPriMatchListAction.setStatus('current')
alaBgpAspathPriMatchListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 5, 1, 6), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpAspathPriMatchListRowStatus.setStatus('current')
alaBgpCommunityPriMatchListTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 6), )
if mibBuilder.loadTexts: alaBgpCommunityPriMatchListTable.setStatus('current')
alaBgpCommunityPriMatchListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 6, 1), ).setIndexNames((0, "ALCATEL-IND1-BGP-MIB", "alaBgpCommunityPriMatchListId"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpCommunityPriMatchListPriority"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpCommunityPriMatchListIntIdx"))
if mibBuilder.loadTexts: alaBgpCommunityPriMatchListEntry.setStatus('current')
alaBgpCommunityPriMatchListId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 6, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 70))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpCommunityPriMatchListId.setStatus('current')
alaBgpCommunityPriMatchListPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpCommunityPriMatchListPriority.setStatus('current')
alaBgpCommunityPriMatchListIntIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpCommunityPriMatchListIntIdx.setStatus('current')
alaBgpCommunityPriMatchListString = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 6, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 70))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpCommunityPriMatchListString.setStatus('current')
alaBgpCommunityPriMatchListType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("exact", 1), ("occur", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpCommunityPriMatchListType.setStatus('current')
alaBgpCommunityPriMatchListAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpCommunityPriMatchListAction.setStatus('current')
alaBgpCommunityPriMatchListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 6, 1, 7), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpCommunityPriMatchListRowStatus.setStatus('current')
alaBgpPrefix6MatchListTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 7), )
if mibBuilder.loadTexts: alaBgpPrefix6MatchListTable.setStatus('current')
alaBgpPrefix6MatchListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 7, 1), ).setIndexNames((0, "ALCATEL-IND1-BGP-MIB", "alaBgpPrefix6MatchListId"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpPrefix6MatchListAddr"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpPrefix6MatchListAddrLength"))
if mibBuilder.loadTexts: alaBgpPrefix6MatchListEntry.setStatus('current')
alaBgpPrefix6MatchListId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 7, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 70)))
if mibBuilder.loadTexts: alaBgpPrefix6MatchListId.setStatus('current')
alaBgpPrefix6MatchListAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 7, 1, 2), Ipv6Address())
if mibBuilder.loadTexts: alaBgpPrefix6MatchListAddr.setStatus('current')
alaBgpPrefix6MatchListAddrLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 7, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: alaBgpPrefix6MatchListAddrLength.setStatus('current')
alaBgpPrefix6MatchListGE = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPrefix6MatchListGE.setStatus('current')
alaBgpPrefix6MatchListLE = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 7, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPrefix6MatchListLE.setStatus('current')
alaBgpPrefix6MatchListAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2))).clone('deny')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPrefix6MatchListAction.setStatus('current')
alaBgpPrefix6MatchListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 8, 7, 1, 7), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPrefix6MatchListRowStatus.setStatus('current')
alaBgpNetwork6Table = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 9), )
if mibBuilder.loadTexts: alaBgpNetwork6Table.setStatus('current')
alaBgpNetwork6Entry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 9, 1), ).setIndexNames((0, "ALCATEL-IND1-BGP-MIB", "alaBgpNetwork6Addr"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpNetwork6MaskLen"))
if mibBuilder.loadTexts: alaBgpNetwork6Entry.setStatus('current')
alaBgpNetwork6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 9, 1, 1), Ipv6Address().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpNetwork6Addr.setStatus('current')
alaBgpNetwork6MaskLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpNetwork6MaskLen.setStatus('current')
alaBgpNetwork6State = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpNetwork6State.setStatus('current')
alaBgpNetwork6Metric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 9, 1, 4), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpNetwork6Metric.setStatus('current')
alaBgpNetwork6LocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 9, 1, 5), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpNetwork6LocalPref.setStatus('current')
alaBgpNetwork6Community = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 9, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpNetwork6Community.setStatus('current')
alaBgpNetwork6RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 9, 1, 7), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpNetwork6RowStatus.setStatus('current')
alaBgpRoute6Table = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10), )
if mibBuilder.loadTexts: alaBgpRoute6Table.setStatus('current')
alaBgpRoute6Entry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1), ).setIndexNames((0, "ALCATEL-IND1-BGP-MIB", "alaBgpRoute6Addr"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpRoute6MaskLen"))
if mibBuilder.loadTexts: alaBgpRoute6Entry.setStatus('current')
alaBgpRoute6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1, 1), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoute6Addr.setStatus('current')
alaBgpRoute6MaskLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoute6MaskLen.setStatus('current')
alaBgpRoute6State = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoute6State.setStatus('current')
alaBgpRoute6Paths = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoute6Paths.setStatus('current')
alaBgpRoute6FeasiblePaths = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoute6FeasiblePaths.setStatus('current')
alaBgpRoute6NextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1, 6), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoute6NextHop.setStatus('current')
alaBgpRoute6IgpNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1, 7), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoute6IgpNextHop.setStatus('current')
alaBgpRoute6IsHidden = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoute6IsHidden.setStatus('current')
alaBgpRoute6IsAggregate = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoute6IsAggregate.setStatus('current')
alaBgpRoute6IsAggregateContributor = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoute6IsAggregateContributor.setStatus('current')
alaBgpRoute6AdvNeighbors = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoute6AdvNeighbors.setStatus('current')
alaBgpRoute6IsAggregateList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoute6IsAggregateList.setStatus('current')
alaBgpRoute6IsAggregateWait = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoute6IsAggregateWait.setStatus('current')
alaBgpRoute6IsOnEbgpChgList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoute6IsOnEbgpChgList.setStatus('current')
alaBgpRoute6IsOnIbgpClientChgList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoute6IsOnIbgpClientChgList.setStatus('current')
alaBgpRoute6IsOnIbgpChgList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoute6IsOnIbgpChgList.setStatus('current')
alaBgpRoute6IsOnLocalChgList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoute6IsOnLocalChgList.setStatus('current')
alaBgpRoute6IsOnDeleteList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoute6IsOnDeleteList.setStatus('current')
alaBgpRoute6IsDampened = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 10, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpRoute6IsDampened.setStatus('current')
alaBgpPath6Table = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11), )
if mibBuilder.loadTexts: alaBgpPath6Table.setStatus('current')
alaBgpPath6Entry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1), ).setIndexNames((0, "ALCATEL-IND1-BGP-MIB", "alaBgpPath6Addr"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpPath6MaskLen"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpPath6PeerBgpId"), (0, "ALCATEL-IND1-BGP-MIB", "alaBgpPath6SrcProto"))
if mibBuilder.loadTexts: alaBgpPath6Entry.setStatus('current')
alaBgpPath6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 1), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6Addr.setStatus('current')
alaBgpPath6MaskLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6MaskLen.setStatus('current')
alaBgpPath6PeerBgpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6PeerBgpId.setStatus('current')
alaBgpPath6SrcProto = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("static", 3), ("directHost", 4), ("rip", 5), ("ospf", 6), ("isis", 7), ("ebgp", 9), ("ibgp", 10), ("aggregate", 11), ("network", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6SrcProto.setStatus('current')
alaBgpPath6Weight = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6Weight.setStatus('current')
alaBgpPath6Pref = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6Pref.setStatus('current')
alaBgpPath6State = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("best", 1), ("feasible", 2), ("policyWait", 3), ("unSynchronized", 4), ("dampened", 5), ("none", 6), ("stale", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6State.setStatus('current')
alaBgpPath6Origin = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 9))).clone(namedValues=NamedValues(("igp", 1), ("egp", 2), ("incomplete", 3), ("none", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6Origin.setStatus('current')
alaBgpPath6NextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 9), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6NextHop.setStatus('current')
alaBgpPath6As = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6As.setStatus('current')
alaBgpPath6LocalPref = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6LocalPref.setStatus('current')
alaBgpPath6Med = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 12), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6Med.setStatus('current')
alaBgpPath6Atomic = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6Atomic.setStatus('current')
alaBgpPath6AggregatorAs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 14), InetAutonomousSystemNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6AggregatorAs.setStatus('current')
alaBgpPath6AggregatorAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 15), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6AggregatorAddr.setStatus('current')
alaBgpPath6Community = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 16), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6Community.setStatus('current')
alaBgpPath6UnknownAttr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6UnknownAttr.setStatus('current')
alaBgpPath6OriginatorId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 18), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6OriginatorId.setStatus('current')
alaBgpPath6ClusterList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 19), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6ClusterList.setStatus('current')
alaBgpPath6PeerName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 11, 1, 20), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPath6PeerName.setStatus('current')
alaBgpPeer6Table = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12), )
if mibBuilder.loadTexts: alaBgpPeer6Table.setStatus('current')
alaBgpPeer6Entry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1), ).setIndexNames((0, "ALCATEL-IND1-BGP-MIB", "alaBgpPeer6Addr"))
if mibBuilder.loadTexts: alaBgpPeer6Entry.setStatus('current')
alaBgpPeer6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 1), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6Addr.setStatus('current')
alaBgpPeer6AS = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 2), InetAutonomousSystemNumber().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6AS.setStatus('current')
alaBgpPeer6Passive = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6Passive.setStatus('current')
alaBgpPeer6Name = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 60))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6Name.setStatus('current')
alaBgpPeer6MultiHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6MultiHop.setStatus('current')
alaBgpPeer6MaxPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 6), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(5000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6MaxPrefix.setStatus('current')
alaBgpPeer6MaxPrefixWarnOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6MaxPrefixWarnOnly.setStatus('current')
alaBgpPeer6NextHopSelf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6NextHopSelf.setStatus('current')
alaBgpPeer6SoftReconfig = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6SoftReconfig.setStatus('current')
alaBgpPeer6InSoftReset = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6InSoftReset.setStatus('current')
alaBgpPeer6Ipv4Unicast = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6Ipv4Unicast.setStatus('current')
alaBgpPeer6Ipv4Multicast = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6Ipv4Multicast.setStatus('current')
alaBgpPeer6RcvdRtRefreshMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6RcvdRtRefreshMsgs.setStatus('current')
alaBgpPeer6SentRtRefreshMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6SentRtRefreshMsgs.setStatus('current')
alaBgpPeer6RouteMapOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6RouteMapOut.setStatus('current')
alaBgpPeer6RouteMapIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 16), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6RouteMapIn.setStatus('current')
alaBgpPeer6LocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 17), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6LocalAddr.setStatus('current')
alaBgpPeer6LastDownReason = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("userRequest", 1), ("connectionTimeout", 2), ("holdTimeout", 3), ("badMsg", 4), ("fsmUnexpectedEvent", 5), ("peerClosed", 6), ("peerNotify", 7), ("transportError", 8), ("none", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6LastDownReason.setStatus('current')
alaBgpPeer6LastDownTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 19), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6LastDownTime.setStatus('current')
alaBgpPeer6LastReadTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 20), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6LastReadTime.setStatus('current')
alaBgpPeer6RcvdNotifyMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6RcvdNotifyMsgs.setStatus('current')
alaBgpPeer6SentNotifyMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6SentNotifyMsgs.setStatus('current')
alaBgpPeer6LastSentNotifyReason = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32))).clone(namedValues=NamedValues(("msghdrNoSync", 1), ("msghdrBadLen", 2), ("msghdrBadType", 3), ("openUnsuppVersion", 4), ("openBadAs", 5), ("openBadId", 6), ("openUnsuppOption", 7), ("openAuthFail", 8), ("openBadHoldtime", 9), ("openUnsuppCapability", 10), ("updateMalformAttr", 11), ("updateUnsuppWknwnAttr", 12), ("updateMissingWknwnAttr", 13), ("updateBadAttrFlags", 14), ("updateBadAttrLen", 15), ("updateBadOrigin", 16), ("updateAsLoop", 17), ("updateBadNexthop", 18), ("updateBadOptAttr", 19), ("updateBadNet", 20), ("updateBadAspath", 21), ("holdTimeout", 22), ("fsmError", 23), ("ceaseMaxPrefixReached", 24), ("ceaseAdminShutdown", 25), ("ceasePeerDeconfigured", 26), ("ceaseAdminReset", 27), ("ceaseConnRejected", 28), ("ceaseOtherConfChange", 29), ("ceaseConnCollisionResolution", 30), ("ceaseOutOfResources", 31), ("none", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6LastSentNotifyReason.setStatus('current')
alaBgpPeer6LastRecvNotifyReason = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32))).clone(namedValues=NamedValues(("msghdrNoSync", 1), ("msghdrBadLen", 2), ("msghdrBadType", 3), ("openUnsuppVersion", 4), ("openBadAs", 5), ("openBadId", 6), ("openUnsuppOption", 7), ("openAuthFail", 8), ("openBadHoldtime", 9), ("openUnsuppCapability", 10), ("updateMalformAttr", 11), ("updateUnsuppWknwnAttr", 12), ("updateMissingWknwnAttr", 13), ("updateBadAttrFlags", 14), ("updateBadAttrLen", 15), ("updateBadOrigin", 16), ("updateAsLoop", 17), ("updateBadNexthop", 18), ("updateBadOptAttr", 19), ("updateBadNet", 20), ("updateBadAspath", 21), ("holdTimeout", 22), ("fsmError", 23), ("ceaseMaxPrefixReached", 24), ("ceaseAdminShutdown", 25), ("ceasePeerDeconfigured", 26), ("ceaseAdminReset", 27), ("ceaseConnRejected", 28), ("ceaseOtherConfChange", 29), ("ceaseConnCollisionResolution", 30), ("ceaseOutOfResources", 31), ("none", 32)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6LastRecvNotifyReason.setStatus('current')
alaBgpPeer6RcvdPrefixes = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6RcvdPrefixes.setStatus('current')
alaBgpPeer6DownTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6DownTransitions.setStatus('current')
alaBgpPeer6Type = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6Type.setStatus('current')
alaBgpPeer6ClearCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1))).clone('clear')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6ClearCounter.setStatus('current')
alaBgpPeer6AutoReStart = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6AutoReStart.setStatus('current')
alaBgpPeer6ClientStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6ClientStatus.setStatus('current')
alaBgpPeer6ConfedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6ConfedStatus.setStatus('current')
alaBgpPeer6RemovePrivateAs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6RemovePrivateAs.setStatus('current')
alaBgpPeer6TTL = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6TTL.setStatus('current')
alaBgpPeer6AspathListOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 34), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6AspathListOut.setStatus('current')
alaBgpPeer6AspathListIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 35), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6AspathListIn.setStatus('current')
alaBgpPeer6PrefixListOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 36), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6PrefixListOut.setStatus('current')
alaBgpPeer6PrefixListIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 37), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6PrefixListIn.setStatus('current')
alaBgpPeer6CommunityListOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 38), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6CommunityListOut.setStatus('current')
alaBgpPeer6CommunityListIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 39), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6CommunityListIn.setStatus('current')
alaBgpPeer6Restart = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("restart", 1))).clone('restart')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6Restart.setStatus('current')
alaBgpPeer6DefaultOriginate = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6DefaultOriginate.setStatus('current')
alaBgpPeer6ReconfigureInBound = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reconfigure", 1))).clone('reconfigure')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6ReconfigureInBound.setStatus('current')
alaBgpPeer6ReconfigureOutBound = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reconfigure", 1))).clone('reconfigure')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6ReconfigureOutBound.setStatus('current')
alaBgpPeer6MD5Key = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 44), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6MD5Key.setStatus('current')
alaBgpPeer6MD5KeyEncrypt = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 45), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6MD5KeyEncrypt.setStatus('current')
alaBgpPeer6RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 46), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6RowStatus.setStatus('current')
alaBgpPeer6UpTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6UpTransitions.setStatus('current')
alaBgpPeer6LastWriteTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 48), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6LastWriteTime.setStatus('current')
alaBgpPeer6RcvdMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6RcvdMsgs.setStatus('current')
alaBgpPeer6SentMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6SentMsgs.setStatus('current')
alaBgpPeer6RcvdUpdMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6RcvdUpdMsgs.setStatus('current')
alaBgpPeer6SentUpdMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6SentUpdMsgs.setStatus('current')
alaBgpPeer6LastTransitionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 53), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6LastTransitionTime.setStatus('current')
alaBgpPeer6LastUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 54), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6LastUpTime.setStatus('current')
alaBgpPeer6BgpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 55), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6BgpId.setStatus('current')
alaBgpPeer6LocalIntfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 56), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6LocalIntfName.setStatus('current')
alaBgpPeer6RestartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 57), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6RestartTime.setStatus('current')
alaBgpPeer6RestartState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notRestarting", 1), ("restarting", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6RestartState.setStatus('current')
alaBgpPeer6RestartFwdState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notPreserved", 1), ("preserved", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6RestartFwdState.setStatus('current')
alaBgpPeer6Ipv6Unicast = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6Ipv6Unicast.setStatus('current')
alaBgpPeer6HoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6HoldTime.setStatus('current')
alaBgpPeer6KeepAlive = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 21845), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6KeepAlive.setStatus('current')
alaBgpPeer6ConnRetryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6ConnRetryInterval.setStatus('current')
alaBgpPeer6HoldTimeConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(3, 65535), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6HoldTimeConfigured.setStatus('current')
alaBgpPeer6KeepAliveConfigured = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 21845), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6KeepAliveConfigured.setStatus('current')
alaBgpPeer6Ipv4NextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 66), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6Ipv4NextHop.setStatus('current')
alaBgpPeer6Ipv6NextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 67), Ipv6Address()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6Ipv6NextHop.setStatus('current')
alaBgpPeer6AdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("stop", 1), ("start", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6AdminStatus.setStatus('current')
alaBgpPeer6State = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 69), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("idle", 1), ("connect", 2), ("active", 3), ("opensent", 4), ("openconfirm", 5), ("established", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6State.setStatus('current')
alaBgpPeer6LocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 70), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6LocalPort.setStatus('current')
alaBgpPeer6TcpWindowSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 71), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaBgpPeer6TcpWindowSize.setStatus('current')
alaBgpPeer6ActivateIpv6 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 72), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6ActivateIpv6.setStatus('current')
alaBgpPeer6MinRouteAdvertisementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 73), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6MinRouteAdvertisementInterval.setStatus('current')
alaBgpPeer6Prefix6ListOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 74), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6Prefix6ListOut.setStatus('current')
alaBgpPeer6Prefix6ListIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 75), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 70))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6Prefix6ListIn.setStatus('current')
alaBgpPeer6ActivateIpv4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 76), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6ActivateIpv4.setStatus('current')
alaBgpPeer6BfdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 1, 12, 1, 77), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaBgpPeer6BfdStatus.setStatus('current')
alcatelIND1BGPMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-BGP-MIB", "alabgpMIBGlobalsGroup"), ("ALCATEL-IND1-BGP-MIB", "alabgpMIBPeerGroup"), ("ALCATEL-IND1-BGP-MIB", "alabgpMIBAggrGroup"), ("ALCATEL-IND1-BGP-MIB", "alabgpMIBNetworkGroup"), ("ALCATEL-IND1-BGP-MIB", "alabgpMIBRouteGroup"), ("ALCATEL-IND1-BGP-MIB", "alabgpMIBPathAttrGroup"), ("ALCATEL-IND1-BGP-MIB", "alabgpMIBDampGroup"), ("ALCATEL-IND1-BGP-MIB", "alabgpMIBRouteMapGroup"), ("ALCATEL-IND1-BGP-MIB", "alabgpMIBAspathListGroup"), ("ALCATEL-IND1-BGP-MIB", "alabgpMIBPrefixListGroup"), ("ALCATEL-IND1-BGP-MIB", "alabgpMIBCommunityListGroup"), ("ALCATEL-IND1-BGP-MIB", "alabgpMIBAspathPriListGroup"), ("ALCATEL-IND1-BGP-MIB", "alabgpMIBCommunityPriListGroup"), ("ALCATEL-IND1-BGP-MIB", "alabgpMIBNetwork6Group"), ("ALCATEL-IND1-BGP-MIB", "alabgpMIBRoute6Group"), ("ALCATEL-IND1-BGP-MIB", "alabgpMIBPath6AttrGroup"), ("ALCATEL-IND1-BGP-MIB", "alabgpMIBPeer6Group"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1BGPMIBCompliance = alcatelIND1BGPMIBCompliance.setStatus('current')
alabgpMIBGlobalsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-BGP-MIB", "alaBgpProtoStatus"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAutonomousSystemNumber"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouterId"), ("ALCATEL-IND1-BGP-MIB", "alaBgpIgpSynchStatus"), ("ALCATEL-IND1-BGP-MIB", "alaBgpMedAlways"), ("ALCATEL-IND1-BGP-MIB", "alaBgpDefaultLocalPref"), ("ALCATEL-IND1-BGP-MIB", "alaBgpMissingMed"), ("ALCATEL-IND1-BGP-MIB", "alaBgpManualTag"), ("ALCATEL-IND1-BGP-MIB", "alaBgpConfedId"), ("ALCATEL-IND1-BGP-MIB", "alaBgpDampening"), ("ALCATEL-IND1-BGP-MIB", "alaBgpDampHalfLife"), ("ALCATEL-IND1-BGP-MIB", "alaBgpDampMaxFlapHistory"), ("ALCATEL-IND1-BGP-MIB", "alaBgpFastExternalFailOver"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerChanges"), ("ALCATEL-IND1-BGP-MIB", "alaBgpVersion"), ("ALCATEL-IND1-BGP-MIB", "alaBgpProtoOperState"), ("ALCATEL-IND1-BGP-MIB", "alaBgpMaxPeers"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNumActiveRoutes"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNumEstabExternalPeers"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNumEstabInternalPeers"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNumPaths"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNumFeasiblePaths"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNumDampenedPaths"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNumIgpSyncWaitPaths"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNumPolicyChgPaths"), ("ALCATEL-IND1-BGP-MIB", "alaBgpMultiPath"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteReflection"), ("ALCATEL-IND1-BGP-MIB", "alaBgpClusterId"), ("ALCATEL-IND1-BGP-MIB", "alaBgpDampeningClear"), ("ALCATEL-IND1-BGP-MIB", "alaBgpDampCutOff"), ("ALCATEL-IND1-BGP-MIB", "alaBgpDampReuse"), ("ALCATEL-IND1-BGP-MIB", "alaBgpDampCeil"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAspathCompare"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAsOriginInterval"), ("ALCATEL-IND1-BGP-MIB", "alaBgpMultiProtocolIpv4"), ("ALCATEL-IND1-BGP-MIB", "alaBgpMultiProtocolIpv6"), ("ALCATEL-IND1-BGP-MIB", "alaBgpBfdStatus"), ("ALCATEL-IND1-BGP-MIB", "alaBgpBfdAllNeighborStatus"), ("ALCATEL-IND1-BGP-MIB", "alaBgpGracefulRestart"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRestartInterval"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRestartStatus"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAsnFormat"), ("ALCATEL-IND1-BGP-MIB", "alaBgpClearAllNeighborStats"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alabgpMIBGlobalsGroup = alabgpMIBGlobalsGroup.setStatus('current')
alabgpMIBPeerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-BGP-MIB", "alaBgpPeerAddr"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerAS"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerPassive"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerName"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerMultiHop"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerMaxPrefix"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerMaxPrefixWarnOnly"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerNextHopSelf"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerSoftReconfig"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerInSoftReset"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerIpv4Unicast"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerIpv4Multicast"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerRcvdRtRefreshMsgs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerSentRtRefreshMsgs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerRouteMapOut"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerRouteMapIn"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerLocalAddr"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerLastDownReason"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerLastDownTime"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerLastReadTime"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerRcvdNotifyMsgs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerSentNotifyMsgs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerLastSentNotifyReason"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerLastRecvNotifyReason"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerRcvdPrefixes"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerDownTransitions"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerType"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerAutoReStart"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerClientStatus"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerConfedStatus"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerRemovePrivateAs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerClearCounter"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerTTL"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerAspathListOut"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerAspathListIn"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerPrefixListOut"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerPrefixListIn"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerCommunityListOut"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerCommunityListIn"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerRestart"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerDefaultOriginate"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerReconfigureInBound"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerReconfigureOutBound"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerMD5Key"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerMD5KeyEncrypt"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerRowStatus"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerUpTransitions"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerLastWriteTime"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerRcvdMsgs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerSentMsgs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerRcvdUpdMsgs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerSentUpdMsgs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerIpv6Unicast"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerIpv6NextHop"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerLocalPort"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerTcpWindowSize"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerActivateIpv6"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerBfdStatus"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerPrefix6ListOut"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerPrefix6ListIn"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerActivateIpv4"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alabgpMIBPeerGroup = alabgpMIBPeerGroup.setStatus('current')
alabgpMIBAggrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-BGP-MIB", "alaBgpAggrAddr"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAggrMask"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAggrSummarize"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAggrSet"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAggrState"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAggrMetric"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAggrLocalPref"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAggrCommunity"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAggrRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alabgpMIBAggrGroup = alabgpMIBAggrGroup.setStatus('current')
alabgpMIBNetworkGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-BGP-MIB", "alaBgpNetworkAddr"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNetworkMask"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNetworkState"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNetworkMetric"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNetworkLocalPref"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNetworkCommunity"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNetworkRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alabgpMIBNetworkGroup = alabgpMIBNetworkGroup.setStatus('current')
alabgpMIBRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-BGP-MIB", "alaBgpRouteAddr"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMask"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteState"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRoutePaths"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteFeasiblePaths"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteNextHop"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteIgpNextHop"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteIsHidden"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteIsAggregate"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteIsAggregateContributor"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteAdvNeighbors"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteIsAggregateList"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteIsAggregateWait"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteIsOnEbgpChgList"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteIsOnIbgpClientChgList"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteIsOnIbgpChgList"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteIsOnLocalChgList"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteIsOnDeleteList"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteIsDampened"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alabgpMIBRouteGroup = alabgpMIBRouteGroup.setStatus('current')
alabgpMIBPathAttrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-BGP-MIB", "alaBgpPathAddr"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathMask"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathPeerAddr"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathSrcProto"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathWeight"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathPref"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathState"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathOrigin"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathNextHop"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathAs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathLocalPref"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathMed"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathAtomic"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathAggregatorAs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathAggregatorAddr"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathCommunity"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathUnknownAttr"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathOriginatorId"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathClusterList"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathPeerInetType"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPathPeerName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alabgpMIBPathAttrGroup = alabgpMIBPathAttrGroup.setStatus('current')
alabgpMIBDampGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 1, 7)).setObjects(("ALCATEL-IND1-BGP-MIB", "alaBgpDampAddr"), ("ALCATEL-IND1-BGP-MIB", "alaBgpDampMask"), ("ALCATEL-IND1-BGP-MIB", "alaBgpDampPeerAddr"), ("ALCATEL-IND1-BGP-MIB", "alaBgpDampFigureOfMerit"), ("ALCATEL-IND1-BGP-MIB", "alaBgpDampFlaps"), ("ALCATEL-IND1-BGP-MIB", "alaBgpDampDuration"), ("ALCATEL-IND1-BGP-MIB", "alaBgpDampLastUpdateTime"), ("ALCATEL-IND1-BGP-MIB", "alaBgpDampReuseTime"), ("ALCATEL-IND1-BGP-MIB", "alaBgpDampClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alabgpMIBDampGroup = alabgpMIBDampGroup.setStatus('current')
alabgpMIBRouteMapGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 1, 8)).setObjects(("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapName"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapInst"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapAsPathMatchListId"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapPrefixMatchListId"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapCommunityMatchListId"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapOrigin"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapLocalPref"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapLocalPrefMode"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapMed"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapMedMode"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapAsPrepend"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapSetCommunityMode"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapCommunity"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapMatchAsRegExp"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapMatchPrefix"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapMatchMask"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapMatchCommunity"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapWeight"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapAction"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapRowStatus"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapPrefix6MatchListId"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapMatchPrefix6"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapMatchMaskLength6"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRouteMapCommunityStrip"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alabgpMIBRouteMapGroup = alabgpMIBRouteMapGroup.setStatus('current')
alabgpMIBAspathListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 1, 9)).setObjects(("ALCATEL-IND1-BGP-MIB", "alaBgpAspathMatchListId"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAspathMatchListRegExp"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAspathMatchListPriority"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAspathMatchListAction"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAspathMatchListRowStatus"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAspathMatchListSubIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alabgpMIBAspathListGroup = alabgpMIBAspathListGroup.setStatus('current')
alabgpMIBPrefixListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 1, 10)).setObjects(("ALCATEL-IND1-BGP-MIB", "alaBgpPrefixMatchListId"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPrefixMatchListAddr"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPrefixMatchListMask"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPrefixMatchListGE"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPrefixMatchListLE"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPrefixMatchListAction"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPrefixMatchListRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alabgpMIBPrefixListGroup = alabgpMIBPrefixListGroup.setStatus('current')
alabgpMIBCommunityListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 1, 11)).setObjects(("ALCATEL-IND1-BGP-MIB", "alaBgpCommunityMatchListId"), ("ALCATEL-IND1-BGP-MIB", "alaBgpCommunityMatchListString"), ("ALCATEL-IND1-BGP-MIB", "alaBgpCommunityMatchListPriority"), ("ALCATEL-IND1-BGP-MIB", "alaBgpCommunityMatchListType"), ("ALCATEL-IND1-BGP-MIB", "alaBgpCommunityMatchListAction"), ("ALCATEL-IND1-BGP-MIB", "alaBgpCommunityMatchListRowStatus"), ("ALCATEL-IND1-BGP-MIB", "alaBgpCommunityMatchListSubIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alabgpMIBCommunityListGroup = alabgpMIBCommunityListGroup.setStatus('current')
alabgpMIBAspathPriListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 1, 12)).setObjects(("ALCATEL-IND1-BGP-MIB", "alaBgpAspathPriMatchListId"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAspathPriMatchListPriority"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAspathPriMatchListIntIdx"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAspathPriMatchListRegExp"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAspathPriMatchListAction"), ("ALCATEL-IND1-BGP-MIB", "alaBgpAspathPriMatchListRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alabgpMIBAspathPriListGroup = alabgpMIBAspathPriListGroup.setStatus('current')
alabgpMIBCommunityPriListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 1, 13)).setObjects(("ALCATEL-IND1-BGP-MIB", "alaBgpCommunityPriMatchListId"), ("ALCATEL-IND1-BGP-MIB", "alaBgpCommunityPriMatchListPriority"), ("ALCATEL-IND1-BGP-MIB", "alaBgpCommunityPriMatchListIntIdx"), ("ALCATEL-IND1-BGP-MIB", "alaBgpCommunityPriMatchListString"), ("ALCATEL-IND1-BGP-MIB", "alaBgpCommunityPriMatchListType"), ("ALCATEL-IND1-BGP-MIB", "alaBgpCommunityPriMatchListAction"), ("ALCATEL-IND1-BGP-MIB", "alaBgpCommunityPriMatchListRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alabgpMIBCommunityPriListGroup = alabgpMIBCommunityPriListGroup.setStatus('current')
alabgpMIBNetwork6Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 1, 14)).setObjects(("ALCATEL-IND1-BGP-MIB", "alaBgpNetwork6Addr"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNetwork6MaskLen"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNetwork6State"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNetwork6Metric"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNetwork6LocalPref"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNetwork6Community"), ("ALCATEL-IND1-BGP-MIB", "alaBgpNetwork6RowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alabgpMIBNetwork6Group = alabgpMIBNetwork6Group.setStatus('current')
alabgpMIBRoute6Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 1, 15)).setObjects(("ALCATEL-IND1-BGP-MIB", "alaBgpRoute6Addr"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRoute6MaskLen"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRoute6State"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRoute6Paths"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRoute6FeasiblePaths"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRoute6NextHop"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRoute6IgpNextHop"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRoute6IsHidden"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRoute6IsAggregate"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRoute6IsAggregateContributor"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRoute6AdvNeighbors"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRoute6IsAggregateList"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRoute6IsAggregateWait"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRoute6IsOnEbgpChgList"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRoute6IsOnIbgpClientChgList"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRoute6IsOnIbgpChgList"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRoute6IsOnLocalChgList"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRoute6IsOnDeleteList"), ("ALCATEL-IND1-BGP-MIB", "alaBgpRoute6IsDampened"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alabgpMIBRoute6Group = alabgpMIBRoute6Group.setStatus('current')
alabgpMIBPath6AttrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 1, 16)).setObjects(("ALCATEL-IND1-BGP-MIB", "alaBgpPath6Addr"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPath6MaskLen"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPath6PeerBgpId"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPath6SrcProto"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPath6Weight"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPath6Pref"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPath6State"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPath6Origin"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPath6NextHop"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPath6As"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPath6LocalPref"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPath6Med"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPath6Atomic"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPath6AggregatorAs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPath6AggregatorAddr"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPath6Community"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPath6UnknownAttr"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPath6OriginatorId"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPath6ClusterList"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPath6PeerName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alabgpMIBPath6AttrGroup = alabgpMIBPath6AttrGroup.setStatus('current')
alabgpMIBPeer6Group = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 1, 17)).setObjects(("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6Addr"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6AS"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6Passive"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6Name"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6MultiHop"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6MaxPrefix"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6MaxPrefixWarnOnly"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6NextHopSelf"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6SoftReconfig"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6InSoftReset"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6Ipv4Unicast"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6Ipv4Multicast"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6RcvdRtRefreshMsgs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6SentRtRefreshMsgs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6RouteMapOut"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6RouteMapIn"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6LocalAddr"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6LastDownReason"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6LastDownTime"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6LastReadTime"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6RcvdNotifyMsgs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6SentNotifyMsgs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6LastSentNotifyReason"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6LastRecvNotifyReason"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6RcvdPrefixes"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6DownTransitions"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6Type"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6AutoReStart"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6ClientStatus"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6ConfedStatus"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6RemovePrivateAs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6ClearCounter"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6TTL"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6AspathListOut"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6AspathListIn"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6PrefixListOut"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6PrefixListIn"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6CommunityListOut"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6CommunityListIn"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6Restart"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6DefaultOriginate"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6ReconfigureInBound"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6ReconfigureOutBound"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6MD5Key"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6MD5KeyEncrypt"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6RowStatus"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6UpTransitions"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6LastWriteTime"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6RcvdMsgs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6SentMsgs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6RcvdUpdMsgs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6SentUpdMsgs"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6Ipv6Unicast"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6HoldTime"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6KeepAlive"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6ConnRetryInterval"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6HoldTimeConfigured"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6KeepAliveConfigured"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6Ipv4NextHop"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6Ipv6NextHop"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6AdminStatus"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6State"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6LocalPort"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6TcpWindowSize"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6ActivateIpv6"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6MinRouteAdvertisementInterval"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6Prefix6ListOut"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6Prefix6ListIn"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6BgpId"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6LastTransitionTime"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6LastUpTime"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6LocalIntfName"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6RestartFwdState"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6RestartState"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6RestartTime"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerBgpId"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerLastTransitionTime"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerLastUpTime"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerLocalIntfName"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerRestartTime"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerRestartState"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerRestartFwdState"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerIpv6Unicast"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerIpv6NextHop"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerLocalPort"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerTcpWindowSize"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerActivateIpv6"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerBfdStatus"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerPrefix6ListOut"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeerPrefix6ListIn"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6ActivateIpv4"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPeer6BfdStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alabgpMIBPeer6Group = alabgpMIBPeer6Group.setStatus('current')
alaBgpPrefix6MatchListEntryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 5, 1, 2, 1, 18)).setObjects(("ALCATEL-IND1-BGP-MIB", "alaBgpPrefix6MatchListGE"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPrefix6MatchListLE"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPrefix6MatchListAction"), ("ALCATEL-IND1-BGP-MIB", "alaBgpPrefix6MatchListRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaBgpPrefix6MatchListEntryGroup = alaBgpPrefix6MatchListEntryGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-BGP-MIB", alaBgpCommunityMatchListEntry=alaBgpCommunityMatchListEntry, alaBgpPathPeerName=alaBgpPathPeerName, alaBgpPeer6MultiHop=alaBgpPeer6MultiHop, alaBgpDampAddr=alaBgpDampAddr, alaBgpPeerRcvdRtRefreshMsgs=alaBgpPeerRcvdRtRefreshMsgs, alaBgpAggrEntry=alaBgpAggrEntry, alaBgpAspathMatchListEntry=alaBgpAspathMatchListEntry, alaBgpManualTag=alaBgpManualTag, alaBgpPrefix6MatchListAction=alaBgpPrefix6MatchListAction, alaBgpRouteMapAsPathMatchListId=alaBgpRouteMapAsPathMatchListId, alaBgpRouteAddr=alaBgpRouteAddr, alaBgpPath6PeerBgpId=alaBgpPath6PeerBgpId, alaBgpCommunityMatchListId=alaBgpCommunityMatchListId, alaBgpPathPref=alaBgpPathPref, alaBgpPeerTTL=alaBgpPeerTTL, alaBgpNumIgpSyncWaitPaths=alaBgpNumIgpSyncWaitPaths, alabgpMIBAspathPriListGroup=alabgpMIBAspathPriListGroup, alaBgpPeerClearCounter=alaBgpPeerClearCounter, alaBgpGracefulRestart=alaBgpGracefulRestart, alaBgpPrefix6MatchListAddrLength=alaBgpPrefix6MatchListAddrLength, alaBgpPeerBfdStatus=alaBgpPeerBfdStatus, alaBgpPeer6HoldTime=alaBgpPeer6HoldTime, alaBgpPrefix6MatchListLE=alaBgpPrefix6MatchListLE, alaBgpPeer6LastReadTime=alaBgpPeer6LastReadTime, alaBgpPeer6Ipv6Unicast=alaBgpPeer6Ipv6Unicast, alaBgpPeer6MaxPrefix=alaBgpPeer6MaxPrefix, alaBgpPath6Community=alaBgpPath6Community, alaBgpPeer6Name=alaBgpPeer6Name, alaBgpRouteMapMatchMask=alaBgpRouteMapMatchMask, alaBgpRouteFeasiblePaths=alaBgpRouteFeasiblePaths, alaBgpRoute6IsOnIbgpChgList=alaBgpRoute6IsOnIbgpChgList, alaBgpPeerName=alaBgpPeerName, alaBgpPathState=alaBgpPathState, alaBgpPrefixMatchListEntry=alaBgpPrefixMatchListEntry, alaBgpAspathPriMatchListEntry=alaBgpAspathPriMatchListEntry, alaBgpRoute6Paths=alaBgpRoute6Paths, alaBgpPeer6RcvdPrefixes=alaBgpPeer6RcvdPrefixes, alaBgpPeerLastSentNotifyReason=alaBgpPeerLastSentNotifyReason, alaBgpAggrState=alaBgpAggrState, alaBgpPrefix6MatchListId=alaBgpPrefix6MatchListId, alaBgpPeer6LocalPort=alaBgpPeer6LocalPort, alabgpMIBCommunityPriListGroup=alabgpMIBCommunityPriListGroup, alaBgpPeer6PrefixListIn=alaBgpPeer6PrefixListIn, alaBgpDampPeerAddr=alaBgpDampPeerAddr, alaBgpPathSrcProto=alaBgpPathSrcProto, alaBgpPeerLastTransitionTime=alaBgpPeerLastTransitionTime, alaBgpPeerSentNotifyMsgs=alaBgpPeerSentNotifyMsgs, alaBgpDampClear=alaBgpDampClear, alaBgpPathCommunity=alaBgpPathCommunity, alaBgpCommunityPriMatchListId=alaBgpCommunityPriMatchListId, alaBgpPeerLastDownReason=alaBgpPeerLastDownReason, alaBgpBfdStatus=alaBgpBfdStatus, alaBgpRouteReflection=alaBgpRouteReflection, alaBgpRoute6IsOnDeleteList=alaBgpRoute6IsOnDeleteList, alaBgpRouteMapEntry=alaBgpRouteMapEntry, alaBgpRouteMapAsPrepend=alaBgpRouteMapAsPrepend, alaBgpPeer6RemovePrivateAs=alaBgpPeer6RemovePrivateAs, alaBgpNetworkLocalPref=alaBgpNetworkLocalPref, alaBgpNetworkCommunity=alaBgpNetworkCommunity, alaBgpAspathMatchListId=alaBgpAspathMatchListId, alaBgpPrefix6MatchListEntryGroup=alaBgpPrefix6MatchListEntryGroup, alaBgpAutonomousSystemNumber=alaBgpAutonomousSystemNumber, alaBgpMedAlways=alaBgpMedAlways, alaBgpPeerSoftReconfig=alaBgpPeerSoftReconfig, alabgpMIBPathAttrGroup=alabgpMIBPathAttrGroup, alaBgpRouteMapMatchPrefix6=alaBgpRouteMapMatchPrefix6, alaBgpPeer6TcpWindowSize=alaBgpPeer6TcpWindowSize, alaBgpRouteMapMed=alaBgpRouteMapMed, alaBgpRouteIsAggregateWait=alaBgpRouteIsAggregateWait, alaBgpNetwork6LocalPref=alaBgpNetwork6LocalPref, alabgpMIBAggrGroup=alabgpMIBAggrGroup, alaBgpNumEstabInternalPeers=alaBgpNumEstabInternalPeers, alaBgpPeer6CommunityListOut=alaBgpPeer6CommunityListOut, alaBgpPathOrigin=alaBgpPathOrigin, alaBgpCommunityMatchListString=alaBgpCommunityMatchListString, alaBgpCommunityPriMatchListIntIdx=alaBgpCommunityPriMatchListIntIdx, alaBgpPeer6Ipv4NextHop=alaBgpPeer6Ipv4NextHop, alaBgpRoute6IsDampened=alaBgpRoute6IsDampened, alaBgpRouteIsDampened=alaBgpRouteIsDampened, alaBgpRoute6IsOnEbgpChgList=alaBgpRoute6IsOnEbgpChgList, alaBgpPeerTcpWindowSize=alaBgpPeerTcpWindowSize, alaBgpPathAddr=alaBgpPathAddr, alaBgpRouteMapPrefix6MatchListId=alaBgpRouteMapPrefix6MatchListId, alaBgpPathLocalPref=alaBgpPathLocalPref, alaBgpPeer6Ipv6NextHop=alaBgpPeer6Ipv6NextHop, alaBgpPath6Table=alaBgpPath6Table, alaBgpPeerMaxPrefixWarnOnly=alaBgpPeerMaxPrefixWarnOnly, alaBgpRoute6IsHidden=alaBgpRoute6IsHidden, alaBgpAggrSummarize=alaBgpAggrSummarize, alaBgpPeerLastReadTime=alaBgpPeerLastReadTime, alaBgpRouteTable=alaBgpRouteTable, alaBgpRoute6Entry=alaBgpRoute6Entry, alaBgpPeerPrefix6ListOut=alaBgpPeerPrefix6ListOut, alaBgpAggrAddr=alaBgpAggrAddr, alaBgpRoute6IsAggregate=alaBgpRoute6IsAggregate, alabgpMIBRoute6Group=alabgpMIBRoute6Group, alaBgpAggrMask=alaBgpAggrMask, alaBgpDefaultLocalPref=alaBgpDefaultLocalPref, alaBgpRouteMapLocalPref=alaBgpRouteMapLocalPref, alaBgpBfdAllNeighborStatus=alaBgpBfdAllNeighborStatus, alaBgpPathClusterList=alaBgpPathClusterList, alaBgpPeer6State=alaBgpPeer6State, alaBgpPrefixMatchListGE=alaBgpPrefixMatchListGE, alaBgpRoute6Addr=alaBgpRoute6Addr, alaBgpPathAs=alaBgpPathAs, alaBgpNetworkMask=alaBgpNetworkMask, alaBgpAggrCommunity=alaBgpAggrCommunity, alaBgpCommunityMatchListRowStatus=alaBgpCommunityMatchListRowStatus, alaBgpRestartStatus=alaBgpRestartStatus, alabgpMIBRouteGroup=alabgpMIBRouteGroup, alaBgpDampLastUpdateTime=alaBgpDampLastUpdateTime, alaBgpRouteMapLocalPrefMode=alaBgpRouteMapLocalPrefMode, alaBgpPath6Addr=alaBgpPath6Addr, alaBgpRouteMapMatchAsRegExp=alaBgpRouteMapMatchAsRegExp, alcatelIND1BGPMIBGroups=alcatelIND1BGPMIBGroups, alaBgpPrefixMatchListRowStatus=alaBgpPrefixMatchListRowStatus, alaBgpPath6Origin=alaBgpPath6Origin, alaBgpPeerAddr=alaBgpPeerAddr, alaBgpPeerBgpId=alaBgpPeerBgpId, alaBgpPathNextHop=alaBgpPathNextHop, alaBgpPrefix6MatchListRowStatus=alaBgpPrefix6MatchListRowStatus, alaBgpRouteMapMatchCommunity=alaBgpRouteMapMatchCommunity, alaBgpPeer6Passive=alaBgpPeer6Passive, alaBgpPeer6AspathListIn=alaBgpPeer6AspathListIn, alaBgpPeerLastDownTime=alaBgpPeerLastDownTime, alaBgpRouteNextHop=alaBgpRouteNextHop, alaBgpPeerLastRecvNotifyReason=alaBgpPeerLastRecvNotifyReason, alaBgpPeer6PrefixListOut=alaBgpPeer6PrefixListOut, alaBgpIgpSynchStatus=alaBgpIgpSynchStatus, alaBgpCommunityPriMatchListType=alaBgpCommunityPriMatchListType, alaBgpRouteIgpNextHop=alaBgpRouteIgpNextHop, alaBgpAspathMatchListSubIndex=alaBgpAspathMatchListSubIndex, alaBgpPeer6MinRouteAdvertisementInterval=alaBgpPeer6MinRouteAdvertisementInterval, alaBgpPeer6RowStatus=alaBgpPeer6RowStatus, alaBgpPeer6MD5KeyEncrypt=alaBgpPeer6MD5KeyEncrypt, alaBgpPeerType=alaBgpPeerType, alaBgpPeer6LastTransitionTime=alaBgpPeer6LastTransitionTime, alaBgpPath6AggregatorAddr=alaBgpPath6AggregatorAddr, alaBgpNetworkEntry=alaBgpNetworkEntry, alabgpMIBPeer6Group=alabgpMIBPeer6Group, alaBgpPeer6Restart=alaBgpPeer6Restart, alaBgpRouteAdvNeighbors=alaBgpRouteAdvNeighbors, alaBgpPeerDefaultOriginate=alaBgpPeerDefaultOriginate, alaBgpPathOriginatorId=alaBgpPathOriginatorId, alaBgpPath6LocalPref=alaBgpPath6LocalPref, alaBgpRouteMapAction=alaBgpRouteMapAction, alaBgpPath6Atomic=alaBgpPath6Atomic, alaBgpPeer6Table=alaBgpPeer6Table, alaBgpCommunityPriMatchListRowStatus=alaBgpCommunityPriMatchListRowStatus, alaBgpPeerSentUpdMsgs=alaBgpPeerSentUpdMsgs, alaBgpPeerCommunityListOut=alaBgpPeerCommunityListOut, alaBgpAspathMatchListTable=alaBgpAspathMatchListTable, alaBgpProtoOperState=alaBgpProtoOperState, alaBgpDampDuration=alaBgpDampDuration, alaBgpPeer6Addr=alaBgpPeer6Addr, alaBgpRouteMapRowStatus=alaBgpRouteMapRowStatus, alaBgpPath6AggregatorAs=alaBgpPath6AggregatorAs, alaBgpPeer6LocalIntfName=alaBgpPeer6LocalIntfName, alaBgpPeerPassive=alaBgpPeerPassive, alaBgpDampMask=alaBgpDampMask, alaBgpMultiProtocolIpv4=alaBgpMultiProtocolIpv4, alaBgpPathAggregatorAs=alaBgpPathAggregatorAs, alaBgpRouteMapInst=alaBgpRouteMapInst, alaBgpPeerNextHopSelf=alaBgpPeerNextHopSelf, alaBgpPeerActivateIpv4=alaBgpPeerActivateIpv4, alaBgpRouteEntry=alaBgpRouteEntry, alaBgpRoute6Table=alaBgpRoute6Table, alaBgpPeer6InSoftReset=alaBgpPeer6InSoftReset, alaBgpPathEntry=alaBgpPathEntry, alaBgpPrefixMatchListId=alaBgpPrefixMatchListId, alcatelIND1BGPMIBCompliances=alcatelIND1BGPMIBCompliances, alaBgpPeer6TTL=alaBgpPeer6TTL, alaBgpPeer6HoldTimeConfigured=alaBgpPeer6HoldTimeConfigured, alaBgpMultiProtocolIpv6=alaBgpMultiProtocolIpv6, alaBgpPeer6RestartState=alaBgpPeer6RestartState, alaBgpRouteIsAggregate=alaBgpRouteIsAggregate, alaBgpPath6Pref=alaBgpPath6Pref, alaBgpCommunityPriMatchListPriority=alaBgpCommunityPriMatchListPriority, alaBgpCommunityMatchListTable=alaBgpCommunityMatchListTable, alaBgpDampReuse=alaBgpDampReuse, alaBgpPeer6ClearCounter=alaBgpPeer6ClearCounter, alaBgpGlobal=alaBgpGlobal, alaBgpPrefix6MatchListAddr=alaBgpPrefix6MatchListAddr, alaBgpRouteState=alaBgpRouteState, alaBgpRouteIsAggregateList=alaBgpRouteIsAggregateList, alaBgpPeerIpv6NextHop=alaBgpPeerIpv6NextHop, alaBgpPeer6LastRecvNotifyReason=alaBgpPeer6LastRecvNotifyReason, alaBgpPathWeight=alaBgpPathWeight, alaBgpDampFigureOfMerit=alaBgpDampFigureOfMerit, alaBgpPeerMultiHop=alaBgpPeerMultiHop, alaBgpPeerLastUpTime=alaBgpPeerLastUpTime, alaBgpPathPeerAddr=alaBgpPathPeerAddr, alaBgpRoute6IgpNextHop=alaBgpRoute6IgpNextHop, alaBgpPath6OriginatorId=alaBgpPath6OriginatorId, alaBgpNetwork6RowStatus=alaBgpNetwork6RowStatus, alaBgpPeerUpTransitions=alaBgpPeerUpTransitions, alaBgpPeer6MaxPrefixWarnOnly=alaBgpPeer6MaxPrefixWarnOnly, alabgpMIBRouteMapGroup=alabgpMIBRouteMapGroup, alaBgpPeerClientStatus=alaBgpPeerClientStatus, alaBgpPeer6AS=alaBgpPeer6AS, alaBgpAspathPriMatchListPriority=alaBgpAspathPriMatchListPriority, alaBgpRouteIsAggregateContributor=alaBgpRouteIsAggregateContributor, alaBgpPeer6AspathListOut=alaBgpPeer6AspathListOut, alaBgpRoute6IsAggregateContributor=alaBgpRoute6IsAggregateContributor, alaBgpNetwork6Entry=alaBgpNetwork6Entry, alaBgpPeer6RcvdRtRefreshMsgs=alaBgpPeer6RcvdRtRefreshMsgs, alaBgpPeerSentRtRefreshMsgs=alaBgpPeerSentRtRefreshMsgs, alaBgpRoute6IsOnIbgpClientChgList=alaBgpRoute6IsOnIbgpClientChgList, alaBgpAspathPriMatchListIntIdx=alaBgpAspathPriMatchListIntIdx, alaBgpCommunityPriMatchListAction=alaBgpCommunityPriMatchListAction, alaBgpPeerMD5KeyEncrypt=alaBgpPeerMD5KeyEncrypt, alaBgpAspathCompare=alaBgpAspathCompare, alaBgpPeerReconfigureOutBound=alaBgpPeerReconfigureOutBound, alaBgpDampCeil=alaBgpDampCeil, alaBgpPeerActivateIpv6=alaBgpPeerActivateIpv6, alaBgpPeer6ReconfigureOutBound=alaBgpPeer6ReconfigureOutBound, alaBgpPathMed=alaBgpPathMed, alaBgpPeerPrefix6ListIn=alaBgpPeerPrefix6ListIn, alaBgpPrefix6MatchListGE=alaBgpPrefix6MatchListGE, alaBgpRouteMapWeight=alaBgpRouteMapWeight, alaBgpPeerIpv6Unicast=alaBgpPeerIpv6Unicast, alaBgpMultiPath=alaBgpMultiPath, alaBgpAggrSet=alaBgpAggrSet, alaBgpPath6PeerName=alaBgpPath6PeerName, alaBgpDampMaxFlapHistory=alaBgpDampMaxFlapHistory, alaBgpPeer6LastUpTime=alaBgpPeer6LastUpTime, alaBgpPeerLastWriteTime=alaBgpPeerLastWriteTime, alaBgpNetworkAddr=alaBgpNetworkAddr, alaBgpPeer6ClientStatus=alaBgpPeer6ClientStatus, alaBgpPath6UnknownAttr=alaBgpPath6UnknownAttr, alaBgpPeerRouteMapIn=alaBgpPeerRouteMapIn, alaBgpPeer6KeepAliveConfigured=alaBgpPeer6KeepAliveConfigured, alabgpMIBPath6AttrGroup=alabgpMIBPath6AttrGroup, alaBgpPeerLocalIntfName=alaBgpPeerLocalIntfName, alaBgpPath6As=alaBgpPath6As, alaBgpPath6MaskLen=alaBgpPath6MaskLen, alaBgpPath6NextHop=alaBgpPath6NextHop, alaBgpPeerMaxPrefix=alaBgpPeerMaxPrefix, alaBgpPeerIpv4Multicast=alaBgpPeerIpv4Multicast, alaBgpRouteIsHidden=alaBgpRouteIsHidden, alaBgpPeerRowStatus=alaBgpPeerRowStatus, alaBgpPeerRcvdUpdMsgs=alaBgpPeerRcvdUpdMsgs, alaBgpAsOriginInterval=alaBgpAsOriginInterval, alaBgpRouterId=alaBgpRouterId, PYSNMP_MODULE_ID=alcatelIND1BGPMIB, alaBgpNumPolicyChgPaths=alaBgpNumPolicyChgPaths, alabgpMIBNetwork6Group=alabgpMIBNetwork6Group, alaBgpClearAllNeighborStats=alaBgpClearAllNeighborStats, alaBgpPeerRestart=alaBgpPeerRestart, alaBgpCommunityMatchListType=alaBgpCommunityMatchListType, alaBgpPath6SrcProto=alaBgpPath6SrcProto, alaBgpPrefixMatchListMask=alaBgpPrefixMatchListMask, alaBgpRouteMapOrigin=alaBgpRouteMapOrigin, alaBgpPeerRestartState=alaBgpPeerRestartState)
mibBuilder.exportSymbols("ALCATEL-IND1-BGP-MIB", alaBgpNetworkMetric=alaBgpNetworkMetric, alaBgpDampHalfLife=alaBgpDampHalfLife, alaBgpRouteIsOnEbgpChgList=alaBgpRouteIsOnEbgpChgList, alaBgpPeer6Prefix6ListIn=alaBgpPeer6Prefix6ListIn, alaBgpPolicy=alaBgpPolicy, alaBgpDampReuseTime=alaBgpDampReuseTime, alaBgpAggrTable=alaBgpAggrTable, alaBgpPathTable=alaBgpPathTable, alaBgpPrefixMatchListTable=alaBgpPrefixMatchListTable, alaBgpPeer6Prefix6ListOut=alaBgpPeer6Prefix6ListOut, alaBgpPeer6UpTransitions=alaBgpPeer6UpTransitions, alaBgpPeer6ConnRetryInterval=alaBgpPeer6ConnRetryInterval, alabgpMIBDampGroup=alabgpMIBDampGroup, alaBgpPeer6SentNotifyMsgs=alaBgpPeer6SentNotifyMsgs, alaBgpPeerMD5Key=alaBgpPeerMD5Key, alaBgpCommunityMatchListAction=alaBgpCommunityMatchListAction, alaBgpRoute6FeasiblePaths=alaBgpRoute6FeasiblePaths, alaBgpPeer6DownTransitions=alaBgpPeer6DownTransitions, alaBgpNetwork6Metric=alaBgpNetwork6Metric, alaBgpPeer6Entry=alaBgpPeer6Entry, alaBgpRoute6MaskLen=alaBgpRoute6MaskLen, alaBgpRoute6IsAggregateWait=alaBgpRoute6IsAggregateWait, alaBgpRouteMapMatchMaskLength6=alaBgpRouteMapMatchMaskLength6, alaBgpAspathPriMatchListTable=alaBgpAspathPriMatchListTable, alaBgpNetworkTable=alaBgpNetworkTable, alaBgpPeer6SentRtRefreshMsgs=alaBgpPeer6SentRtRefreshMsgs, alaBgpRouteIsOnIbgpClientChgList=alaBgpRouteIsOnIbgpClientChgList, alaBgpRouteMapName=alaBgpRouteMapName, alaBgpRoute6NextHop=alaBgpRoute6NextHop, alaBgpPeerRcvdPrefixes=alaBgpPeerRcvdPrefixes, alaBgpClusterId=alaBgpClusterId, alaBgpRouteMapMatchPrefix=alaBgpRouteMapMatchPrefix, alaBgpPeer6RcvdUpdMsgs=alaBgpPeer6RcvdUpdMsgs, alaBgpPeerAS=alaBgpPeerAS, alaBgpNumActiveRoutes=alaBgpNumActiveRoutes, alaBgpPeerReconfigureInBound=alaBgpPeerReconfigureInBound, alaBgpNumEstabExternalPeers=alaBgpNumEstabExternalPeers, alabgpMIBGlobalsGroup=alabgpMIBGlobalsGroup, alaBgpPeer6RouteMapOut=alaBgpPeer6RouteMapOut, alaBgpDampFlaps=alaBgpDampFlaps, alaBgpPrefix6MatchListTable=alaBgpPrefix6MatchListTable, alaBgpPeer6Ipv4Unicast=alaBgpPeer6Ipv4Unicast, alaBgpPeer6Ipv4Multicast=alaBgpPeer6Ipv4Multicast, alaBgpAspathPriMatchListId=alaBgpAspathPriMatchListId, alaBgpPeerCommunityListIn=alaBgpPeerCommunityListIn, alaBgpAggrRowStatus=alaBgpAggrRowStatus, alaBgpAspathPriMatchListRegExp=alaBgpAspathPriMatchListRegExp, alaBgpRoutePaths=alaBgpRoutePaths, alaBgpAggrLocalPref=alaBgpAggrLocalPref, alaBgpRouteMapCommunity=alaBgpRouteMapCommunity, alaBgpPeerRestartTime=alaBgpPeerRestartTime, alaBgpPeer6ReconfigureInBound=alaBgpPeer6ReconfigureInBound, alabgpMIBCommunityListGroup=alabgpMIBCommunityListGroup, alaBgpRouteMapCommunityMatchListId=alaBgpRouteMapCommunityMatchListId, alaBgpPeerIpv4Unicast=alaBgpPeerIpv4Unicast, alaBgpAspathPriMatchListRowStatus=alaBgpAspathPriMatchListRowStatus, alaBgpPeer6LastDownReason=alaBgpPeer6LastDownReason, alaBgpPeer6RouteMapIn=alaBgpPeer6RouteMapIn, alabgpMIBNetworkGroup=alabgpMIBNetworkGroup, alaBgpPath6State=alaBgpPath6State, alaBgpPath6Entry=alaBgpPath6Entry, alaBgpFastExternalFailOver=alaBgpFastExternalFailOver, alaBgpPeer6AdminStatus=alaBgpPeer6AdminStatus, alaBgpPeer6Type=alaBgpPeer6Type, alaBgpAspathPriMatchListAction=alaBgpAspathPriMatchListAction, alaBgpNetwork6Table=alaBgpNetwork6Table, alaBgpRoute6AdvNeighbors=alaBgpRoute6AdvNeighbors, alaBgpPeerEntry=alaBgpPeerEntry, alaBgpCommunityPriMatchListTable=alaBgpCommunityPriMatchListTable, alaBgpPathAtomic=alaBgpPathAtomic, alaBgpPeer6ActivateIpv6=alaBgpPeer6ActivateIpv6, alaBgpCommunityMatchListSubIndex=alaBgpCommunityMatchListSubIndex, alaBgpPeer6MD5Key=alaBgpPeer6MD5Key, alcatelIND1BGPMIB=alcatelIND1BGPMIB, alaBgpPeerChanges=alaBgpPeerChanges, alaBgpAspathMatchListRowStatus=alaBgpAspathMatchListRowStatus, alaBgpMissingMed=alaBgpMissingMed, alaBgpPeerSentMsgs=alaBgpPeerSentMsgs, alaBgpAsnFormat=alaBgpAsnFormat, alaBgpPeer6CommunityListIn=alaBgpPeer6CommunityListIn, alaBgpNetwork6Addr=alaBgpNetwork6Addr, alaBgpPeer6RcvdMsgs=alaBgpPeer6RcvdMsgs, alaBgpNumPaths=alaBgpNumPaths, alaBgpPeer6BgpId=alaBgpPeer6BgpId, alaBgpPeer6LastSentNotifyReason=alaBgpPeer6LastSentNotifyReason, alaBgpPeerConfedStatus=alaBgpPeerConfedStatus, alaBgpPeerLocalPort=alaBgpPeerLocalPort, alaBgpPeer6RestartFwdState=alaBgpPeer6RestartFwdState, alaBgpRoute6State=alaBgpRoute6State, alaBgpPeer6SentUpdMsgs=alaBgpPeer6SentUpdMsgs, alaBgpPeerPrefixListOut=alaBgpPeerPrefixListOut, alaBgpConfedId=alaBgpConfedId, alaBgpVersion=alaBgpVersion, alaBgpRoute6IsOnLocalChgList=alaBgpRoute6IsOnLocalChgList, alaBgpPeer6RestartTime=alaBgpPeer6RestartTime, alaBgpPeer6RcvdNotifyMsgs=alaBgpPeer6RcvdNotifyMsgs, alaBgpPeerRestartFwdState=alaBgpPeerRestartFwdState, alaBgpCommunityPriMatchListEntry=alaBgpCommunityPriMatchListEntry, alaBgpPeerRemovePrivateAs=alaBgpPeerRemovePrivateAs, alaBgpRouteMapPrefixMatchListId=alaBgpRouteMapPrefixMatchListId, alaBgpPeerTable=alaBgpPeerTable, alaBgpPeerRouteMapOut=alaBgpPeerRouteMapOut, alaBgpNetwork6MaskLen=alaBgpNetwork6MaskLen, alaBgpPathMask=alaBgpPathMask, alaBgpRouteMapTable=alaBgpRouteMapTable, alaBgpNumFeasiblePaths=alaBgpNumFeasiblePaths, alaBgpPeerPrefixListIn=alaBgpPeerPrefixListIn, alaBgpAspathMatchListPriority=alaBgpAspathMatchListPriority, alaBgpPeerInSoftReset=alaBgpPeerInSoftReset, alaBgpPeer6LocalAddr=alaBgpPeer6LocalAddr, alaBgpPeer6DefaultOriginate=alaBgpPeer6DefaultOriginate, alaBgpPeer6ActivateIpv4=alaBgpPeer6ActivateIpv4, alaBgpPath6ClusterList=alaBgpPath6ClusterList, alaBgpRouteIsOnIbgpChgList=alaBgpRouteIsOnIbgpChgList, alaBgpPeerDownTransitions=alaBgpPeerDownTransitions, alabgpMIBAspathListGroup=alabgpMIBAspathListGroup, alaBgpDampeningClear=alaBgpDampeningClear, alaBgpNetworkState=alaBgpNetworkState, alabgpMIBPrefixListGroup=alabgpMIBPrefixListGroup, alaBgpNumDampenedPaths=alaBgpNumDampenedPaths, alaBgpPeer6SentMsgs=alaBgpPeer6SentMsgs, alaBgpRouteMapMedMode=alaBgpRouteMapMedMode, alaBgpPathUnknownAttr=alaBgpPathUnknownAttr, alaBgpRouteMapSetCommunityMode=alaBgpRouteMapSetCommunityMode, alaBgpPrefixMatchListLE=alaBgpPrefixMatchListLE, alaBgpPrefixMatchListAddr=alaBgpPrefixMatchListAddr, alaBgpPeer6LastDownTime=alaBgpPeer6LastDownTime, alaBgpNetwork6State=alaBgpNetwork6State, alaBgpPeerLocalAddr=alaBgpPeerLocalAddr, alaBgpNetworkRowStatus=alaBgpNetworkRowStatus, alaBgpPeer6AutoReStart=alaBgpPeer6AutoReStart, alcatelIND1BGPMIBConformance=alcatelIND1BGPMIBConformance, alaBgpPathAggregatorAddr=alaBgpPathAggregatorAddr, alaBgpPeer6ConfedStatus=alaBgpPeer6ConfedStatus, alaBgpCommunityMatchListPriority=alaBgpCommunityMatchListPriority, alaBgpPeerAspathListIn=alaBgpPeerAspathListIn, alaBgpDampTable=alaBgpDampTable, alaBgpPeerAspathListOut=alaBgpPeerAspathListOut, alaBgpPath6Med=alaBgpPath6Med, alaBgpProtoStatus=alaBgpProtoStatus, alaBgpRoute6IsAggregateList=alaBgpRoute6IsAggregateList, alaBgpRouteIsOnDeleteList=alaBgpRouteIsOnDeleteList, alaBgpRouteMapCommunityStrip=alaBgpRouteMapCommunityStrip, alaBgpPeer6SoftReconfig=alaBgpPeer6SoftReconfig, alaBgpDampEntry=alaBgpDampEntry, alaBgpAspathMatchListAction=alaBgpAspathMatchListAction, alaBgpCommunityPriMatchListString=alaBgpCommunityPriMatchListString, alaBgpDampening=alaBgpDampening, alaBgpAggrMetric=alaBgpAggrMetric, alaBgpPrefixMatchListAction=alaBgpPrefixMatchListAction, alaBgpPeerAutoReStart=alaBgpPeerAutoReStart, alaBgpPeer6BfdStatus=alaBgpPeer6BfdStatus, alcatelIND1BGPMIBObjects=alcatelIND1BGPMIBObjects, alaBgpPeer6NextHopSelf=alaBgpPeer6NextHopSelf, alaBgpNetwork6Community=alaBgpNetwork6Community, alaBgpRouteIsOnLocalChgList=alaBgpRouteIsOnLocalChgList, alaBgpPeer6KeepAlive=alaBgpPeer6KeepAlive, alaBgpPathPeerInetType=alaBgpPathPeerInetType, alaBgpPeerRcvdMsgs=alaBgpPeerRcvdMsgs, alaBgpMaxPeers=alaBgpMaxPeers, alaBgpPeer6LastWriteTime=alaBgpPeer6LastWriteTime, alcatelIND1BGPMIBCompliance=alcatelIND1BGPMIBCompliance, alaBgpPath6Weight=alaBgpPath6Weight, alaBgpRestartInterval=alaBgpRestartInterval, alaBgpAspathMatchListRegExp=alaBgpAspathMatchListRegExp, alaBgpDampCutOff=alaBgpDampCutOff, alaBgpPeerRcvdNotifyMsgs=alaBgpPeerRcvdNotifyMsgs, alaBgpPrefix6MatchListEntry=alaBgpPrefix6MatchListEntry, alabgpMIBPeerGroup=alabgpMIBPeerGroup, alaBgpRouteMask=alaBgpRouteMask)
