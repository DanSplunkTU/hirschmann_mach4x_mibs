#
# PySNMP MIB module PRVT-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-QOS-MIB
# Produced by pysmi-1.1.3 at Wed Dec  8 20:48:04 2021
# On host fv-az42-142 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
serviceAccessSwitch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "serviceAccessSwitch")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, iso, TimeTicks, Integer32, NotificationType, Unsigned32, Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter64, MibIdentifier, IpAddress, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "iso", "TimeTicks", "Integer32", "NotificationType", "Unsigned32", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter64", "MibIdentifier", "IpAddress", "Bits")
TextualConvention, RowStatus, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "TruthValue", "DisplayString")
prvtQosMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 7, 1))
prvtQosMIB.setRevisions(('2014-01-16 00:00', '2014-01-15 00:00', '2013-12-11 00:00', '2010-03-08 00:00',))
if mibBuilder.loadTexts: prvtQosMIB.setLastUpdated('201401160000Z')
if mibBuilder.loadTexts: prvtQosMIB.setOrganization('BATM Advanced Communication')
class PrvtQosEncapType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 4096)

class PrvtQosServShaperProfileIdType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 48)

class PrvtQosProfileIdType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 8)

class PrvtQosFcType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("be", 1), ("l2", 2), ("af", 3), ("l1", 4), ("h2", 5), ("ef", 6), ("h1", 7), ("nc", 8))

class PrvtQosDscpType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 63)

class PrvtQosVptType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 7)

class PrvtQosExpType(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 7)

class PrvtQosDescrType(TextualConvention, OctetString):
    status = 'current'
    displayHint = '150a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 150)

class PrvtQosQueueIdType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 8)

class PrvtQosServiceIdType(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 4294967294)

class PrvtQosPolicyNameType(TextualConvention, OctetString):
    status = 'current'
    displayHint = '32a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 32)

class PrvtQosPolicyNameOrNoneType(TextualConvention, OctetString):
    status = 'current'
    displayHint = '32a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

class PrvtQosColorType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("green", 1), ("yellow", 2))

class PrvtQosSchedType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))
    namedValues = NamedValues(("sp", 1), ("wrr", 2), ("hybrid1", 3), ("hybrid2", 4), ("hybrid3", 5), ("hybrid4", 6), ("hybrid5", 7), ("hybrid6", 8), ("hybrid7", 9), ("drr", 10), ("mdrr1", 11), ("mdrr2", 12), ("mdrr3", 13), ("mdrr4", 14), ("mdrr5", 15), ("mdrr6", 16), ("mdrr7", 17))

class PrvtQosTrustType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("untrust", 0), ("trustPriority", 1), ("trustPreservePriority", 2), ("trustDscp", 3), ("trustPriorityAndDscp", 4), ("trustInnerPriority", 5))

class PrvtQosQueueWeight(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 127)

prvtQosMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1))
prvtQosSchedProfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 1))
prvtQosSchedProfileTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 1, 1), )
if mibBuilder.loadTexts: prvtQosSchedProfileTable.setStatus('current')
prvtQosSchedProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 1, 1, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosSchedProfileId"))
if mibBuilder.loadTexts: prvtQosSchedProfileEntry.setStatus('current')
prvtQosSchedProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 1, 1, 1, 1), PrvtQosProfileIdType())
if mibBuilder.loadTexts: prvtQosSchedProfileId.setStatus('current')
prvtQosSchedProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSchedProfileRowStatus.setStatus('current')
prvtQosSchedProfileType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 1, 1, 1, 3), PrvtQosSchedType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSchedProfileType.setStatus('current')
prvtQosSchedProfileQueue1Weight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 1, 1, 1, 4), PrvtQosQueueWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSchedProfileQueue1Weight.setStatus('current')
prvtQosSchedProfileQueue2Weight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 1, 1, 1, 5), PrvtQosQueueWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSchedProfileQueue2Weight.setStatus('current')
prvtQosSchedProfileQueue3Weight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 1, 1, 1, 6), PrvtQosQueueWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSchedProfileQueue3Weight.setStatus('current')
prvtQosSchedProfileQueue4Weight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 1, 1, 1, 7), PrvtQosQueueWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSchedProfileQueue4Weight.setStatus('current')
prvtQosSchedProfileQueue5Weight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 1, 1, 1, 8), PrvtQosQueueWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSchedProfileQueue5Weight.setStatus('current')
prvtQosSchedProfileQueue6Weight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 1, 1, 1, 9), PrvtQosQueueWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSchedProfileQueue6Weight.setStatus('current')
prvtQosSchedProfileQueue7Weight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 1, 1, 1, 10), PrvtQosQueueWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSchedProfileQueue7Weight.setStatus('current')
prvtQosSchedProfileQueue8Weight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 1, 1, 1, 11), PrvtQosQueueWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSchedProfileQueue8Weight.setStatus('current')
prvtQosSchedProfileDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 1, 1, 1, 12), PrvtQosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSchedProfileDescription.setStatus('current')
prvtQosShaperProfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 2))
prvtQosPortShaperProfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 2, 1), )
if mibBuilder.loadTexts: prvtQosPortShaperProfTable.setStatus('current')
prvtQosPortShaperProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 2, 1, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosPortShaperProfId"))
if mibBuilder.loadTexts: prvtQosPortShaperProfEntry.setStatus('current')
prvtQosPortShaperProfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 2, 1, 1, 1), PrvtQosProfileIdType())
if mibBuilder.loadTexts: prvtQosPortShaperProfId.setStatus('current')
prvtQosPortShaperProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 2, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortShaperProfRowStatus.setStatus('current')
prvtQosPortShaperProfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 2, 1, 1, 3), PrvtQosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortShaperProfDescr.setStatus('current')
prvtQosPortShaperProfCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortShaperProfCIR.setStatus('current')
prvtQosPortShaperProfCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortShaperProfCBS.setStatus('current')
prvtQosServShaperProfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 2, 2), )
if mibBuilder.loadTexts: prvtQosServShaperProfTable.setStatus('current')
prvtQosServShaperProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 2, 2, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosServShaperProfId"))
if mibBuilder.loadTexts: prvtQosServShaperProfEntry.setStatus('current')
prvtQosServShaperProfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 2, 2, 1, 1), PrvtQosServShaperProfileIdType())
if mibBuilder.loadTexts: prvtQosServShaperProfId.setStatus('current')
prvtQosServShaperProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 2, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosServShaperProfRowStatus.setStatus('current')
prvtQosServShaperProfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 2, 2, 1, 3), PrvtQosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosServShaperProfDescr.setStatus('current')
prvtQosServShaperProfCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosServShaperProfCIR.setStatus('current')
prvtQosServShaperProfCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosServShaperProfCBS.setStatus('current')
prvtQosCongAvoidProfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3))
prvtQosTailDropProfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 1), )
if mibBuilder.loadTexts: prvtQosTailDropProfTable.setStatus('current')
prvtQosTailDropProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 1, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosTailDropProfId"))
if mibBuilder.loadTexts: prvtQosTailDropProfEntry.setStatus('current')
prvtQosTailDropProfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 1, 1, 1), PrvtQosProfileIdType())
if mibBuilder.loadTexts: prvtQosTailDropProfId.setStatus('current')
prvtQosTailDropProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosTailDropProfRowStatus.setStatus('current')
prvtQosTailDropProfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 1, 1, 3), PrvtQosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosTailDropProfDescr.setStatus('current')
prvtQosTailDropProfYellowThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 1, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosTailDropProfYellowThresh.setStatus('current')
prvtQosTailDropProfRedThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 1, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosTailDropProfRedThresh.setStatus('current')
prvtQosSredProfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 2), )
if mibBuilder.loadTexts: prvtQosSredProfTable.setStatus('current')
prvtQosSredProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 2, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosSredProfId"))
if mibBuilder.loadTexts: prvtQosSredProfEntry.setStatus('current')
prvtQosSredProfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 2, 1, 1), PrvtQosProfileIdType())
if mibBuilder.loadTexts: prvtQosSredProfId.setStatus('current')
prvtQosSredProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSredProfRowStatus.setStatus('current')
prvtQosSredProfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 2, 1, 3), PrvtQosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSredProfDescr.setStatus('current')
prvtQosSredProfYellowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSredProfYellowThreshold.setStatus('current')
prvtQosSredProfYellowProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 90))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSredProfYellowProbability.setStatus('current')
prvtQosSredProfRedThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSredProfRedThreshold.setStatus('current')
prvtQosSredProfRedProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 90))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSredProfRedProbability.setStatus('current')
prvtQosWredProfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 3), )
if mibBuilder.loadTexts: prvtQosWredProfTable.setStatus('current')
prvtQosWredProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 3, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosWredProfId"))
if mibBuilder.loadTexts: prvtQosWredProfEntry.setStatus('current')
prvtQosWredProfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 3, 1, 1), PrvtQosProfileIdType())
if mibBuilder.loadTexts: prvtQosWredProfId.setStatus('current')
prvtQosWredProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosWredProfRowStatus.setStatus('current')
prvtQosWredProfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 3, 1, 3), PrvtQosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosWredProfDescr.setStatus('current')
prvtQosWredProfYellowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosWredProfYellowThreshold.setStatus('current')
prvtQosWredProfYellowProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 90))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosWredProfYellowProbability.setStatus('current')
prvtQosWredProfRedThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosWredProfRedThreshold.setStatus('current')
prvtQosWredProfRedProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 3, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 90))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosWredProfRedProbability.setStatus('current')
prvtQosMapProfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4))
prvtQosMapProfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 1), )
if mibBuilder.loadTexts: prvtQosMapProfTable.setStatus('current')
prvtQosMapProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 1, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosMapProfName"))
if mibBuilder.loadTexts: prvtQosMapProfEntry.setStatus('current')
prvtQosMapProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 1, 1, 1), PrvtQosPolicyNameType())
if mibBuilder.loadTexts: prvtQosMapProfName.setStatus('current')
prvtQosMapProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosMapProfRowStatus.setStatus('current')
prvtQosMapProfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 1, 1, 3), PrvtQosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosMapProfDescr.setStatus('current')
prvtQosMapProfAnyVptToFcValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 1, 1, 4), PrvtQosFcType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosMapProfAnyVptToFcValue.setStatus('current')
prvtQosMapProfAnyVptToFcColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 1, 1, 5), PrvtQosColorType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosMapProfAnyVptToFcColor.setStatus('current')
prvtQosMapProfAnyDscpToFcValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 1, 1, 6), PrvtQosFcType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosMapProfAnyDscpToFcValue.setStatus('current')
prvtQosMapProfAnyDscpToFcColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 1, 1, 7), PrvtQosColorType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosMapProfAnyDscpToFcColor.setStatus('current')
prvtQosMapProfAnyExpToFcValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 1, 1, 8), PrvtQosFcType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosMapProfAnyExpToFcValue.setStatus('current')
prvtQosMapProfAnyExpToFcColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 1, 1, 9), PrvtQosColorType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosMapProfAnyExpToFcColor.setStatus('current')
prvtQosMapProfVptToFcTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 2), )
if mibBuilder.loadTexts: prvtQosMapProfVptToFcTable.setStatus('current')
prvtQosMapProfVptToFcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 2, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosMapProfName"), (0, "PRVT-QOS-MIB", "prvtQosMapProfVptToFcId"))
if mibBuilder.loadTexts: prvtQosMapProfVptToFcEntry.setStatus('current')
prvtQosMapProfVptToFcId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 2, 1, 1), PrvtQosVptType())
if mibBuilder.loadTexts: prvtQosMapProfVptToFcId.setStatus('current')
prvtQosMapProfVptToFcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosMapProfVptToFcRowStatus.setStatus('current')
prvtQosMapProfVptToFcValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 2, 1, 3), PrvtQosFcType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosMapProfVptToFcValue.setStatus('current')
prvtQosMapProfVptToFcColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 2, 1, 4), PrvtQosColorType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosMapProfVptToFcColor.setStatus('current')
prvtQosMapProfDscpToFcTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 3), )
if mibBuilder.loadTexts: prvtQosMapProfDscpToFcTable.setStatus('current')
prvtQosMapProfDscpToFcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 3, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosMapProfName"), (0, "PRVT-QOS-MIB", "prvtQosMapProfDscpToFcId"))
if mibBuilder.loadTexts: prvtQosMapProfDscpToFcEntry.setStatus('current')
prvtQosMapProfDscpToFcId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 3, 1, 1), PrvtQosDscpType())
if mibBuilder.loadTexts: prvtQosMapProfDscpToFcId.setStatus('current')
prvtQosMapProfDscpToFcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosMapProfDscpToFcRowStatus.setStatus('current')
prvtQosMapProfDscpToFcValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 3, 1, 3), PrvtQosFcType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosMapProfDscpToFcValue.setStatus('current')
prvtQosMapProfDscpToFcColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 3, 1, 4), PrvtQosColorType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosMapProfDscpToFcColor.setStatus('current')
prvtQosMapProfExpToFcTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 4), )
if mibBuilder.loadTexts: prvtQosMapProfExpToFcTable.setStatus('current')
prvtQosMapProfExpToFcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 4, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosMapProfName"), (0, "PRVT-QOS-MIB", "prvtQosMapProfExpToFcId"))
if mibBuilder.loadTexts: prvtQosMapProfExpToFcEntry.setStatus('current')
prvtQosMapProfExpToFcId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 4, 1, 1), PrvtQosExpType())
if mibBuilder.loadTexts: prvtQosMapProfExpToFcId.setStatus('current')
prvtQosMapProfExpToFcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosMapProfExpToFcRowStatus.setStatus('current')
prvtQosMapProfExpToFcValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 4, 1, 3), PrvtQosFcType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosMapProfExpToFcValue.setStatus('current')
prvtQosMapProfExpToFcColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 4, 4, 1, 4), PrvtQosColorType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosMapProfExpToFcColor.setStatus('current')
prvtQosRemarkProfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5))
prvtQosRemarkProfileTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 1), )
if mibBuilder.loadTexts: prvtQosRemarkProfileTable.setStatus('current')
prvtQosRemarkProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 1, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosRemarkProfileName"))
if mibBuilder.loadTexts: prvtQosRemarkProfileEntry.setStatus('current')
prvtQosRemarkProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 1, 1, 1), PrvtQosPolicyNameType())
if mibBuilder.loadTexts: prvtQosRemarkProfileName.setStatus('current')
prvtQosRemarkProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosRemarkProfileRowStatus.setStatus('current')
prvtQosRemarkProfileDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 1, 1, 3), PrvtQosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosRemarkProfileDescr.setStatus('current')
prvtQosRemarkProfFcToVptTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 2), )
if mibBuilder.loadTexts: prvtQosRemarkProfFcToVptTable.setStatus('current')
prvtQosRemarkProfFcToVptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 2, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosRemarkProfileName"), (0, "PRVT-QOS-MIB", "prvtQosRemarkProfFcToVptId"), (0, "PRVT-QOS-MIB", "prvtQosRemarkProfFcToVptColor"))
if mibBuilder.loadTexts: prvtQosRemarkProfFcToVptEntry.setStatus('current')
prvtQosRemarkProfFcToVptId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 2, 1, 1), PrvtQosFcType())
if mibBuilder.loadTexts: prvtQosRemarkProfFcToVptId.setStatus('current')
prvtQosRemarkProfFcToVptColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 2, 1, 2), PrvtQosColorType())
if mibBuilder.loadTexts: prvtQosRemarkProfFcToVptColor.setStatus('current')
prvtQosRemarkProfFcToVptRS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosRemarkProfFcToVptRS.setStatus('current')
prvtQosRemarkProfFcToVptValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 2, 1, 4), PrvtQosVptType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosRemarkProfFcToVptValue.setStatus('current')
prvtQosRemarkProfFcToDscpTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 3), )
if mibBuilder.loadTexts: prvtQosRemarkProfFcToDscpTable.setStatus('current')
prvtQosRemarkProfFcToDscpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 3, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosRemarkProfileName"), (0, "PRVT-QOS-MIB", "prvtQosRemarkProfFcToDscpId"), (0, "PRVT-QOS-MIB", "prvtQosRemarkProfFcToDscpColor"))
if mibBuilder.loadTexts: prvtQosRemarkProfFcToDscpEntry.setStatus('current')
prvtQosRemarkProfFcToDscpId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 3, 1, 1), PrvtQosFcType())
if mibBuilder.loadTexts: prvtQosRemarkProfFcToDscpId.setStatus('current')
prvtQosRemarkProfFcToDscpColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 3, 1, 2), PrvtQosColorType())
if mibBuilder.loadTexts: prvtQosRemarkProfFcToDscpColor.setStatus('current')
prvtQosRemarkProfFcToDscpRS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosRemarkProfFcToDscpRS.setStatus('current')
prvtQosRemarkProfFcToDscpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 3, 1, 4), PrvtQosDscpType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosRemarkProfFcToDscpValue.setStatus('current')
prvtQosRemarkProfFcToExpTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 4), )
if mibBuilder.loadTexts: prvtQosRemarkProfFcToExpTable.setStatus('current')
prvtQosRemarkProfFcToExpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 4, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosRemarkProfileName"), (0, "PRVT-QOS-MIB", "prvtQosRemarkProfFcToExpId"), (0, "PRVT-QOS-MIB", "prvtQosRemarkProfFcToExpColor"))
if mibBuilder.loadTexts: prvtQosRemarkProfFcToExpEntry.setStatus('current')
prvtQosRemarkProfFcToExpId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 4, 1, 1), PrvtQosFcType())
if mibBuilder.loadTexts: prvtQosRemarkProfFcToExpId.setStatus('current')
prvtQosRemarkProfFcToExpColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 4, 1, 2), PrvtQosColorType())
if mibBuilder.loadTexts: prvtQosRemarkProfFcToExpColor.setStatus('current')
prvtQosRemarkProfFcToExpRS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosRemarkProfFcToExpRS.setStatus('current')
prvtQosRemarkProfFcToExpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 5, 4, 1, 4), PrvtQosExpType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosRemarkProfFcToExpValue.setStatus('current')
prvtQosServPolObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 6))
prvtQosSvcIngPolTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 6, 1), )
if mibBuilder.loadTexts: prvtQosSvcIngPolTable.setStatus('current')
prvtQosSvcIngPolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 6, 1, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosSvcIngPolName"))
if mibBuilder.loadTexts: prvtQosSvcIngPolEntry.setStatus('current')
prvtQosSvcIngPolName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 6, 1, 1, 1), PrvtQosPolicyNameType())
if mibBuilder.loadTexts: prvtQosSvcIngPolName.setStatus('current')
prvtQosSvcIngPolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 6, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSvcIngPolRowStatus.setStatus('current')
prvtQosSvcIngPolDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 6, 1, 1, 3), PrvtQosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSvcIngPolDescr.setStatus('current')
prvtQosSvcIngPolShaperProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 6, 1, 1, 4), PrvtQosServShaperProfileIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSvcIngPolShaperProfile.setStatus('current')
prvtQosSvcIngPolSchedProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 6, 1, 1, 5), PrvtQosProfileIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSvcIngPolSchedProfile.setStatus('current')
prvtQosSvcIngPolTailDropProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 6, 1, 1, 6), PrvtQosProfileIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSvcIngPolTailDropProfile.setStatus('current')
prvtQosSvcIngPolQueTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 6, 2), )
if mibBuilder.loadTexts: prvtQosSvcIngPolQueTable.setStatus('current')
prvtQosSvcIngPolQueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 6, 2, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosSvcIngPolName"), (0, "PRVT-QOS-MIB", "prvtQosSvcIngPolQueId"))
if mibBuilder.loadTexts: prvtQosSvcIngPolQueEntry.setStatus('current')
prvtQosSvcIngPolQueId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 6, 2, 1, 1), PrvtQosQueueIdType())
if mibBuilder.loadTexts: prvtQosSvcIngPolQueId.setStatus('current')
prvtQosSvcIngPolQueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 6, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSvcIngPolQueRowStatus.setStatus('current')
prvtQosSvcIngPolQueShaperProf = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 6, 2, 1, 3), PrvtQosServShaperProfileIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSvcIngPolQueShaperProf.setStatus('current')
prvtQosSvcIngPolQueTailDropProf = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 6, 2, 1, 4), PrvtQosProfileIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosSvcIngPolQueTailDropProf.setStatus('current')
prvtQosPortPolObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7))
prvtQosPortIngPolTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 1), )
if mibBuilder.loadTexts: prvtQosPortIngPolTable.setStatus('current')
prvtQosPortIngPolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 1, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosPortIngPolName"))
if mibBuilder.loadTexts: prvtQosPortIngPolEntry.setStatus('current')
prvtQosPortIngPolName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 1, 1, 1), PrvtQosPolicyNameType())
if mibBuilder.loadTexts: prvtQosPortIngPolName.setStatus('current')
prvtQosPortIngPolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortIngPolRowStatus.setStatus('current')
prvtQosPortIngPolDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 1, 1, 3), PrvtQosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortIngPolDescr.setStatus('current')
prvtQosPortIngPolMapProf = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 1, 1, 4), PrvtQosPolicyNameType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortIngPolMapProf.setStatus('current')
prvtQosPortIngPolTrustMode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 1, 1, 5), PrvtQosTrustType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortIngPolTrustMode.setStatus('current')
prvtQosPortIngPolUntrToFcValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 1, 1, 6), PrvtQosFcType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortIngPolUntrToFcValue.setStatus('current')
prvtQosPortIngPolUntrToFcColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 1, 1, 7), PrvtQosColorType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortIngPolUntrToFcColor.setStatus('current')
prvtQosPortIngPolFcToQueProf = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 1, 1, 8), PrvtQosPolicyNameType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortIngPolFcToQueProf.setStatus('current')
prvtQosPortEgrPolTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 2), )
if mibBuilder.loadTexts: prvtQosPortEgrPolTable.setStatus('current')
prvtQosPortEgrPolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 2, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosPortEgrPolName"))
if mibBuilder.loadTexts: prvtQosPortEgrPolEntry.setStatus('current')
prvtQosPortEgrPolName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 2, 1, 1), PrvtQosPolicyNameType())
if mibBuilder.loadTexts: prvtQosPortEgrPolName.setStatus('current')
prvtQosPortEgrPolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortEgrPolRowStatus.setStatus('current')
prvtQosPortEgrPolDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 2, 1, 3), PrvtQosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortEgrPolDescr.setStatus('current')
prvtQosPortEgrPolShaperProf = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 2, 1, 4), PrvtQosProfileIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortEgrPolShaperProf.setStatus('current')
prvtQosPortEgrPolTailDropProf = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 2, 1, 5), PrvtQosProfileIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortEgrPolTailDropProf.setStatus('current')
prvtQosPortEgrPolSredProf = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 2, 1, 6), PrvtQosProfileIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortEgrPolSredProf.setStatus('current')
prvtQosPortEgrPolSchedProf = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 2, 1, 7), PrvtQosProfileIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortEgrPolSchedProf.setStatus('current')
prvtQosPortEgrPolWredProf = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 2, 1, 8), PrvtQosProfileIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortEgrPolWredProf.setStatus('current')
prvtQosPortEgrPolQueTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 3), )
if mibBuilder.loadTexts: prvtQosPortEgrPolQueTable.setStatus('current')
prvtQosPortEgrPolQueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 3, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosPortEgrPolName"), (0, "PRVT-QOS-MIB", "prvtQosPortEgrPolQueId"))
if mibBuilder.loadTexts: prvtQosPortEgrPolQueEntry.setStatus('current')
prvtQosPortEgrPolQueId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 3, 1, 1), PrvtQosQueueIdType())
if mibBuilder.loadTexts: prvtQosPortEgrPolQueId.setStatus('current')
prvtQosPortEgrPolQueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortEgrPolQueRowStatus.setStatus('current')
prvtQosPortEgrPolQueShaperProf = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 3, 1, 3), PrvtQosProfileIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortEgrPolQueShaperProf.setStatus('current')
prvtQosPortEgrPolQueTailDropProf = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 3, 1, 4), PrvtQosProfileIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortEgrPolQueTailDropProf.setStatus('current')
prvtQosPortEgrPolQueSredProf = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 3, 1, 5), PrvtQosProfileIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortEgrPolQueSredProf.setStatus('current')
prvtQosPortEgrPolQueWredProf = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 7, 3, 1, 6), PrvtQosProfileIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosPortEgrPolQueWredProf.setStatus('current')
prvtQosInterfaceObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 8))
prvtQosInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 8, 1), )
if mibBuilder.loadTexts: prvtQosInterfaceTable.setStatus('current')
prvtQosInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 8, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtQosInterfaceEntry.setStatus('current')
prvtQosInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 8, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosInterfaceRowStatus.setStatus('current')
prvtQosInterfaceIngPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 8, 1, 1, 3), PrvtQosPolicyNameOrNoneType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosInterfaceIngPolicy.setStatus('current')
prvtQosInterfaceEgrPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 8, 1, 1, 4), PrvtQosPolicyNameOrNoneType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosInterfaceEgrPolicy.setStatus('current')
prvtQosServiceObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 9))
prvtQosServiceTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 9, 1), )
if mibBuilder.loadTexts: prvtQosServiceTable.setStatus('current')
prvtQosServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 9, 1, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosServiceId"))
if mibBuilder.loadTexts: prvtQosServiceEntry.setStatus('current')
prvtQosServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 9, 1, 1, 1), PrvtQosServiceIdType())
if mibBuilder.loadTexts: prvtQosServiceId.setStatus('current')
prvtQosServiceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 9, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosServiceRowStatus.setStatus('current')
prvtQosServiceIngressPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 9, 1, 1, 3), PrvtQosPolicyNameType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosServiceIngressPolicy.setStatus('current')
prvtQosServSapTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 9, 2), )
if mibBuilder.loadTexts: prvtQosServSapTable.setStatus('current')
prvtQosServSapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 9, 2, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosServiceId"), (0, "IF-MIB", "ifIndex"), (0, "PRVT-QOS-MIB", "prvtQosServSapEncapValue"))
if mibBuilder.loadTexts: prvtQosServSapEntry.setStatus('current')
prvtQosServSapEncapValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 9, 2, 1, 2), PrvtQosEncapType())
if mibBuilder.loadTexts: prvtQosServSapEncapValue.setStatus('current')
prvtQosServSapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 9, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosServSapRowStatus.setStatus('current')
prvtQosServSapPolicyEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 9, 2, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosServSapPolicyEnable.setStatus('current')
prvtQosFcToQueueProfObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 10))
prvtQosFcToQueueProfileTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 10, 1), )
if mibBuilder.loadTexts: prvtQosFcToQueueProfileTable.setStatus('current')
prvtQosFcToQueueProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 10, 1, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosFcToQueueProfileName"))
if mibBuilder.loadTexts: prvtQosFcToQueueProfileEntry.setStatus('current')
prvtQosFcToQueueProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 10, 1, 1, 1), PrvtQosPolicyNameType())
if mibBuilder.loadTexts: prvtQosFcToQueueProfileName.setStatus('current')
prvtQosFcToQueueProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 10, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosFcToQueueProfileRowStatus.setStatus('current')
prvtQosFcToQueueProfileDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 10, 1, 1, 3), PrvtQosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosFcToQueueProfileDescr.setStatus('current')
prvtQosFcToQueueProfFcTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 10, 2), )
if mibBuilder.loadTexts: prvtQosFcToQueueProfFcTable.setStatus('current')
prvtQosFcToQueueProfFcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 10, 2, 1), ).setIndexNames((0, "PRVT-QOS-MIB", "prvtQosFcToQueueProfileName"), (0, "PRVT-QOS-MIB", "prvtQosRemarkProfFcToVptId"), (0, "PRVT-QOS-MIB", "prvtQosRemarkProfFcToVptColor"))
if mibBuilder.loadTexts: prvtQosFcToQueueProfFcEntry.setStatus('current')
prvtQosFcToQueueProfFcName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 10, 2, 1, 1), PrvtQosFcType())
if mibBuilder.loadTexts: prvtQosFcToQueueProfFcName.setStatus('current')
prvtQosFcToQueueProfFcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 10, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosFcToQueueProfFcRowStatus.setStatus('current')
prvtQosFcToQueueProfFcUniQueId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 10, 2, 1, 3), PrvtQosQueueIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosFcToQueueProfFcUniQueId.setStatus('current')
prvtQosFcToQueueProfFcMulQueId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 1, 1, 10, 2, 1, 4), PrvtQosQueueIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtQosFcToQueueProfFcMulQueId.setStatus('current')
mibBuilder.exportSymbols("PRVT-QOS-MIB", PrvtQosColorType=PrvtQosColorType, prvtQosMIBObjects=prvtQosMIBObjects, prvtQosServShaperProfEntry=prvtQosServShaperProfEntry, prvtQosPortShaperProfTable=prvtQosPortShaperProfTable, prvtQosSredProfYellowProbability=prvtQosSredProfYellowProbability, PrvtQosEncapType=PrvtQosEncapType, prvtQosPortIngPolFcToQueProf=prvtQosPortIngPolFcToQueProf, prvtQosPortEgrPolSredProf=prvtQosPortEgrPolSredProf, prvtQosSchedProfileType=prvtQosSchedProfileType, prvtQosMapProfTable=prvtQosMapProfTable, prvtQosMapProfDscpToFcId=prvtQosMapProfDscpToFcId, prvtQosSvcIngPolQueRowStatus=prvtQosSvcIngPolQueRowStatus, prvtQosServSapEncapValue=prvtQosServSapEncapValue, prvtQosMapProfVptToFcRowStatus=prvtQosMapProfVptToFcRowStatus, prvtQosInterfaceRowStatus=prvtQosInterfaceRowStatus, prvtQosSchedProfileQueue5Weight=prvtQosSchedProfileQueue5Weight, prvtQosPortEgrPolEntry=prvtQosPortEgrPolEntry, prvtQosPortEgrPolQueRowStatus=prvtQosPortEgrPolQueRowStatus, prvtQosPortIngPolName=prvtQosPortIngPolName, prvtQosRemarkProfFcToVptTable=prvtQosRemarkProfFcToVptTable, prvtQosRemarkProfileDescr=prvtQosRemarkProfileDescr, prvtQosSvcIngPolTailDropProfile=prvtQosSvcIngPolTailDropProfile, prvtQosPortIngPolEntry=prvtQosPortIngPolEntry, prvtQosTailDropProfId=prvtQosTailDropProfId, prvtQosMapProfVptToFcId=prvtQosMapProfVptToFcId, prvtQosRemarkProfFcToExpValue=prvtQosRemarkProfFcToExpValue, prvtQosRemarkProfFcToVptRS=prvtQosRemarkProfFcToVptRS, prvtQosRemarkProfFcToExpRS=prvtQosRemarkProfFcToExpRS, prvtQosServiceTable=prvtQosServiceTable, prvtQosMapProfExpToFcEntry=prvtQosMapProfExpToFcEntry, prvtQosCongAvoidProfObjects=prvtQosCongAvoidProfObjects, prvtQosFcToQueueProfFcRowStatus=prvtQosFcToQueueProfFcRowStatus, prvtQosWredProfRowStatus=prvtQosWredProfRowStatus, PrvtQosServShaperProfileIdType=PrvtQosServShaperProfileIdType, prvtQosRemarkProfileRowStatus=prvtQosRemarkProfileRowStatus, prvtQosSredProfRowStatus=prvtQosSredProfRowStatus, prvtQosSredProfYellowThreshold=prvtQosSredProfYellowThreshold, prvtQosMapProfRowStatus=prvtQosMapProfRowStatus, PrvtQosQueueIdType=PrvtQosQueueIdType, prvtQosWredProfId=prvtQosWredProfId, prvtQosMapProfName=prvtQosMapProfName, prvtQosSvcIngPolTable=prvtQosSvcIngPolTable, prvtQosRemarkProfFcToVptValue=prvtQosRemarkProfFcToVptValue, PrvtQosQueueWeight=PrvtQosQueueWeight, prvtQosPortEgrPolQueTable=prvtQosPortEgrPolQueTable, prvtQosMapProfAnyVptToFcValue=prvtQosMapProfAnyVptToFcValue, prvtQosWredProfYellowThreshold=prvtQosWredProfYellowThreshold, prvtQosRemarkProfFcToVptColor=prvtQosRemarkProfFcToVptColor, prvtQosFcToQueueProfileTable=prvtQosFcToQueueProfileTable, prvtQosPortIngPolUntrToFcValue=prvtQosPortIngPolUntrToFcValue, prvtQosFcToQueueProfileDescr=prvtQosFcToQueueProfileDescr, prvtQosRemarkProfFcToDscpValue=prvtQosRemarkProfFcToDscpValue, prvtQosTailDropProfRowStatus=prvtQosTailDropProfRowStatus, PrvtQosSchedType=PrvtQosSchedType, prvtQosServiceObjects=prvtQosServiceObjects, prvtQosRemarkProfFcToExpId=prvtQosRemarkProfFcToExpId, prvtQosSvcIngPolQueTable=prvtQosSvcIngPolQueTable, prvtQosSvcIngPolQueTailDropProf=prvtQosSvcIngPolQueTailDropProf, prvtQosPortEgrPolWredProf=prvtQosPortEgrPolWredProf, prvtQosMapProfExpToFcColor=prvtQosMapProfExpToFcColor, prvtQosPortEgrPolName=prvtQosPortEgrPolName, prvtQosRemarkProfFcToDscpRS=prvtQosRemarkProfFcToDscpRS, prvtQosRemarkProfileTable=prvtQosRemarkProfileTable, prvtQosTailDropProfTable=prvtQosTailDropProfTable, prvtQosPortEgrPolQueWredProf=prvtQosPortEgrPolQueWredProf, prvtQosWredProfEntry=prvtQosWredProfEntry, prvtQosMapProfVptToFcColor=prvtQosMapProfVptToFcColor, prvtQosRemarkProfFcToDscpColor=prvtQosRemarkProfFcToDscpColor, prvtQosMapProfAnyExpToFcValue=prvtQosMapProfAnyExpToFcValue, prvtQosPortIngPolMapProf=prvtQosPortIngPolMapProf, prvtQosRemarkProfFcToDscpEntry=prvtQosRemarkProfFcToDscpEntry, prvtQosSredProfEntry=prvtQosSredProfEntry, prvtQosSvcIngPolShaperProfile=prvtQosSvcIngPolShaperProfile, prvtQosServSapPolicyEnable=prvtQosServSapPolicyEnable, prvtQosSchedProfileQueue3Weight=prvtQosSchedProfileQueue3Weight, prvtQosFcToQueueProfFcUniQueId=prvtQosFcToQueueProfFcUniQueId, prvtQosServiceEntry=prvtQosServiceEntry, prvtQosMapProfAnyDscpToFcColor=prvtQosMapProfAnyDscpToFcColor, prvtQosSvcIngPolName=prvtQosSvcIngPolName, prvtQosTailDropProfDescr=prvtQosTailDropProfDescr, prvtQosSchedProfileQueue8Weight=prvtQosSchedProfileQueue8Weight, prvtQosRemarkProfFcToVptEntry=prvtQosRemarkProfFcToVptEntry, prvtQosRemarkProfFcToExpTable=prvtQosRemarkProfFcToExpTable, PrvtQosServiceIdType=PrvtQosServiceIdType, prvtQosMapProfEntry=prvtQosMapProfEntry, prvtQosServShaperProfCIR=prvtQosServShaperProfCIR, PrvtQosPolicyNameType=PrvtQosPolicyNameType, prvtQosSchedProfileTable=prvtQosSchedProfileTable, prvtQosMIB=prvtQosMIB, prvtQosServSapTable=prvtQosServSapTable, prvtQosSredProfRedThreshold=prvtQosSredProfRedThreshold, prvtQosPortEgrPolDescr=prvtQosPortEgrPolDescr, prvtQosRemarkProfObjects=prvtQosRemarkProfObjects, prvtQosSchedProfileQueue6Weight=prvtQosSchedProfileQueue6Weight, prvtQosMapProfDscpToFcEntry=prvtQosMapProfDscpToFcEntry, prvtQosPortEgrPolRowStatus=prvtQosPortEgrPolRowStatus, prvtQosPortEgrPolSchedProf=prvtQosPortEgrPolSchedProf, prvtQosTailDropProfRedThresh=prvtQosTailDropProfRedThresh, prvtQosSvcIngPolSchedProfile=prvtQosSvcIngPolSchedProfile, prvtQosMapProfExpToFcRowStatus=prvtQosMapProfExpToFcRowStatus, PrvtQosDescrType=PrvtQosDescrType, prvtQosMapProfDscpToFcTable=prvtQosMapProfDscpToFcTable, prvtQosPortEgrPolQueShaperProf=prvtQosPortEgrPolQueShaperProf, prvtQosPortEgrPolTable=prvtQosPortEgrPolTable, prvtQosServSapRowStatus=prvtQosServSapRowStatus, prvtQosFcToQueueProfFcEntry=prvtQosFcToQueueProfFcEntry, prvtQosFcToQueueProfFcName=prvtQosFcToQueueProfFcName, prvtQosPortEgrPolTailDropProf=prvtQosPortEgrPolTailDropProf, PrvtQosPolicyNameOrNoneType=PrvtQosPolicyNameOrNoneType, prvtQosSredProfId=prvtQosSredProfId, prvtQosInterfaceEntry=prvtQosInterfaceEntry, prvtQosSchedProfileQueue2Weight=prvtQosSchedProfileQueue2Weight, prvtQosSredProfTable=prvtQosSredProfTable, prvtQosSchedProfileQueue1Weight=prvtQosSchedProfileQueue1Weight, PrvtQosDscpType=PrvtQosDscpType, prvtQosSchedProfileQueue4Weight=prvtQosSchedProfileQueue4Weight, prvtQosPortIngPolUntrToFcColor=prvtQosPortIngPolUntrToFcColor, PrvtQosVptType=PrvtQosVptType, prvtQosInterfaceIngPolicy=prvtQosInterfaceIngPolicy, prvtQosFcToQueueProfileName=prvtQosFcToQueueProfileName, prvtQosMapProfAnyDscpToFcValue=prvtQosMapProfAnyDscpToFcValue, prvtQosPortShaperProfCIR=prvtQosPortShaperProfCIR, prvtQosServShaperProfRowStatus=prvtQosServShaperProfRowStatus, prvtQosMapProfDscpToFcColor=prvtQosMapProfDscpToFcColor, prvtQosMapProfAnyExpToFcColor=prvtQosMapProfAnyExpToFcColor, prvtQosFcToQueueProfObjects=prvtQosFcToQueueProfObjects, prvtQosShaperProfObjects=prvtQosShaperProfObjects, prvtQosFcToQueueProfileEntry=prvtQosFcToQueueProfileEntry, prvtQosPortEgrPolQueEntry=prvtQosPortEgrPolQueEntry, prvtQosPortIngPolTrustMode=prvtQosPortIngPolTrustMode, prvtQosServiceIngressPolicy=prvtQosServiceIngressPolicy, prvtQosMapProfObjects=prvtQosMapProfObjects, prvtQosRemarkProfFcToExpColor=prvtQosRemarkProfFcToExpColor, prvtQosMapProfVptToFcValue=prvtQosMapProfVptToFcValue, prvtQosSvcIngPolEntry=prvtQosSvcIngPolEntry, prvtQosMapProfDscpToFcValue=prvtQosMapProfDscpToFcValue, prvtQosMapProfDscpToFcRowStatus=prvtQosMapProfDscpToFcRowStatus, prvtQosPortEgrPolShaperProf=prvtQosPortEgrPolShaperProf, prvtQosServShaperProfDescr=prvtQosServShaperProfDescr, prvtQosMapProfVptToFcTable=prvtQosMapProfVptToFcTable, prvtQosPortIngPolTable=prvtQosPortIngPolTable, prvtQosMapProfDescr=prvtQosMapProfDescr, prvtQosTailDropProfYellowThresh=prvtQosTailDropProfYellowThresh, prvtQosPortShaperProfEntry=prvtQosPortShaperProfEntry, prvtQosPortPolObjects=prvtQosPortPolObjects, prvtQosServShaperProfId=prvtQosServShaperProfId, prvtQosTailDropProfEntry=prvtQosTailDropProfEntry, prvtQosSredProfRedProbability=prvtQosSredProfRedProbability, prvtQosRemarkProfFcToVptId=prvtQosRemarkProfFcToVptId, prvtQosFcToQueueProfFcMulQueId=prvtQosFcToQueueProfFcMulQueId, prvtQosMapProfVptToFcEntry=prvtQosMapProfVptToFcEntry, prvtQosSvcIngPolQueEntry=prvtQosSvcIngPolQueEntry, PrvtQosFcType=PrvtQosFcType, prvtQosSchedProfileId=prvtQosSchedProfileId, prvtQosPortShaperProfRowStatus=prvtQosPortShaperProfRowStatus, prvtQosWredProfTable=prvtQosWredProfTable, prvtQosSchedProfileRowStatus=prvtQosSchedProfileRowStatus, prvtQosPortShaperProfCBS=prvtQosPortShaperProfCBS, prvtQosMapProfExpToFcId=prvtQosMapProfExpToFcId, prvtQosRemarkProfFcToDscpId=prvtQosRemarkProfFcToDscpId, prvtQosInterfaceTable=prvtQosInterfaceTable, PYSNMP_MODULE_ID=prvtQosMIB, prvtQosPortShaperProfDescr=prvtQosPortShaperProfDescr, prvtQosRemarkProfFcToExpEntry=prvtQosRemarkProfFcToExpEntry, prvtQosWredProfYellowProbability=prvtQosWredProfYellowProbability, prvtQosRemarkProfFcToDscpTable=prvtQosRemarkProfFcToDscpTable, prvtQosPortEgrPolQueId=prvtQosPortEgrPolQueId, prvtQosServShaperProfTable=prvtQosServShaperProfTable, PrvtQosProfileIdType=PrvtQosProfileIdType, prvtQosFcToQueueProfileRowStatus=prvtQosFcToQueueProfileRowStatus, prvtQosFcToQueueProfFcTable=prvtQosFcToQueueProfFcTable, prvtQosServPolObjects=prvtQosServPolObjects, prvtQosPortIngPolRowStatus=prvtQosPortIngPolRowStatus, prvtQosServiceRowStatus=prvtQosServiceRowStatus, prvtQosRemarkProfileName=prvtQosRemarkProfileName, prvtQosMapProfAnyVptToFcColor=prvtQosMapProfAnyVptToFcColor, prvtQosPortEgrPolQueSredProf=prvtQosPortEgrPolQueSredProf, PrvtQosTrustType=PrvtQosTrustType, prvtQosSvcIngPolDescr=prvtQosSvcIngPolDescr, prvtQosInterfaceEgrPolicy=prvtQosInterfaceEgrPolicy, prvtQosPortEgrPolQueTailDropProf=prvtQosPortEgrPolQueTailDropProf, prvtQosRemarkProfileEntry=prvtQosRemarkProfileEntry, prvtQosSvcIngPolQueShaperProf=prvtQosSvcIngPolQueShaperProf, prvtQosSchedProfileEntry=prvtQosSchedProfileEntry, prvtQosSvcIngPolRowStatus=prvtQosSvcIngPolRowStatus, prvtQosServSapEntry=prvtQosServSapEntry, prvtQosMapProfExpToFcTable=prvtQosMapProfExpToFcTable, prvtQosServiceId=prvtQosServiceId, prvtQosInterfaceObjects=prvtQosInterfaceObjects, PrvtQosExpType=PrvtQosExpType, prvtQosWredProfDescr=prvtQosWredProfDescr, prvtQosMapProfExpToFcValue=prvtQosMapProfExpToFcValue, prvtQosPortIngPolDescr=prvtQosPortIngPolDescr, prvtQosServShaperProfCBS=prvtQosServShaperProfCBS, prvtQosSredProfDescr=prvtQosSredProfDescr, prvtQosSchedProfObjects=prvtQosSchedProfObjects, prvtQosWredProfRedThreshold=prvtQosWredProfRedThreshold, prvtQosSchedProfileQueue7Weight=prvtQosSchedProfileQueue7Weight, prvtQosSchedProfileDescription=prvtQosSchedProfileDescription, prvtQosWredProfRedProbability=prvtQosWredProfRedProbability, prvtQosPortShaperProfId=prvtQosPortShaperProfId, prvtQosSvcIngPolQueId=prvtQosSvcIngPolQueId)
