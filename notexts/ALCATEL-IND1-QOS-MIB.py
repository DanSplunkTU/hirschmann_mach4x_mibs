#
# PySNMP MIB module ALCATEL-IND1-QOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-QOS-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 16:14:19 2022
# On host fv-az77-763 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
softentIND1QoS, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1QoS")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
Ipv6IfIndexOrZero, Ipv6Address = mibBuilder.importSymbols("IPV6-TC", "Ipv6IfIndexOrZero", "Ipv6Address")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibIdentifier, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Counter32, IpAddress, ObjectIdentity, ModuleIdentity, Integer32, TimeTicks, Unsigned32, Bits, NotificationType, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Counter32", "IpAddress", "ObjectIdentity", "ModuleIdentity", "Integer32", "TimeTicks", "Unsigned32", "Bits", "NotificationType", "iso")
MacAddress, TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "DisplayString", "RowStatus")
alaQoSMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1))
alaQoSMIB.setRevisions(('2014-07-14 00:00',))
if mibBuilder.loadTexts: alaQoSMIB.setLastUpdated('201408210000Z')
if mibBuilder.loadTexts: alaQoSMIB.setOrganization('Alcatel IND')
alaQoSMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1))
if mibBuilder.loadTexts: alaQoSMIBObjects.setStatus('current')
alaQoSRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1), )
if mibBuilder.loadTexts: alaQoSRuleTable.setStatus('current')
alaQoSRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSRuleName"))
if mibBuilder.loadTexts: alaQoSRuleEntry.setStatus('current')
alaQoSRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSRuleName.setStatus('current')
alaQoSRuleEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleEnabled.setStatus('current')
alaQoSRuleSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleSource.setStatus('current')
alaQoSRulePrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRulePrecedence.setStatus('current')
alaQoSRuleCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleCondition.setStatus('current')
alaQoSRuleAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleAction.setStatus('current')
alaQoSRuleReflexive = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleReflexive.setStatus('current')
alaQoSRuleSave = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleSave.setStatus('current')
alaQoSRuleLog = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleLog.setStatus('current')
alaQoSRuleEnforced = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleEnforced.setStatus('current')
alaQoSRuleActive = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleActive.setStatus('current')
alaQoSRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleRowStatus.setStatus('current')
alaQoSRuleValidityPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleValidityPeriod.setStatus('current')
alaQoSRuleValidityPeriodStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleValidityPeriodStatus.setStatus('current')
alaQoSRuleLogInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(30)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleLogInterval.setStatus('current')
alaQoSRuleCountType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("packets", 1), ("bytes", 2))).clone('packets')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleCountType.setStatus('current')
alaQoSRulePacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRulePacketCount.setStatus('current')
alaQoSRuleByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleByteCount.setStatus('current')
alaQoSRuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleType.setStatus('current')
alaQoSRuleTrapEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleTrapEvents.setStatus('current')
alaQoSRuleDefaultList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleDefaultList.setStatus('current')
alaQoSRuleGreenPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleGreenPacketCount.setStatus('current')
alaQoSRuleYellowPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleYellowPacketCount.setStatus('current')
alaQoSRuleRedPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleRedPacketCount.setStatus('current')
alaQoSRuleGreenByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleGreenByteCount.setStatus('current')
alaQoSRuleYellowByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleYellowByteCount.setStatus('current')
alaQoSRuleRedByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 1, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleRedByteCount.setStatus('current')
alaQoSAppliedRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2), )
if mibBuilder.loadTexts: alaQoSAppliedRuleTable.setStatus('current')
alaQoSAppliedRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleName"))
if mibBuilder.loadTexts: alaQoSAppliedRuleEntry.setStatus('current')
alaQoSAppliedRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedRuleName.setStatus('current')
alaQoSAppliedRuleEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleEnabled.setStatus('current')
alaQoSAppliedRuleSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleSource.setStatus('current')
alaQoSAppliedRulePrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRulePrecedence.setStatus('current')
alaQoSAppliedRuleCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleCondition.setStatus('current')
alaQoSAppliedRuleAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleAction.setStatus('current')
alaQoSAppliedRuleReflexive = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleReflexive.setStatus('current')
alaQoSAppliedRuleSave = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleSave.setStatus('current')
alaQoSAppliedRuleLog = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleLog.setStatus('current')
alaQoSAppliedRuleEnforced = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleEnforced.setStatus('current')
alaQoSAppliedRuleActive = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleActive.setStatus('current')
alaQoSAppliedRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 12), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleRowStatus.setStatus('current')
alaQoSAppliedRuleValidityPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleValidityPeriod.setStatus('current')
alaQoSAppliedRuleValidityPeriodStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleValidityPeriodStatus.setStatus('current')
alaQoSAppliedRuleLogInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleLogInterval.setStatus('current')
alaQoSAppliedRuleCountType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("packets", 1), ("bytes", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleCountType.setStatus('current')
alaQoSAppliedRulePacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRulePacketCount.setStatus('current')
alaQoSAppliedRuleByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleByteCount.setStatus('current')
alaQoSAppliedRuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleType.setStatus('current')
alaQoSAppliedRuleTrapEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedRuleTrapEvents.setStatus('current')
alaQoSAppliedRuleDefaultList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('yes')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedRuleDefaultList.setStatus('current')
alaQoSAppliedRuleGreenPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleGreenPacketCount.setStatus('current')
alaQoSAppliedRuleYellowPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleYellowPacketCount.setStatus('current')
alaQoSAppliedRuleRedPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleRedPacketCount.setStatus('current')
alaQoSAppliedRuleGreenByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleGreenByteCount.setStatus('current')
alaQoSAppliedRuleYellowByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleYellowByteCount.setStatus('current')
alaQoSAppliedRuleRedByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 2, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleRedByteCount.setStatus('current')
alaQoSConditionTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3), )
if mibBuilder.loadTexts: alaQoSConditionTable.setStatus('current')
alaQoSConditionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSConditionName"))
if mibBuilder.loadTexts: alaQoSConditionEntry.setStatus('current')
alaQoSConditionName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSConditionName.setStatus('current')
alaQoSConditionSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSource.setStatus('current')
alaQoSConditionSourceSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceSlot.setStatus('current')
alaQoSConditionSourceSlotStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceSlotStatus.setStatus('current')
alaQoSConditionSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourcePort.setStatus('current')
alaQoSConditionSourcePortGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourcePortGroup.setStatus('current')
alaQoSConditionSourcePortGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourcePortGroupStatus.setStatus('current')
alaQoSConditionDestinationSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationSlot.setStatus('current')
alaQoSConditionDestinationSlotStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationSlotStatus.setStatus('current')
alaQoSConditionDestinationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationPort.setStatus('current')
alaQoSConditionDestinationPortGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationPortGroup.setStatus('current')
alaQoSConditionDestinationPortGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationPortGroupStatus.setStatus('current')
alaQoSConditionSourceMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 13), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceMacAddr.setStatus('current')
alaQoSConditionSourceMacAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceMacAddrStatus.setStatus('current')
alaQoSConditionSourceMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 15), MacAddress().clone(hexValue="ffffffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceMacMask.setStatus('current')
alaQoSConditionSourceMacGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 16), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceMacGroup.setStatus('current')
alaQoSConditionSourceMacGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceMacGroupStatus.setStatus('current')
alaQoSConditionDestinationMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 18), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationMacAddr.setStatus('current')
alaQoSConditionDestinationMacAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationMacAddrStatus.setStatus('current')
alaQoSConditionDestinationMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 20), MacAddress().clone(hexValue="ffffffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationMacMask.setStatus('current')
alaQoSConditionDestinationMacGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 21), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationMacGroup.setStatus('current')
alaQoSConditionDestinationMacGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationMacGroupStatus.setStatus('current')
alaQoSConditionSourceVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceVlan.setStatus('current')
alaQoSConditionSourceVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceVlanStatus.setStatus('current')
alaQoSConditionDestinationVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationVlan.setStatus('current')
alaQoSConditionDestinationVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationVlanStatus.setStatus('current')
alaQoSCondition8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSCondition8021p.setStatus('current')
alaQoSCondition8021pStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSCondition8021pStatus.setStatus('current')
alaQoSConditionSourceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 29), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceIpAddr.setStatus('current')
alaQoSConditionSourceIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceIpAddrStatus.setStatus('current')
alaQoSConditionSourceIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 31), IpAddress().clone(hexValue="ffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceIpMask.setStatus('current')
alaQoSConditionSourceNetworkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 32), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceNetworkGroup.setStatus('current')
alaQoSConditionSourceNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceNetworkGroupStatus.setStatus('current')
alaQoSConditionDestinationIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 34), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationIpAddr.setStatus('current')
alaQoSConditionDestinationIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationIpAddrStatus.setStatus('current')
alaQoSConditionDestinationIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 36), IpAddress().clone(hexValue="ffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationIpMask.setStatus('current')
alaQoSConditionDestinationNetworkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 37), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationNetworkGroup.setStatus('current')
alaQoSConditionDestinationNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationNetworkGroupStatus.setStatus('current')
alaQoSConditionMulticastIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 39), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionMulticastIpAddr.setStatus('current')
alaQoSConditionMulticastIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionMulticastIpAddrStatus.setStatus('current')
alaQoSConditionMulticastIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 41), IpAddress().clone(hexValue="ffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionMulticastIpMask.setStatus('current')
alaQoSConditionMulticastNetworkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 42), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionMulticastNetworkGroup.setStatus('current')
alaQoSConditionMulticastNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionMulticastNetworkGroupStatus.setStatus('current')
alaQoSConditionTos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTos.setStatus('current')
alaQoSConditionTosStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTosStatus.setStatus('current')
alaQoSConditionTosMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(7)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTosMask.setStatus('current')
alaQoSConditionDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDscp.setStatus('current')
alaQoSConditionDscpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDscpStatus.setStatus('current')
alaQoSConditionDscpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)).clone(63)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDscpMask.setStatus('current')
alaQoSConditionIpProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIpProtocol.setStatus('current')
alaQoSConditionIpProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIpProtocolStatus.setStatus('current')
alaQoSConditionSourceIpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceIpPort.setStatus('current')
alaQoSConditionSourceIpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceIpPortStatus.setStatus('current')
alaQoSConditionDestinationIpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 54), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationIpPort.setStatus('current')
alaQoSConditionDestinationIpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationIpPortStatus.setStatus('current')
alaQoSConditionService = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 56), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionService.setStatus('current')
alaQoSConditionServiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionServiceStatus.setStatus('current')
alaQoSConditionServiceGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 58), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionServiceGroup.setStatus('current')
alaQoSConditionServiceGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionServiceGroupStatus.setStatus('current')
alaQoSConditionIcmpType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIcmpType.setStatus('current')
alaQoSConditionIcmpTypeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIcmpTypeStatus.setStatus('current')
alaQoSConditionIcmpCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 62), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIcmpCode.setStatus('current')
alaQoSConditionIcmpCodeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIcmpCodeStatus.setStatus('current')
alaQoSConditionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 64), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionRowStatus.setStatus('current')
alaQoSConditionSourcePortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 65), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourcePortEnd.setStatus('current')
alaQoSConditionDestinationPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 66), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationPortEnd.setStatus('current')
alaQoSConditionSourceIpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 67), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceIpPortEnd.setStatus('current')
alaQoSConditionDestinationIpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 68), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationIpPortEnd.setStatus('current')
alaQoSConditionSourceTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 69), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceTcpPort.setStatus('current')
alaQoSConditionSourceTcpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceTcpPortStatus.setStatus('current')
alaQoSConditionSourceTcpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 71), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceTcpPortEnd.setStatus('current')
alaQoSConditionDestinationTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 72), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationTcpPort.setStatus('current')
alaQoSConditionDestinationTcpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 73), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationTcpPortStatus.setStatus('current')
alaQoSConditionDestinationTcpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 74), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationTcpPortEnd.setStatus('current')
alaQoSConditionSourceUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 75), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceUdpPort.setStatus('current')
alaQoSConditionSourceUdpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 76), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceUdpPortStatus.setStatus('current')
alaQoSConditionSourceUdpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 77), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceUdpPortEnd.setStatus('current')
alaQoSConditionDestinationUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 78), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationUdpPort.setStatus('current')
alaQoSConditionDestinationUdpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 79), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationUdpPortStatus.setStatus('current')
alaQoSConditionDestinationUdpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 80), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationUdpPortEnd.setStatus('current')
alaQoSConditionEthertype = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 81), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionEthertype.setStatus('current')
alaQoSConditionEthertypeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 82), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionEthertypeStatus.setStatus('current')
alaQoSConditionTcpFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 83), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("all", 1), ("any", 2))).clone('all')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTcpFlags.setStatus('current')
alaQoSConditionTcpFlagsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 84), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTcpFlagsStatus.setStatus('current')
alaQoSConditionTcpFlagsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 85), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTcpFlagsVal.setStatus('current')
alaQoSConditionTcpFlagsValStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 86), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTcpFlagsValStatus.setStatus('current')
alaQoSConditionTcpFlagsMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 87), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTcpFlagsMask.setStatus('current')
alaQoSConditionTcpFlagsMaskStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 88), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTcpFlagsMaskStatus.setStatus('current')
alaQoSConditionTcpEstablished = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 89), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionTcpEstablished.setStatus('current')
alaQoSConditionSourceIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 90), Ipv6Address().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceIpv6Addr.setStatus('current')
alaQoSConditionSourceIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 91), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceIpv6AddrStatus.setStatus('current')
alaQoSConditionSourceIpv6Mask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 92), Ipv6Address().clone(hexValue="ffffffffffffffffffffffffffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceIpv6Mask.setStatus('current')
alaQoSConditionDestinationIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 93), Ipv6Address().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationIpv6Addr.setStatus('current')
alaQoSConditionDestinationIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 94), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationIpv6AddrStatus.setStatus('current')
alaQoSConditionDestinationIpv6Mask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 95), Ipv6Address().clone(hexValue="ffffffffffffffffffffffffffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationIpv6Mask.setStatus('current')
alaQoSConditionIpv6Traffic = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 96), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIpv6Traffic.setStatus('current')
alaQoSConditionIpv6NH = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 97), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIpv6NH.setStatus('current')
alaQoSConditionIpv6NHStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 98), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIpv6NHStatus.setStatus('current')
alaQoSConditionIpv6FlowLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 99), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1048575))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIpv6FlowLabel.setStatus('current')
alaQoSConditionIpv6FlowLabelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 100), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionIpv6FlowLabelStatus.setStatus('current')
alaQoSConditionMcastIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 101), Ipv6Address().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionMcastIpv6Addr.setStatus('current')
alaQoSConditionMcastIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 102), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionMcastIpv6AddrStatus.setStatus('current')
alaQoSConditionMcastIpv6Mask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 103), Ipv6Address().clone(hexValue="ffffffffffffffffffffffffffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionMcastIpv6Mask.setStatus('current')
alaQoSConditionDscpEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 104), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDscpEnd.setStatus('current')
alaQoSConditionInnerSourceVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 105), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionInnerSourceVlan.setStatus('current')
alaQoSConditionInnerSourceVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 106), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionInnerSourceVlanStatus.setStatus('current')
alaQoSConditionInner8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 107), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionInner8021p.setStatus('current')
alaQoSConditionInner8021pStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 108), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionInner8021pStatus.setStatus('current')
alaQoSConditionVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 109), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionVrfName.setStatus('current')
alaQoSConditionVrfNameStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 110), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionVrfNameStatus.setStatus('current')
alaQoSConditionFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 111), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionFragments.setStatus('current')
alaQoSConditionSourceChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 112), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourceChassis.setStatus('current')
alaQoSConditionDestinationChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 113), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDestinationChassis.setStatus('current')
alaQoSConditionAppFpGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 114), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionAppFpGroup.setStatus('current')
alaQoSConditionAppFpGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 115), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionAppFpGroupStatus.setStatus('current')
alaQoSConditionSIP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 116), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("audio", 1), ("video", 2), ("other", 3))).clone('audio')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSIP.setStatus('current')
alaQoSConditionSIPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 117), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSIPStatus.setStatus('current')
alaQoSConditionDPIAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 118), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDPIAppName.setStatus('current')
alaQoSConditionDPIGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 119), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDPIGrpName.setStatus('current')
alaQoSConditionDPIAppNameStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 120), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDPIAppNameStatus.setStatus('current')
alaQoSConditionDPIAppGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 121), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionDPIAppGroupStatus.setStatus('current')
alaQoSConditionVxlanVni = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 122), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16777215))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionVxlanVni.setStatus('current')
alaQoSConditionVxlanVniStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 123), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionVxlanVniStatus.setStatus('current')
alaQoSConditionVxlanPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 124), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionVxlanPort.setStatus('current')
alaQoSConditionVxlanPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 125), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionVxlanPortStatus.setStatus('current')
alaQoSConditionVmSourceMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 126), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionVmSourceMacAddr.setStatus('current')
alaQoSConditionVmSourceMacAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 127), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionVmSourceMacAddrStatus.setStatus('current')
alaQoSConditionVmSourceMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 128), MacAddress().clone(hexValue="ffffffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionVmSourceMacMask.setStatus('current')
alaQoSConditionVmSourceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 129), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionVmSourceIpAddr.setStatus('current')
alaQoSConditionVmSourceIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 130), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionVmSourceIpAddrStatus.setStatus('current')
alaQoSConditionVmSourceIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 131), IpAddress().clone(hexValue="ffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionVmSourceIpMask.setStatus('current')
alaQoSConditionVmSourceIpv6IpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 132), Ipv6Address().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionVmSourceIpv6IpAddr.setStatus('current')
alaQoSConditionVmSourceIpv6IpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 133), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionVmSourceIpv6IpAddrStatus.setStatus('current')
alaQoSConditionVmSourceIpv6IpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 134), Ipv6Address().clone(hexValue="ffffffffffffffffffffffffffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionVmSourceIpv6IpMask.setStatus('current')
alaQoSConditionVmIpProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 135), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionVmIpProtocol.setStatus('current')
alaQoSConditionVmIpProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 136), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionVmIpProtocolStatus.setStatus('current')
alaQosConditionVmL4SourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 137), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQosConditionVmL4SourcePort.setStatus('current')
alaQosConditionVmL4SourcePortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 138), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQosConditionVmL4SourcePortStatus.setStatus('current')
alaQosConditionVmL4DestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 139), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQosConditionVmL4DestPort.setStatus('current')
alaQosConditionVmL4DestPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 140), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQosConditionVmL4DestPortStatus.setStatus('current')
alaQosConditionVxlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 141), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQosConditionVxlanStatus.setStatus('current')
alaQoSConditionSourcePortSplitGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 142), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourcePortSplitGroup.setStatus('current')
alaQoSConditionSourcePortSplitGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 3, 1, 143), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConditionSourcePortSplitGroupStatus.setStatus('current')
alaQoSAppliedConditionTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4), )
if mibBuilder.loadTexts: alaQoSAppliedConditionTable.setStatus('current')
alaQoSAppliedConditionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionName"))
if mibBuilder.loadTexts: alaQoSAppliedConditionEntry.setStatus('current')
alaQoSAppliedConditionName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedConditionName.setStatus('current')
alaQoSAppliedConditionSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSource.setStatus('current')
alaQoSAppliedConditionSourceSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceSlot.setStatus('current')
alaQoSAppliedConditionSourceSlotStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceSlotStatus.setStatus('current')
alaQoSAppliedConditionSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourcePort.setStatus('current')
alaQoSAppliedConditionSourcePortGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourcePortGroup.setStatus('current')
alaQoSAppliedConditionSourcePortGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourcePortGroupStatus.setStatus('current')
alaQoSAppliedConditionDestinationSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationSlot.setStatus('current')
alaQoSAppliedConditionDestinationSlotStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationSlotStatus.setStatus('current')
alaQoSAppliedConditionDestinationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationPort.setStatus('current')
alaQoSAppliedConditionDestinationPortGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationPortGroup.setStatus('current')
alaQoSAppliedConditionDestinationPortGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationPortGroupStatus.setStatus('current')
alaQoSAppliedConditionSourceMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 13), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceMacAddr.setStatus('current')
alaQoSAppliedConditionSourceMacAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceMacAddrStatus.setStatus('current')
alaQoSAppliedConditionSourceMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 15), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceMacMask.setStatus('current')
alaQoSAppliedConditionSourceMacGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 16), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceMacGroup.setStatus('current')
alaQoSAppliedConditionSourceMacGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceMacGroupStatus.setStatus('current')
alaQoSAppliedConditionDestinationMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 18), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationMacAddr.setStatus('current')
alaQoSAppliedConditionDestinationMacAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationMacAddrStatus.setStatus('current')
alaQoSAppliedConditionDestinationMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 20), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationMacMask.setStatus('current')
alaQoSAppliedConditionDestinationMacGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 21), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationMacGroup.setStatus('current')
alaQoSAppliedConditionDestinationMacGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationMacGroupStatus.setStatus('current')
alaQoSAppliedConditionSourceVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceVlan.setStatus('current')
alaQoSAppliedConditionSourceVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceVlanStatus.setStatus('current')
alaQoSAppliedConditionDestinationVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationVlan.setStatus('current')
alaQoSAppliedConditionDestinationVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationVlanStatus.setStatus('current')
alaQoSAppliedCondition8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedCondition8021p.setStatus('current')
alaQoSAppliedCondition8021pStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedCondition8021pStatus.setStatus('current')
alaQoSAppliedConditionSourceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 29), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceIpAddr.setStatus('current')
alaQoSAppliedConditionSourceIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceIpAddrStatus.setStatus('current')
alaQoSAppliedConditionSourceIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 31), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceIpMask.setStatus('current')
alaQoSAppliedConditionSourceNetworkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 32), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceNetworkGroup.setStatus('current')
alaQoSAppliedConditionSourceNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceNetworkGroupStatus.setStatus('current')
alaQoSAppliedConditionDestinationIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 34), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationIpAddr.setStatus('current')
alaQoSAppliedConditionDestinationIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationIpAddrStatus.setStatus('current')
alaQoSAppliedConditionDestinationIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 36), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationIpMask.setStatus('current')
alaQoSAppliedConditionDestinationNetworkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 37), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationNetworkGroup.setStatus('current')
alaQoSAppliedConditionDestinationNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationNetworkGroupStatus.setStatus('current')
alaQoSAppliedConditionMulticastIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 39), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionMulticastIpAddr.setStatus('current')
alaQoSAppliedConditionMulticastIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionMulticastIpAddrStatus.setStatus('current')
alaQoSAppliedConditionMulticastIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 41), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionMulticastIpMask.setStatus('current')
alaQoSAppliedConditionMulticastNetworkGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 42), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionMulticastNetworkGroup.setStatus('current')
alaQoSAppliedConditionMulticastNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionMulticastNetworkGroupStatus.setStatus('current')
alaQoSAppliedConditionTos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTos.setStatus('current')
alaQoSAppliedConditionTosStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTosStatus.setStatus('current')
alaQoSAppliedConditionTosMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTosMask.setStatus('current')
alaQoSAppliedConditionDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDscp.setStatus('current')
alaQoSAppliedConditionDscpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDscpStatus.setStatus('current')
alaQoSAppliedConditionDscpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDscpMask.setStatus('current')
alaQoSAppliedConditionIpProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIpProtocol.setStatus('current')
alaQoSAppliedConditionIpProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIpProtocolStatus.setStatus('current')
alaQoSAppliedConditionSourceIpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceIpPort.setStatus('current')
alaQoSAppliedConditionSourceIpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceIpPortStatus.setStatus('current')
alaQoSAppliedConditionDestinationIpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 54), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationIpPort.setStatus('current')
alaQoSAppliedConditionDestinationIpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationIpPortStatus.setStatus('current')
alaQoSAppliedConditionService = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 56), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionService.setStatus('current')
alaQoSAppliedConditionServiceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionServiceStatus.setStatus('current')
alaQoSAppliedConditionServiceGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 58), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionServiceGroup.setStatus('current')
alaQoSAppliedConditionServiceGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionServiceGroupStatus.setStatus('current')
alaQoSAppliedConditionIcmpType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIcmpType.setStatus('current')
alaQoSAppliedConditionIcmpTypeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIcmpTypeStatus.setStatus('current')
alaQoSAppliedConditionIcmpCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 62), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIcmpCode.setStatus('current')
alaQoSAppliedConditionIcmpCodeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIcmpCodeStatus.setStatus('current')
alaQoSAppliedConditionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 64), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionRowStatus.setStatus('current')
alaQoSAppliedConditionSourcePortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 65), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourcePortEnd.setStatus('current')
alaQoSAppliedConditionDestinationPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 66), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationPortEnd.setStatus('current')
alaQoSAppliedConditionSourceIpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 67), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceIpPortEnd.setStatus('current')
alaQoSAppliedConditionDestinationIpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 68), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationIpPortEnd.setStatus('current')
alaQoSAppliedConditionSourceTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 69), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceTcpPort.setStatus('current')
alaQoSAppliedConditionSourceTcpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 70), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceTcpPortStatus.setStatus('current')
alaQoSAppliedConditionSourceTcpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 71), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceTcpPortEnd.setStatus('current')
alaQoSAppliedConditionDestinationTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 72), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationTcpPort.setStatus('current')
alaQoSAppliedConditionDestinationTcpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 73), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationTcpPortStatus.setStatus('current')
alaQoSAppliedConditionDestinationTcpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 74), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationTcpPortEnd.setStatus('current')
alaQoSAppliedConditionSourceUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 75), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceUdpPort.setStatus('current')
alaQoSAppliedConditionSourceUdpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 76), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceUdpPortStatus.setStatus('current')
alaQoSAppliedConditionSourceUdpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 77), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceUdpPortEnd.setStatus('current')
alaQoSAppliedConditionDestinationUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 78), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationUdpPort.setStatus('current')
alaQoSAppliedConditionDestinationUdpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 79), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationUdpPortStatus.setStatus('current')
alaQoSAppliedConditionDestinationUdpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 80), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationUdpPortEnd.setStatus('current')
alaQoSAppliedConditionEthertype = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 81), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionEthertype.setStatus('current')
alaQoSAppliedConditionEthertypeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 82), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionEthertypeStatus.setStatus('current')
alaQoSAppliedConditionTcpFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 83), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("all", 1), ("any", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTcpFlags.setStatus('current')
alaQoSAppliedConditionTcpFlagsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 84), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTcpFlagsStatus.setStatus('current')
alaQoSAppliedConditionTcpFlagsVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 85), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTcpFlagsVal.setStatus('current')
alaQoSAppliedConditionTcpFlagsValStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 86), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTcpFlagsValStatus.setStatus('current')
alaQoSAppliedConditionTcpFlagsMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 87), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTcpFlagsMask.setStatus('current')
alaQoSAppliedConditionTcpFlagsMaskStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 88), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTcpFlagsMaskStatus.setStatus('current')
alaQoSAppliedConditionTcpEstablished = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 89), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionTcpEstablished.setStatus('current')
alaQoSAppliedConditionSourceIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 90), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceIpv6Addr.setStatus('current')
alaQoSAppliedConditionSourceIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 91), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceIpv6AddrStatus.setStatus('current')
alaQoSAppliedConditionSourceIpv6Mask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 92), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceIpv6Mask.setStatus('current')
alaQoSAppliedConditionDestinationIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 93), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationIpv6Addr.setStatus('current')
alaQoSAppliedConditionDestinationIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 94), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationIpv6AddrStatus.setStatus('current')
alaQoSAppliedConditionDestinationIpv6Mask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 95), Ipv6Address()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationIpv6Mask.setStatus('current')
alaQoSAppliedConditionIpv6Traffic = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 96), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIpv6Traffic.setStatus('current')
alaQoSAppliedConditionIpv6NH = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 97), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIpv6NH.setStatus('current')
alaQoSAppliedConditionIpv6NHStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 98), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIpv6NHStatus.setStatus('current')
alaQoSAppliedConditionIpv6FlowLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 99), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1048575))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIpv6FlowLabel.setStatus('current')
alaQoSAppliedConditionIpv6FlowLabelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 100), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionIpv6FlowLabelStatus.setStatus('current')
alaQoSAppliedConditionMcastIpv6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 101), Ipv6Address().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionMcastIpv6Addr.setStatus('current')
alaQoSAppliedConditionMcastIpv6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 102), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionMcastIpv6AddrStatus.setStatus('current')
alaQoSAppliedConditionMcastIpv6Mask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 103), Ipv6Address().clone(hexValue="ffffffffffffffffffffffffffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionMcastIpv6Mask.setStatus('current')
alaQoSAppliedConditionDscpEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 104), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDscpEnd.setStatus('current')
alaQoSAppliedConditionInnerSourceVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 105), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionInnerSourceVlan.setStatus('current')
alaQoSAppliedConditionInnerSourceVlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 106), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionInnerSourceVlanStatus.setStatus('current')
alaQoSAppliedConditionInner8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 107), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionInner8021p.setStatus('current')
alaQoSAppliedConditionInner8021pStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 108), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionInner8021pStatus.setStatus('current')
alaQoSAppliedConditionVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 109), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionVrfName.setStatus('current')
alaQoSAppliedConditionVrfNameStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 110), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionVrfNameStatus.setStatus('current')
alaQoSAppliedConditionFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 111), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionFragments.setStatus('current')
alaQoSAppliedConditionSourceChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 112), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourceChassis.setStatus('current')
alaQoSAppliedConditionDestinationChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 113), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionDestinationChassis.setStatus('current')
alaQoSAppliedConditionAppFpGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 114), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 24))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionAppFpGroup.setStatus('current')
alaQoSAppliedConditionAppFpGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 115), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionAppFpGroupStatus.setStatus('current')
alaQoSAppliedConditionSIP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 116), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("audio", 1), ("video", 2), ("other", 3))).clone('audio')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionSIP.setStatus('current')
alaQoSAppliedConditionSIPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 117), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionSIPStatus.setStatus('current')
alaQoSAppliedConditionDPIAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 118), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionDPIAppName.setStatus('current')
alaQoSAppliedConditionDPIAppGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 119), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionDPIAppGrp.setStatus('current')
alaQoSAppliedConditionDPIAppNameStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 120), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionDPIAppNameStatus.setStatus('current')
alaQoSAppliedConditionDPIAppGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 121), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionDPIAppGroupStatus.setStatus('current')
alaQoSAppliedConditionVxlanVni = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 122), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionVxlanVni.setStatus('current')
alaQoSAppliedConditionVxlanVniStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 123), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionVxlanVniStatus.setStatus('current')
alaQoSAppliedConditionVxlanPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 124), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionVxlanPort.setStatus('current')
alaQoSAppliedConditionVxlanPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 125), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionVxlanPortStatus.setStatus('current')
alaQoSAppliedConditionVmSourceMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 126), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionVmSourceMacAddr.setStatus('current')
alaQoSAppliedConditionVmSourceMacAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 127), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionVmSourceMacAddrStatus.setStatus('current')
alaQoSAppliedConditionVmSourceMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 128), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionVmSourceMacMask.setStatus('current')
alaQoSAppliedConditionVmSourceIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 129), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionVmSourceIpAddr.setStatus('current')
alaQoSAppliedConditionVmSourceIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 130), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionVmSourceIpAddrStatus.setStatus('current')
alaQoSAppliedConditionVmSourceIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 131), IpAddress().clone(hexValue="ffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionVmSourceIpMask.setStatus('current')
alaQoSAppliedConditionVmSourceIpv6IpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 132), Ipv6Address().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionVmSourceIpv6IpAddr.setStatus('current')
alaQoSAppliedConditionVmSourceIpv6IpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 133), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionVmSourceIpv6IpAddrStatus.setStatus('current')
alaQoSAppliedConditionVmSourceIpv6IpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 134), Ipv6Address().clone(hexValue="ffffffffffffffffffffffffffffffff")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionVmSourceIpv6IpMask.setStatus('current')
alaQoSAppliedConditionVmIpProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 135), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionVmIpProtocol.setStatus('current')
alaQoSAppliedConditionVmIpProtocolStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 136), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedConditionVmIpProtocolStatus.setStatus('current')
alaQosAppliedConditionVmL4SourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 137), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQosAppliedConditionVmL4SourcePort.setStatus('current')
alaQosAppliedConditionVmL4SourcePortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 138), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQosAppliedConditionVmL4SourcePortStatus.setStatus('current')
alaQosAppliedConditionVmL4DestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 139), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQosAppliedConditionVmL4DestPort.setStatus('current')
alaQosAppliedConditionVmL4DestPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 140), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQosAppliedConditionVmL4DestPortStatus.setStatus('current')
alaQosAppliedConditionVxlanStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 141), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQosAppliedConditionVxlanStatus.setStatus('current')
alaQoSAppliedConditionSourcePortSplitGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 142), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourcePortSplitGroup.setStatus('current')
alaQoSAppliedConditionSourcePortSplitGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 4, 1, 143), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedConditionSourcePortSplitGroupStatus.setStatus('current')
alaQoSServiceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5), )
if mibBuilder.loadTexts: alaQoSServiceTable.setStatus('current')
alaQoSServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSServiceName"))
if mibBuilder.loadTexts: alaQoSServiceEntry.setStatus('current')
alaQoSServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSServiceName.setStatus('current')
alaQoSServiceSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSource.setStatus('current')
alaQoSServiceProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceProtocol.setStatus('current')
alaQoSServiceSourceIpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSourceIpPort.setStatus('current')
alaQoSServiceSourceIpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSourceIpPortStatus.setStatus('current')
alaQoSServiceDestinationIpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceDestinationIpPort.setStatus('current')
alaQoSServiceDestinationIpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceDestinationIpPortStatus.setStatus('current')
alaQoSServiceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceRowStatus.setStatus('current')
alaQoSServiceSourceIpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSourceIpPortEnd.setStatus('current')
alaQoSServiceDestinationIpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceDestinationIpPortEnd.setStatus('current')
alaQoSServiceSourceTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSourceTcpPort.setStatus('current')
alaQoSServiceSourceTcpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSourceTcpPortStatus.setStatus('current')
alaQoSServiceSourceTcpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSourceTcpPortEnd.setStatus('current')
alaQoSServiceDestinationTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceDestinationTcpPort.setStatus('current')
alaQoSServiceDestinationTcpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceDestinationTcpPortStatus.setStatus('current')
alaQoSServiceDestinationTcpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceDestinationTcpPortEnd.setStatus('current')
alaQoSServiceSourceUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSourceUdpPort.setStatus('current')
alaQoSServiceSourceUdpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSourceUdpPortStatus.setStatus('current')
alaQoSServiceSourceUdpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceSourceUdpPortEnd.setStatus('current')
alaQoSServiceDestinationUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceDestinationUdpPort.setStatus('current')
alaQoSServiceDestinationUdpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceDestinationUdpPortStatus.setStatus('current')
alaQoSServiceDestinationUdpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 5, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceDestinationUdpPortEnd.setStatus('current')
alaQoSAppliedServiceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6), )
if mibBuilder.loadTexts: alaQoSAppliedServiceTable.setStatus('current')
alaQoSAppliedServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceName"))
if mibBuilder.loadTexts: alaQoSAppliedServiceEntry.setStatus('current')
alaQoSAppliedServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedServiceName.setStatus('current')
alaQoSAppliedServiceSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSource.setStatus('current')
alaQoSAppliedServiceProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceProtocol.setStatus('current')
alaQoSAppliedServiceSourceIpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSourceIpPort.setStatus('current')
alaQoSAppliedServiceSourceIpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSourceIpPortStatus.setStatus('current')
alaQoSAppliedServiceDestinationIpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceDestinationIpPort.setStatus('current')
alaQoSAppliedServiceDestinationIpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceDestinationIpPortStatus.setStatus('current')
alaQoSAppliedServiceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 8), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceRowStatus.setStatus('current')
alaQoSAppliedServiceSourceIpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSourceIpPortEnd.setStatus('current')
alaQoSAppliedServiceDestinationIpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceDestinationIpPortEnd.setStatus('current')
alaQoSAppliedServiceSourceTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSourceTcpPort.setStatus('current')
alaQoSAppliedServiceSourceTcpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSourceTcpPortStatus.setStatus('current')
alaQoSAppliedServiceSourceTcpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSourceTcpPortEnd.setStatus('current')
alaQoSAppliedServiceDestinationTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceDestinationTcpPort.setStatus('current')
alaQoSAppliedServiceDestinationTcpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceDestinationTcpPortStatus.setStatus('current')
alaQoSAppliedServiceDestinationTcpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceDestinationTcpPortEnd.setStatus('current')
alaQoSAppliedServiceSourceUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSourceUdpPort.setStatus('current')
alaQoSAppliedServiceSourceUdpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSourceUdpPortStatus.setStatus('current')
alaQoSAppliedServiceSourceUdpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceSourceUdpPortEnd.setStatus('current')
alaQoSAppliedServiceDestinationUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceDestinationUdpPort.setStatus('current')
alaQoSAppliedServiceDestinationUdpPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceDestinationUdpPortStatus.setStatus('current')
alaQoSAppliedServiceDestinationUdpPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 6, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceDestinationUdpPortEnd.setStatus('current')
alaQoSServiceGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 7), )
if mibBuilder.loadTexts: alaQoSServiceGroupsTable.setStatus('current')
alaQoSServiceGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 7, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSServiceGroupsName"))
if mibBuilder.loadTexts: alaQoSServiceGroupsEntry.setStatus('current')
alaQoSServiceGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 7, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSServiceGroupsName.setStatus('current')
alaQoSServiceGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 7, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceGroupsSource.setStatus('current')
alaQoSServiceGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 7, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceGroupsStatus.setStatus('current')
alaQoSAppliedServiceGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 8), )
if mibBuilder.loadTexts: alaQoSAppliedServiceGroupsTable.setStatus('current')
alaQoSAppliedServiceGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 8, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceGroupsName"))
if mibBuilder.loadTexts: alaQoSAppliedServiceGroupsEntry.setStatus('current')
alaQoSAppliedServiceGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 8, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedServiceGroupsName.setStatus('current')
alaQoSAppliedServiceGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceGroupsSource.setStatus('current')
alaQoSAppliedServiceGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 8, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceGroupsStatus.setStatus('current')
alaQoSServiceGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 9), )
if mibBuilder.loadTexts: alaQoSServiceGroupTable.setStatus('current')
alaQoSServiceGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 9, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSServiceGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSServiceGroupServiceName"))
if mibBuilder.loadTexts: alaQoSServiceGroupEntry.setStatus('current')
alaQoSServiceGroupServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 9, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSServiceGroupServiceName.setStatus('current')
alaQoSServiceGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 9, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSServiceGroupStatus.setStatus('current')
alaQoSAppliedServiceGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 10), )
if mibBuilder.loadTexts: alaQoSAppliedServiceGroupTable.setStatus('current')
alaQoSAppliedServiceGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 10, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceGroupServiceName"))
if mibBuilder.loadTexts: alaQoSAppliedServiceGroupEntry.setStatus('current')
alaQoSAppliedServiceGroupServiceName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 10, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedServiceGroupServiceName.setStatus('current')
alaQoSAppliedServiceGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 10, 1, 2), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedServiceGroupStatus.setStatus('current')
alaQoSNetworkGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 11), )
if mibBuilder.loadTexts: alaQoSNetworkGroupsTable.setStatus('current')
alaQoSNetworkGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 11, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSNetworkGroupsName"))
if mibBuilder.loadTexts: alaQoSNetworkGroupsEntry.setStatus('current')
alaQoSNetworkGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 11, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSNetworkGroupsName.setStatus('current')
alaQoSNetworkGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSNetworkGroupsSource.setStatus('current')
alaQoSNetworkGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 11, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSNetworkGroupsStatus.setStatus('current')
alaQoSAppliedNetworkGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 12), )
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupsTable.setStatus('current')
alaQoSAppliedNetworkGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 12, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedNetworkGroupsName"))
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupsEntry.setStatus('current')
alaQoSAppliedNetworkGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 12, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupsName.setStatus('current')
alaQoSAppliedNetworkGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupsSource.setStatus('current')
alaQoSAppliedNetworkGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 12, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupsStatus.setStatus('current')
alaQoSNetworkGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 13), )
if mibBuilder.loadTexts: alaQoSNetworkGroupTable.setStatus('current')
alaQoSNetworkGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 13, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSNetworkGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSNetworkGroupIpAddr"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSNetworkGroupIpMask"))
if mibBuilder.loadTexts: alaQoSNetworkGroupEntry.setStatus('current')
alaQoSNetworkGroupIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 13, 1, 1), IpAddress())
if mibBuilder.loadTexts: alaQoSNetworkGroupIpAddr.setStatus('current')
alaQoSNetworkGroupIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 13, 1, 2), IpAddress())
if mibBuilder.loadTexts: alaQoSNetworkGroupIpMask.setStatus('current')
alaQoSNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 13, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSNetworkGroupStatus.setStatus('current')
alaQoSAppliedNetworkGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 14), )
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupTable.setStatus('current')
alaQoSAppliedNetworkGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 14, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedNetworkGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedNetworkGroupIpAddr"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedNetworkGroupIpMask"))
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupEntry.setStatus('current')
alaQoSAppliedNetworkGroupIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 14, 1, 1), IpAddress())
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupIpAddr.setStatus('current')
alaQoSAppliedNetworkGroupIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 14, 1, 2), IpAddress())
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupIpMask.setStatus('current')
alaQoSAppliedNetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 14, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedNetworkGroupStatus.setStatus('current')
alaQoSMACGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 15), )
if mibBuilder.loadTexts: alaQoSMACGroupsTable.setStatus('current')
alaQoSMACGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 15, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSMACGroupsName"))
if mibBuilder.loadTexts: alaQoSMACGroupsEntry.setStatus('current')
alaQoSMACGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 15, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSMACGroupsName.setStatus('current')
alaQoSMACGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 15, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSMACGroupsSource.setStatus('current')
alaQoSMACGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 15, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSMACGroupsStatus.setStatus('current')
alaQoSAppliedMACGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 16), )
if mibBuilder.loadTexts: alaQoSAppliedMACGroupsTable.setStatus('current')
alaQoSAppliedMACGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 16, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMACGroupsName"))
if mibBuilder.loadTexts: alaQoSAppliedMACGroupsEntry.setStatus('current')
alaQoSAppliedMACGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 16, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedMACGroupsName.setStatus('current')
alaQoSAppliedMACGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedMACGroupsSource.setStatus('current')
alaQoSAppliedMACGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 16, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedMACGroupsStatus.setStatus('current')
alaQoSMACGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 17), )
if mibBuilder.loadTexts: alaQoSMACGroupTable.setStatus('current')
alaQoSMACGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 17, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSMACGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSMACGroupMacAddr"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSMACGroupMacMask"))
if mibBuilder.loadTexts: alaQoSMACGroupEntry.setStatus('current')
alaQoSMACGroupMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 17, 1, 1), MacAddress())
if mibBuilder.loadTexts: alaQoSMACGroupMacAddr.setStatus('current')
alaQoSMACGroupMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 17, 1, 2), MacAddress())
if mibBuilder.loadTexts: alaQoSMACGroupMacMask.setStatus('current')
alaQoSMACGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 17, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSMACGroupStatus.setStatus('current')
alaQoSAppliedMACGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 18), )
if mibBuilder.loadTexts: alaQoSAppliedMACGroupTable.setStatus('current')
alaQoSAppliedMACGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 18, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMACGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMACGroupMacAddr"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMACGroupMacMask"))
if mibBuilder.loadTexts: alaQoSAppliedMACGroupEntry.setStatus('current')
alaQoSAppliedMACGroupMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 18, 1, 1), MacAddress())
if mibBuilder.loadTexts: alaQoSAppliedMACGroupMacAddr.setStatus('current')
alaQoSAppliedMACGroupMacMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 18, 1, 2), MacAddress())
if mibBuilder.loadTexts: alaQoSAppliedMACGroupMacMask.setStatus('current')
alaQoSAppliedMACGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 18, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedMACGroupStatus.setStatus('current')
alaQoSPortGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 19), )
if mibBuilder.loadTexts: alaQoSPortGroupsTable.setStatus('current')
alaQoSPortGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 19, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortGroupsName"))
if mibBuilder.loadTexts: alaQoSPortGroupsEntry.setStatus('current')
alaQoSPortGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 19, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSPortGroupsName.setStatus('current')
alaQoSPortGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 19, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortGroupsSource.setStatus('current')
alaQoSPortGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 19, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortGroupsStatus.setStatus('current')
alaQoSAppliedPortGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 20), )
if mibBuilder.loadTexts: alaQoSAppliedPortGroupsTable.setStatus('current')
alaQoSAppliedPortGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 20, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedPortGroupsName"))
if mibBuilder.loadTexts: alaQoSAppliedPortGroupsEntry.setStatus('current')
alaQoSAppliedPortGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 20, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedPortGroupsName.setStatus('current')
alaQoSAppliedPortGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedPortGroupsSource.setStatus('current')
alaQoSAppliedPortGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 20, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedPortGroupsStatus.setStatus('current')
alaQoSPortGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 21), )
if mibBuilder.loadTexts: alaQoSPortGroupTable.setStatus('current')
alaQoSPortGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 21, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortGroupSlot"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortGroupPort"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortGroupPortEnd"))
if mibBuilder.loadTexts: alaQoSPortGroupEntry.setStatus('current')
alaQoSPortGroupSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6016)))
if mibBuilder.loadTexts: alaQoSPortGroupSlot.setStatus('current')
alaQoSPortGroupPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 21, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: alaQoSPortGroupPort.setStatus('current')
alaQoSPortGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 21, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortGroupStatus.setStatus('current')
alaQoSPortGroupPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 21, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: alaQoSPortGroupPortEnd.setStatus('current')
alaQoSAppliedPortGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 22), )
if mibBuilder.loadTexts: alaQoSAppliedPortGroupTable.setStatus('current')
alaQoSAppliedPortGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 22, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedPortGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedPortGroupSlot"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedPortGroupPort"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedPortGroupPortEnd"))
if mibBuilder.loadTexts: alaQoSAppliedPortGroupEntry.setStatus('current')
alaQoSAppliedPortGroupSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 22, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6016)))
if mibBuilder.loadTexts: alaQoSAppliedPortGroupSlot.setStatus('current')
alaQoSAppliedPortGroupPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 22, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)))
if mibBuilder.loadTexts: alaQoSAppliedPortGroupPort.setStatus('current')
alaQoSAppliedPortGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 22, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedPortGroupStatus.setStatus('current')
alaQoSAppliedPortGroupPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 22, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 52)))
if mibBuilder.loadTexts: alaQoSAppliedPortGroupPortEnd.setStatus('current')
alaQoSMapGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 23), )
if mibBuilder.loadTexts: alaQoSMapGroupsTable.setStatus('current')
alaQoSMapGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 23, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSMapGroupsName"))
if mibBuilder.loadTexts: alaQoSMapGroupsEntry.setStatus('current')
alaQoSMapGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 23, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSMapGroupsName.setStatus('current')
alaQoSMapGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 23, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSMapGroupsSource.setStatus('current')
alaQoSMapGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 23, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSMapGroupsStatus.setStatus('current')
alaQoSAppliedMapGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 24), )
if mibBuilder.loadTexts: alaQoSAppliedMapGroupsTable.setStatus('current')
alaQoSAppliedMapGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 24, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMapGroupsName"))
if mibBuilder.loadTexts: alaQoSAppliedMapGroupsEntry.setStatus('current')
alaQoSAppliedMapGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 24, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedMapGroupsName.setStatus('current')
alaQoSAppliedMapGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 24, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedMapGroupsSource.setStatus('current')
alaQoSAppliedMapGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 24, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedMapGroupsStatus.setStatus('current')
alaQoSMapGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 25), )
if mibBuilder.loadTexts: alaQoSMapGroupTable.setStatus('current')
alaQoSMapGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 25, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSMapGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSMapGroupKey"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSMapGroupKeyEnd"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSMapGroupValue"))
if mibBuilder.loadTexts: alaQoSMapGroupEntry.setStatus('current')
alaQoSMapGroupKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: alaQoSMapGroupKey.setStatus('current')
alaQoSMapGroupKeyEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 25, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: alaQoSMapGroupKeyEnd.setStatus('current')
alaQoSMapGroupValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 25, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: alaQoSMapGroupValue.setStatus('current')
alaQoSMapGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 25, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSMapGroupStatus.setStatus('current')
alaQoSAppliedMapGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 26), )
if mibBuilder.loadTexts: alaQoSAppliedMapGroupTable.setStatus('current')
alaQoSAppliedMapGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 26, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMapGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMapGroupKey"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMapGroupKeyEnd"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMapGroupValue"))
if mibBuilder.loadTexts: alaQoSAppliedMapGroupEntry.setStatus('current')
alaQoSAppliedMapGroupKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 26, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: alaQoSAppliedMapGroupKey.setStatus('current')
alaQoSAppliedMapGroupKeyEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 26, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: alaQoSAppliedMapGroupKeyEnd.setStatus('current')
alaQoSAppliedMapGroupValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 26, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63)))
if mibBuilder.loadTexts: alaQoSAppliedMapGroupValue.setStatus('current')
alaQoSAppliedMapGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 26, 1, 4), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedMapGroupStatus.setStatus('current')
alaQoSActionTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27), )
if mibBuilder.loadTexts: alaQoSActionTable.setStatus('current')
alaQoSActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSActionName"))
if mibBuilder.loadTexts: alaQoSActionEntry.setStatus('current')
alaQoSActionName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSActionName.setStatus('current')
alaQoSActionSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionSource.setStatus('current')
alaQoSActionDisposition = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("drop", 2), ("deny", 3))).clone('accept')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionDisposition.setStatus('current')
alaQoSActionMaximumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMaximumBandwidth.setStatus('current')
alaQoSActionMaximumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMaximumBandwidthStatus.setStatus('current')
alaQoSActionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPriority.setStatus('current')
alaQoSActionPriorityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPriorityStatus.setStatus('current')
alaQoSActionShared = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionShared.setStatus('current')
alaQoSActionMaximumDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 9), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMaximumDepth.setStatus('current')
alaQoSActionMaximumDepthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMaximumDepthStatus.setStatus('current')
alaQoSAction8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAction8021p.setStatus('current')
alaQoSAction8021pStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAction8021pStatus.setStatus('current')
alaQoSActionTos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionTos.setStatus('current')
alaQoSActionTosStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionTosStatus.setStatus('current')
alaQoSActionDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionDscp.setStatus('current')
alaQoSActionDscpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionDscpStatus.setStatus('current')
alaQoSActionMapFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("b8021p", 1), ("tos", 2), ("dscp", 3))).clone('b8021p')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMapFrom.setStatus('current')
alaQoSActionMapTo = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("b8021p", 1), ("tos", 2), ("dscp", 3))).clone('b8021p')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMapTo.setStatus('current')
alaQoSActionMapGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 19), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMapGroup.setStatus('current')
alaQoSActionMapGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMapGroupStatus.setStatus('current')
alaQoSActionLoadBalanceGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 21), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionLoadBalanceGroup.setStatus('current')
alaQoSActionLoadBalanceGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionLoadBalanceGroupStatus.setStatus('current')
alaQoSActionPermanentGatewayIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 23), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPermanentGatewayIpAddr.setStatus('current')
alaQoSActionPermanentGatewayIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPermanentGatewayIpAddrStatus.setStatus('current')
alaQoSActionAlternateGatewayIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 25), IpAddress().clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionAlternateGatewayIpAddr.setStatus('current')
alaQoSActionAlternateGatewayIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionAlternateGatewayIpAddrStatus.setStatus('current')
alaQoSActionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 27), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionRowStatus.setStatus('current')
alaQoSActionNocache = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionNocache.setStatus('current')
alaQoSActionPortdisable = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPortdisable.setStatus('current')
alaQoSActionRedirectSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionRedirectSlot.setStatus('current')
alaQoSActionRedirectSlotStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionRedirectSlotStatus.setStatus('current')
alaQoSActionRedirectPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionRedirectPort.setStatus('current')
alaQoSActionRedirectAgg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionRedirectAgg.setStatus('current')
alaQoSActionRedirectAggStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionRedirectAggStatus.setStatus('current')
alaQoSActionMirrorSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMirrorSlot.setStatus('current')
alaQoSActionMirrorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMirrorPort.setStatus('current')
alaQoSActionMirrorMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ingress", 1), ("egress", 2), ("both", 3))).clone('ingress')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMirrorMode.setStatus('current')
alaQoSActionMirrorModeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMirrorModeStatus.setStatus('current')
alaQoSActionCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 39), Integer32()).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionCIR.setStatus('current')
alaQoSActionCIRStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionCIRStatus.setStatus('current')
alaQoSActionCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147450880))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionCBS.setStatus('current')
alaQoSActionCBSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionCBSStatus.setStatus('current')
alaQoSActionPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 43), Integer32()).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPIR.setStatus('current')
alaQoSActionPIRStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPIRStatus.setStatus('current')
alaQoSActionPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147450880))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPBS.setStatus('current')
alaQoSActionPBSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPBSStatus.setStatus('current')
alaQoSActionCPUPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionCPUPriority.setStatus('current')
alaQoSActionCPUPriorityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionCPUPriorityStatus.setStatus('current')
alaQoSActionColorOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionColorOnly.setStatus('current')
alaQoSActionRedirectChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionRedirectChassis.setStatus('current')
alaQoSActionMirrorChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionMirrorChassis.setStatus('current')
alaQoSActionPermanentGatewayIpV6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 52), Ipv6Address().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPermanentGatewayIpV6Addr.setStatus('current')
alaQoSActionPermanentGatewayIpV6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPermanentGatewayIpV6AddrStatus.setStatus('current')
alaQoSActionPermanentGatewayIpV6IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 54), Ipv6IfIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionPermanentGatewayIpV6IfIndex.setStatus('current')
alaQoSActionRTCPMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionRTCPMonitor.setStatus('current')
alaQoSActionRTCPMonitorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionRTCPMonitorStatus.setStatus('current')
alaQoSActionRTCPDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 57), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionRTCPDSCP.setStatus('current')
alaQoSActionRTCPDSCPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionRTCPDSCPStatus.setStatus('current')
alaQoSActionTrustDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionTrustDSCP.setStatus('current')
alaQoSActionTrustDSCPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionTrustDSCPStatus.setStatus('current')
alaQoSActionRedirectModule = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 27, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 0), ("qmr", 1), ("captivePortal", 2), ("unauthorized", 3), ("byod", 4))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSActionRedirectModule.setStatus('current')
alaQoSAppliedActionTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28), )
if mibBuilder.loadTexts: alaQoSAppliedActionTable.setStatus('current')
alaQoSAppliedActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionName"))
if mibBuilder.loadTexts: alaQoSAppliedActionEntry.setStatus('current')
alaQoSAppliedActionName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedActionName.setStatus('current')
alaQoSAppliedActionSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionSource.setStatus('current')
alaQoSAppliedActionDisposition = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("accept", 1), ("drop", 2), ("deny", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionDisposition.setStatus('current')
alaQoSAppliedActionMaximumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMaximumBandwidth.setStatus('current')
alaQoSAppliedActionMaximumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMaximumBandwidthStatus.setStatus('current')
alaQoSAppliedActionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionPriority.setStatus('current')
alaQoSAppliedActionPriorityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionPriorityStatus.setStatus('current')
alaQoSAppliedActionShared = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionShared.setStatus('current')
alaQoSAppliedActionMaximumDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMaximumDepth.setStatus('current')
alaQoSAppliedActionMaximumDepthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMaximumDepthStatus.setStatus('current')
alaQoSAppliedAction8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedAction8021p.setStatus('current')
alaQoSAppliedAction8021pStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedAction8021pStatus.setStatus('current')
alaQoSAppliedActionTos = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionTos.setStatus('current')
alaQoSAppliedActionTosStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionTosStatus.setStatus('current')
alaQoSAppliedActionDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionDscp.setStatus('current')
alaQoSAppliedActionDscpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionDscpStatus.setStatus('current')
alaQoSAppliedActionMapFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("b8021p", 1), ("tos", 2), ("dscp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMapFrom.setStatus('current')
alaQoSAppliedActionMapTo = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("b8021p", 1), ("tos", 2), ("dscp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMapTo.setStatus('current')
alaQoSAppliedActionMapGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 19), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMapGroup.setStatus('current')
alaQoSAppliedActionMapGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMapGroupStatus.setStatus('current')
alaQoSAppliedActionLoadBalanceGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 21), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 23))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionLoadBalanceGroup.setStatus('current')
alaQoSAppliedActionLoadBalanceGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionLoadBalanceGroupStatus.setStatus('current')
alaQoSAppliedActionPermanentGatewayIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 23), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionPermanentGatewayIpAddr.setStatus('current')
alaQoSAppliedActionPermanentGatewayIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionPermanentGatewayIpAddrStatus.setStatus('current')
alaQoSAppliedActionAlternateGatewayIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 25), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionAlternateGatewayIpAddr.setStatus('current')
alaQoSAppliedActionAlternateGatewayIpAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionAlternateGatewayIpAddrStatus.setStatus('current')
alaQoSAppliedActionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 27), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionRowStatus.setStatus('current')
alaQoSAppliedActionNocache = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionNocache.setStatus('current')
alaQoSAppliedActionPortdisable = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionPortdisable.setStatus('current')
alaQoSAppliedActionRedirectSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionRedirectSlot.setStatus('current')
alaQoSAppliedActionRedirectSlotStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionRedirectSlotStatus.setStatus('current')
alaQoSAppliedActionRedirectPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionRedirectPort.setStatus('current')
alaQoSAppliedActionRedirectAgg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionRedirectAgg.setStatus('current')
alaQoSAppliedActionRedirectAggStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionRedirectAggStatus.setStatus('current')
alaQoSAppliedActionMirrorSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMirrorSlot.setStatus('current')
alaQoSAppliedActionMirrorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMirrorPort.setStatus('current')
alaQoSAppliedActionMirrorMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ingress", 1), ("egress", 2), ("both", 3))).clone('ingress')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMirrorMode.setStatus('current')
alaQoSAppliedActionMirrorModeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMirrorModeStatus.setStatus('current')
alaQoSAppliedActionCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 39), Integer32()).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionCIR.setStatus('current')
alaQoSAppliedActionCIRStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionCIRStatus.setStatus('current')
alaQoSAppliedActionCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147450880))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionCBS.setStatus('current')
alaQoSAppliedActionCBSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionCBSStatus.setStatus('current')
alaQoSAppliedActionPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 43), Integer32()).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionPIR.setStatus('current')
alaQoSAppliedActionPIRStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionPIRStatus.setStatus('current')
alaQoSAppliedActionPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147450880))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionPBS.setStatus('current')
alaQoSAppliedActionPBSStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionPBSStatus.setStatus('current')
alaQoSAppliedActionCPUPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionCPUPriority.setStatus('current')
alaQoSAppliedActionCPUPriorityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionCPUPriorityStatus.setStatus('current')
alaQoSAppliedActionColorOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionColorOnly.setStatus('current')
alaQoSAppliedActionRedirectChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionRedirectChassis.setStatus('current')
alaQoSAppliedActionMirrorChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedActionMirrorChassis.setStatus('current')
alaQoSAppliedActionPermanentGatewayIpV6Addr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 52), Ipv6Address().clone(hexValue="00000000000000000000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionPermanentGatewayIpV6Addr.setStatus('current')
alaQoSAppliedActionPermanentGatewayIpV6AddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionPermanentGatewayIpV6AddrStatus.setStatus('current')
alaQoSAppliedActionPermanentGatewayIpV6IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 54), Ipv6IfIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionPermanentGatewayIpV6IfIndex.setStatus('current')
alaQoSAppliedActionRTCPMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionRTCPMonitor.setStatus('current')
alaQoSAppliedActionRTCPMonitorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionRTCPMonitorStatus.setStatus('current')
alaQoSAppliedActionRTCPDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 57), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionRTCPDSCP.setStatus('current')
alaQoSAppliedActionRTCPDSCPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionRTCPDSCPStatus.setStatus('current')
alaQoSAppliedActionTrustDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionTrustDSCP.setStatus('current')
alaQoSAppliedActionTrustDSCPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 28, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedActionTrustDSCPStatus.setStatus('current')
alaQoSPortTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29), )
if mibBuilder.loadTexts: alaQoSPortTable.setStatus('current')
alaQoSPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortSlot"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSPortPort"))
if mibBuilder.loadTexts: alaQoSPortEntry.setStatus('current')
alaQoSPortSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6016)))
if mibBuilder.loadTexts: alaQoSPortSlot.setStatus('current')
alaQoSPortPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 52)))
if mibBuilder.loadTexts: alaQoSPortPort.setStatus('current')
alaQoSPortInterfaceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("ethernet", 1), ("wan", 2), ("ethernet10", 3), ("ethernet100", 4), ("ethernet1G", 5), ("ethernet10G", 6), ("aggregate", 7), ("ethernet40G", 8), ("ethernet100G", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortInterfaceType.setStatus('current')
alaQoSPortTrusted = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortTrusted.setStatus('current')
alaQoSPortDefault8021p = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortDefault8021p.setStatus('current')
alaQoSPortDefaultDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortDefaultDSCP.setStatus('current')
alaQoSPortMaximumDefaultDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 7), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumDefaultDepth.setStatus('current')
alaQoSPortMaximumDefaultDepthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumDefaultDepthStatus.setStatus('current')
alaQoSPortReset = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortReset.setStatus('current')
alaQoSPortPhysicalBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSPortPhysicalBandwidth.setStatus('current')
alaQoSPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortRowStatus.setStatus('current')
alaQoSPortDefaultClassification = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("b8021p", 1), ("tos", 2), ("dscp", 3))).clone('tos')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortDefaultClassification.setStatus('current')
alaQoSPortMaximumBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 13), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumBandwidth.setStatus('current')
alaQoSPortMaximumBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumBandwidthStatus.setStatus('current')
alaQoSPortMaximumIngBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumIngBandwidth.setStatus('current')
alaQoSPortMaximumIngBandwidthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumIngBandwidthStatus.setStatus('current')
alaQoSPortMaximumIngressDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumIngressDepth.setStatus('current')
alaQoSPortMaximumIngressDepthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortMaximumIngressDepthStatus.setStatus('current')
alaQoSPortDEIMarking = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortDEIMarking.setStatus('current')
alaQoSPortDEIMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 29, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSPortDEIMapping.setStatus('current')
alaQoSConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30))
alaQoSConfigEnabled = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigEnabled.setStatus('current')
alaQoSConfigTrustPorts = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigTrustPorts.setStatus('current')
alaQoSConfigStatsInterval = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigStatsInterval.setStatus('current')
alaQoSConfigLogLines = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10240))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigLogLines.setStatus('current')
alaQoSConfigLogLevel = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 9))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigLogLevel.setStatus('current')
alaQoSConfigLogConsole = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigLogConsole.setStatus('current')
alaQoSConfigForwardLog = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigForwardLog.setStatus('current')
alaQoSConfigClearLog = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigClearLog.setStatus('current')
alaQoSConfigApply = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigApply.setStatus('current')
alaQoSConfigRevert = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigRevert.setStatus('current')
alaQoSConfigReset = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigReset.setStatus('current')
alaQoSConfigStatsReset = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigStatsReset.setStatus('current')
alaQoSConfigFlush = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigFlush.setStatus('current')
alaQoSConfigDebug = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigDebug.setStatus('current')
alaQoSConfigUserportFilter = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 15), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConfigUserportFilter.setStatus('current')
alaQoSConfigAppliedUserportFilter = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSConfigAppliedUserportFilter.setStatus('current')
alaQoSConfigUserportShutdown = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 17), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConfigUserportShutdown.setStatus('current')
alaQoSConfigAppliedUserportShutdown = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSConfigAppliedUserportShutdown.setStatus('current')
alaQoSConfigAutoPhones = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("pri0", 0), ("pri1", 1), ("pri2", 2), ("pri3", 3), ("pri4", 4), ("pri5", 5), ("pri6", 6), ("pri7", 7), ("trusted", 8), ("disable", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigAutoPhones.setStatus('current')
alaQoSConfigQMPage = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigQMPage.setStatus('current')
alaQoSConfigQMMACGroup = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 21), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigQMMACGroup.setStatus('current')
alaQoSConfigQMPath = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 22), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigQMPath.setStatus('current')
alaQoSConfigDEIMapping = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConfigDEIMapping.setStatus('current')
alaQoSConfigDEIMarking = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSConfigDEIMarking.setStatus('current')
alaQoSConfigSwitchGroup = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("expanded", 1), ("compact", 2))).clone('expanded')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSConfigSwitchGroup.setStatus('current')
alaQoSVmSnooping = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 30, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaQoSVmSnooping.setStatus('current')
alaQoSStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31))
alaQoSStatsSpoofedEvents = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsSpoofedEvents.setStatus('current')
alaQoSStatsNonSpoofedEvents = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 31, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSStatsNonSpoofedEvents.setStatus('current')
alaQoSValidityPeriodTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32), )
if mibBuilder.loadTexts: alaQoSValidityPeriodTable.setStatus('current')
alaQoSValidityPeriodEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSValidityPeriodName"))
if mibBuilder.loadTexts: alaQoSValidityPeriodEntry.setStatus('current')
alaQoSValidityPeriodName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSValidityPeriodName.setStatus('current')
alaQoSValidityPeriodSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodSource.setStatus('current')
alaQoSValidityPeriodDays = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodDays.setStatus('current')
alaQoSValidityPeriodDaysStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodDaysStatus.setStatus('current')
alaQoSValidityPeriodMonths = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 5), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodMonths.setStatus('current')
alaQoSValidityPeriodMonthsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodMonthsStatus.setStatus('current')
alaQoSValidityPeriodHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodHour.setStatus('current')
alaQoSValidityPeriodHourStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodHourStatus.setStatus('current')
alaQoSValidityPeriodEndHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodEndHour.setStatus('current')
alaQoSValidityPeriodInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodInterval.setStatus('current')
alaQoSValidityPeriodIntervalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodIntervalStatus.setStatus('current')
alaQoSValidityPeriodEndInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodEndInterval.setStatus('current')
alaQoSValidityPeriodRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 32, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSValidityPeriodRowStatus.setStatus('current')
alaQoSAppliedValidityPeriodTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33), )
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodTable.setStatus('current')
alaQoSAppliedValidityPeriodEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedValidityPeriodName"))
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodEntry.setStatus('current')
alaQoSAppliedValidityPeriodName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodName.setStatus('current')
alaQoSAppliedValidityPeriodSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodSource.setStatus('current')
alaQoSAppliedValidityPeriodDays = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodDays.setStatus('current')
alaQoSAppliedValidityPeriodDaysStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodDaysStatus.setStatus('current')
alaQoSAppliedValidityPeriodMonths = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodMonths.setStatus('current')
alaQoSAppliedValidityPeriodMonthsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodMonthsStatus.setStatus('current')
alaQoSAppliedValidityPeriodHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodHour.setStatus('current')
alaQoSAppliedValidityPeriodHourStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodHourStatus.setStatus('current')
alaQoSAppliedValidityPeriodEndHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodEndHour.setStatus('current')
alaQoSAppliedValidityPeriodInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodInterval.setStatus('current')
alaQoSAppliedValidityPeriodIntervalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodIntervalStatus.setStatus('current')
alaQoSAppliedValidityPeriodEndInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodEndInterval.setStatus('current')
alaQoSAppliedValidityPeriodRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 33, 1, 13), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedValidityPeriodRowStatus.setStatus('current')
alaQoSRuleGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34), )
if mibBuilder.loadTexts: alaQoSRuleGroupsTable.setStatus('current')
alaQoSRuleGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupsName"))
if mibBuilder.loadTexts: alaQoSRuleGroupsEntry.setStatus('current')
alaQoSRuleGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSRuleGroupsName.setStatus('current')
alaQoSRuleGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleGroupsSource.setStatus('current')
alaQoSRuleGroupsType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("default", 1), ("egress", 2), ("unp", 3), ("appfp", 4), ("empacl", 5))).clone('unp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleGroupsType.setStatus('current')
alaQoSRuleGroupsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleGroupsEnabled.setStatus('current')
alaQoSRuleGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 34, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleGroupsStatus.setStatus('current')
alaQoSAppliedRuleGroupsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 35), )
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupsTable.setStatus('current')
alaQoSAppliedRuleGroupsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 35, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupsName"))
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupsEntry.setStatus('current')
alaQoSAppliedRuleGroupsName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 35, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupsName.setStatus('current')
alaQoSAppliedRuleGroupsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 35, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ldap", 1), ("cli", 2), ("blt", 3), ("api", 4), ("imp", 5))).clone('cli')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupsSource.setStatus('current')
alaQoSAppliedRuleGroupsType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 35, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("default", 1), ("egress", 2), ("unp", 3), ("appfp", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupsType.setStatus('current')
alaQoSAppliedRuleGroupsEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 35, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupsEnabled.setStatus('current')
alaQoSAppliedRuleGroupsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 35, 1, 5), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupsStatus.setStatus('current')
alaQoSRuleGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36), )
if mibBuilder.loadTexts: alaQoSRuleGroupTable.setStatus('current')
alaQoSRuleGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupRuleName"))
if mibBuilder.loadTexts: alaQoSRuleGroupEntry.setStatus('current')
alaQoSRuleGroupRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSRuleGroupRuleName.setStatus('current')
alaQoSRuleGroupMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleGroupMatches.setStatus('current')
alaQoSRuleGroupCountType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("packets", 1), ("bytes", 2))).clone('packets')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleGroupCountType.setStatus('current')
alaQoSRuleGroupPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleGroupPacketCount.setStatus('current')
alaQoSRuleGroupByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSRuleGroupByteCount.setStatus('current')
alaQoSRuleGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 36, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSRuleGroupStatus.setStatus('current')
alaQoSAppliedRuleGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 37), )
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupTable.setStatus('current')
alaQoSAppliedRuleGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 37, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupRuleName"))
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupEntry.setStatus('current')
alaQoSAppliedRuleGroupRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 37, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31)))
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupRuleName.setStatus('current')
alaQoSAppliedRuleGroupMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 37, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupMatches.setStatus('current')
alaQoSAppliedRuleGroupCountType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 37, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("packets", 1), ("bytes", 2))).clone('packets')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupCountType.setStatus('current')
alaQoSAppliedRuleGroupPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 37, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupPacketCount.setStatus('current')
alaQoSAppliedRuleGroupByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 37, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupByteCount.setStatus('current')
alaQoSAppliedRuleGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 37, 1, 6), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedRuleGroupStatus.setStatus('current')
alaQoSDSCPTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 55), )
if mibBuilder.loadTexts: alaQoSDSCPTable.setStatus('current')
alaQoSDSCPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 55, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSDSCPEntryNumber"))
if mibBuilder.loadTexts: alaQoSDSCPEntry.setStatus('current')
alaQoSDSCPEntryNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 55, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5000)))
if mibBuilder.loadTexts: alaQoSDSCPEntryNumber.setStatus('current')
alaQoSDSCPPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 55, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSDSCPPriority.setStatus('current')
alaQoSDSCPDropPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 55, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("low", 1), ("medium", 2), ("high", 3))).clone('low')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSDSCPDropPrecedence.setStatus('current')
alaQoSDSCPRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 55, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSDSCPRowStatus.setStatus('current')
alaQoSAutoMacRangeTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 56), )
if mibBuilder.loadTexts: alaQoSAutoMacRangeTable.setStatus('current')
alaQoSAutoMacRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 56, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAutoMacRangeIndex"))
if mibBuilder.loadTexts: alaQoSAutoMacRangeEntry.setStatus('current')
alaQoSAutoMacRangeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 56, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaQoSAutoMacRangeIndex.setStatus('current')
alaQoSAutoMacRangeStart = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 56, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAutoMacRangeStart.setStatus('current')
alaQoSAutoMacRangeEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 56, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAutoMacRangeEnd.setStatus('current')
alaQoSExtendedRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 57), )
if mibBuilder.loadTexts: alaQoSExtendedRuleTable.setStatus('current')
alaQoSExtendedRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 57, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSRuleName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSExtendedRuleSplitRuleID"))
if mibBuilder.loadTexts: alaQoSExtendedRuleEntry.setStatus('current')
alaQoSExtendedRuleSplitRuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 57, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192)))
if mibBuilder.loadTexts: alaQoSExtendedRuleSplitRuleID.setStatus('current')
alaQoSExtendedRuleChassis = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 57, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSExtendedRuleChassis.setStatus('current')
alaQoSExtendedRuleSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 57, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSExtendedRuleSlot.setStatus('current')
alaQoSExtendedRulePort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 57, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 52))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSExtendedRulePort.setStatus('current')
alaQoSExtendedRulePacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 57, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSExtendedRulePacketCount.setStatus('current')
alaQoSExtendedRuleByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 57, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSExtendedRuleByteCount.setStatus('current')
alaQoSExtendedRuleGreenPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 57, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSExtendedRuleGreenPacketCount.setStatus('current')
alaQoSExtendedRuleYellowPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 57, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSExtendedRuleYellowPacketCount.setStatus('current')
alaQoSExtendedRuleRedPacketCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 57, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSExtendedRuleRedPacketCount.setStatus('current')
alaQoSExtendedRuleGreenByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 57, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSExtendedRuleGreenByteCount.setStatus('current')
alaQoSExtendedRuleYellowByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 57, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSExtendedRuleYellowByteCount.setStatus('current')
alaQoSExtendedRuleRedByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 57, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSExtendedRuleRedByteCount.setStatus('current')
alaQoSV6NetworkGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40), )
if mibBuilder.loadTexts: alaQoSV6NetworkGroupTable.setStatus('current')
alaQoSV6NetworkGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSNetworkGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSV6NetworkGroupIpAddr"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSV6NetworkGroupIpMask"))
if mibBuilder.loadTexts: alaQoSV6NetworkGroupEntry.setStatus('current')
alaQoSV6NetworkGroupIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: alaQoSV6NetworkGroupIpAddr.setStatus('current')
alaQoSV6NetworkGroupIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40, 1, 2), Ipv6Address())
if mibBuilder.loadTexts: alaQoSV6NetworkGroupIpMask.setStatus('current')
alaQoSV6NetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 40, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaQoSV6NetworkGroupStatus.setStatus('current')
alaQoSAppliedV6NetworkGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41), )
if mibBuilder.loadTexts: alaQoSAppliedV6NetworkGroupTable.setStatus('current')
alaQoSAppliedV6NetworkGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedNetworkGroupsName"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedV6NetworkGroupIpAddr"), (0, "ALCATEL-IND1-QOS-MIB", "alaQoSAppliedV6NetworkGroupIpMask"))
if mibBuilder.loadTexts: alaQoSAppliedV6NetworkGroupEntry.setStatus('current')
alaQoSAppliedV6NetworkGroupIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: alaQoSAppliedV6NetworkGroupIpAddr.setStatus('current')
alaQoSAppliedV6NetworkGroupIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41, 1, 2), Ipv6Address())
if mibBuilder.loadTexts: alaQoSAppliedV6NetworkGroupIpMask.setStatus('current')
alaQoSAppliedV6NetworkGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 41, 1, 3), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSAppliedV6NetworkGroupStatus.setStatus('current')
alaQoSIpNetworkSummaryTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 58), )
if mibBuilder.loadTexts: alaQoSIpNetworkSummaryTable.setStatus('current')
alaQoSIpNetworkSummaryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 58, 1), ).setIndexNames((0, "ALCATEL-IND1-QOS-MIB", "alaQoSRuleName"))
if mibBuilder.loadTexts: alaQoSIpNetworkSummaryEntry.setStatus('current')
alaQoSIpNetworkSummaryProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 58, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSIpNetworkSummaryProtocol.setStatus('current')
alaQoSIpNetworkSummarySourceIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 58, 1, 2), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSIpNetworkSummarySourceIpAddressType.setStatus('current')
alaQoSIpNetworkSummarySourceIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 58, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSIpNetworkSummarySourceIpAddress.setStatus('current')
alaQoSIpNetworkSummaryDestinationIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 58, 1, 4), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSIpNetworkSummaryDestinationIpAddressType.setStatus('current')
alaQoSIpNetworkSummaryDestinationIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 58, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSIpNetworkSummaryDestinationIpAddress.setStatus('current')
alaQoSIpNetworkSummarySourceGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 58, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSIpNetworkSummarySourceGroup.setStatus('current')
alaQoSIpNetworkSummaryDestinationGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 58, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSIpNetworkSummaryDestinationGroup.setStatus('current')
alaQoSIpNetworkSummaryVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 58, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSIpNetworkSummaryVrfName.setStatus('current')
alaQoSIpNetworkSummaryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 58, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("accept", 1), ("deny", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSIpNetworkSummaryAction.setStatus('current')
alaQoSIpNetworkSummaryHitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 1, 58, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaQoSIpNetworkSummaryHitCount.setStatus('current')
alaQoSMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2))
if mibBuilder.loadTexts: alaQoSMIBConformance.setStatus('current')
alaQoSMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1))
if mibBuilder.loadTexts: alaQoSMIBGroups.setStatus('current')
alaQoSMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 2))
if mibBuilder.loadTexts: alaQoSMIBCompliances.setStatus('current')
alaQoSMIBRuleObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSRuleEnabled"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRulePrecedence"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleCondition"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleAction"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleReflexive"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleSave"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleLog"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleEnforced"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleActive"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleRowStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleValidityPeriod"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleValidityPeriodStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleLogInterval"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleCountType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRulePacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleByteCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleTrapEvents"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleDefaultList"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGreenPacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleYellowPacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleRedPacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGreenByteCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleYellowByteCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleRedByteCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBRuleObjects = alaQoSMIBRuleObjects.setStatus('current')
alaQoSMIBAppliedRuleObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleEnabled"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRulePrecedence"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleCondition"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleAction"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleReflexive"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleSave"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleLog"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleEnforced"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleActive"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleRowStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleValidityPeriod"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleValidityPeriodStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleLogInterval"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleCountType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRulePacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleByteCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleTrapEvents"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleDefaultList"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGreenPacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleYellowPacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleRedPacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGreenByteCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleYellowByteCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleRedByteCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedRuleObjects = alaQoSMIBAppliedRuleObjects.setStatus('current')
alaQoSMIBConditionObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceSlot"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceSlotStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourcePort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourcePortGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourcePortGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationSlot"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationSlotStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationPortGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationPortGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceMacAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceMacAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceMacMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceMacGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceMacGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationMacAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationMacAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationMacMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationMacGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationMacGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceVlan"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceVlanStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationVlan"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationVlanStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSCondition8021p"), ("ALCATEL-IND1-QOS-MIB", "alaQoSCondition8021pStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceIpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceNetworkGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceNetworkGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationIpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationNetworkGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationNetworkGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionMulticastIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionMulticastIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionMulticastIpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionMulticastNetworkGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionMulticastNetworkGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTos"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTosStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTosMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDscp"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDscpStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDscpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIpProtocol"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIpProtocolStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceIpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceIpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationIpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationIpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionService"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionServiceStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionServiceGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionServiceGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIcmpType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIcmpTypeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIcmpCode"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIcmpCodeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionRowStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourcePortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceIpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationIpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceTcpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceTcpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceTcpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationTcpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationTcpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationTcpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceUdpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceUdpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceUdpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationUdpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationUdpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationUdpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionEthertype"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionEthertypeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTcpFlags"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTcpFlagsStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTcpFlagsVal"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTcpFlagsValStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTcpFlagsMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTcpFlagsMaskStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionTcpEstablished"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceIpv6Addr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceIpv6AddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceIpv6Mask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationIpv6Addr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationIpv6AddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationIpv6Mask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIpv6Traffic"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIpv6NH"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIpv6NHStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIpv6FlowLabel"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionIpv6FlowLabelStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionMcastIpv6Addr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionMcastIpv6AddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionMcastIpv6Mask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDscpEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionInnerSourceVlan"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionInnerSourceVlanStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionInner8021p"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionInner8021pStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionVrfName"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionVrfNameStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionFragments"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourceChassis"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDestinationChassis"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionAppFpGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionAppFpGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSIP"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSIPStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDPIAppName"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDPIGrpName"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDPIAppNameStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionDPIAppGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionVxlanVni"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionVxlanVniStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionVxlanPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionVxlanPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionVmSourceMacAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionVmSourceMacAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionVmSourceMacMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionVmSourceIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionVmSourceIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionVmSourceIpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionVmSourceIpv6IpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionVmSourceIpv6IpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionVmSourceIpv6IpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionVmIpProtocol"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionVmIpProtocolStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQosConditionVmL4SourcePort"), ("ALCATEL-IND1-QOS-MIB", "alaQosConditionVmL4SourcePortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQosConditionVmL4DestPort"), ("ALCATEL-IND1-QOS-MIB", "alaQosConditionVmL4DestPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQosConditionVxlanStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourcePortSplitGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConditionSourcePortSplitGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBConditionObjects = alaQoSMIBConditionObjects.setStatus('current')
alaQoSMIBAppliedConditionObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceSlot"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceSlotStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourcePort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourcePortGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourcePortGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationSlot"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationSlotStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationPortGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationPortGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceMacAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceMacAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceMacMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceMacGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceMacGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationMacAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationMacAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationMacMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationMacGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationMacGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceVlan"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceVlanStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationVlan"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationVlanStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedCondition8021p"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedCondition8021pStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceIpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceNetworkGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceNetworkGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationIpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationNetworkGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationNetworkGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionMulticastIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionMulticastIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionMulticastIpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionMulticastNetworkGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionMulticastNetworkGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTos"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTosStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTosMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDscp"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDscpStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDscpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIpProtocol"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIpProtocolStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceIpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceIpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationIpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationIpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionService"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionServiceStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionServiceGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionServiceGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIcmpType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIcmpTypeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIcmpCode"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIcmpCodeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionRowStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourcePortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceIpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationIpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceTcpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceTcpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceTcpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationTcpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationTcpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationTcpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceUdpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceUdpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceUdpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationUdpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationUdpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationUdpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionEthertype"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionEthertypeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTcpFlags"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTcpFlagsStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTcpFlagsVal"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTcpFlagsValStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTcpFlagsMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTcpFlagsMaskStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionTcpEstablished"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceIpv6Addr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceIpv6AddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceIpv6Mask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationIpv6Addr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationIpv6AddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationIpv6Mask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIpv6Traffic"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIpv6NH"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIpv6NHStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIpv6FlowLabel"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionIpv6FlowLabelStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionMcastIpv6Addr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionMcastIpv6AddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionMcastIpv6Mask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDscpEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionInnerSourceVlan"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionInnerSourceVlanStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionInner8021p"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionInner8021pStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionVrfName"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionVrfNameStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionFragments"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourceChassis"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDestinationChassis"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionAppFpGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionAppFpGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSIP"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSIPStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDPIAppName"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDPIAppGrp"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDPIAppNameStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionDPIAppGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionVxlanVni"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionVxlanVniStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionVxlanPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionVxlanPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionVmSourceMacAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionVmSourceMacAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionVmSourceMacMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionVmSourceIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionVmSourceIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionVmSourceIpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionVmSourceIpv6IpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionVmSourceIpv6IpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionVmSourceIpv6IpMask"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionVmIpProtocol"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionVmIpProtocolStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQosAppliedConditionVmL4SourcePort"), ("ALCATEL-IND1-QOS-MIB", "alaQosAppliedConditionVmL4SourcePortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQosAppliedConditionVmL4DestPort"), ("ALCATEL-IND1-QOS-MIB", "alaQosAppliedConditionVmL4DestPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQosAppliedConditionVxlanStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourcePortSplitGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedConditionSourcePortSplitGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedConditionObjects = alaQoSMIBAppliedConditionObjects.setStatus('current')
alaQoSMIBServiceObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceProtocol"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSourceIpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSourceIpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceDestinationIpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceDestinationIpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceRowStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSourceIpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceDestinationIpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSourceTcpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSourceTcpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSourceTcpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceDestinationTcpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceDestinationTcpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceDestinationTcpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSourceUdpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSourceUdpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceSourceUdpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceDestinationUdpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceDestinationUdpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceDestinationUdpPortEnd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBServiceObjects = alaQoSMIBServiceObjects.setStatus('current')
alaQoSMIBAppliedServiceObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceProtocol"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSourceIpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSourceIpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceDestinationIpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceDestinationIpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceRowStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSourceIpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceDestinationIpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSourceTcpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSourceTcpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSourceTcpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceDestinationTcpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceDestinationTcpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceDestinationTcpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSourceUdpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSourceUdpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceSourceUdpPortEnd"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceDestinationUdpPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceDestinationUdpPortStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceDestinationUdpPortEnd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedServiceObjects = alaQoSMIBAppliedServiceObjects.setStatus('current')
alaQoSMIBServiceGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 7)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSServiceGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSServiceGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBServiceGroupsObjects = alaQoSMIBServiceGroupsObjects.setStatus('current')
alaQoSMIBAppliedServiceGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 8)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedServiceGroupsObjects = alaQoSMIBAppliedServiceGroupsObjects.setStatus('current')
alaQoSMIBServiceGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 9)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSServiceGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBServiceGroupObjects = alaQoSMIBServiceGroupObjects.setStatus('current')
alaQoSMIBAppliedServiceGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 10)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedServiceGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedServiceGroupObjects = alaQoSMIBAppliedServiceGroupObjects.setStatus('current')
alaQoSMIBNetworkGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 11)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSNetworkGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSNetworkGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBNetworkGroupsObjects = alaQoSMIBNetworkGroupsObjects.setStatus('current')
alaQoSMIBAppliedNetworkGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 12)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedNetworkGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedNetworkGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedNetworkGroupsObjects = alaQoSMIBAppliedNetworkGroupsObjects.setStatus('current')
alaQoSMIBNetworkGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 13)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSNetworkGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBNetworkGroupObjects = alaQoSMIBNetworkGroupObjects.setStatus('current')
alaQoSMIBAppliedNetworkGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 14)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedNetworkGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedNetworkGroupObjects = alaQoSMIBAppliedNetworkGroupObjects.setStatus('current')
alaQoSMIBMACGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 15)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSMACGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMACGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBMACGroupsObjects = alaQoSMIBMACGroupsObjects.setStatus('current')
alaQoSMIBAppliedMACGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 16)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMACGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMACGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedMACGroupsObjects = alaQoSMIBAppliedMACGroupsObjects.setStatus('current')
alaQoSMIBMACGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 17)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSMACGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBMACGroupObjects = alaQoSMIBMACGroupObjects.setStatus('current')
alaQoSMIBAppliedMACGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 18)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMACGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedMACGroupObjects = alaQoSMIBAppliedMACGroupObjects.setStatus('current')
alaQoSMIBPortGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 19)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSPortGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBPortGroupsObjects = alaQoSMIBPortGroupsObjects.setStatus('current')
alaQoSMIBAppliedPortGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 20)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedPortGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedPortGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedPortGroupsObjects = alaQoSMIBAppliedPortGroupsObjects.setStatus('current')
alaQoSMIBPortGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 21)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSPortGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBPortGroupObjects = alaQoSMIBPortGroupObjects.setStatus('current')
alaQoSMIBAppliedPortGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 22)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedPortGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedPortGroupObjects = alaQoSMIBAppliedPortGroupObjects.setStatus('current')
alaQoSMIBMapGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 23)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSMapGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMapGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBMapGroupsObjects = alaQoSMIBMapGroupsObjects.setStatus('current')
alaQoSMIBAppliedMapGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 24)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMapGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMapGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedMapGroupsObjects = alaQoSMIBAppliedMapGroupsObjects.setStatus('current')
alaQoSMIBMapGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 25)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSMapGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBMapGroupObjects = alaQoSMIBMapGroupObjects.setStatus('current')
alaQoSMIBAppliedMapGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 26)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedMapGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedMapGroupObjects = alaQoSMIBAppliedMapGroupObjects.setStatus('current')
alaQoSMIBActionObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 27)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSActionSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionDisposition"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMaximumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMaximumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPriority"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPriorityStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionShared"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMaximumDepth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMaximumDepthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAction8021p"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAction8021pStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionTos"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionTosStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionDscp"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionDscpStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMapFrom"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMapTo"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMapGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMapGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionLoadBalanceGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionLoadBalanceGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPermanentGatewayIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPermanentGatewayIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionAlternateGatewayIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionAlternateGatewayIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionRowStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionNocache"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPortdisable"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionRedirectSlot"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionRedirectSlotStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionRedirectPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionRedirectAgg"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionRedirectAggStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMirrorSlot"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMirrorPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMirrorMode"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMirrorModeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionCIR"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionCIRStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionCBS"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionCBSStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPIR"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPIRStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPBS"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPBSStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionCPUPriority"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionCPUPriorityStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionColorOnly"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionRedirectChassis"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionMirrorChassis"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPermanentGatewayIpV6Addr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPermanentGatewayIpV6AddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionPermanentGatewayIpV6IfIndex"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionRTCPMonitor"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionRTCPMonitorStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionRTCPDSCP"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionRTCPDSCPStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionTrustDSCP"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionTrustDSCPStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSActionRedirectModule"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBActionObjects = alaQoSMIBActionObjects.setStatus('current')
alaQoSMIBAppliedActionObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 28)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionDisposition"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMaximumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMaximumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPriority"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPriorityStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionShared"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMaximumDepth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMaximumDepthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedAction8021p"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedAction8021pStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionTos"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionTosStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionDscp"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionDscpStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMapFrom"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMapTo"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMapGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMapGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionLoadBalanceGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionLoadBalanceGroupStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPermanentGatewayIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPermanentGatewayIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionAlternateGatewayIpAddr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionAlternateGatewayIpAddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionRowStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionNocache"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPortdisable"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionRedirectSlot"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionRedirectSlotStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionRedirectPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionRedirectAgg"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionRedirectAggStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMirrorSlot"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMirrorPort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMirrorMode"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMirrorModeStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionCIR"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionCIRStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionCBS"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionCBSStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPIR"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPIRStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPBS"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPBSStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionCPUPriority"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionCPUPriorityStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionColorOnly"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionRedirectChassis"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionMirrorChassis"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPermanentGatewayIpV6Addr"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPermanentGatewayIpV6AddrStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionPermanentGatewayIpV6IfIndex"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionRTCPMonitor"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionRTCPMonitorStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionRTCPDSCP"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionRTCPDSCPStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionTrustDSCP"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedActionTrustDSCPStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedActionObjects = alaQoSMIBAppliedActionObjects.setStatus('current')
alaQoSMIBPortObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 29)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSPortInterfaceType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortTrusted"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortDefault8021p"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortDefaultDSCP"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumDefaultDepth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumDefaultDepthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortReset"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortPhysicalBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortRowStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortDefaultClassification"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumIngBandwidth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumIngBandwidthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumIngressDepth"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortMaximumIngressDepthStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortDEIMarking"), ("ALCATEL-IND1-QOS-MIB", "alaQoSPortDEIMapping"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBPortObjects = alaQoSMIBPortObjects.setStatus('current')
alaQoSMIBConfigObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 30)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSConfigEnabled"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigTrustPorts"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigStatsInterval"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigLogLines"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigLogLevel"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigLogConsole"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigForwardLog"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigClearLog"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigApply"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigRevert"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigReset"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigStatsReset"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigFlush"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigDebug"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigUserportFilter"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigAppliedUserportFilter"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigUserportShutdown"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigAppliedUserportShutdown"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigAutoPhones"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigQMPage"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigQMMACGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigQMPath"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigDEIMapping"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigDEIMarking"), ("ALCATEL-IND1-QOS-MIB", "alaQoSConfigSwitchGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSVmSnooping"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBConfigObjects = alaQoSMIBConfigObjects.setStatus('current')
alaQoSMIBStatsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 31)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSStatsSpoofedEvents"), ("ALCATEL-IND1-QOS-MIB", "alaQoSStatsNonSpoofedEvents"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBStatsObjects = alaQoSMIBStatsObjects.setStatus('current')
alaQoSMIBRuleGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 32)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupsType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupsEnabled"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBRuleGroupsObjects = alaQoSMIBRuleGroupsObjects.setStatus('current')
alaQoSMIBAppliedRuleGroupsObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 33)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupsSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupsType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupsEnabled"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupsStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedRuleGroupsObjects = alaQoSMIBAppliedRuleGroupsObjects.setStatus('current')
alaQoSMIBRuleGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 34)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupMatches"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupCountType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupPacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupByteCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBRuleGroupObjects = alaQoSMIBRuleGroupObjects.setStatus('current')
alaQoSMIBAppliedRuleGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 35)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupMatches"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupCountType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupPacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupByteCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedRuleGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedRuleGroupObjects = alaQoSMIBAppliedRuleGroupObjects.setStatus('current')
alaQoSMIBValidityPeriodObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 36)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSValidityPeriodSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSValidityPeriodDays"), ("ALCATEL-IND1-QOS-MIB", "alaQoSValidityPeriodDaysStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSValidityPeriodMonths"), ("ALCATEL-IND1-QOS-MIB", "alaQoSValidityPeriodMonthsStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSValidityPeriodHour"), ("ALCATEL-IND1-QOS-MIB", "alaQoSValidityPeriodHourStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSValidityPeriodEndHour"), ("ALCATEL-IND1-QOS-MIB", "alaQoSValidityPeriodInterval"), ("ALCATEL-IND1-QOS-MIB", "alaQoSValidityPeriodIntervalStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSValidityPeriodEndInterval"), ("ALCATEL-IND1-QOS-MIB", "alaQoSValidityPeriodRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBValidityPeriodObjects = alaQoSMIBValidityPeriodObjects.setStatus('current')
alaQoSMIBAppliedValidityPeriodObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 37)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedValidityPeriodSource"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedValidityPeriodDays"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedValidityPeriodDaysStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedValidityPeriodMonths"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedValidityPeriodMonthsStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedValidityPeriodHour"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedValidityPeriodHourStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedValidityPeriodEndHour"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedValidityPeriodInterval"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedValidityPeriodIntervalStatus"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedValidityPeriodEndInterval"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedValidityPeriodRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedValidityPeriodObjects = alaQoSMIBAppliedValidityPeriodObjects.setStatus('current')
alaQoSMIBDSCPGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 38)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSDSCPPriority"), ("ALCATEL-IND1-QOS-MIB", "alaQoSDSCPDropPrecedence"), ("ALCATEL-IND1-QOS-MIB", "alaQoSDSCPRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBDSCPGroupObjects = alaQoSMIBDSCPGroupObjects.setStatus('current')
alaQoSMIBAutoMacRangeGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 39)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAutoMacRangeStart"), ("ALCATEL-IND1-QOS-MIB", "alaQoSAutoMacRangeEnd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAutoMacRangeGroupObjects = alaQoSMIBAutoMacRangeGroupObjects.setStatus('current')
alaQoSMIBV6NetworkGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 40)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSV6NetworkGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBV6NetworkGroupObjects = alaQoSMIBV6NetworkGroupObjects.setStatus('current')
alaQoSMIBAppliedV6NetworkGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 41)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSAppliedV6NetworkGroupStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBAppliedV6NetworkGroupObjects = alaQoSMIBAppliedV6NetworkGroupObjects.setStatus('current')
alaQoSRuleExtendedObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 42)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSExtendedRuleChassis"), ("ALCATEL-IND1-QOS-MIB", "alaQoSExtendedRuleSlot"), ("ALCATEL-IND1-QOS-MIB", "alaQoSExtendedRulePort"), ("ALCATEL-IND1-QOS-MIB", "alaQoSExtendedRulePacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSExtendedRuleByteCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSExtendedRuleGreenPacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSExtendedRuleYellowPacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSExtendedRuleRedPacketCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSExtendedRuleGreenByteCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSExtendedRuleYellowByteCount"), ("ALCATEL-IND1-QOS-MIB", "alaQoSExtendedRuleRedByteCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSRuleExtendedObjects = alaQoSRuleExtendedObjects.setStatus('current')
alaQoSIpNetworkSummaryGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 1, 43)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSIpNetworkSummaryProtocol"), ("ALCATEL-IND1-QOS-MIB", "alaQoSIpNetworkSummarySourceIpAddressType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSIpNetworkSummarySourceIpAddress"), ("ALCATEL-IND1-QOS-MIB", "alaQoSIpNetworkSummaryDestinationIpAddressType"), ("ALCATEL-IND1-QOS-MIB", "alaQoSIpNetworkSummaryDestinationIpAddress"), ("ALCATEL-IND1-QOS-MIB", "alaQoSIpNetworkSummarySourceGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSIpNetworkSummaryDestinationGroup"), ("ALCATEL-IND1-QOS-MIB", "alaQoSIpNetworkSummaryVrfName"), ("ALCATEL-IND1-QOS-MIB", "alaQoSIpNetworkSummaryAction"), ("ALCATEL-IND1-QOS-MIB", "alaQoSIpNetworkSummaryHitCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSIpNetworkSummaryGroupObjects = alaQoSIpNetworkSummaryGroupObjects.setStatus('current')
alaQoSMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 22, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-QOS-MIB", "alaQoSMIBRuleObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedRuleObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBConditionObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedConditionObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBServiceObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedServiceObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBServiceGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedServiceGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBServiceGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedServiceGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBNetworkGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedNetworkGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBNetworkGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedNetworkGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBMACGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedMACGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBMACGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedMACGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBPortGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedPortGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBPortGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedPortGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBMapGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedMapGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBMapGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedMapGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBActionObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedActionObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBPortObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBConfigObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBStatsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBRuleGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedRuleGroupsObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBRuleGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedRuleGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBValidityPeriodObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedValidityPeriodObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBDSCPGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAutoMacRangeGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBV6NetworkGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSMIBAppliedV6NetworkGroupObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSRuleExtendedObjects"), ("ALCATEL-IND1-QOS-MIB", "alaQoSIpNetworkSummaryGroupObjects"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaQoSMIBCompliance = alaQoSMIBCompliance.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-QOS-MIB", alaQoSAppliedActionMaximumBandwidthStatus=alaQoSAppliedActionMaximumBandwidthStatus, alaQoSAppliedActionPBSStatus=alaQoSAppliedActionPBSStatus, alaQoSConditionTosStatus=alaQoSConditionTosStatus, alaQoSAppliedConditionDestinationChassis=alaQoSAppliedConditionDestinationChassis, alaQoSAppliedConditionSourceMacAddr=alaQoSAppliedConditionSourceMacAddr, alaQoSConditionDestinationMacGroupStatus=alaQoSConditionDestinationMacGroupStatus, alaQoSConfigEnabled=alaQoSConfigEnabled, alaQoSAppliedServiceSourceUdpPortStatus=alaQoSAppliedServiceSourceUdpPortStatus, alaQoSAppliedConditionVmIpProtocolStatus=alaQoSAppliedConditionVmIpProtocolStatus, alaQoSActionSource=alaQoSActionSource, alaQoSConditionFragments=alaQoSConditionFragments, alaQoSAppliedConditionVmSourceIpv6IpAddrStatus=alaQoSAppliedConditionVmSourceIpv6IpAddrStatus, alaQoSValidityPeriodRowStatus=alaQoSValidityPeriodRowStatus, alaQosConditionVmL4SourcePort=alaQosConditionVmL4SourcePort, alaQoSActionMaximumBandwidth=alaQoSActionMaximumBandwidth, alaQoSAppliedRuleRedPacketCount=alaQoSAppliedRuleRedPacketCount, alaQoSConditionMulticastIpAddr=alaQoSConditionMulticastIpAddr, alaQoSAppliedRuleEntry=alaQoSAppliedRuleEntry, alaQoSMIBObjects=alaQoSMIBObjects, alaQoSConditionMulticastNetworkGroupStatus=alaQoSConditionMulticastNetworkGroupStatus, alaQoSAppliedConditionDestinationIpPort=alaQoSAppliedConditionDestinationIpPort, alaQoSAppliedConditionDestinationMacMask=alaQoSAppliedConditionDestinationMacMask, alaQoSConditionDestinationMacAddr=alaQoSConditionDestinationMacAddr, alaQoSAppliedConditionVmSourceIpAddr=alaQoSAppliedConditionVmSourceIpAddr, alaQoSAppliedNetworkGroupIpAddr=alaQoSAppliedNetworkGroupIpAddr, alaQoSActionCIR=alaQoSActionCIR, alaQoSConditionDPIGrpName=alaQoSConditionDPIGrpName, alaQoSActionPermanentGatewayIpV6IfIndex=alaQoSActionPermanentGatewayIpV6IfIndex, alaQoSConfigFlush=alaQoSConfigFlush, alaQoSAppliedConditionIpv6NH=alaQoSAppliedConditionIpv6NH, alaQoSAppliedValidityPeriodMonths=alaQoSAppliedValidityPeriodMonths, alaQoSAppliedActionMapFrom=alaQoSAppliedActionMapFrom, alaQoSServiceGroupsSource=alaQoSServiceGroupsSource, alaQoSAppliedServiceGroupsEntry=alaQoSAppliedServiceGroupsEntry, alaQoSConditionVmSourceIpAddrStatus=alaQoSConditionVmSourceIpAddrStatus, alaQoSAppliedConditionTcpFlagsMask=alaQoSAppliedConditionTcpFlagsMask, alaQoSActionMapGroup=alaQoSActionMapGroup, alaQoSAppliedConditionSourceMacMask=alaQoSAppliedConditionSourceMacMask, alaQoSServiceGroupsEntry=alaQoSServiceGroupsEntry, alaQoSAppliedConditionTcpEstablished=alaQoSAppliedConditionTcpEstablished, alaQoSAppliedRuleCondition=alaQoSAppliedRuleCondition, alaQoSIpNetworkSummaryDestinationIpAddress=alaQoSIpNetworkSummaryDestinationIpAddress, alaQoSServiceDestinationUdpPortStatus=alaQoSServiceDestinationUdpPortStatus, alaQoSAppliedNetworkGroupsName=alaQoSAppliedNetworkGroupsName, alaQoSConditionInnerSourceVlan=alaQoSConditionInnerSourceVlan, alaQoSExtendedRuleChassis=alaQoSExtendedRuleChassis, alaQoSAppliedConditionSourceMacGroupStatus=alaQoSAppliedConditionSourceMacGroupStatus, alaQoSRuleGroupByteCount=alaQoSRuleGroupByteCount, alaQoSRuleGroupsEntry=alaQoSRuleGroupsEntry, alaQoSAppliedMapGroupsStatus=alaQoSAppliedMapGroupsStatus, alaQoSConfigAppliedUserportFilter=alaQoSConfigAppliedUserportFilter, alaQoSRuleLog=alaQoSRuleLog, alaQoSRuleGroupsName=alaQoSRuleGroupsName, alaQoSV6NetworkGroupEntry=alaQoSV6NetworkGroupEntry, alaQoSAppliedActionMirrorPort=alaQoSAppliedActionMirrorPort, alaQoSRuleCondition=alaQoSRuleCondition, alaQoSAppliedServiceDestinationTcpPort=alaQoSAppliedServiceDestinationTcpPort, alaQoSConditionSourceSlot=alaQoSConditionSourceSlot, alaQoSAppliedRuleValidityPeriodStatus=alaQoSAppliedRuleValidityPeriodStatus, alaQoSAppliedNetworkGroupTable=alaQoSAppliedNetworkGroupTable, alaQoSAppliedConditionDestinationTcpPortStatus=alaQoSAppliedConditionDestinationTcpPortStatus, alaQoSNetworkGroupsName=alaQoSNetworkGroupsName, alaQoSConditionDestinationIpv6Mask=alaQoSConditionDestinationIpv6Mask, alaQoSAppliedConditionIpv6Traffic=alaQoSAppliedConditionIpv6Traffic, alaQoSConditionSourceNetworkGroup=alaQoSConditionSourceNetworkGroup, alaQoSAppliedConditionAppFpGroup=alaQoSAppliedConditionAppFpGroup, alaQoSServiceTable=alaQoSServiceTable, alaQoSAppliedConditionTcpFlags=alaQoSAppliedConditionTcpFlags, alaQoSPortGroupsName=alaQoSPortGroupsName, alaQoSAppliedConditionSIP=alaQoSAppliedConditionSIP, alaQoSPortGroupPortEnd=alaQoSPortGroupPortEnd, alaQoSAppliedValidityPeriodHour=alaQoSAppliedValidityPeriodHour, alaQoSIpNetworkSummarySourceIpAddressType=alaQoSIpNetworkSummarySourceIpAddressType, alaQoSConditionDscpEnd=alaQoSConditionDscpEnd, alaQoSConditionDestinationUdpPortEnd=alaQoSConditionDestinationUdpPortEnd, alaQoSNetworkGroupsEntry=alaQoSNetworkGroupsEntry, alaQoSAppliedConditionDestinationIpMask=alaQoSAppliedConditionDestinationIpMask, alaQoSAppliedConditionDestinationMacGroup=alaQoSAppliedConditionDestinationMacGroup, alaQoSMIBConformance=alaQoSMIBConformance, alaQoSActionDscpStatus=alaQoSActionDscpStatus, alaQoSConditionDestinationIpAddrStatus=alaQoSConditionDestinationIpAddrStatus, alaQoSAppliedV6NetworkGroupIpAddr=alaQoSAppliedV6NetworkGroupIpAddr, alaQoSPortGroupStatus=alaQoSPortGroupStatus, alaQosAppliedConditionVmL4DestPort=alaQosAppliedConditionVmL4DestPort, alaQoSDSCPEntryNumber=alaQoSDSCPEntryNumber, alaQoSAppliedMACGroupsEntry=alaQoSAppliedMACGroupsEntry, alaQoSAppliedConditionVrfNameStatus=alaQoSAppliedConditionVrfNameStatus, alaQoSAppliedPortGroupPort=alaQoSAppliedPortGroupPort, alaQoSConfigAutoPhones=alaQoSConfigAutoPhones, alaQoSAppliedActionRowStatus=alaQoSAppliedActionRowStatus, alaQoSAppliedConditionIcmpTypeStatus=alaQoSAppliedConditionIcmpTypeStatus, alaQoSServiceSourceTcpPortStatus=alaQoSServiceSourceTcpPortStatus, alaQoSServiceDestinationUdpPort=alaQoSServiceDestinationUdpPort, alaQoSAppliedConditionTcpFlagsValStatus=alaQoSAppliedConditionTcpFlagsValStatus, alaQoSAppliedConditionMulticastIpMask=alaQoSAppliedConditionMulticastIpMask, alaQoSAppliedRuleCountType=alaQoSAppliedRuleCountType, alaQoSAppliedConditionIpv6NHStatus=alaQoSAppliedConditionIpv6NHStatus, alaQoSMACGroupsTable=alaQoSMACGroupsTable, alaQoSAppliedActionMirrorSlot=alaQoSAppliedActionMirrorSlot, alaQoSAppliedConditionDestinationTcpPortEnd=alaQoSAppliedConditionDestinationTcpPortEnd, alaQoSPortTrusted=alaQoSPortTrusted, alaQoSAutoMacRangeEntry=alaQoSAutoMacRangeEntry, alaQoSAppliedServiceDestinationIpPortStatus=alaQoSAppliedServiceDestinationIpPortStatus, alaQoSAppliedConditionDestinationPortGroupStatus=alaQoSAppliedConditionDestinationPortGroupStatus, alaQoSConditionTcpFlags=alaQoSConditionTcpFlags, alaQoSAppliedServiceGroupsTable=alaQoSAppliedServiceGroupsTable, alaQoSConfigUserportShutdown=alaQoSConfigUserportShutdown, alaQoSMIBAppliedRuleGroupObjects=alaQoSMIBAppliedRuleGroupObjects, alaQoSAppliedMACGroupsSource=alaQoSAppliedMACGroupsSource, alaQoSRuleGroupEntry=alaQoSRuleGroupEntry, alaQoSAppliedValidityPeriodHourStatus=alaQoSAppliedValidityPeriodHourStatus, alaQoSConfigUserportFilter=alaQoSConfigUserportFilter, alaQoSAppliedActionTos=alaQoSAppliedActionTos, alaQoSAppliedRuleGroupsType=alaQoSAppliedRuleGroupsType, alaQoSAppliedActionPBS=alaQoSAppliedActionPBS, alaQoSConditionDestinationIpPort=alaQoSConditionDestinationIpPort, alaQoSConditionName=alaQoSConditionName, alaQoSAppliedConditionServiceGroup=alaQoSAppliedConditionServiceGroup, alaQoSAppliedV6NetworkGroupEntry=alaQoSAppliedV6NetworkGroupEntry, alaQoSRuleYellowByteCount=alaQoSRuleYellowByteCount, alaQoSAppliedActionMapTo=alaQoSAppliedActionMapTo, alaQoSAppliedConditionDestinationNetworkGroup=alaQoSAppliedConditionDestinationNetworkGroup, alaQoSPortMaximumDefaultDepthStatus=alaQoSPortMaximumDefaultDepthStatus, alaQoSRuleActive=alaQoSRuleActive, alaQoSMIBAppliedConditionObjects=alaQoSMIBAppliedConditionObjects, alaQoSAppliedServiceSourceTcpPortStatus=alaQoSAppliedServiceSourceTcpPortStatus, alaQoSAppliedConditionDestinationIpPortStatus=alaQoSAppliedConditionDestinationIpPortStatus, alaQoSAppliedMACGroupsStatus=alaQoSAppliedMACGroupsStatus, alaQoSPortGroupsEntry=alaQoSPortGroupsEntry, alaQoSConditionServiceStatus=alaQoSConditionServiceStatus, alaQoSValidityPeriodName=alaQoSValidityPeriodName, alaQoSV6NetworkGroupIpAddr=alaQoSV6NetworkGroupIpAddr, alaQoSAppliedActionEntry=alaQoSAppliedActionEntry, alaQoSAppliedConditionDestinationMacAddr=alaQoSAppliedConditionDestinationMacAddr, alaQoSAppliedActionPIR=alaQoSAppliedActionPIR, alaQoSRuleType=alaQoSRuleType, alaQoSAppliedRuleGroupsStatus=alaQoSAppliedRuleGroupsStatus, alaQoSAppliedRuleEnabled=alaQoSAppliedRuleEnabled, alaQoSMapGroupsName=alaQoSMapGroupsName, alaQoSActionMapFrom=alaQoSActionMapFrom, alaQoSConfig=alaQoSConfig, alaQoSAppliedServiceSourceIpPortStatus=alaQoSAppliedServiceSourceIpPortStatus, alaQoSServiceProtocol=alaQoSServiceProtocol, alaQoSValidityPeriodIntervalStatus=alaQoSValidityPeriodIntervalStatus, alaQosConditionVmL4SourcePortStatus=alaQosConditionVmL4SourcePortStatus, alaQoSMACGroupsName=alaQoSMACGroupsName, alaQoSConfigDEIMarking=alaQoSConfigDEIMarking, alaQoSConditionDestinationMacMask=alaQoSConditionDestinationMacMask, alaQoSAppliedConditionIpProtocolStatus=alaQoSAppliedConditionIpProtocolStatus, alaQoSMapGroupTable=alaQoSMapGroupTable, alaQoSAppliedRuleGroupTable=alaQoSAppliedRuleGroupTable, alaQoSAppliedActionPriority=alaQoSAppliedActionPriority, alaQoSAppliedConditionSourceNetworkGroup=alaQoSAppliedConditionSourceNetworkGroup, alaQoSMIBAppliedServiceGroupsObjects=alaQoSMIBAppliedServiceGroupsObjects, alaQoSAppliedConditionSourceUdpPortStatus=alaQoSAppliedConditionSourceUdpPortStatus, alaQoSAppliedActionRedirectChassis=alaQoSAppliedActionRedirectChassis, alaQoSAppliedValidityPeriodMonthsStatus=alaQoSAppliedValidityPeriodMonthsStatus, alaQoSAppliedConditionDestinationVlanStatus=alaQoSAppliedConditionDestinationVlanStatus, alaQoSConditionDestinationSlotStatus=alaQoSConditionDestinationSlotStatus, alaQoSAppliedServiceSource=alaQoSAppliedServiceSource, alaQoSAppliedConditionDestinationPort=alaQoSAppliedConditionDestinationPort, alaQoSAppliedActionSource=alaQoSAppliedActionSource, alaQoSConditionDestinationTcpPortStatus=alaQoSConditionDestinationTcpPortStatus, alaQoSConditionVmSourceIpv6IpMask=alaQoSConditionVmSourceIpv6IpMask, alaQoSActionPriorityStatus=alaQoSActionPriorityStatus, alaQoSPortMaximumIngressDepth=alaQoSPortMaximumIngressDepth, alaQoSMIBConfigObjects=alaQoSMIBConfigObjects, alaQoSRuleGroupsStatus=alaQoSRuleGroupsStatus, alaQoSAppliedActionNocache=alaQoSAppliedActionNocache, alaQoSAppliedConditionSourceSlotStatus=alaQoSAppliedConditionSourceSlotStatus, alaQoSAppliedActionRedirectSlot=alaQoSAppliedActionRedirectSlot, alaQoSCondition8021p=alaQoSCondition8021p, alaQoSConditionTosMask=alaQoSConditionTosMask, alaQoSConditionDestinationMacAddrStatus=alaQoSConditionDestinationMacAddrStatus, alaQoSAppliedConditionIcmpCode=alaQoSAppliedConditionIcmpCode, alaQoSAppliedConditionDscpMask=alaQoSAppliedConditionDscpMask, alaQoSActionRedirectChassis=alaQoSActionRedirectChassis, alaQoSAppliedMapGroupsName=alaQoSAppliedMapGroupsName, alaQoSRuleGroupsSource=alaQoSRuleGroupsSource, alaQoSPortMaximumIngressDepthStatus=alaQoSPortMaximumIngressDepthStatus, alaQoSAppliedRulePrecedence=alaQoSAppliedRulePrecedence, alaQoSConfigQMPage=alaQoSConfigQMPage, alaQoSRuleRedByteCount=alaQoSRuleRedByteCount, alaQoSAppliedConditionDestinationSlotStatus=alaQoSAppliedConditionDestinationSlotStatus, alaQoSMapGroupsSource=alaQoSMapGroupsSource, alaQoSAppliedServiceGroupTable=alaQoSAppliedServiceGroupTable, alaQoSConditionMcastIpv6AddrStatus=alaQoSConditionMcastIpv6AddrStatus, alaQosAppliedConditionVmL4SourcePort=alaQosAppliedConditionVmL4SourcePort, alaQoSConditionInner8021pStatus=alaQoSConditionInner8021pStatus, alaQoSPortGroupPort=alaQoSPortGroupPort, alaQoSServiceEntry=alaQoSServiceEntry, alaQoSAppliedConditionMulticastIpAddr=alaQoSAppliedConditionMulticastIpAddr, alaQoSAppliedActionPortdisable=alaQoSAppliedActionPortdisable, alaQoSConditionDestinationNetworkGroup=alaQoSConditionDestinationNetworkGroup, alaQoSMIBNetworkGroupObjects=alaQoSMIBNetworkGroupObjects, alaQoSRuleByteCount=alaQoSRuleByteCount, alaQoSConditionSourceIpPort=alaQoSConditionSourceIpPort, alaQoSActionTos=alaQoSActionTos, alaQoSStatsNonSpoofedEvents=alaQoSStatsNonSpoofedEvents, alaQoSMIB=alaQoSMIB, alaQoSAppliedRuleGroupsSource=alaQoSAppliedRuleGroupsSource, alaQoSAppliedConditionDestinationUdpPort=alaQoSAppliedConditionDestinationUdpPort, alaQoSAppliedAction8021p=alaQoSAppliedAction8021p, alaQoSServiceSourceIpPortStatus=alaQoSServiceSourceIpPortStatus, alaQoSPortMaximumIngBandwidth=alaQoSPortMaximumIngBandwidth, alaQoSConditionDPIAppGroupStatus=alaQoSConditionDPIAppGroupStatus, alaQoSAppliedCondition8021p=alaQoSAppliedCondition8021p, alaQoSServiceDestinationIpPort=alaQoSServiceDestinationIpPort, alaQoSConditionTcpFlagsStatus=alaQoSConditionTcpFlagsStatus, alaQoSConfigStatsReset=alaQoSConfigStatsReset, alaQoSAppliedConditionSourceIpv6Addr=alaQoSAppliedConditionSourceIpv6Addr, PYSNMP_MODULE_ID=alaQoSMIB, alaQoSConditionTable=alaQoSConditionTable, alaQoSAppliedServiceSourceIpPort=alaQoSAppliedServiceSourceIpPort, alaQoSNetworkGroupIpAddr=alaQoSNetworkGroupIpAddr, alaQoSAppliedConditionEthertypeStatus=alaQoSAppliedConditionEthertypeStatus, alaQoSConditionSourceIpv6Mask=alaQoSConditionSourceIpv6Mask, alaQoSAppliedConditionVmSourceIpMask=alaQoSAppliedConditionVmSourceIpMask, alaQoSConditionDestinationUdpPortStatus=alaQoSConditionDestinationUdpPortStatus, alaQoSServiceSourceTcpPortEnd=alaQoSServiceSourceTcpPortEnd, alaQoSPortGroupSlot=alaQoSPortGroupSlot, alaQoSConditionAppFpGroup=alaQoSConditionAppFpGroup, alaQoSActionMirrorPort=alaQoSActionMirrorPort, alaQoSAppliedConditionEntry=alaQoSAppliedConditionEntry, alaQoSRuleEnforced=alaQoSRuleEnforced, alaQoSAppliedActionTrustDSCP=alaQoSAppliedActionTrustDSCP, alaQoSExtendedRuleYellowByteCount=alaQoSExtendedRuleYellowByteCount, alaQoSAppliedConditionDscpStatus=alaQoSAppliedConditionDscpStatus, alaQoSAppliedConditionIpProtocol=alaQoSAppliedConditionIpProtocol, alaQoSActionTable=alaQoSActionTable, alaQoSMapGroupsStatus=alaQoSMapGroupsStatus, alaQoSActionPermanentGatewayIpV6Addr=alaQoSActionPermanentGatewayIpV6Addr, alaQoSConditionEthertype=alaQoSConditionEthertype, alaQoSAppliedV6NetworkGroupStatus=alaQoSAppliedV6NetworkGroupStatus, alaQoSAppliedActionCPUPriorityStatus=alaQoSAppliedActionCPUPriorityStatus, alaQoSExtendedRuleRedPacketCount=alaQoSExtendedRuleRedPacketCount, alaQoSExtendedRuleEntry=alaQoSExtendedRuleEntry, alaQoSAppliedConditionDestinationUdpPortStatus=alaQoSAppliedConditionDestinationUdpPortStatus, alaQoSAppliedServiceGroupsName=alaQoSAppliedServiceGroupsName, alaQoSAppliedMapGroupStatus=alaQoSAppliedMapGroupStatus, alaQoSActionMapTo=alaQoSActionMapTo, alaQoSConditionSourceMacAddr=alaQoSConditionSourceMacAddr, alaQoSConditionService=alaQoSConditionService, alaQoSActionPBSStatus=alaQoSActionPBSStatus, alaQoSMIBAppliedV6NetworkGroupObjects=alaQoSMIBAppliedV6NetworkGroupObjects, alaQoSAppliedRuleName=alaQoSAppliedRuleName, alaQoSAppliedConditionVxlanPortStatus=alaQoSAppliedConditionVxlanPortStatus, alaQoSRuleExtendedObjects=alaQoSRuleExtendedObjects, alaQoSAppliedActionMaximumDepth=alaQoSAppliedActionMaximumDepth, alaQoSConditionDestinationNetworkGroupStatus=alaQoSConditionDestinationNetworkGroupStatus, alaQoSRuleAction=alaQoSRuleAction, alaQoSAppliedServiceSourceTcpPort=alaQoSAppliedServiceSourceTcpPort, alaQoSExtendedRuleGreenPacketCount=alaQoSExtendedRuleGreenPacketCount, alaQoSAppliedV6NetworkGroupTable=alaQoSAppliedV6NetworkGroupTable)
mibBuilder.exportSymbols("ALCATEL-IND1-QOS-MIB", alaQoSIpNetworkSummarySourceGroup=alaQoSIpNetworkSummarySourceGroup, alaQoSPortMaximumIngBandwidthStatus=alaQoSPortMaximumIngBandwidthStatus, alaQoSAppliedConditionSourceTcpPortEnd=alaQoSAppliedConditionSourceTcpPortEnd, alaQoSAppliedServiceProtocol=alaQoSAppliedServiceProtocol, alaQoSRuleDefaultList=alaQoSRuleDefaultList, alaQoSAppliedActionDisposition=alaQoSAppliedActionDisposition, alaQoSAppliedConditionTable=alaQoSAppliedConditionTable, alaQoSExtendedRuleYellowPacketCount=alaQoSExtendedRuleYellowPacketCount, alaQoSConditionSourceIpPortStatus=alaQoSConditionSourceIpPortStatus, alaQoSAppliedMapGroupsTable=alaQoSAppliedMapGroupsTable, alaQoSRuleLogInterval=alaQoSRuleLogInterval, alaQoSConditionDestinationIpAddr=alaQoSConditionDestinationIpAddr, alaQoSAppliedConditionMcastIpv6AddrStatus=alaQoSAppliedConditionMcastIpv6AddrStatus, alaQoSConfigReset=alaQoSConfigReset, alaQoSNetworkGroupsStatus=alaQoSNetworkGroupsStatus, alaQoSMIBAppliedPortGroupObjects=alaQoSMIBAppliedPortGroupObjects, alaQoSAppliedConditionMcastIpv6Mask=alaQoSAppliedConditionMcastIpv6Mask, alaQoSAppliedRuleGroupsEntry=alaQoSAppliedRuleGroupsEntry, alaQoSDSCPRowStatus=alaQoSDSCPRowStatus, alaQoSRuleRowStatus=alaQoSRuleRowStatus, alaQoSNetworkGroupEntry=alaQoSNetworkGroupEntry, alaQoSAppliedPortGroupPortEnd=alaQoSAppliedPortGroupPortEnd, alaQoSAppliedActionCBSStatus=alaQoSAppliedActionCBSStatus, alaQoSRuleGroupMatches=alaQoSRuleGroupMatches, alaQoSAction8021pStatus=alaQoSAction8021pStatus, alaQoSConditionSourceIpv6AddrStatus=alaQoSConditionSourceIpv6AddrStatus, alaQoSAppliedConditionVmSourceMacAddrStatus=alaQoSAppliedConditionVmSourceMacAddrStatus, alaQoSPortMaximumDefaultDepth=alaQoSPortMaximumDefaultDepth, alaQoSAppliedActionPermanentGatewayIpV6Addr=alaQoSAppliedActionPermanentGatewayIpV6Addr, alaQoSActionPermanentGatewayIpV6AddrStatus=alaQoSActionPermanentGatewayIpV6AddrStatus, alaQoSAppliedConditionMulticastNetworkGroup=alaQoSAppliedConditionMulticastNetworkGroup, alaQoSAppliedConditionSourceIpMask=alaQoSAppliedConditionSourceIpMask, alaQoSAppliedActionPermanentGatewayIpAddrStatus=alaQoSAppliedActionPermanentGatewayIpAddrStatus, alaQoSConfigAppliedUserportShutdown=alaQoSConfigAppliedUserportShutdown, alaQoSConditionVrfNameStatus=alaQoSConditionVrfNameStatus, alaQoSConditionSourcePortSplitGroupStatus=alaQoSConditionSourcePortSplitGroupStatus, alaQoSAppliedConditionSourceIpPort=alaQoSAppliedConditionSourceIpPort, alaQoSNetworkGroupIpMask=alaQoSNetworkGroupIpMask, alaQoSMapGroupValue=alaQoSMapGroupValue, alaQoSMIBStatsObjects=alaQoSMIBStatsObjects, alaQoSConditionIpProtocol=alaQoSConditionIpProtocol, alaQoSServiceDestinationIpPortStatus=alaQoSServiceDestinationIpPortStatus, alaQoSAppliedConditionTcpFlagsMaskStatus=alaQoSAppliedConditionTcpFlagsMaskStatus, alaQoSPortGroupsTable=alaQoSPortGroupsTable, alaQoSActionMirrorSlot=alaQoSActionMirrorSlot, alaQoSAppliedV6NetworkGroupIpMask=alaQoSAppliedV6NetworkGroupIpMask, alaQoSMIBMACGroupObjects=alaQoSMIBMACGroupObjects, alaQoSServiceGroupsStatus=alaQoSServiceGroupsStatus, alaQoSAppliedActionMaximumDepthStatus=alaQoSAppliedActionMaximumDepthStatus, alaQoSRuleRedPacketCount=alaQoSRuleRedPacketCount, alaQoSAppliedConditionSourceTcpPort=alaQoSAppliedConditionSourceTcpPort, alaQoSServiceDestinationIpPortEnd=alaQoSServiceDestinationIpPortEnd, alaQoSRuleGroupPacketCount=alaQoSRuleGroupPacketCount, alaQoSAppliedRuleActive=alaQoSAppliedRuleActive, alaQoSConditionDestinationPortGroupStatus=alaQoSConditionDestinationPortGroupStatus, alaQoSAppliedPortGroupSlot=alaQoSAppliedPortGroupSlot, alaQoSMapGroupEntry=alaQoSMapGroupEntry, alaQoSRuleGroupsType=alaQoSRuleGroupsType, alaQoSConditionDestinationPortEnd=alaQoSConditionDestinationPortEnd, alaQoSConditionSIPStatus=alaQoSConditionSIPStatus, alaQoSAppliedConditionVmSourceIpv6IpAddr=alaQoSAppliedConditionVmSourceIpv6IpAddr, alaQoSConditionVxlanVniStatus=alaQoSConditionVxlanVniStatus, alaQoSAppliedConditionSourceMacAddrStatus=alaQoSAppliedConditionSourceMacAddrStatus, alaQoSAppliedActionPIRStatus=alaQoSAppliedActionPIRStatus, alaQoSAppliedMapGroupValue=alaQoSAppliedMapGroupValue, alaQoSPortMaximumBandwidth=alaQoSPortMaximumBandwidth, alaQoSConditionIcmpCodeStatus=alaQoSConditionIcmpCodeStatus, alaQoSRuleEntry=alaQoSRuleEntry, alaQoSPortDefault8021p=alaQoSPortDefault8021p, alaQoSConditionDestinationVlanStatus=alaQoSConditionDestinationVlanStatus, alaQoSV6NetworkGroupStatus=alaQoSV6NetworkGroupStatus, alaQoSConditionSourceIpPortEnd=alaQoSConditionSourceIpPortEnd, alaQoSAppliedConditionTosMask=alaQoSAppliedConditionTosMask, alaQoSAppliedActionLoadBalanceGroupStatus=alaQoSAppliedActionLoadBalanceGroupStatus, alaQoSServiceDestinationTcpPortStatus=alaQoSServiceDestinationTcpPortStatus, alaQoSAppliedConditionVmSourceMacMask=alaQoSAppliedConditionVmSourceMacMask, alaQoSAppliedActionMapGroup=alaQoSAppliedActionMapGroup, alaQoSConditionTcpFlagsMask=alaQoSConditionTcpFlagsMask, alaQoSConditionSIP=alaQoSConditionSIP, alaQoSRuleYellowPacketCount=alaQoSRuleYellowPacketCount, alaQoSConditionInnerSourceVlanStatus=alaQoSConditionInnerSourceVlanStatus, alaQoSMIBAppliedValidityPeriodObjects=alaQoSMIBAppliedValidityPeriodObjects, alaQoSAppliedConditionSourceIpv6Mask=alaQoSAppliedConditionSourceIpv6Mask, alaQoSAppliedConditionSourceUdpPortEnd=alaQoSAppliedConditionSourceUdpPortEnd, alaQoSConditionSourceTcpPortEnd=alaQoSConditionSourceTcpPortEnd, alaQoSAppliedConditionSourceIpv6AddrStatus=alaQoSAppliedConditionSourceIpv6AddrStatus, alaQoSConditionSourceVlanStatus=alaQoSConditionSourceVlanStatus, alaQoSConditionDestinationChassis=alaQoSConditionDestinationChassis, alaQoSRuleSource=alaQoSRuleSource, alaQoSAppliedServiceSourceUdpPort=alaQoSAppliedServiceSourceUdpPort, alaQoSActionPIR=alaQoSActionPIR, alaQoSMIBAppliedPortGroupsObjects=alaQoSMIBAppliedPortGroupsObjects, alaQoSAppliedConditionVrfName=alaQoSAppliedConditionVrfName, alaQoSValidityPeriodInterval=alaQoSValidityPeriodInterval, alaQoSAppliedConditionSourceVlanStatus=alaQoSAppliedConditionSourceVlanStatus, alaQoSServiceSource=alaQoSServiceSource, alaQoSValidityPeriodTable=alaQoSValidityPeriodTable, alaQoSRulePrecedence=alaQoSRulePrecedence, alaQoSPortInterfaceType=alaQoSPortInterfaceType, alaQoSAppliedServiceName=alaQoSAppliedServiceName, alaQoSMIBAppliedMapGroupsObjects=alaQoSMIBAppliedMapGroupsObjects, alaQoSAppliedActionMirrorChassis=alaQoSAppliedActionMirrorChassis, alaQoSMIBAppliedRuleGroupsObjects=alaQoSMIBAppliedRuleGroupsObjects, alaQoSAppliedRuleLogInterval=alaQoSAppliedRuleLogInterval, alaQoSAppliedActionPermanentGatewayIpV6IfIndex=alaQoSAppliedActionPermanentGatewayIpV6IfIndex, alaQoSAppliedActionCPUPriority=alaQoSAppliedActionCPUPriority, alaQosAppliedConditionVmL4SourcePortStatus=alaQosAppliedConditionVmL4SourcePortStatus, alaQoSConditionSourceChassis=alaQoSConditionSourceChassis, alaQoSConditionSourceMacMask=alaQoSConditionSourceMacMask, alaQoSAppliedConditionVmSourceIpv6IpMask=alaQoSAppliedConditionVmSourceIpv6IpMask, alaQoSAppliedConditionDestinationTcpPort=alaQoSAppliedConditionDestinationTcpPort, alaQoSDSCPDropPrecedence=alaQoSDSCPDropPrecedence, alaQoSAppliedNetworkGroupsEntry=alaQoSAppliedNetworkGroupsEntry, alaQoSAppliedValidityPeriodEndHour=alaQoSAppliedValidityPeriodEndHour, alaQoSAppliedConditionTcpFlagsVal=alaQoSAppliedConditionTcpFlagsVal, alaQoSRuleReflexive=alaQoSRuleReflexive, alaQoSConditionVxlanVni=alaQoSConditionVxlanVni, alaQoSAppliedActionCIRStatus=alaQoSAppliedActionCIRStatus, alaQoSConfigLogLines=alaQoSConfigLogLines, alaQoSMIBAppliedRuleObjects=alaQoSMIBAppliedRuleObjects, alaQoSConditionIcmpType=alaQoSConditionIcmpType, alaQoSAppliedServiceGroupEntry=alaQoSAppliedServiceGroupEntry, alaQoSConditionSourcePortGroup=alaQoSConditionSourcePortGroup, alaQoSConditionSourceMacGroup=alaQoSConditionSourceMacGroup, alaQoSRulePacketCount=alaQoSRulePacketCount, alaQoSActionRedirectModule=alaQoSActionRedirectModule, alaQoSMIBAppliedServiceGroupObjects=alaQoSMIBAppliedServiceGroupObjects, alaQoSValidityPeriodDays=alaQoSValidityPeriodDays, alaQoSActionLoadBalanceGroup=alaQoSActionLoadBalanceGroup, alaQoSPortGroupTable=alaQoSPortGroupTable, alaQoSAppliedServiceDestinationTcpPortStatus=alaQoSAppliedServiceDestinationTcpPortStatus, alaQoSConditionIpv6FlowLabelStatus=alaQoSConditionIpv6FlowLabelStatus, alaQoSAppliedConditionDPIAppGrp=alaQoSAppliedConditionDPIAppGrp, alaQoSActionRedirectAgg=alaQoSActionRedirectAgg, alaQoSMIBValidityPeriodObjects=alaQoSMIBValidityPeriodObjects, alaQoSAppliedNetworkGroupsSource=alaQoSAppliedNetworkGroupsSource, alaQoSAppliedConditionSourceVlan=alaQoSAppliedConditionSourceVlan, alaQoSMIBServiceObjects=alaQoSMIBServiceObjects, alaQoSConditionDestinationIpv6Addr=alaQoSConditionDestinationIpv6Addr, alaQoSAppliedServiceGroupsSource=alaQoSAppliedServiceGroupsSource, alaQoSConfigLogConsole=alaQoSConfigLogConsole, alaQoSVmSnooping=alaQoSVmSnooping, alaQoSActionMirrorMode=alaQoSActionMirrorMode, alaQoSExtendedRuleSlot=alaQoSExtendedRuleSlot, alaQoSConditionMcastIpv6Addr=alaQoSConditionMcastIpv6Addr, alaQoSAppliedConditionInnerSourceVlan=alaQoSAppliedConditionInnerSourceVlan, alaQoSAppliedServiceTable=alaQoSAppliedServiceTable, alaQoSAutoMacRangeEnd=alaQoSAutoMacRangeEnd, alaQoSAutoMacRangeStart=alaQoSAutoMacRangeStart, alaQoSMIBCompliances=alaQoSMIBCompliances, alaQoSConditionVxlanPortStatus=alaQoSConditionVxlanPortStatus, alaQoSMapGroupKeyEnd=alaQoSMapGroupKeyEnd, alaQoSActionDisposition=alaQoSActionDisposition, alaQoSAppliedActionRedirectPort=alaQoSAppliedActionRedirectPort, alaQoSAppliedMapGroupsEntry=alaQoSAppliedMapGroupsEntry, alaQoSMIBCompliance=alaQoSMIBCompliance, alaQoSAppliedConditionSourcePortEnd=alaQoSAppliedConditionSourcePortEnd, alaQoSActionTrustDSCP=alaQoSActionTrustDSCP, alaQoSAppliedActionDscp=alaQoSAppliedActionDscp, alaQoSValidityPeriodEndInterval=alaQoSValidityPeriodEndInterval, alaQoSAppliedRuleLog=alaQoSAppliedRuleLog, alaQoSValidityPeriodHourStatus=alaQoSValidityPeriodHourStatus, alaQoSRuleSave=alaQoSRuleSave, alaQoSMIBMapGroupObjects=alaQoSMIBMapGroupObjects, alaQoSAppliedRuleByteCount=alaQoSAppliedRuleByteCount, alaQoSAppliedConditionServiceStatus=alaQoSAppliedConditionServiceStatus, alaQoSAppliedConditionVmSourceIpAddrStatus=alaQoSAppliedConditionVmSourceIpAddrStatus, alaQoSAppliedActionMirrorMode=alaQoSAppliedActionMirrorMode, alaQoSConditionVmIpProtocol=alaQoSConditionVmIpProtocol, alaQoSExtendedRulePort=alaQoSExtendedRulePort, alaQoSAppliedConditionSourceIpAddrStatus=alaQoSAppliedConditionSourceIpAddrStatus, alaQoSMIBAppliedMACGroupObjects=alaQoSMIBAppliedMACGroupObjects, alaQoSIpNetworkSummaryDestinationIpAddressType=alaQoSIpNetworkSummaryDestinationIpAddressType, alaQoSMIBDSCPGroupObjects=alaQoSMIBDSCPGroupObjects, alaQoSAppliedRuleYellowByteCount=alaQoSAppliedRuleYellowByteCount, alaQoSAppliedRuleType=alaQoSAppliedRuleType, alaQoSAppliedNetworkGroupIpMask=alaQoSAppliedNetworkGroupIpMask, alaQoSAppliedRuleTrapEvents=alaQoSAppliedRuleTrapEvents, alaQoSActionNocache=alaQoSActionNocache, alaQoSConditionDestinationMacGroup=alaQoSConditionDestinationMacGroup, alaQoSAppliedNetworkGroupsStatus=alaQoSAppliedNetworkGroupsStatus, alaQoSExtendedRuleSplitRuleID=alaQoSExtendedRuleSplitRuleID, alaQosAppliedConditionVmL4DestPortStatus=alaQosAppliedConditionVmL4DestPortStatus, alaQoSIpNetworkSummaryGroupObjects=alaQoSIpNetworkSummaryGroupObjects, alaQoSActionPermanentGatewayIpAddr=alaQoSActionPermanentGatewayIpAddr, alaQoSAppliedMACGroupMacMask=alaQoSAppliedMACGroupMacMask, alaQoSAppliedActionPriorityStatus=alaQoSAppliedActionPriorityStatus, alaQoSStats=alaQoSStats, alaQoSConfigLogLevel=alaQoSConfigLogLevel, alaQosConditionVxlanStatus=alaQosConditionVxlanStatus, alaQoSServiceDestinationTcpPortEnd=alaQoSServiceDestinationTcpPortEnd, alaQoSAppliedServiceDestinationUdpPortEnd=alaQoSAppliedServiceDestinationUdpPortEnd, alaQoSActionCPUPriority=alaQoSActionCPUPriority, alaQoSAppliedRuleGroupCountType=alaQoSAppliedRuleGroupCountType, alaQoSAppliedConditionMulticastNetworkGroupStatus=alaQoSAppliedConditionMulticastNetworkGroupStatus, alaQoSAppliedActionMapGroupStatus=alaQoSAppliedActionMapGroupStatus, alaQoSMIBPortGroupsObjects=alaQoSMIBPortGroupsObjects, alaQoSMIBV6NetworkGroupObjects=alaQoSMIBV6NetworkGroupObjects, alaQoSActionCPUPriorityStatus=alaQoSActionCPUPriorityStatus, alaQoSAppliedMACGroupMacAddr=alaQoSAppliedMACGroupMacAddr, alaQoSAppliedPortGroupsStatus=alaQoSAppliedPortGroupsStatus, alaQoSRuleValidityPeriodStatus=alaQoSRuleValidityPeriodStatus, alaQoSConditionIpv6FlowLabel=alaQoSConditionIpv6FlowLabel, alaQoSConditionVmSourceIpv6IpAddrStatus=alaQoSConditionVmSourceIpv6IpAddrStatus, alaQoSServiceSourceUdpPortStatus=alaQoSServiceSourceUdpPortStatus, alaQoSActionShared=alaQoSActionShared, alaQoSAppliedConditionIpv6FlowLabelStatus=alaQoSAppliedConditionIpv6FlowLabelStatus, alaQoSActionRTCPDSCP=alaQoSActionRTCPDSCP, alaQoSAppliedConditionSourceIpAddr=alaQoSAppliedConditionSourceIpAddr, alaQoSAppliedMapGroupKeyEnd=alaQoSAppliedMapGroupKeyEnd, alaQoSMapGroupStatus=alaQoSMapGroupStatus, alaQoSConditionSourceIpAddr=alaQoSConditionSourceIpAddr, alaQoSServiceGroupsTable=alaQoSServiceGroupsTable, alaQoSMACGroupEntry=alaQoSMACGroupEntry, alaQoSAppliedServiceDestinationIpPort=alaQoSAppliedServiceDestinationIpPort, alaQoSPortGroupsStatus=alaQoSPortGroupsStatus, alaQoSAppliedConditionDestinationSlot=alaQoSAppliedConditionDestinationSlot, alaQoSAppliedServiceEntry=alaQoSAppliedServiceEntry, alaQoSActionName=alaQoSActionName, alaQoSConditionSourceTcpPort=alaQoSConditionSourceTcpPort, alaQoSAppliedRuleRowStatus=alaQoSAppliedRuleRowStatus, alaQoSAppliedPortGroupStatus=alaQoSAppliedPortGroupStatus, alaQoSAppliedActionRedirectAggStatus=alaQoSAppliedActionRedirectAggStatus, alaQoSRuleGroupTable=alaQoSRuleGroupTable, alaQoSConfigForwardLog=alaQoSConfigForwardLog, alaQoSAppliedRuleYellowPacketCount=alaQoSAppliedRuleYellowPacketCount, alaQoSConditionIpv6NH=alaQoSConditionIpv6NH, alaQoSActionMaximumDepth=alaQoSActionMaximumDepth, alaQoSAppliedValidityPeriodEndInterval=alaQoSAppliedValidityPeriodEndInterval, alaQoSAppliedCondition8021pStatus=alaQoSAppliedCondition8021pStatus, alaQoSAppliedConditionVxlanPort=alaQoSAppliedConditionVxlanPort, alaQoSAppliedConditionMcastIpv6Addr=alaQoSAppliedConditionMcastIpv6Addr, alaQoSConditionSourceMacGroupStatus=alaQoSConditionSourceMacGroupStatus, alaQoSAppliedServiceDestinationUdpPortStatus=alaQoSAppliedServiceDestinationUdpPortStatus, alaQoSActionMapGroupStatus=alaQoSActionMapGroupStatus, alaQoSConditionTos=alaQoSConditionTos, alaQoSConfigStatsInterval=alaQoSConfigStatsInterval, alaQoSAppliedConditionDestinationIpAddr=alaQoSAppliedConditionDestinationIpAddr, alaQoSConfigSwitchGroup=alaQoSConfigSwitchGroup, alaQoSActionPIRStatus=alaQoSActionPIRStatus, alaQoSAppliedActionMaximumBandwidth=alaQoSAppliedActionMaximumBandwidth, alaQoSAppliedActionAlternateGatewayIpAddrStatus=alaQoSAppliedActionAlternateGatewayIpAddrStatus, alaQoSAppliedRuleTable=alaQoSAppliedRuleTable, alaQoSActionRTCPMonitorStatus=alaQoSActionRTCPMonitorStatus, alaQosConditionVmL4DestPort=alaQosConditionVmL4DestPort, alaQoSConditionSourceNetworkGroupStatus=alaQoSConditionSourceNetworkGroupStatus, alaQoSAppliedConditionVxlanVni=alaQoSAppliedConditionVxlanVni, alaQoSRuleGroupCountType=alaQoSRuleGroupCountType, alaQoSMACGroupStatus=alaQoSMACGroupStatus, alaQoSMapGroupsEntry=alaQoSMapGroupsEntry, alaQoSAppliedConditionSourceNetworkGroupStatus=alaQoSAppliedConditionSourceNetworkGroupStatus, alaQoSConditionServiceGroup=alaQoSConditionServiceGroup, alaQoSServiceRowStatus=alaQoSServiceRowStatus, alaQoSAppliedConditionSourcePortSplitGroup=alaQoSAppliedConditionSourcePortSplitGroup)
mibBuilder.exportSymbols("ALCATEL-IND1-QOS-MIB", alaQoSAppliedConditionInnerSourceVlanStatus=alaQoSAppliedConditionInnerSourceVlanStatus, alaQoSAction8021p=alaQoSAction8021p, alaQoSConditionTcpFlagsValStatus=alaQoSConditionTcpFlagsValStatus, alaQoSConditionInner8021p=alaQoSConditionInner8021p, alaQoSMACGroupsStatus=alaQoSMACGroupsStatus, alaQoSAppliedActionPermanentGatewayIpAddr=alaQoSAppliedActionPermanentGatewayIpAddr, alaQoSAppliedConditionSourceIpPortEnd=alaQoSAppliedConditionSourceIpPortEnd, alaQoSAppliedServiceDestinationIpPortEnd=alaQoSAppliedServiceDestinationIpPortEnd, alaQoSAppliedServiceGroupStatus=alaQoSAppliedServiceGroupStatus, alaQoSConfigDEIMapping=alaQoSConfigDEIMapping, alaQoSConditionAppFpGroupStatus=alaQoSConditionAppFpGroupStatus, alaQoSConfigApply=alaQoSConfigApply, alaQoSConditionIpv6Traffic=alaQoSConditionIpv6Traffic, alaQoSRuleName=alaQoSRuleName, alaQoSConfigClearLog=alaQoSConfigClearLog, alaQoSAppliedConditionSourceTcpPortStatus=alaQoSAppliedConditionSourceTcpPortStatus, alaQoSMIBMapGroupsObjects=alaQoSMIBMapGroupsObjects, alaQoSAppliedConditionDestinationIpPortEnd=alaQoSAppliedConditionDestinationIpPortEnd, alaQoSAppliedPortGroupsSource=alaQoSAppliedPortGroupsSource, alaQoSConditionVmSourceIpv6IpAddr=alaQoSConditionVmSourceIpv6IpAddr, alaQoSConditionTcpFlagsVal=alaQoSConditionTcpFlagsVal, alaQoSConditionVxlanPort=alaQoSConditionVxlanPort, alaQoSAppliedConditionDestinationNetworkGroupStatus=alaQoSAppliedConditionDestinationNetworkGroupStatus, alaQoSMIBRuleGroupObjects=alaQoSMIBRuleGroupObjects, alaQoSAppliedServiceSourceIpPortEnd=alaQoSAppliedServiceSourceIpPortEnd, alaQoSPortDEIMarking=alaQoSPortDEIMarking, alaQoSValidityPeriodMonthsStatus=alaQoSValidityPeriodMonthsStatus, alaQoSAppliedPortGroupsName=alaQoSAppliedPortGroupsName, alaQoSAppliedNetworkGroupEntry=alaQoSAppliedNetworkGroupEntry, alaQoSAppliedMACGroupTable=alaQoSAppliedMACGroupTable, alaQoSConfigQMPath=alaQoSConfigQMPath, alaQoSAppliedConditionDestinationPortGroup=alaQoSAppliedConditionDestinationPortGroup, alaQoSAppliedConditionDestinationMacGroupStatus=alaQoSAppliedConditionDestinationMacGroupStatus, alaQoSActionDscp=alaQoSActionDscp, alaQoSConditionDestinationIpPortEnd=alaQoSConditionDestinationIpPortEnd, alaQoSAppliedRuleRedByteCount=alaQoSAppliedRuleRedByteCount, alaQoSActionLoadBalanceGroupStatus=alaQoSActionLoadBalanceGroupStatus, alaQoSServiceDestinationUdpPortEnd=alaQoSServiceDestinationUdpPortEnd, alaQoSAppliedMapGroupTable=alaQoSAppliedMapGroupTable, alaQoSAppliedRuleGroupMatches=alaQoSAppliedRuleGroupMatches, alaQoSExtendedRuleGreenByteCount=alaQoSExtendedRuleGreenByteCount, alaQoSConditionDestinationVlan=alaQoSConditionDestinationVlan, alaQoSAppliedActionName=alaQoSAppliedActionName, alaQoSAppliedActionRTCPDSCP=alaQoSAppliedActionRTCPDSCP, alaQoSConditionSourceTcpPortStatus=alaQoSConditionSourceTcpPortStatus, alaQoSConditionSourceIpMask=alaQoSConditionSourceIpMask, alaQoSAppliedRuleSave=alaQoSAppliedRuleSave, alaQoSAutoMacRangeIndex=alaQoSAutoMacRangeIndex, alaQoSAppliedPortGroupTable=alaQoSAppliedPortGroupTable, alaQoSConditionSourcePort=alaQoSConditionSourcePort, alaQoSAppliedConditionVmIpProtocol=alaQoSAppliedConditionVmIpProtocol, alaQoSActionMaximumDepthStatus=alaQoSActionMaximumDepthStatus, alaQoSRuleTable=alaQoSRuleTable, alaQoSAppliedActionRedirectSlotStatus=alaQoSAppliedActionRedirectSlotStatus, alaQoSAppliedConditionMulticastIpAddrStatus=alaQoSAppliedConditionMulticastIpAddrStatus, alaQoSServiceSourceIpPortEnd=alaQoSServiceSourceIpPortEnd, alaQoSActionAlternateGatewayIpAddr=alaQoSActionAlternateGatewayIpAddr, alaQoSActionMirrorModeStatus=alaQoSActionMirrorModeStatus, alaQoSStatsSpoofedEvents=alaQoSStatsSpoofedEvents, alaQoSDSCPEntry=alaQoSDSCPEntry, alaQoSAppliedServiceSourceUdpPortEnd=alaQoSAppliedServiceSourceUdpPortEnd, alaQoSRuleGroupRuleName=alaQoSRuleGroupRuleName, alaQoSIpNetworkSummaryVrfName=alaQoSIpNetworkSummaryVrfName, alaQoSAppliedConditionSourceUdpPort=alaQoSAppliedConditionSourceUdpPort, alaQoSMIBAutoMacRangeGroupObjects=alaQoSMIBAutoMacRangeGroupObjects, alaQoSAppliedConditionServiceGroupStatus=alaQoSAppliedConditionServiceGroupStatus, alaQoSAppliedPortGroupEntry=alaQoSAppliedPortGroupEntry, alaQoSAppliedMACGroupEntry=alaQoSAppliedMACGroupEntry, alaQoSConditionVmSourceMacMask=alaQoSConditionVmSourceMacMask, alaQoSAppliedRuleGroupsTable=alaQoSAppliedRuleGroupsTable, alaQoSAppliedConditionVxlanVniStatus=alaQoSAppliedConditionVxlanVniStatus, alaQoSActionPermanentGatewayIpAddrStatus=alaQoSActionPermanentGatewayIpAddrStatus, alaQoSAppliedAction8021pStatus=alaQoSAppliedAction8021pStatus, alaQoSMapGroupKey=alaQoSMapGroupKey, alaQoSV6NetworkGroupIpMask=alaQoSV6NetworkGroupIpMask, alaQoSConditionDscp=alaQoSConditionDscp, alaQoSAppliedRuleAction=alaQoSAppliedRuleAction, alaQoSConditionIpProtocolStatus=alaQoSConditionIpProtocolStatus, alaQoSServiceGroupServiceName=alaQoSServiceGroupServiceName, alaQoSAppliedConditionSourceChassis=alaQoSAppliedConditionSourceChassis, alaQoSAppliedConditionSourceSlot=alaQoSAppliedConditionSourceSlot, alaQoSActionPBS=alaQoSActionPBS, alaQoSAppliedActionTosStatus=alaQoSAppliedActionTosStatus, alaQoSConditionEthertypeStatus=alaQoSConditionEthertypeStatus, alaQoSAppliedConditionIcmpCodeStatus=alaQoSAppliedConditionIcmpCodeStatus, alaQoSAppliedRuleGroupPacketCount=alaQoSAppliedRuleGroupPacketCount, alaQoSPortTable=alaQoSPortTable, alaQoSConditionDscpStatus=alaQoSConditionDscpStatus, alaQoSConditionDestinationUdpPort=alaQoSConditionDestinationUdpPort, alaQoSAppliedActionTable=alaQoSAppliedActionTable, alaQoSConditionDPIAppName=alaQoSConditionDPIAppName, alaQoSActionEntry=alaQoSActionEntry, alaQoSPortDefaultClassification=alaQoSPortDefaultClassification, alaQoSExtendedRuleRedByteCount=alaQoSExtendedRuleRedByteCount, alaQoSMIBAppliedNetworkGroupsObjects=alaQoSMIBAppliedNetworkGroupsObjects, alaQoSConditionServiceGroupStatus=alaQoSConditionServiceGroupStatus, alaQoSConditionDscpMask=alaQoSConditionDscpMask, alaQoSMACGroupMacAddr=alaQoSMACGroupMacAddr, alaQoSValidityPeriodEntry=alaQoSValidityPeriodEntry, alaQoSConfigQMMACGroup=alaQoSConfigQMMACGroup, alaQoSAppliedValidityPeriodDaysStatus=alaQoSAppliedValidityPeriodDaysStatus, alaQoSAppliedActionShared=alaQoSAppliedActionShared, alaQoSConditionSourcePortSplitGroup=alaQoSConditionSourcePortSplitGroup, alaQoSAppliedServiceGroupServiceName=alaQoSAppliedServiceGroupServiceName, alaQoSConditionDestinationSlot=alaQoSConditionDestinationSlot, alaQoSPortPhysicalBandwidth=alaQoSPortPhysicalBandwidth, alaQoSRuleGroupStatus=alaQoSRuleGroupStatus, alaQoSPortReset=alaQoSPortReset, alaQoSAppliedActionCIR=alaQoSAppliedActionCIR, alaQoSConditionDestinationPortGroup=alaQoSConditionDestinationPortGroup, alaQoSAppliedConditionDestinationIpv6Addr=alaQoSAppliedConditionDestinationIpv6Addr, alaQoSMACGroupsSource=alaQoSMACGroupsSource, alaQoSAppliedMapGroupEntry=alaQoSAppliedMapGroupEntry, alaQoSIpNetworkSummaryEntry=alaQoSIpNetworkSummaryEntry, alaQoSServiceGroupStatus=alaQoSServiceGroupStatus, alaQoSAppliedConditionTosStatus=alaQoSAppliedConditionTosStatus, alaQoSAppliedConditionFragments=alaQoSAppliedConditionFragments, alaQoSActionColorOnly=alaQoSActionColorOnly, alaQoSAppliedConditionDestinationIpv6AddrStatus=alaQoSAppliedConditionDestinationIpv6AddrStatus, alaQoSConditionSourceMacAddrStatus=alaQoSConditionSourceMacAddrStatus, alaQoSAppliedValidityPeriodTable=alaQoSAppliedValidityPeriodTable, alaQoSAppliedRuleGroupByteCount=alaQoSAppliedRuleGroupByteCount, alaQoSAppliedMACGroupsName=alaQoSAppliedMACGroupsName, alaQoSMIBServiceGroupsObjects=alaQoSMIBServiceGroupsObjects, alaQoSAppliedActionRedirectAgg=alaQoSAppliedActionRedirectAgg, alaQoSAppliedConditionRowStatus=alaQoSAppliedConditionRowStatus, alaQoSValidityPeriodEndHour=alaQoSValidityPeriodEndHour, alaQoSAppliedNetworkGroupsTable=alaQoSAppliedNetworkGroupsTable, alaQosAppliedConditionVxlanStatus=alaQosAppliedConditionVxlanStatus, alaQoSAppliedConditionInner8021p=alaQoSAppliedConditionInner8021p, alaQoSActionCBS=alaQoSActionCBS, alaQoSActionCBSStatus=alaQoSActionCBSStatus, alaQoSRuleGroupsEnabled=alaQoSRuleGroupsEnabled, alaQoSIpNetworkSummaryProtocol=alaQoSIpNetworkSummaryProtocol, alaQoSAppliedConditionSourcePortGroup=alaQoSAppliedConditionSourcePortGroup, alaQoSConditionSourceVlan=alaQoSConditionSourceVlan, alaQoSServiceSourceIpPort=alaQoSServiceSourceIpPort, alaQoSIpNetworkSummaryAction=alaQoSIpNetworkSummaryAction, alaQoSAppliedMACGroupStatus=alaQoSAppliedMACGroupStatus, alaQoSAppliedConditionEthertype=alaQoSAppliedConditionEthertype, alaQoSPortEntry=alaQoSPortEntry, alaQoSIpNetworkSummaryDestinationGroup=alaQoSIpNetworkSummaryDestinationGroup, alaQoSAppliedRuleGreenPacketCount=alaQoSAppliedRuleGreenPacketCount, alaQoSMIBRuleObjects=alaQoSMIBRuleObjects, alaQoSServiceGroupsName=alaQoSServiceGroupsName, alaQoSAppliedConditionService=alaQoSAppliedConditionService, alaQoSAutoMacRangeTable=alaQoSAutoMacRangeTable, alaQoSAppliedRuleSource=alaQoSAppliedRuleSource, alaQoSMIBGroups=alaQoSMIBGroups, alaQoSConditionSourcePortGroupStatus=alaQoSConditionSourcePortGroupStatus, alaQoSAppliedRuleValidityPeriod=alaQoSAppliedRuleValidityPeriod, alaQoSConditionVmSourceIpAddr=alaQoSConditionVmSourceIpAddr, alaQoSAppliedValidityPeriodEntry=alaQoSAppliedValidityPeriodEntry, alaQoSAppliedActionRTCPDSCPStatus=alaQoSAppliedActionRTCPDSCPStatus, alaQoSActionRedirectSlot=alaQoSActionRedirectSlot, alaQoSActionRedirectAggStatus=alaQoSActionRedirectAggStatus, alaQoSAppliedNetworkGroupStatus=alaQoSAppliedNetworkGroupStatus, alaQoSMIBRuleGroupsObjects=alaQoSMIBRuleGroupsObjects, alaQoSConditionVrfName=alaQoSConditionVrfName, alaQoSAppliedConditionSourceMacGroup=alaQoSAppliedConditionSourceMacGroup, alaQoSConditionIcmpTypeStatus=alaQoSConditionIcmpTypeStatus, alaQoSServiceSourceTcpPort=alaQoSServiceSourceTcpPort, alaQoSConfigRevert=alaQoSConfigRevert, alaQoSMIBAppliedMapGroupObjects=alaQoSMIBAppliedMapGroupObjects, alaQoSServiceGroupEntry=alaQoSServiceGroupEntry, alaQoSMIBMACGroupsObjects=alaQoSMIBMACGroupsObjects, alaQoSConditionTcpFlagsMaskStatus=alaQoSConditionTcpFlagsMaskStatus, alaQoSAppliedConditionDPIAppNameStatus=alaQoSAppliedConditionDPIAppNameStatus, alaQoSAppliedConditionIpv6FlowLabel=alaQoSAppliedConditionIpv6FlowLabel, alaQoSMACGroupTable=alaQoSMACGroupTable, alaQoSAppliedActionDscpStatus=alaQoSAppliedActionDscpStatus, alaQoSConfigTrustPorts=alaQoSConfigTrustPorts, alaQoSAppliedConditionTos=alaQoSAppliedConditionTos, alaQoSAppliedValidityPeriodSource=alaQoSAppliedValidityPeriodSource, alaQoSExtendedRuleTable=alaQoSExtendedRuleTable, alaQoSV6NetworkGroupTable=alaQoSV6NetworkGroupTable, alaQoSNetworkGroupTable=alaQoSNetworkGroupTable, alaQosConditionVmL4DestPortStatus=alaQosConditionVmL4DestPortStatus, alaQoSServiceSourceUdpPortEnd=alaQoSServiceSourceUdpPortEnd, alaQoSAppliedServiceDestinationUdpPort=alaQoSAppliedServiceDestinationUdpPort, alaQoSServiceGroupTable=alaQoSServiceGroupTable, alaQoSPortDefaultDSCP=alaQoSPortDefaultDSCP, alaQoSAppliedRuleGreenByteCount=alaQoSAppliedRuleGreenByteCount, alaQoSConditionDPIAppNameStatus=alaQoSConditionDPIAppNameStatus, alaQoSPortGroupEntry=alaQoSPortGroupEntry, alaQoSAppliedActionLoadBalanceGroup=alaQoSAppliedActionLoadBalanceGroup, alaQoSAppliedRuleGroupsEnabled=alaQoSAppliedRuleGroupsEnabled, alaQoSMIBAppliedMACGroupsObjects=alaQoSMIBAppliedMACGroupsObjects, alaQoSPortGroupsSource=alaQoSPortGroupsSource, alaQoSMACGroupMacMask=alaQoSMACGroupMacMask, alaQoSActionPortdisable=alaQoSActionPortdisable, alaQoSNetworkGroupsTable=alaQoSNetworkGroupsTable, alaQoSActionPriority=alaQoSActionPriority, alaQoSAppliedRulePacketCount=alaQoSAppliedRulePacketCount, alaQoSAppliedRuleGroupStatus=alaQoSAppliedRuleGroupStatus, alaQoSActionMirrorChassis=alaQoSActionMirrorChassis, alaQoSConditionSourceUdpPort=alaQoSConditionSourceUdpPort, alaQoSConditionSourceUdpPortEnd=alaQoSConditionSourceUdpPortEnd, alaQoSActionMaximumBandwidthStatus=alaQoSActionMaximumBandwidthStatus, alaQoSMIBAppliedActionObjects=alaQoSMIBAppliedActionObjects, alaQoSConditionSourceIpv6Addr=alaQoSConditionSourceIpv6Addr, alaQoSExtendedRuleByteCount=alaQoSExtendedRuleByteCount, alaQoSActionRowStatus=alaQoSActionRowStatus, alaQoSActionCIRStatus=alaQoSActionCIRStatus, alaQoSConditionDestinationTcpPort=alaQoSConditionDestinationTcpPort, alaQoSValidityPeriodHour=alaQoSValidityPeriodHour, alaQoSConditionSourceUdpPortStatus=alaQoSConditionSourceUdpPortStatus, alaQoSConditionMcastIpv6Mask=alaQoSConditionMcastIpv6Mask, alaQoSAppliedMapGroupKey=alaQoSAppliedMapGroupKey, alaQoSAppliedValidityPeriodIntervalStatus=alaQoSAppliedValidityPeriodIntervalStatus, alaQoSConditionDestinationIpPortStatus=alaQoSConditionDestinationIpPortStatus, alaQoSAppliedServiceRowStatus=alaQoSAppliedServiceRowStatus, alaQoSConditionSourceIpAddrStatus=alaQoSConditionSourceIpAddrStatus, alaQoSPortRowStatus=alaQoSPortRowStatus, alaQoSMapGroupsTable=alaQoSMapGroupsTable, alaQoSConditionIcmpCode=alaQoSConditionIcmpCode, alaQoSConditionVmSourceMacAddrStatus=alaQoSConditionVmSourceMacAddrStatus, alaQoSAppliedConditionSIPStatus=alaQoSAppliedConditionSIPStatus, alaQoSConditionMulticastNetworkGroup=alaQoSConditionMulticastNetworkGroup, alaQoSRuleGreenPacketCount=alaQoSRuleGreenPacketCount, alaQoSMIBPortGroupObjects=alaQoSMIBPortGroupObjects, alaQoSConditionSourceSlotStatus=alaQoSConditionSourceSlotStatus, alaQoSNetworkGroupsSource=alaQoSNetworkGroupsSource, alaQoSDSCPTable=alaQoSDSCPTable, alaQoSAppliedConditionDestinationMacAddrStatus=alaQoSAppliedConditionDestinationMacAddrStatus, alaQoSAppliedConditionDestinationIpAddrStatus=alaQoSAppliedConditionDestinationIpAddrStatus, alaQoSServiceSourceUdpPort=alaQoSServiceSourceUdpPort, alaQoSConditionEntry=alaQoSConditionEntry, alaQoSConditionDestinationIpMask=alaQoSConditionDestinationIpMask, alaQoSAppliedServiceGroupsStatus=alaQoSAppliedServiceGroupsStatus, alaQoSRuleTrapEvents=alaQoSRuleTrapEvents, alaQoSConditionDestinationPort=alaQoSConditionDestinationPort, alaQoSAppliedRuleDefaultList=alaQoSAppliedRuleDefaultList, alaQoSAppliedConditionInner8021pStatus=alaQoSAppliedConditionInner8021pStatus, alaQoSValidityPeriodSource=alaQoSValidityPeriodSource, alaQoSConditionMulticastIpMask=alaQoSConditionMulticastIpMask, alaQoSRuleGreenByteCount=alaQoSRuleGreenByteCount, alaQoSConditionVmSourceIpMask=alaQoSConditionVmSourceIpMask, alaQoSAppliedConditionDPIAppGroupStatus=alaQoSAppliedConditionDPIAppGroupStatus, alaQoSAppliedConditionTcpFlagsStatus=alaQoSAppliedConditionTcpFlagsStatus, alaQoSAppliedConditionDestinationUdpPortEnd=alaQoSAppliedConditionDestinationUdpPortEnd, alaQoSConditionSourcePortEnd=alaQoSConditionSourcePortEnd, alaQoSCondition8021pStatus=alaQoSCondition8021pStatus, alaQoSAppliedActionPermanentGatewayIpV6AddrStatus=alaQoSAppliedActionPermanentGatewayIpV6AddrStatus, alaQoSAppliedActionRTCPMonitor=alaQoSAppliedActionRTCPMonitor, alaQoSAppliedActionColorOnly=alaQoSAppliedActionColorOnly, alaQoSMIBActionObjects=alaQoSMIBActionObjects, alaQoSActionTosStatus=alaQoSActionTosStatus, alaQoSIpNetworkSummaryTable=alaQoSIpNetworkSummaryTable, alaQoSAppliedRuleReflexive=alaQoSAppliedRuleReflexive, alaQoSAppliedConditionSourcePort=alaQoSAppliedConditionSourcePort, alaQoSAppliedActionRTCPMonitorStatus=alaQoSAppliedActionRTCPMonitorStatus, alaQoSMACGroupsEntry=alaQoSMACGroupsEntry, alaQoSAppliedRuleGroupRuleName=alaQoSAppliedRuleGroupRuleName)
mibBuilder.exportSymbols("ALCATEL-IND1-QOS-MIB", alaQoSAppliedPortGroupsTable=alaQoSAppliedPortGroupsTable, alaQoSAppliedPortGroupsEntry=alaQoSAppliedPortGroupsEntry, alaQoSAppliedRuleEnforced=alaQoSAppliedRuleEnforced, alaQoSAppliedMapGroupsSource=alaQoSAppliedMapGroupsSource, alaQoSAppliedActionMirrorModeStatus=alaQoSAppliedActionMirrorModeStatus, alaQoSRuleValidityPeriod=alaQoSRuleValidityPeriod, alaQoSActionRedirectPort=alaQoSActionRedirectPort, alaQoSAppliedActionTrustDSCPStatus=alaQoSAppliedActionTrustDSCPStatus, alaQoSPortMaximumBandwidthStatus=alaQoSPortMaximumBandwidthStatus, alaQoSAppliedConditionIcmpType=alaQoSAppliedConditionIcmpType, alaQoSActionAlternateGatewayIpAddrStatus=alaQoSActionAlternateGatewayIpAddrStatus, alaQoSAppliedConditionDscp=alaQoSAppliedConditionDscp, alaQoSAppliedActionAlternateGatewayIpAddr=alaQoSAppliedActionAlternateGatewayIpAddr, alaQoSAppliedConditionName=alaQoSAppliedConditionName, alaQoSConditionVmIpProtocolStatus=alaQoSConditionVmIpProtocolStatus, alaQoSConditionSource=alaQoSConditionSource, alaQoSAppliedServiceDestinationTcpPortEnd=alaQoSAppliedServiceDestinationTcpPortEnd, alaQoSValidityPeriodMonths=alaQoSValidityPeriodMonths, alaQoSActionRTCPMonitor=alaQoSActionRTCPMonitor, alaQoSDSCPPriority=alaQoSDSCPPriority, alaQoSAppliedConditionAppFpGroupStatus=alaQoSAppliedConditionAppFpGroupStatus, alaQoSActionRedirectSlotStatus=alaQoSActionRedirectSlotStatus, alaQoSAppliedConditionDestinationPortEnd=alaQoSAppliedConditionDestinationPortEnd, alaQoSConditionRowStatus=alaQoSConditionRowStatus, alaQoSAppliedValidityPeriodRowStatus=alaQoSAppliedValidityPeriodRowStatus, alaQoSValidityPeriodDaysStatus=alaQoSValidityPeriodDaysStatus, alaQoSExtendedRulePacketCount=alaQoSExtendedRulePacketCount, alaQoSMIBAppliedNetworkGroupObjects=alaQoSMIBAppliedNetworkGroupObjects, alaQoSMIBPortObjects=alaQoSMIBPortObjects, alaQoSMIBServiceGroupObjects=alaQoSMIBServiceGroupObjects, alaQoSIpNetworkSummarySourceIpAddress=alaQoSIpNetworkSummarySourceIpAddress, alaQoSConditionVmSourceMacAddr=alaQoSConditionVmSourceMacAddr, alaQoSActionTrustDSCPStatus=alaQoSActionTrustDSCPStatus, alaQoSConditionIpv6NHStatus=alaQoSConditionIpv6NHStatus, alaQoSAppliedConditionDscpEnd=alaQoSAppliedConditionDscpEnd, alaQoSAppliedValidityPeriodInterval=alaQoSAppliedValidityPeriodInterval, alaQoSAppliedConditionDestinationVlan=alaQoSAppliedConditionDestinationVlan, alaQoSServiceName=alaQoSServiceName, alaQoSPortDEIMapping=alaQoSPortDEIMapping, alaQoSAppliedConditionDestinationIpv6Mask=alaQoSAppliedConditionDestinationIpv6Mask, alaQoSAppliedConditionSource=alaQoSAppliedConditionSource, alaQoSNetworkGroupStatus=alaQoSNetworkGroupStatus, alaQoSConfigDebug=alaQoSConfigDebug, alaQoSAppliedConditionSourceIpPortStatus=alaQoSAppliedConditionSourceIpPortStatus, alaQoSConditionDestinationIpv6AddrStatus=alaQoSConditionDestinationIpv6AddrStatus, alaQoSAppliedConditionSourcePortGroupStatus=alaQoSAppliedConditionSourcePortGroupStatus, alaQoSAppliedRuleGroupEntry=alaQoSAppliedRuleGroupEntry, alaQoSIpNetworkSummaryHitCount=alaQoSIpNetworkSummaryHitCount, alaQoSRuleGroupsTable=alaQoSRuleGroupsTable, alaQoSConditionTcpEstablished=alaQoSConditionTcpEstablished, alaQoSPortSlot=alaQoSPortSlot, alaQoSActionRTCPDSCPStatus=alaQoSActionRTCPDSCPStatus, alaQoSAppliedMACGroupsTable=alaQoSAppliedMACGroupsTable, alaQoSRuleEnabled=alaQoSRuleEnabled, alaQoSAppliedRuleGroupsName=alaQoSAppliedRuleGroupsName, alaQoSPortPort=alaQoSPortPort, alaQoSMIBNetworkGroupsObjects=alaQoSMIBNetworkGroupsObjects, alaQoSConditionMulticastIpAddrStatus=alaQoSConditionMulticastIpAddrStatus, alaQoSAppliedConditionDPIAppName=alaQoSAppliedConditionDPIAppName, alaQoSAppliedConditionSourcePortSplitGroupStatus=alaQoSAppliedConditionSourcePortSplitGroupStatus, alaQoSAppliedActionCBS=alaQoSAppliedActionCBS, alaQoSAppliedValidityPeriodName=alaQoSAppliedValidityPeriodName, alaQoSRuleCountType=alaQoSRuleCountType, alaQoSMIBAppliedServiceObjects=alaQoSMIBAppliedServiceObjects, alaQoSMIBConditionObjects=alaQoSMIBConditionObjects, alaQoSConditionDestinationTcpPortEnd=alaQoSConditionDestinationTcpPortEnd, alaQoSAppliedConditionVmSourceMacAddr=alaQoSAppliedConditionVmSourceMacAddr, alaQoSAppliedValidityPeriodDays=alaQoSAppliedValidityPeriodDays, alaQoSServiceDestinationTcpPort=alaQoSServiceDestinationTcpPort, alaQoSAppliedServiceSourceTcpPortEnd=alaQoSAppliedServiceSourceTcpPortEnd)
