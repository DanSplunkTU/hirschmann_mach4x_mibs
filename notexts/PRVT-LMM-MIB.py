#
# PySNMP MIB module PRVT-LMM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-LMM-MIB
# Produced by pysmi-1.1.3 at Wed Dec  1 17:12:00 2021
# On host fv-az36-754 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
switch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "switch")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, TimeTicks, Bits, ObjectIdentity, MibIdentifier, Gauge32, Unsigned32, Counter32, IpAddress, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "TimeTicks", "Bits", "ObjectIdentity", "MibIdentifier", "Gauge32", "Unsigned32", "Counter32", "IpAddress", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Integer32", "ModuleIdentity")
TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue")
prvtLmmMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 5, 172))
prvtLmmMIB.setRevisions(('2011-10-11 00:00',))
if mibBuilder.loadTexts: prvtLmmMIB.setLastUpdated('201110110000Z')
if mibBuilder.loadTexts: prvtLmmMIB.setOrganization('BATM Advanced Communication')
prvtLmmNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 0))
prvtLmmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1))
prvtLmmShutdown = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLmmShutdown.setStatus('current')
prvtLmmDebug = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLmmDebug.setStatus('current')
prvtLmmPeriod = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLmmPeriod.setStatus('current')
prvtLmmTrap = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLmmTrap.setStatus('current')
prvtLmmLog = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLmmLog.setStatus('current')
prvtLmmLed = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLmmLed.setStatus('current')
prvtLmmTemperatureHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLmmTemperatureHighThreshold.setStatus('current')
prvtLmmTemperatureLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLmmTemperatureLowThreshold.setStatus('current')
prvtLmmRxPowerLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLmmRxPowerLowThreshold.setStatus('current')
prvtLmmRxPowerHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLmmRxPowerHighThreshold.setStatus('current')
prvtLmmTxPowerLowThreshold = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLmmTxPowerLowThreshold.setStatus('current')
prvtLmmTxPowerHighThreshold = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLmmTxPowerHighThreshold.setStatus('current')
prvtLmmInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13), )
if mibBuilder.loadTexts: prvtLmmInterfaceTable.setStatus('current')
prvtLmmInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtLmmInterfaceEntry.setStatus('current')
prvtLmmInterfaceShutdown = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLmmInterfaceShutdown.setStatus('current')
prvtLmmInterfaceTempLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLmmInterfaceTempLowThreshold.setStatus('current')
prvtLmmInterfaceTempHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLmmInterfaceTempHighThreshold.setStatus('current')
prvtLmmInterfaceTempValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLmmInterfaceTempValue.setStatus('current')
prvtLmmInterfaceTempThresholdLo = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLmmInterfaceTempThresholdLo.setStatus('current')
prvtLmmInterfaceTempThresholdHi = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLmmInterfaceTempThresholdHi.setStatus('current')
prvtLmmInterfaceTempTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLmmInterfaceTempTestState.setStatus('current')
prvtLmmInterfaceRxPowerLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLmmInterfaceRxPowerLowThreshold.setStatus('current')
prvtLmmInterfaceRxPowerHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLmmInterfaceRxPowerHighThreshold.setStatus('current')
prvtLmmInterfaceRxPowerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLmmInterfaceRxPowerValue.setStatus('current')
prvtLmmInterfaceRxPowerThresholdRxLo = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLmmInterfaceRxPowerThresholdRxLo.setStatus('current')
prvtLmmInterfaceRxPowerThresholdRxHi = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLmmInterfaceRxPowerThresholdRxHi.setStatus('current')
prvtLmmInterfaceRxPowerTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 13), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLmmInterfaceRxPowerTestState.setStatus('current')
prvtLmmInterfaceTxPowerLowThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLmmInterfaceTxPowerLowThreshold.setStatus('current')
prvtLmmInterfaceTxPowerHighThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-40, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLmmInterfaceTxPowerHighThreshold.setStatus('current')
prvtLmmInterfaceTxPowerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLmmInterfaceTxPowerValue.setStatus('current')
prvtLmmInterfaceTxPowerThresholdTxLo = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLmmInterfaceTxPowerThresholdTxLo.setStatus('current')
prvtLmmInterfaceTxPowerThresholdTxHi = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLmmInterfaceTxPowerThresholdTxHi.setStatus('current')
prvtLmmInterfaceTxPowerTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 19), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLmmInterfaceTxPowerTestState.setStatus('current')
prvtLmmInterfaceOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 1, 13, 1, 20), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLmmInterfaceOperStatus.setStatus('current')
prvtLmmTemperatureThresholdCrossed = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 0, 1)).setObjects(("PRVT-LMM-MIB", "prvtLmmInterfaceTempValue"), ("PRVT-LMM-MIB", "prvtLmmInterfaceTempThresholdHi"), ("PRVT-LMM-MIB", "prvtLmmInterfaceTempThresholdLo"))
if mibBuilder.loadTexts: prvtLmmTemperatureThresholdCrossed.setStatus('current')
prvtLmmTxPowerThresholdCrossed = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 0, 2)).setObjects(("PRVT-LMM-MIB", "prvtLmmInterfaceTxPowerValue"), ("PRVT-LMM-MIB", "prvtLmmInterfaceTxPowerThresholdTxHi"), ("PRVT-LMM-MIB", "prvtLmmInterfaceTxPowerThresholdTxLo"))
if mibBuilder.loadTexts: prvtLmmTxPowerThresholdCrossed.setStatus('current')
prvtLmmRxPowerThresholdCrossed = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 172, 0, 3)).setObjects(("PRVT-LMM-MIB", "prvtLmmInterfaceRxPowerValue"), ("PRVT-LMM-MIB", "prvtLmmInterfaceRxPowerThresholdRxHi"), ("PRVT-LMM-MIB", "prvtLmmInterfaceRxPowerThresholdRxLo"))
if mibBuilder.loadTexts: prvtLmmRxPowerThresholdCrossed.setStatus('current')
mibBuilder.exportSymbols("PRVT-LMM-MIB", prvtLmmRxPowerThresholdCrossed=prvtLmmRxPowerThresholdCrossed, PYSNMP_MODULE_ID=prvtLmmMIB, prvtLmmInterfaceTxPowerHighThreshold=prvtLmmInterfaceTxPowerHighThreshold, prvtLmmInterfaceTempThresholdHi=prvtLmmInterfaceTempThresholdHi, prvtLmmInterfaceTxPowerLowThreshold=prvtLmmInterfaceTxPowerLowThreshold, prvtLmmShutdown=prvtLmmShutdown, prvtLmmInterfaceTxPowerThresholdTxLo=prvtLmmInterfaceTxPowerThresholdTxLo, prvtLmmInterfaceEntry=prvtLmmInterfaceEntry, prvtLmmInterfaceOperStatus=prvtLmmInterfaceOperStatus, prvtLmmMIB=prvtLmmMIB, prvtLmmNotifications=prvtLmmNotifications, prvtLmmInterfaceTempTestState=prvtLmmInterfaceTempTestState, prvtLmmInterfaceRxPowerLowThreshold=prvtLmmInterfaceRxPowerLowThreshold, prvtLmmTrap=prvtLmmTrap, prvtLmmInterfaceTempLowThreshold=prvtLmmInterfaceTempLowThreshold, prvtLmmInterfaceTxPowerThresholdTxHi=prvtLmmInterfaceTxPowerThresholdTxHi, prvtLmmInterfaceRxPowerThresholdRxHi=prvtLmmInterfaceRxPowerThresholdRxHi, prvtLmmInterfaceTempValue=prvtLmmInterfaceTempValue, prvtLmmLog=prvtLmmLog, prvtLmmInterfaceShutdown=prvtLmmInterfaceShutdown, prvtLmmInterfaceRxPowerHighThreshold=prvtLmmInterfaceRxPowerHighThreshold, prvtLmmInterfaceTxPowerTestState=prvtLmmInterfaceTxPowerTestState, prvtLmmDebug=prvtLmmDebug, prvtLmmInterfaceRxPowerThresholdRxLo=prvtLmmInterfaceRxPowerThresholdRxLo, prvtLmmTemperatureLowThreshold=prvtLmmTemperatureLowThreshold, prvtLmmInterfaceRxPowerValue=prvtLmmInterfaceRxPowerValue, prvtLmmRxPowerHighThreshold=prvtLmmRxPowerHighThreshold, prvtLmmTxPowerLowThreshold=prvtLmmTxPowerLowThreshold, prvtLmmInterfaceTempHighThreshold=prvtLmmInterfaceTempHighThreshold, prvtLmmLed=prvtLmmLed, prvtLmmTxPowerHighThreshold=prvtLmmTxPowerHighThreshold, prvtLmmObjects=prvtLmmObjects, prvtLmmTemperatureHighThreshold=prvtLmmTemperatureHighThreshold, prvtLmmTxPowerThresholdCrossed=prvtLmmTxPowerThresholdCrossed, prvtLmmInterfaceRxPowerTestState=prvtLmmInterfaceRxPowerTestState, prvtLmmInterfaceTxPowerValue=prvtLmmInterfaceTxPowerValue, prvtLmmInterfaceTable=prvtLmmInterfaceTable, prvtLmmPeriod=prvtLmmPeriod, prvtLmmInterfaceTempThresholdLo=prvtLmmInterfaceTempThresholdLo, prvtLmmTemperatureThresholdCrossed=prvtLmmTemperatureThresholdCrossed, prvtLmmRxPowerLowThreshold=prvtLmmRxPowerLowThreshold)
