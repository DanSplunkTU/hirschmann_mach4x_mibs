#
# PySNMP MIB module ALCATEL-IND1-LAG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-LAG-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 17:59:51 2022
# On host fv-az126-670 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
softentIND1LnkAgg, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1LnkAgg")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
LacpKey, LacpState, ChurnState = mibBuilder.importSymbols("IEEE8023-LAG-MIB", "LacpKey", "LacpState", "ChurnState")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Unsigned32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, iso, ModuleIdentity, ObjectIdentity, Integer32, Gauge32, Counter32, MibIdentifier, IpAddress, NotificationType, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "iso", "ModuleIdentity", "ObjectIdentity", "Integer32", "Gauge32", "Counter32", "MibIdentifier", "IpAddress", "NotificationType", "Bits")
RowStatus, TextualConvention, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DisplayString", "MacAddress")
alcatelIND1LAGMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1))
alcatelIND1LAGMIB.setRevisions(('2010-05-13 00:00',))
if mibBuilder.loadTexts: alcatelIND1LAGMIB.setLastUpdated('201005130000Z')
if mibBuilder.loadTexts: alcatelIND1LAGMIB.setOrganization('Alcatel-Lucent')
alcatelIND1LAGMIBNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 0))
if mibBuilder.loadTexts: alcatelIND1LAGMIBNotifications.setStatus('current')
alcatelIND1LAGMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1))
class LacpType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("lacpOff", 0), ("lacpOn", 1))

class McLagType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("mcLagOff", 0), ("mcLagOn", 1))

alclnkaggAgg = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1))
alclnkaggAggPort = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2))
alclnkaggTablesLastChanged = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggTablesLastChanged.setStatus('current')
alclnkaggAggTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1), )
if mibBuilder.loadTexts: alclnkaggAggTable.setStatus('current')
alclnkaggAggEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-LAG-MIB", "alclnkaggAggIndex"))
if mibBuilder.loadTexts: alclnkaggAggEntry.setStatus('current')
alclnkaggAggIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alclnkaggAggIndex.setStatus('current')
alclnkaggAggMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggMACAddress.setStatus('current')
alclnkaggAggActorSystemPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggActorSystemPriority.setStatus('current')
alclnkaggAggActorSystemID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 4), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggActorSystemID.setStatus('current')
alclnkaggAggPartnerAdminKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 5), LacpKey()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggPartnerAdminKey.setStatus('current')
alclnkaggAggActorAdminKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 6), LacpKey()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggActorAdminKey.setStatus('current')
alclnkaggAggActorOperKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 7), LacpKey()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggActorOperKey.setStatus('current')
alclnkaggAggPartnerSystemID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 8), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggPartnerSystemID.setStatus('current')
alclnkaggAggPartnerSystemPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggPartnerSystemPriority.setStatus('current')
alclnkaggAggPartnerOperKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 10), LacpKey()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggPartnerOperKey.setStatus('current')
alclnkaggAggSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggSize.setStatus('current')
alclnkaggAggNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggNumber.setStatus('current')
alclnkaggAggDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggDescr.setStatus('current')
alclnkaggAggName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggName.setStatus('current')
alclnkaggAggLacpType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 15), LacpType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggLacpType.setStatus('current')
alclnkaggAggAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggAdminState.setStatus('current')
alclnkaggAggOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("logicPortCreatFailed", 3), ("qReservationFailed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggOperState.setStatus('current')
alclnkaggAggNbrSelectedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggNbrSelectedPorts.setStatus('current')
alclnkaggAggNbrAttachedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggNbrAttachedPorts.setStatus('current')
alclnkaggAggPrimaryPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 20), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPrimaryPortIndex.setStatus('current')
alclnkaggAggPrimaryPortPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPrimaryPortPosition.setStatus('current')
alclnkaggAggRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 22), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggRowStatus.setStatus('current')
alclnkaggAggMcLagType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 23), McLagType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggMcLagType.setStatus('current')
alclnkaggAggPortSelectionHash = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("sourceMac", 1), ("destinationMac", 2), ("sourceDestinationMac", 3), ("sourceIp", 4), ("destinationIp", 5), ("sourceDestinationIp", 6), ("tunnelProtocol", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggPortSelectionHash.setStatus('current')
alclnkaggAggWTRTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggWTRTimer.setStatus('current')
alclnkaggAggPortListTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 2), )
if mibBuilder.loadTexts: alclnkaggAggPortListTable.setStatus('current')
alclnkaggAggPortListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-LAG-MIB", "alclnkaggAggIndex"))
if mibBuilder.loadTexts: alclnkaggAggPortListEntry.setStatus('current')
alclnkaggAggPortListPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 2, 1, 1), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortListPorts.setStatus('current')
alclnkaggAggPortTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1), )
if mibBuilder.loadTexts: alclnkaggAggPortTable.setStatus('current')
alclnkaggAggPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortIndex"))
if mibBuilder.loadTexts: alclnkaggAggPortEntry.setStatus('current')
alclnkaggAggPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alclnkaggAggPortIndex.setStatus('current')
alclnkaggAggPortActorSystemPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggPortActorSystemPriority.setStatus('current')
alclnkaggAggPortActorSystemID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 3), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggPortActorSystemID.setStatus('current')
alclnkaggAggPortActorAdminKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 4), LacpKey()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggPortActorAdminKey.setStatus('current')
alclnkaggAggPortActorOperKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 5), LacpKey()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortActorOperKey.setStatus('current')
alclnkaggAggPortPartnerAdminSystemPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggPortPartnerAdminSystemPriority.setStatus('current')
alclnkaggAggPortPartnerOperSystemPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortPartnerOperSystemPriority.setStatus('current')
alclnkaggAggPortPartnerAdminSystemID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 8), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggPortPartnerAdminSystemID.setStatus('current')
alclnkaggAggPortPartnerOperSystemID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 9), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortPartnerOperSystemID.setStatus('current')
alclnkaggAggPortPartnerAdminKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 10), LacpKey()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggPortPartnerAdminKey.setStatus('current')
alclnkaggAggPortPartnerOperKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 11), LacpKey()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortPartnerOperKey.setStatus('current')
alclnkaggAggPortSelectedAggID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 12), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortSelectedAggID.setStatus('current')
alclnkaggAggPortAttachedAggID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 13), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortAttachedAggID.setStatus('current')
alclnkaggAggPortActorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortActorPort.setStatus('current')
alclnkaggAggPortActorPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggPortActorPortPriority.setStatus('current')
alclnkaggAggPortPartnerAdminPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggPortPartnerAdminPort.setStatus('current')
alclnkaggAggPortPartnerOperPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortPartnerOperPort.setStatus('current')
alclnkaggAggPortPartnerAdminPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggPortPartnerAdminPortPriority.setStatus('current')
alclnkaggAggPortPartnerOperPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortPartnerOperPortPriority.setStatus('current')
alclnkaggAggPortActorAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 20), LacpState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggPortActorAdminState.setStatus('current')
alclnkaggAggPortActorOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 21), LacpState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortActorOperState.setStatus('current')
alclnkaggAggPortPartnerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 22), LacpState()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggPortPartnerAdminState.setStatus('current')
alclnkaggAggPortPartnerOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 23), LacpState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortPartnerOperState.setStatus('current')
alclnkaggAggPortSelectedAggNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggPortSelectedAggNumber.setStatus('current')
alclnkaggAggPortGlobalPortNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortGlobalPortNumber.setStatus('current')
alclnkaggAggPortAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortAdminState.setStatus('current')
alclnkaggAggPortOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("notAttached", 3), ("notAggregable", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortOperState.setStatus('current')
alclnkaggAggPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("created", 1), ("configurable", 2), ("configured", 3), ("selected", 4), ("reserved", 5), ("attached", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortState.setStatus('current')
alclnkaggAggPortLinkState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortLinkState.setStatus('current')
alclnkaggAggPortPrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("yes", 1), ("no", 2), ("notSignificant", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortPrimary.setStatus('current')
alclnkaggAggPortLacpType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 31), LacpType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggPortLacpType.setStatus('current')
alclnkaggAggPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 32), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alclnkaggAggPortRowStatus.setStatus('current')
alclnkaggAggPortMcLagType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 1, 1, 33), McLagType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortMcLagType.setStatus('current')
alclnkaggAggPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 2), )
if mibBuilder.loadTexts: alclnkaggAggPortStatsTable.setStatus('current')
alclnkaggAggPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortIndex"))
if mibBuilder.loadTexts: alclnkaggAggPortStatsEntry.setStatus('current')
alclnkaggAggPortStatsLACPDUsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortStatsLACPDUsRx.setStatus('current')
alclnkaggAggPortStatsMarkerPDUsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortStatsMarkerPDUsRx.setStatus('current')
alclnkaggAggPortStatsMarkerResponsePDUsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortStatsMarkerResponsePDUsRx.setStatus('current')
alclnkaggAggPortStatsUnknownRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortStatsUnknownRx.setStatus('current')
alclnkaggAggPortStatsIllegalRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortStatsIllegalRx.setStatus('current')
alclnkaggAggPortStatsLACPDUsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortStatsLACPDUsTx.setStatus('current')
alclnkaggAggPortStatsMarkerPDUsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortStatsMarkerPDUsTx.setStatus('current')
alclnkaggAggPortStatsMarkerResponsePDUsTx = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortStatsMarkerResponsePDUsTx.setStatus('current')
alclnkaggAggPortDebugTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 3), )
if mibBuilder.loadTexts: alclnkaggAggPortDebugTable.setStatus('current')
alclnkaggAggPortDebugEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortIndex"))
if mibBuilder.loadTexts: alclnkaggAggPortDebugEntry.setStatus('current')
alclnkaggAggPortDebugRxState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("current", 1), ("expired", 2), ("defaulted", 3), ("initialize", 4), ("lacpDisabled", 5), ("portDisabled", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortDebugRxState.setStatus('current')
alclnkaggAggPortDebugLastRxTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 3, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortDebugLastRxTime.setStatus('current')
alclnkaggAggPortDebugMuxState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("detached", 1), ("waiting", 2), ("attached", 3), ("collecting", 4), ("distributing", 5), ("collectingDistributing", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortDebugMuxState.setStatus('current')
alclnkaggAggPortDebugMuxReason = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 3, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortDebugMuxReason.setStatus('current')
alclnkaggAggPortDebugActorChurnState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 3, 1, 5), ChurnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortDebugActorChurnState.setStatus('current')
alclnkaggAggPortDebugPartnerChurnState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 3, 1, 6), ChurnState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortDebugPartnerChurnState.setStatus('current')
alclnkaggAggPortDebugActorChurnCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortDebugActorChurnCount.setStatus('current')
alclnkaggAggPortDebugPartnerChurnCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortDebugPartnerChurnCount.setStatus('current')
alclnkaggAggPortDebugActorSyncTransitionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortDebugActorSyncTransitionCount.setStatus('current')
alclnkaggAggPortDebugPartnerSyncTransitionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortDebugPartnerSyncTransitionCount.setStatus('current')
alclnkaggAggPortDebugActorChangeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortDebugActorChangeCount.setStatus('current')
alclnkaggAggPortDebugPartnerChangeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggPortDebugPartnerChangeCount.setStatus('current')
alclnkaggAggIdIfIndexTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 3), )
if mibBuilder.loadTexts: alclnkaggAggIdIfIndexTable.setStatus('current')
alclnkaggAggIdIfIndexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-LAG-MIB", "alclnkaggIfIndex"))
if mibBuilder.loadTexts: alclnkaggAggIdIfIndexEntry.setStatus('current')
alclnkaggIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: alclnkaggIfIndex.setStatus('current')
alclnkaggAggId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkaggAggId.setStatus('current')
alclnkaggAggIdAccountTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 4), )
if mibBuilder.loadTexts: alclnkaggAggIdAccountTable.setStatus('current')
alclnkaggAggIdAccountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-LAG-MIB", "alclnkaggAggIndex"))
if mibBuilder.loadTexts: alclnkaggAggIdAccountEntry.setStatus('current')
alcRxUndersize = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcRxUndersize.setStatus('current')
alcTxUndersize = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcTxUndersize.setStatus('current')
alcRxOversize = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcRxOversize.setStatus('current')
alcTxOversize = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcTxOversize.setStatus('current')
alcRxPackets64 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcRxPackets64.setStatus('current')
alcRxPackets127 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcRxPackets127.setStatus('current')
alcRxPackets255 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcRxPackets255.setStatus('current')
alcRxPackets511 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcRxPackets511.setStatus('current')
alcRxPackets1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 4, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcRxPackets1023.setStatus('current')
alcRxPackets1518 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 4, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcRxPackets1518.setStatus('current')
alcRxPackets4095 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcRxPackets4095.setStatus('current')
alcRxPackets9216 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 4, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcRxPackets9216.setStatus('current')
alcRxJabberFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 4, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcRxJabberFrames.setStatus('current')
alclnkaggAggIdCounterTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 5), )
if mibBuilder.loadTexts: alclnkaggAggIdCounterTable.setStatus('current')
alclnkaggAggIdCounterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 5, 1), ).setIndexNames((0, "ALCATEL-IND1-LAG-MIB", "alclnkaggAggIndex"))
if mibBuilder.loadTexts: alclnkaggAggIdCounterEntry.setStatus('current')
alcInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcInOctets.setStatus('current')
alcOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcOutOctets.setStatus('current')
alcInUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcInUcastPkts.setStatus('current')
alcOutUcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcOutUcastPkts.setStatus('current')
alcInMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcInMcastPkts.setStatus('current')
alcOutMcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcOutMcastPkts.setStatus('current')
alcInBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcInBcastPkts.setStatus('current')
alcOutBcastPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcOutBcastPkts.setStatus('current')
alcInPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcInPauseFrames.setStatus('current')
alcOutPauseFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 5, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcOutPauseFrames.setStatus('current')
alclnkaggAggIdCounterErrTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 6), )
if mibBuilder.loadTexts: alclnkaggAggIdCounterErrTable.setStatus('current')
alclnkaggAggIdCounterErrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 6, 1), ).setIndexNames((0, "ALCATEL-IND1-LAG-MIB", "alclnkaggAggIndex"))
if mibBuilder.loadTexts: alclnkaggAggIdCounterErrEntry.setStatus('current')
alcAlignmentsErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 6, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcAlignmentsErrors.setStatus('current')
alcFCSErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcFCSErrors.setStatus('current')
alcIfInErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcIfInErrors.setStatus('current')
alcIfOutErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcIfOutErrors.setStatus('current')
alclnkaggAggIdTrafficTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 7), )
if mibBuilder.loadTexts: alclnkaggAggIdTrafficTable.setStatus('current')
alclnkaggAggIdTrafficEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 7, 1), ).setIndexNames((0, "ALCATEL-IND1-LAG-MIB", "alclnkaggAggIndex"))
if mibBuilder.loadTexts: alclnkaggAggIdTrafficEntry.setStatus('current')
alcInputPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 7, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcInputPackets.setStatus('current')
alcInputBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 7, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcInputBytes.setStatus('current')
alcOutputPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 7, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcOutputPackets.setStatus('current')
alcOutputBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 1, 7, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alcOutputBytes.setStatus('current')
alcatelIND1LAGMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 2))
if mibBuilder.loadTexts: alcatelIND1LAGMIBConformance.setStatus('current')
alcatelIND1LAGMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1LAGMIBGroups.setStatus('current')
alcatelIND1LAGMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1LAGMIBCompliances.setStatus('current')
alclnkaggAggGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-LAG-MIB", "alclnkaggAggActorSystemID"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPartnerAdminKey"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggActorSystemPriority"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggActorAdminKey"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggMACAddress"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggActorOperKey"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPartnerSystemID"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPartnerSystemPriority"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPartnerOperKey"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggSize"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggNumber"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggDescr"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggName"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggLacpType"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggAdminState"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggOperState"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggNbrSelectedPorts"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggNbrAttachedPorts"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPrimaryPortIndex"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPrimaryPortPosition"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggRowStatus"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggMcLagType"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggId"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortSelectionHash"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggWTRTimer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alclnkaggAggGroup = alclnkaggAggGroup.setStatus('current')
alclnkaggAggPortListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortListPorts"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alclnkaggAggPortListGroup = alclnkaggAggPortListGroup.setStatus('current')
alclnkaggAggPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortActorSystemPriority"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortActorSystemID"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortActorAdminKey"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortActorOperKey"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortPartnerAdminSystemPriority"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortPartnerOperSystemPriority"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortPartnerAdminSystemID"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortPartnerOperSystemID"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortPartnerAdminKey"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortPartnerOperKey"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortSelectedAggID"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortAttachedAggID"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortActorPort"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortActorPortPriority"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortPartnerAdminPort"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortPartnerOperPort"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortPartnerAdminPortPriority"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortPartnerOperPortPriority"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortActorAdminState"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortActorOperState"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortPartnerAdminState"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortPartnerOperState"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortSelectedAggNumber"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortGlobalPortNumber"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortAdminState"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortOperState"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortState"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortLinkState"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortPrimary"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortLacpType"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortRowStatus"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortMcLagType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alclnkaggAggPortGroup = alclnkaggAggPortGroup.setStatus('current')
alclnkaggAggPortStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortStatsLACPDUsRx"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortStatsMarkerPDUsRx"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortStatsMarkerResponsePDUsRx"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortStatsUnknownRx"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortStatsIllegalRx"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortStatsLACPDUsTx"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortStatsMarkerPDUsTx"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortStatsMarkerResponsePDUsTx"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alclnkaggAggPortStatsGroup = alclnkaggAggPortStatsGroup.setStatus('current')
alclnkaggAggPortDebugGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortDebugRxState"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortDebugLastRxTime"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortDebugMuxState"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortDebugMuxReason"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortDebugActorChurnState"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortDebugPartnerChurnState"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortDebugActorChurnCount"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortDebugPartnerChurnCount"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortDebugActorSyncTransitionCount"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortDebugPartnerSyncTransitionCount"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortDebugActorChangeCount"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortDebugPartnerChangeCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alclnkaggAggPortDebugGroup = alclnkaggAggPortDebugGroup.setStatus('current')
alclnkaggTablesLastChangedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-LAG-MIB", "alclnkaggTablesLastChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alclnkaggTablesLastChangedGroup = alclnkaggTablesLastChangedGroup.setStatus('current')
alclnkaggAggCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-LAG-MIB", "alclnkaggAggGroup"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortGroup"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggTablesLastChangedGroup"), ("ALCATEL-IND1-LAG-MIB", "lnkaggNotificationVarsGroup"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortListGroup"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortStatsGroup"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggPortDebugGroup"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggIdAccountGroup"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggIdCounterGroup"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggIdCounterErrGroup"), ("ALCATEL-IND1-LAG-MIB", "alclnkaggAggIdTrafficGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alclnkaggAggCompliance = alclnkaggAggCompliance.setStatus('current')
lnkaggNotificationVarsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 2, 1, 7)).setObjects(("ALCATEL-IND1-LAG-MIB", "traplnkaggAggId"), ("ALCATEL-IND1-LAG-MIB", "traplnkaggPortIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lnkaggNotificationVarsGroup = lnkaggNotificationVarsGroup.setStatus('current')
lnkaggTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 2, 1, 8)).setObjects(("ALCATEL-IND1-LAG-MIB", "lnkaggAggUp"), ("ALCATEL-IND1-LAG-MIB", "lnkaggAggDown"), ("ALCATEL-IND1-LAG-MIB", "lnkaggPortJoin"), ("ALCATEL-IND1-LAG-MIB", "lnkaggPortLeave"), ("ALCATEL-IND1-LAG-MIB", "lnkaggPortRemove"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    lnkaggTrapsGroup = lnkaggTrapsGroup.setStatus('current')
lnkaggNotificationVars = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 4))
traplnkaggAggId = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: traplnkaggAggId.setStatus('current')
traplnkaggPortIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: traplnkaggPortIfIndex.setStatus('current')
lnkaggAggUp = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 0, 1)).setObjects(("ALCATEL-IND1-LAG-MIB", "traplnkaggAggId"), ("ALCATEL-IND1-LAG-MIB", "traplnkaggPortIfIndex"))
if mibBuilder.loadTexts: lnkaggAggUp.setStatus('current')
lnkaggAggDown = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 0, 2)).setObjects(("ALCATEL-IND1-LAG-MIB", "traplnkaggAggId"), ("ALCATEL-IND1-LAG-MIB", "traplnkaggPortIfIndex"))
if mibBuilder.loadTexts: lnkaggAggDown.setStatus('current')
lnkaggPortJoin = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 0, 3)).setObjects(("ALCATEL-IND1-LAG-MIB", "traplnkaggAggId"), ("ALCATEL-IND1-LAG-MIB", "traplnkaggPortIfIndex"))
if mibBuilder.loadTexts: lnkaggPortJoin.setStatus('current')
lnkaggPortLeave = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 0, 4)).setObjects(("ALCATEL-IND1-LAG-MIB", "traplnkaggAggId"), ("ALCATEL-IND1-LAG-MIB", "traplnkaggPortIfIndex"))
if mibBuilder.loadTexts: lnkaggPortLeave.setStatus('current')
lnkaggPortRemove = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 0, 5)).setObjects(("ALCATEL-IND1-LAG-MIB", "traplnkaggAggId"), ("ALCATEL-IND1-LAG-MIB", "traplnkaggPortIfIndex"))
if mibBuilder.loadTexts: lnkaggPortRemove.setStatus('deprecated')
alclnkaggAggConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 5))
alclnkAggLocalRangeOperMin = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkAggLocalRangeOperMin.setStatus('current')
alclnkAggLocalRangeOperMax = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 127)).clone(127)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkAggLocalRangeOperMax.setStatus('current')
alclnkAggLocalRangeConfiguredMin = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alclnkAggLocalRangeConfiguredMin.setStatus('current')
alclnkAggLocalRangeConfiguredMax = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 5, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 127)).clone(127)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alclnkAggLocalRangeConfiguredMax.setStatus('current')
alclnkAggPeerRangeOperMin = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 5, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 127)).clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkAggPeerRangeOperMin.setStatus('current')
alclnkAggPeerRangeOperMax = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 5, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 127)).clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkAggPeerRangeOperMax.setStatus('current')
alclnkAggPeerRangeConfiguredMin = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 5, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 127)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alclnkAggPeerRangeConfiguredMin.setStatus('current')
alclnkAggPeerRangeConfiguredMax = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 5, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 127)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alclnkAggPeerRangeConfiguredMax.setStatus('current')
alclnkAggMcLagRangeOperMin = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 5, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 127)).clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkAggMcLagRangeOperMin.setStatus('current')
alclnkAggMcLagRangeOperMax = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 5, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 127)).clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alclnkAggMcLagRangeOperMax.setStatus('current')
alclnkAggMcLagRangeConfiguredMin = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 5, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 127)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alclnkAggMcLagRangeConfiguredMin.setStatus('current')
alclnkAggMcLagRangeConfiguredMax = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 1, 5, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 127)).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alclnkAggMcLagRangeConfiguredMax.setStatus('current')
alclnkaggAggConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 2, 1, 9)).setObjects(("ALCATEL-IND1-LAG-MIB", "alclnkAggLocalRangeOperMin"), ("ALCATEL-IND1-LAG-MIB", "alclnkAggLocalRangeOperMax"), ("ALCATEL-IND1-LAG-MIB", "alclnkAggLocalRangeConfiguredMin"), ("ALCATEL-IND1-LAG-MIB", "alclnkAggLocalRangeConfiguredMax"), ("ALCATEL-IND1-LAG-MIB", "alclnkAggPeerRangeOperMin"), ("ALCATEL-IND1-LAG-MIB", "alclnkAggPeerRangeOperMax"), ("ALCATEL-IND1-LAG-MIB", "alclnkAggPeerRangeConfiguredMin"), ("ALCATEL-IND1-LAG-MIB", "alclnkAggPeerRangeConfiguredMax"), ("ALCATEL-IND1-LAG-MIB", "alclnkAggMcLagRangeOperMin"), ("ALCATEL-IND1-LAG-MIB", "alclnkAggMcLagRangeOperMax"), ("ALCATEL-IND1-LAG-MIB", "alclnkAggMcLagRangeConfiguredMin"), ("ALCATEL-IND1-LAG-MIB", "alclnkAggMcLagRangeConfiguredMax"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alclnkaggAggConfigGroup = alclnkaggAggConfigGroup.setStatus('current')
alclnkaggAggIdAccountGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 2, 1, 10)).setObjects(("ALCATEL-IND1-LAG-MIB", "alcRxUndersize"), ("ALCATEL-IND1-LAG-MIB", "alcTxUndersize"), ("ALCATEL-IND1-LAG-MIB", "alcRxOversize"), ("ALCATEL-IND1-LAG-MIB", "alcTxOversize"), ("ALCATEL-IND1-LAG-MIB", "alcRxPackets64"), ("ALCATEL-IND1-LAG-MIB", "alcRxPackets127"), ("ALCATEL-IND1-LAG-MIB", "alcRxPackets255"), ("ALCATEL-IND1-LAG-MIB", "alcRxPackets511"), ("ALCATEL-IND1-LAG-MIB", "alcRxPackets1023"), ("ALCATEL-IND1-LAG-MIB", "alcRxPackets1518"), ("ALCATEL-IND1-LAG-MIB", "alcRxPackets4095"), ("ALCATEL-IND1-LAG-MIB", "alcRxPackets9216"), ("ALCATEL-IND1-LAG-MIB", "alcRxJabberFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alclnkaggAggIdAccountGroup = alclnkaggAggIdAccountGroup.setStatus('current')
alclnkaggAggIdCounterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 2, 1, 11)).setObjects(("ALCATEL-IND1-LAG-MIB", "alcInOctets"), ("ALCATEL-IND1-LAG-MIB", "alcOutOctets"), ("ALCATEL-IND1-LAG-MIB", "alcInUcastPkts"), ("ALCATEL-IND1-LAG-MIB", "alcOutUcastPkts"), ("ALCATEL-IND1-LAG-MIB", "alcInMcastPkts"), ("ALCATEL-IND1-LAG-MIB", "alcOutMcastPkts"), ("ALCATEL-IND1-LAG-MIB", "alcInBcastPkts"), ("ALCATEL-IND1-LAG-MIB", "alcOutBcastPkts"), ("ALCATEL-IND1-LAG-MIB", "alcInPauseFrames"), ("ALCATEL-IND1-LAG-MIB", "alcOutPauseFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alclnkaggAggIdCounterGroup = alclnkaggAggIdCounterGroup.setStatus('current')
alclnkaggAggIdCounterErrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 2, 1, 12)).setObjects(("ALCATEL-IND1-LAG-MIB", "alcAlignmentsErrors"), ("ALCATEL-IND1-LAG-MIB", "alcFCSErrors"), ("ALCATEL-IND1-LAG-MIB", "alcIfInErrors"), ("ALCATEL-IND1-LAG-MIB", "alcIfOutErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alclnkaggAggIdCounterErrGroup = alclnkaggAggIdCounterErrGroup.setStatus('current')
alclnkaggAggIdTrafficGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 13, 1, 2, 1, 13)).setObjects(("ALCATEL-IND1-LAG-MIB", "alcInputPackets"), ("ALCATEL-IND1-LAG-MIB", "alcInputBytes"), ("ALCATEL-IND1-LAG-MIB", "alcOutputPackets"), ("ALCATEL-IND1-LAG-MIB", "alcOutputBytes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alclnkaggAggIdTrafficGroup = alclnkaggAggIdTrafficGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-LAG-MIB", alclnkaggAggActorOperKey=alclnkaggAggActorOperKey, alcOutputPackets=alcOutputPackets, alclnkaggAggIdCounterErrTable=alclnkaggAggIdCounterErrTable, lnkaggNotificationVarsGroup=lnkaggNotificationVarsGroup, alclnkaggAggPortPartnerOperState=alclnkaggAggPortPartnerOperState, alclnkaggAggPortListEntry=alclnkaggAggPortListEntry, alclnkaggAggPartnerSystemPriority=alclnkaggAggPartnerSystemPriority, alclnkAggMcLagRangeConfiguredMax=alclnkAggMcLagRangeConfiguredMax, alclnkAggMcLagRangeOperMin=alclnkAggMcLagRangeOperMin, alclnkaggAggMACAddress=alclnkaggAggMACAddress, alcFCSErrors=alcFCSErrors, alclnkaggAggWTRTimer=alclnkaggAggWTRTimer, alcatelIND1LAGMIBCompliances=alcatelIND1LAGMIBCompliances, alclnkaggAggName=alclnkaggAggName, alclnkaggAggPortSelectionHash=alclnkaggAggPortSelectionHash, alclnkaggAggPortPartnerOperPort=alclnkaggAggPortPartnerOperPort, alclnkaggAggPort=alclnkaggAggPort, alclnkaggAggPortTable=alclnkaggAggPortTable, alclnkAggPeerRangeOperMax=alclnkAggPeerRangeOperMax, traplnkaggAggId=traplnkaggAggId, alclnkaggAggPortActorSystemPriority=alclnkaggAggPortActorSystemPriority, alcOutputBytes=alcOutputBytes, alclnkAggPeerRangeConfiguredMin=alclnkAggPeerRangeConfiguredMin, alclnkaggAggPortStatsMarkerResponsePDUsRx=alclnkaggAggPortStatsMarkerResponsePDUsRx, alclnkaggTablesLastChanged=alclnkaggTablesLastChanged, alclnkaggAggActorAdminKey=alclnkaggAggActorAdminKey, alcRxPackets9216=alcRxPackets9216, alclnkaggAggPartnerSystemID=alclnkaggAggPartnerSystemID, alclnkaggAggIdCounterEntry=alclnkaggAggIdCounterEntry, alclnkaggAggPortRowStatus=alclnkaggAggPortRowStatus, alcInBcastPkts=alcInBcastPkts, alcOutMcastPkts=alcOutMcastPkts, alcatelIND1LAGMIBNotifications=alcatelIND1LAGMIBNotifications, alclnkaggAggTable=alclnkaggAggTable, alcRxPackets127=alcRxPackets127, alclnkaggTablesLastChangedGroup=alclnkaggTablesLastChangedGroup, alcTxUndersize=alcTxUndersize, lnkaggPortLeave=lnkaggPortLeave, alclnkaggAggPortPartnerAdminSystemPriority=alclnkaggAggPortPartnerAdminSystemPriority, alclnkaggAggIdAccountGroup=alclnkaggAggIdAccountGroup, traplnkaggPortIfIndex=traplnkaggPortIfIndex, alcInputPackets=alcInputPackets, alclnkaggAggIdIfIndexEntry=alclnkaggAggIdIfIndexEntry, alclnkaggAggPortDebugEntry=alclnkaggAggPortDebugEntry, alclnkaggIfIndex=alclnkaggIfIndex, alclnkaggAggIdAccountTable=alclnkaggAggIdAccountTable, alclnkaggAggPortActorOperState=alclnkaggAggPortActorOperState, alclnkaggAggPortActorAdminKey=alclnkaggAggPortActorAdminKey, alclnkaggAggNumber=alclnkaggAggNumber, alclnkaggAggPortActorOperKey=alclnkaggAggPortActorOperKey, PYSNMP_MODULE_ID=alcatelIND1LAGMIB, alclnkaggAggPortOperState=alclnkaggAggPortOperState, alclnkaggAggPortPrimary=alclnkaggAggPortPrimary, alcInOctets=alcInOctets, alclnkaggAggGroup=alclnkaggAggGroup, alclnkaggAggPortDebugMuxState=alclnkaggAggPortDebugMuxState, alclnkaggAggPortGlobalPortNumber=alclnkaggAggPortGlobalPortNumber, lnkaggPortJoin=lnkaggPortJoin, alclnkaggAggPortDebugPartnerChangeCount=alclnkaggAggPortDebugPartnerChangeCount, alclnkaggAggPortListGroup=alclnkaggAggPortListGroup, alclnkaggAggPortStatsMarkerResponsePDUsTx=alclnkaggAggPortStatsMarkerResponsePDUsTx, alclnkAggLocalRangeConfiguredMin=alclnkAggLocalRangeConfiguredMin, alcRxPackets1518=alcRxPackets1518, alclnkaggAggEntry=alclnkaggAggEntry, alclnkaggAggIdCounterTable=alclnkaggAggIdCounterTable, alclnkaggAggIdCounterErrGroup=alclnkaggAggIdCounterErrGroup, alclnkaggAggPortPartnerAdminKey=alclnkaggAggPortPartnerAdminKey, alcRxPackets511=alcRxPackets511, alclnkaggAggIdTrafficEntry=alclnkaggAggIdTrafficEntry, alclnkaggAggCompliance=alclnkaggAggCompliance, alclnkaggAggPortSelectedAggID=alclnkaggAggPortSelectedAggID, alcInPauseFrames=alcInPauseFrames, McLagType=McLagType, alclnkaggAgg=alclnkaggAgg, alclnkAggMcLagRangeOperMax=alclnkAggMcLagRangeOperMax, alclnkaggAggPartnerAdminKey=alclnkaggAggPartnerAdminKey, alclnkaggAggPortDebugRxState=alclnkaggAggPortDebugRxState, alcatelIND1LAGMIBObjects=alcatelIND1LAGMIBObjects, alcRxUndersize=alcRxUndersize, alcRxPackets255=alcRxPackets255, alcIfOutErrors=alcIfOutErrors, alcTxOversize=alcTxOversize, alclnkaggAggPortDebugPartnerChurnState=alclnkaggAggPortDebugPartnerChurnState, alclnkAggLocalRangeConfiguredMax=alclnkAggLocalRangeConfiguredMax, alclnkaggAggPortActorAdminState=alclnkaggAggPortActorAdminState, alclnkaggAggPortActorPort=alclnkaggAggPortActorPort, alclnkaggAggDescr=alclnkaggAggDescr, alclnkaggAggIndex=alclnkaggAggIndex, lnkaggTrapsGroup=lnkaggTrapsGroup, alclnkaggAggActorSystemID=alclnkaggAggActorSystemID, alclnkaggAggPortPartnerAdminPortPriority=alclnkaggAggPortPartnerAdminPortPriority, alclnkaggAggPortActorPortPriority=alclnkaggAggPortActorPortPriority, lnkaggAggDown=lnkaggAggDown, LacpType=LacpType, alclnkaggAggIdIfIndexTable=alclnkaggAggIdIfIndexTable, alcIfInErrors=alcIfInErrors, alclnkaggAggLacpType=alclnkaggAggLacpType, alclnkaggAggIdTrafficTable=alclnkaggAggIdTrafficTable, alclnkaggAggPrimaryPortIndex=alclnkaggAggPrimaryPortIndex, alclnkaggAggPortDebugTable=alclnkaggAggPortDebugTable, alclnkaggAggActorSystemPriority=alclnkaggAggActorSystemPriority, alclnkAggLocalRangeOperMin=alclnkAggLocalRangeOperMin, alclnkaggAggPortPartnerOperPortPriority=alclnkaggAggPortPartnerOperPortPriority, alclnkaggAggNbrAttachedPorts=alclnkaggAggNbrAttachedPorts, alclnkaggAggPortStatsTable=alclnkaggAggPortStatsTable, lnkaggAggUp=lnkaggAggUp, alclnkaggAggPortStatsLACPDUsTx=alclnkaggAggPortStatsLACPDUsTx, alclnkaggAggPortLacpType=alclnkaggAggPortLacpType, alclnkaggAggPortDebugActorSyncTransitionCount=alclnkaggAggPortDebugActorSyncTransitionCount, alcatelIND1LAGMIBConformance=alcatelIND1LAGMIBConformance, alclnkaggAggPortIndex=alclnkaggAggPortIndex, alclnkaggAggConfig=alclnkaggAggConfig, alclnkaggAggPortPartnerAdminSystemID=alclnkaggAggPortPartnerAdminSystemID, alclnkaggAggId=alclnkaggAggId, alcatelIND1LAGMIBGroups=alcatelIND1LAGMIBGroups, alclnkaggAggAdminState=alclnkaggAggAdminState, alclnkaggAggPortListTable=alclnkaggAggPortListTable, alclnkAggPeerRangeConfiguredMax=alclnkAggPeerRangeConfiguredMax, alclnkaggAggIdCounterErrEntry=alclnkaggAggIdCounterErrEntry, alclnkAggLocalRangeOperMax=alclnkAggLocalRangeOperMax, alclnkaggAggPortDebugPartnerSyncTransitionCount=alclnkaggAggPortDebugPartnerSyncTransitionCount, alclnkaggAggPortState=alclnkaggAggPortState, alcRxPackets4095=alcRxPackets4095, alcRxOversize=alcRxOversize, alclnkaggAggPortPartnerOperSystemID=alclnkaggAggPortPartnerOperSystemID, alclnkAggPeerRangeOperMin=alclnkAggPeerRangeOperMin, alclnkaggAggPortDebugActorChurnCount=alclnkaggAggPortDebugActorChurnCount, alclnkaggAggIdAccountEntry=alclnkaggAggIdAccountEntry, alcInUcastPkts=alcInUcastPkts, alcOutPauseFrames=alcOutPauseFrames, alclnkaggAggOperState=alclnkaggAggOperState, alclnkaggAggPrimaryPortPosition=alclnkaggAggPrimaryPortPosition, alclnkaggAggPortPartnerOperKey=alclnkaggAggPortPartnerOperKey, alclnkaggAggIdCounterGroup=alclnkaggAggIdCounterGroup, alcInMcastPkts=alcInMcastPkts, alclnkaggAggPortStatsGroup=alclnkaggAggPortStatsGroup, alcAlignmentsErrors=alcAlignmentsErrors, alclnkaggAggRowStatus=alclnkaggAggRowStatus, alclnkaggAggSize=alclnkaggAggSize, alclnkaggAggPortSelectedAggNumber=alclnkaggAggPortSelectedAggNumber, alcOutBcastPkts=alcOutBcastPkts, alcatelIND1LAGMIB=alcatelIND1LAGMIB, alclnkAggMcLagRangeConfiguredMin=alclnkAggMcLagRangeConfiguredMin, alclnkaggAggPortActorSystemID=alclnkaggAggPortActorSystemID, alclnkaggAggPortDebugMuxReason=alclnkaggAggPortDebugMuxReason, alcRxPackets1023=alcRxPackets1023, alclnkaggAggConfigGroup=alclnkaggAggConfigGroup, alcRxPackets64=alcRxPackets64, alclnkaggAggPortDebugGroup=alclnkaggAggPortDebugGroup, alclnkaggAggPartnerOperKey=alclnkaggAggPartnerOperKey, alclnkaggAggPortPartnerAdminState=alclnkaggAggPortPartnerAdminState, alclnkaggAggPortStatsEntry=alclnkaggAggPortStatsEntry, alclnkaggAggPortListPorts=alclnkaggAggPortListPorts, alclnkaggAggPortStatsIllegalRx=alclnkaggAggPortStatsIllegalRx, lnkaggNotificationVars=lnkaggNotificationVars, alclnkaggAggPortStatsLACPDUsRx=alclnkaggAggPortStatsLACPDUsRx, alcRxJabberFrames=alcRxJabberFrames, alcOutOctets=alcOutOctets, alclnkaggAggPortDebugActorChurnState=alclnkaggAggPortDebugActorChurnState, alclnkaggAggPortStatsMarkerPDUsTx=alclnkaggAggPortStatsMarkerPDUsTx, alclnkaggAggPortDebugPartnerChurnCount=alclnkaggAggPortDebugPartnerChurnCount, alclnkaggAggPortMcLagType=alclnkaggAggPortMcLagType, alclnkaggAggPortStatsMarkerPDUsRx=alclnkaggAggPortStatsMarkerPDUsRx, alcInputBytes=alcInputBytes, alclnkaggAggPortDebugLastRxTime=alclnkaggAggPortDebugLastRxTime, alclnkaggAggPortPartnerOperSystemPriority=alclnkaggAggPortPartnerOperSystemPriority, alclnkaggAggPortDebugActorChangeCount=alclnkaggAggPortDebugActorChangeCount, lnkaggPortRemove=lnkaggPortRemove, alclnkaggAggPortGroup=alclnkaggAggPortGroup, alclnkaggAggNbrSelectedPorts=alclnkaggAggNbrSelectedPorts, alclnkaggAggPortLinkState=alclnkaggAggPortLinkState, alclnkaggAggPortAttachedAggID=alclnkaggAggPortAttachedAggID, alclnkaggAggPortStatsUnknownRx=alclnkaggAggPortStatsUnknownRx, alclnkaggAggPortPartnerAdminPort=alclnkaggAggPortPartnerAdminPort, alclnkaggAggPortAdminState=alclnkaggAggPortAdminState, alclnkaggAggPortEntry=alclnkaggAggPortEntry, alclnkaggAggIdTrafficGroup=alclnkaggAggIdTrafficGroup, alclnkaggAggMcLagType=alclnkaggAggMcLagType, alcOutUcastPkts=alcOutUcastPkts)
