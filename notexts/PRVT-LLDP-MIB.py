#
# PySNMP MIB module PRVT-LLDP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-LLDP-MIB
# Produced by pysmi-1.1.3 at Thu Dec  9 15:31:36 2021
# On host fv-az39-899 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
switch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "switch")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Gauge32, Counter32, MibIdentifier, ModuleIdentity, Counter64, Unsigned32, Bits, Integer32, NotificationType, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Gauge32", "Counter32", "MibIdentifier", "ModuleIdentity", "Counter64", "Unsigned32", "Bits", "Integer32", "NotificationType", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ObjectIdentity")
RowStatus, TruthValue, DisplayString, TextualConvention, PhysAddress = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "DisplayString", "TextualConvention", "PhysAddress")
prvtLldpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 5, 145))
prvtLldpMIB.setRevisions(('2009-07-28 00:00',))
if mibBuilder.loadTexts: prvtLldpMIB.setLastUpdated('200907280000Z')
if mibBuilder.loadTexts: prvtLldpMIB.setOrganization('BATM Advanced Communication')
prvtlldpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 0))
prvtLldpObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1))
prvtLldpEnable = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLldpEnable.setStatus('current')
prvtLldpReinitDelay = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLldpReinitDelay.setStatus('current')
prvtLldpSnmpNotifyInterval = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLldpSnmpNotifyInterval.setStatus('current')
prvtLldpTransmitDelay = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLldpTransmitDelay.setStatus('current')
prvtLldpTransmitHold = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLldpTransmitHold.setStatus('current')
prvtLldpTransmitInterval = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(5, 32768))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtLldpTransmitInterval.setStatus('current')
prvtLldpStatisticsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 7))
prvtLldpStatsRemTablesLastChange = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 7, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpStatsRemTablesLastChange.setStatus('current')
prvtLldpStatsRemTablesInserts = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 7, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpStatsRemTablesInserts.setStatus('current')
prvtLldpStatsRemTablesDeletes = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 7, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpStatsRemTablesDeletes.setStatus('current')
prvtLldpStatsRemTablesDrops = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 7, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpStatsRemTablesDrops.setStatus('current')
prvtLldpStatsRemTablesAgeouts = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 7, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpStatsRemTablesAgeouts.setStatus('current')
prvtLldpStatsTxPortTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 8), )
if mibBuilder.loadTexts: prvtLldpStatsTxPortTable.setStatus('current')
prvtLldpStatsTxPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 8, 1), ).setIndexNames((0, "PRVT-LLDP-MIB", "prvtLldpStatsTxIfNum"))
if mibBuilder.loadTexts: prvtLldpStatsTxPortEntry.setStatus('current')
prvtLldpStatsTxIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 8, 1, 1), OctetString())
if mibBuilder.loadTexts: prvtLldpStatsTxIfNum.setStatus('current')
prvtLldpStatsTxPortFramesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 8, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpStatsTxPortFramesTotal.setStatus('current')
prvtLldpStatsTxPortFramesMalformed = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 8, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpStatsTxPortFramesMalformed.setStatus('current')
prvtLldpStatsRxPortTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 9), )
if mibBuilder.loadTexts: prvtLldpStatsRxPortTable.setStatus('current')
prvtLldpStatsRxPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 9, 1), ).setIndexNames((0, "PRVT-LLDP-MIB", "prvtLldpStatsRxIfNum"))
if mibBuilder.loadTexts: prvtLldpStatsRxPortEntry.setStatus('current')
prvtLldpStatsRxIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 9, 1, 1), OctetString())
if mibBuilder.loadTexts: prvtLldpStatsRxIfNum.setStatus('current')
prvtLldpStatsRxPortFramesDiscardedTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 9, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpStatsRxPortFramesDiscardedTotal.setStatus('current')
prvtLldpStatsRxPortFramesErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 9, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpStatsRxPortFramesErrors.setStatus('current')
prvtLldpStatsRxPortFramesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 9, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpStatsRxPortFramesTotal.setStatus('current')
prvtLldpStatsRxPortTLVsDiscardedTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 9, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpStatsRxPortTLVsDiscardedTotal.setStatus('current')
prvtLldpStatsRxPortTLVsUnrecognizedTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 9, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpStatsRxPortTLVsUnrecognizedTotal.setStatus('current')
prvtLldpStatsRxPortAgeoutsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 9, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpStatsRxPortAgeoutsTotal.setStatus('current')
prvtLldpLocalSystemDataObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 10))
prvtLldpLocChassisIdSubtype = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 10, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("chassisComponent", 1), ("interfaceAlias", 2), ("portComponent", 3), ("macAddress", 4), ("networkAddress", 5), ("interfaceName", 6), ("local", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpLocChassisIdSubtype.setStatus('current')
prvtLldpLocChassisId = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 10, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpLocChassisId.setStatus('current')
prvtLldpLocSysName = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 10, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpLocSysName.setStatus('current')
prvtLldpLocSysDesc = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 10, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpLocSysDesc.setStatus('current')
prvtLldpLocSysCapSupported = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 10, 5), Bits().clone(namedValues=NamedValues(("other", 0), ("bridge", 2), ("wlanAccessPoint", 3), ("router", 4), ("telephone", 5), ("docsisCableDevice", 6), ("stationOnly", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpLocSysCapSupported.setStatus('current')
prvtLldpLocSysCapEnabled = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 10, 6), Bits().clone(namedValues=NamedValues(("other", 0), ("bridge", 2), ("wlanAccessPoint", 3), ("router", 4), ("telephone", 5), ("docsisCableDevice", 6), ("stationOnly", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpLocSysCapEnabled.setStatus('current')
prvtLldpLocManAddrTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 11), )
if mibBuilder.loadTexts: prvtLldpLocManAddrTable.setStatus('current')
prvtLldpLocManAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 11, 1), ).setIndexNames((0, "PRVT-LLDP-MIB", "prvtLldpLocManAddrSubtype"), (0, "PRVT-LLDP-MIB", "prvtLldpLocManAddress"))
if mibBuilder.loadTexts: prvtLldpLocManAddrEntry.setStatus('current')
prvtLldpLocManAddrSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 65535))).clone(namedValues=NamedValues(("other", 0), ("ipV4", 1), ("ipV6", 2), ("nsap", 3), ("hldc", 4), ("bbn1822", 5), ("all802", 6), ("e163", 7), ("e164", 8), ("f69", 9), ("x121", 10), ("ipx", 11), ("appletalk", 12), ("decnetIV", 13), ("banyanVines", 14), ("e164withNsap", 15), ("dns", 16), ("distinguishedname", 17), ("asnumber", 18), ("xtpoveripv4", 19), ("xtpoveripv6", 20), ("xtpnativemodextp", 21), ("reserved", 65535))))
if mibBuilder.loadTexts: prvtLldpLocManAddrSubtype.setStatus('current')
prvtLldpLocManAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 11, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: prvtLldpLocManAddress.setStatus('current')
prvtLldpLocManAddrLen = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpLocManAddrLen.setStatus('current')
prvtLldpLocManAddrIfSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("ifIndex", 2), ("systemPortNumber", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpLocManAddrIfSubtype.setStatus('current')
prvtLldpLocManAddrIfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 11, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpLocManAddrIfId.setStatus('current')
prvtLldpLocManAddrOID = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 11, 1, 6), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpLocManAddrOID.setStatus('current')
prvtLldpPortTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 12), )
if mibBuilder.loadTexts: prvtLldpPortTable.setStatus('current')
prvtLldpPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 12, 1), ).setIndexNames((0, "PRVT-LLDP-MIB", "prvtLldpCfgPortName"))
if mibBuilder.loadTexts: prvtLldpPortEntry.setStatus('current')
prvtLldpCfgPortName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 12, 1, 1), OctetString())
if mibBuilder.loadTexts: prvtLldpCfgPortName.setStatus('current')
prvtLldpCfgPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 12, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtLldpCfgPortRowStatus.setStatus('current')
prvtLldpCfgPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("txOnly", 1), ("rxOnly", 2), ("rxTx", 3), ("disabled", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtLldpCfgPortMode.setStatus('current')
prvtLldpCfgPortSnmpNotify = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 12, 1, 4), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtLldpCfgPortSnmpNotify.setStatus('current')
prvtLldpAdvBasicPortManAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 12, 1, 5), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtLldpAdvBasicPortManAddr.setStatus('current')
prvtLldpAdvBasicPortDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 12, 1, 6), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtLldpAdvBasicPortDescr.setStatus('current')
prvtLldpAdvBasicPortSysCap = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 12, 1, 7), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtLldpAdvBasicPortSysCap.setStatus('current')
prvtLldpAdvBasicPortSysDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 12, 1, 8), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtLldpAdvBasicPortSysDescr.setStatus('current')
prvtLldpAdvBasicPortSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 12, 1, 9), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtLldpAdvBasicPortSysName.setStatus('current')
prvtLldpDot1PortVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 12, 1, 10), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtLldpDot1PortVlanId.setStatus('current')
prvtLldpDot1PortProtoIdentity = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 12, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtLldpDot1PortProtoIdentity.setStatus('current')
prvtLldpDot1PortVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 12, 1, 12), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtLldpDot1PortVlanName.setStatus('current')
prvtLldpDot1PortProtoVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 12, 1, 13), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtLldpDot1PortProtoVlanId.setStatus('current')
prvtLldpDot3PortLAG = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 12, 1, 14), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtLldpDot3PortLAG.setStatus('current')
prvtLldpDot3PortMacPhy = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 12, 1, 15), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtLldpDot3PortMacPhy.setStatus('current')
prvtLldpDot3PortMaxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 12, 1, 16), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtLldpDot3PortMaxFrameSize.setStatus('current')
prvtLldpDot3PortPowerViaMdi = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 12, 1, 17), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtLldpDot3PortPowerViaMdi.setStatus('current')
prvtLldpRemDbPortTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 13), )
if mibBuilder.loadTexts: prvtLldpRemDbPortTable.setStatus('current')
prvtLldpRemDbPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 13, 1), ).setIndexNames((0, "PRVT-LLDP-MIB", "prvtLldpRemDbIfNum"))
if mibBuilder.loadTexts: prvtLldpRemDbPortEntry.setStatus('current')
prvtLldpRemDbIfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 13, 1, 1), OctetString())
if mibBuilder.loadTexts: prvtLldpRemDbIfNum.setStatus('current')
prvtLldpRemDbPortDataTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 13, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpRemDbPortDataTTL.setStatus('current')
prvtLldpRemDbPortDataAge = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 13, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpRemDbPortDataAge.setStatus('current')
prvtLldpRemDbPortChasIdSub = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("chassisComponent", 1), ("interfaceAlias", 2), ("portComponent", 3), ("macAddress", 4), ("networkAddress", 5), ("interfaceName", 6), ("local", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpRemDbPortChasIdSub.setStatus('current')
prvtLldpRemDbPortChasId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 13, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpRemDbPortChasId.setStatus('current')
prvtLldpRemDbPortIdSub = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("interfaceAlias", 1), ("portComponent", 2), ("macAddress", 3), ("networkAddress", 4), ("interfaceName", 5), ("agentCircuitId", 6), ("local", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpRemDbPortIdSub.setStatus('current')
prvtLldpRemDbPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 13, 1, 7), PhysAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpRemDbPortId.setStatus('current')
prvtLldpRemDbPortSysName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 13, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpRemDbPortSysName.setStatus('current')
prvtLldpRemDbPortSysDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 13, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpRemDbPortSysDescr.setStatus('current')
prvtLldpRemDbPortDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 13, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpRemDbPortDescr.setStatus('current')
prvtLldpRemDbPortSysCapSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 13, 1, 11), Bits().clone(namedValues=NamedValues(("other", 0), ("bridge", 2), ("wlanAccessPoint", 3), ("router", 4), ("telephone", 5), ("docsisCableDevice", 6), ("stationOnly", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpRemDbPortSysCapSupported.setStatus('current')
prvtLldpRemDbPortSysCapEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 13, 1, 12), Bits().clone(namedValues=NamedValues(("other", 0), ("bridge", 2), ("wlanAccessPoint", 3), ("router", 4), ("telephone", 5), ("docsisCableDevice", 6), ("stationOnly", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpRemDbPortSysCapEnabled.setStatus('current')
prvtLldpRemDbPortManAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 1, 13, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLldpRemDbPortManAddr.setStatus('current')
lldpNewRemoteInfo = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 5, 145, 0, 1)).setObjects(("PRVT-LLDP-MIB", "prvtLldpStatsRemTablesInserts"), ("PRVT-LLDP-MIB", "prvtLldpStatsRemTablesDeletes"), ("PRVT-LLDP-MIB", "prvtLldpStatsRemTablesDrops"), ("PRVT-LLDP-MIB", "prvtLldpStatsRemTablesAgeouts"))
if mibBuilder.loadTexts: lldpNewRemoteInfo.setStatus('current')
mibBuilder.exportSymbols("PRVT-LLDP-MIB", prvtLldpStatsTxPortFramesTotal=prvtLldpStatsTxPortFramesTotal, prvtLldpPortEntry=prvtLldpPortEntry, prvtLldpDot3PortPowerViaMdi=prvtLldpDot3PortPowerViaMdi, prvtLldpLocalSystemDataObjects=prvtLldpLocalSystemDataObjects, prvtLldpAdvBasicPortSysName=prvtLldpAdvBasicPortSysName, prvtLldpStatsRxPortFramesTotal=prvtLldpStatsRxPortFramesTotal, prvtLldpRemDbPortIdSub=prvtLldpRemDbPortIdSub, prvtLldpSnmpNotifyInterval=prvtLldpSnmpNotifyInterval, prvtLldpCfgPortSnmpNotify=prvtLldpCfgPortSnmpNotify, prvtLldpRemDbPortId=prvtLldpRemDbPortId, prvtLldpRemDbPortDataAge=prvtLldpRemDbPortDataAge, prvtLldpStatsRxPortAgeoutsTotal=prvtLldpStatsRxPortAgeoutsTotal, prvtLldpAdvBasicPortSysCap=prvtLldpAdvBasicPortSysCap, prvtLldpRemDbPortSysName=prvtLldpRemDbPortSysName, prvtLldpCfgPortRowStatus=prvtLldpCfgPortRowStatus, prvtLldpLocManAddrOID=prvtLldpLocManAddrOID, prvtLldpRemDbPortSysCapSupported=prvtLldpRemDbPortSysCapSupported, prvtLldpAdvBasicPortManAddr=prvtLldpAdvBasicPortManAddr, prvtLldpLocManAddrEntry=prvtLldpLocManAddrEntry, prvtLldpStatsTxPortFramesMalformed=prvtLldpStatsTxPortFramesMalformed, prvtLldpLocManAddrTable=prvtLldpLocManAddrTable, prvtLldpLocManAddrLen=prvtLldpLocManAddrLen, prvtLldpObjects=prvtLldpObjects, prvtLldpLocManAddrIfId=prvtLldpLocManAddrIfId, prvtLldpRemDbPortDataTTL=prvtLldpRemDbPortDataTTL, prvtLldpStatsRemTablesDrops=prvtLldpStatsRemTablesDrops, prvtLldpStatsTxIfNum=prvtLldpStatsTxIfNum, prvtLldpLocManAddress=prvtLldpLocManAddress, prvtLldpLocSysCapEnabled=prvtLldpLocSysCapEnabled, PYSNMP_MODULE_ID=prvtLldpMIB, prvtLldpLocChassisId=prvtLldpLocChassisId, prvtLldpDot1PortVlanId=prvtLldpDot1PortVlanId, prvtLldpStatisticsObjects=prvtLldpStatisticsObjects, prvtLldpTransmitHold=prvtLldpTransmitHold, prvtLldpTransmitInterval=prvtLldpTransmitInterval, prvtLldpStatsRemTablesInserts=prvtLldpStatsRemTablesInserts, prvtLldpStatsRemTablesDeletes=prvtLldpStatsRemTablesDeletes, prvtLldpDot1PortVlanName=prvtLldpDot1PortVlanName, prvtLldpStatsRemTablesAgeouts=prvtLldpStatsRemTablesAgeouts, prvtlldpNotifications=prvtlldpNotifications, prvtLldpRemDbPortDescr=prvtLldpRemDbPortDescr, lldpNewRemoteInfo=lldpNewRemoteInfo, prvtLldpAdvBasicPortDescr=prvtLldpAdvBasicPortDescr, prvtLldpStatsRxPortTable=prvtLldpStatsRxPortTable, prvtLldpRemDbPortChasId=prvtLldpRemDbPortChasId, prvtLldpStatsTxPortEntry=prvtLldpStatsTxPortEntry, prvtLldpStatsRxPortFramesErrors=prvtLldpStatsRxPortFramesErrors, prvtLldpPortTable=prvtLldpPortTable, prvtLldpLocManAddrSubtype=prvtLldpLocManAddrSubtype, prvtLldpLocSysDesc=prvtLldpLocSysDesc, prvtLldpRemDbPortEntry=prvtLldpRemDbPortEntry, prvtLldpStatsRxPortEntry=prvtLldpStatsRxPortEntry, prvtLldpRemDbPortSysCapEnabled=prvtLldpRemDbPortSysCapEnabled, prvtLldpStatsRxPortTLVsDiscardedTotal=prvtLldpStatsRxPortTLVsDiscardedTotal, prvtLldpDot3PortMaxFrameSize=prvtLldpDot3PortMaxFrameSize, prvtLldpStatsRxIfNum=prvtLldpStatsRxIfNum, prvtLldpLocSysCapSupported=prvtLldpLocSysCapSupported, prvtLldpEnable=prvtLldpEnable, prvtLldpTransmitDelay=prvtLldpTransmitDelay, prvtLldpLocManAddrIfSubtype=prvtLldpLocManAddrIfSubtype, prvtLldpRemDbPortChasIdSub=prvtLldpRemDbPortChasIdSub, prvtLldpCfgPortMode=prvtLldpCfgPortMode, prvtLldpDot1PortProtoVlanId=prvtLldpDot1PortProtoVlanId, prvtLldpStatsRxPortTLVsUnrecognizedTotal=prvtLldpStatsRxPortTLVsUnrecognizedTotal, prvtLldpLocSysName=prvtLldpLocSysName, prvtLldpDot3PortLAG=prvtLldpDot3PortLAG, prvtLldpDot1PortProtoIdentity=prvtLldpDot1PortProtoIdentity, prvtLldpRemDbPortSysDescr=prvtLldpRemDbPortSysDescr, prvtLldpReinitDelay=prvtLldpReinitDelay, prvtLldpLocChassisIdSubtype=prvtLldpLocChassisIdSubtype, prvtLldpRemDbPortTable=prvtLldpRemDbPortTable, prvtLldpRemDbIfNum=prvtLldpRemDbIfNum, prvtLldpCfgPortName=prvtLldpCfgPortName, prvtLldpStatsTxPortTable=prvtLldpStatsTxPortTable, prvtLldpStatsRemTablesLastChange=prvtLldpStatsRemTablesLastChange, prvtLldpStatsRxPortFramesDiscardedTotal=prvtLldpStatsRxPortFramesDiscardedTotal, prvtLldpRemDbPortManAddr=prvtLldpRemDbPortManAddr, prvtLldpAdvBasicPortSysDescr=prvtLldpAdvBasicPortSysDescr, prvtLldpDot3PortMacPhy=prvtLldpDot3PortMacPhy, prvtLldpMIB=prvtLldpMIB)
