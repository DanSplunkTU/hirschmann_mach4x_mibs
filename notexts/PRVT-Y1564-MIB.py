#
# PySNMP MIB module PRVT-Y1564-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binos/PRVT-Y1564-MIB
# Produced by pysmi-1.1.0 at Fri Nov 19 15:22:56 2021
# On host fv-az33-360 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
switch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "switch")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ModuleIdentity, Counter32, IpAddress, MibIdentifier, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Bits, Counter64, Gauge32, NotificationType, Unsigned32, iso, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "Counter32", "IpAddress", "MibIdentifier", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Bits", "Counter64", "Gauge32", "NotificationType", "Unsigned32", "iso", "Integer32")
TruthValue, RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "RowStatus", "DisplayString", "TextualConvention")
prvtY1564Mib = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 1, 5, 129))
prvtY1564Mib.setRevisions(('2012-02-27 00:00',))
if mibBuilder.loadTexts: prvtY1564Mib.setLastUpdated('201202270000Z')
if mibBuilder.loadTexts: prvtY1564Mib.setOrganization('BATM Advanced Communication')
prvtY1564Notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 0))
prvtY1564Objects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1))
prvtY1564Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 2))
prvtY1564Test = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1))
prvtY1564TestResult = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 2))
prvtY1564Profiles = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 3))
prvtY1564TestTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1), )
if mibBuilder.loadTexts: prvtY1564TestTable.setStatus('current')
prvtY1564TestEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1), ).setIndexNames((0, "PRVT-Y1564-MIB", "prvtY1564TestName"))
if mibBuilder.loadTexts: prvtY1564TestEntry.setStatus('current')
prvtY1564TestName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: prvtY1564TestName.setStatus('current')
prvtY1564TestType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("testHead", 1), ("testLoopback", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtY1564TestType.setStatus('current')
prvtY1564TestMode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("configurationTest", 1), ("performanceTest", 2), ("both", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtY1564TestMode.setStatus('current')
prvtY1564TestExecStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notRunning", 1), ("running", 2))).clone('notRunning')).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtY1564TestExecStatus.setStatus('current')
prvtY1564TestSourceType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("mac", 1), ("mep", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtY1564TestSourceType.setStatus('current')
prvtY1564TestSource = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtY1564TestSource.setStatus('current')
prvtY1564TestTargetType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("mac", 1), ("mep", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtY1564TestTargetType.setStatus('current')
prvtY1564TestTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 17))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtY1564TestTarget.setStatus('current')
prvtY1564TestTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtY1564TestTimeout.setStatus('current')
prvtY1564TestCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtY1564TestCIR.setStatus('current')
prvtY1564TestEIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtY1564TestEIR.setStatus('current')
prvtY1564TestConfigurationTestTrafficPolicing = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 12), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtY1564TestConfigurationTestTrafficPolicing.setStatus('current')
prvtY1564TestConfigurationTestCirSteps = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtY1564TestConfigurationTestCirSteps.setStatus('current')
prvtY1564TestConfigurationStepDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtY1564TestConfigurationStepDuration.setStatus('current')
prvtY1564TestPerformanceTestDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(15, 30))).clone(namedValues=NamedValues(("testDuration15min", 15), ("testDuration30min", 30)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtY1564TestPerformanceTestDuration.setStatus('current')
prvtY1564TestCVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtY1564TestCVLAN.setStatus('current')
prvtY1564TestCVLANPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtY1564TestCVLANPriority.setStatus('current')
prvtY1564TestCVLANDropEligible = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 18), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtY1564TestCVLANDropEligible.setStatus('current')
prvtY1564TestSVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtY1564TestSVLAN.setStatus('current')
prvtY1564TestSVLANPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtY1564TestSVLANPriority.setStatus('current')
prvtY1564TestSVLANDropEligible = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 21), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtY1564TestSVLANDropEligible.setStatus('current')
prvtY1564TestPDUSize = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(64, 128, 256, 512, 1024, 1280, 1518, 2000, 9000))).clone(namedValues=NamedValues(("value64", 64), ("value128", 128), ("value256", 256), ("value512", 512), ("value1024", 1024), ("value1280", 1280), ("value1518", 1518), ("value2000", 2000), ("value9000", 9000)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtY1564TestPDUSize.setStatus('current')
prvtY1564TestLoopbackType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("macSwap", 1), ("oam", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtY1564TestLoopbackType.setStatus('current')
prvtY1564TestPaternType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 8))).clone(namedValues=NamedValues(("null", 1), ("nullCRC", 2), ("prbs", 3), ("prbsCRC", 4), ("none", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtY1564TestPaternType.setStatus('current')
prvtY1564TestProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone(hexValue="00")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtY1564TestProfileName.setStatus('current')
prvtY1564TestRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 1, 1, 1, 26), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtY1564TestRowStatus.setStatus('current')
prvtY1564TestResultTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 2, 1), )
if mibBuilder.loadTexts: prvtY1564TestResultTable.setStatus('current')
prvtY1564TestResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 2, 1, 1), ).setIndexNames((0, "PRVT-Y1564-MIB", "prvtY1564TestName"), (0, "PRVT-Y1564-MIB", "prvtY1564TestResultIndex"))
if mibBuilder.loadTexts: prvtY1564TestResultEntry.setStatus('current')
prvtY1564TestResultIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: prvtY1564TestResultIndex.setStatus('current')
prvtY1564TestResultSentInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtY1564TestResultSentInformationRate.setStatus('current')
prvtY1564TestResultPacketSize = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtY1564TestResultPacketSize.setStatus('current')
prvtY1564TestResultMode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notAvailable", 1), ("configurationCIRTest", 2), ("configurationEIRTest", 3), ("configurationPolicingTest", 4), ("performanceTest", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtY1564TestResultMode.setStatus('current')
prvtY1564TestResultFrameLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtY1564TestResultFrameLoss.setStatus('current')
prvtY1564TestResultInformationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtY1564TestResultInformationRate.setStatus('current')
prvtY1564TestResultFrameTransferDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtY1564TestResultFrameTransferDelay.setStatus('current')
prvtY1564TestResutFrameDelayVariation = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 2, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtY1564TestResutFrameDelayVariation.setStatus('current')
prvtY1564TestResultStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notAvailable", 1), ("ready", 2), ("error", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtY1564TestResultStatus.setStatus('current')
prvtY1564ProfileTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 3, 1), )
if mibBuilder.loadTexts: prvtY1564ProfileTable.setStatus('current')
prvtY1564ProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 3, 1, 1), ).setIndexNames((0, "PRVT-Y1564-MIB", "prvtY1564ProfileName"))
if mibBuilder.loadTexts: prvtY1564ProfileEntry.setStatus('current')
prvtY1564ProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 3, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: prvtY1564ProfileName.setStatus('current')
prvtY1564ProfileFrameLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 3, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtY1564ProfileFrameLoss.setStatus('current')
prvtY1564ProfileFrameTransferDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 3, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtY1564ProfileFrameTransferDelay.setStatus('current')
prvtY1564ProfileFrameDelayVariation = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 3, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtY1564ProfileFrameDelayVariation.setStatus('current')
prvtY1564ProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 1, 3, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtY1564ProfileRowStatus.setStatus('current')
prvtY1564ProbeFailed = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 0, 1)).setObjects(("PRVT-Y1564-MIB", "prvtY1564TestType"), ("PRVT-Y1564-MIB", "prvtY1564TestResultStatus"))
if mibBuilder.loadTexts: prvtY1564ProbeFailed.setStatus('current')
prvtY1564ProbeSuccess = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 0, 2)).setObjects(("PRVT-Y1564-MIB", "prvtY1564TestType"), ("PRVT-Y1564-MIB", "prvtY1564TestResultStatus"))
if mibBuilder.loadTexts: prvtY1564ProbeSuccess.setStatus('current')
prvtY1564TestFinished = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 0, 3)).setObjects(("PRVT-Y1564-MIB", "prvtY1564TestExecStatus"))
if mibBuilder.loadTexts: prvtY1564TestFinished.setStatus('current')
prvtY1564Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 2, 1))
prvtY1564Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 2, 2))
prvtY1564TestGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 2, 2, 1)).setObjects(("PRVT-Y1564-MIB", "prvtY1564TestType"), ("PRVT-Y1564-MIB", "prvtY1564TestMode"), ("PRVT-Y1564-MIB", "prvtY1564TestExecStatus"), ("PRVT-Y1564-MIB", "prvtY1564TestSourceType"), ("PRVT-Y1564-MIB", "prvtY1564TestSource"), ("PRVT-Y1564-MIB", "prvtY1564TestTargetType"), ("PRVT-Y1564-MIB", "prvtY1564TestTarget"), ("PRVT-Y1564-MIB", "prvtY1564TestTimeout"), ("PRVT-Y1564-MIB", "prvtY1564TestCIR"), ("PRVT-Y1564-MIB", "prvtY1564TestEIR"), ("PRVT-Y1564-MIB", "prvtY1564TestConfigurationTestTrafficPolicing"), ("PRVT-Y1564-MIB", "prvtY1564TestConfigurationTestCirSteps"), ("PRVT-Y1564-MIB", "prvtY1564TestConfigurationStepDuration"), ("PRVT-Y1564-MIB", "prvtY1564TestPerformanceTestDuration"), ("PRVT-Y1564-MIB", "prvtY1564TestCVLAN"), ("PRVT-Y1564-MIB", "prvtY1564TestCVLANPriority"), ("PRVT-Y1564-MIB", "prvtY1564TestCVLANDropEligible"), ("PRVT-Y1564-MIB", "prvtY1564TestSVLAN"), ("PRVT-Y1564-MIB", "prvtY1564TestSVLANPriority"), ("PRVT-Y1564-MIB", "prvtY1564TestSVLANDropEligible"), ("PRVT-Y1564-MIB", "prvtY1564TestPDUSize"), ("PRVT-Y1564-MIB", "prvtY1564TestLoopbackType"), ("PRVT-Y1564-MIB", "prvtY1564TestPaternType"), ("PRVT-Y1564-MIB", "prvtY1564TestProfileName"), ("PRVT-Y1564-MIB", "prvtY1564TestRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    prvtY1564TestGroup = prvtY1564TestGroup.setStatus('current')
prvtY1564TestResultsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 2, 2, 2)).setObjects(("PRVT-Y1564-MIB", "prvtY1564TestResultSentInformationRate"), ("PRVT-Y1564-MIB", "prvtY1564TestResultPacketSize"), ("PRVT-Y1564-MIB", "prvtY1564TestResultMode"), ("PRVT-Y1564-MIB", "prvtY1564TestResultFrameLoss"), ("PRVT-Y1564-MIB", "prvtY1564TestResultInformationRate"), ("PRVT-Y1564-MIB", "prvtY1564TestResultFrameTransferDelay"), ("PRVT-Y1564-MIB", "prvtY1564TestResutFrameDelayVariation"), ("PRVT-Y1564-MIB", "prvtY1564TestResultStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    prvtY1564TestResultsGroup = prvtY1564TestResultsGroup.setStatus('current')
prvtY1564ProfilesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 2, 2, 3)).setObjects(("PRVT-Y1564-MIB", "prvtY1564ProfileFrameLoss"), ("PRVT-Y1564-MIB", "prvtY1564ProfileFrameTransferDelay"), ("PRVT-Y1564-MIB", "prvtY1564ProfileFrameDelayVariation"), ("PRVT-Y1564-MIB", "prvtY1564ProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    prvtY1564ProfilesGroup = prvtY1564ProfilesGroup.setStatus('current')
prvtY1564NotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 2, 2, 4)).setObjects(("PRVT-Y1564-MIB", "prvtY1564ProbeFailed"), ("PRVT-Y1564-MIB", "prvtY1564ProbeSuccess"), ("PRVT-Y1564-MIB", "prvtY1564TestFinished"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    prvtY1564NotificationsGroup = prvtY1564NotificationsGroup.setStatus('current')
prvtY1564Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 738, 1, 5, 129, 2, 1, 1)).setObjects(("PRVT-Y1564-MIB", "prvtY1564TestGroup"), ("PRVT-Y1564-MIB", "prvtY1564TestResultsGroup"), ("PRVT-Y1564-MIB", "prvtY1564ProfilesGroup"), ("PRVT-Y1564-MIB", "prvtY1564NotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    prvtY1564Compliance = prvtY1564Compliance.setStatus('current')
mibBuilder.exportSymbols("PRVT-Y1564-MIB", prvtY1564TestResultTable=prvtY1564TestResultTable, prvtY1564TestName=prvtY1564TestName, prvtY1564ProbeFailed=prvtY1564ProbeFailed, prvtY1564Notifications=prvtY1564Notifications, prvtY1564TestConfigurationStepDuration=prvtY1564TestConfigurationStepDuration, prvtY1564TestResultSentInformationRate=prvtY1564TestResultSentInformationRate, prvtY1564TestResultPacketSize=prvtY1564TestResultPacketSize, prvtY1564TestFinished=prvtY1564TestFinished, prvtY1564TestSVLANDropEligible=prvtY1564TestSVLANDropEligible, prvtY1564TestPerformanceTestDuration=prvtY1564TestPerformanceTestDuration, prvtY1564TestEntry=prvtY1564TestEntry, prvtY1564ProfileFrameLoss=prvtY1564ProfileFrameLoss, prvtY1564TestRowStatus=prvtY1564TestRowStatus, prvtY1564Mib=prvtY1564Mib, prvtY1564TestCIR=prvtY1564TestCIR, prvtY1564TestExecStatus=prvtY1564TestExecStatus, prvtY1564ProfileName=prvtY1564ProfileName, prvtY1564Compliance=prvtY1564Compliance, prvtY1564ProfileFrameTransferDelay=prvtY1564ProfileFrameTransferDelay, prvtY1564TestResutFrameDelayVariation=prvtY1564TestResutFrameDelayVariation, prvtY1564TestGroup=prvtY1564TestGroup, prvtY1564ProfileEntry=prvtY1564ProfileEntry, prvtY1564TestSourceType=prvtY1564TestSourceType, prvtY1564TestResult=prvtY1564TestResult, prvtY1564Objects=prvtY1564Objects, prvtY1564TestCVLANPriority=prvtY1564TestCVLANPriority, prvtY1564TestSource=prvtY1564TestSource, prvtY1564TestCVLANDropEligible=prvtY1564TestCVLANDropEligible, prvtY1564TestEIR=prvtY1564TestEIR, prvtY1564TestResultFrameTransferDelay=prvtY1564TestResultFrameTransferDelay, prvtY1564TestResultStatus=prvtY1564TestResultStatus, prvtY1564TestResultsGroup=prvtY1564TestResultsGroup, prvtY1564Test=prvtY1564Test, prvtY1564TestType=prvtY1564TestType, prvtY1564TestConfigurationTestCirSteps=prvtY1564TestConfigurationTestCirSteps, prvtY1564NotificationsGroup=prvtY1564NotificationsGroup, prvtY1564TestLoopbackType=prvtY1564TestLoopbackType, prvtY1564TestTargetType=prvtY1564TestTargetType, prvtY1564TestMode=prvtY1564TestMode, prvtY1564TestCVLAN=prvtY1564TestCVLAN, prvtY1564TestSVLANPriority=prvtY1564TestSVLANPriority, prvtY1564TestResultMode=prvtY1564TestResultMode, prvtY1564TestResultInformationRate=prvtY1564TestResultInformationRate, prvtY1564TestConfigurationTestTrafficPolicing=prvtY1564TestConfigurationTestTrafficPolicing, prvtY1564TestPDUSize=prvtY1564TestPDUSize, prvtY1564ProfileFrameDelayVariation=prvtY1564ProfileFrameDelayVariation, prvtY1564Profiles=prvtY1564Profiles, prvtY1564TestSVLAN=prvtY1564TestSVLAN, prvtY1564TestPaternType=prvtY1564TestPaternType, prvtY1564ProfileTable=prvtY1564ProfileTable, prvtY1564TestResultIndex=prvtY1564TestResultIndex, prvtY1564ProbeSuccess=prvtY1564ProbeSuccess, prvtY1564TestTimeout=prvtY1564TestTimeout, prvtY1564TestResultEntry=prvtY1564TestResultEntry, prvtY1564TestTarget=prvtY1564TestTarget, prvtY1564Compliances=prvtY1564Compliances, prvtY1564Conformance=prvtY1564Conformance, prvtY1564TestTable=prvtY1564TestTable, prvtY1564ProfilesGroup=prvtY1564ProfilesGroup, prvtY1564TestResultFrameLoss=prvtY1564TestResultFrameLoss, prvtY1564Groups=prvtY1564Groups, PYSNMP_MODULE_ID=prvtY1564Mib, prvtY1564ProfileRowStatus=prvtY1564ProfileRowStatus, prvtY1564TestProfileName=prvtY1564TestProfileName)
