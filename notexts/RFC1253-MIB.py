#
# PySNMP MIB module RFC1253-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/RFC1253-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 16:49:57 2022
# On host fv-az135-792 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Integer32, Unsigned32, mib_2, MibIdentifier, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Gauge32, IpAddress, Counter32, ModuleIdentity, TimeTicks, NotificationType, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Unsigned32", "mib-2", "MibIdentifier", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Gauge32", "IpAddress", "Counter32", "ModuleIdentity", "TimeTicks", "NotificationType", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ospf = MibIdentifier((1, 3, 6, 1, 2, 1, 14))
class AreaID(IpAddress):
    pass

class RouterID(IpAddress):
    pass

class Metric(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 65535)

class BigMetric(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 16777215)

class TruthValue(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("true", 1), ("false", 2))

class Status(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("enabled", 1), ("disabled", 2))

class Validation(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("valid", 1), ("invalid", 2))

class PositiveInteger(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 4294967295)

class HelloRange(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 65535)

class UpToMaxAge(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 3600)

class InterfaceIndex(Integer32):
    pass

class DesignatedRouterPriority(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 255)

class TOSType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 31)

ospfGeneralGroup = MibIdentifier((1, 3, 6, 1, 2, 1, 14, 1))
ospfRouterId = MibScalar((1, 3, 6, 1, 2, 1, 14, 1, 1), RouterID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfRouterId.setStatus('mandatory')
ospfAdminStat = MibScalar((1, 3, 6, 1, 2, 1, 14, 1, 2), Status()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfAdminStat.setStatus('mandatory')
ospfVersionNumber = MibScalar((1, 3, 6, 1, 2, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2))).clone(namedValues=NamedValues(("version2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfVersionNumber.setStatus('mandatory')
ospfAreaBdrRtrStatus = MibScalar((1, 3, 6, 1, 2, 1, 14, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfAreaBdrRtrStatus.setStatus('mandatory')
ospfASBdrRtrStatus = MibScalar((1, 3, 6, 1, 2, 1, 14, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfASBdrRtrStatus.setStatus('mandatory')
ospfExternLSACount = MibScalar((1, 3, 6, 1, 2, 1, 14, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfExternLSACount.setStatus('mandatory')
ospfExternLSACksumSum = MibScalar((1, 3, 6, 1, 2, 1, 14, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfExternLSACksumSum.setStatus('mandatory')
ospfTOSSupport = MibScalar((1, 3, 6, 1, 2, 1, 14, 1, 8), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfTOSSupport.setStatus('mandatory')
ospfOriginateNewLSAs = MibScalar((1, 3, 6, 1, 2, 1, 14, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfOriginateNewLSAs.setStatus('mandatory')
ospfRxNewLSAs = MibScalar((1, 3, 6, 1, 2, 1, 14, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfRxNewLSAs.setStatus('mandatory')
ospfAreaTable = MibTable((1, 3, 6, 1, 2, 1, 14, 2), )
if mibBuilder.loadTexts: ospfAreaTable.setStatus('mandatory')
ospfAreaEntry = MibTableRow((1, 3, 6, 1, 2, 1, 14, 2, 1), ).setIndexNames((0, "RFC1253-MIB", "ospfAreaId"))
if mibBuilder.loadTexts: ospfAreaEntry.setStatus('mandatory')
ospfAreaId = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 2, 1, 1), AreaID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfAreaId.setStatus('mandatory')
ospfAuthType = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 2, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfAuthType.setStatus('mandatory')
ospfImportASExtern = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 2, 1, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfImportASExtern.setStatus('mandatory')
ospfSpfRuns = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfSpfRuns.setStatus('mandatory')
ospfAreaBdrRtrCount = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfAreaBdrRtrCount.setStatus('mandatory')
ospfASBdrRtrCount = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfASBdrRtrCount.setStatus('mandatory')
ospfAreaLSACount = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfAreaLSACount.setStatus('mandatory')
ospfAreaLSACksumSum = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfAreaLSACksumSum.setStatus('mandatory')
ospfStubAreaTable = MibTable((1, 3, 6, 1, 2, 1, 14, 3), )
if mibBuilder.loadTexts: ospfStubAreaTable.setStatus('mandatory')
ospfStubAreaEntry = MibTableRow((1, 3, 6, 1, 2, 1, 14, 3, 1), ).setIndexNames((0, "RFC1253-MIB", "ospfStubAreaID"), (0, "RFC1253-MIB", "ospfStubTOS"))
if mibBuilder.loadTexts: ospfStubAreaEntry.setStatus('mandatory')
ospfStubAreaID = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 3, 1, 1), AreaID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfStubAreaID.setStatus('mandatory')
ospfStubTOS = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 3, 1, 2), TOSType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfStubTOS.setStatus('mandatory')
ospfStubMetric = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 3, 1, 3), BigMetric()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfStubMetric.setStatus('mandatory')
ospfStubStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 3, 1, 4), Validation().clone('valid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfStubStatus.setStatus('mandatory')
ospfLsdbTable = MibTable((1, 3, 6, 1, 2, 1, 14, 4), )
if mibBuilder.loadTexts: ospfLsdbTable.setStatus('mandatory')
ospfLsdbEntry = MibTableRow((1, 3, 6, 1, 2, 1, 14, 4, 1), ).setIndexNames((0, "RFC1253-MIB", "ospfLsdbAreaId"), (0, "RFC1253-MIB", "ospfLsdbType"), (0, "RFC1253-MIB", "ospfLsdbLSID"), (0, "RFC1253-MIB", "ospfLsdbRouterId"))
if mibBuilder.loadTexts: ospfLsdbEntry.setStatus('mandatory')
ospfLsdbAreaId = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 4, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfLsdbAreaId.setStatus('mandatory')
ospfLsdbType = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("routerLink", 1), ("networkLink", 2), ("summaryLink", 3), ("asSummaryLink", 4), ("asExternalLink", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfLsdbType.setStatus('mandatory')
ospfLsdbLSID = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfLsdbLSID.setStatus('mandatory')
ospfLsdbRouterId = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 4, 1, 4), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfLsdbRouterId.setStatus('mandatory')
ospfLsdbSequence = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfLsdbSequence.setStatus('mandatory')
ospfLsdbAge = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfLsdbAge.setStatus('mandatory')
ospfLsdbChecksum = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfLsdbChecksum.setStatus('mandatory')
ospfLsdbAdvertisement = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 4, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfLsdbAdvertisement.setStatus('mandatory')
ospfAreaRangeTable = MibTable((1, 3, 6, 1, 2, 1, 14, 5), )
if mibBuilder.loadTexts: ospfAreaRangeTable.setStatus('mandatory')
ospfAreaRangeEntry = MibTableRow((1, 3, 6, 1, 2, 1, 14, 5, 1), ).setIndexNames((0, "RFC1253-MIB", "ospfAreaRangeAreaID"), (0, "RFC1253-MIB", "ospfAreaRangeNet"))
if mibBuilder.loadTexts: ospfAreaRangeEntry.setStatus('mandatory')
ospfAreaRangeAreaID = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 5, 1, 1), AreaID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfAreaRangeAreaID.setStatus('mandatory')
ospfAreaRangeNet = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 5, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfAreaRangeNet.setStatus('mandatory')
ospfAreaRangeMask = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 5, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfAreaRangeMask.setStatus('mandatory')
ospfAreaRangeStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 5, 1, 4), Validation().clone('valid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfAreaRangeStatus.setStatus('mandatory')
ospfHostTable = MibTable((1, 3, 6, 1, 2, 1, 14, 6), )
if mibBuilder.loadTexts: ospfHostTable.setStatus('mandatory')
ospfHostEntry = MibTableRow((1, 3, 6, 1, 2, 1, 14, 6, 1), ).setIndexNames((0, "RFC1253-MIB", "ospfHostIpAddress"), (0, "RFC1253-MIB", "ospfHostTOS"))
if mibBuilder.loadTexts: ospfHostEntry.setStatus('mandatory')
ospfHostIpAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 6, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfHostIpAddress.setStatus('mandatory')
ospfHostTOS = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 6, 1, 2), TOSType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfHostTOS.setStatus('mandatory')
ospfHostMetric = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 6, 1, 3), Metric()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfHostMetric.setStatus('mandatory')
ospfHostStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 6, 1, 4), Validation().clone('valid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfHostStatus.setStatus('mandatory')
ospfIfTable = MibTable((1, 3, 6, 1, 2, 1, 14, 7), )
if mibBuilder.loadTexts: ospfIfTable.setStatus('mandatory')
ospfIfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 14, 7, 1), ).setIndexNames((0, "RFC1253-MIB", "ospfIfIpAddress"), (0, "RFC1253-MIB", "ospfAddressLessIf"))
if mibBuilder.loadTexts: ospfIfEntry.setStatus('mandatory')
ospfIfIpAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 7, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfIfIpAddress.setStatus('mandatory')
ospfAddressLessIf = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 7, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfAddressLessIf.setStatus('mandatory')
ospfIfAreaId = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 7, 1, 3), AreaID().clone(hexValue="00000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfIfAreaId.setStatus('mandatory')
ospfIfType = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("broadcast", 1), ("nbma", 2), ("pointToPoint", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfIfType.setStatus('mandatory')
ospfIfAdminStat = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 7, 1, 5), Status().clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfIfAdminStat.setStatus('mandatory')
ospfIfRtrPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 7, 1, 6), DesignatedRouterPriority().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfIfRtrPriority.setStatus('mandatory')
ospfIfTransitDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 7, 1, 7), UpToMaxAge().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfIfTransitDelay.setStatus('mandatory')
ospfIfRetransInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 7, 1, 8), UpToMaxAge().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfIfRetransInterval.setStatus('mandatory')
ospfIfHelloInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 7, 1, 9), HelloRange().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfIfHelloInterval.setStatus('mandatory')
ospfIfRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 7, 1, 10), PositiveInteger().clone(40)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfIfRtrDeadInterval.setStatus('mandatory')
ospfIfPollInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 7, 1, 11), PositiveInteger().clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfIfPollInterval.setStatus('mandatory')
ospfIfState = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 7, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("down", 1), ("loopback", 2), ("waiting", 3), ("pointToPoint", 4), ("designatedRouter", 5), ("backupDesignatedRouter", 6), ("otherDesignatedRouter", 7))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfIfState.setStatus('mandatory')
ospfIfDesignatedRouter = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 7, 1, 13), IpAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfIfDesignatedRouter.setStatus('mandatory')
ospfIfBackupDesignatedRouter = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 7, 1, 14), IpAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfIfBackupDesignatedRouter.setStatus('mandatory')
ospfIfEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 7, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfIfEvents.setStatus('mandatory')
ospfIfAuthKey = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 7, 1, 16), OctetString().clone(hexValue="0000000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfIfAuthKey.setStatus('mandatory')
ospfIfMetricTable = MibTable((1, 3, 6, 1, 2, 1, 14, 8), )
if mibBuilder.loadTexts: ospfIfMetricTable.setStatus('mandatory')
ospfIfMetricEntry = MibTableRow((1, 3, 6, 1, 2, 1, 14, 8, 1), ).setIndexNames((0, "RFC1253-MIB", "ospfIfMetricIpAddress"), (0, "RFC1253-MIB", "ospfIfMetricAddressLessIf"), (0, "RFC1253-MIB", "ospfIfMetricTOS"))
if mibBuilder.loadTexts: ospfIfMetricEntry.setStatus('mandatory')
ospfIfMetricIpAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 8, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfIfMetricIpAddress.setStatus('mandatory')
ospfIfMetricAddressLessIf = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 8, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfIfMetricAddressLessIf.setStatus('mandatory')
ospfIfMetricTOS = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 8, 1, 3), TOSType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfIfMetricTOS.setStatus('mandatory')
ospfIfMetricMetric = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 8, 1, 4), Metric()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfIfMetricMetric.setStatus('mandatory')
ospfIfMetricStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 8, 1, 5), Validation().clone('valid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfIfMetricStatus.setStatus('mandatory')
ospfVirtIfTable = MibTable((1, 3, 6, 1, 2, 1, 14, 9), )
if mibBuilder.loadTexts: ospfVirtIfTable.setStatus('mandatory')
ospfVirtIfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 14, 9, 1), ).setIndexNames((0, "RFC1253-MIB", "ospfVirtIfAreaID"), (0, "RFC1253-MIB", "ospfVirtIfNeighbor"))
if mibBuilder.loadTexts: ospfVirtIfEntry.setStatus('mandatory')
ospfVirtIfAreaID = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 9, 1, 1), AreaID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfVirtIfAreaID.setStatus('mandatory')
ospfVirtIfNeighbor = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 9, 1, 2), RouterID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfVirtIfNeighbor.setStatus('mandatory')
ospfVirtIfTransitDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 9, 1, 3), UpToMaxAge().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfVirtIfTransitDelay.setStatus('mandatory')
ospfVirtIfRetransInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 9, 1, 4), UpToMaxAge().clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfVirtIfRetransInterval.setStatus('mandatory')
ospfVirtIfHelloInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 9, 1, 5), HelloRange().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfVirtIfHelloInterval.setStatus('mandatory')
ospfVirtIfRtrDeadInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 9, 1, 6), PositiveInteger().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfVirtIfRtrDeadInterval.setStatus('mandatory')
ospfVirtIfState = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 4))).clone(namedValues=NamedValues(("down", 1), ("pointToPoint", 4))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfVirtIfState.setStatus('mandatory')
ospfVirtIfEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 9, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfVirtIfEvents.setStatus('mandatory')
ospfVirtIfAuthKey = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 9, 1, 9), OctetString().clone(hexValue="0000000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfVirtIfAuthKey.setStatus('mandatory')
ospfVirtIfStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 9, 1, 10), Validation().clone('valid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfVirtIfStatus.setStatus('mandatory')
ospfNbrTable = MibTable((1, 3, 6, 1, 2, 1, 14, 10), )
if mibBuilder.loadTexts: ospfNbrTable.setStatus('mandatory')
ospfNbrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 14, 10, 1), ).setIndexNames((0, "RFC1253-MIB", "ospfNbrIpAddr"), (0, "RFC1253-MIB", "ospfNbrAddressLessIndex"))
if mibBuilder.loadTexts: ospfNbrEntry.setStatus('mandatory')
ospfNbrIpAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 10, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfNbrIpAddr.setStatus('mandatory')
ospfNbrAddressLessIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 10, 1, 2), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfNbrAddressLessIndex.setStatus('mandatory')
ospfNbrRtrId = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 10, 1, 3), RouterID().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfNbrRtrId.setStatus('mandatory')
ospfNbrOptions = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 10, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfNbrOptions.setStatus('mandatory')
ospfNbrPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 10, 1, 5), DesignatedRouterPriority().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfNbrPriority.setStatus('mandatory')
ospfNbrState = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoWay", 4), ("exchangeStart", 5), ("exchange", 6), ("loading", 7), ("full", 8))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfNbrState.setStatus('mandatory')
ospfNbrEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 10, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfNbrEvents.setStatus('mandatory')
ospfNbrLSRetransQLen = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 10, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfNbrLSRetransQLen.setStatus('mandatory')
ospfNBMANbrStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 10, 1, 9), Validation().clone('valid')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ospfNBMANbrStatus.setStatus('mandatory')
ospfVirtNbrTable = MibTable((1, 3, 6, 1, 2, 1, 14, 11), )
if mibBuilder.loadTexts: ospfVirtNbrTable.setStatus('mandatory')
ospfVirtNbrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 14, 11, 1), ).setIndexNames((0, "RFC1253-MIB", "ospfVirtNbrArea"), (0, "RFC1253-MIB", "ospfVirtNbrRtrId"))
if mibBuilder.loadTexts: ospfVirtNbrEntry.setStatus('mandatory')
ospfVirtNbrArea = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 11, 1, 1), AreaID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfVirtNbrArea.setStatus('mandatory')
ospfVirtNbrRtrId = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 11, 1, 2), RouterID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfVirtNbrRtrId.setStatus('mandatory')
ospfVirtNbrIpAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 11, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfVirtNbrIpAddr.setStatus('mandatory')
ospfVirtNbrOptions = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 11, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfVirtNbrOptions.setStatus('mandatory')
ospfVirtNbrState = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("down", 1), ("attempt", 2), ("init", 3), ("twoWay", 4), ("exchangeStart", 5), ("exchange", 6), ("loading", 7), ("full", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfVirtNbrState.setStatus('mandatory')
ospfVirtNbrEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfVirtNbrEvents.setStatus('mandatory')
ospfVirtNbrLSRetransQLen = MibTableColumn((1, 3, 6, 1, 2, 1, 14, 11, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ospfVirtNbrLSRetransQLen.setStatus('mandatory')
mibBuilder.exportSymbols("RFC1253-MIB", ospfAreaRangeEntry=ospfAreaRangeEntry, TruthValue=TruthValue, ospfStubMetric=ospfStubMetric, ospfVirtIfAreaID=ospfVirtIfAreaID, ospfNBMANbrStatus=ospfNBMANbrStatus, ospfIfMetricTOS=ospfIfMetricTOS, ospfVirtIfTransitDelay=ospfVirtIfTransitDelay, AreaID=AreaID, ospfVirtIfAuthKey=ospfVirtIfAuthKey, ospfIfAdminStat=ospfIfAdminStat, ospfVersionNumber=ospfVersionNumber, ospfExternLSACksumSum=ospfExternLSACksumSum, ospfVirtNbrIpAddr=ospfVirtNbrIpAddr, ospfIfEvents=ospfIfEvents, ospfASBdrRtrStatus=ospfASBdrRtrStatus, ospfIfMetricIpAddress=ospfIfMetricIpAddress, Validation=Validation, ospfHostTOS=ospfHostTOS, ospfASBdrRtrCount=ospfASBdrRtrCount, ospfVirtNbrRtrId=ospfVirtNbrRtrId, ospfVirtIfState=ospfVirtIfState, UpToMaxAge=UpToMaxAge, ospfAreaRangeStatus=ospfAreaRangeStatus, ospfNbrEvents=ospfNbrEvents, ospfVirtNbrOptions=ospfVirtNbrOptions, ospfIfAreaId=ospfIfAreaId, ospfStubTOS=ospfStubTOS, ospfNbrEntry=ospfNbrEntry, ospfNbrIpAddr=ospfNbrIpAddr, ospfIfRetransInterval=ospfIfRetransInterval, ospfVirtNbrState=ospfVirtNbrState, ospfSpfRuns=ospfSpfRuns, ospfLsdbAreaId=ospfLsdbAreaId, ospfAreaBdrRtrCount=ospfAreaBdrRtrCount, ospfAuthType=ospfAuthType, ospfStubStatus=ospfStubStatus, ospfAreaLSACksumSum=ospfAreaLSACksumSum, ospfAreaRangeTable=ospfAreaRangeTable, ospfExternLSACount=ospfExternLSACount, ospfHostStatus=ospfHostStatus, ospfNbrPriority=ospfNbrPriority, ospfIfMetricStatus=ospfIfMetricStatus, ospfIfPollInterval=ospfIfPollInterval, ospfLsdbRouterId=ospfLsdbRouterId, ospfVirtIfStatus=ospfVirtIfStatus, Metric=Metric, ospfIfIpAddress=ospfIfIpAddress, ospfVirtIfEvents=ospfVirtIfEvents, ospfNbrState=ospfNbrState, ospfHostEntry=ospfHostEntry, TOSType=TOSType, ospfAreaRangeAreaID=ospfAreaRangeAreaID, ospfNbrLSRetransQLen=ospfNbrLSRetransQLen, ospfVirtNbrEvents=ospfVirtNbrEvents, ospfAreaTable=ospfAreaTable, ospfAreaId=ospfAreaId, ospfStubAreaID=ospfStubAreaID, ospfLsdbLSID=ospfLsdbLSID, PositiveInteger=PositiveInteger, ospfHostMetric=ospfHostMetric, ospfVirtIfTable=ospfVirtIfTable, ospfLsdbType=ospfLsdbType, ospfIfEntry=ospfIfEntry, ospfAreaLSACount=ospfAreaLSACount, ospfHostIpAddress=ospfHostIpAddress, ospfNbrOptions=ospfNbrOptions, ospfAdminStat=ospfAdminStat, ospf=ospf, Status=Status, ospfRouterId=ospfRouterId, ospfVirtIfEntry=ospfVirtIfEntry, ospfIfRtrPriority=ospfIfRtrPriority, ospfStubAreaTable=ospfStubAreaTable, ospfIfState=ospfIfState, RouterID=RouterID, ospfAddressLessIf=ospfAddressLessIf, ospfIfMetricAddressLessIf=ospfIfMetricAddressLessIf, ospfIfDesignatedRouter=ospfIfDesignatedRouter, ospfLsdbAge=ospfLsdbAge, ospfLsdbTable=ospfLsdbTable, ospfIfBackupDesignatedRouter=ospfIfBackupDesignatedRouter, ospfIfMetricEntry=ospfIfMetricEntry, ospfLsdbEntry=ospfLsdbEntry, ospfAreaRangeMask=ospfAreaRangeMask, BigMetric=BigMetric, ospfHostTable=ospfHostTable, HelloRange=HelloRange, ospfLsdbSequence=ospfLsdbSequence, ospfRxNewLSAs=ospfRxNewLSAs, ospfNbrRtrId=ospfNbrRtrId, ospfIfAuthKey=ospfIfAuthKey, InterfaceIndex=InterfaceIndex, ospfIfMetricMetric=ospfIfMetricMetric, ospfNbrTable=ospfNbrTable, ospfAreaEntry=ospfAreaEntry, ospfIfMetricTable=ospfIfMetricTable, ospfVirtIfRetransInterval=ospfVirtIfRetransInterval, ospfVirtIfRtrDeadInterval=ospfVirtIfRtrDeadInterval, ospfLsdbAdvertisement=ospfLsdbAdvertisement, ospfOriginateNewLSAs=ospfOriginateNewLSAs, ospfIfType=ospfIfType, ospfVirtNbrEntry=ospfVirtNbrEntry, ospfNbrAddressLessIndex=ospfNbrAddressLessIndex, ospfIfTransitDelay=ospfIfTransitDelay, ospfVirtNbrLSRetransQLen=ospfVirtNbrLSRetransQLen, ospfGeneralGroup=ospfGeneralGroup, ospfVirtNbrTable=ospfVirtNbrTable, ospfImportASExtern=ospfImportASExtern, ospfTOSSupport=ospfTOSSupport, ospfAreaBdrRtrStatus=ospfAreaBdrRtrStatus, ospfVirtNbrArea=ospfVirtNbrArea, ospfLsdbChecksum=ospfLsdbChecksum, ospfVirtIfNeighbor=ospfVirtIfNeighbor, ospfVirtIfHelloInterval=ospfVirtIfHelloInterval, DesignatedRouterPriority=DesignatedRouterPriority, ospfIfRtrDeadInterval=ospfIfRtrDeadInterval, ospfIfTable=ospfIfTable, ospfAreaRangeNet=ospfAreaRangeNet, ospfIfHelloInterval=ospfIfHelloInterval, ospfStubAreaEntry=ospfStubAreaEntry)
