#
# PySNMP MIB module RADLAN-UDP (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/radlan/RADLAN-UDP
# Produced by pysmi-1.1.8 at Sat Jan 15 04:37:42 2022
# On host fv-az77-149 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
ipCidrRouteTos, ipCidrRouteNextHop, ipCidrRouteEntry, ipCidrRouteMask, ipCidrRouteDest = mibBuilder.importSymbols("IP-FORWARD-MIB", "ipCidrRouteTos", "ipCidrRouteNextHop", "ipCidrRouteEntry", "ipCidrRouteMask", "ipCidrRouteDest")
ipAddrEntry, = mibBuilder.importSymbols("IP-MIB", "ipAddrEntry")
rnd, = mibBuilder.importSymbols("RADLAN-MIB", "rnd")
rip2IfConfEntry, = mibBuilder.importSymbols("RFC1389-MIB", "rip2IfConfEntry")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter64, ModuleIdentity, iso, ObjectIdentity, Unsigned32, Integer32, MibIdentifier, NotificationType, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, TimeTicks, IpAddress, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "ModuleIdentity", "iso", "ObjectIdentity", "Unsigned32", "Integer32", "MibIdentifier", "NotificationType", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "TimeTicks", "IpAddress", "Bits")
TextualConvention, DisplayString, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "RowStatus")
DisplayString, = mibBuilder.importSymbols("SNMPv2-TC-v1", "DisplayString")
rsUDP = ModuleIdentity((1, 3, 6, 1, 4, 1, 89, 42))
rsUDP.setRevisions(('2004-06-01 00:00',))
if mibBuilder.loadTexts: rsUDP.setLastUpdated('200406010000Z')
if mibBuilder.loadTexts: rsUDP.setOrganization('Radlan Computer Communications Ltd.')
rsUdpRelayTable = MibTable((1, 3, 6, 1, 4, 1, 89, 42, 1), )
if mibBuilder.loadTexts: rsUdpRelayTable.setStatus('current')
rsUdpRelayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 42, 1, 1), ).setIndexNames((0, "RADLAN-UDP", "rsUdpRelayDstPort"), (0, "RADLAN-UDP", "rsUdpRelaySrcIpInf"), (0, "RADLAN-UDP", "rsUdpRelayDstIpAddr"))
if mibBuilder.loadTexts: rsUdpRelayEntry.setStatus('current')
rsUdpRelayDstPort = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelayDstPort.setStatus('current')
rsUdpRelaySrcIpInf = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelaySrcIpInf.setStatus('current')
rsUdpRelayDstIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelayDstIpAddr.setStatus('current')
rsUdpRelayStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsUdpRelayStatus.setStatus('current')
rsUdpRelayUserInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 42, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsUdpRelayUserInfo.setStatus('current')
rsUdpRelayMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 89, 42, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsUdpRelayMibVersion.setStatus('current')
mibBuilder.exportSymbols("RADLAN-UDP", rsUdpRelayUserInfo=rsUdpRelayUserInfo, rsUdpRelayStatus=rsUdpRelayStatus, PYSNMP_MODULE_ID=rsUDP, rsUdpRelayEntry=rsUdpRelayEntry, rsUdpRelayDstPort=rsUdpRelayDstPort, rsUdpRelayDstIpAddr=rsUdpRelayDstIpAddr, rsUdpRelayMibVersion=rsUdpRelayMibVersion, rsUdpRelayTable=rsUdpRelayTable, rsUDP=rsUDP, rsUdpRelaySrcIpInf=rsUdpRelaySrcIpInf)
