#
# PySNMP MIB module ALCATEL-IND1-TRAP-MGR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-TRAP-MGR-MIB
# Produced by pysmi-1.1.8 at Tue Jan 11 21:37:16 2022
# On host fv-az74-997 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
softentIND1TrapMgr, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1TrapMgr")
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, IpAddress, Bits, iso, NotificationType, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Gauge32, MibIdentifier, Counter32, TimeTicks, Counter64, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "IpAddress", "Bits", "iso", "NotificationType", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Gauge32", "MibIdentifier", "Counter32", "TimeTicks", "Counter64", "ModuleIdentity")
RowStatus, TextualConvention, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "DateAndTime", "DisplayString")
alcatelIND1TrapMgrMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1))
alcatelIND1TrapMgrMIB.setRevisions(('2010-05-13 00:00', '2007-08-07 00:00', '2014-09-18 00:00',))
if mibBuilder.loadTexts: alcatelIND1TrapMgrMIB.setLastUpdated('201005130000Z')
if mibBuilder.loadTexts: alcatelIND1TrapMgrMIB.setOrganization('Alcatel-Lucent')
alcatelIND1TrapMgrMIBNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 0))
if mibBuilder.loadTexts: alcatelIND1TrapMgrMIBNotifications.setStatus('current')
alcatelIND1TrapMgrMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1))
if mibBuilder.loadTexts: alcatelIND1TrapMgrMIBObjects.setStatus('current')
alcatelIND1TrapMgrMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 2))
if mibBuilder.loadTexts: alcatelIND1TrapMgrMIBConformance.setStatus('current')
alcatelIND1TrapMgrMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1TrapMgrMIBGroups.setStatus('current')
alcatelIND1TrapMgrMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1TrapMgrMIBCompliances.setStatus('current')
trapMgt = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1))
trapConfigTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 1), )
if mibBuilder.loadTexts: trapConfigTable.setStatus('current')
trapConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-TRAP-MGR-MIB", "trapIndex"))
if mibBuilder.loadTexts: trapConfigEntry.setStatus('current')
trapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapIndex.setStatus('current')
trapName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapName.setStatus('current')
trapFamily = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapFamily.setStatus('current')
trapAbsorbPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapAbsorbPeriod.setStatus('current')
trapStationTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 2), )
if mibBuilder.loadTexts: trapStationTable.setStatus('current')
trapStationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-TRAP-MGR-MIB", "trapStationIP"))
if mibBuilder.loadTexts: trapStationEntry.setStatus('current')
trapStationIP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapStationIP.setStatus('current')
trapStationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2), Unsigned32().clone(162)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapStationPort.setStatus('current')
trapStationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapStationRowStatus.setStatus('current')
trapStationProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("v1", 1), ("v2", 2), ("v3", 3))).clone('v3')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapStationProtocol.setStatus('current')
trapStationUser = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 2, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapStationUser.setStatus('current')
trapStationReplay = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: trapStationReplay.setStatus('current')
trapStationNextSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: trapStationNextSeq.setStatus('current')
trapFilterTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 3), )
if mibBuilder.loadTexts: trapFilterTable.setStatus('current')
trapFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-TRAP-MGR-MIB", "trapStationIP"), (0, "ALCATEL-IND1-TRAP-MGR-MIB", "trapIndex"))
if mibBuilder.loadTexts: trapFilterEntry.setStatus('current')
trapFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapFilterStatus.setStatus('current')
trapAbsorption = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapAbsorption.setStatus('current')
trapToWebView = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: trapToWebView.setStatus('current')
alaTrapInetStationTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 6), )
if mibBuilder.loadTexts: alaTrapInetStationTable.setStatus('current')
alaTrapInetStationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 6, 1), ).setIndexNames((0, "ALCATEL-IND1-TRAP-MGR-MIB", "alaTrapInetStationIPType"), (0, "ALCATEL-IND1-TRAP-MGR-MIB", "alaTrapInetStationIP"))
if mibBuilder.loadTexts: alaTrapInetStationEntry.setStatus('current')
alaTrapInetStationIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 6, 1, 1), InetAddressType())
if mibBuilder.loadTexts: alaTrapInetStationIPType.setStatus('current')
alaTrapInetStationIP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 6, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: alaTrapInetStationIP.setStatus('current')
alaTrapInetStationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 6, 1, 3), Unsigned32().clone(162)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaTrapInetStationPort.setStatus('current')
alaTrapInetStationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaTrapInetStationRowStatus.setStatus('current')
alaTrapInetStationProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("v1", 1), ("v2", 2), ("v3", 3))).clone('v3')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaTrapInetStationProtocol.setStatus('current')
alaTrapInetStationUser = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 6, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaTrapInetStationUser.setStatus('current')
alaTrapInetStationReplay = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 6, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaTrapInetStationReplay.setStatus('current')
alaTrapInetStationNextSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 6, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaTrapInetStationNextSeq.setStatus('current')
alaTrapInetFilterTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 7), )
if mibBuilder.loadTexts: alaTrapInetFilterTable.setStatus('current')
alaTrapInetFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 7, 1), ).setIndexNames((0, "ALCATEL-IND1-TRAP-MGR-MIB", "alaTrapInetStationIPType"), (0, "ALCATEL-IND1-TRAP-MGR-MIB", "alaTrapInetStationIP"), (0, "ALCATEL-IND1-TRAP-MGR-MIB", "trapIndex"))
if mibBuilder.loadTexts: alaTrapInetFilterEntry.setStatus('current')
alaTrapInetFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2))).clone('off')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaTrapInetFilterStatus.setStatus('current')
alaDgTrapStationTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 8), )
if mibBuilder.loadTexts: alaDgTrapStationTable.setStatus('current')
alaDgTrapStationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 8, 1), ).setIndexNames((0, "ALCATEL-IND1-TRAP-MGR-MIB", "alaDgTrapStationIPType"), (0, "ALCATEL-IND1-TRAP-MGR-MIB", "alaDgTrapStationIP"))
if mibBuilder.loadTexts: alaDgTrapStationEntry.setStatus('current')
alaDgTrapStationIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 8, 1, 1), InetAddressType())
if mibBuilder.loadTexts: alaDgTrapStationIPType.setStatus('current')
alaDgTrapStationIP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 8, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: alaDgTrapStationIP.setStatus('current')
alaDgTrapStationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 8, 1, 3), Unsigned32().clone(162)).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDgTrapStationPort.setStatus('current')
alaDgTrapStationProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("v1", 1), ("v2", 2), ("v3", 3))).clone('v3')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDgTrapStationProtocol.setStatus('current')
alaDgTrapStationUser = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 8, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDgTrapStationUser.setStatus('current')
alaDgTrapStationReplay = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 8, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDgTrapStationReplay.setStatus('current')
alaDgTrapStationNextSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 1, 8, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDgTrapStationNextSeq.setStatus('current')
trapAbsorptionTrap = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 0, 1)).setObjects(("ALCATEL-IND1-TRAP-MGR-MIB", "trapAbsorStamp"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapAbsorTrapId"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapAbsorCounter"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapAbsorTime"))
if mibBuilder.loadTexts: trapAbsorptionTrap.setStatus('current')
trapNotif = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 3))
trapAbsorStamp = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 3, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trapAbsorStamp.setStatus('current')
trapAbsorTrapId = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1024))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trapAbsorTrapId.setStatus('current')
trapAbsorCounter = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 3, 3), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trapAbsorCounter.setStatus('current')
trapAbsorTime = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 1, 3, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: trapAbsorTime.setStatus('current')
alcatelIND1TrapMgrMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-TRAP-MGR-MIB", "trapMgtGroup"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapTrapsGroup"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapNotifGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1TrapMgrMIBCompliance = alcatelIND1TrapMgrMIBCompliance.setStatus('current')
trapMgtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-TRAP-MGR-MIB", "trapIndex"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapName"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapFamily"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapAbsorbPeriod"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapStationIP"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapStationPort"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapStationRowStatus"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapStationProtocol"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapStationUser"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapStationReplay"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapStationNextSeq"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapFilterStatus"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapAbsorption"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapToWebView"), ("ALCATEL-IND1-TRAP-MGR-MIB", "alaTrapInetStationPort"), ("ALCATEL-IND1-TRAP-MGR-MIB", "alaTrapInetStationRowStatus"), ("ALCATEL-IND1-TRAP-MGR-MIB", "alaTrapInetStationProtocol"), ("ALCATEL-IND1-TRAP-MGR-MIB", "alaTrapInetStationUser"), ("ALCATEL-IND1-TRAP-MGR-MIB", "alaTrapInetStationReplay"), ("ALCATEL-IND1-TRAP-MGR-MIB", "alaTrapInetStationNextSeq"), ("ALCATEL-IND1-TRAP-MGR-MIB", "alaTrapInetFilterStatus"), ("ALCATEL-IND1-TRAP-MGR-MIB", "alaDgTrapStationPort"), ("ALCATEL-IND1-TRAP-MGR-MIB", "alaDgTrapStationProtocol"), ("ALCATEL-IND1-TRAP-MGR-MIB", "alaDgTrapStationUser"), ("ALCATEL-IND1-TRAP-MGR-MIB", "alaDgTrapStationReplay"), ("ALCATEL-IND1-TRAP-MGR-MIB", "alaDgTrapStationNextSeq"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    trapMgtGroup = trapMgtGroup.setStatus('current')
trapTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-TRAP-MGR-MIB", "trapAbsorptionTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    trapTrapsGroup = trapTrapsGroup.setStatus('current')
trapNotifGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 2, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-TRAP-MGR-MIB", "trapAbsorStamp"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapAbsorTrapId"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapAbsorCounter"), ("ALCATEL-IND1-TRAP-MGR-MIB", "trapAbsorTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    trapNotifGroup = trapNotifGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-TRAP-MGR-MIB", alaTrapInetFilterEntry=alaTrapInetFilterEntry, trapFilterTable=trapFilterTable, trapFamily=trapFamily, trapStationEntry=trapStationEntry, trapStationUser=trapStationUser, alaTrapInetStationIP=alaTrapInetStationIP, alaTrapInetStationIPType=alaTrapInetStationIPType, alcatelIND1TrapMgrMIBObjects=alcatelIND1TrapMgrMIBObjects, alaDgTrapStationEntry=alaDgTrapStationEntry, alcatelIND1TrapMgrMIBNotifications=alcatelIND1TrapMgrMIBNotifications, trapStationPort=trapStationPort, alaTrapInetStationProtocol=alaTrapInetStationProtocol, alcatelIND1TrapMgrMIB=alcatelIND1TrapMgrMIB, trapToWebView=trapToWebView, trapNotifGroup=trapNotifGroup, alaTrapInetStationEntry=alaTrapInetStationEntry, trapConfigEntry=trapConfigEntry, trapIndex=trapIndex, trapAbsorTrapId=trapAbsorTrapId, alaTrapInetStationPort=alaTrapInetStationPort, trapStationRowStatus=trapStationRowStatus, alaTrapInetStationTable=alaTrapInetStationTable, trapName=trapName, alaTrapInetStationNextSeq=alaTrapInetStationNextSeq, trapAbsorCounter=trapAbsorCounter, trapStationIP=trapStationIP, trapStationProtocol=trapStationProtocol, alcatelIND1TrapMgrMIBConformance=alcatelIND1TrapMgrMIBConformance, alcatelIND1TrapMgrMIBCompliances=alcatelIND1TrapMgrMIBCompliances, alaTrapInetFilterStatus=alaTrapInetFilterStatus, trapAbsorStamp=trapAbsorStamp, alcatelIND1TrapMgrMIBCompliance=alcatelIND1TrapMgrMIBCompliance, trapMgtGroup=trapMgtGroup, alaDgTrapStationNextSeq=alaDgTrapStationNextSeq, trapStationReplay=trapStationReplay, alaDgTrapStationIPType=alaDgTrapStationIPType, trapFilterEntry=trapFilterEntry, alaDgTrapStationReplay=alaDgTrapStationReplay, trapNotif=trapNotif, alaTrapInetStationReplay=alaTrapInetStationReplay, trapFilterStatus=trapFilterStatus, alaDgTrapStationUser=alaDgTrapStationUser, trapMgt=trapMgt, alaTrapInetStationRowStatus=alaTrapInetStationRowStatus, alaDgTrapStationTable=alaDgTrapStationTable, trapTrapsGroup=trapTrapsGroup, alcatelIND1TrapMgrMIBGroups=alcatelIND1TrapMgrMIBGroups, alaDgTrapStationPort=alaDgTrapStationPort, trapConfigTable=trapConfigTable, alaDgTrapStationProtocol=alaDgTrapStationProtocol, trapAbsorTime=trapAbsorTime, trapAbsorptionTrap=trapAbsorptionTrap, alaDgTrapStationIP=alaDgTrapStationIP, alaTrapInetStationUser=alaTrapInetStationUser, trapStationNextSeq=trapStationNextSeq, trapAbsorbPeriod=trapAbsorbPeriod, trapStationTable=trapStationTable, PYSNMP_MODULE_ID=alcatelIND1TrapMgrMIB, trapAbsorption=trapAbsorption, alaTrapInetFilterTable=alaTrapInetFilterTable)
