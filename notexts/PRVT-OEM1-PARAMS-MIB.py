#
# PySNMP MIB module PRVT-OEM1-PARAMS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binos/PRVT-OEM1-PARAMS-MIB
# Produced by pysmi-1.1.3 at Mon Nov 22 11:54:19 2021
# On host fv-az33-360 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
switch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "switch")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Bits, Gauge32, Counter64, MibIdentifier, iso, NotificationType, Counter32, TimeTicks, IpAddress, ModuleIdentity, Unsigned32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Bits", "Gauge32", "Counter64", "MibIdentifier", "iso", "NotificationType", "Counter32", "TimeTicks", "IpAddress", "ModuleIdentity", "Unsigned32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
prvtOem1ParamsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110))
prvtOem1ParamsMIB.setRevisions(('2006-12-27 00:00',))
if mibBuilder.loadTexts: prvtOem1ParamsMIB.setLastUpdated('200612270000Z')
if mibBuilder.loadTexts: prvtOem1ParamsMIB.setOrganization('BATM Advanced Communication')
prvtOem1ParamsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110, 1))
prvtOem1ParamsNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110, 2))
prvtOem1ParamsConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110, 3))
prvtSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSerialNumber.setStatus('current')
prvtAssemblyNumber = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtAssemblyNumber.setStatus('current')
prvtHardwareRevision = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHardwareRevision.setStatus('current')
prvtSwitchRevision = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSwitchRevision.setStatus('current')
prvtSwitchVersion = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSwitchVersion.setStatus('current')
prvtSwitchEdition = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSwitchEdition.setStatus('current')
prvtSwitchRepair = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSwitchRepair.setStatus('current')
prvtHardwareAddress = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHardwareAddress.setStatus('current')
prvtCabinetRow = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCabinetRow.setStatus('current')
prvtCabinetColumn = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCabinetColumn.setStatus('current')
prvtChassisVerticalDeviation = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtChassisVerticalDeviation.setStatus('current')
prvtChassisHorizontalDeviatioin = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtChassisHorizontalDeviatioin.setStatus('current')
prvtCabinetHMSNumber = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtCabinetHMSNumber.setStatus('current')
prvtSubrackHMSNumber = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSubrackHMSNumber.setStatus('current')
prvtModelNumber = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtModelNumber.setStatus('current')
prvtPluginUID = MibScalar((1, 3, 6, 1, 4, 1, 738, 1, 5, 2110, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPluginUID.setStatus('current')
mibBuilder.exportSymbols("PRVT-OEM1-PARAMS-MIB", prvtHardwareAddress=prvtHardwareAddress, prvtSwitchRevision=prvtSwitchRevision, prvtSerialNumber=prvtSerialNumber, prvtCabinetRow=prvtCabinetRow, prvtOem1ParamsConformance=prvtOem1ParamsConformance, prvtModelNumber=prvtModelNumber, prvtSwitchEdition=prvtSwitchEdition, prvtSubrackHMSNumber=prvtSubrackHMSNumber, prvtOem1ParamsObjects=prvtOem1ParamsObjects, prvtOem1ParamsMIB=prvtOem1ParamsMIB, prvtHardwareRevision=prvtHardwareRevision, prvtSwitchRepair=prvtSwitchRepair, prvtOem1ParamsNotifications=prvtOem1ParamsNotifications, prvtChassisHorizontalDeviatioin=prvtChassisHorizontalDeviatioin, prvtPluginUID=prvtPluginUID, PYSNMP_MODULE_ID=prvtOem1ParamsMIB, prvtAssemblyNumber=prvtAssemblyNumber, prvtCabinetHMSNumber=prvtCabinetHMSNumber, prvtCabinetColumn=prvtCabinetColumn, prvtSwitchVersion=prvtSwitchVersion, prvtChassisVerticalDeviation=prvtChassisVerticalDeviation)
