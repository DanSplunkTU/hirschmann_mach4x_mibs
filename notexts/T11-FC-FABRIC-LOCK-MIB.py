#
# PySNMP MIB module T11-FC-FABRIC-LOCK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/T11-FC-FABRIC-LOCK-MIB
# Produced by pysmi-1.1.8 at Sat Jan 15 04:27:40 2022
# On host fv-az83-73 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
fcmInstanceIndex, fcmSwitchIndex = mibBuilder.importSymbols("FC-MGMT-MIB", "fcmInstanceIndex", "fcmSwitchIndex")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
iso, mib_2, TimeTicks, Gauge32, ObjectIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Bits, NotificationType, Integer32, ModuleIdentity, Counter32, Counter64, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "mib-2", "TimeTicks", "Gauge32", "ObjectIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Bits", "NotificationType", "Integer32", "ModuleIdentity", "Counter32", "Counter64", "IpAddress")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
T11NsGs4RejectReasonCode, = mibBuilder.importSymbols("T11-FC-NAME-SERVER-MIB", "T11NsGs4RejectReasonCode")
T11FabricIndex, = mibBuilder.importSymbols("T11-TC-MIB", "T11FabricIndex")
t11FabricLockMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 159))
t11FabricLockMIB.setRevisions(('2007-06-27 00:00',))
if mibBuilder.loadTexts: t11FabricLockMIB.setLastUpdated('200706270000Z')
if mibBuilder.loadTexts: t11FabricLockMIB.setOrganization("For the initial versions, T11. For later versions, the IETF's IMSS Working Group.")
t11FLockMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 159, 1))
t11FLockMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 159, 2))
t11FLockMIBNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 159, 0))
t11FLockConfiguration = MibIdentifier((1, 3, 6, 1, 2, 1, 159, 1, 1))
t11FLockTable = MibTable((1, 3, 6, 1, 2, 1, 159, 1, 1, 1), )
if mibBuilder.loadTexts: t11FLockTable.setStatus('current')
t11FLockEntry = MibTableRow((1, 3, 6, 1, 2, 1, 159, 1, 1, 1, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-FABRIC-LOCK-MIB", "t11FLockFabricIndex"), (0, "T11-FC-FABRIC-LOCK-MIB", "t11FLockApplicationID"))
if mibBuilder.loadTexts: t11FLockEntry.setStatus('current')
t11FLockFabricIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 159, 1, 1, 1, 1, 1), T11FabricIndex())
if mibBuilder.loadTexts: t11FLockFabricIndex.setStatus('current')
t11FLockApplicationID = MibTableColumn((1, 3, 6, 1, 2, 1, 159, 1, 1, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1))
if mibBuilder.loadTexts: t11FLockApplicationID.setStatus('current')
t11FLockInitiatorType = MibTableColumn((1, 3, 6, 1, 2, 1, 159, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ssb", 2), ("cli", 3), ("snmp", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FLockInitiatorType.setStatus('current')
t11FLockInitiator = MibTableColumn((1, 3, 6, 1, 2, 1, 159, 1, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FLockInitiator.setStatus('current')
t11FLockInitiatorIpAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 159, 1, 1, 1, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FLockInitiatorIpAddrType.setStatus('current')
t11FLockInitiatorIpAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 159, 1, 1, 1, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FLockInitiatorIpAddr.setStatus('current')
t11FLockStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 159, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("settingUp", 2), ("rejectFailure", 3), ("otherFailure", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FLockStatus.setStatus('current')
t11FLockRejectReasonCode = MibTableColumn((1, 3, 6, 1, 2, 1, 159, 1, 1, 1, 1, 8), T11NsGs4RejectReasonCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FLockRejectReasonCode.setStatus('current')
t11FLockRejectReasonCodeExp = MibTableColumn((1, 3, 6, 1, 2, 1, 159, 1, 1, 1, 1, 9), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FLockRejectReasonCodeExp.setStatus('current')
t11FLockRejectReasonVendorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 159, 1, 1, 1, 1, 10), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FLockRejectReasonVendorCode.setStatus('current')
t11FLockRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 159, 1, 1, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FLockRowStatus.setStatus('current')
t11FLockMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 159, 2, 1))
t11FLockMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 159, 2, 2))
t11FLockMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 159, 2, 1, 1)).setObjects(("T11-FC-FABRIC-LOCK-MIB", "t11FLockActiveGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FLockMIBCompliance = t11FLockMIBCompliance.setStatus('current')
t11FLockActiveGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 159, 2, 2, 1)).setObjects(("T11-FC-FABRIC-LOCK-MIB", "t11FLockInitiatorType"), ("T11-FC-FABRIC-LOCK-MIB", "t11FLockInitiator"), ("T11-FC-FABRIC-LOCK-MIB", "t11FLockInitiatorIpAddrType"), ("T11-FC-FABRIC-LOCK-MIB", "t11FLockInitiatorIpAddr"), ("T11-FC-FABRIC-LOCK-MIB", "t11FLockStatus"), ("T11-FC-FABRIC-LOCK-MIB", "t11FLockRejectReasonCode"), ("T11-FC-FABRIC-LOCK-MIB", "t11FLockRejectReasonCodeExp"), ("T11-FC-FABRIC-LOCK-MIB", "t11FLockRejectReasonVendorCode"), ("T11-FC-FABRIC-LOCK-MIB", "t11FLockRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FLockActiveGroup = t11FLockActiveGroup.setStatus('current')
mibBuilder.exportSymbols("T11-FC-FABRIC-LOCK-MIB", t11FLockInitiator=t11FLockInitiator, t11FLockTable=t11FLockTable, t11FLockInitiatorIpAddrType=t11FLockInitiatorIpAddrType, t11FLockMIBObjects=t11FLockMIBObjects, t11FLockConfiguration=t11FLockConfiguration, t11FLockMIBGroups=t11FLockMIBGroups, PYSNMP_MODULE_ID=t11FabricLockMIB, t11FLockStatus=t11FLockStatus, t11FLockInitiatorIpAddr=t11FLockInitiatorIpAddr, t11FLockFabricIndex=t11FLockFabricIndex, t11FLockMIBNotifications=t11FLockMIBNotifications, t11FLockRejectReasonCode=t11FLockRejectReasonCode, t11FLockMIBConformance=t11FLockMIBConformance, t11FabricLockMIB=t11FabricLockMIB, t11FLockActiveGroup=t11FLockActiveGroup, t11FLockInitiatorType=t11FLockInitiatorType, t11FLockMIBCompliance=t11FLockMIBCompliance, t11FLockEntry=t11FLockEntry, t11FLockRowStatus=t11FLockRowStatus, t11FLockRejectReasonCodeExp=t11FLockRejectReasonCodeExp, t11FLockApplicationID=t11FLockApplicationID, t11FLockMIBCompliances=t11FLockMIBCompliances, t11FLockRejectReasonVendorCode=t11FLockRejectReasonVendorCode)
