#
# PySNMP MIB module ALCATEL-IND1-HEALTH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-HEALTH-MIB
# Produced by pysmi-1.1.8 at Thu Jan  6 19:44:27 2022
# On host fv-az121-779 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
softentIND1Health, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1Health")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter32, ObjectIdentity, Counter64, TimeTicks, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, iso, IpAddress, MibIdentifier, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "Counter64", "TimeTicks", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "iso", "IpAddress", "MibIdentifier", "Integer32", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
alcatelIND1HealthMonitorMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1))
alcatelIND1HealthMonitorMIB.setRevisions(('2010-05-13 00:00', '2007-04-03 00:00',))
if mibBuilder.loadTexts: alcatelIND1HealthMonitorMIB.setLastUpdated('201005130000Z')
if mibBuilder.loadTexts: alcatelIND1HealthMonitorMIB.setOrganization('Alcatel-Lucent')
alcatelIND1HealthMonitorMIBNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 0))
if mibBuilder.loadTexts: alcatelIND1HealthMonitorMIBNotifications.setStatus('current')
alcatelIND1HealthMonitorMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1))
if mibBuilder.loadTexts: alcatelIND1HealthMonitorMIBObjects.setStatus('current')
alcatelIND1HealthMonitorMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 2))
if mibBuilder.loadTexts: alcatelIND1HealthMonitorMIBConformance.setStatus('current')
alcatelIND1HealthMonitorMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1HealthMonitorMIBGroups.setStatus('current')
alcatelIND1HealthMonitorMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1HealthMonitorMIBCompliances.setStatus('current')
healthModuleInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1))
healthModuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1), )
if mibBuilder.loadTexts: healthModuleTable.setStatus('current')
healthModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-HEALTH-MIB", "healthModuleSlot"))
if mibBuilder.loadTexts: healthModuleEntry.setStatus('current')
healthModuleSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7016)))
if mibBuilder.loadTexts: healthModuleSlot.setStatus('current')
healthModuleRx1MinAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthModuleRx1MinAvg.setStatus('current')
healthModuleRx1HrAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthModuleRx1HrAvg.setStatus('current')
healthModuleRx1DayAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthModuleRx1DayAvg.setStatus('current')
healthModuleRxTx1MinAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthModuleRxTx1MinAvg.setStatus('current')
healthModuleRxTx1HrAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthModuleRxTx1HrAvg.setStatus('current')
healthModuleRxTx1DayAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthModuleRxTx1DayAvg.setStatus('current')
healthModuleMemory1MinAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthModuleMemory1MinAvg.setStatus('current')
healthModuleMemory1HrAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthModuleMemory1HrAvg.setStatus('current')
healthModuleMemory1DayAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthModuleMemory1DayAvg.setStatus('current')
healthModuleCpu1MinAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthModuleCpu1MinAvg.setStatus('current')
healthModuleCpu1HrAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthModuleCpu1HrAvg.setStatus('current')
healthModuleCpu1DayAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthModuleCpu1DayAvg.setStatus('current')
healthModuleChassisId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthModuleChassisId.setStatus('current')
healthModuleCpuLatest = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthModuleCpuLatest.setStatus('current')
healthModuleMemoryLatest = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthModuleMemoryLatest.setStatus('current')
healthModuleRxLatest = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthModuleRxLatest.setStatus('current')
healthModuleRxTxLatest = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthModuleRxTxLatest.setStatus('current')
healthPortInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 2))
healthPortTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 2, 1), )
if mibBuilder.loadTexts: healthPortTable.setStatus('current')
healthPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 2, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-HEALTH-MIB", "healthPortIfIndex"))
if mibBuilder.loadTexts: healthPortEntry.setStatus('current')
healthPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: healthPortIfIndex.setStatus('current')
healthPortRx1MinAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthPortRx1MinAvg.setStatus('current')
healthPortRx1HrAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthPortRx1HrAvg.setStatus('current')
healthPortRx1DayAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthPortRx1DayAvg.setStatus('current')
healthPortRxTx1MinAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthPortRxTx1MinAvg.setStatus('current')
healthPortRxTx1HrAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthPortRxTx1HrAvg.setStatus('current')
healthPortRxTx1DayAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthPortRxTx1DayAvg.setStatus('current')
healthControlInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 3))
healthSamplingInterval = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: healthSamplingInterval.setStatus('current')
healthThreshInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 4))
healthThreshRxLimit = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: healthThreshRxLimit.setStatus('current')
healthThreshRxTxLimit = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: healthThreshRxTxLimit.setStatus('current')
healthThreshMemoryLimit = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: healthThreshMemoryLimit.setStatus('current')
healthThreshCpuLimit = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(80)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: healthThreshCpuLimit.setStatus('current')
healthThreshFlashLimit = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(75)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: healthThreshFlashLimit.setStatus('current')
healthTrapInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 5))
healthMonRxStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("crossedBelowThreshold", 1), ("noChange", 2), ("crossedAboveThreshold", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthMonRxStatus.setStatus('current')
healthMonRxTxStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("crossedBelowThreshold", 1), ("noChange", 2), ("crossedAboveThreshold", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthMonRxTxStatus.setStatus('current')
healthMonMemoryStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("crossedBelowThreshold", 1), ("noChange", 2), ("crossedAboveThreshold", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthMonMemoryStatus.setStatus('current')
healthMonCpuStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("crossedBelowThreshold", 1), ("noChange", 2), ("crossedAboveThreshold", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthMonCpuStatus.setStatus('current')
healthMonFlashStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 1, 5, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("crossedBelowThreshold", 1), ("noChange", 2), ("crossedAboveThreshold", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: healthMonFlashStatus.setStatus('current')
healthMonModuleTrap = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 0, 1)).setObjects(("ALCATEL-IND1-HEALTH-MIB", "healthModuleSlot"), ("ALCATEL-IND1-HEALTH-MIB", "healthMonRxStatus"), ("ALCATEL-IND1-HEALTH-MIB", "healthMonRxTxStatus"), ("ALCATEL-IND1-HEALTH-MIB", "healthMonMemoryStatus"), ("ALCATEL-IND1-HEALTH-MIB", "healthMonCpuStatus"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleChassisId"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleCpuLatest"))
if mibBuilder.loadTexts: healthMonModuleTrap.setStatus('current')
healthMonPortTrap = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 0, 2)).setObjects(("ALCATEL-IND1-HEALTH-MIB", "healthPortIfIndex"), ("ALCATEL-IND1-HEALTH-MIB", "healthMonRxStatus"), ("ALCATEL-IND1-HEALTH-MIB", "healthMonRxTxStatus"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleChassisId"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleSlot"))
if mibBuilder.loadTexts: healthMonPortTrap.setStatus('current')
healthMonCmmTrap = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 0, 3)).setObjects(("ALCATEL-IND1-HEALTH-MIB", "healthMonMemoryStatus"), ("ALCATEL-IND1-HEALTH-MIB", "healthMonCpuStatus"), ("ALCATEL-IND1-HEALTH-MIB", "healthMonFlashStatus"))
if mibBuilder.loadTexts: healthMonCmmTrap.setStatus('current')
alcatelIND1HealthMonitorMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-HEALTH-MIB", "healthModuleGroup"), ("ALCATEL-IND1-HEALTH-MIB", "healthPortGroup"), ("ALCATEL-IND1-HEALTH-MIB", "healthControlGroup"), ("ALCATEL-IND1-HEALTH-MIB", "healthThreshGroup"), ("ALCATEL-IND1-HEALTH-MIB", "healthTrapsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1HealthMonitorMIBCompliance = alcatelIND1HealthMonitorMIBCompliance.setStatus('current')
healthModuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-HEALTH-MIB", "healthModuleRx1MinAvg"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleRx1HrAvg"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleRx1DayAvg"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleRxTx1MinAvg"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleRxTx1HrAvg"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleRxTx1DayAvg"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleMemory1MinAvg"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleMemory1HrAvg"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleMemory1DayAvg"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleCpu1MinAvg"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleCpu1HrAvg"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleCpu1DayAvg"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleChassisId"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleCpuLatest"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleMemoryLatest"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleRxLatest"), ("ALCATEL-IND1-HEALTH-MIB", "healthModuleRxTxLatest"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    healthModuleGroup = healthModuleGroup.setStatus('current')
healthPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-HEALTH-MIB", "healthPortRx1MinAvg"), ("ALCATEL-IND1-HEALTH-MIB", "healthPortRx1HrAvg"), ("ALCATEL-IND1-HEALTH-MIB", "healthPortRx1DayAvg"), ("ALCATEL-IND1-HEALTH-MIB", "healthPortRxTx1MinAvg"), ("ALCATEL-IND1-HEALTH-MIB", "healthPortRxTx1HrAvg"), ("ALCATEL-IND1-HEALTH-MIB", "healthPortRxTx1DayAvg"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    healthPortGroup = healthPortGroup.setStatus('current')
healthControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-HEALTH-MIB", "healthSamplingInterval"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    healthControlGroup = healthControlGroup.setStatus('current')
healthThreshGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-HEALTH-MIB", "healthThreshRxLimit"), ("ALCATEL-IND1-HEALTH-MIB", "healthThreshRxTxLimit"), ("ALCATEL-IND1-HEALTH-MIB", "healthThreshMemoryLimit"), ("ALCATEL-IND1-HEALTH-MIB", "healthThreshCpuLimit"), ("ALCATEL-IND1-HEALTH-MIB", "healthThreshFlashLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    healthThreshGroup = healthThreshGroup.setStatus('current')
healthTrapObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-HEALTH-MIB", "healthMonRxStatus"), ("ALCATEL-IND1-HEALTH-MIB", "healthMonRxTxStatus"), ("ALCATEL-IND1-HEALTH-MIB", "healthMonMemoryStatus"), ("ALCATEL-IND1-HEALTH-MIB", "healthMonCpuStatus"), ("ALCATEL-IND1-HEALTH-MIB", "healthMonFlashStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    healthTrapObjectsGroup = healthTrapObjectsGroup.setStatus('current')
healthTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 16, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-HEALTH-MIB", "healthMonModuleTrap"), ("ALCATEL-IND1-HEALTH-MIB", "healthMonPortTrap"), ("ALCATEL-IND1-HEALTH-MIB", "healthMonCmmTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    healthTrapsGroup = healthTrapsGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-HEALTH-MIB", healthModuleTable=healthModuleTable, alcatelIND1HealthMonitorMIBCompliances=alcatelIND1HealthMonitorMIBCompliances, healthMonRxTxStatus=healthMonRxTxStatus, healthMonCmmTrap=healthMonCmmTrap, healthMonFlashStatus=healthMonFlashStatus, healthThreshCpuLimit=healthThreshCpuLimit, healthThreshRxLimit=healthThreshRxLimit, healthModuleSlot=healthModuleSlot, alcatelIND1HealthMonitorMIBObjects=alcatelIND1HealthMonitorMIBObjects, healthPortEntry=healthPortEntry, healthModuleEntry=healthModuleEntry, healthSamplingInterval=healthSamplingInterval, healthControlGroup=healthControlGroup, healthMonCpuStatus=healthMonCpuStatus, healthModuleGroup=healthModuleGroup, healthModuleInfo=healthModuleInfo, alcatelIND1HealthMonitorMIB=alcatelIND1HealthMonitorMIB, healthModuleRxTx1DayAvg=healthModuleRxTx1DayAvg, healthPortRx1DayAvg=healthPortRx1DayAvg, healthModuleRx1MinAvg=healthModuleRx1MinAvg, healthModuleRxTxLatest=healthModuleRxTxLatest, healthModuleCpu1DayAvg=healthModuleCpu1DayAvg, healthThreshGroup=healthThreshGroup, alcatelIND1HealthMonitorMIBNotifications=alcatelIND1HealthMonitorMIBNotifications, healthModuleChassisId=healthModuleChassisId, healthModuleMemoryLatest=healthModuleMemoryLatest, healthMonMemoryStatus=healthMonMemoryStatus, alcatelIND1HealthMonitorMIBGroups=alcatelIND1HealthMonitorMIBGroups, healthMonRxStatus=healthMonRxStatus, healthModuleRx1HrAvg=healthModuleRx1HrAvg, healthPortRxTx1MinAvg=healthPortRxTx1MinAvg, healthThreshFlashLimit=healthThreshFlashLimit, healthModuleMemory1HrAvg=healthModuleMemory1HrAvg, healthControlInfo=healthControlInfo, alcatelIND1HealthMonitorMIBConformance=alcatelIND1HealthMonitorMIBConformance, healthTrapsGroup=healthTrapsGroup, healthPortRxTx1DayAvg=healthPortRxTx1DayAvg, healthModuleRxLatest=healthModuleRxLatest, healthModuleRx1DayAvg=healthModuleRx1DayAvg, healthModuleMemory1DayAvg=healthModuleMemory1DayAvg, healthModuleRxTx1HrAvg=healthModuleRxTx1HrAvg, healthPortInfo=healthPortInfo, healthPortTable=healthPortTable, healthThreshInfo=healthThreshInfo, healthPortRx1HrAvg=healthPortRx1HrAvg, healthThreshRxTxLimit=healthThreshRxTxLimit, PYSNMP_MODULE_ID=alcatelIND1HealthMonitorMIB, healthPortRx1MinAvg=healthPortRx1MinAvg, healthPortIfIndex=healthPortIfIndex, healthThreshMemoryLimit=healthThreshMemoryLimit, healthTrapInfo=healthTrapInfo, healthMonPortTrap=healthMonPortTrap, healthTrapObjectsGroup=healthTrapObjectsGroup, healthMonModuleTrap=healthMonModuleTrap, healthModuleCpu1MinAvg=healthModuleCpu1MinAvg, healthModuleCpu1HrAvg=healthModuleCpu1HrAvg, alcatelIND1HealthMonitorMIBCompliance=alcatelIND1HealthMonitorMIBCompliance, healthModuleRxTx1MinAvg=healthModuleRxTx1MinAvg, healthModuleCpuLatest=healthModuleCpuLatest, healthModuleMemory1MinAvg=healthModuleMemory1MinAvg, healthPortRxTx1HrAvg=healthPortRxTx1HrAvg, healthPortGroup=healthPortGroup)
