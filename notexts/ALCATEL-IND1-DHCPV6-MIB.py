#
# PySNMP MIB module ALCATEL-IND1-DHCPV6-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-DHCPV6-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 16:32:28 2022
# On host fv-az36-988 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
softentIND1Ipv6, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1Ipv6")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ipv6IfIndex, = mibBuilder.importSymbols("IPV6-MIB", "ipv6IfIndex")
Ipv6IfIndexOrZero, Ipv6Address = mibBuilder.importSymbols("IPV6-TC", "Ipv6IfIndexOrZero", "Ipv6Address")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
iso, ModuleIdentity, Counter32, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Gauge32, TimeTicks, MibIdentifier, Integer32, Unsigned32, IpAddress, ObjectIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ModuleIdentity", "Counter32", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Gauge32", "TimeTicks", "MibIdentifier", "Integer32", "Unsigned32", "IpAddress", "ObjectIdentity", "NotificationType")
RowStatus, TextualConvention, TimeStamp, DateAndTime, DisplayString, PhysAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TimeStamp", "DateAndTime", "DisplayString", "PhysAddress", "TruthValue")
alcatelIND1DHCPv6MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2))
alcatelIND1DHCPv6MIB.setRevisions(('2013-03-22 00:00',))
if mibBuilder.loadTexts: alcatelIND1DHCPv6MIB.setLastUpdated('201303220000Z')
if mibBuilder.loadTexts: alcatelIND1DHCPv6MIB.setOrganization('Alcatel-Lucent')
alcatelIND1DHCPv6MIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1))
alaDHCPv6RelayConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 1))
alaDHCPv6RelayAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDHCPv6RelayAdminStatus.setStatus('current')
alaDHCPv6SrvConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 2))
alaDHCPv6SrvGlobalConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDHCPv6SrvGlobalConfigStatus.setStatus('current')
alaDHCPv6SrvGlobalRestart = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("restart", 2))).clone('inactive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDHCPv6SrvGlobalRestart.setStatus('current')
alaDHCPv6SrvGlobalClearStat = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("reset", 2))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDHCPv6SrvGlobalClearStat.setStatus('current')
alaDHCPv6RelayInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 3), )
if mibBuilder.loadTexts: alaDHCPv6RelayInterfaceTable.setStatus('current')
alaDHCPv6RelayInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 3, 1), ).setIndexNames((0, "IPV6-MIB", "ipv6IfIndex"))
if mibBuilder.loadTexts: alaDHCPv6RelayInterfaceEntry.setStatus('current')
alaDHCPv6RelayInterfaceAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDHCPv6RelayInterfaceAdminStatus.setStatus('current')
alaDHCPv6RelayDestinationTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 4), )
if mibBuilder.loadTexts: alaDHCPv6RelayDestinationTable.setStatus('current')
alaDHCPv6RelayDestinationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 4, 1), ).setIndexNames((0, "IPV6-MIB", "ipv6IfIndex"), (0, "ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6RelayDestinationAddressType"), (0, "ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6RelayDestinationAddress"))
if mibBuilder.loadTexts: alaDHCPv6RelayDestinationEntry.setStatus('current')
alaDHCPv6RelayDestinationAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 4, 1, 1), InetAddressType())
if mibBuilder.loadTexts: alaDHCPv6RelayDestinationAddressType.setStatus('current')
alaDHCPv6RelayDestinationAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 4, 1, 2), InetAddress())
if mibBuilder.loadTexts: alaDHCPv6RelayDestinationAddress.setStatus('current')
alaDHCPv6RelayDestinationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDHCPv6RelayDestinationRowStatus.setStatus('current')
alaDHCPv6SrvLease = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 5))
alaDHCPv6SrvLeaseTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 5, 1), )
if mibBuilder.loadTexts: alaDHCPv6SrvLeaseTable.setStatus('current')
alaDHCPv6SrvLeaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 5, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6SrvLeaseIpv6Address"))
if mibBuilder.loadTexts: alaDHCPv6SrvLeaseEntry.setStatus('current')
alaDHCPv6SrvLeaseIpv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 5, 1, 1, 1), Ipv6Address())
if mibBuilder.loadTexts: alaDHCPv6SrvLeaseIpv6Address.setStatus('current')
alaDHCPv6SrvLeaseLeaseGrant = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 5, 1, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDHCPv6SrvLeaseLeaseGrant.setStatus('current')
alaDHCPv6SrvLeasePrefLeaseExpiry = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 5, 1, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDHCPv6SrvLeasePrefLeaseExpiry.setStatus('current')
alaDHCPv6SrvLeaseValidLeaseExpiry = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 5, 1, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDHCPv6SrvLeaseValidLeaseExpiry.setStatus('current')
alaDHCPv6SrvLeaseType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unavailable", 1), ("dynamic", 2), ("manual", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDHCPv6SrvLeaseType.setStatus('current')
alcatelIND1DHCPv6MIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 0))
alaDHCPv6SrvTrapsObj = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 6))
alaDHCPv6SrvLeaseUtilizationThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 0, 1)).setObjects(("ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6SrvLeaseThresholdStatus"), ("ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6SrvSubnetDescriptor"))
if mibBuilder.loadTexts: alaDHCPv6SrvLeaseUtilizationThresholdTrap.setStatus('current')
alaDHCPv6SrvLeaseThresholdStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("crossedBelow80Threshold", 1), ("crossedAbove80Threshold", 2), ("reached100Threshold", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDHCPv6SrvLeaseThresholdStatus.setStatus('current')
alaDHCPv6SrvSubnetDescriptor = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 1, 6, 2), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDHCPv6SrvSubnetDescriptor.setStatus('current')
alcatelIND1DHCPv6MIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 2))
alcatelIND1DHCPv6MIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 2, 1))
alcatelIND1DHCPv6MIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 2, 2))
alaDHCPv6Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 2, 1, 1)).setObjects(("ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6RelayGroup"), ("ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6SrvGroup"), ("ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6SrvNotificationsGroup"), ("ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6SrvLeaseUtilizationThresholdGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDHCPv6Compliance = alaDHCPv6Compliance.setStatus('current')
alaDHCPv6RelayGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 2, 2, 1)).setObjects(("ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6RelayAdminStatus"), ("ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6RelayInterfaceAdminStatus"), ("ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6RelayDestinationRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDHCPv6RelayGroup = alaDHCPv6RelayGroup.setStatus('current')
alaDHCPv6SrvGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 2, 2, 2)).setObjects(("ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6SrvGlobalConfigStatus"), ("ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6SrvGlobalRestart"), ("ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6SrvGlobalClearStat"), ("ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6SrvLeaseLeaseGrant"), ("ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6SrvLeasePrefLeaseExpiry"), ("ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6SrvLeaseValidLeaseExpiry"), ("ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6SrvLeaseType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDHCPv6SrvGroup = alaDHCPv6SrvGroup.setStatus('current')
alaDHCPv6SrvNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 2, 2, 3)).setObjects(("ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6SrvLeaseUtilizationThresholdTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDHCPv6SrvNotificationsGroup = alaDHCPv6SrvNotificationsGroup.setStatus('current')
alaDHCPv6SrvLeaseUtilizationThresholdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 29, 2, 2, 2, 4)).setObjects(("ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6SrvLeaseThresholdStatus"), ("ALCATEL-IND1-DHCPV6-MIB", "alaDHCPv6SrvSubnetDescriptor"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDHCPv6SrvLeaseUtilizationThresholdGroup = alaDHCPv6SrvLeaseUtilizationThresholdGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-DHCPV6-MIB", alcatelIND1DHCPv6MIBGroups=alcatelIND1DHCPv6MIBGroups, alaDHCPv6SrvLeaseEntry=alaDHCPv6SrvLeaseEntry, alaDHCPv6SrvLeaseIpv6Address=alaDHCPv6SrvLeaseIpv6Address, alaDHCPv6RelayDestinationAddressType=alaDHCPv6RelayDestinationAddressType, alaDHCPv6SrvLeaseUtilizationThresholdTrap=alaDHCPv6SrvLeaseUtilizationThresholdTrap, alaDHCPv6RelayDestinationRowStatus=alaDHCPv6RelayDestinationRowStatus, alaDHCPv6Compliance=alaDHCPv6Compliance, alaDHCPv6SrvGlobalClearStat=alaDHCPv6SrvGlobalClearStat, alaDHCPv6SrvLeaseLeaseGrant=alaDHCPv6SrvLeaseLeaseGrant, alaDHCPv6RelayConfig=alaDHCPv6RelayConfig, alaDHCPv6RelayAdminStatus=alaDHCPv6RelayAdminStatus, alaDHCPv6RelayGroup=alaDHCPv6RelayGroup, PYSNMP_MODULE_ID=alcatelIND1DHCPv6MIB, alaDHCPv6SrvTrapsObj=alaDHCPv6SrvTrapsObj, alaDHCPv6SrvGroup=alaDHCPv6SrvGroup, alaDHCPv6SrvLeaseTable=alaDHCPv6SrvLeaseTable, alaDHCPv6SrvNotificationsGroup=alaDHCPv6SrvNotificationsGroup, alaDHCPv6SrvLeasePrefLeaseExpiry=alaDHCPv6SrvLeasePrefLeaseExpiry, alcatelIND1DHCPv6MIBConformance=alcatelIND1DHCPv6MIBConformance, alaDHCPv6RelayInterfaceTable=alaDHCPv6RelayInterfaceTable, alaDHCPv6RelayDestinationTable=alaDHCPv6RelayDestinationTable, alaDHCPv6SrvLeaseUtilizationThresholdGroup=alaDHCPv6SrvLeaseUtilizationThresholdGroup, alaDHCPv6RelayDestinationAddress=alaDHCPv6RelayDestinationAddress, alaDHCPv6SrvLeaseThresholdStatus=alaDHCPv6SrvLeaseThresholdStatus, alaDHCPv6SrvConfig=alaDHCPv6SrvConfig, alaDHCPv6SrvLeaseValidLeaseExpiry=alaDHCPv6SrvLeaseValidLeaseExpiry, alcatelIND1DHCPv6MIBCompliances=alcatelIND1DHCPv6MIBCompliances, alaDHCPv6RelayInterfaceAdminStatus=alaDHCPv6RelayInterfaceAdminStatus, alcatelIND1DHCPv6MIB=alcatelIND1DHCPv6MIB, alaDHCPv6SrvGlobalConfigStatus=alaDHCPv6SrvGlobalConfigStatus, alaDHCPv6RelayDestinationEntry=alaDHCPv6RelayDestinationEntry, alaDHCPv6RelayInterfaceEntry=alaDHCPv6RelayInterfaceEntry, alaDHCPv6SrvLeaseType=alaDHCPv6SrvLeaseType, alaDHCPv6SrvSubnetDescriptor=alaDHCPv6SrvSubnetDescriptor, alaDHCPv6SrvLease=alaDHCPv6SrvLease, alcatelIND1DHCPv6MIBObjects=alcatelIND1DHCPv6MIBObjects, alcatelIND1DHCPv6MIBNotifications=alcatelIND1DHCPv6MIBNotifications, alaDHCPv6SrvGlobalRestart=alaDHCPv6SrvGlobalRestart)
