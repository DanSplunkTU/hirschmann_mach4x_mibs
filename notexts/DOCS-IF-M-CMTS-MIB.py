#
# PySNMP MIB module DOCS-IF-M-CMTS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/DOCS-IF-M-CMTS-MIB
# Produced by pysmi-1.1.8 at Sat Jan 15 04:27:41 2022
# On host fv-az83-73 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
clabProjDocsis, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabProjDocsis")
TenthdBmV, = mibBuilder.importSymbols("DOCS-IF-MIB", "TenthdBmV")
docsQosServiceFlowId, = mibBuilder.importSymbols("DOCS-QOS-MIB", "docsQosServiceFlowId")
PhysicalIndexOrZero, entPhysicalClass, entPhysicalAlias, PhysicalIndex, entityLogical2Group, entPhysicalAssetID, entityPhysical3Group, entityGeneralGroup, entPhysicalSerialNum, entityPhysicalGroup, entityPhysical2Group, entityMappingGroup = mibBuilder.importSymbols("ENTITY-MIB", "PhysicalIndexOrZero", "entPhysicalClass", "entPhysicalAlias", "PhysicalIndex", "entityLogical2Group", "entPhysicalAssetID", "entityPhysical3Group", "entityGeneralGroup", "entPhysicalSerialNum", "entityPhysicalGroup", "entityPhysical2Group", "entityMappingGroup")
InterfaceIndexOrZero, ifIndex, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "ifIndex", "InterfaceIndex")
InetPortNumber, InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetAddressType", "InetAddress")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
SnmpTagValue, = mibBuilder.importSymbols("SNMP-TARGET-MIB", "SnmpTagValue")
ModuleCompliance, ObjectGroup, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup", "NotificationGroup")
Gauge32, ObjectIdentity, TimeTicks, iso, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, Bits, NotificationType, Integer32, ModuleIdentity, Counter32, Counter64, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "ObjectIdentity", "TimeTicks", "iso", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "Bits", "NotificationType", "Integer32", "ModuleIdentity", "Counter32", "Counter64", "IpAddress")
RowStatus, TextualConvention, StorageType, DisplayString, TruthValue, AutonomousType, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "StorageType", "DisplayString", "TruthValue", "AutonomousType", "TimeStamp")
docsIfMCmtsMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6))
docsIfMCmtsMib.setRevisions(('2005-11-16 00:00', '2005-08-05 00:00',))
if mibBuilder.loadTexts: docsIfMCmtsMib.setLastUpdated('200511160000Z')
if mibBuilder.loadTexts: docsIfMCmtsMib.setOrganization('Cable Television Laboratories, Inc')
docsIfMCmtsNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 0))
docsIfMCmtsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1))
docsIfMCmtsBaseObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 1))
docsIfMCmtsCoreObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 2))
docsIfMCmtsEqamObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3))
docsIfMCmtsDepiObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4))
docsIfMCmtsDepiSessionObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1))
docsIfMCmtsDepiQosObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 2))
docsIfMCmtsBaseAdmin = ObjectIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 1, 1))
if mibBuilder.loadTexts: docsIfMCmtsBaseAdmin.setStatus('current')
docsPHYParamFixValue = ObjectIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 1, 1, 1))
if mibBuilder.loadTexts: docsPHYParamFixValue.setStatus('current')
docsPHYParamSameValue = ObjectIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 1, 1, 2))
if mibBuilder.loadTexts: docsPHYParamSameValue.setStatus('current')
docsPHYParamAdjacentValues = ObjectIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 1, 1, 3))
if mibBuilder.loadTexts: docsPHYParamAdjacentValues.setStatus('current')
docsPHYParamFrequencyRange = ObjectIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 1, 1, 4))
if mibBuilder.loadTexts: docsPHYParamFrequencyRange.setStatus('current')
docsIfMCmtsCoreDownstreamTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 2, 1), )
if mibBuilder.loadTexts: docsIfMCmtsCoreDownstreamTable.setStatus('current')
docsIfMCmtsCoreDownstreamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIfMCmtsCoreDownstreamEntry.setStatus('current')
docsIfMCmtsCoreDownstreamType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("integrated", 1), ("external", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsCoreDownstreamType.setStatus('current')
docsIfMCmtsCoreDownstreamPhyDependencies = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 2, 1, 1, 2), Bits().clone(namedValues=NamedValues(("frequency", 0), ("bandwidth", 1), ("power", 2), ("modulation", 3), ("interleaver", 4), ("j83Annex", 5), ("symbolRate", 6), ("mute", 7))).clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsCoreDownstreamPhyDependencies.setStatus('current')
docsIfMCmtsEqamDownstreamTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 1), )
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamTable.setStatus('current')
docsIfMCmtsEqamDownstreamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamEntry.setStatus('current')
docsIfMCmtsEqamDownstreamTSID = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamTSID.setStatus('current')
docsIfMCmtsEqamDownstreamPhyDependencies = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 1, 1, 2), Bits().clone(namedValues=NamedValues(("frequency", 0), ("bandwidth", 1), ("power", 2), ("modulation", 3), ("interleaver", 4), ("j83Annex", 5), ("symbolRate", 6), ("mute", 7))).clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamPhyDependencies.setStatus('current')
docsIfMCmtsEqamDownstreamDevicePhyParamLock = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 1, 1, 3), Bits().clone(namedValues=NamedValues(("frequency", 0), ("bandwidth", 1), ("power", 2), ("modulation", 3), ("interleaver", 4), ("j83Annex", 5), ("symbolRate", 6), ("mute", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamDevicePhyParamLock.setStatus('current')
docsIfMCmtsEqamDownstreamDeviceConfigPhyParamLock = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 1, 1, 4), Bits().clone(namedValues=NamedValues(("frequency", 0), ("bandwidth", 1), ("power", 2), ("modulation", 3), ("interleaver", 4), ("j83Annex", 5), ("symbolRate", 6), ("mute", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamDeviceConfigPhyParamLock.setStatus('current')
docsIfMCmtsEqamDownstreamAllocationType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("docsisOnly", 1), ("videoOnly", 2), ("any", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamAllocationType.setStatus('current')
docsIfMCmtsEqamDownstreamAllocationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 1, 1, 6), Bits().clone(namedValues=NamedValues(("other", 0), ("docsisDepi", 1), ("docsisErm", 2), ("videoErm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamAllocationStatus.setStatus('current')
docsIfMCmtsEqamDownstreamAllocationTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamAllocationTimeout.setStatus('current')
docsIfMCmtsEqamDownstreamDRRPAdvertizing = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 1, 1, 8), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamDRRPAdvertizing.setStatus('current')
docsIfMCmtsEqamDownstreamUdpPortMapping = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 1, 1, 9), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamUdpPortMapping.setStatus('current')
docsIfMCmtsEqamDownstreamCapabilitiesTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 2), )
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamCapabilitiesTable.setStatus('current')
docsIfMCmtsEqamDownstreamCapabilitiesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamCapabilitiesEntry.setStatus('current')
docsIfMCmtsEqamDownstreamCapabFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 2, 1, 1), Bits().clone(namedValues=NamedValues(("eqamDependency", 0), ("adjacentChannel", 1), ("adjacentChannelOrder", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamCapabFrequency.setStatus('current')
docsIfMCmtsEqamDownstreamCapabBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 2, 1, 2), Bits().clone(namedValues=NamedValues(("eqamDependency", 0), ("chan6Mhz", 1), ("chan8Mhz", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamCapabBandwidth.setStatus('current')
docsIfMCmtsEqamDownstreamCapabPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 2, 1, 3), Bits().clone(namedValues=NamedValues(("eqamDependency", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamCapabPower.setStatus('current')
docsIfMCmtsEqamDownstreamCapabModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 2, 1, 4), Bits().clone(namedValues=NamedValues(("eqamDependency", 0), ("qam64", 1), ("qam256", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamCapabModulation.setStatus('current')
docsIfMCmtsEqamDownstreamCapabInterleaver = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 2, 1, 5), Bits().clone(namedValues=NamedValues(("eqamDependency", 0), ("taps8Increment16", 1), ("taps16Increment8", 2), ("taps32Increment4", 3), ("taps64Increment2", 4), ("taps128Increment1", 5), ("taps12increment17", 6), ("taps128increment2", 7), ("taps128increment3", 8), ("taps128increment4", 9), ("taps128increment5", 10), ("taps128increment6", 11), ("taps128increment7", 12), ("taps128increment8", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamCapabInterleaver.setStatus('current')
docsIfMCmtsEqamDownstreamCapabJ83Annex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 2, 1, 6), Bits().clone(namedValues=NamedValues(("eqamDependency", 0), ("annexA", 1), ("annexB", 2), ("annexC", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamCapabJ83Annex.setStatus('current')
docsIfMCmtsEqamDownstreamCapabConcurrentServices = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 2, 1, 7), Bits().clone(namedValues=NamedValues(("eqamDependency", 0), ("videoAndDocsis", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamCapabConcurrentServices.setStatus('current')
docsIfMCmtsEqamDownstreamCapabServicesTransport = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 2, 1, 8), Bits().clone(namedValues=NamedValues(("qamDependency", 0), ("mpeg2OverIP", 1), ("dmpt", 2), ("psp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamCapabServicesTransport.setStatus('current')
docsIfMCmtsEqamDownstreamCapabMuting = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 2, 1, 9), Bits().clone(namedValues=NamedValues(("eqamDependency", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsEqamDownstreamCapabMuting.setStatus('current')
docsIfMCmtsEqamGroupDependencyTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 3), )
if mibBuilder.loadTexts: docsIfMCmtsEqamGroupDependencyTable.setStatus('current')
docsIfMCmtsEqamGroupDependencyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 3, 1), ).setIndexNames((0, "DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamGroupDependencyPhyParam"), (0, "DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamGroupDependencyPhysicalIndex"))
if mibBuilder.loadTexts: docsIfMCmtsEqamGroupDependencyEntry.setStatus('current')
docsIfMCmtsEqamGroupDependencyPhyParam = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("noDependencies", 0), ("all", 1), ("frequency", 2), ("bandwidth", 3), ("power", 4), ("modulation", 5), ("interleave", 6), ("annex", 7), ("symbolRate", 8), ("mute", 9))))
if mibBuilder.loadTexts: docsIfMCmtsEqamGroupDependencyPhyParam.setStatus('current')
docsIfMCmtsEqamGroupDependencyPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 3, 1, 2), PhysicalIndexOrZero())
if mibBuilder.loadTexts: docsIfMCmtsEqamGroupDependencyPhysicalIndex.setStatus('current')
docsIfMCmtsEqamGroupDependencyGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsEqamGroupDependencyGroupID.setStatus('current')
docsIfMCmtsEqamGroupDependencyType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 3, 1, 4), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsEqamGroupDependencyType.setStatus('current')
docsIfMCmtsEqamGlobCfgDownTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 4), )
if mibBuilder.loadTexts: docsIfMCmtsEqamGlobCfgDownTable.setStatus('current')
docsIfMCmtsEqamGlobCfgDownEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 4, 1), ).setIndexNames((0, "DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamGlobCfgDownIndex"))
if mibBuilder.loadTexts: docsIfMCmtsEqamGlobCfgDownEntry.setStatus('current')
docsIfMCmtsEqamGlobCfgDownIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: docsIfMCmtsEqamGlobCfgDownIndex.setStatus('current')
docsIfMCmtsEqamGlobCfgDownPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 4, 1, 2), PhysicalIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsEqamGlobCfgDownPhysicalIndex.setStatus('current')
docsIfMCmtsEqamGlobCfgDownBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(6000000, 6000000), ValueRangeConstraint(8000000, 8000000), ))).setUnits('hertz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsEqamGlobCfgDownBandwidth.setStatus('current')
docsIfMCmtsEqamGlobCfgDownPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 4, 1, 4), TenthdBmV()).setUnits('dBmV').setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsEqamGlobCfgDownPower.setStatus('current')
docsIfMCmtsEqamGlobCfgDownModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4))).clone(namedValues=NamedValues(("qam64", 3), ("qam256", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsEqamGlobCfgDownModulation.setStatus('current')
docsIfMCmtsEqamGlobCfgDownInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("unknown", 1), ("other", 2), ("taps8Increment16", 3), ("taps16Increment8", 4), ("taps32Increment4", 5), ("taps64Increment2", 6), ("taps128Increment1", 7), ("taps12increment17", 8), ("tabs128increment2", 9), ("tabs128increment3", 10), ("tabs128increment4", 11), ("tabs128increment5", 12), ("tabs128increment6", 13), ("tabs128increment7", 14), ("tabs128increment8", 15)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsEqamGlobCfgDownInterleave.setStatus('current')
docsIfMCmtsEqamGlogCfgDownAnnex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(3, 4, 5))).clone(namedValues=NamedValues(("annexA", 3), ("annexB", 4), ("annexC", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsEqamGlogCfgDownAnnex.setStatus('current')
docsIfMCmtsEqamGlobCfgDownSymbolRateM = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 4, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsEqamGlobCfgDownSymbolRateM.setStatus('current')
docsIfMCmtsEqamGlobCfgDownSymbolRateN = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 4, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsEqamGlobCfgDownSymbolRateN.setStatus('current')
docsIfMCmtsEqamGlobCfgDownLockParams = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 4, 1, 10), Bits().clone(namedValues=NamedValues(("frequency", 0), ("bandwidth", 1), ("power", 2), ("modulation", 3), ("interleaver", 4), ("j83Annex", 5), ("symbolRate", 6))).clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsEqamGlobCfgDownLockParams.setStatus('current')
docsIfMCmtsEqamGlobCfgDownExecutionCode = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 4, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("complete", 1), ("errorNoPhysIndex", 2), ("errorNoQAMChannels", 3), ("errorSetFailures", 4), ("errorNoCommitted", 5), ("warningDependencies", 6), ("errorOther", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsEqamGlobCfgDownExecutionCode.setStatus('current')
docsIfMCmtsEqamGlobCfgDownErrorsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 4, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsEqamGlobCfgDownErrorsCount.setStatus('current')
docsIfMCmtsEqamGlobCfgDownRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 4, 1, 14), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsEqamGlobCfgDownRowStatus.setStatus('current')
docsIfMCmtsChannelBlockTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 5), )
if mibBuilder.loadTexts: docsIfMCmtsChannelBlockTable.setStatus('current')
docsIfMCmtsChannelBlockEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 5, 1), ).setIndexNames((0, "DOCS-IF-M-CMTS-MIB", "docsIfMCmtsChannelBlockPhysicalIndex"))
if mibBuilder.loadTexts: docsIfMCmtsChannelBlockEntry.setStatus('current')
docsIfMCmtsChannelBlockPhysicalIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 5, 1, 1), PhysicalIndex())
if mibBuilder.loadTexts: docsIfMCmtsChannelBlockPhysicalIndex.setStatus('current')
docsIfMCmtsChannelBlockNumberChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsChannelBlockNumberChannels.setStatus('current')
docsIfMCmtsChannelBlockCfgNumberChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 5, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 119))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfMCmtsChannelBlockCfgNumberChannels.setStatus('current')
docsIfMCmtsChannelBlockMute = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 5, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfMCmtsChannelBlockMute.setStatus('current')
docsIfMCmtsChannelBlockTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("noTest", 1), ("offOthersNormal", 2), ("allOff", 3), ("onOthersOff", 4), ("cwOnOthersOff", 5), ("cwOnOthersNormal", 6), ("clockTest", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsChannelBlockTestType.setStatus('current')
docsIfMCmtsChannelBlockTestIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 3, 5, 1, 6), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfMCmtsChannelBlockTestIfIndex.setStatus('current')
docsIfMCmtsDepiSessionConfigTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1), )
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigTable.setStatus('current')
docsIfMCmtsDepiSessionConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1), ).setIndexNames((0, "DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigIndex"))
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigEntry.setStatus('current')
docsIfMCmtsDepiSessionConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigIndex.setStatus('current')
docsIfMCmtsDepiSessionConfigCableMacIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigCableMacIfIndex.setStatus('current')
docsIfMCmtsDepiSessionConfigCableMCmtsDownIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigCableMCmtsDownIfIndex.setStatus('current')
docsIfMCmtsDepiSessionConfigAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 4), InetAddressType().clone('ipv4')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigAddrType.setStatus('current')
docsIfMCmtsDepiSessionConfigLocalAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 5), InetAddress().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigLocalAddr.setStatus('current')
docsIfMCmtsDepiSessionConfigRemoteAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 6), InetAddress().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigRemoteAddr.setStatus('current')
docsIfMCmtsDepiSessionConfigL2TPv3HeaderType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ip", 1), ("udp", 2))).clone('udp')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigL2TPv3HeaderType.setStatus('current')
docsIfMCmtsDepiSessionConfigMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("l2tpControl", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigMethod.setStatus('current')
docsIfMCmtsDepiSessionConfigTSID = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigTSID.setStatus('current')
docsIfMCmtsDepiSessionConfigDEPIMode = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dmpt", 1), ("psp", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigDEPIMode.setStatus('current')
docsIfMCmtsDepiSessionConfigRsrcAllocReq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigRsrcAllocReq.setStatus('current')
docsIfMCmtsDepiSessionConfigCinPhbIdPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 12), SnmpTagValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigCinPhbIdPolicy.setStatus('current')
docsIfMCmtsDepiSessionConfigSyncEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 13), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigSyncEnabled.setStatus('current')
docsIfMCmtsDepiSessionConfigSyncInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000)).clone(1000)).setUnits('docsisSyncSteps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigSyncInterval.setStatus('current')
docsIfMCmtsDepiSessionConfigPhyParamsFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 15), Bits().clone(namedValues=NamedValues(("frequency", 0), ("bandwidth", 1), ("power", 2), ("modulation", 3), ("interleaver", 4), ("j83Annex", 5), ("symbolRate", 6), ("mute", 7))).clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigPhyParamsFlag.setStatus('current')
docsIfMCmtsDepiSessionConfigChannelFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 16), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigChannelFrequency.setStatus('current')
docsIfMCmtsDepiSessionConfigChannelModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("qam64", 3), ("qam256", 4))).clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigChannelModulation.setStatus('current')
docsIfMCmtsDepiSessionConfigChannelInterleave = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("unknown", 1), ("taps8Increment16", 3), ("taps16Increment8", 4), ("taps32Increment4", 5), ("taps64Increment2", 6), ("taps128Increment1", 7), ("taps12increment17", 8), ("tabs128increment2", 9), ("tabs128increment3", 10), ("tabs128increment4", 11), ("tabs128increment5", 12), ("tabs128increment6", 13), ("tabs128increment7", 14), ("tabs128increment8", 15))).clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigChannelInterleave.setStatus('current')
docsIfMCmtsDepiSessionConfigChannelPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 19), TenthdBmV()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigChannelPower.setStatus('current')
docsIfMCmtsDepiSessionConfigChannelAnnex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("annexA", 3), ("annexB", 4), ("annexC", 5))).clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigChannelAnnex.setStatus('current')
docsIfMCmtsDepiSessionConfigChannelSymbolRateM = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigChannelSymbolRateM.setStatus('current')
docsIfMCmtsDepiSessionConfigChannelSymbolRateN = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigChannelSymbolRateN.setStatus('current')
docsIfMCmtsDepiSessionConfigChannelOutputRate = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(99)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigChannelOutputRate.setStatus('current')
docsIfMCmtsDepiSessionConfigChannelBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 24), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigChannelBurstSize.setStatus('current')
docsIfMCmtsDepiSessionConfigStorage = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 25), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigStorage.setStatus('current')
docsIfMCmtsDepiSessionConfigRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 26), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigRowStatus.setStatus('current')
docsIfMCmtsDepiSessionConfigChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 1, 1, 27), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionConfigChannelId.setStatus('current')
docsIfMCmtsDepiSessionInfoTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 2), )
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionInfoTable.setStatus('current')
docsIfMCmtsDepiSessionInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionInfoEntry.setStatus('current')
docsIfMCmtsDepiSessionInfoCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionInfoCfgIndex.setStatus('current')
docsIfMCmtsDepiSessionInfoUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 2, 1, 2), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionInfoUdpPort.setStatus('current')
docsIfMCmtsDepiSessionInfoMaxPayload = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionInfoMaxPayload.setStatus('current')
docsIfMCmtsDepiSessionInfoPathPayload = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionInfoPathPayload.setStatus('current')
docsIfMCmtsDepiSessionInfoIncludeDOCSISMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 2, 1, 5), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionInfoIncludeDOCSISMsgs.setStatus('current')
docsIfMCmtsDepiSessionInfoRsrcAllocResp = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionInfoRsrcAllocResp.setStatus('current')
docsIfMCmtsDepiSessionInfoConnCtrlID = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionInfoConnCtrlID.setStatus('current')
docsIfMCmtsDepiSessionInfoEQAMSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionInfoEQAMSessionID.setStatus('current')
docsIfMCmtsDepiSessionInfoOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("management", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionInfoOwner.setStatus('current')
docsIfMCmtsDepiSessionInfoState = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("depiSessionUp", 2), ("depiSessionError", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionInfoState.setStatus('current')
docsIfMCmtsDepiSessionInfoErrorCode = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("invalidMACInterfaceValue", 2), ("invalidDSInterfaceValue", 3), ("noResourcesForDSInterfaceIndex", 4), ("l2tpv3Error", 5), ("ifAdminStatusSetToDown", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionInfoErrorCode.setStatus('current')
docsIfMCmtsDepiSessionInfoCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 2, 1, 12), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionInfoCreationTime.setStatus('current')
docsIfMCmtsDepiSessionInfoStorage = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 2, 1, 13), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionInfoStorage.setStatus('current')
docsIfMCmtsDepiRsrcAllocTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 3), )
if mibBuilder.loadTexts: docsIfMCmtsDepiRsrcAllocTable.setStatus('current')
docsIfMCmtsDepiRsrcAllocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 3, 1), ).setIndexNames((0, "DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiRsrcAllocIndex"), (0, "DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiRsrcAllocSeq"))
if mibBuilder.loadTexts: docsIfMCmtsDepiRsrcAllocEntry.setStatus('current')
docsIfMCmtsDepiRsrcAllocIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: docsIfMCmtsDepiRsrcAllocIndex.setStatus('current')
docsIfMCmtsDepiRsrcAllocSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: docsIfMCmtsDepiRsrcAllocSeq.setStatus('current')
docsIfMCmtsDepiRsrcAllocPhbId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiRsrcAllocPhbId.setStatus('current')
docsIfMCmtsDepiRsrcAllocFlowId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4294967295), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiRsrcAllocFlowId.setStatus('current')
docsIfMCmtsDepiRsrcAllocUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 3, 1, 5), InetPortNumber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiRsrcAllocUdpPort.setStatus('current')
docsIfMCmtsDepiRsrcAllocPolicyScnTags = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 3, 1, 6), SnmpTagValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiRsrcAllocPolicyScnTags.setStatus('current')
docsIfMCmtsDepiRsrcAllocStorage = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 3, 1, 7), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiRsrcAllocStorage.setStatus('current')
docsIfMCmtsDepiRsrcAllocRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 3, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiRsrcAllocRowStatus.setStatus('current')
docsIfMCmtsDepiSessionStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 4), )
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionStatsTable.setStatus('current')
docsIfMCmtsDepiSessionStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionStatsEntry.setStatus('current')
docsIfMCmtsDepiSessionInfoOutOfSequencePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionInfoOutOfSequencePkts.setStatus('current')
docsIfMCmtsDepiSessionCinLatency = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 5))
docsIfMCmtsDepiSessionCinLatencyInterval = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 5, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 420))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionCinLatencyInterval.setStatus('current')
docsIfMCmtsDepiSessionCinLatencyThrshld = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 5, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4294967295), ))).setUnits('MasterClockTicks').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionCinLatencyThrshld.setStatus('current')
docsIfMCmtsDepiSessionCinEventLevel = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("emergency", 1), ("alert", 2), ("critical", 3), ("error", 4), ("warning", 5), ("notice", 6), ("information", 7), ("debug", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionCinEventLevel.setStatus('current')
docsIfMCmtsDepiSessionCinLastValue = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 5, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('MasterClockTicks').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionCinLastValue.setStatus('current')
docsIfMCmtsDepiSessionCinLastValueIfIndex = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 5, 5), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionCinLastValueIfIndex.setStatus('current')
docsIfMCmtsDepiSessionCinLatencyValueLastTime = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 5, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionCinLatencyValueLastTime.setStatus('current')
docsIfMCmtsDepiSessionCinLatencyPerfTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 6), )
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionCinLatencyPerfTable.setStatus('current')
docsIfMCmtsDepiSessionCinLatencyPerfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionCinLatencyPerfIntervalSeq"))
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionCinLatencyPerfEntry.setStatus('current')
docsIfMCmtsDepiSessionCinLatencyPerfIntervalSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionCinLatencyPerfIntervalSeq.setStatus('current')
docsIfMCmtsDepiSessionCinLatencyPerfValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295))).setUnits('MasterClockTicks').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionCinLatencyPerfValue.setStatus('current')
docsIfMCmtsDepiSessionCinLatencyTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 1, 6, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsDepiSessionCinLatencyTime.setStatus('current')
docsIfMCmtsDepiPhbPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 2, 1), )
if mibBuilder.loadTexts: docsIfMCmtsDepiPhbPolicyTable.setStatus('current')
docsIfMCmtsDepiPhbPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 2, 1, 1), ).setIndexNames((0, "DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiPhbPolicyTag"))
if mibBuilder.loadTexts: docsIfMCmtsDepiPhbPolicyEntry.setStatus('current')
docsIfMCmtsDepiPhbPolicyTag = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 2, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: docsIfMCmtsDepiPhbPolicyTag.setStatus('current')
docsIfMCmtsDepiPhbPolicySCN = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 2, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiPhbPolicySCN.setStatus('current')
docsIfMCmtsDepiPhbPolicyCinPhbId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 2, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiPhbPolicyCinPhbId.setStatus('current')
docsIfMCmtsDepiPhbPolicyStorage = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiPhbPolicyStorage.setStatus('current')
docsIfMCmtsDepiPhbPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 2, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsIfMCmtsDepiPhbPolicyRowStatus.setStatus('current')
docsIfMCmtsQosServiceFlowExtTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 2, 2), )
if mibBuilder.loadTexts: docsIfMCmtsQosServiceFlowExtTable.setStatus('current')
docsIfMCmtsQosServiceFlowExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-QOS-MIB", "docsQosServiceFlowId"))
if mibBuilder.loadTexts: docsIfMCmtsQosServiceFlowExtEntry.setStatus('current')
docsIfMCmtsQosServiceFlowExtDepiFlowId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsQosServiceFlowExtDepiFlowId.setStatus('current')
docsIfMCmtsQosServiceFlowExtCinPhbId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsQosServiceFlowExtCinPhbId.setStatus('current')
docsIfMCmtsQosServiceFlowExtDepiIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 1, 4, 2, 2, 1, 3), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfMCmtsQosServiceFlowExtDepiIfIndex.setStatus('current')
docsIfMCmtsConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 2))
docsIfMCmtsCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 2, 1))
docsIfMCmtsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 2, 2))
docsIfMCmtsCoreDeviceCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 2, 1, 1)).setObjects(("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsBaseGroup"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsCoreGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIfMCmtsCoreDeviceCompliance = docsIfMCmtsCoreDeviceCompliance.setStatus('current')
docsIfMCmtsEQAMCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 2, 1, 2)).setObjects(("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsBaseGroup"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamDevGroup"), ("DOCS-IF-M-CMTS-MIB", "entityPhysicalGroup"), ("DOCS-IF-M-CMTS-MIB", "entityPhysical2Group"), ("DOCS-IF-M-CMTS-MIB", "entityPhysical3Group"), ("DOCS-IF-M-CMTS-MIB", "entityGeneralGroup"), ("DOCS-IF-M-CMTS-MIB", "entityLogical2Group"), ("DOCS-IF-M-CMTS-MIB", "entityMappingGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIfMCmtsEQAMCompliance = docsIfMCmtsEQAMCompliance.setStatus('current')
docsIfMCmtsBaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 2, 2, 1)).setObjects(("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigCableMacIfIndex"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigCableMCmtsDownIfIndex"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigAddrType"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigLocalAddr"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigRemoteAddr"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigL2TPv3HeaderType"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigMethod"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigTSID"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigDEPIMode"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigRsrcAllocReq"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigCinPhbIdPolicy"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigSyncEnabled"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigSyncInterval"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigPhyParamsFlag"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigChannelFrequency"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigChannelModulation"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigChannelInterleave"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigChannelPower"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigChannelAnnex"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigChannelSymbolRateM"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigChannelSymbolRateN"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigChannelOutputRate"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigChannelBurstSize"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigStorage"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigRowStatus"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionConfigChannelId"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionInfoCfgIndex"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionInfoUdpPort"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionInfoMaxPayload"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionInfoPathPayload"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionInfoIncludeDOCSISMsgs"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionInfoRsrcAllocResp"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionInfoConnCtrlID"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionInfoEQAMSessionID"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionInfoOwner"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionInfoState"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionInfoErrorCode"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionInfoCreationTime"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionInfoStorage"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiRsrcAllocPhbId"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiRsrcAllocFlowId"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiRsrcAllocUdpPort"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiRsrcAllocPolicyScnTags"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiRsrcAllocStorage"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiRsrcAllocRowStatus"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionInfoOutOfSequencePkts"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionCinLatencyInterval"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionCinLatencyThrshld"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionCinEventLevel"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionCinLastValue"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionCinLastValueIfIndex"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionCinLatencyValueLastTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIfMCmtsBaseGroup = docsIfMCmtsBaseGroup.setStatus('current')
docsIfMCmtsCoreGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 2, 2, 2)).setObjects(("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsCoreDownstreamPhyDependencies"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsCoreDownstreamType"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsQosServiceFlowExtDepiFlowId"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsQosServiceFlowExtCinPhbId"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsQosServiceFlowExtDepiIfIndex"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionCinLatencyPerfValue"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiSessionCinLatencyTime"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiPhbPolicySCN"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiPhbPolicyCinPhbId"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiPhbPolicyStorage"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsDepiPhbPolicyRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIfMCmtsCoreGroup = docsIfMCmtsCoreGroup.setStatus('current')
docsIfMCmtsEqamDevGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 6, 2, 2, 3)).setObjects(("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamDownstreamTSID"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamDownstreamPhyDependencies"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamDownstreamDevicePhyParamLock"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamDownstreamDeviceConfigPhyParamLock"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamDownstreamAllocationType"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamDownstreamAllocationStatus"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamDownstreamAllocationTimeout"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamDownstreamDRRPAdvertizing"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamDownstreamUdpPortMapping"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamDownstreamCapabFrequency"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamDownstreamCapabBandwidth"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamDownstreamCapabPower"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamDownstreamCapabModulation"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamDownstreamCapabInterleaver"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamDownstreamCapabJ83Annex"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamDownstreamCapabConcurrentServices"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamDownstreamCapabServicesTransport"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamDownstreamCapabMuting"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamGroupDependencyGroupID"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamGroupDependencyType"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamGlobCfgDownPhysicalIndex"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamGlobCfgDownBandwidth"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamGlobCfgDownPower"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamGlobCfgDownModulation"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamGlobCfgDownInterleave"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamGlogCfgDownAnnex"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamGlobCfgDownSymbolRateM"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamGlobCfgDownSymbolRateN"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamGlobCfgDownLockParams"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamGlobCfgDownExecutionCode"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamGlobCfgDownErrorsCount"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsEqamGlobCfgDownRowStatus"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsChannelBlockNumberChannels"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsChannelBlockCfgNumberChannels"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsChannelBlockMute"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsChannelBlockTestType"), ("DOCS-IF-M-CMTS-MIB", "docsIfMCmtsChannelBlockTestIfIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIfMCmtsEqamDevGroup = docsIfMCmtsEqamDevGroup.setStatus('current')
mibBuilder.exportSymbols("DOCS-IF-M-CMTS-MIB", docsIfMCmtsDepiSessionConfigLocalAddr=docsIfMCmtsDepiSessionConfigLocalAddr, docsIfMCmtsDepiRsrcAllocIndex=docsIfMCmtsDepiRsrcAllocIndex, docsIfMCmtsEqamDownstreamDevicePhyParamLock=docsIfMCmtsEqamDownstreamDevicePhyParamLock, docsIfMCmtsQosServiceFlowExtEntry=docsIfMCmtsQosServiceFlowExtEntry, docsIfMCmtsBaseGroup=docsIfMCmtsBaseGroup, docsIfMCmtsCoreObjects=docsIfMCmtsCoreObjects, docsIfMCmtsEqamGlobCfgDownModulation=docsIfMCmtsEqamGlobCfgDownModulation, docsIfMCmtsCoreDownstreamEntry=docsIfMCmtsCoreDownstreamEntry, docsIfMCmtsEqamGroupDependencyEntry=docsIfMCmtsEqamGroupDependencyEntry, docsIfMCmtsDepiRsrcAllocStorage=docsIfMCmtsDepiRsrcAllocStorage, docsIfMCmtsEqamDownstreamCapabServicesTransport=docsIfMCmtsEqamDownstreamCapabServicesTransport, docsIfMCmtsDepiSessionConfigCableMCmtsDownIfIndex=docsIfMCmtsDepiSessionConfigCableMCmtsDownIfIndex, docsIfMCmtsDepiSessionConfigChannelBurstSize=docsIfMCmtsDepiSessionConfigChannelBurstSize, docsIfMCmtsDepiSessionCinLatencyPerfTable=docsIfMCmtsDepiSessionCinLatencyPerfTable, docsIfMCmtsChannelBlockCfgNumberChannels=docsIfMCmtsChannelBlockCfgNumberChannels, docsIfMCmtsEqamGlobCfgDownEntry=docsIfMCmtsEqamGlobCfgDownEntry, docsIfMCmtsDepiSessionConfigEntry=docsIfMCmtsDepiSessionConfigEntry, docsIfMCmtsDepiSessionInfoCreationTime=docsIfMCmtsDepiSessionInfoCreationTime, docsIfMCmtsChannelBlockMute=docsIfMCmtsChannelBlockMute, docsIfMCmtsDepiSessionConfigChannelAnnex=docsIfMCmtsDepiSessionConfigChannelAnnex, docsIfMCmtsEqamGlobCfgDownExecutionCode=docsIfMCmtsEqamGlobCfgDownExecutionCode, docsIfMCmtsDepiSessionConfigTable=docsIfMCmtsDepiSessionConfigTable, docsIfMCmtsEqamGlobCfgDownIndex=docsIfMCmtsEqamGlobCfgDownIndex, docsIfMCmtsEqamGroupDependencyType=docsIfMCmtsEqamGroupDependencyType, docsIfMCmtsDepiSessionInfoOutOfSequencePkts=docsIfMCmtsDepiSessionInfoOutOfSequencePkts, docsIfMCmtsDepiSessionConfigChannelOutputRate=docsIfMCmtsDepiSessionConfigChannelOutputRate, docsIfMCmtsEQAMCompliance=docsIfMCmtsEQAMCompliance, docsIfMCmtsDepiSessionCinLastValueIfIndex=docsIfMCmtsDepiSessionCinLastValueIfIndex, docsIfMCmtsDepiSessionInfoRsrcAllocResp=docsIfMCmtsDepiSessionInfoRsrcAllocResp, docsIfMCmtsDepiRsrcAllocSeq=docsIfMCmtsDepiRsrcAllocSeq, docsIfMCmtsEqamGroupDependencyGroupID=docsIfMCmtsEqamGroupDependencyGroupID, docsIfMCmtsEqamGlobCfgDownSymbolRateN=docsIfMCmtsEqamGlobCfgDownSymbolRateN, docsIfMCmtsDepiPhbPolicyEntry=docsIfMCmtsDepiPhbPolicyEntry, docsIfMCmtsEqamDevGroup=docsIfMCmtsEqamDevGroup, docsIfMCmtsDepiSessionConfigCableMacIfIndex=docsIfMCmtsDepiSessionConfigCableMacIfIndex, docsIfMCmtsDepiSessionInfoState=docsIfMCmtsDepiSessionInfoState, docsIfMCmtsQosServiceFlowExtDepiIfIndex=docsIfMCmtsQosServiceFlowExtDepiIfIndex, docsIfMCmtsEqamDownstreamCapabBandwidth=docsIfMCmtsEqamDownstreamCapabBandwidth, docsIfMCmtsDepiSessionInfoOwner=docsIfMCmtsDepiSessionInfoOwner, docsIfMCmtsDepiSessionCinLatencyValueLastTime=docsIfMCmtsDepiSessionCinLatencyValueLastTime, docsIfMCmtsDepiRsrcAllocEntry=docsIfMCmtsDepiRsrcAllocEntry, docsIfMCmtsDepiSessionConfigL2TPv3HeaderType=docsIfMCmtsDepiSessionConfigL2TPv3HeaderType, docsIfMCmtsEqamDownstreamCapabInterleaver=docsIfMCmtsEqamDownstreamCapabInterleaver, docsIfMCmtsObjects=docsIfMCmtsObjects, docsIfMCmtsDepiSessionInfoTable=docsIfMCmtsDepiSessionInfoTable, docsIfMCmtsEqamGlobCfgDownErrorsCount=docsIfMCmtsEqamGlobCfgDownErrorsCount, docsIfMCmtsDepiSessionConfigChannelFrequency=docsIfMCmtsDepiSessionConfigChannelFrequency, docsIfMCmtsDepiPhbPolicySCN=docsIfMCmtsDepiPhbPolicySCN, docsIfMCmtsDepiSessionConfigMethod=docsIfMCmtsDepiSessionConfigMethod, docsIfMCmtsNotifications=docsIfMCmtsNotifications, docsIfMCmtsDepiSessionConfigSyncInterval=docsIfMCmtsDepiSessionConfigSyncInterval, docsIfMCmtsDepiRsrcAllocUdpPort=docsIfMCmtsDepiRsrcAllocUdpPort, docsIfMCmtsDepiSessionConfigRemoteAddr=docsIfMCmtsDepiSessionConfigRemoteAddr, docsIfMCmtsCoreDownstreamTable=docsIfMCmtsCoreDownstreamTable, docsIfMCmtsDepiSessionCinLatencyPerfEntry=docsIfMCmtsDepiSessionCinLatencyPerfEntry, docsIfMCmtsEqamDownstreamPhyDependencies=docsIfMCmtsEqamDownstreamPhyDependencies, docsIfMCmtsChannelBlockTable=docsIfMCmtsChannelBlockTable, docsPHYParamFixValue=docsPHYParamFixValue, docsIfMCmtsDepiPhbPolicyCinPhbId=docsIfMCmtsDepiPhbPolicyCinPhbId, docsIfMCmtsDepiSessionInfoStorage=docsIfMCmtsDepiSessionInfoStorage, PYSNMP_MODULE_ID=docsIfMCmtsMib, docsIfMCmtsDepiSessionConfigChannelSymbolRateM=docsIfMCmtsDepiSessionConfigChannelSymbolRateM, docsIfMCmtsDepiSessionInfoEQAMSessionID=docsIfMCmtsDepiSessionInfoEQAMSessionID, docsIfMCmtsChannelBlockPhysicalIndex=docsIfMCmtsChannelBlockPhysicalIndex, docsIfMCmtsDepiSessionStatsTable=docsIfMCmtsDepiSessionStatsTable, docsIfMCmtsDepiSessionConfigChannelSymbolRateN=docsIfMCmtsDepiSessionConfigChannelSymbolRateN, docsIfMCmtsDepiPhbPolicyTag=docsIfMCmtsDepiPhbPolicyTag, docsIfMCmtsEqamDownstreamCapabMuting=docsIfMCmtsEqamDownstreamCapabMuting, docsIfMCmtsDepiSessionObjects=docsIfMCmtsDepiSessionObjects, docsIfMCmtsBaseAdmin=docsIfMCmtsBaseAdmin, docsIfMCmtsDepiSessionInfoConnCtrlID=docsIfMCmtsDepiSessionInfoConnCtrlID, docsIfMCmtsDepiSessionCinLastValue=docsIfMCmtsDepiSessionCinLastValue, docsIfMCmtsDepiSessionConfigChannelInterleave=docsIfMCmtsDepiSessionConfigChannelInterleave, docsIfMCmtsDepiSessionConfigIndex=docsIfMCmtsDepiSessionConfigIndex, docsIfMCmtsDepiSessionInfoEntry=docsIfMCmtsDepiSessionInfoEntry, docsIfMCmtsEqamGlobCfgDownTable=docsIfMCmtsEqamGlobCfgDownTable, docsIfMCmtsEqamGlobCfgDownPower=docsIfMCmtsEqamGlobCfgDownPower, docsIfMCmtsDepiSessionConfigRsrcAllocReq=docsIfMCmtsDepiSessionConfigRsrcAllocReq, docsIfMCmtsQosServiceFlowExtDepiFlowId=docsIfMCmtsQosServiceFlowExtDepiFlowId, docsIfMCmtsEqamGroupDependencyTable=docsIfMCmtsEqamGroupDependencyTable, docsIfMCmtsEqamDownstreamTSID=docsIfMCmtsEqamDownstreamTSID, docsIfMCmtsDepiPhbPolicyTable=docsIfMCmtsDepiPhbPolicyTable, docsIfMCmtsDepiSessionStatsEntry=docsIfMCmtsDepiSessionStatsEntry, docsIfMCmtsEqamDownstreamCapabPower=docsIfMCmtsEqamDownstreamCapabPower, docsIfMCmtsDepiQosObjects=docsIfMCmtsDepiQosObjects, docsIfMCmtsEqamDownstreamAllocationTimeout=docsIfMCmtsEqamDownstreamAllocationTimeout, docsIfMCmtsDepiSessionConfigPhyParamsFlag=docsIfMCmtsDepiSessionConfigPhyParamsFlag, docsIfMCmtsDepiRsrcAllocRowStatus=docsIfMCmtsDepiRsrcAllocRowStatus, docsIfMCmtsDepiSessionConfigTSID=docsIfMCmtsDepiSessionConfigTSID, docsIfMCmtsQosServiceFlowExtTable=docsIfMCmtsQosServiceFlowExtTable, docsIfMCmtsDepiSessionConfigDEPIMode=docsIfMCmtsDepiSessionConfigDEPIMode, docsIfMCmtsDepiSessionConfigChannelId=docsIfMCmtsDepiSessionConfigChannelId, docsIfMCmtsCoreGroup=docsIfMCmtsCoreGroup, docsIfMCmtsDepiPhbPolicyStorage=docsIfMCmtsDepiPhbPolicyStorage, docsIfMCmtsEqamGlobCfgDownRowStatus=docsIfMCmtsEqamGlobCfgDownRowStatus, docsIfMCmtsEqamDownstreamCapabilitiesEntry=docsIfMCmtsEqamDownstreamCapabilitiesEntry, docsIfMCmtsDepiSessionInfoMaxPayload=docsIfMCmtsDepiSessionInfoMaxPayload, docsIfMCmtsEqamGlobCfgDownLockParams=docsIfMCmtsEqamGlobCfgDownLockParams, docsIfMCmtsDepiSessionInfoUdpPort=docsIfMCmtsDepiSessionInfoUdpPort, docsIfMCmtsCoreDownstreamPhyDependencies=docsIfMCmtsCoreDownstreamPhyDependencies, docsIfMCmtsDepiSessionCinLatencyPerfIntervalSeq=docsIfMCmtsDepiSessionCinLatencyPerfIntervalSeq, docsIfMCmtsDepiSessionInfoPathPayload=docsIfMCmtsDepiSessionInfoPathPayload, docsIfMCmtsDepiPhbPolicyRowStatus=docsIfMCmtsDepiPhbPolicyRowStatus, docsPHYParamSameValue=docsPHYParamSameValue, docsIfMCmtsChannelBlockTestType=docsIfMCmtsChannelBlockTestType, docsIfMCmtsMib=docsIfMCmtsMib, docsIfMCmtsEqamGlogCfgDownAnnex=docsIfMCmtsEqamGlogCfgDownAnnex, docsIfMCmtsChannelBlockEntry=docsIfMCmtsChannelBlockEntry, docsIfMCmtsEqamDownstreamCapabJ83Annex=docsIfMCmtsEqamDownstreamCapabJ83Annex, docsIfMCmtsDepiRsrcAllocFlowId=docsIfMCmtsDepiRsrcAllocFlowId, docsIfMCmtsDepiRsrcAllocPhbId=docsIfMCmtsDepiRsrcAllocPhbId, docsIfMCmtsDepiRsrcAllocPolicyScnTags=docsIfMCmtsDepiRsrcAllocPolicyScnTags, docsIfMCmtsEqamDownstreamAllocationType=docsIfMCmtsEqamDownstreamAllocationType, docsIfMCmtsEqamGlobCfgDownInterleave=docsIfMCmtsEqamGlobCfgDownInterleave, docsIfMCmtsEqamDownstreamEntry=docsIfMCmtsEqamDownstreamEntry, docsIfMCmtsDepiSessionInfoIncludeDOCSISMsgs=docsIfMCmtsDepiSessionInfoIncludeDOCSISMsgs, docsIfMCmtsDepiSessionConfigStorage=docsIfMCmtsDepiSessionConfigStorage, docsIfMCmtsGroups=docsIfMCmtsGroups, docsIfMCmtsDepiSessionCinLatencyThrshld=docsIfMCmtsDepiSessionCinLatencyThrshld, docsIfMCmtsDepiSessionInfoErrorCode=docsIfMCmtsDepiSessionInfoErrorCode, docsIfMCmtsEqamGlobCfgDownSymbolRateM=docsIfMCmtsEqamGlobCfgDownSymbolRateM, docsIfMCmtsEqamDownstreamDRRPAdvertizing=docsIfMCmtsEqamDownstreamDRRPAdvertizing, docsIfMCmtsDepiSessionConfigChannelModulation=docsIfMCmtsDepiSessionConfigChannelModulation, docsIfMCmtsEqamDownstreamDeviceConfigPhyParamLock=docsIfMCmtsEqamDownstreamDeviceConfigPhyParamLock, docsPHYParamFrequencyRange=docsPHYParamFrequencyRange, docsIfMCmtsEqamGroupDependencyPhysicalIndex=docsIfMCmtsEqamGroupDependencyPhysicalIndex, docsIfMCmtsDepiSessionCinLatencyTime=docsIfMCmtsDepiSessionCinLatencyTime, docsIfMCmtsBaseObjects=docsIfMCmtsBaseObjects, docsIfMCmtsDepiSessionConfigSyncEnabled=docsIfMCmtsDepiSessionConfigSyncEnabled, docsIfMCmtsEqamDownstreamAllocationStatus=docsIfMCmtsEqamDownstreamAllocationStatus, docsIfMCmtsChannelBlockTestIfIndex=docsIfMCmtsChannelBlockTestIfIndex, docsIfMCmtsEqamGlobCfgDownBandwidth=docsIfMCmtsEqamGlobCfgDownBandwidth, docsIfMCmtsEqamDownstreamTable=docsIfMCmtsEqamDownstreamTable, docsIfMCmtsDepiSessionConfigCinPhbIdPolicy=docsIfMCmtsDepiSessionConfigCinPhbIdPolicy, docsIfMCmtsDepiSessionConfigAddrType=docsIfMCmtsDepiSessionConfigAddrType, docsIfMCmtsDepiSessionCinLatencyInterval=docsIfMCmtsDepiSessionCinLatencyInterval, docsIfMCmtsCoreDownstreamType=docsIfMCmtsCoreDownstreamType, docsIfMCmtsDepiSessionConfigRowStatus=docsIfMCmtsDepiSessionConfigRowStatus, docsIfMCmtsConformance=docsIfMCmtsConformance, docsIfMCmtsEqamDownstreamCapabFrequency=docsIfMCmtsEqamDownstreamCapabFrequency, docsIfMCmtsEqamGlobCfgDownPhysicalIndex=docsIfMCmtsEqamGlobCfgDownPhysicalIndex, docsIfMCmtsEqamDownstreamCapabModulation=docsIfMCmtsEqamDownstreamCapabModulation, docsIfMCmtsDepiSessionConfigChannelPower=docsIfMCmtsDepiSessionConfigChannelPower, docsIfMCmtsDepiSessionCinLatencyPerfValue=docsIfMCmtsDepiSessionCinLatencyPerfValue, docsIfMCmtsDepiRsrcAllocTable=docsIfMCmtsDepiRsrcAllocTable, docsIfMCmtsDepiSessionCinEventLevel=docsIfMCmtsDepiSessionCinEventLevel, docsIfMCmtsEqamObjects=docsIfMCmtsEqamObjects, docsIfMCmtsDepiSessionInfoCfgIndex=docsIfMCmtsDepiSessionInfoCfgIndex, docsIfMCmtsQosServiceFlowExtCinPhbId=docsIfMCmtsQosServiceFlowExtCinPhbId, docsIfMCmtsCompliances=docsIfMCmtsCompliances, docsPHYParamAdjacentValues=docsPHYParamAdjacentValues, docsIfMCmtsChannelBlockNumberChannels=docsIfMCmtsChannelBlockNumberChannels, docsIfMCmtsEqamGroupDependencyPhyParam=docsIfMCmtsEqamGroupDependencyPhyParam, docsIfMCmtsEqamDownstreamUdpPortMapping=docsIfMCmtsEqamDownstreamUdpPortMapping, docsIfMCmtsCoreDeviceCompliance=docsIfMCmtsCoreDeviceCompliance, docsIfMCmtsDepiSessionCinLatency=docsIfMCmtsDepiSessionCinLatency, docsIfMCmtsDepiObjects=docsIfMCmtsDepiObjects, docsIfMCmtsEqamDownstreamCapabilitiesTable=docsIfMCmtsEqamDownstreamCapabilitiesTable, docsIfMCmtsEqamDownstreamCapabConcurrentServices=docsIfMCmtsEqamDownstreamCapabConcurrentServices)
