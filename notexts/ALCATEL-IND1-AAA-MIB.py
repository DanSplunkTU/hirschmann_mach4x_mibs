#
# PySNMP MIB module ALCATEL-IND1-AAA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-AAA-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 01:18:01 2022
# On host fv-az74-997 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
softentIND1AAA, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1AAA")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
InetAddress, InetAddressType, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType", "InetAddressPrefixLength")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Integer32, iso, NotificationType, TimeTicks, MibIdentifier, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, ModuleIdentity, IpAddress, Counter32, Gauge32, ObjectIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "iso", "NotificationType", "TimeTicks", "MibIdentifier", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "ModuleIdentity", "IpAddress", "Counter32", "Gauge32", "ObjectIdentity", "Bits")
RowStatus, DisplayString, MacAddress, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "MacAddress", "TextualConvention")
alcatelIND1AAAMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1))
alcatelIND1AAAMIB.setRevisions(('2010-05-13 00:00', '2007-04-03 00:00',))
if mibBuilder.loadTexts: alcatelIND1AAAMIB.setLastUpdated('201311070000Z')
if mibBuilder.loadTexts: alcatelIND1AAAMIB.setOrganization('Alcatel-Lucent')
alcatelIND1AAAMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1))
if mibBuilder.loadTexts: alcatelIND1AAAMIBObjects.setStatus('current')
alcatelIND1AAAMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 2))
if mibBuilder.loadTexts: alcatelIND1AAAMIBConformance.setStatus('current')
alcatelIND1AAAMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1AAAMIBGroups.setStatus('current')
alcatelIND1AAAMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1AAAMIBCompliances.setStatus('current')
aaaServerMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1))
aaaServerTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1), )
if mibBuilder.loadTexts: aaaServerTable.setStatus('current')
aaaServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-AAA-MIB", "aaasName"))
if mibBuilder.loadTexts: aaaServerEntry.setStatus('current')
aaasName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: aaasName.setStatus('current')
aaasProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("radius", 1), ("ldap", 2), ("ace", 3), ("tacacs", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasProtocol.setStatus('current')
aaasHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasHostName.setStatus('current')
aaasIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 4), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasIpAddress.setStatus('current')
aaasHostName2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasHostName2.setStatus('current')
aaasIpAddress2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasIpAddress2.setStatus('current')
aaasRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasRetries.setStatus('current')
aaasTimout = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 30)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasTimout.setStatus('current')
aaasRadKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasRadKey.setStatus('current')
aaasRadAuthPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1645)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasRadAuthPort.setStatus('current')
aaasRadAcctPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1646)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasRadAcctPort.setStatus('current')
aaasLdapPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasLdapPort.setStatus('current')
aaasLdapDn = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasLdapDn.setStatus('current')
aaasLdapPasswd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasLdapPasswd.setStatus('current')
aaasLdapSearchBase = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasLdapSearchBase.setStatus('current')
aaasLdapServType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("ns", 0), ("generic", 1), ("netscape", 2), ("novell", 3), ("sun", 4), ("microsoft", 5))).clone('netscape')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasLdapServType.setStatus('current')
aaasLdapEnableSsl = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ns", 0), ("true", 1), ("false", 2))).clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasLdapEnableSsl.setStatus('current')
aaasRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 18), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasRowStatus.setStatus('current')
aaasTacacsKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 19), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasTacacsKey.setStatus('current')
aaasTacacsPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(49)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasTacacsPort.setStatus('current')
aaasVrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 21), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasVrfName.setStatus('current')
aaasRadKeyHash = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 22), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasRadKeyHash.setStatus('current')
aaasLdapPasswdHash = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 23), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasLdapPasswdHash.setStatus('current')
aaasTacacsKeyHash = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 1, 1, 1, 24), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaasTacacsKeyHash.setStatus('current')
aaaAuthAcctMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2))
aaaAuthSATable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 1), )
if mibBuilder.loadTexts: aaaAuthSATable.setStatus('current')
aaaAuthSAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-AAA-MIB", "aaatsInterface"))
if mibBuilder.loadTexts: aaaAuthSAEntry.setStatus('current')
aaatsInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("default", 1), ("console", 2), ("telnet", 3), ("ftp", 4), ("http", 5), ("snmp", 6), ("ssh", 7))))
if mibBuilder.loadTexts: aaatsInterface.setStatus('current')
aaatsName1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaatsName1.setStatus('current')
aaatsName2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 1, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaatsName2.setStatus('current')
aaatsName3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaatsName3.setStatus('current')
aaatsName4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 1, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaatsName4.setStatus('current')
aaatsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 1, 1, 7), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaatsRowStatus.setStatus('current')
aaatsCertificate = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("noCertificate", 0), ("certificateOnly", 1), ("certificateWithPassword", 2))).clone('noCertificate')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaatsCertificate.setStatus('current')
aaaAcctSATable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 2), )
if mibBuilder.loadTexts: aaaAcctSATable.setStatus('current')
aaaAcctSAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-AAA-MIB", "aaacsInterface"))
if mibBuilder.loadTexts: aaaAcctSAEntry.setStatus('current')
aaacsInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: aaacsInterface.setStatus('current')
aaacsName1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaacsName1.setStatus('current')
aaacsName2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 2, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaacsName2.setStatus('current')
aaacsName3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 2, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaacsName3.setStatus('current')
aaacsName4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 2, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaacsName4.setStatus('current')
aaacsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 2, 1, 6), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaacsRowStatus.setStatus('current')
aaaAcctCmdTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 3), )
if mibBuilder.loadTexts: aaaAcctCmdTable.setStatus('current')
aaaAcctCmdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-AAA-MIB", "aaacmdInterface"))
if mibBuilder.loadTexts: aaaAcctCmdEntry.setStatus('current')
aaacmdInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: aaacmdInterface.setStatus('current')
aaacmdSrvName1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaacmdSrvName1.setStatus('current')
aaacmdSrvName2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 3, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaacmdSrvName2.setStatus('current')
aaacmdSrvName3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 3, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaacmdSrvName3.setStatus('current')
aaacmdSrvName4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 3, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaacmdSrvName4.setStatus('current')
aaacmdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 3, 1, 6), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaacmdRowStatus.setStatus('current')
aaaAuthDATable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 4), )
if mibBuilder.loadTexts: aaaAuthDATable.setStatus('current')
aaaAuthDAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-AAA-MIB", "aaadaInterface"))
if mibBuilder.loadTexts: aaaAuthDAEntry.setStatus('current')
aaadaInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aaadaInterface.setStatus('current')
aaadaName1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 4, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaadaName1.setStatus('current')
aaadaName2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 4, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaadaName2.setStatus('current')
aaadaName3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 4, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaadaName3.setStatus('current')
aaadaName4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 4, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaadaName4.setStatus('current')
aaadaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 4, 1, 6), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaadaRowStatus.setStatus('current')
aaaAcctDATable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 5), )
if mibBuilder.loadTexts: aaaAcctDATable.setStatus('current')
aaaAcctDAEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 5, 1), ).setIndexNames((0, "ALCATEL-IND1-AAA-MIB", "aaacdInterface"))
if mibBuilder.loadTexts: aaaAcctDAEntry.setStatus('current')
aaacdInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)))
if mibBuilder.loadTexts: aaacdInterface.setStatus('current')
aaacdName1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 5, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaacdName1.setStatus('current')
aaacdName2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 5, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaacdName2.setStatus('current')
aaacdName3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 5, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaacdName3.setStatus('current')
aaacdName4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 5, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaacdName4.setStatus('current')
aaacdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 5, 1, 6), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaacdRowStatus.setStatus('current')
aaacdSyslogIPAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 5, 1, 7), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaacdSyslogIPAddrType.setStatus('current')
aaacdSyslogIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 5, 1, 8), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaacdSyslogIPAddr.setStatus('current')
aaacdSyslogUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 5, 1, 9), Unsigned32().clone(514)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaacdSyslogUdpPort.setStatus('current')
aaacdCallngStationId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mac", 1), ("ip", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaacdCallngStationId.setStatus('current')
alaAaaAuthConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6))
alaAaaOnexReAuthStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaOnexReAuthStatus.setStatus('current')
alaAaaOnexReAuthIntrvl = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 2), Integer32().clone(3600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaOnexReAuthIntrvl.setStatus('current')
alaAaaOnexReAuthTrustRadStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaOnexReAuthTrustRadStatus.setStatus('current')
alaAaaOnexIntrmIntrvl = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 4), Integer32().clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaOnexIntrmIntrvl.setStatus('current')
alaAaaOnexIntmIntvlTrstRadSts = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaOnexIntmIntvlTrstRadSts.setStatus('current')
alaAaaMacIntrmIntrvl = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 6), Integer32().clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaMacIntrmIntrvl.setStatus('current')
alaAaaMacIntmIntvlTrstRadStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaMacIntmIntvlTrstRadStatus.setStatus('current')
alaAaaMacSessTimeoutStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaMacSessTimeoutStatus.setStatus('current')
alaAaaMacSessTimeoutIntrvl = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 9), Integer32().clone(43200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaMacSessTimeoutIntrvl.setStatus('current')
alaAaaMacSesTimeoutTrstRadStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaMacSesTimeoutTrstRadStatus.setStatus('current')
alaAaaMacInActLogoutStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaMacInActLogoutStatus.setStatus('current')
alaAaaMacInActLogoutIntrvl = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 12), Integer32().clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaMacInActLogoutIntrvl.setStatus('current')
alaAaaCpIntrmIntrvl = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 13), Integer32().clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaCpIntrmIntrvl.setStatus('current')
alaAaaCpIntmIntvlTrstRadStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaCpIntmIntvlTrstRadStatus.setStatus('current')
alaAaaCpSessTimeoutStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaCpSessTimeoutStatus.setStatus('current')
alaAaaCpSessTimeoutIntrvl = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 16), Integer32().clone(43200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaCpSessTimeoutIntrvl.setStatus('current')
alaAaaCpSessTmotTrstRadStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaCpSessTmotTrstRadStatus.setStatus('current')
alaAaaCpInActLogoutStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaCpInActLogoutStatus.setStatus('current')
alaAaaCpInActLogoutIntrvl = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 19), Integer32().clone(600)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaCpInActLogoutIntrvl.setStatus('current')
alaAaaTacacsServerCmdAuthorization = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 2, 6, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTacacsServerCmdAuthorization.setStatus('current')
aaaUserMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3))
aaaUserTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1), )
if mibBuilder.loadTexts: aaaUserTable.setStatus('current')
aaaUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-AAA-MIB", "aaauUserName"))
if mibBuilder.loadTexts: aaaUserEntry.setStatus('current')
aaauUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63)))
if mibBuilder.loadTexts: aaauUserName.setStatus('current')
aaauPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaauPassword.setStatus('current')
aaauReadRight1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaauReadRight1.setStatus('current')
aaauReadRight2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaauReadRight2.setStatus('current')
aaauWriteRight1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaauWriteRight1.setStatus('current')
aaauWriteRight2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaauWriteRight2.setStatus('current')
aaauSnmpLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("no", 1), ("noauth", 2), ("sha", 3), ("md5", 4), ("shaDes", 5), ("md5Des", 6), ("shaAes", 7), ("sha224", 8), ("sha256", 9)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaauSnmpLevel.setStatus('current')
aaauSnmpAuthKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aaauSnmpAuthKey.setStatus('current')
aaauRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 9), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaauRowStatus.setStatus('current')
aaauOldPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 47))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaauOldPassword.setStatus('current')
aaauPasswordExpirationDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaauPasswordExpirationDate.setStatus('current')
aaauPasswordExpirationInMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 216000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaauPasswordExpirationInMinute.setStatus('current')
aaauPasswordAllowModifyDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aaauPasswordAllowModifyDate.setStatus('current')
aaauPasswordLockoutEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("lockout", 1), ("unlock", 2), ("expired", 3))).clone('unlock')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaauPasswordLockoutEnable.setStatus('current')
aaauBadAtempts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aaauBadAtempts.setStatus('current')
aaauReadRight3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaauReadRight3.setStatus('current')
aaauReadRight4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaauReadRight4.setStatus('current')
aaauWriteRight3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaauWriteRight3.setStatus('current')
aaauWriteRight4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaauWriteRight4.setStatus('current')
aaauSnmpPrivPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 3, 1, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aaauSnmpPrivPassword.setStatus('current')
aaaAsaConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 4))
aaaAsaPasswordSizeMin = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaAsaPasswordSizeMin.setStatus('current')
aaaAsaDefaultPasswordExpirationInDays = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 150))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaAsaDefaultPasswordExpirationInDays.setStatus('current')
aaaAsaPasswordContainUserName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaAsaPasswordContainUserName.setStatus('current')
aaaAsaPasswordMinUpperCase = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaAsaPasswordMinUpperCase.setStatus('current')
aaaAsaPasswordMinLowerCase = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaAsaPasswordMinLowerCase.setStatus('current')
aaaAsaPasswordMinDigit = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 4, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaAsaPasswordMinDigit.setStatus('current')
aaaAsaPasswordMinNonAlphan = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 4, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaAsaPasswordMinNonAlphan.setStatus('current')
aaaAsaPasswordHistory = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 4, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaAsaPasswordHistory.setStatus('current')
aaaAsaPasswordMinAge = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 4, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 150))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaAsaPasswordMinAge.setStatus('current')
aaaAsaLockoutWindow = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 4, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaAsaLockoutWindow.setStatus('current')
aaaAsaLockoutDuration = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 4, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaAsaLockoutDuration.setStatus('current')
aaaAsaLockoutThreshold = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 4, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaAsaLockoutThreshold.setStatus('current')
aaaAsaAccessPolicyAdminConsoleOnly = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 4, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaAsaAccessPolicyAdminConsoleOnly.setStatus('current')
aaaAsaAccessMode = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 4, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("enhanced", 2))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaAsaAccessMode.setStatus('current')
aaaAsaAccessIpLockoutThreshold = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 4, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 999)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaAsaAccessIpLockoutThreshold.setStatus('current')
aaaAsaAccessManagementIpStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 4, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaAsaAccessManagementIpStatus.setStatus('current')
alaAaaClientAttr = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 5))
alaAaaRadClientGlobalAttr = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 5, 1))
alaAaaRadNasPortId = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 5, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaRadNasPortId.setStatus('current')
alaAaaRadNasIdentifier = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 5, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaRadNasIdentifier.setStatus('current')
alaAaaRadUserNameDelim = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 5, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaRadUserNameDelim.setStatus('current')
alaAaaRadPasswordDelim = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 5, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaRadPasswordDelim.setStatus('current')
alaAaaRadCallnStnIdDelim = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 5, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaRadCallnStnIdDelim.setStatus('current')
alaAaaRadCalldStnIdDelim = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 5, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaRadCalldStnIdDelim.setStatus('current')
alaAaaRadUserNameCase = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lowerCase", 1), ("upperCase", 2))).clone('upperCase')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaRadUserNameCase.setStatus('current')
alaAaaRadPasswordCase = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lowerCase", 1), ("upperCase", 2))).clone('upperCase')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaRadPasswordCase.setStatus('current')
alaAaaRadCallingStationIdCase = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lowerCase", 1), ("upperCase", 2))).clone('upperCase')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaRadCallingStationIdCase.setStatus('current')
alaAaaRadCalledStationIdCase = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lowerCase", 1), ("upperCase", 2))).clone('upperCase')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaRadCalledStationIdCase.setStatus('current')
alaAaaProfileObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6))
alaAaaProfileConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1))
alaAaaProfTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1), )
if mibBuilder.loadTexts: alaAaaProfTable.setStatus('current')
alaAaaProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-AAA-MIB", "alaAaaProfName"))
if mibBuilder.loadTexts: alaAaaProfEntry.setStatus('current')
alaAaaProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaAaaProfName.setStatus('current')
alaAaaProfOnexReAuthSts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfOnexReAuthSts.setStatus('current')
alaAaaProfOnexReAuthIntrvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 3), Integer32().clone(3600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfOnexReAuthIntrvl.setStatus('current')
alaAaaProfOnexReAuthTrstRadSts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfOnexReAuthTrstRadSts.setStatus('current')
alaAaaProfOnexIntrmIntrvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 5), Integer32().clone(600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfOnexIntrmIntrvl.setStatus('current')
alaAaaProfOnexIntmItvlTstRadSts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfOnexIntmItvlTstRadSts.setStatus('current')
alaAaaProfMacIntrmIntrvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 7), Integer32().clone(600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfMacIntrmIntrvl.setStatus('current')
alaAaaProfMacIntmItvlTrstRadSts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfMacIntmItvlTrstRadSts.setStatus('current')
alaAaaProfMacSessTimeoutSts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfMacSessTimeoutSts.setStatus('current')
alaAaaProfMacSessTimeoutIntrvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 10), Integer32().clone(43200)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfMacSessTimeoutIntrvl.setStatus('current')
alaAaaProfMacSessTmoutTrstRadSts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfMacSessTmoutTrstRadSts.setStatus('current')
alaAaaProfMacInActLogoutSts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfMacInActLogoutSts.setStatus('current')
alaAaaProfMacInActLogoutIntrvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 13), Integer32().clone(600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfMacInActLogoutIntrvl.setStatus('current')
alaAaaProfCpSessTimeoutSts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfCpSessTimeoutSts.setStatus('current')
alaAaaProfCpSessTimeoutIntrvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 15), Integer32().clone(432000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfCpSessTimeoutIntrvl.setStatus('current')
alaAaaProfCpSessTmotTrstRadSts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfCpSessTmotTrstRadSts.setStatus('current')
alaAaaProfCpInActLogoutSts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfCpInActLogoutSts.setStatus('current')
alaAaaProfCpInActLogoutIntrvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 18), Integer32().clone(600)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfCpInActLogoutIntrvl.setStatus('current')
alaAaaProfCpIntrmIntrvl = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 19), Integer32().clone(43200)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfCpIntrmIntrvl.setStatus('current')
alaAaaProfCpItrmIntlTrstRadSts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfCpItrmIntlTrstRadSts.setStatus('current')
alaAaaProfRadNasPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 21), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfRadNasPortId.setStatus('current')
alaAaaProfRadNasIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 22), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfRadNasIdentifier.setStatus('current')
alaAaaProfRadUserNameDelim = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 23), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfRadUserNameDelim.setStatus('current')
alaAaaProfRadPasswrdDelim = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 24), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfRadPasswrdDelim.setStatus('current')
alaAaaProfRadCallnStnIdDelim = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 25), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfRadCallnStnIdDelim.setStatus('current')
alaAaaProfRadCalldStnIdDelim = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 26), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfRadCalldStnIdDelim.setStatus('current')
alaAaaProfRadUserNameCase = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lowerCase", 1), ("upperCase", 2))).clone('upperCase')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfRadUserNameCase.setStatus('current')
alaAaaProfRadPasswordCase = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lowerCase", 1), ("upperCase", 2))).clone('upperCase')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfRadPasswordCase.setStatus('current')
alaAaaProfRadCallnStnIdCase = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lowerCase", 1), ("upperCase", 2))).clone('upperCase')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfRadCallnStnIdCase.setStatus('current')
alaAaaProfRadCalldStnIdCase = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("lowerCase", 1), ("upperCase", 2))).clone('upperCase')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfRadCalldStnIdCase.setStatus('current')
alaAaaProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 1, 1, 31), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfRowStatus.setStatus('current')
alaAaaProfAuthTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 2), )
if mibBuilder.loadTexts: alaAaaProfAuthTable.setStatus('current')
alaAaaProfAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-AAA-MIB", "alaAaaProfName"), (0, "ALCATEL-IND1-AAA-MIB", "alaAaaProfAuthInterface"))
if mibBuilder.loadTexts: alaAaaProfAuthEntry.setStatus('current')
alaAaaProfAuthInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mac", 1), ("dot1x", 2), ("captivePortal", 3))))
if mibBuilder.loadTexts: alaAaaProfAuthInterface.setStatus('current')
alaAaaProfAuthSrvName1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfAuthSrvName1.setStatus('current')
alaAaaProfAuthSrvName2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 2, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfAuthSrvName2.setStatus('current')
alaAaaProfAuthSrvName3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 2, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfAuthSrvName3.setStatus('current')
alaAaaProfAuthSrvName4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 2, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfAuthSrvName4.setStatus('current')
alaAaaProfAuthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 2, 1, 6), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfAuthRowStatus.setStatus('current')
alaAaaProfAcctTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 3), )
if mibBuilder.loadTexts: alaAaaProfAcctTable.setStatus('current')
alaAaaProfAcctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-AAA-MIB", "alaAaaProfName"), (0, "ALCATEL-IND1-AAA-MIB", "alaAaaProfAcctInterface"))
if mibBuilder.loadTexts: alaAaaProfAcctEntry.setStatus('current')
alaAaaProfAcctInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mac", 1), ("dot1x", 2), ("captivePortal", 3))))
if mibBuilder.loadTexts: alaAaaProfAcctInterface.setStatus('current')
alaAaaProfAcctSrvName1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfAcctSrvName1.setStatus('current')
alaAaaProfAcctSrvName2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 3, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfAcctSrvName2.setStatus('current')
alaAaaProfAcctSrvName3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 3, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfAcctSrvName3.setStatus('current')
alaAaaProfAcctSrvName4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 3, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfAcctSrvName4.setStatus('current')
alaAaaProfAcctSyslogIPAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 3, 1, 6), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfAcctSyslogIPAddrType.setStatus('current')
alaAaaProfAcctSyslogIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 3, 1, 7), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfAcctSyslogIPAddr.setStatus('current')
alaAaaProfAcctSyslogUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 3, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(514)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfAcctSyslogUdpPort.setStatus('current')
alaAaaProfAcctCalingStationId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mac", 1), ("ip", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfAcctCalingStationId.setStatus('current')
alaAaaProfAcctRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 3, 1, 10), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaAaaProfAcctRowStatus.setStatus('current')
aaaSwitchAccessConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7))
aaaSwitchAccessMgmtStationTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 1), )
if mibBuilder.loadTexts: aaaSwitchAccessMgmtStationTable.setStatus('current')
aaaSwitchAccessMgmtStationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-AAA-MIB", "aaaSwitchAccessMgmtStationIpType"), (0, "ALCATEL-IND1-AAA-MIB", "aaaSwitchAccessMgmtStationIpAddress"), (0, "ALCATEL-IND1-AAA-MIB", "aaaSwitchAccessMgmtStationIpPrefixLength"))
if mibBuilder.loadTexts: aaaSwitchAccessMgmtStationEntry.setStatus('current')
aaaSwitchAccessMgmtStationIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 1, 1, 1), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("unknown", 0), ("ipv4", 1))))
if mibBuilder.loadTexts: aaaSwitchAccessMgmtStationIpType.setStatus('current')
aaaSwitchAccessMgmtStationIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 1, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: aaaSwitchAccessMgmtStationIpAddress.setStatus('current')
aaaSwitchAccessMgmtStationIpPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 1, 1, 3), InetAddressPrefixLength())
if mibBuilder.loadTexts: aaaSwitchAccessMgmtStationIpPrefixLength.setStatus('current')
aaaSwitchAccessMgmtStationRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 1, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaaSwitchAccessMgmtStationRowStatus.setStatus('current')
aaaSwitchAccessBannedIpTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 2), )
if mibBuilder.loadTexts: aaaSwitchAccessBannedIpTable.setStatus('current')
aaaSwitchAccessBannedIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-AAA-MIB", "aaaSwitchAccessBannedIpType"), (0, "ALCATEL-IND1-AAA-MIB", "aaaSwitchAccessBannedIpAddress"))
if mibBuilder.loadTexts: aaaSwitchAccessBannedIpEntry.setStatus('current')
aaaSwitchAccessBannedIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: aaaSwitchAccessBannedIpType.setStatus('current')
aaaSwitchAccessBannedIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 2, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: aaaSwitchAccessBannedIpAddress.setStatus('current')
aaaSwitchAccessBannedIpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: aaaSwitchAccessBannedIpRowStatus.setStatus('current')
aaaSwitchAccessPrivMaskTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 3), )
if mibBuilder.loadTexts: aaaSwitchAccessPrivMaskTable.setStatus('current')
aaaSwitchAccessPrivMaskEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-AAA-MIB", "aaaSwitchAccessType"))
if mibBuilder.loadTexts: aaaSwitchAccessPrivMaskEntry.setStatus('current')
aaaSwitchAccessType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("console", 1), ("telnet", 2), ("ssh", 3), ("http", 4), ("https", 5))))
if mibBuilder.loadTexts: aaaSwitchAccessType.setStatus('current')
aaaSwitchAccessReadRight1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSwitchAccessReadRight1.setStatus('current')
aaaSwitchAccessReadRight2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSwitchAccessReadRight2.setStatus('current')
aaaSwitchAccessReadRight3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSwitchAccessReadRight3.setStatus('current')
aaaSwitchAccessReadRight4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSwitchAccessReadRight4.setStatus('current')
aaaSwitchAccessWriteRight1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSwitchAccessWriteRight1.setStatus('current')
aaaSwitchAccessWriteRight2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSwitchAccessWriteRight2.setStatus('current')
aaaSwitchAccessWriteRight3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 3, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSwitchAccessWriteRight3.setStatus('current')
aaaSwitchAccessWriteRight4 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 7, 3, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aaaSwitchAccessWriteRight4.setStatus('current')
alaAaaUserProfileSave = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("userProfile", 1), ("globalProfile", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaUserProfileSave.setStatus('current')
alaAaaCommonCriteriaConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 8))
alaAaaCommonCriteriaMode = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaCommonCriteriaMode.setStatus('current')
alaAaaTlsConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9))
alaAaaTlsBaseConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 1))
alaAaaTlsCaFileName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsCaFileName.setStatus('current')
alaAaaTlsCrlFileName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsCrlFileName.setStatus('current')
alaAaaTlsKeyFileName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsKeyFileName.setStatus('current')
alaAaaTlsSelfSignedCert = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 2))
alaAaaTlsSelfSignedCertFileName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 2, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsSelfSignedCertFileName.setStatus('current')
alaAaaTlsSelfSignedCertKeyFileName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 2, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsSelfSignedCertKeyFileName.setStatus('current')
alaAaaTlsSelfSignedCertValidPeriod = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3650))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsSelfSignedCertValidPeriod.setStatus('current')
alaAaaTlsSelfSignedCertCommonName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 2, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsSelfSignedCertCommonName.setStatus('current')
alaAaaTlsSelfSignedCertOrgName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 2, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsSelfSignedCertOrgName.setStatus('current')
alaAaaTlsSelfSignedCertOrgUnit = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 2, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsSelfSignedCertOrgUnit.setStatus('current')
alaAaaTlsSelfSignedCertLocality = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 2, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsSelfSignedCertLocality.setStatus('current')
alaAaaTlsSelfSignedCertState = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 2, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsSelfSignedCertState.setStatus('current')
alaAaaTlsSelfSignedCertCountry = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 2, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsSelfSignedCertCountry.setStatus('current')
alaAaaTlsSelfSignedCertAction = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsSelfSignedCertAction.setStatus('current')
alaAaaTlsCsr = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 3))
alaAaaTlsCsrFileName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 3, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsCsrFileName.setStatus('current')
alaAaaTlsCsrKeyFileName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 3, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsCsrKeyFileName.setStatus('current')
alaAaaTlsCsrCommonName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 3, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsCsrCommonName.setStatus('current')
alaAaaTlsCsrOrgName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 3, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsCsrOrgName.setStatus('current')
alaAaaTlsCsrOrgUnit = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 3, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsCsrOrgUnit.setStatus('current')
alaAaaTlsCsrLocality = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 3, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsCsrLocality.setStatus('current')
alaAaaTlsCsrState = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 3, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsCsrState.setStatus('current')
alaAaaTlsCsrCountry = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 3, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsCsrCountry.setStatus('current')
alaAaaTlsValidate = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 4))
alaAaaTlsValidateCa = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 4, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsValidateCa.setStatus('current')
alaAaaTlsValidateCert = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 1, 9, 4, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaAaaTlsValidateCert.setStatus('current')
alcatelIND1AAAMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-AAA-MIB", "aaaServerMIBGroup"), ("ALCATEL-IND1-AAA-MIB", "aaaAuthAcctGroup"), ("ALCATEL-IND1-AAA-MIB", "aaaUserMIBGroup"), ("ALCATEL-IND1-AAA-MIB", "alaAaaClientAttrGroup"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfileObjectsGroup"), ("ALCATEL-IND1-AAA-MIB", "aaaSwitchAccessMIBGroup"), ("ALCATEL-IND1-AAA-MIB", "alaAaaCommonCriteriaGroup"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsBaseConfigGroup"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsSelfSignedCertGroup"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsCsrGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1AAAMIBCompliance = alcatelIND1AAAMIBCompliance.setStatus('current')
aaaServerMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-AAA-MIB", "aaasProtocol"), ("ALCATEL-IND1-AAA-MIB", "aaasHostName"), ("ALCATEL-IND1-AAA-MIB", "aaasIpAddress"), ("ALCATEL-IND1-AAA-MIB", "aaasHostName2"), ("ALCATEL-IND1-AAA-MIB", "aaasIpAddress2"), ("ALCATEL-IND1-AAA-MIB", "aaasRetries"), ("ALCATEL-IND1-AAA-MIB", "aaasTimout"), ("ALCATEL-IND1-AAA-MIB", "aaasRadKey"), ("ALCATEL-IND1-AAA-MIB", "aaasRadAuthPort"), ("ALCATEL-IND1-AAA-MIB", "aaasRadAcctPort"), ("ALCATEL-IND1-AAA-MIB", "aaasLdapPort"), ("ALCATEL-IND1-AAA-MIB", "aaasLdapDn"), ("ALCATEL-IND1-AAA-MIB", "aaasLdapPasswd"), ("ALCATEL-IND1-AAA-MIB", "aaasLdapSearchBase"), ("ALCATEL-IND1-AAA-MIB", "aaasLdapServType"), ("ALCATEL-IND1-AAA-MIB", "aaasLdapEnableSsl"), ("ALCATEL-IND1-AAA-MIB", "aaasRowStatus"), ("ALCATEL-IND1-AAA-MIB", "aaasTacacsKey"), ("ALCATEL-IND1-AAA-MIB", "aaasTacacsPort"), ("ALCATEL-IND1-AAA-MIB", "aaasVrfName"), ("ALCATEL-IND1-AAA-MIB", "aaasRadKeyHash"), ("ALCATEL-IND1-AAA-MIB", "aaasLdapPasswdHash"), ("ALCATEL-IND1-AAA-MIB", "aaasTacacsKeyHash"), ("ALCATEL-IND1-AAA-MIB", "aaaAsaAccessMode"), ("ALCATEL-IND1-AAA-MIB", "aaaAsaAccessIpLockoutThreshold"), ("ALCATEL-IND1-AAA-MIB", "aaaAsaAccessManagementIpStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aaaServerMIBGroup = aaaServerMIBGroup.setStatus('current')
aaaAuthAcctGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-AAA-MIB", "aaatsName1"), ("ALCATEL-IND1-AAA-MIB", "aaatsName2"), ("ALCATEL-IND1-AAA-MIB", "aaatsName3"), ("ALCATEL-IND1-AAA-MIB", "aaatsName4"), ("ALCATEL-IND1-AAA-MIB", "aaatsRowStatus"), ("ALCATEL-IND1-AAA-MIB", "aaatsCertificate"), ("ALCATEL-IND1-AAA-MIB", "aaacsName1"), ("ALCATEL-IND1-AAA-MIB", "aaacsName2"), ("ALCATEL-IND1-AAA-MIB", "aaacsName3"), ("ALCATEL-IND1-AAA-MIB", "aaacsName4"), ("ALCATEL-IND1-AAA-MIB", "aaacsRowStatus"), ("ALCATEL-IND1-AAA-MIB", "aaacmdSrvName1"), ("ALCATEL-IND1-AAA-MIB", "aaacmdSrvName2"), ("ALCATEL-IND1-AAA-MIB", "aaacmdSrvName3"), ("ALCATEL-IND1-AAA-MIB", "aaacmdSrvName4"), ("ALCATEL-IND1-AAA-MIB", "aaacmdRowStatus"), ("ALCATEL-IND1-AAA-MIB", "aaadaInterface"), ("ALCATEL-IND1-AAA-MIB", "aaadaName1"), ("ALCATEL-IND1-AAA-MIB", "aaadaName2"), ("ALCATEL-IND1-AAA-MIB", "aaadaName3"), ("ALCATEL-IND1-AAA-MIB", "aaadaName4"), ("ALCATEL-IND1-AAA-MIB", "aaadaRowStatus"), ("ALCATEL-IND1-AAA-MIB", "aaacdName1"), ("ALCATEL-IND1-AAA-MIB", "aaacdName2"), ("ALCATEL-IND1-AAA-MIB", "aaacdName3"), ("ALCATEL-IND1-AAA-MIB", "aaacdName4"), ("ALCATEL-IND1-AAA-MIB", "aaacdRowStatus"), ("ALCATEL-IND1-AAA-MIB", "aaacdSyslogIPAddrType"), ("ALCATEL-IND1-AAA-MIB", "aaacdSyslogIPAddr"), ("ALCATEL-IND1-AAA-MIB", "aaacdSyslogUdpPort"), ("ALCATEL-IND1-AAA-MIB", "aaacdCallngStationId"), ("ALCATEL-IND1-AAA-MIB", "alaAaaOnexReAuthStatus"), ("ALCATEL-IND1-AAA-MIB", "alaAaaOnexReAuthIntrvl"), ("ALCATEL-IND1-AAA-MIB", "alaAaaOnexReAuthTrustRadStatus"), ("ALCATEL-IND1-AAA-MIB", "alaAaaOnexIntrmIntrvl"), ("ALCATEL-IND1-AAA-MIB", "alaAaaOnexIntmIntvlTrstRadSts"), ("ALCATEL-IND1-AAA-MIB", "alaAaaMacIntrmIntrvl"), ("ALCATEL-IND1-AAA-MIB", "alaAaaMacIntmIntvlTrstRadStatus"), ("ALCATEL-IND1-AAA-MIB", "alaAaaMacSessTimeoutStatus"), ("ALCATEL-IND1-AAA-MIB", "alaAaaMacSessTimeoutIntrvl"), ("ALCATEL-IND1-AAA-MIB", "alaAaaMacSesTimeoutTrstRadStatus"), ("ALCATEL-IND1-AAA-MIB", "alaAaaMacInActLogoutStatus"), ("ALCATEL-IND1-AAA-MIB", "alaAaaMacInActLogoutIntrvl"), ("ALCATEL-IND1-AAA-MIB", "alaAaaCpSessTimeoutStatus"), ("ALCATEL-IND1-AAA-MIB", "alaAaaCpSessTimeoutIntrvl"), ("ALCATEL-IND1-AAA-MIB", "alaAaaCpSessTmotTrstRadStatus"), ("ALCATEL-IND1-AAA-MIB", "alaAaaCpIntrmIntrvl"), ("ALCATEL-IND1-AAA-MIB", "alaAaaCpIntmIntvlTrstRadStatus"), ("ALCATEL-IND1-AAA-MIB", "alaAaaCpInActLogoutStatus"), ("ALCATEL-IND1-AAA-MIB", "alaAaaCpInActLogoutIntrvl"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTacacsServerCmdAuthorization"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aaaAuthAcctGroup = aaaAuthAcctGroup.setStatus('current')
aaaUserMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-AAA-MIB", "aaauPassword"), ("ALCATEL-IND1-AAA-MIB", "aaauReadRight1"), ("ALCATEL-IND1-AAA-MIB", "aaauReadRight2"), ("ALCATEL-IND1-AAA-MIB", "aaauWriteRight1"), ("ALCATEL-IND1-AAA-MIB", "aaauWriteRight2"), ("ALCATEL-IND1-AAA-MIB", "aaauSnmpLevel"), ("ALCATEL-IND1-AAA-MIB", "aaauSnmpAuthKey"), ("ALCATEL-IND1-AAA-MIB", "aaauRowStatus"), ("ALCATEL-IND1-AAA-MIB", "aaauOldPassword"), ("ALCATEL-IND1-AAA-MIB", "aaauPasswordExpirationDate"), ("ALCATEL-IND1-AAA-MIB", "aaauPasswordExpirationInMinute"), ("ALCATEL-IND1-AAA-MIB", "aaauPasswordAllowModifyDate"), ("ALCATEL-IND1-AAA-MIB", "aaauPasswordLockoutEnable"), ("ALCATEL-IND1-AAA-MIB", "aaauBadAtempts"), ("ALCATEL-IND1-AAA-MIB", "aaauReadRight3"), ("ALCATEL-IND1-AAA-MIB", "aaauReadRight4"), ("ALCATEL-IND1-AAA-MIB", "aaauWriteRight3"), ("ALCATEL-IND1-AAA-MIB", "aaauWriteRight4"), ("ALCATEL-IND1-AAA-MIB", "aaaAsaPasswordSizeMin"), ("ALCATEL-IND1-AAA-MIB", "aaaAsaDefaultPasswordExpirationInDays"), ("ALCATEL-IND1-AAA-MIB", "aaaAsaPasswordContainUserName"), ("ALCATEL-IND1-AAA-MIB", "aaaAsaPasswordMinUpperCase"), ("ALCATEL-IND1-AAA-MIB", "aaaAsaPasswordMinLowerCase"), ("ALCATEL-IND1-AAA-MIB", "aaaAsaPasswordMinDigit"), ("ALCATEL-IND1-AAA-MIB", "aaaAsaPasswordMinNonAlphan"), ("ALCATEL-IND1-AAA-MIB", "aaaAsaPasswordHistory"), ("ALCATEL-IND1-AAA-MIB", "aaaAsaPasswordMinAge"), ("ALCATEL-IND1-AAA-MIB", "aaaAsaLockoutWindow"), ("ALCATEL-IND1-AAA-MIB", "aaaAsaLockoutDuration"), ("ALCATEL-IND1-AAA-MIB", "aaaAsaLockoutThreshold"), ("ALCATEL-IND1-AAA-MIB", "aaaAsaAccessPolicyAdminConsoleOnly"), ("ALCATEL-IND1-AAA-MIB", "aaauSnmpPrivPassword"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aaaUserMIBGroup = aaaUserMIBGroup.setStatus('current')
alaAaaClientAttrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-AAA-MIB", "alaAaaRadNasPortId"), ("ALCATEL-IND1-AAA-MIB", "alaAaaRadNasIdentifier"), ("ALCATEL-IND1-AAA-MIB", "alaAaaRadUserNameDelim"), ("ALCATEL-IND1-AAA-MIB", "alaAaaRadPasswordDelim"), ("ALCATEL-IND1-AAA-MIB", "alaAaaRadCallnStnIdDelim"), ("ALCATEL-IND1-AAA-MIB", "alaAaaRadCalldStnIdDelim"), ("ALCATEL-IND1-AAA-MIB", "alaAaaRadUserNameCase"), ("ALCATEL-IND1-AAA-MIB", "alaAaaRadPasswordCase"), ("ALCATEL-IND1-AAA-MIB", "alaAaaRadCallingStationIdCase"), ("ALCATEL-IND1-AAA-MIB", "alaAaaRadCalledStationIdCase"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaAaaClientAttrGroup = alaAaaClientAttrGroup.setStatus('current')
alaAaaProfileObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-AAA-MIB", "alaAaaProfOnexReAuthSts"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfOnexReAuthIntrvl"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfOnexReAuthTrstRadSts"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfOnexIntrmIntrvl"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfOnexIntmItvlTstRadSts"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfMacIntrmIntrvl"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfMacIntmItvlTrstRadSts"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfMacSessTimeoutSts"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfMacSessTimeoutIntrvl"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfMacSessTmoutTrstRadSts"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfMacInActLogoutSts"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfMacInActLogoutIntrvl"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfCpSessTimeoutSts"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfCpSessTimeoutIntrvl"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfCpSessTmotTrstRadSts"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfCpInActLogoutSts"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfCpInActLogoutIntrvl"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfCpIntrmIntrvl"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfCpItrmIntlTrstRadSts"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfRadNasPortId"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfRadNasIdentifier"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfRadUserNameDelim"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfRadPasswrdDelim"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfRadCallnStnIdDelim"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfRadCalldStnIdDelim"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfRadUserNameCase"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfRadPasswordCase"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfRadCallnStnIdCase"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfRadCalldStnIdCase"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfRowStatus"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfAuthSrvName1"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfAuthSrvName2"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfAuthSrvName3"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfAuthSrvName4"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfAuthRowStatus"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfAcctSrvName1"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfAcctSrvName2"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfAcctSrvName3"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfAcctSrvName4"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfAcctSyslogIPAddrType"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfAcctSyslogIPAddr"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfAcctSyslogUdpPort"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfAcctCalingStationId"), ("ALCATEL-IND1-AAA-MIB", "alaAaaProfAcctRowStatus"), ("ALCATEL-IND1-AAA-MIB", "alaAaaUserProfileSave"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaAaaProfileObjectsGroup = alaAaaProfileObjectsGroup.setStatus('current')
aaaSwitchAccessMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-AAA-MIB", "aaaSwitchAccessMgmtStationRowStatus"), ("ALCATEL-IND1-AAA-MIB", "aaaSwitchAccessBannedIpRowStatus"), ("ALCATEL-IND1-AAA-MIB", "aaaSwitchAccessReadRight1"), ("ALCATEL-IND1-AAA-MIB", "aaaSwitchAccessReadRight2"), ("ALCATEL-IND1-AAA-MIB", "aaaSwitchAccessReadRight3"), ("ALCATEL-IND1-AAA-MIB", "aaaSwitchAccessReadRight4"), ("ALCATEL-IND1-AAA-MIB", "aaaSwitchAccessWriteRight1"), ("ALCATEL-IND1-AAA-MIB", "aaaSwitchAccessWriteRight2"), ("ALCATEL-IND1-AAA-MIB", "aaaSwitchAccessWriteRight3"), ("ALCATEL-IND1-AAA-MIB", "aaaSwitchAccessWriteRight4"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aaaSwitchAccessMIBGroup = aaaSwitchAccessMIBGroup.setStatus('current')
alaAaaCommonCriteriaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 2, 1, 7)).setObjects(("ALCATEL-IND1-AAA-MIB", "alaAaaCommonCriteriaMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaAaaCommonCriteriaGroup = alaAaaCommonCriteriaGroup.setStatus('current')
alaAaaTlsBaseConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 2, 1, 8)).setObjects(("ALCATEL-IND1-AAA-MIB", "alaAaaTlsCaFileName"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsCrlFileName"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsKeyFileName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaAaaTlsBaseConfigGroup = alaAaaTlsBaseConfigGroup.setStatus('current')
alaAaaTlsSelfSignedCertGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 2, 1, 9)).setObjects(("ALCATEL-IND1-AAA-MIB", "alaAaaTlsSelfSignedCertFileName"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsSelfSignedCertKeyFileName"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsSelfSignedCertValidPeriod"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsSelfSignedCertCommonName"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsSelfSignedCertOrgName"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsSelfSignedCertOrgUnit"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsSelfSignedCertLocality"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsSelfSignedCertState"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsSelfSignedCertCountry"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsSelfSignedCertAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaAaaTlsSelfSignedCertGroup = alaAaaTlsSelfSignedCertGroup.setStatus('current')
alaAaaTlsCsrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 2, 1, 10)).setObjects(("ALCATEL-IND1-AAA-MIB", "alaAaaTlsCsrFileName"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsCsrKeyFileName"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsCsrCommonName"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsCsrOrgName"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsCsrOrgUnit"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsCsrLocality"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsCsrState"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsCsrCountry"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaAaaTlsCsrGroup = alaAaaTlsCsrGroup.setStatus('current')
alaAaaTlsValidateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 15, 1, 2, 1, 11)).setObjects(("ALCATEL-IND1-AAA-MIB", "alaAaaTlsValidateCa"), ("ALCATEL-IND1-AAA-MIB", "alaAaaTlsValidateCert"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaAaaTlsValidateGroup = alaAaaTlsValidateGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-AAA-MIB", aaasLdapPort=aaasLdapPort, alaAaaMacInActLogoutStatus=alaAaaMacInActLogoutStatus, alcatelIND1AAAMIBGroups=alcatelIND1AAAMIBGroups, aaaAcctDAEntry=aaaAcctDAEntry, aaauWriteRight3=aaauWriteRight3, alaAaaTlsCsrGroup=alaAaaTlsCsrGroup, aaacsInterface=aaacsInterface, aaacmdSrvName3=aaacmdSrvName3, aaadaRowStatus=aaadaRowStatus, alaAaaTlsBaseConfigGroup=alaAaaTlsBaseConfigGroup, alaAaaProfRadCalldStnIdCase=alaAaaProfRadCalldStnIdCase, aaacdName4=aaacdName4, aaadaName4=aaadaName4, aaacmdInterface=aaacmdInterface, aaatsName3=aaatsName3, alaAaaProfileObjectsGroup=alaAaaProfileObjectsGroup, alaAaaUserProfileSave=alaAaaUserProfileSave, aaacdCallngStationId=aaacdCallngStationId, alaAaaProfMacInActLogoutIntrvl=alaAaaProfMacInActLogoutIntrvl, alaAaaProfRadUserNameDelim=alaAaaProfRadUserNameDelim, alaAaaRadNasPortId=alaAaaRadNasPortId, aaauWriteRight1=aaauWriteRight1, aaaUserTable=aaaUserTable, alaAaaRadUserNameDelim=alaAaaRadUserNameDelim, aaaSwitchAccessBannedIpRowStatus=aaaSwitchAccessBannedIpRowStatus, aaacdSyslogIPAddrType=aaacdSyslogIPAddrType, aaasLdapServType=aaasLdapServType, aaasTimout=aaasTimout, alaAaaProfRadCalldStnIdDelim=alaAaaProfRadCalldStnIdDelim, alaAaaTlsSelfSignedCertCountry=alaAaaTlsSelfSignedCertCountry, aaauUserName=aaauUserName, aaaAsaAccessManagementIpStatus=aaaAsaAccessManagementIpStatus, aaaSwitchAccessBannedIpAddress=aaaSwitchAccessBannedIpAddress, alaAaaProfAuthSrvName4=alaAaaProfAuthSrvName4, alcatelIND1AAAMIBObjects=alcatelIND1AAAMIBObjects, aaaServerEntry=aaaServerEntry, aaauReadRight4=aaauReadRight4, alaAaaProfAuthEntry=alaAaaProfAuthEntry, aaasHostName2=aaasHostName2, aaauPasswordLockoutEnable=aaauPasswordLockoutEnable, alaAaaProfAcctSyslogUdpPort=alaAaaProfAcctSyslogUdpPort, alcatelIND1AAAMIBCompliance=alcatelIND1AAAMIBCompliance, aaaAuthDATable=aaaAuthDATable, alaAaaMacSesTimeoutTrstRadStatus=alaAaaMacSesTimeoutTrstRadStatus, aaaAsaLockoutWindow=aaaAsaLockoutWindow, aaaSwitchAccessBannedIpType=aaaSwitchAccessBannedIpType, aaasTacacsKey=aaasTacacsKey, aaacdInterface=aaacdInterface, aaaAsaConfig=aaaAsaConfig, alaAaaProfOnexIntmItvlTstRadSts=alaAaaProfOnexIntmItvlTstRadSts, alaAaaProfAuthRowStatus=alaAaaProfAuthRowStatus, alaAaaRadNasIdentifier=alaAaaRadNasIdentifier, aaasHostName=aaasHostName, aaaServerMIBGroup=aaaServerMIBGroup, alaAaaProfRadNasIdentifier=alaAaaProfRadNasIdentifier, alaAaaProfCpItrmIntlTrstRadSts=alaAaaProfCpItrmIntlTrstRadSts, aaaUserEntry=aaaUserEntry, alaAaaProfMacSessTmoutTrstRadSts=alaAaaProfMacSessTmoutTrstRadSts, alaAaaProfMacInActLogoutSts=alaAaaProfMacInActLogoutSts, alaAaaMacIntmIntvlTrstRadStatus=alaAaaMacIntmIntvlTrstRadStatus, aaauSnmpLevel=aaauSnmpLevel, alaAaaOnexReAuthIntrvl=alaAaaOnexReAuthIntrvl, aaaSwitchAccessMgmtStationEntry=aaaSwitchAccessMgmtStationEntry, alaAaaTlsSelfSignedCert=alaAaaTlsSelfSignedCert, aaasLdapSearchBase=aaasLdapSearchBase, aaaSwitchAccessPrivMaskTable=aaaSwitchAccessPrivMaskTable, alaAaaProfRadCallnStnIdDelim=alaAaaProfRadCallnStnIdDelim, aaaSwitchAccessWriteRight2=aaaSwitchAccessWriteRight2, alaAaaTlsValidateGroup=alaAaaTlsValidateGroup, alaAaaMacSessTimeoutIntrvl=alaAaaMacSessTimeoutIntrvl, aaaSwitchAccessWriteRight4=aaaSwitchAccessWriteRight4, aaasRadKeyHash=aaasRadKeyHash, aaasIpAddress=aaasIpAddress, aaauSnmpPrivPassword=aaauSnmpPrivPassword, aaaServerTable=aaaServerTable, aaacmdRowStatus=aaacmdRowStatus, alaAaaTlsCsrCountry=alaAaaTlsCsrCountry, alaAaaTlsCsrFileName=alaAaaTlsCsrFileName, alcatelIND1AAAMIBConformance=alcatelIND1AAAMIBConformance, alaAaaTlsSelfSignedCertKeyFileName=alaAaaTlsSelfSignedCertKeyFileName, alaAaaProfCpSessTimeoutSts=alaAaaProfCpSessTimeoutSts, alaAaaProfRadNasPortId=alaAaaProfRadNasPortId, alaAaaCpSessTimeoutIntrvl=alaAaaCpSessTimeoutIntrvl, alaAaaMacSessTimeoutStatus=alaAaaMacSessTimeoutStatus, aaacdSyslogUdpPort=aaacdSyslogUdpPort, aaasLdapPasswd=aaasLdapPasswd, alaAaaProfCpSessTmotTrstRadSts=alaAaaProfCpSessTmotTrstRadSts, alaAaaProfAcctInterface=alaAaaProfAcctInterface, aaaSwitchAccessReadRight4=aaaSwitchAccessReadRight4, aaaAcctCmdEntry=aaaAcctCmdEntry, alaAaaProfAuthSrvName1=alaAaaProfAuthSrvName1, aaaSwitchAccessMgmtStationIpType=aaaSwitchAccessMgmtStationIpType, aaacmdSrvName1=aaacmdSrvName1, aaaAuthDAEntry=aaaAuthDAEntry, alaAaaProfRowStatus=alaAaaProfRowStatus, alaAaaProfName=alaAaaProfName, alaAaaProfEntry=alaAaaProfEntry, alaAaaTlsSelfSignedCertGroup=alaAaaTlsSelfSignedCertGroup, aaacmdSrvName4=aaacmdSrvName4, alaAaaProfRadCallnStnIdCase=alaAaaProfRadCallnStnIdCase, alaAaaTlsBaseConfig=alaAaaTlsBaseConfig, aaaSwitchAccessReadRight2=aaaSwitchAccessReadRight2, alaAaaCpInActLogoutIntrvl=alaAaaCpInActLogoutIntrvl, aaatsName2=aaatsName2, aaaAsaAccessIpLockoutThreshold=aaaAsaAccessIpLockoutThreshold, aaasTacacsPort=aaasTacacsPort, aaacsName1=aaacsName1, alaAaaProfOnexReAuthSts=alaAaaProfOnexReAuthSts, alaAaaProfAcctSrvName1=alaAaaProfAcctSrvName1, alaAaaOnexReAuthTrustRadStatus=alaAaaOnexReAuthTrustRadStatus, aaadaInterface=aaadaInterface, alaAaaProfAcctSyslogIPAddrType=alaAaaProfAcctSyslogIPAddrType, aaatsInterface=aaatsInterface, aaaAcctCmdTable=aaaAcctCmdTable, aaaAsaPasswordMinUpperCase=aaaAsaPasswordMinUpperCase, alaAaaOnexIntrmIntrvl=alaAaaOnexIntrmIntrvl, aaauSnmpAuthKey=aaauSnmpAuthKey, aaaAsaPasswordMinNonAlphan=aaaAsaPasswordMinNonAlphan, alaAaaTlsCsrOrgName=alaAaaTlsCsrOrgName, alaAaaCpIntmIntvlTrstRadStatus=alaAaaCpIntmIntvlTrstRadStatus, alaAaaProfAuthSrvName3=alaAaaProfAuthSrvName3, aaaSwitchAccessReadRight3=aaaSwitchAccessReadRight3, aaacsName4=aaacsName4, aaaSwitchAccessMIBGroup=aaaSwitchAccessMIBGroup, aaaAsaPasswordSizeMin=aaaAsaPasswordSizeMin, alaAaaTlsConfig=alaAaaTlsConfig, aaacdName2=aaacdName2, aaadaName3=aaadaName3, alaAaaProfAuthTable=alaAaaProfAuthTable, aaacsRowStatus=aaacsRowStatus, aaaSwitchAccessWriteRight1=aaaSwitchAccessWriteRight1, alaAaaAuthConfig=alaAaaAuthConfig, alaAaaTlsValidateCa=alaAaaTlsValidateCa, alaAaaTlsCsrKeyFileName=alaAaaTlsCsrKeyFileName, alaAaaProfOnexReAuthTrstRadSts=alaAaaProfOnexReAuthTrstRadSts, alaAaaProfOnexIntrmIntrvl=alaAaaProfOnexIntrmIntrvl, alaAaaTlsCsrState=alaAaaTlsCsrState, aaaAsaAccessPolicyAdminConsoleOnly=aaaAsaAccessPolicyAdminConsoleOnly, alaAaaTlsCrlFileName=alaAaaTlsCrlFileName, alaAaaTlsValidate=alaAaaTlsValidate, alaAaaTlsSelfSignedCertCommonName=alaAaaTlsSelfSignedCertCommonName, alaAaaTlsSelfSignedCertLocality=alaAaaTlsSelfSignedCertLocality, alaAaaProfRadPasswrdDelim=alaAaaProfRadPasswrdDelim, aaaServerMIB=aaaServerMIB, alaAaaProfAcctEntry=alaAaaProfAcctEntry, aaatsCertificate=aaatsCertificate, aaasRowStatus=aaasRowStatus, alaAaaProfAcctTable=alaAaaProfAcctTable, aaaSwitchAccessMgmtStationRowStatus=aaaSwitchAccessMgmtStationRowStatus, aaasTacacsKeyHash=aaasTacacsKeyHash, alaAaaClientAttrGroup=alaAaaClientAttrGroup, alaAaaMacIntrmIntrvl=alaAaaMacIntrmIntrvl, alaAaaTlsSelfSignedCertOrgUnit=alaAaaTlsSelfSignedCertOrgUnit, aaadaName1=aaadaName1, alaAaaTlsKeyFileName=alaAaaTlsKeyFileName, aaaAsaPasswordMinLowerCase=aaaAsaPasswordMinLowerCase, alaAaaProfileObjects=alaAaaProfileObjects, alaAaaProfAuthInterface=alaAaaProfAuthInterface, aaacsName2=aaacsName2, alaAaaClientAttr=alaAaaClientAttr, aaatsRowStatus=aaatsRowStatus, alaAaaTlsSelfSignedCertValidPeriod=alaAaaTlsSelfSignedCertValidPeriod, alaAaaProfCpSessTimeoutIntrvl=alaAaaProfCpSessTimeoutIntrvl, alaAaaCpSessTmotTrstRadStatus=alaAaaCpSessTmotTrstRadStatus, alaAaaRadClientGlobalAttr=alaAaaRadClientGlobalAttr, alaAaaCpIntrmIntrvl=alaAaaCpIntrmIntrvl, aaaUserMIB=aaaUserMIB, aaauBadAtempts=aaauBadAtempts, aaauPassword=aaauPassword, aaasRadAuthPort=aaasRadAuthPort, alaAaaProfMacIntmItvlTrstRadSts=alaAaaProfMacIntmItvlTrstRadSts, alaAaaProfRadUserNameCase=alaAaaProfRadUserNameCase, alaAaaProfAcctSrvName4=alaAaaProfAcctSrvName4, alaAaaProfMacIntrmIntrvl=alaAaaProfMacIntrmIntrvl, alaAaaTlsCsr=alaAaaTlsCsr, aaaAsaLockoutThreshold=aaaAsaLockoutThreshold, aaasProtocol=aaasProtocol, alaAaaTlsSelfSignedCertState=alaAaaTlsSelfSignedCertState, alaAaaTlsCsrCommonName=alaAaaTlsCsrCommonName, alaAaaTlsSelfSignedCertOrgName=alaAaaTlsSelfSignedCertOrgName, aaauWriteRight4=aaauWriteRight4, aaatsName1=aaatsName1, alaAaaRadCallnStnIdDelim=alaAaaRadCallnStnIdDelim, aaaSwitchAccessBannedIpTable=aaaSwitchAccessBannedIpTable, alaAaaProfMacSessTimeoutIntrvl=alaAaaProfMacSessTimeoutIntrvl, aaauReadRight2=aaauReadRight2, aaaAuthSAEntry=aaaAuthSAEntry, alaAaaCommonCriteriaMode=alaAaaCommonCriteriaMode, aaacdName1=aaacdName1, alaAaaRadCalledStationIdCase=alaAaaRadCalledStationIdCase, aaasRetries=aaasRetries, alaAaaRadPasswordDelim=alaAaaRadPasswordDelim, alaAaaCommonCriteriaGroup=alaAaaCommonCriteriaGroup, aaauRowStatus=aaauRowStatus, aaasLdapEnableSsl=aaasLdapEnableSsl, aaacdSyslogIPAddr=aaacdSyslogIPAddr, aaacsName3=aaacsName3, aaasName=aaasName, aaasLdapDn=aaasLdapDn, aaaAsaDefaultPasswordExpirationInDays=aaaAsaDefaultPasswordExpirationInDays, aaauWriteRight2=aaauWriteRight2, aaaAsaPasswordMinDigit=aaaAsaPasswordMinDigit, aaaAsaPasswordHistory=aaaAsaPasswordHistory, alaAaaTlsSelfSignedCertAction=alaAaaTlsSelfSignedCertAction, alaAaaProfAcctSrvName2=alaAaaProfAcctSrvName2, alcatelIND1AAAMIBCompliances=alcatelIND1AAAMIBCompliances, alcatelIND1AAAMIB=alcatelIND1AAAMIB, alaAaaProfAcctCalingStationId=alaAaaProfAcctCalingStationId, alaAaaProfAcctSrvName3=alaAaaProfAcctSrvName3, aaaSwitchAccessWriteRight3=aaaSwitchAccessWriteRight3, alaAaaTlsValidateCert=alaAaaTlsValidateCert, aaasLdapPasswdHash=aaasLdapPasswdHash, PYSNMP_MODULE_ID=alcatelIND1AAAMIB, alaAaaRadPasswordCase=alaAaaRadPasswordCase, alaAaaProfCpInActLogoutSts=alaAaaProfCpInActLogoutSts, alaAaaTlsCaFileName=alaAaaTlsCaFileName, alaAaaProfileConfig=alaAaaProfileConfig, aaaSwitchAccessConfig=aaaSwitchAccessConfig, aaacdName3=aaacdName3, aaasVrfName=aaasVrfName, aaaAcctDATable=aaaAcctDATable, alaAaaProfCpIntrmIntrvl=alaAaaProfCpIntrmIntrvl, alaAaaProfOnexReAuthIntrvl=alaAaaProfOnexReAuthIntrvl, aaadaName2=aaadaName2, aaauOldPassword=aaauOldPassword, aaaSwitchAccessReadRight1=aaaSwitchAccessReadRight1, aaaSwitchAccessMgmtStationTable=aaaSwitchAccessMgmtStationTable, aaaAcctSAEntry=aaaAcctSAEntry, aaasRadKey=aaasRadKey, aaaAsaAccessMode=aaaAsaAccessMode, alaAaaProfAcctRowStatus=alaAaaProfAcctRowStatus, alaAaaTlsSelfSignedCertFileName=alaAaaTlsSelfSignedCertFileName, aaaAsaLockoutDuration=aaaAsaLockoutDuration, alaAaaOnexReAuthStatus=alaAaaOnexReAuthStatus, alaAaaCommonCriteriaConfig=alaAaaCommonCriteriaConfig, alaAaaRadUserNameCase=alaAaaRadUserNameCase, aaaAsaPasswordMinAge=aaaAsaPasswordMinAge, alaAaaProfAcctSyslogIPAddr=alaAaaProfAcctSyslogIPAddr, aaauPasswordAllowModifyDate=aaauPasswordAllowModifyDate, aaaSwitchAccessBannedIpEntry=aaaSwitchAccessBannedIpEntry, alaAaaTlsCsrOrgUnit=alaAaaTlsCsrOrgUnit, alaAaaRadCalldStnIdDelim=alaAaaRadCalldStnIdDelim, alaAaaCpSessTimeoutStatus=alaAaaCpSessTimeoutStatus, aaacdRowStatus=aaacdRowStatus, alaAaaOnexIntmIntvlTrstRadSts=alaAaaOnexIntmIntvlTrstRadSts, aaaAuthSATable=aaaAuthSATable, aaaSwitchAccessMgmtStationIpPrefixLength=aaaSwitchAccessMgmtStationIpPrefixLength, aaasIpAddress2=aaasIpAddress2, alaAaaProfTable=alaAaaProfTable, alaAaaProfRadPasswordCase=alaAaaProfRadPasswordCase, alaAaaProfAuthSrvName2=alaAaaProfAuthSrvName2, aaaSwitchAccessPrivMaskEntry=aaaSwitchAccessPrivMaskEntry, aaauPasswordExpirationDate=aaauPasswordExpirationDate, aaauPasswordExpirationInMinute=aaauPasswordExpirationInMinute)
mibBuilder.exportSymbols("ALCATEL-IND1-AAA-MIB", aaaAsaPasswordContainUserName=aaaAsaPasswordContainUserName, aaasRadAcctPort=aaasRadAcctPort, aaauReadRight3=aaauReadRight3, alaAaaRadCallingStationIdCase=alaAaaRadCallingStationIdCase, aaatsName4=aaatsName4, alaAaaTacacsServerCmdAuthorization=alaAaaTacacsServerCmdAuthorization, aaaSwitchAccessMgmtStationIpAddress=aaaSwitchAccessMgmtStationIpAddress, alaAaaProfCpInActLogoutIntrvl=alaAaaProfCpInActLogoutIntrvl, alaAaaMacInActLogoutIntrvl=alaAaaMacInActLogoutIntrvl, aaaAuthAcctMIB=aaaAuthAcctMIB, aaauReadRight1=aaauReadRight1, aaaSwitchAccessType=aaaSwitchAccessType, aaaAcctSATable=aaaAcctSATable, alaAaaProfMacSessTimeoutSts=alaAaaProfMacSessTimeoutSts, alaAaaCpInActLogoutStatus=alaAaaCpInActLogoutStatus, aaaAuthAcctGroup=aaaAuthAcctGroup, aaaUserMIBGroup=aaaUserMIBGroup, aaacmdSrvName2=aaacmdSrvName2, alaAaaTlsCsrLocality=alaAaaTlsCsrLocality)
