#
# PySNMP MIB module HALON-SP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/halon/HALON-SP-MIB
# Produced by pysmi-1.1.0 at Fri Nov 19 14:54:14 2021
# On host fv-az33-360 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, iso, TimeTicks, Integer32, ObjectIdentity, ModuleIdentity, Unsigned32, Counter32, IpAddress, Gauge32, Bits, NotificationType, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "iso", "TimeTicks", "Integer32", "ObjectIdentity", "ModuleIdentity", "Unsigned32", "Counter32", "IpAddress", "Gauge32", "Bits", "NotificationType", "enterprises")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
halonSecuritySP = ModuleIdentity((1, 3, 6, 1, 4, 1, 33234, 1, 1))
halonSecuritySP.setRevisions(('2013-02-07 11:32',))
if mibBuilder.loadTexts: halonSecuritySP.setLastUpdated('201302061107Z')
if mibBuilder.loadTexts: halonSecuritySP.setOrganization('Halon Security')
halonSecurity = MibIdentifier((1, 3, 6, 1, 4, 1, 33234))
halonSecurityProducts = MibIdentifier((1, 3, 6, 1, 4, 1, 33234, 1))
halonSecuritySPObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 33234, 1, 1, 1))
serialNumber = MibScalar((1, 3, 6, 1, 4, 1, 33234, 1, 1, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serialNumber.setStatus('current')
configurationRevision = MibScalar((1, 3, 6, 1, 4, 1, 33234, 1, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: configurationRevision.setStatus('current')
mailQueueLength = MibScalar((1, 3, 6, 1, 4, 1, 33234, 1, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mailQueueLength.setStatus('current')
quarantinedMessages = MibScalar((1, 3, 6, 1, 4, 1, 33234, 1, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: quarantinedMessages.setStatus('current')
statTable = MibTable((1, 3, 6, 1, 4, 1, 33234, 1, 1, 1, 5), )
if mibBuilder.loadTexts: statTable.setStatus('current')
statEntry = MibTableRow((1, 3, 6, 1, 4, 1, 33234, 1, 1, 1, 5, 1), ).setIndexNames((0, "HALON-SP-MIB", "statKey1Index"), (0, "HALON-SP-MIB", "statKey2Index"), (0, "HALON-SP-MIB", "statKey3Index"))
if mibBuilder.loadTexts: statEntry.setStatus('current')
statKey1Index = MibTableColumn((1, 3, 6, 1, 4, 1, 33234, 1, 1, 1, 5, 1, 1), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: statKey1Index.setStatus('current')
statKey2Index = MibTableColumn((1, 3, 6, 1, 4, 1, 33234, 1, 1, 1, 5, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: statKey2Index.setStatus('current')
statKey3Index = MibTableColumn((1, 3, 6, 1, 4, 1, 33234, 1, 1, 1, 5, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: statKey3Index.setStatus('current')
statCount = MibTableColumn((1, 3, 6, 1, 4, 1, 33234, 1, 1, 1, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: statCount.setStatus('current')
statCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 33234, 1, 1, 1, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: statCreated.setStatus('current')
statUpdated = MibTableColumn((1, 3, 6, 1, 4, 1, 33234, 1, 1, 1, 5, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: statUpdated.setStatus('current')
mibBuilder.exportSymbols("HALON-SP-MIB", configurationRevision=configurationRevision, halonSecurityProducts=halonSecurityProducts, statCreated=statCreated, statTable=statTable, statUpdated=statUpdated, serialNumber=serialNumber, statKey1Index=statKey1Index, PYSNMP_MODULE_ID=halonSecuritySP, statKey3Index=statKey3Index, halonSecuritySPObjects=halonSecuritySPObjects, halonSecurity=halonSecurity, halonSecuritySP=halonSecuritySP, statCount=statCount, statKey2Index=statKey2Index, statEntry=statEntry, quarantinedMessages=quarantinedMessages, mailQueueLength=mailQueueLength)
