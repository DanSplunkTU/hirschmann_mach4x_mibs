#
# PySNMP MIB module PRVT-SUPER-VLAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-SUPER-VLAN-MIB
# Produced by pysmi-1.1.3 at Sat Nov 20 16:58:04 2021
# On host fv-az42-715 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero")
switch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "switch")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, iso, TimeTicks, MibIdentifier, ObjectIdentity, IpAddress, Unsigned32, ModuleIdentity, Bits, Integer32, Counter32, Counter64, NotificationType, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "TimeTicks", "MibIdentifier", "ObjectIdentity", "IpAddress", "Unsigned32", "ModuleIdentity", "Bits", "Integer32", "Counter32", "Counter64", "NotificationType", "Gauge32")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
prvtSuperVlanMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 5, 136))
prvtSuperVlanMIB.setRevisions(('2010-08-04 00:00',))
if mibBuilder.loadTexts: prvtSuperVlanMIB.setLastUpdated('201008040000Z')
if mibBuilder.loadTexts: prvtSuperVlanMIB.setOrganization('BATM Advanced Communication')
prvtSuperVlanMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 5, 136, 1))
prvtSuperVlanIfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 136, 1, 1), )
if mibBuilder.loadTexts: prvtSuperVlanIfTable.setStatus('current')
prvtSuperVlanIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 136, 1, 1, 1), ).setIndexNames((0, "PRVT-SUPER-VLAN-MIB", "prvtSuperVlanIfIndex"))
if mibBuilder.loadTexts: prvtSuperVlanIfEntry.setStatus('current')
prvtSuperVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 136, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: prvtSuperVlanIfIndex.setStatus('current')
prvtSuperVlanIfTargetPort = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 136, 1, 1, 1, 2), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSuperVlanIfTargetPort.setStatus('current')
prvtSuperVlanIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 136, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSuperVlanIfRowStatus.setStatus('current')
prvtSuperVlanIfCVlanTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 136, 1, 2), )
if mibBuilder.loadTexts: prvtSuperVlanIfCVlanTable.setStatus('current')
prvtSuperVlanIfCVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 136, 1, 2, 1), ).setIndexNames((0, "PRVT-SUPER-VLAN-MIB", "prvtSuperVlanIfIndex"), (0, "PRVT-SUPER-VLAN-MIB", "prvtSuperVlanIfCVlanId"))
if mibBuilder.loadTexts: prvtSuperVlanIfCVlanEntry.setStatus('current')
prvtSuperVlanIfCVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 136, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4092)))
if mibBuilder.loadTexts: prvtSuperVlanIfCVlanId.setStatus('current')
prvtSuperVlanIfCVlanMask = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 136, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSuperVlanIfCVlanMask.setStatus('current')
prvtSuperVlanIfCVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 136, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSuperVlanIfCVlanRowStatus.setStatus('current')
prvtSuperVlanIfRingPortTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 5, 136, 1, 3), )
if mibBuilder.loadTexts: prvtSuperVlanIfRingPortTable.setStatus('current')
prvtSuperVlanIfRingPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 5, 136, 1, 3, 1), ).setIndexNames((0, "PRVT-SUPER-VLAN-MIB", "prvtSuperVlanIfIndex"), (0, "PRVT-SUPER-VLAN-MIB", "prvtSuperVlanIfRingPort1"), (0, "PRVT-SUPER-VLAN-MIB", "prvtSuperVlanIfRingPort2"))
if mibBuilder.loadTexts: prvtSuperVlanIfRingPortEntry.setStatus('current')
prvtSuperVlanIfRingPort1 = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 136, 1, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: prvtSuperVlanIfRingPort1.setStatus('current')
prvtSuperVlanIfRingPort2 = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 136, 1, 3, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: prvtSuperVlanIfRingPort2.setStatus('current')
prvtSuperVlanIfRingPortVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 136, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4092))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSuperVlanIfRingPortVlanId.setStatus('current')
prvtSuperVlanIfRingPortPreferred = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 136, 1, 3, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSuperVlanIfRingPortPreferred.setStatus('current')
prvtSuperVlanIfRingPortActive = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 136, 1, 3, 1, 5), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSuperVlanIfRingPortActive.setStatus('current')
prvtSuperVlanIfRingPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 5, 136, 1, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtSuperVlanIfRingPortRowStatus.setStatus('current')
mibBuilder.exportSymbols("PRVT-SUPER-VLAN-MIB", prvtSuperVlanIfRingPort1=prvtSuperVlanIfRingPort1, prvtSuperVlanIfCVlanId=prvtSuperVlanIfCVlanId, prvtSuperVlanMIBObjects=prvtSuperVlanMIBObjects, prvtSuperVlanIfRingPort2=prvtSuperVlanIfRingPort2, prvtSuperVlanIfRingPortVlanId=prvtSuperVlanIfRingPortVlanId, prvtSuperVlanIfTable=prvtSuperVlanIfTable, prvtSuperVlanMIB=prvtSuperVlanMIB, prvtSuperVlanIfRingPortPreferred=prvtSuperVlanIfRingPortPreferred, prvtSuperVlanIfRingPortEntry=prvtSuperVlanIfRingPortEntry, prvtSuperVlanIfRowStatus=prvtSuperVlanIfRowStatus, PYSNMP_MODULE_ID=prvtSuperVlanMIB, prvtSuperVlanIfIndex=prvtSuperVlanIfIndex, prvtSuperVlanIfCVlanRowStatus=prvtSuperVlanIfCVlanRowStatus, prvtSuperVlanIfCVlanTable=prvtSuperVlanIfCVlanTable, prvtSuperVlanIfEntry=prvtSuperVlanIfEntry, prvtSuperVlanIfRingPortActive=prvtSuperVlanIfRingPortActive, prvtSuperVlanIfRingPortTable=prvtSuperVlanIfRingPortTable, prvtSuperVlanIfTargetPort=prvtSuperVlanIfTargetPort, prvtSuperVlanIfCVlanMask=prvtSuperVlanIfCVlanMask, prvtSuperVlanIfCVlanEntry=prvtSuperVlanIfCVlanEntry, prvtSuperVlanIfRingPortRowStatus=prvtSuperVlanIfRingPortRowStatus)
