#
# PySNMP MIB module ALCATEL-IND1-CAPMAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-CAPMAN-MIB
# Produced by pysmi-1.1.8 at Tue Jan 11 20:47:52 2022
# On host fv-az42-180 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
softentIND1CapMan, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1CapMan")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64, ModuleIdentity, IpAddress, Gauge32, MibIdentifier, iso, TimeTicks, Integer32, Unsigned32, NotificationType, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64", "ModuleIdentity", "IpAddress", "Gauge32", "MibIdentifier", "iso", "TimeTicks", "Integer32", "Unsigned32", "NotificationType", "ObjectIdentity")
TextualConvention, DisplayString, DateAndTime, MacAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "DateAndTime", "MacAddress", "RowStatus")
alcatelIND1CapManMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1))
alcatelIND1CapManMIB.setRevisions(('2009-11-23 00:00',))
if mibBuilder.loadTexts: alcatelIND1CapManMIB.setLastUpdated('200911230000Z')
if mibBuilder.loadTexts: alcatelIND1CapManMIB.setOrganization('Alcatel-Lucent')
alcatelIND1CapManMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1))
if mibBuilder.loadTexts: alcatelIND1CapManMIBObjects.setStatus('current')
alaCapabilityMibNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 0))
alaCapabilityManager = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1))
alaCapManConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2))
alaCapManVrfTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 1), )
if mibBuilder.loadTexts: alaCapManVrfTable.setStatus('deprecated')
alaCapManVrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityVrfContext"), (0, "ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityVrfCapability"))
if mibBuilder.loadTexts: alaCapManVrfEntry.setStatus('deprecated')
alaCapabilityVrfContext = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("global", 1), ("primary", 2), ("subsidiary", 3))))
if mibBuilder.loadTexts: alaCapabilityVrfContext.setStatus('deprecated')
alaCapabilityVrfCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("ipv4Routes", 1), ("ipv6Routes", 2), ("ipv4Interfaces", 3), ("ipv6Interfaces", 4), ("mcastInterfaces", 5), ("pimRPS", 6), ("bgpPeers", 7), ("bgpRoutes", 8), ("ripRoutes", 9), ("routingProtocols", 10), ("maxOSPF", 11))))
if mibBuilder.loadTexts: alaCapabilityVrfCapability.setStatus('deprecated')
alaCapabilityVrfLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 524288))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapabilityVrfLimit.setStatus('deprecated')
alaCapManTcamTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 2), )
if mibBuilder.loadTexts: alaCapManTcamTable.setStatus('deprecated')
alaCapManTcamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityTcamContext"), (0, "ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityTcamCapability"))
if mibBuilder.loadTexts: alaCapManTcamEntry.setStatus('deprecated')
alaCapabilityTcamContext = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("global", 1))))
if mibBuilder.loadTexts: alaCapabilityTcamContext.setStatus('deprecated')
alaCapabilityTcamCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("mode", 1))))
if mibBuilder.loadTexts: alaCapabilityTcamCapability.setStatus('deprecated')
alaCapabilityTcamMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 6))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapabilityTcamMode.setStatus('deprecated')
alaCapManMirrorTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 3), )
if mibBuilder.loadTexts: alaCapManMirrorTable.setStatus('deprecated')
alaCapManMirrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityMirrorContext"), (0, "ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityMirrorCapability"))
if mibBuilder.loadTexts: alaCapManMirrorEntry.setStatus('deprecated')
alaCapabilityMirrorContext = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("global", 1))))
if mibBuilder.loadTexts: alaCapabilityMirrorContext.setStatus('deprecated')
alaCapabilityMirrorCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("maxMonitorSess", 1))))
if mibBuilder.loadTexts: alaCapabilityMirrorCapability.setStatus('deprecated')
alaCapabilityMirrorLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapabilityMirrorLimit.setStatus('deprecated')
alaCapManSourceLearningTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 4), )
if mibBuilder.loadTexts: alaCapManSourceLearningTable.setStatus('deprecated')
alaCapManSourceLearningEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-CAPMAN-MIB", "alaCapabilitySourceLearningContext"), (0, "ALCATEL-IND1-CAPMAN-MIB", "alaCapabilitySourceLearningCapability"))
if mibBuilder.loadTexts: alaCapManSourceLearningEntry.setStatus('deprecated')
alaCapabilitySourceLearningContext = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("global", 1))))
if mibBuilder.loadTexts: alaCapabilitySourceLearningContext.setStatus('deprecated')
alaCapabilitySourceLearningCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("mode", 1))))
if mibBuilder.loadTexts: alaCapabilitySourceLearningCapability.setStatus('deprecated')
alaCapabilitySourceLearningMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("centralized", 1), ("distributed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapabilitySourceLearningMode.setStatus('deprecated')
alaCapManHashControlCommands = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 5))
if mibBuilder.loadTexts: alaCapManHashControlCommands.setStatus('current')
alaCapManHashMode = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("brief", 1), ("extended", 2))).clone('extended')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapManHashMode.setStatus('current')
alaCapManUdpTcpPortMode = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapManUdpTcpPortMode.setStatus('current')
alaCapManNonUCHashControl = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 5, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapManNonUCHashControl.setStatus('current')
alaCapManSwLicensingConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 6))
alaCapManSwLicensingAction = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("default", 0), ("applyFile", 1), ("applyKey", 2), ("deactivate", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapManSwLicensingAction.setStatus('current')
alaCapManSwLicensingActionArg = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 6, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapManSwLicensingActionArg.setStatus('current')
alaCapManVcSwLicensingAction = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 6, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("default", 0), ("applyFile", 1), ("applyAfn", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapManVcSwLicensingAction.setStatus('current')
alaCapManVcSwLicensingActionArg = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 6, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapManVcSwLicensingActionArg.setStatus('current')
alaCapManVcSwLicensingAfnInfo = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 6, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128, 128)).setFixedLength(128)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapManVcSwLicensingAfnInfo.setStatus('current')
alaCapManVcSwLicensingAfnStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 6, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("inProgress", 2), ("successful", 3), ("failed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCapManVcSwLicensingAfnStatus.setStatus('current')
alaCapManSwLicensingInfoTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 7), )
if mibBuilder.loadTexts: alaCapManSwLicensingInfoTable.setStatus('current')
alaCapManSwLicensingInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 7, 1), ).setIndexNames((0, "ALCATEL-IND1-CAPMAN-MIB", "alaLicenseId"))
if mibBuilder.loadTexts: alaCapManSwLicensingInfoEntry.setStatus('current')
alaLicenseId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: alaLicenseId.setStatus('current')
alaLicensedApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 7, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaLicensedApplication.setStatus('current')
alaLicenseType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("invalid", 0), ("demo", 1), ("permanent", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaLicenseType.setStatus('current')
alaLicenseTimeRemaining = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 7, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaLicenseTimeRemaining.setStatus('current')
alaCapManVcSwLicensingInfoTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 10), )
if mibBuilder.loadTexts: alaCapManVcSwLicensingInfoTable.setStatus('obsolete')
alaCapManVcSwLicensingInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 10, 1), ).setIndexNames((0, "ALCATEL-IND1-CAPMAN-MIB", "alaVcLicensedSerialNum"), (0, "ALCATEL-IND1-CAPMAN-MIB", "alaVcLicensedMacAddress"))
if mibBuilder.loadTexts: alaCapManVcSwLicensingInfoEntry.setStatus('obsolete')
alaVcLicensedSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 10, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(25, 25)).setFixedLength(25))
if mibBuilder.loadTexts: alaVcLicensedSerialNum.setStatus('obsolete')
alaVcLicensedMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 10, 1, 2), MacAddress())
if mibBuilder.loadTexts: alaVcLicensedMacAddress.setStatus('obsolete')
alaVcLicenseType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("demo", 1), ("permanent", 2), ("timebased", 3), ("ov-generated", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVcLicenseType.setStatus('obsolete')
alaVcLicenseVcSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 10, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVcLicenseVcSlot.setStatus('obsolete')
alaVcLicenseBitMap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 10, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVcLicenseBitMap.setStatus('obsolete')
alaVcLicenseTimeRemain = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 10, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVcLicenseTimeRemain.setStatus('obsolete')
alaVcLicenseUpgradeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("upgraded", 1), ("expired", 2), ("revoked", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVcLicenseUpgradeStatus.setStatus('obsolete')
alaVcLicenseExpirationDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 10, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVcLicenseExpirationDate.setStatus('obsolete')
alaCapManMibVcSwLicensingInfoTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 11), )
if mibBuilder.loadTexts: alaCapManMibVcSwLicensingInfoTable.setStatus('current')
alaCapManMibVcSwLicensingInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 11, 1), ).setIndexNames((0, "ALCATEL-IND1-CAPMAN-MIB", "alaMibVcLicensedSerialNum"), (0, "ALCATEL-IND1-CAPMAN-MIB", "alaMibVcLicensedMacAddress"), (0, "ALCATEL-IND1-CAPMAN-MIB", "alaMibVcLicenseFeatureId"))
if mibBuilder.loadTexts: alaCapManMibVcSwLicensingInfoEntry.setStatus('current')
alaMibVcLicensedSerialNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 11, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(25, 25)).setFixedLength(25))
if mibBuilder.loadTexts: alaMibVcLicensedSerialNum.setStatus('current')
alaMibVcLicensedMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 11, 1, 2), MacAddress())
if mibBuilder.loadTexts: alaMibVcLicensedMacAddress.setStatus('current')
alaMibVcLicenseFeatureId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("advanced", 1), ("datacenter", 2), ("xniu16", 3), ("afn", 4), ("poe", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaMibVcLicenseFeatureId.setStatus('current')
alaMibVcLicenseType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("demo", 1), ("permanent", 2), ("timebased", 3), ("ov-generated", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaMibVcLicenseType.setStatus('current')
alaMibVcLicenseVcSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 11, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaMibVcLicenseVcSlot.setStatus('current')
alaMibVcLicenseTimeRemain = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 11, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaMibVcLicenseTimeRemain.setStatus('current')
alaMibVcLicenseUpgradeStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("upgraded", 1), ("expired", 2), ("revoked", 3), ("not-applicable", 4), ("unknown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaMibVcLicenseUpgradeStatus.setStatus('current')
alaMibVcLicenseExpirationDate = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 11, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaMibVcLicenseExpirationDate.setStatus('current')
alaCapabilityIpmcMaxLimits = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 8))
alaCapabilityIpmcMaxAdminLimit = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 8, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaCapabilityIpmcMaxAdminLimit.setStatus('current')
alaCapabilityIpmcMaxOperLimit = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 8, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8192))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCapabilityIpmcMaxOperLimit.setStatus('current')
alaCapManFeatureControlCommands = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 9))
alaCapManDcbCfgMode = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCapManDcbCfgMode.setStatus('current')
alaCapManDcbOprMode = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 1, 9, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaCapManDcbOprMode.setStatus('current')
alaLicenseManagerDemoDayAlert = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 0, 1)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaLicenseTimeRemaining"))
if mibBuilder.loadTexts: alaLicenseManagerDemoDayAlert.setStatus('current')
alaCapManGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1))
alaCapManCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 2))
alaCapManVrfTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityVrfLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapManVrfTableGroup = alaCapManVrfTableGroup.setStatus('current')
alaCapManTcamTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityTcamMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapManTcamTableGroup = alaCapManTcamTableGroup.setStatus('current')
alaCapManMirrorTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityMirrorLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapManMirrorTableGroup = alaCapManMirrorTableGroup.setStatus('current')
alaCapManSourceLearningTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaCapabilitySourceLearningMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapManSourceLearningTableGroup = alaCapManSourceLearningTableGroup.setStatus('current')
alaCapManHashControlGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaCapManHashMode"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManUdpTcpPortMode"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManNonUCHashControl"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapManHashControlGroup = alaCapManHashControlGroup.setStatus('current')
alaCapManSwLicensingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaCapManSwLicensingAction"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManSwLicensingActionArg"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManVcSwLicensingAction"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManVcSwLicensingActionArg"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManVcSwLicensingAfnInfo"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManVcSwLicensingAfnStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapManSwLicensingGroup = alaCapManSwLicensingGroup.setStatus('current')
alaCapManSwLicensingInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 7)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaLicensedApplication"), ("ALCATEL-IND1-CAPMAN-MIB", "alaLicenseType"), ("ALCATEL-IND1-CAPMAN-MIB", "alaLicenseTimeRemaining"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapManSwLicensingInfoGroup = alaCapManSwLicensingInfoGroup.setStatus('current')
alaCapabilityIpmcMaxLimitsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 8)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityIpmcMaxAdminLimit"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityIpmcMaxOperLimit"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapabilityIpmcMaxLimitsGroup = alaCapabilityIpmcMaxLimitsGroup.setStatus('current')
alaCapManDcbCfgModeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 9)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaCapManDcbCfgMode"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManDcbOprMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapManDcbCfgModeGroup = alaCapManDcbCfgModeGroup.setStatus('current')
alaVcLicenseCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 10)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaVcLicenseBitMap"), ("ALCATEL-IND1-CAPMAN-MIB", "alaVcLicenseTimeRemain"), ("ALCATEL-IND1-CAPMAN-MIB", "alaVcLicenseType"), ("ALCATEL-IND1-CAPMAN-MIB", "alaVcLicenseVcSlot"), ("ALCATEL-IND1-CAPMAN-MIB", "alaVcLicenseUpgradeStatus"), ("ALCATEL-IND1-CAPMAN-MIB", "alaVcLicenseExpirationDate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVcLicenseCfgGroup = alaVcLicenseCfgGroup.setStatus('current')
alaMibVcLicenseCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 11)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaMibVcLicenseFeatureId"), ("ALCATEL-IND1-CAPMAN-MIB", "alaMibVcLicenseType"), ("ALCATEL-IND1-CAPMAN-MIB", "alaMibVcLicenseVcSlot"), ("ALCATEL-IND1-CAPMAN-MIB", "alaMibVcLicenseTimeRemain"), ("ALCATEL-IND1-CAPMAN-MIB", "alaMibVcLicenseUpgradeStatus"), ("ALCATEL-IND1-CAPMAN-MIB", "alaMibVcLicenseExpirationDate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaMibVcLicenseCfgGroup = alaMibVcLicenseCfgGroup.setStatus('current')
alaCapManTrapGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 1, 12)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaLicenseManagerDemoDayAlert"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapManTrapGroup = alaCapManTrapGroup.setStatus('current')
alaCapManCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 60, 1, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-CAPMAN-MIB", "alaCapManVrfTableGroup"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManTcamTableGroup"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManMirrorTableGroup"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManSourceLearningTableGroup"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManHashControlGroup"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManSwLicensingGroup"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapManSwLicensingInfoGroup"), ("ALCATEL-IND1-CAPMAN-MIB", "alaCapabilityIpmcMaxLimitsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaCapManCompliance = alaCapManCompliance.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-CAPMAN-MIB", alaCapManTcamTableGroup=alaCapManTcamTableGroup, alaCapManSourceLearningTableGroup=alaCapManSourceLearningTableGroup, alaCapabilityMirrorContext=alaCapabilityMirrorContext, alaCapabilityMibNotifications=alaCapabilityMibNotifications, alaVcLicensedSerialNum=alaVcLicensedSerialNum, alaCapManVrfTableGroup=alaCapManVrfTableGroup, alaCapManVcSwLicensingInfoEntry=alaCapManVcSwLicensingInfoEntry, alaMibVcLicenseExpirationDate=alaMibVcLicenseExpirationDate, alaCapManNonUCHashControl=alaCapManNonUCHashControl, alaCapManSwLicensingInfoTable=alaCapManSwLicensingInfoTable, alaCapManSwLicensingConfig=alaCapManSwLicensingConfig, alaMibVcLicensedSerialNum=alaMibVcLicensedSerialNum, alaCapabilityIpmcMaxLimitsGroup=alaCapabilityIpmcMaxLimitsGroup, alaCapManTrapGroup=alaCapManTrapGroup, alaCapManSwLicensingAction=alaCapManSwLicensingAction, alaCapManHashControlCommands=alaCapManHashControlCommands, alaCapManVcSwLicensingAfnStatus=alaCapManVcSwLicensingAfnStatus, alaCapManHashMode=alaCapManHashMode, alaCapManVcSwLicensingInfoTable=alaCapManVcSwLicensingInfoTable, alaCapManUdpTcpPortMode=alaCapManUdpTcpPortMode, alaCapabilityIpmcMaxLimits=alaCapabilityIpmcMaxLimits, alaCapabilityManager=alaCapabilityManager, alaLicenseTimeRemaining=alaLicenseTimeRemaining, alaCapabilityTcamContext=alaCapabilityTcamContext, alaLicenseId=alaLicenseId, alaCapManDcbOprMode=alaCapManDcbOprMode, alaCapManVcSwLicensingAction=alaCapManVcSwLicensingAction, alaCapabilityIpmcMaxOperLimit=alaCapabilityIpmcMaxOperLimit, alaVcLicenseCfgGroup=alaVcLicenseCfgGroup, alaCapManDcbCfgMode=alaCapManDcbCfgMode, alaCapManMirrorTable=alaCapManMirrorTable, alaVcLicensedMacAddress=alaVcLicensedMacAddress, alaCapabilitySourceLearningMode=alaCapabilitySourceLearningMode, alaLicensedApplication=alaLicensedApplication, alaCapManSwLicensingInfoGroup=alaCapManSwLicensingInfoGroup, alaCapManVrfEntry=alaCapManVrfEntry, alaCapManVcSwLicensingActionArg=alaCapManVcSwLicensingActionArg, alaVcLicenseType=alaVcLicenseType, alaCapManVcSwLicensingAfnInfo=alaCapManVcSwLicensingAfnInfo, alcatelIND1CapManMIB=alcatelIND1CapManMIB, alaCapManCompliance=alaCapManCompliance, alaVcLicenseExpirationDate=alaVcLicenseExpirationDate, alaCapabilityTcamCapability=alaCapabilityTcamCapability, alaCapManSourceLearningTable=alaCapManSourceLearningTable, alcatelIND1CapManMIBObjects=alcatelIND1CapManMIBObjects, alaCapManMirrorTableGroup=alaCapManMirrorTableGroup, alaCapManCompliances=alaCapManCompliances, alaCapManHashControlGroup=alaCapManHashControlGroup, alaVcLicenseTimeRemain=alaVcLicenseTimeRemain, alaVcLicenseVcSlot=alaVcLicenseVcSlot, alaCapabilityTcamMode=alaCapabilityTcamMode, alaCapabilityVrfContext=alaCapabilityVrfContext, alaCapManTcamEntry=alaCapManTcamEntry, alaCapabilitySourceLearningCapability=alaCapabilitySourceLearningCapability, alaCapManTcamTable=alaCapManTcamTable, alaCapManConformance=alaCapManConformance, alaCapManMirrorEntry=alaCapManMirrorEntry, PYSNMP_MODULE_ID=alcatelIND1CapManMIB, alaMibVcLicenseVcSlot=alaMibVcLicenseVcSlot, alaCapabilityVrfLimit=alaCapabilityVrfLimit, alaMibVcLicensedMacAddress=alaMibVcLicensedMacAddress, alaMibVcLicenseTimeRemain=alaMibVcLicenseTimeRemain, alaCapabilitySourceLearningContext=alaCapabilitySourceLearningContext, alaMibVcLicenseFeatureId=alaMibVcLicenseFeatureId, alaCapManFeatureControlCommands=alaCapManFeatureControlCommands, alaMibVcLicenseType=alaMibVcLicenseType, alaLicenseManagerDemoDayAlert=alaLicenseManagerDemoDayAlert, alaCapabilityMirrorLimit=alaCapabilityMirrorLimit, alaCapManGroups=alaCapManGroups, alaVcLicenseBitMap=alaVcLicenseBitMap, alaMibVcLicenseCfgGroup=alaMibVcLicenseCfgGroup, alaCapManSwLicensingActionArg=alaCapManSwLicensingActionArg, alaCapabilityVrfCapability=alaCapabilityVrfCapability, alaVcLicenseUpgradeStatus=alaVcLicenseUpgradeStatus, alaCapManSwLicensingInfoEntry=alaCapManSwLicensingInfoEntry, alaCapManMibVcSwLicensingInfoTable=alaCapManMibVcSwLicensingInfoTable, alaCapManMibVcSwLicensingInfoEntry=alaCapManMibVcSwLicensingInfoEntry, alaMibVcLicenseUpgradeStatus=alaMibVcLicenseUpgradeStatus, alaCapManSwLicensingGroup=alaCapManSwLicensingGroup, alaCapabilityIpmcMaxAdminLimit=alaCapabilityIpmcMaxAdminLimit, alaCapManSourceLearningEntry=alaCapManSourceLearningEntry, alaCapManDcbCfgModeGroup=alaCapManDcbCfgModeGroup, alaLicenseType=alaLicenseType, alaCapabilityMirrorCapability=alaCapabilityMirrorCapability, alaCapManVrfTable=alaCapManVrfTable)
