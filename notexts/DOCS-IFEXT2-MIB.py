#
# PySNMP MIB module DOCS-IFEXT2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/DOCS-IFEXT2-MIB
# Produced by pysmi-1.1.8 at Sat Jan 15 17:08:11 2022
# On host fv-az74-933 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
clabProjDocsis, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabProjDocsis")
TenthdB, TenthdBmV, docsIfCmtsCmStatusIndex = mibBuilder.importSymbols("DOCS-IF-MIB", "TenthdB", "TenthdBmV", "docsIfCmtsCmStatusIndex")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter64, Unsigned32, NotificationType, Bits, Integer32, iso, TimeTicks, MibIdentifier, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter32, Gauge32, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "Unsigned32", "NotificationType", "Bits", "Integer32", "iso", "TimeTicks", "MibIdentifier", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter32", "Gauge32", "IpAddress")
DisplayString, TextualConvention, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue")
docsIfExt2Mib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5))
docsIfExt2Mib.setRevisions(('2004-06-23 17:00', '2004-11-10 17:00',))
if mibBuilder.loadTexts: docsIfExt2Mib.setLastUpdated('200411101700Z')
if mibBuilder.loadTexts: docsIfExt2Mib.setOrganization('Cable Television Laboratories, Inc')
docsIfExt2Notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 0))
docsIfExt2MibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1))
docsIfExt2BaseObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 1))
docsIfExt2CmObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2))
docsIfExt2CmtsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3))
docsIfExt2CmMscStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2, 1), )
if mibBuilder.loadTexts: docsIfExt2CmMscStatusTable.setStatus('current')
docsIfExt2CmMscStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIfExt2CmMscStatusEntry.setStatus('current')
docsIfExt2CmMscStatusState = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("channelEnabled", 1), ("channelDisabled", 2), ("active", 3), ("inactive", 4), ("unknown", 5))).clone('unknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmMscStatusState.setStatus('current')
docsIfExt2CmMscStatusPowerShortfall = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2, 1, 1, 2), TenthdB()).setUnits('TenthdB').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmMscStatusPowerShortfall.setStatus('current')
docsIfExt2CmMscStatusCodeRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(2, 2), ValueRangeConstraint(8, 8), ValueRangeConstraint(16, 16), ValueRangeConstraint(32, 32), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmMscStatusCodeRatio.setStatus('current')
docsIfExt2CmMscStatusMaximumScheduledCodes = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4, 128), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmMscStatusMaximumScheduledCodes.setStatus('current')
docsIfExt2CmMscStatusPowerHeadroom = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2, 1, 1, 5), TenthdB()).setUnits('TenthdB').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmMscStatusPowerHeadroom.setStatus('current')
docsIfExt2CmMscStatusEffectivePower = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2, 1, 1, 6), TenthdBmV()).setUnits('TenthdBmV').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmMscStatusEffectivePower.setStatus('current')
docsIfExt2CmMscStatusIUC2Control = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noIUC2", 1), ("limitedIUC2", 2), ("freeIUC2", 3))).clone('noIUC2')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfExt2CmMscStatusIUC2Control.setStatus('current')
docsIfExt2CmtsMscGlobalEnable = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfExt2CmtsMscGlobalEnable.setStatus('current')
docsIfExt2CmtsCmMscStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 2), )
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusTable.setStatus('current')
docsIfExt2CmtsCmMscStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 2, 1), ).setIndexNames((0, "DOCS-IF-MIB", "docsIfCmtsCmStatusIndex"))
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusEntry.setStatus('current')
docsIfExt2CmtsCmMscStatusPowerShortfall = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 2, 1, 1), TenthdB()).setUnits('TenthdB').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusPowerShortfall.setStatus('current')
docsIfExt2CmtsCmMscStatusCodeRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(2, 2), ValueRangeConstraint(8, 8), ValueRangeConstraint(16, 16), ValueRangeConstraint(32, 32), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusCodeRatio.setStatus('current')
docsIfExt2CmtsCmMscStatusMaximumScheduledCodes = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4, 128), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusMaximumScheduledCodes.setStatus('current')
docsIfExt2CmtsCmMscStatusPowerHeadroom = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 2, 1, 4), TenthdB()).setUnits('TenthdB').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusPowerHeadroom.setStatus('current')
docsIfExt2CmtsCmMscStatusMeasuredSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 2, 1, 5), TenthdB()).setUnits('TenthdB').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusMeasuredSNR.setStatus('current')
docsIfExt2CmtsCmMscStatusEffectiveSNR = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 2, 1, 6), TenthdB()).setUnits('TenthdB').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmtsCmMscStatusEffectiveSNR.setStatus('current')
docsIfExt2CmtsUpChannelMscTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 3), )
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelMscTable.setStatus('current')
docsIfExt2CmtsUpChannelMscEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelMscEntry.setStatus('current')
docsIfExt2CmtsUpChannelMscState = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("channelEnabled", 1), ("channelDisabled", 2), ("dormant", 3))).clone('channelDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelMscState.setStatus('current')
docsIfExt2CmtsUpChannelMSCTotalCMs = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelMSCTotalCMs.setStatus('current')
docsIfExt2CmtsUpChannelMSCLimitIUC1 = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setUnits('codes').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelMSCLimitIUC1.setStatus('current')
docsIfExt2CmtsUpChannelMSCMinimumValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 128)).clone(4)).setUnits('codes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelMSCMinimumValue.setStatus('current')
docsIfExt2CmtsUpChannelTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 4), )
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelTable.setStatus('current')
docsIfExt2CmtsUpChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelEntry.setStatus('current')
docsIfExt2CmtsUpChannelTotalCMs = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 1, 3, 4, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIfExt2CmtsUpChannelTotalCMs.setStatus('current')
docsIfExt2Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 2))
docsIfExt2Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 2, 1))
docsIfExt2Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 2, 2))
docsIfExt2Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 2, 1, 1)).setObjects(("DOCS-IFEXT2-MIB", "docsIfExt2CmGroup"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIfExt2Compliance = docsIfExt2Compliance.setStatus('current')
docsIfExt2CmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 2, 2, 1)).setObjects(("DOCS-IFEXT2-MIB", "docsIfExt2CmMscStatusState"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmMscStatusPowerShortfall"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmMscStatusCodeRatio"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmMscStatusMaximumScheduledCodes"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmMscStatusPowerHeadroom"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmMscStatusEffectivePower"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmMscStatusIUC2Control"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIfExt2CmGroup = docsIfExt2CmGroup.setStatus('current')
docsIfExt2CmtsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 5, 2, 2, 2)).setObjects(("DOCS-IFEXT2-MIB", "docsIfExt2CmtsMscGlobalEnable"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsCmMscStatusPowerShortfall"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsCmMscStatusCodeRatio"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsCmMscStatusMaximumScheduledCodes"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsCmMscStatusPowerHeadroom"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsCmMscStatusMeasuredSNR"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsCmMscStatusEffectiveSNR"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsUpChannelMscState"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsUpChannelMSCTotalCMs"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsUpChannelMSCLimitIUC1"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsUpChannelMSCMinimumValue"), ("DOCS-IFEXT2-MIB", "docsIfExt2CmtsUpChannelTotalCMs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIfExt2CmtsGroup = docsIfExt2CmtsGroup.setStatus('current')
mibBuilder.exportSymbols("DOCS-IFEXT2-MIB", docsIfExt2CmMscStatusEffectivePower=docsIfExt2CmMscStatusEffectivePower, docsIfExt2CmMscStatusCodeRatio=docsIfExt2CmMscStatusCodeRatio, docsIfExt2CmtsMscGlobalEnable=docsIfExt2CmtsMscGlobalEnable, docsIfExt2Compliances=docsIfExt2Compliances, docsIfExt2CmtsUpChannelEntry=docsIfExt2CmtsUpChannelEntry, docsIfExt2CmtsCmMscStatusPowerShortfall=docsIfExt2CmtsCmMscStatusPowerShortfall, docsIfExt2MibObjects=docsIfExt2MibObjects, docsIfExt2CmtsCmMscStatusPowerHeadroom=docsIfExt2CmtsCmMscStatusPowerHeadroom, docsIfExt2CmtsUpChannelMSCMinimumValue=docsIfExt2CmtsUpChannelMSCMinimumValue, docsIfExt2CmObjects=docsIfExt2CmObjects, docsIfExt2Notifications=docsIfExt2Notifications, docsIfExt2CmtsCmMscStatusTable=docsIfExt2CmtsCmMscStatusTable, docsIfExt2CmtsUpChannelMscEntry=docsIfExt2CmtsUpChannelMscEntry, docsIfExt2CmMscStatusEntry=docsIfExt2CmMscStatusEntry, docsIfExt2CmtsObjects=docsIfExt2CmtsObjects, docsIfExt2CmtsCmMscStatusEffectiveSNR=docsIfExt2CmtsCmMscStatusEffectiveSNR, docsIfExt2CmMscStatusPowerHeadroom=docsIfExt2CmMscStatusPowerHeadroom, docsIfExt2Mib=docsIfExt2Mib, docsIfExt2Conformance=docsIfExt2Conformance, docsIfExt2CmMscStatusPowerShortfall=docsIfExt2CmMscStatusPowerShortfall, docsIfExt2CmtsCmMscStatusMeasuredSNR=docsIfExt2CmtsCmMscStatusMeasuredSNR, docsIfExt2CmtsUpChannelTable=docsIfExt2CmtsUpChannelTable, docsIfExt2CmMscStatusTable=docsIfExt2CmMscStatusTable, docsIfExt2CmtsUpChannelMSCTotalCMs=docsIfExt2CmtsUpChannelMSCTotalCMs, docsIfExt2CmMscStatusMaximumScheduledCodes=docsIfExt2CmMscStatusMaximumScheduledCodes, docsIfExt2CmtsGroup=docsIfExt2CmtsGroup, docsIfExt2CmtsCmMscStatusMaximumScheduledCodes=docsIfExt2CmtsCmMscStatusMaximumScheduledCodes, docsIfExt2CmtsUpChannelTotalCMs=docsIfExt2CmtsUpChannelTotalCMs, docsIfExt2CmMscStatusState=docsIfExt2CmMscStatusState, docsIfExt2CmtsUpChannelMscTable=docsIfExt2CmtsUpChannelMscTable, docsIfExt2CmMscStatusIUC2Control=docsIfExt2CmMscStatusIUC2Control, docsIfExt2Groups=docsIfExt2Groups, docsIfExt2Compliance=docsIfExt2Compliance, docsIfExt2CmtsUpChannelMscState=docsIfExt2CmtsUpChannelMscState, docsIfExt2CmGroup=docsIfExt2CmGroup, docsIfExt2CmtsCmMscStatusCodeRatio=docsIfExt2CmtsCmMscStatusCodeRatio, docsIfExt2CmtsUpChannelMSCLimitIUC1=docsIfExt2CmtsUpChannelMSCLimitIUC1, docsIfExt2BaseObjects=docsIfExt2BaseObjects, PYSNMP_MODULE_ID=docsIfExt2Mib, docsIfExt2CmtsCmMscStatusEntry=docsIfExt2CmtsCmMscStatusEntry)
