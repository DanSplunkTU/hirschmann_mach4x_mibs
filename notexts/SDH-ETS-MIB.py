#
# PySNMP MIB module SDH-ETS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/sagemcom/SDH-ETS-MIB
# Produced by pysmi-1.1.3 at Tue Dec  7 16:57:14 2021
# On host fv-az42-142 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
SagemBoolean, Severity = mibBuilder.importSymbols("EQUIPMENT-MIB", "SagemBoolean", "Severity")
sagemDr, = mibBuilder.importSymbols("SAGEM-DR-MIB", "sagemDr")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Counter32, Gauge32, Integer32, TimeTicks, IpAddress, Counter64, NotificationType, ObjectIdentity, MibIdentifier, Bits, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter32", "Gauge32", "Integer32", "TimeTicks", "IpAddress", "Counter64", "NotificationType", "ObjectIdentity", "MibIdentifier", "Bits", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
sdhEts = ModuleIdentity((1, 3, 6, 1, 4, 1, 1038, 110))
if mibBuilder.loadTexts: sdhEts.setLastUpdated('0205220000Z')
if mibBuilder.loadTexts: sdhEts.setOrganization('SAGEM-Tolbiac drd/ddp/tmhd')
spiTTP = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 110, 10))
rsTTP = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 110, 20))
rsCTP = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 110, 25))
msTTP = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 110, 30))
msCTP = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 110, 35))
msa = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 110, 60))
au4CTP = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 110, 70))
vc4TTP = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 110, 100))
tu3CTP = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 110, 120))
vc3TTP = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 110, 130))
tu12CTP = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 110, 140))
vc12TTP = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 110, 150))
nspiCTP = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 110, 160))
nspiTTP = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 110, 170))
channel = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 110, 180))
bandwidth = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 110, 190))
class SpiTTPFailure(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("los", 1), ("tf", 2), ("losTf", 3))

class Loopback(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("line", 1), ("equipment", 2), ("lineEquipement", 3))

class STMLevel(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 4, 16, 64))
    namedValues = NamedValues(("stm1", 1), ("stm4", 4), ("stm16", 16), ("stm64", 64))

class SpiTTPType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("electrical", 0), ("optical", 1))

spiTTPNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 110, 10, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spiTTPNumber.setStatus('current')
spiTTPTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 110, 10, 2), )
if mibBuilder.loadTexts: spiTTPTable.setStatus('current')
spiTTPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 110, 10, 2, 1), ).setIndexNames((0, "SDH-ETS-MIB", "spiTTPIndex"))
if mibBuilder.loadTexts: spiTTPEntry.setStatus('current')
spiTTPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spiTTPIndex.setStatus('current')
spiTTPStmLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 10, 2, 1, 2), STMLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spiTTPStmLevel.setStatus('current')
spiTTPType = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 10, 2, 1, 3), SpiTTPType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spiTTPType.setStatus('current')
spiTTPName = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 10, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: spiTTPName.setStatus('current')
spiTTPBoardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 10, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spiTTPBoardIndex.setStatus('current')
spiTTPBoardAcces = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 10, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: spiTTPBoardAcces.setStatus('current')
spiTTPMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 10, 2, 1, 7), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: spiTTPMonitor.setStatus('current')
spiTTPFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 10, 2, 1, 8), SpiTTPFailure()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spiTTPFailure.setStatus('current')
spiTTPSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 10, 2, 1, 9), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: spiTTPSeverity.setStatus('current')
spiTTPLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 10, 2, 1, 10), Loopback()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: spiTTPLoopback.setStatus('current')
spiTTPLos = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 10, 2, 1, 20), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: spiTTPLos.setStatus('current')
spiTTPTf = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 10, 2, 1, 21), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: spiTTPTf.setStatus('current')
class RsTTPFailure(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("none", 0), ("lof", 1))

class EOWMode(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("codirectional", 0), ("contradirectional", 1))

rsTTPTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 110, 20, 2), )
if mibBuilder.loadTexts: rsTTPTable.setStatus('current')
rsTTPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 110, 20, 2, 1), ).setIndexNames((0, "SDH-ETS-MIB", "rsTTPIndex"))
if mibBuilder.loadTexts: rsTTPEntry.setStatus('current')
rsTTPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 20, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsTTPIndex.setStatus('current')
rsTTPMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 20, 2, 1, 2), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsTTPMonitor.setStatus('current')
rsTTPName = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 20, 2, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsTTPName.setStatus('current')
rsTTPFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 20, 2, 1, 4), RsTTPFailure()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsTTPFailure.setStatus('current')
rsTTPSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 20, 2, 1, 5), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsTTPSeverity.setStatus('current')
rsTTPEOWMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 20, 2, 1, 8), EOWMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsTTPEOWMode.setStatus('current')
rsTTPE1SrcPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 20, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsTTPE1SrcPointer.setStatus('current')
rsTTPF1SrcPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 20, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsTTPF1SrcPointer.setStatus('current')
rsTTPSesThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 20, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsTTPSesThreshold.setStatus('current')
rsTTPEOWByteLine = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 20, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsTTPEOWByteLine.setStatus('current')
rsTTPEOWByteColumn = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 20, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsTTPEOWByteColumn.setStatus('current')
rsTTPLof = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 20, 2, 1, 20), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsTTPLof.setStatus('current')
class ProtectionType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("msp", 1), ("msSPRing", 2))

class MsTTPFailure(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 12, 8))
    namedValues = NamedValues(("none", 0), ("ais", 1), ("eber", 2), ("sd", 4), ("sdRdi", 12), ("rdi", 8))

msTTPTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 110, 30, 2), )
if mibBuilder.loadTexts: msTTPTable.setStatus('current')
msTTPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 110, 30, 2, 1), ).setIndexNames((0, "SDH-ETS-MIB", "msTTPIndex"))
if mibBuilder.loadTexts: msTTPEntry.setStatus('current')
msTTPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 30, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msTTPIndex.setStatus('current')
msTTPProtectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 30, 2, 1, 2), ProtectionType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msTTPProtectionType.setStatus('current')
msTTPMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 30, 2, 1, 3), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msTTPMonitor.setStatus('current')
msTTPName = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 30, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msTTPName.setStatus('current')
msTTPFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 30, 2, 1, 5), MsTTPFailure()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msTTPFailure.setStatus('current')
msTTPSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 30, 2, 1, 6), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msTTPSeverity.setStatus('current')
msTTPEOWMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 30, 2, 1, 7), EOWMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msTTPEOWMode.setStatus('current')
msTTPE2SrcPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 30, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msTTPE2SrcPointer.setStatus('current')
msTTPEOWByteLine = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 30, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msTTPEOWByteLine.setStatus('current')
msTTPEOWByteColumn = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 30, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msTTPEOWByteColumn.setStatus('current')
msTTPMonEber = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 30, 2, 1, 11), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msTTPMonEber.setStatus('current')
msTTPSdThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 30, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msTTPSdThreshold.setStatus('current')
msTTPSesThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 30, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msTTPSesThreshold.setStatus('current')
msTTPEber = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 30, 2, 1, 20), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msTTPEber.setStatus('current')
msTTPSd = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 30, 2, 1, 21), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msTTPSd.setStatus('current')
msTTPRdi = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 30, 2, 1, 22), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msTTPRdi.setStatus('current')
class MsaSrcType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("msa", 1), ("vc4", 2))

class MsaSinkType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("msa", 0), ("mst", 1))

msaTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 110, 60, 2), )
if mibBuilder.loadTexts: msaTable.setStatus('current')
msaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 110, 60, 2, 1), ).setIndexNames((0, "SDH-ETS-MIB", "msaIndex"))
if mibBuilder.loadTexts: msaEntry.setStatus('current')
msaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 60, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msaIndex.setStatus('current')
msaSTMLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 60, 2, 1, 2), STMLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msaSTMLevel.setStatus('current')
msaSinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 60, 2, 1, 3), MsaSinkType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msaSinkType.setStatus('current')
msaSinkPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 60, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msaSinkPointer.setStatus('current')
msaName = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 60, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msaName.setStatus('current')
msaSrc1Type = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 60, 2, 1, 6), MsaSrcType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msaSrc1Type.setStatus('current')
msaSrc2Type = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 60, 2, 1, 7), MsaSrcType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msaSrc2Type.setStatus('current')
msaSrc3Type = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 60, 2, 1, 8), MsaSrcType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msaSrc3Type.setStatus('current')
msaSrc4Type = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 60, 2, 1, 9), MsaSrcType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msaSrc4Type.setStatus('current')
msaSrc1Pointer = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 60, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msaSrc1Pointer.setStatus('current')
msaSrc2Pointer = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 60, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msaSrc2Pointer.setStatus('current')
msaSrc3Pointer = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 60, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msaSrc3Pointer.setStatus('current')
msaSrc4Pointer = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 60, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msaSrc4Pointer.setStatus('current')
class CTPStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("free", 0), ("used", 1))

class Au4CTPFailure(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("ais", 1), ("lop", 2), ("lom", 3))

class Au4CTPCnxType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 4, 16, 20))
    namedValues = NamedValues(("none", 0), ("au", 1), ("au4c", 4), ("au16c", 16), ("tu", 20))

au4CTPNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 110, 70, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: au4CTPNumber.setStatus('current')
au4CTPTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 110, 70, 2), )
if mibBuilder.loadTexts: au4CTPTable.setStatus('current')
au4CTPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 110, 70, 2, 1), ).setIndexNames((0, "SDH-ETS-MIB", "au4CTPIndex"))
if mibBuilder.loadTexts: au4CTPEntry.setStatus('current')
au4CTPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 70, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: au4CTPIndex.setStatus('current')
au4CTPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 70, 2, 1, 2), CTPStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: au4CTPStatus.setStatus('current')
au4CTPCnxType = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 70, 2, 1, 3), Au4CTPCnxType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: au4CTPCnxType.setStatus('current')
au4CTPName = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 70, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: au4CTPName.setStatus('current')
au4CTPMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 70, 2, 1, 6), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: au4CTPMonitor.setStatus('current')
au4CTPFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 70, 2, 1, 7), Au4CTPFailure()).setMaxAccess("readonly")
if mibBuilder.loadTexts: au4CTPFailure.setStatus('current')
au4CTPSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 70, 2, 1, 8), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: au4CTPSeverity.setStatus('current')
au4CTPAis = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 70, 2, 1, 20), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: au4CTPAis.setStatus('current')
au4CTPLop = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 70, 2, 1, 21), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: au4CTPLop.setStatus('current')
au4CTPLom = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 70, 2, 1, 22), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: au4CTPLom.setStatus('current')
class Vc4TTPSinkType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("mst", 1), ("nspi", 2))

class Vc4TTPTraceMode(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 16))
    namedValues = NamedValues(("size1", 1), ("size16", 16))

class Vc4TTPSignalLabel(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 255))
    namedValues = NamedValues(("unequiped", 0), ("unspecified", 1), ("tug", 2), ("all1", 255))

class Vc4TTPFailure(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 16, 17, 18, 19))
    namedValues = NamedValues(("none", 0), ("rdi", 1), ("sd", 2), ("sdRdi", 3), ("uneq", 4), ("uneqSd", 6), ("plm", 8), ("plmRdi", 9), ("plmSd", 10), ("plmRdiSd", 11), ("tim", 16), ("timRdi", 17), ("timSd", 18), ("timRdiSd", 19))

vc4TTPNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 110, 100, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc4TTPNumber.setStatus('current')
vc4TTPTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2), )
if mibBuilder.loadTexts: vc4TTPTable.setStatus('current')
vc4TTPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1), ).setIndexNames((0, "SDH-ETS-MIB", "vc4TTPIndex"))
if mibBuilder.loadTexts: vc4TTPEntry.setStatus('current')
vc4TTPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc4TTPIndex.setStatus('current')
vc4TTPSinkPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc4TTPSinkPointer.setStatus('current')
vc4TTPSinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 3), Vc4TTPSinkType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc4TTPSinkType.setStatus('current')
vc4TTPName = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc4TTPName.setStatus('current')
vc4TTPMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 6), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc4TTPMonitor.setStatus('current')
vc4TTPFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 7), Vc4TTPFailure()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc4TTPFailure.setStatus('current')
vc4TTPSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 8), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc4TTPSeverity.setStatus('current')
vc4TTPTraceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 9), Vc4TTPTraceMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc4TTPTraceMode.setStatus('current')
vc4TTPPathTraceExpected = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc4TTPPathTraceExpected.setStatus('current')
vc4TTPPathTraceSent = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc4TTPPathTraceSent.setStatus('current')
vc4TTPPathTraceReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc4TTPPathTraceReceived.setStatus('current')
vc4TTPLabelExpected = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 14), Vc4TTPSignalLabel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc4TTPLabelExpected.setStatus('current')
vc4TTPLabelSent = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 15), Vc4TTPSignalLabel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc4TTPLabelSent.setStatus('current')
vc4TTPLabelReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 16), Vc4TTPSignalLabel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc4TTPLabelReceived.setStatus('current')
vc4TTPSdThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc4TTPSdThreshold.setStatus('current')
vc4TTPSesThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc4TTPSesThreshold.setStatus('current')
vc4TTPBidirectionnal = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 19), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc4TTPBidirectionnal.setStatus('current')
vc4TTPRdi = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 20), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc4TTPRdi.setStatus('current')
vc4TTPSd = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 21), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc4TTPSd.setStatus('current')
vc4TTPUneq = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 22), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc4TTPUneq.setStatus('current')
vc4TTPPlm = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 23), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc4TTPPlm.setStatus('current')
vc4TTPTimDis = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 24), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc4TTPTimDis.setStatus('current')
vc4TTPTim = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 100, 2, 1, 25), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc4TTPTim.setStatus('current')
class Tu3CTPFailure(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("ais", 1), ("lop", 2))

tu3CTPNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 110, 120, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tu3CTPNumber.setStatus('current')
tu3CTPTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 110, 120, 2), )
if mibBuilder.loadTexts: tu3CTPTable.setStatus('current')
tu3CTPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 110, 120, 2, 1), ).setIndexNames((0, "SDH-ETS-MIB", "tu3CTPIndex"))
if mibBuilder.loadTexts: tu3CTPEntry.setStatus('current')
tu3CTPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 120, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tu3CTPIndex.setStatus('current')
tu3CTPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 120, 2, 1, 2), CTPStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tu3CTPStatus.setStatus('current')
tu3CTPName = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 120, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tu3CTPName.setStatus('current')
tu3CTPMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 120, 2, 1, 6), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tu3CTPMonitor.setStatus('current')
tu3CTPFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 120, 2, 1, 7), Tu3CTPFailure()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tu3CTPFailure.setStatus('current')
tu3CTPSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 120, 2, 1, 8), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tu3CTPSeverity.setStatus('current')
tu3CTPAis = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 120, 2, 1, 20), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tu3CTPAis.setStatus('current')
tu3CTPLop = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 120, 2, 1, 21), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tu3CTPLop.setStatus('current')
class Tu12CTPFailure(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("ais", 1), ("lop", 2))

tu12CTPNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 110, 140, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tu12CTPNumber.setStatus('current')
tu12CTPTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 110, 140, 2), )
if mibBuilder.loadTexts: tu12CTPTable.setStatus('current')
tu12CTPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 110, 140, 2, 1), ).setIndexNames((0, "SDH-ETS-MIB", "tu12CTPIndex"))
if mibBuilder.loadTexts: tu12CTPEntry.setStatus('current')
tu12CTPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 140, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tu12CTPIndex.setStatus('current')
tu12CTPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 140, 2, 1, 2), CTPStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tu12CTPStatus.setStatus('current')
tu12CTPName = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 140, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tu12CTPName.setStatus('current')
tu12CTPMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 140, 2, 1, 6), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tu12CTPMonitor.setStatus('current')
tu12CTPFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 140, 2, 1, 7), Tu12CTPFailure()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tu12CTPFailure.setStatus('current')
tu12CTPSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 140, 2, 1, 8), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tu12CTPSeverity.setStatus('current')
tu12CTPAis = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 140, 2, 1, 20), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tu12CTPAis.setStatus('current')
tu12CTPLop = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 140, 2, 1, 21), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tu12CTPLop.setStatus('current')
class Vc3TTPSinkType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("vc4", 1), ("nspi", 2))

class Vc3TTPSignalLabel(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 4, 7))
    namedValues = NamedValues(("unequiped", 0), ("unspecified", 1), ("mapping3445", 4), ("all1", 7))

class VcLoFailure(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 16, 17, 18, 19))
    namedValues = NamedValues(("none", 0), ("rdi", 1), ("sd", 2), ("sdRdi", 3), ("uneq", 4), ("uneqSd", 6), ("plm", 8), ("plmRdi", 9), ("plmSd", 10), ("plmRdiSd", 11), ("tim", 16), ("timRdi", 17), ("timSd", 18), ("timRdiSd", 19))

vc3TTPNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 110, 130, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc3TTPNumber.setStatus('current')
vc3TTPTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2), )
if mibBuilder.loadTexts: vc3TTPTable.setStatus('current')
vc3TTPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1), ).setIndexNames((0, "SDH-ETS-MIB", "vc3TTPIndex"))
if mibBuilder.loadTexts: vc3TTPEntry.setStatus('current')
vc3TTPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc3TTPIndex.setStatus('current')
vc3TTPSinkPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc3TTPSinkPointer.setStatus('current')
vc3TTPSinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 3), Vc3TTPSinkType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc3TTPSinkType.setStatus('current')
vc3TTPName = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc3TTPName.setStatus('current')
vc3TTPMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 6), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc3TTPMonitor.setStatus('current')
vc3TTPFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 7), VcLoFailure()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc3TTPFailure.setStatus('current')
vc3TTPSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 8), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc3TTPSeverity.setStatus('current')
vc3TTPPathTraceExpected = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc3TTPPathTraceExpected.setStatus('current')
vc3TTPPathTraceSent = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc3TTPPathTraceSent.setStatus('current')
vc3TTPPathTraceReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(15, 15)).setFixedLength(15)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc3TTPPathTraceReceived.setStatus('current')
vc3TTPLabelExpected = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 12), Vc3TTPSignalLabel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc3TTPLabelExpected.setStatus('current')
vc3TTPLabelSent = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 13), Vc3TTPSignalLabel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc3TTPLabelSent.setStatus('current')
vc3TTPLabelReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 14), Vc3TTPSignalLabel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc3TTPLabelReceived.setStatus('current')
vc3TTPSdThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc3TTPSdThreshold.setStatus('current')
vc3TTPSesThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc3TTPSesThreshold.setStatus('current')
vc3TTPBidirectionnal = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 17), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc3TTPBidirectionnal.setStatus('current')
vc3TTPRdi = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 20), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc3TTPRdi.setStatus('current')
vc3TTPSd = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 21), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc3TTPSd.setStatus('current')
vc3TTPUneq = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 22), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc3TTPUneq.setStatus('current')
vc3TTPPlm = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 23), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc3TTPPlm.setStatus('current')
vc3TTPTim = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 130, 2, 1, 24), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc3TTPTim.setStatus('current')
class Vc12TTPSinkType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("vc4", 1), ("nspi", 2))

class Vc12TTPSignalLabel(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 7))
    namedValues = NamedValues(("unequiped", 0), ("unspecified", 1), ("asyncBit", 2), ("all1", 7))

vc12TTPNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 110, 150, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc12TTPNumber.setStatus('current')
vc12TTPTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2), )
if mibBuilder.loadTexts: vc12TTPTable.setStatus('current')
vc12TTPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1), ).setIndexNames((0, "SDH-ETS-MIB", "vc12TTPIndex"))
if mibBuilder.loadTexts: vc12TTPEntry.setStatus('current')
vc12TTPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc12TTPIndex.setStatus('current')
vc12TTPSinkPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc12TTPSinkPointer.setStatus('current')
vc12TTPSinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 3), Vc12TTPSinkType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc12TTPSinkType.setStatus('current')
vc12TTPName = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc12TTPName.setStatus('current')
vc12TTPMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 6), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc12TTPMonitor.setStatus('current')
vc12TTPFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 7), VcLoFailure()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc12TTPFailure.setStatus('current')
vc12TTPSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 8), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc12TTPSeverity.setStatus('current')
vc12TTPPathTraceExpected = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc12TTPPathTraceExpected.setStatus('current')
vc12TTPPathTraceSent = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc12TTPPathTraceSent.setStatus('current')
vc12TTPPathTraceReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc12TTPPathTraceReceived.setStatus('current')
vc12TTPLabelExpected = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 12), Vc12TTPSignalLabel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc12TTPLabelExpected.setStatus('current')
vc12TTPLabelSent = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 13), Vc12TTPSignalLabel()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc12TTPLabelSent.setStatus('current')
vc12TTPLabelReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 14), Vc12TTPSignalLabel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc12TTPLabelReceived.setStatus('current')
vc12TTPSdThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc12TTPSdThreshold.setStatus('current')
vc12TTPSesThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vc12TTPSesThreshold.setStatus('current')
vc12TTPBidirectionnal = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 17), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc12TTPBidirectionnal.setStatus('current')
vc12TTPRdi = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 20), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc12TTPRdi.setStatus('current')
vc12TTPSd = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 21), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc12TTPSd.setStatus('current')
vc12TTPUneq = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 22), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc12TTPUneq.setStatus('current')
vc12TTPPlm = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 23), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc12TTPPlm.setStatus('current')
vc12TTPTim = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 150, 2, 1, 24), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vc12TTPTim.setStatus('current')
class NspiSrcType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("vc12", 1), ("vc3", 2), ("vc4", 3), ("channel", 4))

nspiCTPNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 110, 160, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nspiCTPNumber.setStatus('current')
nspiCTPTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 110, 160, 2), )
if mibBuilder.loadTexts: nspiCTPTable.setStatus('current')
nspiCTPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 110, 160, 2, 1), ).setIndexNames((0, "SDH-ETS-MIB", "nspiCTPIndex"))
if mibBuilder.loadTexts: nspiCTPEntry.setStatus('current')
nspiCTPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 160, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nspiCTPIndex.setStatus('current')
nspiCTPTTPType = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 160, 2, 1, 2), NspiSrcType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nspiCTPTTPType.setStatus('current')
nspiCTPStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 160, 2, 1, 3), CTPStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nspiCTPStatus.setStatus('current')
nspiCTPName = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 160, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nspiCTPName.setStatus('current')
class NspiTTPFailure(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("los", 1), ("ais", 2))

class NspiTTPType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 10, 20, 30))
    namedValues = NamedValues(("g703R75ohm", 1), ("g703R120ohm", 2), ("x21", 10), ("ethernet", 20), ("atm", 30))

class NspiTTPLevel(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2, 10, 34, 45, 100, 140, 1000))
    namedValues = NamedValues(("rate2Mb", 2), ("rate10Mb", 10), ("rate34Mb", 34), ("rate45Mb", 45), ("rate100Mb", 100), ("rate140Mb", 140), ("rate1Gb", 1000))

nspiTTPNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 110, 170, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nspiTTPNumber.setStatus('current')
nspiTTPTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 110, 170, 2), )
if mibBuilder.loadTexts: nspiTTPTable.setStatus('current')
nspiTTPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 110, 170, 2, 1), ).setIndexNames((0, "SDH-ETS-MIB", "nspiTTPIndex"))
if mibBuilder.loadTexts: nspiTTPEntry.setStatus('current')
nspiTTPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 170, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nspiTTPIndex.setStatus('current')
nspiTTPType = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 170, 2, 1, 2), NspiTTPType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nspiTTPType.setStatus('current')
nspiTTPLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 170, 2, 1, 3), NspiTTPLevel()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nspiTTPLevel.setStatus('current')
nspiTTPName = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 170, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nspiTTPName.setStatus('current')
nspiTTPBoardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 170, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nspiTTPBoardIndex.setStatus('current')
nspiTTPBoardAcces = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 170, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nspiTTPBoardAcces.setStatus('current')
nspiTTPSrcType = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 170, 2, 1, 7), NspiSrcType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nspiTTPSrcType.setStatus('current')
nspiTTPSrcPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 170, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nspiTTPSrcPointer.setStatus('current')
nspiTTPMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 170, 2, 1, 9), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nspiTTPMonitor.setStatus('current')
nspiTTPFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 170, 2, 1, 10), NspiTTPFailure()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nspiTTPFailure.setStatus('current')
nspiTTPSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 170, 2, 1, 11), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nspiTTPSeverity.setStatus('current')
nspiTTPLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 170, 2, 1, 14), Loopback()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nspiTTPLoopback.setStatus('current')
nspiTTPLos = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 170, 2, 1, 20), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nspiTTPLos.setStatus('current')
nspiTTPAis = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 170, 2, 1, 21), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nspiTTPAis.setStatus('current')
class ChannelEncaps(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("atm", 1), ("pos", 2), ("gfp", 3))

class ChannelConcat(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("virtual", 1), ("contiguous", 2))

class ChannelFailure(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("loa", 1), ("lom", 2), ("sqm", 3))

channelNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 110, 180, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelNumber.setStatus('current')
channelTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 110, 180, 2), )
if mibBuilder.loadTexts: channelTable.setStatus('current')
channelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 110, 180, 2, 1), ).setIndexNames((0, "SDH-ETS-MIB", "channelIndex"))
if mibBuilder.loadTexts: channelEntry.setStatus('current')
channelIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 180, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelIndex.setStatus('current')
channelEncaps = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 180, 2, 1, 2), ChannelEncaps()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelEncaps.setStatus('current')
channelNbVc4 = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 180, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelNbVc4.setStatus('current')
channelNbVc3 = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 180, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelNbVc3.setStatus('current')
channelNbVc12 = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 180, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelNbVc12.setStatus('current')
channelConcat = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 180, 2, 1, 8), ChannelConcat()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelConcat.setStatus('current')
channelAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 180, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelAdminStatus.setStatus('current')
channelOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 180, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelOperStatus.setStatus('current')
channelFirstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 180, 2, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelFirstIndex.setStatus('current')
channelDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 180, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelDelay.setStatus('current')
channelMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 180, 2, 1, 13), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelMonitor.setStatus('current')
channelFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 180, 2, 1, 14), ChannelFailure()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelFailure.setStatus('current')
channelSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 180, 2, 1, 15), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: channelSeverity.setStatus('current')
channelLoa = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 180, 2, 1, 16), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelLoa.setStatus('current')
channelLom = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 180, 2, 1, 17), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelLom.setStatus('current')
channelSqm = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 180, 2, 1, 18), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelSqm.setStatus('current')
bandwidthNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 110, 190, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bandwidthNumber.setStatus('current')
bandwidthTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 110, 190, 2), )
if mibBuilder.loadTexts: bandwidthTable.setStatus('current')
bandwidthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 110, 190, 2, 1), ).setIndexNames((0, "SDH-ETS-MIB", "bandwidthIndex"))
if mibBuilder.loadTexts: bandwidthEntry.setStatus('current')
bandwidthIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 190, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bandwidthIndex.setStatus('current')
bandwidthBoardIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 190, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bandwidthBoardIndex.setStatus('current')
bandwidthSrcType = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 190, 2, 1, 3), NspiSrcType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bandwidthSrcType.setStatus('current')
bandwidthSrcPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 190, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bandwidthSrcPointer.setStatus('current')
bandwidthSinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 190, 2, 1, 5), NspiSrcType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bandwidthSinkType.setStatus('current')
bandwidthSinkPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 190, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bandwidthSinkPointer.setStatus('current')
bandwidthAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 190, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bandwidthAdminStatus.setStatus('current')
bandwidthOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 190, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bandwidthOperStatus.setStatus('current')
bandwidthPrevIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 190, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bandwidthPrevIndex.setStatus('current')
bandwidthNextIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 110, 190, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bandwidthNextIndex.setStatus('current')
mibBuilder.exportSymbols("SDH-ETS-MIB", vc3TTPSesThreshold=vc3TTPSesThreshold, vc12TTPPathTraceSent=vc12TTPPathTraceSent, Vc3TTPSignalLabel=Vc3TTPSignalLabel, vc12TTP=vc12TTP, nspiTTPSrcType=nspiTTPSrcType, au4CTPAis=au4CTPAis, Vc4TTPFailure=Vc4TTPFailure, channelDelay=channelDelay, vc3TTPLabelReceived=vc3TTPLabelReceived, EOWMode=EOWMode, vc3TTPRdi=vc3TTPRdi, rsTTPEOWByteColumn=rsTTPEOWByteColumn, vc4TTPSinkType=vc4TTPSinkType, vc3TTPTable=vc3TTPTable, tu3CTPFailure=tu3CTPFailure, msTTPMonitor=msTTPMonitor, msCTP=msCTP, nspiTTPBoardAcces=nspiTTPBoardAcces, rsTTP=rsTTP, vc4TTPSd=vc4TTPSd, vc3TTPMonitor=vc3TTPMonitor, vc3TTPPlm=vc3TTPPlm, vc12TTPNumber=vc12TTPNumber, channelNbVc12=channelNbVc12, vc4TTPLabelSent=vc4TTPLabelSent, bandwidthSrcType=bandwidthSrcType, sdhEts=sdhEts, au4CTPName=au4CTPName, spiTTPBoardIndex=spiTTPBoardIndex, vc12TTPSesThreshold=vc12TTPSesThreshold, msTTPTable=msTTPTable, spiTTPIndex=spiTTPIndex, msaSinkType=msaSinkType, msTTPProtectionType=msTTPProtectionType, vc4TTPName=vc4TTPName, nspiTTPNumber=nspiTTPNumber, tu12CTPName=tu12CTPName, tu3CTPEntry=tu3CTPEntry, msaSTMLevel=msaSTMLevel, nspiTTP=nspiTTP, channelMonitor=channelMonitor, vc4TTPSdThreshold=vc4TTPSdThreshold, channelOperStatus=channelOperStatus, tu3CTPAis=tu3CTPAis, rsTTPTable=rsTTPTable, spiTTPBoardAcces=spiTTPBoardAcces, vc3TTPPathTraceExpected=vc3TTPPathTraceExpected, channelSeverity=channelSeverity, bandwidthOperStatus=bandwidthOperStatus, spiTTPMonitor=spiTTPMonitor, rsTTPE1SrcPointer=rsTTPE1SrcPointer, Vc3TTPSinkType=Vc3TTPSinkType, nspiCTPTable=nspiCTPTable, bandwidth=bandwidth, vc12TTPSdThreshold=vc12TTPSdThreshold, msaSinkPointer=msaSinkPointer, vc3TTPEntry=vc3TTPEntry, vc4TTPSesThreshold=vc4TTPSesThreshold, MsaSrcType=MsaSrcType, channelEncaps=channelEncaps, vc4TTP=vc4TTP, CTPStatus=CTPStatus, msaEntry=msaEntry, msaSrc4Type=msaSrc4Type, au4CTPCnxType=au4CTPCnxType, Au4CTPFailure=Au4CTPFailure, channelLom=channelLom, msTTPEntry=msTTPEntry, vc3TTPTim=vc3TTPTim, nspiCTPTTPType=nspiCTPTTPType, vc4TTPPlm=vc4TTPPlm, vc4TTPNumber=vc4TTPNumber, msTTPSesThreshold=msTTPSesThreshold, channel=channel, vc4TTPBidirectionnal=vc4TTPBidirectionnal, spiTTPType=spiTTPType, tu3CTPName=tu3CTPName, vc4TTPTimDis=vc4TTPTimDis, vc12TTPMonitor=vc12TTPMonitor, nspiTTPBoardIndex=nspiTTPBoardIndex, au4CTP=au4CTP, rsTTPName=rsTTPName, vc3TTPLabelExpected=vc3TTPLabelExpected, msTTPFailure=msTTPFailure, channelEntry=channelEntry, MsaSinkType=MsaSinkType, tu3CTPStatus=tu3CTPStatus, au4CTPLom=au4CTPLom, tu3CTPMonitor=tu3CTPMonitor, Vc12TTPSinkType=Vc12TTPSinkType, vc4TTPMonitor=vc4TTPMonitor, bandwidthSinkPointer=bandwidthSinkPointer, au4CTPLop=au4CTPLop, tu12CTPLop=tu12CTPLop, vc4TTPSinkPointer=vc4TTPSinkPointer, vc12TTPSd=vc12TTPSd, Vc4TTPSignalLabel=Vc4TTPSignalLabel, nspiTTPLos=nspiTTPLos, NspiSrcType=NspiSrcType, Vc4TTPTraceMode=Vc4TTPTraceMode, vc4TTPSeverity=vc4TTPSeverity, tu3CTPTable=tu3CTPTable, msaSrc3Pointer=msaSrc3Pointer, tu12CTPSeverity=tu12CTPSeverity, vc3TTPUneq=vc3TTPUneq, nspiTTPEntry=nspiTTPEntry, nspiTTPFailure=nspiTTPFailure, nspiTTPIndex=nspiTTPIndex, ChannelConcat=ChannelConcat, vc3TTPFailure=vc3TTPFailure, vc12TTPName=vc12TTPName, vc12TTPSeverity=vc12TTPSeverity, bandwidthBoardIndex=bandwidthBoardIndex, spiTTPName=spiTTPName, Vc4TTPSinkType=Vc4TTPSinkType, rsTTPF1SrcPointer=rsTTPF1SrcPointer, au4CTPNumber=au4CTPNumber, vc12TTPLabelExpected=vc12TTPLabelExpected, au4CTPStatus=au4CTPStatus, bandwidthSrcPointer=bandwidthSrcPointer, tu12CTPAis=tu12CTPAis, vc12TTPRdi=vc12TTPRdi, au4CTPMonitor=au4CTPMonitor, ProtectionType=ProtectionType, vc12TTPSinkPointer=vc12TTPSinkPointer, channelSqm=channelSqm, vc4TTPLabelReceived=vc4TTPLabelReceived, vc12TTPPathTraceExpected=vc12TTPPathTraceExpected, tu12CTPStatus=tu12CTPStatus, spiTTP=spiTTP, bandwidthSinkType=bandwidthSinkType, tu12CTPMonitor=tu12CTPMonitor, msaTable=msaTable, vc4TTPFailure=vc4TTPFailure, au4CTPTable=au4CTPTable, nspiCTPNumber=nspiCTPNumber, vc3TTPPathTraceSent=vc3TTPPathTraceSent, nspiTTPLevel=nspiTTPLevel, tu12CTPFailure=tu12CTPFailure, msTTPRdi=msTTPRdi, msaSrc1Type=msaSrc1Type, vc3TTPPathTraceReceived=vc3TTPPathTraceReceived, rsTTPSesThreshold=rsTTPSesThreshold, msTTPSd=msTTPSd, vc3TTP=vc3TTP, msTTPIndex=msTTPIndex, msTTPName=msTTPName, bandwidthEntry=bandwidthEntry, vc12TTPLabelReceived=vc12TTPLabelReceived, rsTTPEOWMode=rsTTPEOWMode, spiTTPSeverity=spiTTPSeverity, msTTPMonEber=msTTPMonEber, spiTTPTable=spiTTPTable, MsTTPFailure=MsTTPFailure, vc3TTPIndex=vc3TTPIndex, msTTP=msTTP, tu3CTPNumber=tu3CTPNumber, nspiTTPAis=nspiTTPAis, vc3TTPLabelSent=vc3TTPLabelSent, rsTTPSeverity=rsTTPSeverity, channelFailure=channelFailure, msTTPEber=msTTPEber, msTTPE2SrcPointer=msTTPE2SrcPointer, vc4TTPEntry=vc4TTPEntry, tu3CTPSeverity=tu3CTPSeverity, vc12TTPBidirectionnal=vc12TTPBidirectionnal, bandwidthPrevIndex=bandwidthPrevIndex, SpiTTPFailure=SpiTTPFailure, msTTPEOWByteColumn=msTTPEOWByteColumn, channelConcat=channelConcat, spiTTPNumber=spiTTPNumber, msaSrc4Pointer=msaSrc4Pointer, msTTPEOWByteLine=msTTPEOWByteLine, spiTTPStmLevel=spiTTPStmLevel, rsTTPIndex=rsTTPIndex, msaSrc2Pointer=msaSrc2Pointer, vc4TTPRdi=vc4TTPRdi, tu12CTPIndex=tu12CTPIndex, vc12TTPEntry=vc12TTPEntry, spiTTPEntry=spiTTPEntry, vc4TTPIndex=vc4TTPIndex, NspiTTPLevel=NspiTTPLevel, vc12TTPFailure=vc12TTPFailure, bandwidthIndex=bandwidthIndex, nspiTTPTable=nspiTTPTable, ChannelFailure=ChannelFailure, bandwidthNumber=bandwidthNumber, bandwidthTable=bandwidthTable, spiTTPFailure=spiTTPFailure, vc12TTPIndex=vc12TTPIndex, vc12TTPLabelSent=vc12TTPLabelSent, nspiCTPEntry=nspiCTPEntry, Tu3CTPFailure=Tu3CTPFailure, nspiTTPSrcPointer=nspiTTPSrcPointer, SpiTTPType=SpiTTPType, spiTTPLoopback=spiTTPLoopback, channelNumber=channelNumber, vc12TTPPlm=vc12TTPPlm, channelLoa=channelLoa, vc4TTPTim=vc4TTPTim, tu3CTPIndex=tu3CTPIndex, channelNbVc3=channelNbVc3, rsTTPMonitor=rsTTPMonitor, vc12TTPTim=vc12TTPTim, tu3CTP=tu3CTP, STMLevel=STMLevel, Au4CTPCnxType=Au4CTPCnxType, msTTPEOWMode=msTTPEOWMode, vc12TTPTable=vc12TTPTable, rsCTP=rsCTP, rsTTPEOWByteLine=rsTTPEOWByteLine, tu12CTPNumber=tu12CTPNumber, spiTTPTf=spiTTPTf, au4CTPEntry=au4CTPEntry, vc3TTPNumber=vc3TTPNumber, nspiTTPMonitor=nspiTTPMonitor, bandwidthAdminStatus=bandwidthAdminStatus, RsTTPFailure=RsTTPFailure, au4CTPSeverity=au4CTPSeverity, tu3CTPLop=tu3CTPLop, vc3TTPBidirectionnal=vc3TTPBidirectionnal, nspiCTP=nspiCTP, NspiTTPType=NspiTTPType, rsTTPFailure=rsTTPFailure, rsTTPLof=rsTTPLof, bandwidthNextIndex=bandwidthNextIndex, vc3TTPSinkPointer=vc3TTPSinkPointer, nspiTTPLoopback=nspiTTPLoopback, nspiTTPSeverity=nspiTTPSeverity, msTTPSeverity=msTTPSeverity, channelAdminStatus=channelAdminStatus, tu12CTPTable=tu12CTPTable, au4CTPIndex=au4CTPIndex, vc12TTPPathTraceReceived=vc12TTPPathTraceReceived, nspiTTPType=nspiTTPType, rsTTPEntry=rsTTPEntry, vc3TTPName=vc3TTPName, nspiTTPName=nspiTTPName, msaSrc2Type=msaSrc2Type, vc4TTPPathTraceReceived=vc4TTPPathTraceReceived, vc3TTPSd=vc3TTPSd, tu12CTP=tu12CTP, msa=msa, spiTTPLos=spiTTPLos, vc3TTPSeverity=vc3TTPSeverity, msTTPSdThreshold=msTTPSdThreshold, vc12TTPSinkType=vc12TTPSinkType, Vc12TTPSignalLabel=Vc12TTPSignalLabel, au4CTPFailure=au4CTPFailure, Tu12CTPFailure=Tu12CTPFailure, nspiCTPIndex=nspiCTPIndex, ChannelEncaps=ChannelEncaps, PYSNMP_MODULE_ID=sdhEts, msaSrc1Pointer=msaSrc1Pointer)
mibBuilder.exportSymbols("SDH-ETS-MIB", vc4TTPPathTraceSent=vc4TTPPathTraceSent, vc4TTPUneq=vc4TTPUneq, vc4TTPLabelExpected=vc4TTPLabelExpected, vc4TTPTable=vc4TTPTable, nspiCTPName=nspiCTPName, channelNbVc4=channelNbVc4, NspiTTPFailure=NspiTTPFailure, vc4TTPTraceMode=vc4TTPTraceMode, channelFirstIndex=channelFirstIndex, vc3TTPSinkType=vc3TTPSinkType, vc3TTPSdThreshold=vc3TTPSdThreshold, tu12CTPEntry=tu12CTPEntry, vc4TTPPathTraceExpected=vc4TTPPathTraceExpected, msaName=msaName, channelTable=channelTable, vc12TTPUneq=vc12TTPUneq, VcLoFailure=VcLoFailure, Loopback=Loopback, msaSrc3Type=msaSrc3Type, msaIndex=msaIndex, channelIndex=channelIndex, nspiCTPStatus=nspiCTPStatus)
