#
# PySNMP MIB module PRVT-DRY-CONTACTS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binos/PRVT-DRY-CONTACTS-MIB
# Produced by pysmi-1.1.8 at Thu Jan  6 19:50:40 2022
# On host fv-az121-779 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
switch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "switch")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Gauge32, Integer32, TimeTicks, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Unsigned32, Bits, ModuleIdentity, Counter32, MibIdentifier, Counter64, IpAddress, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "Integer32", "TimeTicks", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Unsigned32", "Bits", "ModuleIdentity", "Counter32", "MibIdentifier", "Counter64", "IpAddress", "iso")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
prvtDryContactsMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 1, 5, 112))
prvtDryContactsMIB.setRevisions(('2007-11-27 00:00',))
if mibBuilder.loadTexts: prvtDryContactsMIB.setLastUpdated('200711270000Z')
if mibBuilder.loadTexts: prvtDryContactsMIB.setOrganization('BATM Advanced Communication')
dryContactsNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 112, 0))
dryContactsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 112, 1))
cfgTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 112, 1, 1), )
if mibBuilder.loadTexts: cfgTable.setStatus('current')
cfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 112, 1, 1, 1), ).setIndexNames((0, "PRVT-DRY-CONTACTS-MIB", "prvtAlarmID"))
if mibBuilder.loadTexts: cfgEntry.setStatus('current')
prvtAlarmID = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 112, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 6))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtAlarmID.setStatus('current')
prvtSensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 112, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("input", 1), ("output", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtSensorType.setStatus('current')
prvtName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 112, 1, 1, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtName.setStatus('current')
prvtDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 112, 1, 1, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtDescription.setStatus('current')
prvtEnableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 112, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtEnableStatus.setStatus('current')
prvtAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 112, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no-alarm", 1), ("alarm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtAlarmStatus.setStatus('current')
prvtAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 112, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("info", 1), ("minor", 2), ("major", 3), ("critical", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtAlarmSeverity.setStatus('current')
prvtPolarity = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 112, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normally-opened", 1), ("normally-closed", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtPolarity.setStatus('current')
prvtLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 112, 1, 1, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtLastChange.setStatus('current')
stateChanged = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 5, 112, 0, 1)).setObjects(("PRVT-DRY-CONTACTS-MIB", "prvtAlarmID"), ("PRVT-DRY-CONTACTS-MIB", "prvtSensorType"), ("PRVT-DRY-CONTACTS-MIB", "prvtName"), ("PRVT-DRY-CONTACTS-MIB", "prvtDescription"), ("PRVT-DRY-CONTACTS-MIB", "prvtAlarmStatus"), ("PRVT-DRY-CONTACTS-MIB", "prvtAlarmSeverity"))
if mibBuilder.loadTexts: stateChanged.setStatus('current')
mibBuilder.exportSymbols("PRVT-DRY-CONTACTS-MIB", prvtDryContactsMIB=prvtDryContactsMIB, dryContactsObjects=dryContactsObjects, cfgEntry=cfgEntry, cfgTable=cfgTable, prvtAlarmStatus=prvtAlarmStatus, prvtPolarity=prvtPolarity, stateChanged=stateChanged, PYSNMP_MODULE_ID=prvtDryContactsMIB, prvtEnableStatus=prvtEnableStatus, prvtAlarmSeverity=prvtAlarmSeverity, prvtAlarmID=prvtAlarmID, prvtSensorType=prvtSensorType, prvtDescription=prvtDescription, prvtLastChange=prvtLastChange, prvtName=prvtName, dryContactsNotifications=dryContactsNotifications)
