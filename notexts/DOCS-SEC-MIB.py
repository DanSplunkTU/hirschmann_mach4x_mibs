#
# PySNMP MIB module DOCS-SEC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/DOCS-SEC-MIB
# Produced by pysmi-1.1.8 at Sat Jan 15 04:09:01 2022
# On host fv-az77-149 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
clabProjDocsis, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabProjDocsis")
docsIf3CmtsCmRegStatusId, docsIf3CmtsCmRegStatusEntry = mibBuilder.importSymbols("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusId", "docsIf3CmtsCmRegStatusEntry")
InetAddress, InetPortNumber, InetAddressPrefixLength, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetPortNumber", "InetAddressPrefixLength", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
SnmpTagList, = mibBuilder.importSymbols("SNMP-TARGET-MIB", "SnmpTagList")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Bits, Counter64, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, NotificationType, IpAddress, MibIdentifier, Gauge32, Unsigned32, ModuleIdentity, iso, Integer32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "NotificationType", "IpAddress", "MibIdentifier", "Gauge32", "Unsigned32", "ModuleIdentity", "iso", "Integer32", "ObjectIdentity")
DisplayString, DateAndTime, TruthValue, TextualConvention, MacAddress, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "TruthValue", "TextualConvention", "MacAddress", "RowStatus")
docsSecMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11))
docsSecMib.setRevisions(('2007-02-23 00:00', '2006-12-07 17:00',))
if mibBuilder.loadTexts: docsSecMib.setLastUpdated('200702230000Z')
if mibBuilder.loadTexts: docsSecMib.setOrganization('Cable Television Laboratories, Inc.')
docsSecMibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1))
docsSecCmtsServerCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 1))
docsSecCmtsServerCfgTftpOptions = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 1, 1), Bits().clone(namedValues=NamedValues(("hwAddr", 0), ("netAddr", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSecCmtsServerCfgTftpOptions.setStatus('current')
docsSecCmtsServerCfgConfigFileLearningEnable = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 1, 2), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSecCmtsServerCfgConfigFileLearningEnable.setStatus('current')
docsSecCmtsEncrypt = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 2))
docsSecCmtsEncryptEncryptAlgPriority = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 2, 1), SnmpTagList().clone('aes128CbcMode des56CbcMode des40CbcMode')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSecCmtsEncryptEncryptAlgPriority.setStatus('current')
docsSecCmtsCmEaeExclusionTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 3), )
if mibBuilder.loadTexts: docsSecCmtsCmEaeExclusionTable.setStatus('current')
docsSecCmtsCmEaeExclusionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 3, 1), ).setIndexNames((0, "DOCS-SEC-MIB", "docsSecCmtsCmEaeExclusionId"))
if mibBuilder.loadTexts: docsSecCmtsCmEaeExclusionEntry.setStatus('current')
docsSecCmtsCmEaeExclusionId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: docsSecCmtsCmEaeExclusionId.setStatus('current')
docsSecCmtsCmEaeExclusionMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 3, 1, 2), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsSecCmtsCmEaeExclusionMacAddr.setStatus('current')
docsSecCmtsCmEaeExclusionMacAddrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 3, 1, 3), MacAddress().clone(hexValue="FFFFFFFFFFFF")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsSecCmtsCmEaeExclusionMacAddrMask.setStatus('current')
docsSecCmtsCmEaeExclusionRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsSecCmtsCmEaeExclusionRowStatus.setStatus('current')
docsSecCmtsSavControl = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 4))
docsSecCmtsSavControlCmAuthEnable = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 4, 1), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSecCmtsSavControlCmAuthEnable.setStatus('current')
docsSecSavCmAuthTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 5), )
if mibBuilder.loadTexts: docsSecSavCmAuthTable.setStatus('current')
docsSecSavCmAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 5, 1), ).setIndexNames((0, "DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusId"))
if mibBuilder.loadTexts: docsSecSavCmAuthEntry.setStatus('current')
docsSecSavCmAuthGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 5, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsSecSavCmAuthGrpName.setStatus('current')
docsSecSavCmAuthStaticPrefixListId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsSecSavCmAuthStaticPrefixListId.setStatus('current')
docsSecSavCfgListTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 6), )
if mibBuilder.loadTexts: docsSecSavCfgListTable.setStatus('current')
docsSecSavCfgListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 6, 1), ).setIndexNames((0, "DOCS-SEC-MIB", "docsSecSavCfgListName"), (0, "DOCS-SEC-MIB", "docsSecSavCfgListRuleId"))
if mibBuilder.loadTexts: docsSecSavCfgListEntry.setStatus('current')
docsSecSavCfgListName = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 6, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 16)))
if mibBuilder.loadTexts: docsSecSavCfgListName.setStatus('current')
docsSecSavCfgListRuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: docsSecSavCfgListRuleId.setStatus('current')
docsSecSavCfgListPrefixAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 6, 1, 3), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsSecSavCfgListPrefixAddrType.setStatus('current')
docsSecSavCfgListPrefixAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 6, 1, 4), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsSecSavCfgListPrefixAddr.setStatus('current')
docsSecSavCfgListPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 6, 1, 5), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsSecSavCfgListPrefixLen.setStatus('current')
docsSecSavCfgListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 6, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: docsSecSavCfgListRowStatus.setStatus('current')
docsSecSavStaticListTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 7), )
if mibBuilder.loadTexts: docsSecSavStaticListTable.setStatus('current')
docsSecSavStaticListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 7, 1), ).setIndexNames((0, "DOCS-SEC-MIB", "docsSecSavStaticListId"), (0, "DOCS-SEC-MIB", "docsSecSavStaticListRuleId"))
if mibBuilder.loadTexts: docsSecSavStaticListEntry.setStatus('current')
docsSecSavStaticListId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: docsSecSavStaticListId.setStatus('current')
docsSecSavStaticListRuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: docsSecSavStaticListRuleId.setStatus('current')
docsSecSavStaticListPrefixAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 7, 1, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsSecSavStaticListPrefixAddrType.setStatus('current')
docsSecSavStaticListPrefixAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 7, 1, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsSecSavStaticListPrefixAddr.setStatus('current')
docsSecSavStaticListPrefixLen = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 7, 1, 5), InetAddressPrefixLength()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsSecSavStaticListPrefixLen.setStatus('current')
docsSecCmtsCmSavStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 8), )
if mibBuilder.loadTexts: docsSecCmtsCmSavStatsTable.setStatus('current')
docsSecCmtsCmSavStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 8, 1), )
docsIf3CmtsCmRegStatusEntry.registerAugmentions(("DOCS-SEC-MIB", "docsSecCmtsCmSavStatsEntry"))
docsSecCmtsCmSavStatsEntry.setIndexNames(*docsIf3CmtsCmRegStatusEntry.getIndexNames())
if mibBuilder.loadTexts: docsSecCmtsCmSavStatsEntry.setStatus('current')
docsSecCmtsCmSavStatsSavDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 8, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsSecCmtsCmSavStatsSavDiscards.setStatus('current')
docsSecCmtsCertificate = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 9))
docsSecCmtsCertificateCertRevocationMethod = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("crl", 2), ("ocsp", 3), ("crlAndOcsp", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSecCmtsCertificateCertRevocationMethod.setStatus('current')
docsSecCmtsCertRevocationList = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 10))
docsSecCmtsCertRevocationListUrl = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 10, 1), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSecCmtsCertRevocationListUrl.setStatus('current')
docsSecCmtsCertRevocationListRefreshInterval = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 10, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 524160)).clone(10080)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSecCmtsCertRevocationListRefreshInterval.setStatus('current')
docsSecCmtsCertRevocationListLastUpdate = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 10, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsSecCmtsCertRevocationListLastUpdate.setStatus('current')
docsSecCmtsOnlineCertStatusProtocol = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 11))
docsSecCmtsOnlineCertStatusProtocolUrl = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 11, 1), SnmpAdminString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSecCmtsOnlineCertStatusProtocolUrl.setStatus('current')
docsSecCmtsOnlineCertStatusProtocolSignatureBypass = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 1, 11, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsSecCmtsOnlineCertStatusProtocolSignatureBypass.setStatus('current')
docsSecMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 2))
docsSecMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 2, 1))
docsSecMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 2, 2))
docsSecCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 2, 1, 1)).setObjects(("DOCS-SEC-MIB", "docsSecGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsSecCompliance = docsSecCompliance.setStatus('current')
docsSecGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 11, 2, 2, 1)).setObjects(("DOCS-SEC-MIB", "docsSecCmtsCertRevocationListUrl"), ("DOCS-SEC-MIB", "docsSecCmtsCertRevocationListRefreshInterval"), ("DOCS-SEC-MIB", "docsSecCmtsCertRevocationListLastUpdate"), ("DOCS-SEC-MIB", "docsSecCmtsOnlineCertStatusProtocolUrl"), ("DOCS-SEC-MIB", "docsSecCmtsOnlineCertStatusProtocolSignatureBypass"), ("DOCS-SEC-MIB", "docsSecCmtsServerCfgTftpOptions"), ("DOCS-SEC-MIB", "docsSecCmtsServerCfgConfigFileLearningEnable"), ("DOCS-SEC-MIB", "docsSecCmtsEncryptEncryptAlgPriority"), ("DOCS-SEC-MIB", "docsSecCmtsSavControlCmAuthEnable"), ("DOCS-SEC-MIB", "docsSecCmtsCmEaeExclusionMacAddr"), ("DOCS-SEC-MIB", "docsSecCmtsCmEaeExclusionMacAddrMask"), ("DOCS-SEC-MIB", "docsSecCmtsCmEaeExclusionRowStatus"), ("DOCS-SEC-MIB", "docsSecSavCmAuthGrpName"), ("DOCS-SEC-MIB", "docsSecSavCmAuthStaticPrefixListId"), ("DOCS-SEC-MIB", "docsSecSavCfgListPrefixAddrType"), ("DOCS-SEC-MIB", "docsSecSavCfgListPrefixAddr"), ("DOCS-SEC-MIB", "docsSecSavCfgListPrefixLen"), ("DOCS-SEC-MIB", "docsSecSavCfgListRowStatus"), ("DOCS-SEC-MIB", "docsSecSavStaticListPrefixAddrType"), ("DOCS-SEC-MIB", "docsSecSavStaticListPrefixAddr"), ("DOCS-SEC-MIB", "docsSecSavStaticListPrefixLen"), ("DOCS-SEC-MIB", "docsSecCmtsCmSavStatsSavDiscards"), ("DOCS-SEC-MIB", "docsSecCmtsCertificateCertRevocationMethod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsSecGroup = docsSecGroup.setStatus('current')
mibBuilder.exportSymbols("DOCS-SEC-MIB", docsSecCmtsCmEaeExclusionId=docsSecCmtsCmEaeExclusionId, docsSecMibGroups=docsSecMibGroups, docsSecSavStaticListTable=docsSecSavStaticListTable, docsSecSavCmAuthEntry=docsSecSavCmAuthEntry, docsSecCmtsCmEaeExclusionRowStatus=docsSecCmtsCmEaeExclusionRowStatus, docsSecSavStaticListPrefixAddr=docsSecSavStaticListPrefixAddr, docsSecCmtsCertificate=docsSecCmtsCertificate, docsSecCmtsCertRevocationListRefreshInterval=docsSecCmtsCertRevocationListRefreshInterval, docsSecSavCfgListRuleId=docsSecSavCfgListRuleId, docsSecSavCfgListName=docsSecSavCfgListName, PYSNMP_MODULE_ID=docsSecMib, docsSecCmtsSavControl=docsSecCmtsSavControl, docsSecSavCfgListPrefixLen=docsSecSavCfgListPrefixLen, docsSecSavStaticListPrefixLen=docsSecSavStaticListPrefixLen, docsSecCmtsCertRevocationListLastUpdate=docsSecCmtsCertRevocationListLastUpdate, docsSecCmtsServerCfg=docsSecCmtsServerCfg, docsSecCmtsCmEaeExclusionEntry=docsSecCmtsCmEaeExclusionEntry, docsSecCmtsCmEaeExclusionMacAddrMask=docsSecCmtsCmEaeExclusionMacAddrMask, docsSecMibObjects=docsSecMibObjects, docsSecCmtsSavControlCmAuthEnable=docsSecCmtsSavControlCmAuthEnable, docsSecSavStaticListRuleId=docsSecSavStaticListRuleId, docsSecCmtsCertRevocationList=docsSecCmtsCertRevocationList, docsSecSavStaticListEntry=docsSecSavStaticListEntry, docsSecCmtsCmEaeExclusionTable=docsSecCmtsCmEaeExclusionTable, docsSecSavCmAuthStaticPrefixListId=docsSecSavCmAuthStaticPrefixListId, docsSecCmtsOnlineCertStatusProtocolUrl=docsSecCmtsOnlineCertStatusProtocolUrl, docsSecCmtsCmSavStatsEntry=docsSecCmtsCmSavStatsEntry, docsSecSavCfgListTable=docsSecSavCfgListTable, docsSecCmtsServerCfgTftpOptions=docsSecCmtsServerCfgTftpOptions, docsSecSavStaticListPrefixAddrType=docsSecSavStaticListPrefixAddrType, docsSecMib=docsSecMib, docsSecSavCmAuthGrpName=docsSecSavCmAuthGrpName, docsSecSavCfgListPrefixAddr=docsSecSavCfgListPrefixAddr, docsSecCmtsCmSavStatsTable=docsSecCmtsCmSavStatsTable, docsSecCmtsCertRevocationListUrl=docsSecCmtsCertRevocationListUrl, docsSecSavCfgListEntry=docsSecSavCfgListEntry, docsSecCmtsCmEaeExclusionMacAddr=docsSecCmtsCmEaeExclusionMacAddr, docsSecCmtsCertificateCertRevocationMethod=docsSecCmtsCertificateCertRevocationMethod, docsSecGroup=docsSecGroup, docsSecCmtsOnlineCertStatusProtocol=docsSecCmtsOnlineCertStatusProtocol, docsSecCmtsOnlineCertStatusProtocolSignatureBypass=docsSecCmtsOnlineCertStatusProtocolSignatureBypass, docsSecSavCmAuthTable=docsSecSavCmAuthTable, docsSecSavStaticListId=docsSecSavStaticListId, docsSecSavCfgListRowStatus=docsSecSavCfgListRowStatus, docsSecCmtsCmSavStatsSavDiscards=docsSecCmtsCmSavStatsSavDiscards, docsSecCompliance=docsSecCompliance, docsSecMibCompliances=docsSecMibCompliances, docsSecCmtsServerCfgConfigFileLearningEnable=docsSecCmtsServerCfgConfigFileLearningEnable, docsSecMibConformance=docsSecMibConformance, docsSecCmtsEncrypt=docsSecCmtsEncrypt, docsSecCmtsEncryptEncryptAlgPriority=docsSecCmtsEncryptEncryptAlgPriority, docsSecSavCfgListPrefixAddrType=docsSecSavCfgListPrefixAddrType)
