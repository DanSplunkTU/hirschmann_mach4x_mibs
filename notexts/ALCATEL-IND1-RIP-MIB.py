#
# PySNMP MIB module ALCATEL-IND1-RIP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-RIP-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 17:14:57 2022
# On host fv-az135-792 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
routingIND1Rip, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "routingIND1Rip")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
rip2IfConfEntry, = mibBuilder.importSymbols("RIPv2-MIB", "rip2IfConfEntry")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibIdentifier, Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, IpAddress, NotificationType, Integer32, TimeTicks, Bits, Gauge32, iso, Unsigned32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "IpAddress", "NotificationType", "Integer32", "TimeTicks", "Bits", "Gauge32", "iso", "Unsigned32", "ModuleIdentity")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
alcatelIND1RIPMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1))
alcatelIND1RIPMIB.setRevisions(('2007-04-03 00:00',))
if mibBuilder.loadTexts: alcatelIND1RIPMIB.setLastUpdated('201010260000Z')
if mibBuilder.loadTexts: alcatelIND1RIPMIB.setOrganization('Alcatel-Lucent')
alcatelIND1RIPMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1))
if mibBuilder.loadTexts: alcatelIND1RIPMIBObjects.setStatus('current')
alcatelIND1RIPMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 2))
if mibBuilder.loadTexts: alcatelIND1RIPMIBConformance.setStatus('current')
alcatelIND1RIPMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1RIPMIBGroups.setStatus('current')
alcatelIND1RIPMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1RIPMIBCompliances.setStatus('current')
class AlaAuthenticationEncryptKey(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(16, 16)
    fixedLength = 16

alaProtocolRip = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1))
alaRipProtoStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipProtoStatus.setStatus('current')
alaRipHostRouteSupport = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipHostRouteSupport.setStatus('current')
alaRipRedistRouteTag = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipRedistRouteTag.setStatus('current')
alaRipForceHolddownTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipForceHolddownTimer.setStatus('current')
alaRipRouteNumber = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipRouteNumber.setStatus('current')
alaRipUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipUpdateInterval.setStatus('current')
alaRipInvalidTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 360)).clone(180)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipInvalidTimer.setStatus('current')
alaRipHolddownTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 120))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipHolddownTimer.setStatus('current')
alaRipGarbageTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 180)).clone(120)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRipGarbageTimer.setStatus('current')
alaRip2IfConfAugTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 11), )
if mibBuilder.loadTexts: alaRip2IfConfAugTable.setStatus('current')
alaRip2IfConfAugEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 11, 1), )
rip2IfConfEntry.registerAugmentions(("ALCATEL-IND1-RIP-MIB", "alaRip2IfConfAugEntry"))
alaRip2IfConfAugEntry.setIndexNames(*rip2IfConfEntry.getIndexNames())
if mibBuilder.loadTexts: alaRip2IfConfAugEntry.setStatus('current')
alaRip2IfConfEncryptKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 11, 1, 1), AlaAuthenticationEncryptKey()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRip2IfConfEncryptKey.setStatus('current')
alaRip2IfIpConfStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2), ("none", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRip2IfIpConfStatus.setStatus('current')
alaRip2IfRecvPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRip2IfRecvPkts.setStatus('current')
alaRip2IfConfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 11, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRip2IfConfName.setStatus('current')
alaRip2IfConfType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("broadcast", 1), ("point2point", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRip2IfConfType.setStatus('current')
alaRip2IfConfPtoPPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 11, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRip2IfConfPtoPPeer.setStatus('current')
alaRip2IfConfIngressFilterRouteMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 11, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRip2IfConfIngressFilterRouteMapName.setStatus('current')
alaRip2IfConfEgressFilterRouteMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 11, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 20)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaRip2IfConfEgressFilterRouteMapName.setStatus('current')
alaRipEcmpRouteTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12), )
if mibBuilder.loadTexts: alaRipEcmpRouteTable.setStatus('current')
alaRipEcmpRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1), ).setIndexNames((0, "ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteDest"), (0, "ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteMask"), (0, "ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteNextHop"))
if mibBuilder.loadTexts: alaRipEcmpRouteEntry.setStatus('current')
alaRipEcmpRouteDest = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1, 1), IpAddress())
if mibBuilder.loadTexts: alaRipEcmpRouteDest.setStatus('current')
alaRipEcmpRouteMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1, 2), IpAddress())
if mibBuilder.loadTexts: alaRipEcmpRouteMask.setStatus('current')
alaRipEcmpRouteNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1, 3), IpAddress())
if mibBuilder.loadTexts: alaRipEcmpRouteNextHop.setStatus('current')
alaRipEcmpRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("local", 1), ("remote", 2), ("redistribute", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipEcmpRouteType.setStatus('current')
alaRipEcmpRouteAge = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipEcmpRouteAge.setStatus('current')
alaRipEcmpRouteTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipEcmpRouteTag.setStatus('current')
alaRipEcmpRouteMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipEcmpRouteMetric.setStatus('current')
alaRipEcmpRouteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1, 8), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipEcmpRouteStatus.setStatus('current')
alaRipEcmpRouteState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 1, 1, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("active", 1), ("garbage", 2), ("holddown", 3), ("unknown", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaRipEcmpRouteState.setStatus('current')
alcatelIND1RIPMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-RIP-MIB", "alaRipMiscellaneousGroup"), ("ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1RIPMIBCompliance = alcatelIND1RIPMIBCompliance.setStatus('current')
alaRipMiscellaneousGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-RIP-MIB", "alaRipRedistRouteTag"), ("ALCATEL-IND1-RIP-MIB", "alaRipForceHolddownTimer"), ("ALCATEL-IND1-RIP-MIB", "alaRipRouteNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaRipMiscellaneousGroup = alaRipMiscellaneousGroup.setStatus('current')
alaRip2IfConfAugGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-RIP-MIB", "alaRip2IfConfEncryptKey"), ("ALCATEL-IND1-RIP-MIB", "alaRip2IfIpConfStatus"), ("ALCATEL-IND1-RIP-MIB", "alaRip2IfRecvPkts"), ("ALCATEL-IND1-RIP-MIB", "alaRip2IfConfName"), ("ALCATEL-IND1-RIP-MIB", "alaRip2IfConfType"), ("ALCATEL-IND1-RIP-MIB", "alaRip2IfConfPtoPPeer"), ("ALCATEL-IND1-RIP-MIB", "alaRip2IfConfIngressFilterRouteMapName"), ("ALCATEL-IND1-RIP-MIB", "alaRip2IfConfEgressFilterRouteMapName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaRip2IfConfAugGroup = alaRip2IfConfAugGroup.setStatus('current')
alaProtocolRipGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-RIP-MIB", "alaRipProtoStatus"), ("ALCATEL-IND1-RIP-MIB", "alaRipHostRouteSupport"), ("ALCATEL-IND1-RIP-MIB", "alaRipRedistRouteTag"), ("ALCATEL-IND1-RIP-MIB", "alaRipForceHolddownTimer"), ("ALCATEL-IND1-RIP-MIB", "alaRipRouteNumber"), ("ALCATEL-IND1-RIP-MIB", "alaRipUpdateInterval"), ("ALCATEL-IND1-RIP-MIB", "alaRipInvalidTimer"), ("ALCATEL-IND1-RIP-MIB", "alaRipHolddownTimer"), ("ALCATEL-IND1-RIP-MIB", "alaRipGarbageTimer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaProtocolRipGroup = alaProtocolRipGroup.setStatus('current')
alaRipEcmpRouteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-RIP-MIB", "alaRipRouteNumber"), ("ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteType"), ("ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteAge"), ("ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteTag"), ("ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteMetric"), ("ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteStatus"), ("ALCATEL-IND1-RIP-MIB", "alaRipEcmpRouteState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaRipEcmpRouteGroup = alaRipEcmpRouteGroup.setStatus('current')
alcatelIND1RIPTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 3))
alcatelIND1RIPTrapsRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 3, 0))
ripRouteMaxLimitReached = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 3, 0, 1))
if mibBuilder.loadTexts: ripRouteMaxLimitReached.setStatus('current')
alcatelIND1RIPTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 10, 3, 1, 2, 1, 7)).setObjects(("ALCATEL-IND1-RIP-MIB", "ripRouteMaxLimitReached"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1RIPTrapsGroup = alcatelIND1RIPTrapsGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-RIP-MIB", alcatelIND1RIPMIB=alcatelIND1RIPMIB, alaRip2IfConfName=alaRip2IfConfName, alaRipEcmpRouteMask=alaRipEcmpRouteMask, alcatelIND1RIPMIBObjects=alcatelIND1RIPMIBObjects, alaRipEcmpRouteType=alaRipEcmpRouteType, alcatelIND1RIPTrapsGroup=alcatelIND1RIPTrapsGroup, alaRip2IfRecvPkts=alaRip2IfRecvPkts, alaRipUpdateInterval=alaRipUpdateInterval, alaRip2IfConfAugEntry=alaRip2IfConfAugEntry, alaRipEcmpRouteNextHop=alaRipEcmpRouteNextHop, alcatelIND1RIPMIBCompliance=alcatelIND1RIPMIBCompliance, alaRip2IfConfAugGroup=alaRip2IfConfAugGroup, PYSNMP_MODULE_ID=alcatelIND1RIPMIB, alcatelIND1RIPMIBGroups=alcatelIND1RIPMIBGroups, alaRipEcmpRouteAge=alaRipEcmpRouteAge, alaRip2IfConfPtoPPeer=alaRip2IfConfPtoPPeer, alaRipHostRouteSupport=alaRipHostRouteSupport, alaRipEcmpRouteMetric=alaRipEcmpRouteMetric, AlaAuthenticationEncryptKey=AlaAuthenticationEncryptKey, alaRip2IfConfEgressFilterRouteMapName=alaRip2IfConfEgressFilterRouteMapName, alaRip2IfConfAugTable=alaRip2IfConfAugTable, alaRip2IfConfType=alaRip2IfConfType, alaRipGarbageTimer=alaRipGarbageTimer, alaRipRedistRouteTag=alaRipRedistRouteTag, alaRipEcmpRouteDest=alaRipEcmpRouteDest, alaRipForceHolddownTimer=alaRipForceHolddownTimer, alaRipRouteNumber=alaRipRouteNumber, alaRipProtoStatus=alaRipProtoStatus, alcatelIND1RIPMIBConformance=alcatelIND1RIPMIBConformance, alaRip2IfIpConfStatus=alaRip2IfIpConfStatus, alaRipEcmpRouteEntry=alaRipEcmpRouteEntry, alaRipMiscellaneousGroup=alaRipMiscellaneousGroup, alaRip2IfConfEncryptKey=alaRip2IfConfEncryptKey, alaRip2IfConfIngressFilterRouteMapName=alaRip2IfConfIngressFilterRouteMapName, alaProtocolRipGroup=alaProtocolRipGroup, alaRipEcmpRouteStatus=alaRipEcmpRouteStatus, alcatelIND1RIPTrapsRoot=alcatelIND1RIPTrapsRoot, alcatelIND1RIPTraps=alcatelIND1RIPTraps, ripRouteMaxLimitReached=ripRouteMaxLimitReached, alaRipHolddownTimer=alaRipHolddownTimer, alaRipEcmpRouteTable=alaRipEcmpRouteTable, alaProtocolRip=alaProtocolRip, alaRipEcmpRouteGroup=alaRipEcmpRouteGroup, alaRipInvalidTimer=alaRipInvalidTimer, alaRipEcmpRouteState=alaRipEcmpRouteState, alcatelIND1RIPMIBCompliances=alcatelIND1RIPMIBCompliances, alaRipEcmpRouteTag=alaRipEcmpRouteTag)
