#
# PySNMP MIB module ALCATEL-IND1-DA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-DA-MIB
# Produced by pysmi-1.1.8 at Thu Jan  6 19:44:27 2022
# On host fv-az121-779 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
softentIND1Da, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1Da")
TmnxEncapVal, = mibBuilder.importSymbols("ALCATEL-IND1-TIMETRA-TC-MIB", "TmnxEncapVal")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
InetAddressIPv4, InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv4", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter32, ObjectIdentity, Counter64, TimeTicks, Bits, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, iso, IpAddress, MibIdentifier, Integer32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "Counter64", "TimeTicks", "Bits", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "iso", "IpAddress", "MibIdentifier", "Integer32", "ModuleIdentity")
DateAndTime, TimeStamp, RowStatus, TextualConvention, DisplayString, MacAddress, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TimeStamp", "RowStatus", "TextualConvention", "DisplayString", "MacAddress", "TruthValue")
alcatelIND1DaMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1))
alcatelIND1DaMIB.setRevisions(('2007-04-03 00:00',))
if mibBuilder.loadTexts: alcatelIND1DaMIB.setLastUpdated('201008160000Z')
if mibBuilder.loadTexts: alcatelIND1DaMIB.setOrganization('Alcatel-Lucent')
alaIND1DaMIBNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 0))
if mibBuilder.loadTexts: alaIND1DaMIBNotifications.setStatus('current')
alaIND1DaMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1))
if mibBuilder.loadTexts: alaIND1DaMIBObjects.setStatus('current')
alaIND1DaMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2))
if mibBuilder.loadTexts: alaIND1DaMIBConformance.setStatus('current')
alaIND1DaMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1))
if mibBuilder.loadTexts: alaIND1DaMIBGroups.setStatus('current')
class AlaDaClassificationPolicyType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255), SingleValueConstraint(256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312))
    namedValues = NamedValues(("authPassAltUnp", 1), ("authPassDefUnp", 2), ("authPassSrvUnp", 3), ("noAuthMacRuleUnp", 4), ("noAuthMacRangeRuleUnp", 5), ("noAuthIpRuleUnp", 6), ("authFailDefUnp", 7), ("authFailMacRuleUnp", 8), ("authFailMacRangeRuleUnp", 9), ("authFailIpRuleUnp", 10), ("authFailRuleDefUnp", 11), ("authFailMacRangeVlanTagRuleUnp", 12), ("tagAuthFailMacRuleUnp", 13), ("tagAuthFailMacVlanTagRuleUnp", 14), ("tagAuthFailMacRangeRuleUnp", 15), ("tagAuthFailMacRangeVlanTagRuleUnp", 16), ("tagAuthFailIpRuleUnp", 17), ("tagAuthFailIpVlanTagRuleUnp", 18), ("tagAuthFailVlanTagRuleUnp", 19), ("tagAuthPassAltUnp", 20), ("tagAuthPassDefUnp", 21), ("tagAuthPassSrvUnp", 22), ("tagMacRuleUnp", 23), ("tagMacVlanTagRuleUnp", 24), ("tagMacRangeRuleUnp", 25), ("tagMacRangeVlanTagRuleUnp", 26), ("tagIpRuleUnp", 27), ("tagIpVlanTagRuleUnp", 28), ("tagVlanTagRuleUnp", 29), ("tagRuleDefUnp", 30), ("authPassDefUnpBlk", 31), ("authFailDefUnpBlk", 32), ("authFailRuleDefUnpBlk", 33), ("tagAuthPassDefUnpBlk", 34), ("tagRuleDefUnpBlk", 35), ("authPassSrvUnpTagMismatchBlk", 36), ("authPassAltUnpTagMismatchBlk", 37), ("authPassDefUnpTagMismatchBlk", 38), ("authFailMacRuleUnpTagMismatchBlk", 39), ("authFailMacVlanRuleUnpTagMismatchBlk", 40), ("authFailMacRangeRuleUnpTagMismatchBlk", 41), ("authFailMacRangeVlanRuleUnpTagMismatchBlk", 42), ("authFailIpRuleUnpTagMismatchBlk", 43), ("authFailIpVlanRuleUnpTagMismatchBlk", 44), ("authFailVlanRuleUnpTagMismatchBlk", 45), ("defUnpBlk", 46), ("authPassSrvUnpBlk", 47), ("authPassAltUnpBlk", 48), ("authFailMacRuleUnpBlk", 49), ("authFailMacRangeRuleUnpBlk", 50), ("authFailIpRuleUnpBlk", 51), ("tagMacRuleUnpBlk", 52), ("tagMacVlanTagRuleUnpBlk", 53), ("tagMacRangeRuleUnpBlk", 54), ("tagMacRangeVlanTagRuleUnpBlk", 55), ("tagIpRuleUnpBlk", 56), ("tagIpVlanTagRuleUnpBlk", 57), ("tagVlanTagRuleUnpBlk", 58), ("authSrvDownUnpTagMismatchBlk", 59), ("noMatchingUnpBlk", 60), ("trustTag", 61), ("authSrvDownUnp", 62), ("defUnp", 63), ("lpsUnpBlk", 64), ("sysDefSpb", 65), ("defSpbProfile", 66), ("noSpbResource", 67), ("tagAuthPassPortMacIpRuleUnp", 68), ("tagAuthPassPortMacRuleUnp", 69), ("tagAuthPassPortIpRuleUnp", 70), ("tagAuthPassGroupMacIpRuleUnp", 71), ("tagAuthPassGroupMacRuleUnp", 72), ("tagAuthPassGroupIpRuleUnp", 73), ("tagAuthPassPortRuleUnp", 74), ("tagAuthPassGroupRuleUnp", 75), ("tagAuthPassMacVlanRuleUnp", 76), ("tagAuthPassMacRuleUnp", 77), ("tagAuthPassMacouiRuleUnp", 78), ("tagAuthPassMacrangeVlanRuleUnp", 79), ("tagAuthPassMacrangeRuleUnp", 80), ("tagAuthPassLldpRuleUnp", 81), ("tagAuthPassL2authRuleUnp", 82), ("tagAuthPassIpVlanRuleUnp", 83), ("tagAuthPassIpRuleUnp", 84), ("tagAuthPassVlanRuleUnp", 85), ("tagAuthPassDmGroupRuleUnp", 86), ("tagAuthFailPortMacIpRuleUnp", 87), ("tagAuthFailPortMacRuleUnp", 88), ("tagAuthFailPortIpRuleUnp", 89), ("tagAuthFailGroupMacIpRuleUnp", 90), ("tagAuthFailGroupMacRuleUnp", 91), ("tagAuthFailGroupIpRuleUnp", 92), ("tagAuthFailPortRuleUnp", 93), ("tagAuthFailGroupRuleUnp", 94), ("tagAuthFailMacouiRuleUnp", 95), ("tagAuthFailLldpRuleUnp", 96), ("tagAuthFailL2authRuleUnp", 97), ("tagAuthFailDmGroupRuleUnp", 98), ("tagPortMacIpRuleUnp", 99), ("tagPortMacRuleUnp", 100), ("tagPortIpRuleUnp", 101), ("tagGroupMacIpRuleUnp", 102), ("tagGroupMacRuleUnp", 103), ("tagGroupIpRuleUnp", 104), ("tagPortRuleUnp", 105), ("tagGroupRuleUnp", 106), ("tagMacouiRuleUnp", 107), ("tagLldpRuleUnp", 108), ("tagL2authRuleUnp", 109), ("tagDmGroupRuleUnp", 110), ("authPassPortMacIpRuleUnp", 111), ("authPassPortMacRuleUnp", 112), ("authPassPortIpRuleUnp", 113), ("authPassGroupMacIpRuleUnp", 114), ("authPassGroupMacRuleUnp", 115), ("authPassGroupIpRuleUnp", 116), ("authPassPortRuleUnp", 117), ("authPassGroupRuleUnp", 118), ("authPassMacRuleUnp", 119), ("authPassMacouiRuleUnp", 120), ("authPassMacrangeRuleUnp", 121), ("authPassLldpRuleUnp", 122), ("authPassL2authRuleUnp", 123), ("authPassIpRuleUnp", 124), ("authPassDmGroupRuleUnp", 125), ("authFailPortMacIpRuleUnp", 126), ("authFailPortMacRuleUnp", 127), ("authFailPortIpRuleUnp", 128), ("authFailGroupMacIpRuleUnp", 129), ("authFailGroupMacRuleUnp", 130), ("authFailGroupIpRuleUnp", 131), ("authFailPortRuleUnp", 132), ("authFailGroupRuleUnp", 133), ("authFailMacouiRuleUnp", 134), ("authFailLldpRuleUnp", 135), ("authFailL2authRuleUnp", 136), ("authFailDmGroupRuleUnp", 137), ("noAuthPortMacIpRuleUnp", 138), ("noAuthPortMacRuleUnp", 139), ("noAuthPortIpRuleUnp", 140), ("noAuthGroupMacIpRuleUnp", 141), ("noAuthGroupMacRuleUnp", 142), ("noAuthGroupIpRuleUnp", 143), ("noAuthPortRuleUnp", 144), ("noAuthGroupRuleUnp", 145), ("noAuthMacouiRuleUnp", 146), ("noAuthLldpRuleUnp", 147), ("noAuthL2authRuleUnp", 148), ("noAuthDmGroupRuleUnp", 149), ("authPassPortMacIpRuleUnpTagMismatchBlk", 150), ("authPassPortMacRuleUnpTagMismatchBlk", 151), ("authPassPortIpRuleUnpTagMismatchBlk", 152), ("authPassGroupMacIpRuleUnpTagMismatchBlk", 153), ("authPassGroupMacRuleUnpTagMismatchBlk", 154), ("authPassGroupIpRuleUnpTagMismatchBlk", 155), ("authPassPortRuleUnpTagMismatchBlk", 156), ("authPassGroupRuleUnpTagMismatchBlk", 157), ("authPassMacVlanRuleUnpTagMismatchBlk", 158), ("authPassMacRuleUnpTagMismatchBlk", 159), ("authPassMacouiRuleUnpTagMismatchBlk", 160), ("authPassMacrangeVlanRuleUnpTagMismatchBlk", 161), ("authPassMacrangeRuleUnpTagMismatchBlk", 162), ("authPassLldpRuleUnpTagMismatchBlk", 163), ("authPassL2authRuleUnpTagMismatchBlk", 164), ("authPassIpVlanRuleUnpTagMismatchBlk", 165), ("authPassIpRuleUnpTagMismatchBlk", 166), ("authPassVlanRuleUnpTagMismatchBlk", 167), ("authPassDmGroupRuleUnpTagMismatchBlk", 168), ("authFailPortMacIpRuleUnpTagMismatchBlk", 169), ("authFailPortMacRuleUnpTagMismatchBlk", 170), ("authFailPortIpRuleUnpTagMismatchBlk", 171), ("authFailGroupMacIpRuleUnpTagMismatchBlk", 172), ("authFailGroupMacRuleUnpTagMismatchBlk", 173), ("authFailGroupIpRuleUnpTagMismatchBlk", 174), ("authFailPortRuleUnpTagMismatchBlk", 175), ("authFailGroupRuleUnpTagMismatchBlk", 176), ("authFailMacouiRuleUnpTagMismatchBlk", 177), ("authFailLldpRuleUnpTagMismatchBlk", 178), ("authFailL2authRuleUnpTagMismatchBlk", 179), ("authFailDmGroupRuleUnpTagMismatchBlk", 180), ("portMacIpRuleUnpTagMismatchBlk", 181), ("portMacRuleUnpTagMismatchBlk", 182), ("portIpRuleUnpTagMismatchBlk", 183), ("groupMacIpRuleUnpTagMismatchBlk", 184), ("groupMacRuleUnpTagMismatchBlk", 185), ("groupIpRuleUnpTagMismatchBlk", 186), ("portRuleUnpTagMismatchBlk", 187), ("groupRuleUnpTagMismatchBlk", 188), ("macouiRuleUnpTagMismatchBlk", 189), ("lldpRuleUnpTagMismatchBlk", 190), ("l2authRuleUnpTagMismatchBlk", 191), ("dmGroupRuleUnpTagMismatchBlk", 192), ("tagAuthPassExtendedRuleUnp", 193), ("tagAuthFailExtendedRuleUnp", 194), ("tagExtendedRuleUnp", 195), ("authPassExtendedRuleUnp", 196), ("authFailExtendedRuleUnp", 197), ("noAuthExtendedRuleUnp", 198), ("authPassExtendedRuleUnpTagMismatchBlk", 199), ("authFailExtendedRuleUnpTagMismatchBlk", 200), ("extendedRuleUnpTagMismatchBlk", 201), ("lpsStatic", 202), ("lpsPseudoStatic", 203), ("lpsDupStatic", 204), ("authSrvDownEdgeProfileUnp", 205), ("byodPauseTimerFilter", 206), ("byodServerUnp", 207), ("noVxlanResource", 208), ("noVxlanResourceAuthSrvDownUnp", 209), ("defVxlanProfile", 210), ("sysDefVxlan", 211), ("cportalEdgeProfilePolicy", 212), ("tagAuthPassPortMacIpVlanRuleUnp", 213), ("tagAuthPassPortMacVlanRuleUnp", 214), ("tagAuthPassPortIpVlanRuleUnp", 215), ("tagAuthPassGroupMacIpVlanRuleUnp", 216), ("tagAuthPassGroupMacVlanRuleUnp", 217), ("tagAuthPassGroupIpVlanRuleUnp", 218), ("tagAuthPassPortVlanRuleUnp", 219), ("tagAuthPassGroupVlanRuleUnp", 220), ("tagAuthPassMacouiVlanRuleUnp", 221), ("tagAuthPassL2authVlanRuleUnp", 222), ("tagAuthPassDmGroupVlanRuleUnp", 223), ("tagAuthFailPortMacIpVlanRuleUnp", 224), ("tagAuthFailPortMacVlanRuleUnp", 225), ("tagAuthFailPortIpVlanRuleUnp", 226), ("tagAuthFailGroupMacIpVlanRuleUnp", 227), ("tagAuthFailGroupMacVlanRuleUnp", 228), ("tagAuthFailGroupIpVlanRuleUnp", 229), ("tagAuthFailPortVlanRuleUnp", 230), ("tagAuthFailGroupVlanRuleUnp", 231), ("tagAuthFailMacouiVlanRuleUnp", 232), ("tagAuthFailL2authVlanRuleUnp", 233), ("tagAuthFailDmGroupVlanRuleUnp", 234), ("tagPortMacIpVlanRuleUnp", 235), ("tagPortMacVlanRuleUnp", 236), ("tagPortIpVlanRuleUnp", 237), ("tagGroupMacIpVlanRuleUnp", 238), ("tagGroupMacVlanRuleUnp", 239), ("tagGroupIpVlanRuleUnp", 240), ("tagPortVlanRuleUnp", 241), ("tagGroupVlanRuleUnp", 242), ("tagMacouiVlanRuleUnp", 243), ("tagL2authVlanRuleUnp", 244), ("tagDmGroupVlanRuleUnp", 245), ("authPassPortMacIpVlanRuleUnp", 246), ("authPassPortMacVlanRuleUnp", 247), ("authPassPortIpVlanRuleUnp", 248), ("authPassGroupMacIpVlanRuleUnp", 249), ("authPassGroupMacVlanRuleUnp", 250), ("authPassGroupIpVlanRuleUnp", 251), ("authPassPortVlanRuleUnp", 252), ("authPassGroupVlanRuleUnp", 253), ("authPassMacouiVlanRuleUnp", 254), ("authPassL2authVlanRuleUnp", 255)) + NamedValues(("authPassDmGroupVlanRuleUnp", 256), ("authFailPortMacIpVlanRuleUnp", 257), ("authFailPortMacVlanRuleUnp", 258), ("authFailPortIpVlanRuleUnp", 259), ("authFailGroupMacIpVlanRuleUnp", 260), ("authFailGroupMacVlanRuleUnp", 261), ("authFailGroupIpVlanRuleUnp", 262), ("authFailPortVlanRuleUnp", 263), ("authFailGroupVlanRuleUnp", 264), ("authFailMacouiVlanRuleUnp", 265), ("authFailL2authVlanRuleUnp", 266), ("authFailDmGroupVlanRuleUnp", 267), ("noAuthPortMacIpVlanRuleUnp", 268), ("noAuthPortMacVlanRuleUnp", 269), ("noAuthPortIpVlanRuleUnp", 270), ("noAuthGroupMacIpVlanRuleUnp", 271), ("noAuthGroupMacVlanRuleUnp", 272), ("noAuthGroupIpVlanRuleUnp", 273), ("noAuthPortVlanRuleUnp", 274), ("noAuthGroupVlanRuleUnp", 275), ("noAuthMacouiVlanRuleUnp", 276), ("noAuthL2authVlanRuleUnp", 277), ("noAuthDmGroupVlanRuleUnp", 278), ("authPassPortMacIpVlanRuleUnpTagMismatchBlk", 279), ("authPassPortMacVlanRuleUnpTagMismatchBlk", 280), ("authPassPortIpVlanRuleUnpTagMismatchBlk", 281), ("authPassGroupMacIpVlanRuleUnpTagMismatchBlk", 282), ("authPassGroupMacVlanRuleUnpTagMismatchBlk", 283), ("authPassGroupIpVlanRuleUnpTagMismatchBlk", 284), ("authPassPortVlanRuleUnpTagMismatchBlk", 285), ("authPassGroupVlanRuleUnpTagMismatchBlk", 286), ("authPassMacouiVlanRuleUnpTagMismatchBlk", 287), ("authPassL2authVlanRuleUnpTagMismatchBlk", 288), ("authPassDmGroupVlanRuleUnpTagMismatchBlk", 289), ("authFailPortMacIpVlanRuleUnpTagMismatchBlk", 290), ("authFailPortMacVlanRuleUnpTagMismatchBlk", 291), ("authFailPortIpVlanRuleUnpTagMismatchBlk", 292), ("authFailGroupMacIpVlanRuleUnpTagMismatchBlk", 293), ("authFailGroupMacVlanRuleUnpTagMismatchBlk", 294), ("authFailGroupIpVlanRuleUnpTagMismatchBlk", 295), ("authFailPortVlanRuleUnpTagMismatchBlk", 296), ("authFailGroupVlanRuleUnpTagMismatchBlk", 297), ("authFailMacouiVlanRuleUnpTagMismatchBlk", 298), ("authFailL2authVlanRuleUnpTagMismatchBlk", 299), ("authFailDmGroupVlanRuleUnpTagMismatchBlk", 300), ("portMacIpVlanRuleUnpTagMismatchBlk", 301), ("portMacVlanRuleUnpTagMismatchBlk", 302), ("portIpVlanRuleUnpTagMismatchBlk", 303), ("groupMacIpVlanRuleUnpTagMismatchBlk", 304), ("groupMacVlanRuleUnpTagMismatchBlk", 305), ("groupIpVlanRuleUnpTagMismatchBlk", 306), ("portVlanRuleUnpTagMismatchBlk", 307), ("groupVlanRuleUnpTagMismatchBlk", 308), ("macouiVlanRuleUnpTagMismatchBlk", 309), ("l2authVlanRuleUnpTagMismatchBlk", 310), ("dmGroupVlanRuleUnpTagMismatchBlk", 311), ("cportalPauseTimerFilter", 312))

class AlaDaAuthenticationType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("noAuthentication", 1), ("dot1XAuthentication", 2), ("macAuthentication", 3), ("captivePortal", 4))

class AlaDaAuthenticationResult(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("notApplicable", 0), ("inProgress", 1), ("success", 2), ("fail", 3))

class AlaDaMacLearntState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("bridging", 0), ("filtering", 1))

class AlaMultiChassisConfigStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("local", 1), ("sync", 2), ("outOfSync", 3))

class MacOui(TextualConvention, OctetString):
    status = 'current'
    displayHint = '1x:'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(3, 3)
    fixedLength = 3

alaDaUserNetProfileTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1), )
if mibBuilder.loadTexts: alaDaUserNetProfileTable.setStatus('deprecated')
alaDaUserNetProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUserNetProfileName"))
if mibBuilder.loadTexts: alaDaUserNetProfileEntry.setStatus('deprecated')
alaDaUserNetProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaUserNetProfileName.setStatus('deprecated')
alaDaUserNetProfileVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUserNetProfileVlanID.setStatus('deprecated')
alaDaUserNetProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUserNetProfileRowStatus.setStatus('deprecated')
alaDaUserNetProfileQosPolicyListName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUserNetProfileQosPolicyListName.setStatus('deprecated')
alaDaUserNetProfileMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1, 1, 5), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUserNetProfileMCLagConfigStatus.setStatus('deprecated')
alaDaUserNetProfileSaaProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUserNetProfileSaaProfileName.setStatus('deprecated')
alaDaUserNetProfileMobileTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUserNetProfileMobileTag.setStatus('deprecated')
alaDaUserNetProfileMaxIngressBw = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUserNetProfileMaxIngressBw.setStatus('deprecated')
alaDaUserNetProfileMaxEgressBw = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUserNetProfileMaxEgressBw.setStatus('deprecated')
alaDaUserNetProfileMaxIngressDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 16384), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUserNetProfileMaxIngressDepth.setStatus('deprecated')
alaDaUserNetProfileMaxEgressDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 16384), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUserNetProfileMaxEgressDepth.setStatus('deprecated')
alaDaUNPIpNetRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 2), )
if mibBuilder.loadTexts: alaDaUNPIpNetRuleTable.setStatus('deprecated')
alaDaUNPIpNetRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPIpNetRuleAddrType"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPIpNetRuleAddr"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPIpNetRuleMask"))
if mibBuilder.loadTexts: alaDaUNPIpNetRuleEntry.setStatus('deprecated')
alaDaUNPIpNetRuleAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 2, 1, 1), InetAddressType())
if mibBuilder.loadTexts: alaDaUNPIpNetRuleAddrType.setStatus('deprecated')
alaDaUNPIpNetRuleAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 2, 1, 2), InetAddress())
if mibBuilder.loadTexts: alaDaUNPIpNetRuleAddr.setStatus('deprecated')
alaDaUNPIpNetRuleMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 2, 1, 3), InetAddress())
if mibBuilder.loadTexts: alaDaUNPIpNetRuleMask.setStatus('deprecated')
alaDaUNPIpNetRuleProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 2, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpNetRuleProfileName.setStatus('deprecated')
alaDaUNPIpNetRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpNetRuleVlanTag.setStatus('deprecated')
alaDaUNPIpNetRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpNetRuleRowStatus.setStatus('deprecated')
alaDaUNPIpNetRuleMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 2, 1, 7), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPIpNetRuleMCLagConfigStatus.setStatus('deprecated')
alaDaUNPMacRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 3), )
if mibBuilder.loadTexts: alaDaUNPMacRuleTable.setStatus('deprecated')
alaDaUNPMacRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPMacRuleAddr"))
if mibBuilder.loadTexts: alaDaUNPMacRuleEntry.setStatus('deprecated')
alaDaUNPMacRuleAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: alaDaUNPMacRuleAddr.setStatus('deprecated')
alaDaUNPMacRuleProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 3, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRuleProfileName.setStatus('deprecated')
alaDaUNPMacRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRuleVlanTag.setStatus('deprecated')
alaDaUNPMacRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRuleRowStatus.setStatus('deprecated')
alaDaUNPMacRuleMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 3, 1, 5), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPMacRuleMCLagConfigStatus.setStatus('deprecated')
alaDaUNPMacRangeRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 4), )
if mibBuilder.loadTexts: alaDaUNPMacRangeRuleTable.setStatus('deprecated')
alaDaUNPMacRangeRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangeRuleLoAddr"))
if mibBuilder.loadTexts: alaDaUNPMacRangeRuleEntry.setStatus('deprecated')
alaDaUNPMacRangeRuleLoAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 4, 1, 1), MacAddress())
if mibBuilder.loadTexts: alaDaUNPMacRangeRuleLoAddr.setStatus('deprecated')
alaDaUNPMacRangeRuleHiAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 4, 1, 2), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRangeRuleHiAddr.setStatus('deprecated')
alaDaUNPMacRangeRuleProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 4, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRangeRuleProfileName.setStatus('deprecated')
alaDaUNPMacRangeRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRangeRuleVlanTag.setStatus('deprecated')
alaDaUNPMacRangeRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRangeRuleRowStatus.setStatus('deprecated')
alaDaUNPMacRangeRuleMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 4, 1, 6), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPMacRangeRuleMCLagConfigStatus.setStatus('deprecated')
alaDaUNPVlanTagRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 5), )
if mibBuilder.loadTexts: alaDaUNPVlanTagRuleTable.setStatus('deprecated')
alaDaUNPVlanTagRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 5, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPVlanTagRuleVlan"))
if mibBuilder.loadTexts: alaDaUNPVlanTagRuleEntry.setStatus('deprecated')
alaDaUNPVlanTagRuleVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaDaUNPVlanTagRuleVlan.setStatus('deprecated')
alaDaUNPVlanTagRuleProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 5, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVlanTagRuleProfileName.setStatus('deprecated')
alaDaUNPVlanTagRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVlanTagRuleRowStatus.setStatus('deprecated')
alaDaUNPVlanTagRuleMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 5, 1, 4), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPVlanTagRuleMCLagConfigStatus.setStatus('deprecated')
alaDaMacUserTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6), )
if mibBuilder.loadTexts: alaDaMacUserTable.setStatus('current')
alaDaMacUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaMacUserIntfNum"), (0, "ALCATEL-IND1-DA-MIB", "alaDaMacUserMACAddress"))
if mibBuilder.loadTexts: alaDaMacUserEntry.setStatus('current')
alaDaMacUserIntfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaDaMacUserIntfNum.setStatus('current')
alaDaMacUserMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1, 2), MacAddress())
if mibBuilder.loadTexts: alaDaMacUserMACAddress.setStatus('current')
alaDaMacUserVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacUserVlanID.setStatus('current')
alaDaAuthenticationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("idle", 1), ("inProgress", 2), ("authenticated", 3), ("failed", 4), ("failedTimeout", 5), ("failedNoServer", 6), ("failedNoResources", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaAuthenticationStatus.setStatus('current')
alaDaMacUserIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacUserIpAddress.setStatus('current')
alaDaMacUserUnpUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1, 6), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacUserUnpUsed.setStatus('current')
alaDaMacUserLoginTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacUserLoginTimeStamp.setStatus('current')
alaDaMacUserAuthtype = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("macAuthentication", 0), ("others", 1), ("onexAuthentication", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacUserAuthtype.setStatus('current')
alaDaMacUserClassificationSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1, 9), AlaDaClassificationPolicyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacUserClassificationSource.setStatus('current')
alaDaMacUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 6, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacUserName.setStatus('current')
alaDaUNPPortTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7), )
if mibBuilder.loadTexts: alaDaUNPPortTable.setStatus('current')
alaDaUNPPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPPortIfIndex"))
if mibBuilder.loadTexts: alaDaUNPPortEntry.setStatus('current')
alaDaUNPPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 1), InterfaceIndexOrZero())
if mibBuilder.loadTexts: alaDaUNPPortIfIndex.setStatus('current')
alaDaUNPPortDefaultProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortDefaultProfileName.setStatus('current')
alaDaUNPPortPassAltProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortPassAltProfileName.setStatus('current')
alaDaUNPPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortRowStatus.setStatus('current')
alaDaUNPPortMacAuthFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortMacAuthFlag.setStatus('current')
alaDaUNPPortClassificationFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortClassificationFlag.setStatus('current')
alaDaUNPPortTrustTagStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTrustTagStatus.setStatus('current')
alaDaUNPPortMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 8), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPPortMCLagConfigStatus.setStatus('current')
alaDaUNPPortCustomerDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortCustomerDomainId.setStatus('deprecated')
alaDaUNPPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("bridgePort", 1), ("spbAccessPort", 2), ("edge", 3), ("vxlanAccessPort", 4), ("accessPort", 5))).clone('bridgePort')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortType.setStatus('current')
alaDaUNPPortPassAltSpbProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortPassAltSpbProfileName.setStatus('deprecated')
alaDaUNPPortDefaultSpbProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortDefaultSpbProfileName.setStatus('deprecated')
alaDaUNPPortDefaultEdgeProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortDefaultEdgeProfName.setStatus('deprecated')
alaDaUNPPortMacPassEdgeProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortMacPassEdgeProfName.setStatus('deprecated')
alaDaUNPPort8021XEdgeProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPort8021XEdgeProfName.setStatus('deprecated')
alaDaUNPPort8021XAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPort8021XAuthStatus.setStatus('current')
alaDaUNPPort8021XTxPeriodStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPort8021XTxPeriodStatus.setStatus('deprecated')
alaDaUNPPort8021XTxPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPort8021XTxPeriod.setStatus('current')
alaDaUNPPort8021XSuppTimeoutStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPort8021XSuppTimeoutStatus.setStatus('deprecated')
alaDaUNPPort8021XSuppTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPort8021XSuppTimeOut.setStatus('current')
alaDaUNPPort8021XMaxReqStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPort8021XMaxReqStatus.setStatus('deprecated')
alaDaUNPPort8021XMaxReq = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPort8021XMaxReq.setStatus('current')
alaDaUNPPortGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortGroupId.setStatus('deprecated')
alaDaUNPPortAaaProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 24), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortAaaProfile.setStatus('current')
alaDaUNPPortEdgeTemplate = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 25), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortEdgeTemplate.setStatus('deprecated')
alaDaUNPPortRedirectPortBounce = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortRedirectPortBounce.setStatus('current')
alaDaUNPPort8021XFailurePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("macAuth", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPort8021XFailurePolicy.setStatus('current')
alaDaUNPPort8021XBypassStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPort8021XBypassStatus.setStatus('current')
alaDaUNPPortMacAllowEap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("pass", 1), ("fail", 2), ("noauth", 3), ("none", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortMacAllowEap.setStatus('current')
alaDaUNPPortAdminControlledDirections = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("both", 1), ("in", 2), ("noVal", 3))).clone('both')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortAdminControlledDirections.setStatus('current')
alaDaUNPPortAdminControlledOperDirections = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("both", 1), ("in", 2), ("noVal", 3))).clone('both')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPPortAdminControlledOperDirections.setStatus('current')
alaDaUNPPort8021XPassAltUserNetProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 32), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPort8021XPassAltUserNetProfName.setStatus('deprecated')
alaDaUNPPort8021XPassAltSpbProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 33), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPort8021XPassAltSpbProfName.setStatus('deprecated')
alaDaUNPPort8021XPassAltVxlanProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 34), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPort8021XPassAltVxlanProfName.setStatus('deprecated')
alaDaUNPPortPassAltVxlanProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 35), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortPassAltVxlanProfileName.setStatus('deprecated')
alaDaUNPPortDefaultVxlanProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 36), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortDefaultVxlanProfileName.setStatus('deprecated')
alaDaUNPPortAFDConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("admin", 1), ("autoFabric", 2))).clone('admin')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPPortAFDConfig.setStatus('current')
alaDaUNPPortMaxIngressBw = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 10485760), ))).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPPortMaxIngressBw.setStatus('current')
alaDaUNPPortMaxIngressBwSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("unp", 2), ("qos", 3))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPPortMaxIngressBwSource.setStatus('current')
alaDaUNPPortMaxEgressBw = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 10485760), ))).setUnits('kilobits per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPPortMaxEgressBw.setStatus('current')
alaDaUNPPortMaxEgressBwSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("unp", 2), ("qos", 3))).clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPPortMaxEgressBwSource.setStatus('current')
alaDaUNPPortMaxIngressDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 16384), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPPortMaxIngressDepth.setStatus('current')
alaDaUNPPortMaxEgressDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 16384), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPPortMaxEgressDepth.setStatus('current')
alaDaUNPPortIngressSourceProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 44), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPPortIngressSourceProfile.setStatus('current')
alaDaUNPPortEgressSourceProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 45), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPPortEgressSourceProfile.setStatus('current')
alaDaUNPPortForceL3Learning = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortForceL3Learning.setStatus('current')
alaDaUNPPortForceL3LearningPortBounce = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortForceL3LearningPortBounce.setStatus('current')
alaDaUNPPort8021XPassAltProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 48), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPort8021XPassAltProfileName.setStatus('current')
alaDaUNPPortPortTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 49), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortPortTemplateName.setStatus('current')
alaDaUNPPortDomainID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 50), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortDomainID.setStatus('current')
alaDaUNPPortAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortAdminState.setStatus('current')
alaDaUNPPortDynamicService = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("spb", 2), ("vxlan", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortDynamicService.setStatus('current')
alaDaUNPPortPVlanPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 7, 1, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("community", 2), ("isolated", 3))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPPortPVlanPortType.setStatus('current')
alaDaUNPGlobalConfiguration = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8))
alaDaUNPDynamicVlanConfigFlag = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPDynamicVlanConfigFlag.setStatus('current')
alaDaUNPAuthServerDownUnp = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPAuthServerDownUnp.setStatus('deprecated')
alaDaUNPAuthServerDownTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000)).clone(60)).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPAuthServerDownTimeout.setStatus('current')
alaDaUNPDynamicVlanMCLagConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 4), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPDynamicVlanMCLagConfigStatus.setStatus('current')
alaDaUNPAuthServerDownUNPMCLagConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 5), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPAuthServerDownUNPMCLagConfigStatus.setStatus('current')
alaDaUNPAuthServerDownTimeoutMCLagConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 6), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPAuthServerDownTimeoutMCLagConfigStatus.setStatus('current')
alaDaUNPDynamicProfileConfigFlag = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPDynamicProfileConfigFlag.setStatus('current')
alaDaUNPDynamicProfileConfigMCLagConfigStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 8), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPDynamicProfileConfigMCLagConfigStatus.setStatus('current')
alaDaUNPReloadVsiTypeDB = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("default", 0), ("true", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPReloadVsiTypeDB.setStatus('current')
alaDaUNPAuthSrvDownEdgeProfName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPAuthSrvDownEdgeProfName.setStatus('deprecated')
alaDaUNPAuthServerDowneEdgeProfTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000)).clone(60)).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPAuthServerDowneEdgeProfTimeout.setStatus('deprecated')
alaDaUNPEdgeUserFlush = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 12), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPEdgeUserFlush.setStatus('deprecated')
alaDaUNP8021XEdgeUserFlush = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 13), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNP8021XEdgeUserFlush.setStatus('current')
alaDaUNPMacEdgeUserFlush = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 14), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPMacEdgeUserFlush.setStatus('current')
alaDaUNPNoAuthEdgeUserFlush = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 15), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPNoAuthEdgeUserFlush.setStatus('current')
alaDaUNPRedirectPortBounce = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPRedirectPortBounce.setStatus('current')
alaDaUNPRedirectPauseTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(60, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPRedirectPauseTimer.setStatus('current')
alaDaUNPRedirectProxyServerPort = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1024, 49151), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPRedirectProxyServerPort.setStatus('current')
alaDaUNPRedirectServerIPType = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 19), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2))).clone('ipv4')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPRedirectServerIPType.setStatus('current')
alaDaUNPRedirectServerIP = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 20), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPRedirectServerIP.setStatus('current')
alaDaUNPAuthSrvDownVxlanProfileName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 21), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPAuthSrvDownVxlanProfileName.setStatus('deprecated')
alaDaUNPAuthSrvDownVxlanProfileTimeout = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 1000)).clone(60)).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPAuthSrvDownVxlanProfileTimeout.setStatus('deprecated')
alaDaUNPForceL3Learning = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPForceL3Learning.setStatus('current')
alaDaUNPForceL3LearningPortBounce = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPForceL3LearningPortBounce.setStatus('current')
alaDaUNPAuthServerDownProfile1 = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 25), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPAuthServerDownProfile1.setStatus('current')
alaDaUNPAuthServerDownProfile2 = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 26), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPAuthServerDownProfile2.setStatus('current')
alaDaUNPAuthServerDownProfile3 = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 27), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPAuthServerDownProfile3.setStatus('current')
alaDaUNPVlanUserFlush = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 8, 28), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPVlanUserFlush.setStatus('current')
alaDaMacVlanUserTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9), )
if mibBuilder.loadTexts: alaDaMacVlanUserTable.setStatus('current')
alaDaMacVlanUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserIntfNum"), (0, "ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserMACAddress"), (0, "ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserVlanID"))
if mibBuilder.loadTexts: alaDaMacVlanUserEntry.setStatus('current')
alaDaMacVlanUserIntfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaDaMacVlanUserIntfNum.setStatus('current')
alaDaMacVlanUserMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 2), MacAddress())
if mibBuilder.loadTexts: alaDaMacVlanUserMACAddress.setStatus('current')
alaDaMacVlanUserVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: alaDaMacVlanUserVlanID.setStatus('current')
alaDaMacVlanUserAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("idle", 1), ("inProgress", 2), ("authenticated", 3), ("failed", 4), ("failedTimeout", 5), ("failedNoServer", 6), ("failedNoResources", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserAuthStatus.setStatus('current')
alaDaMacVlanUserIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserIpAddressType.setStatus('current')
alaDaMacVlanUserIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserIpAddress.setStatus('current')
alaDaMacVlanUserUnpUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 7), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserUnpUsed.setStatus('current')
alaDaMacVlanUserLoginTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserLoginTimeStamp.setStatus('current')
alaDaMacVlanUserAuthtype = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("macAuthentication", 0), ("others", 1), ("onexAuthentication", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserAuthtype.setStatus('current')
alaDaMacVlanUserClassificationSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 10), AlaDaClassificationPolicyType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserClassificationSource.setStatus('current')
alaDaMacVlanUserMCLagLearningLoc = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserMCLagLearningLoc.setStatus('current')
alaDaMacVlanUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 12), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserName.setStatus('current')
alaDaMacVlanUserRole = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserRole.setStatus('current')
alaDaMacVlanUserRoleSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserRoleSource.setStatus('current')
alaDaMacVlanUserAuthFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserAuthFailReason.setStatus('current')
alaDaMacVlanUserAuthRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserAuthRetryCount.setStatus('current')
alaDaMacVlanUserClassifProfRule = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 17), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserClassifProfRule.setStatus('current')
alaDaMacVlanUserRoleRule = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 18), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserRoleRule.setStatus('current')
alaDaMacVlanUserRestAccessStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserRestAccessStatus.setStatus('current')
alaDaMacVlanUserLocPolicyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("pass", 2), ("fail", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserLocPolicyStatus.setStatus('current')
alaDaMacVlanUserTimePolicyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("pass", 2), ("fail", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserTimePolicyStatus.setStatus('current')
alaDaMacVlanUserCapPortalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("pass", 2), ("fail", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserCapPortalStatus.setStatus('current')
alaDaMacVlanUserQMRStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("pass", 2), ("fail", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserQMRStatus.setStatus('current')
alaDaMacVlanUserAuthServerIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 24), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserAuthServerIpType.setStatus('current')
alaDaMacVlanUserAuthServerIpUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 25), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserAuthServerIpUsed.setStatus('current')
alaDaMacVlanUserAuthServerUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 26), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserAuthServerUsed.setStatus('current')
alaDaMacVlanUserServerMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 27), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserServerMessage.setStatus('current')
alaDaMacVlanUserRedirectionUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 28), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserRedirectionUrl.setStatus('current')
alaDaMacVlanUserSIPCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normalCall", 1), ("emergencyCall", 2), ("notInCall", 3))).clone('notInCall')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserSIPCallType.setStatus('current')
alaDaMacVlanUserSIPMediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("audio", 2), ("video", 3), ("none", 4))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserSIPMediaType.setStatus('current')
alaDaMacVlanUserUnpFromAuthServer = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 31), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserUnpFromAuthServer.setStatus('current')
alaDaMacVlanUserType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bridge", 1), ("spbAccess", 2), ("edge", 3), ("vxlanAccess", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserType.setStatus('current')
alaDaMacVlanUserServiceID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 33), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserServiceID.setStatus('current')
alaDaMacVlanUserServiceSapIDIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 34), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserServiceSapIDIfIndex.setStatus('current')
alaDaMacVlanUserServiceSapIDEncapVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 35), TmnxEncapVal()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserServiceSapIDEncapVal.setStatus('current')
alaDaMacVlanUserVxlanVnid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 36), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserVxlanVnid.setStatus('current')
alaDaMacVlanUserSpbIsid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 37), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserSpbIsid.setStatus('current')
alaDaMacVlanUserSpbBVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 38), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserSpbBVlan.setStatus('current')
alaDaMacVlanUserKerberosStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 9, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("pass", 2), ("fail", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserKerberosStatus.setStatus('current')
alaDaUNPNotificationObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10))
unpMcLagMacIgnored = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 0, 1)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUnpMacAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpSourceIpAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpNativeVlan"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpVlan"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpMCLAGId"))
if mibBuilder.loadTexts: unpMcLagMacIgnored.setStatus('current')
unpMcLagConfigInconsistency = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 0, 2)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUnpCommandType"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpName"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpMacAddr1"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpMacAddr2"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpIpAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpIpMask"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpMCLAGId"))
if mibBuilder.loadTexts: unpMcLagConfigInconsistency.setStatus('current')
alaDaKerberosReqTimeoutTrap = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 0, 3)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaKerberosIpAddress"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosUserMac"))
if mibBuilder.loadTexts: alaDaKerberosReqTimeoutTrap.setStatus('current')
alaDaKerberosInactivityTimerExpiryTrap = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 0, 4)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaKerberosUserName"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosUserMac"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosUserDomain"))
if mibBuilder.loadTexts: alaDaKerberosInactivityTimerExpiryTrap.setStatus('current')
alaDaKerberosRateLimitExceed = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 0, 5)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaKerberosRateLimitString"))
if mibBuilder.loadTexts: alaDaKerberosRateLimitExceed.setStatus('current')
alaDaUnpMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 1), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpMacAddr.setStatus('current')
alaDaUnpSourceIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 2), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpSourceIpAddr.setStatus('current')
alaDaUnpNativeVlan = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 3), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpNativeVlan.setStatus('current')
alaDaUnpVlan = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpVlan.setStatus('current')
alaDaUnpMCLAGId = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 5), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpMCLAGId.setStatus('current')
alaDaUnpCommandType = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("unpConfigCmd", 1), ("macRuleConfigCmd", 2), ("macRangeRuleConfigCmd", 3), ("ipRuleConfigCmd", 4), ("vlanTagRuleConfigCmd", 5), ("authServerUnpConfigCmd", 6), ("authServerTimerConfigCmd", 7), ("dynamicVlanConfigCmd", 8), ("lagConfigCmd", 9), ("dynamicProfileConfigCmd", 10)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpCommandType.setStatus('current')
alaDaUnpName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpName.setStatus('current')
alaDaUnpMacAddr1 = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 8), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpMacAddr1.setStatus('current')
alaDaUnpMacAddr2 = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 9), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpMacAddr2.setStatus('current')
alaDaUnpIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 10), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpIpAddr.setStatus('current')
alaDaUnpIpMask = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 11), InetAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpIpMask.setStatus('current')
alaDaUnpVlanTag = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaUnpVlanTag.setStatus('current')
alaDaKerberosRateLimitString = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 10, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaDaKerberosRateLimitString.setStatus('current')
alaDaUnpCustomerDomainTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 11), )
if mibBuilder.loadTexts: alaDaUnpCustomerDomainTable.setStatus('current')
alaDaUnpCustomerDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 11, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUnpCustomerDomainId"))
if mibBuilder.loadTexts: alaDaUnpCustomerDomainEntry.setStatus('current')
alaDaUnpCustomerDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: alaDaUnpCustomerDomainId.setStatus('current')
alaDaUnpCustomerDomainDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 11, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUnpCustomerDomainDesc.setStatus('current')
alaDaUnpCustomerDomainRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 11, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUnpCustomerDomainRowStatus.setStatus('current')
alaDaSpbProfileTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12), )
if mibBuilder.loadTexts: alaDaSpbProfileTable.setStatus('deprecated')
alaDaSpbProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaSpbProfileName"))
if mibBuilder.loadTexts: alaDaSpbProfileEntry.setStatus('deprecated')
alaDaSpbProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaSpbProfileName.setStatus('deprecated')
alaDaSpbProfileEncapVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1, 2), TmnxEncapVal()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSpbProfileEncapVal.setStatus('deprecated')
alaDaSpbProfileQosPolicyListName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSpbProfileQosPolicyListName.setStatus('deprecated')
alaDaSpbProfileIsid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(256, 16777214))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSpbProfileIsid.setStatus('deprecated')
alaDaSpbProfileBVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSpbProfileBVlan.setStatus('deprecated')
alaDaSpbProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSpbProfileRowStatus.setStatus('deprecated')
alaDaSpbProfileMulticastMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("headend", 1), ("tandem", 2))).clone('headend')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSpbProfileMulticastMode.setStatus('deprecated')
alaDaSpbProfileSapVlanXlation = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSpbProfileSapVlanXlation.setStatus('deprecated')
alaDaSpbProfileMobileTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSpbProfileMobileTag.setStatus('deprecated')
alaDaSpbProfileAFDConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 12, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("admin", 1), ("autoFabric", 2))).clone('admin')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaSpbProfileAFDConfig.setStatus('deprecated')
alaDaUNPCustDomainEvbGpIdRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 13), )
if mibBuilder.loadTexts: alaDaUNPCustDomainEvbGpIdRuleTable.setStatus('current')
alaDaUNPCustDomainEvbGpIdRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 13, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainEvbGpIdRuleCustomerDomainId"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainEvbGpIdRuleGroupId"))
if mibBuilder.loadTexts: alaDaUNPCustDomainEvbGpIdRuleEntry.setStatus('current')
alaDaUNPCustDomainEvbGpIdRuleCustomerDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: alaDaUNPCustDomainEvbGpIdRuleCustomerDomainId.setStatus('current')
alaDaUNPCustDomainEvbGpIdRuleGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 13, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: alaDaUNPCustDomainEvbGpIdRuleGroupId.setStatus('current')
alaDaUNPCustDomainEvbGpIdRuleVlanProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 13, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainEvbGpIdRuleVlanProfileName.setStatus('current')
alaDaUNPCustDomainEvbGpIdRuleSpbProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 13, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainEvbGpIdRuleSpbProfileName.setStatus('current')
alaDaUNPCustDomainEvbGpIdRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 13, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainEvbGpIdRuleRowStatus.setStatus('current')
alaDaUNPCustDomainEvbGpIdRuleVxlanProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 13, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainEvbGpIdRuleVxlanProfileName.setStatus('current')
alaDaUNPCustDomainVlanTagRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14), )
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleTable.setStatus('current')
alaDaUNPCustDomainVlanTagRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleDomainId"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleVlan"))
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleEntry.setStatus('current')
alaDaUNPCustDomainVlanTagRuleDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleDomainId.setStatus('current')
alaDaUNPCustDomainVlanTagRuleVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleVlan.setStatus('current')
alaDaUNPCustDomainVlanTagRuleVlanProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleVlanProfileName.setStatus('deprecated')
alaDaUNPCustDomainVlanTagRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleRowStatus.setStatus('current')
alaDaUNPCustDomainVlanTagRuleMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1, 5), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleMCLagConfigStatus.setStatus('current')
alaDaUNPCustDomainVlanTagRuleSpbProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleSpbProfileName.setStatus('deprecated')
alaDaUNPCustDomainVlanTagRuleTagPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("notApplicable", 0), ("outerTag", 1), ("innerTag", 2))).clone('outerTag')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleTagPosition.setStatus('deprecated')
alaDaUNPCustDomainVlanTagRuleVxlanProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleVxlanProfileName.setStatus('deprecated')
alaDaUNPCustDomainVlanTagRuleProfile1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleProfile1.setStatus('current')
alaDaUNPCustDomainVlanTagRuleProfile2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleProfile2.setStatus('current')
alaDaUNPCustDomainVlanTagRuleProfile3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 14, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainVlanTagRuleProfile3.setStatus('current')
alaDaUNPCustDomainIpNetRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15), )
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleTable.setStatus('current')
alaDaUNPCustDomainIpNetRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleDomainId"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleAddrType"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleAddr"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleMask"))
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleEntry.setStatus('current')
alaDaUNPCustDomainIpNetRuleDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleDomainId.setStatus('current')
alaDaUNPCustDomainIpNetRuleAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 2), InetAddressType())
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleAddrType.setStatus('current')
alaDaUNPCustDomainIpNetRuleAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleAddr.setStatus('current')
alaDaUNPCustDomainIpNetRuleMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleMask.setStatus('current')
alaDaUNPCustDomainIpNetRuleProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleProfileName.setStatus('deprecated')
alaDaUNPCustDomainIpNetRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleVlanTag.setStatus('current')
alaDaUNPCustDomainIpNetRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleRowStatus.setStatus('current')
alaDaUNPCustDomainIpNetRuleMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 8), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleMCLagConfigStatus.setStatus('current')
alaDaUNPCustDomainIpNetRuleSpbProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleSpbProfileName.setStatus('deprecated')
alaDaUNPCustDomainIpNetRuleEdgeProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleEdgeProfile.setStatus('deprecated')
alaDaUNPCustDomainIpNetRuleVxlanProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleVxlanProfileName.setStatus('deprecated')
alaDaUNPCustDomainIpNetRuleProfile1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleProfile1.setStatus('current')
alaDaUNPCustDomainIpNetRuleProfile2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleProfile2.setStatus('current')
alaDaUNPCustDomainIpNetRuleProfile3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 15, 1, 14), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainIpNetRuleProfile3.setStatus('current')
alaDaUNPCustDomainMacRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16), )
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleTable.setStatus('current')
alaDaUNPCustDomainMacRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRuleDomainId"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRuleAddr"))
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleEntry.setStatus('current')
alaDaUNPCustDomainMacRuleDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleDomainId.setStatus('current')
alaDaUNPCustDomainMacRuleAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1, 2), MacAddress())
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleAddr.setStatus('current')
alaDaUNPCustDomainMacRuleProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleProfileName.setStatus('deprecated')
alaDaUNPCustDomainMacRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleVlanTag.setStatus('current')
alaDaUNPCustDomainMacRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleRowStatus.setStatus('current')
alaDaUNPCustDomainMacRuleMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1, 6), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleMCLagConfigStatus.setStatus('current')
alaDaUNPCustDomainMacRuleSpbProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleSpbProfileName.setStatus('deprecated')
alaDaUNPCustDomainMacRuleEdgeProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleEdgeProfileName.setStatus('deprecated')
alaDaUNPCustDomainMacRuleVxlanProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleVxlanProfileName.setStatus('deprecated')
alaDaUNPCustDomainMacRuleProfile1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleProfile1.setStatus('current')
alaDaUNPCustDomainMacRuleProfile2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleProfile2.setStatus('current')
alaDaUNPCustDomainMacRuleProfile3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 16, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRuleProfile3.setStatus('current')
alaDaUNPCustDomainMacRangeRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17), )
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleTable.setStatus('current')
alaDaUNPCustDomainMacRangeRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleDomainId"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleLoAddr"))
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleEntry.setStatus('current')
alaDaUNPCustDomainMacRangeRuleDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleDomainId.setStatus('current')
alaDaUNPCustDomainMacRangeRuleLoAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 2), MacAddress())
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleLoAddr.setStatus('current')
alaDaUNPCustDomainMacRangeRuleHiAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 3), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleHiAddr.setStatus('current')
alaDaUNPCustDomainMacRangeRuleProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleProfileName.setStatus('deprecated')
alaDaUNPCustDomainMacRangeRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleVlanTag.setStatus('current')
alaDaUNPCustDomainMacRangeRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleRowStatus.setStatus('current')
alaDaUNPCustDomainMacRangeRuleMCLagConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 7), AlaMultiChassisConfigStatus().clone('local')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleMCLagConfigStatus.setStatus('current')
alaDaUNPCustDomainMacRangeRuleSpbProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleSpbProfileName.setStatus('deprecated')
alaDaUNPCustDomainMacRangeRuleEdgeProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleEdgeProfileName.setStatus('deprecated')
alaDaUNPCustDomainMacRangeRuleVxlanProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleVxlanProfileName.setStatus('deprecated')
alaDaUNPCustDomainMacRangeRuleProfile1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleProfile1.setStatus('current')
alaDaUNPCustDomainMacRangeRuleProfile2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleProfile2.setStatus('current')
alaDaUNPCustDomainMacRangeRuleProfile3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 17, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacRangeRuleProfile3.setStatus('current')
alaDaSaaProfileTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 18), )
if mibBuilder.loadTexts: alaDaSaaProfileTable.setStatus('current')
alaDaSaaProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 18, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaSaaProfileName"))
if mibBuilder.loadTexts: alaDaSaaProfileEntry.setStatus('current')
alaDaSaaProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 18, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaSaaProfileName.setStatus('current')
alaDaSaaProfileLatencyThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 18, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSaaProfileLatencyThreshold.setStatus('current')
alaDaSaaProfileJitterThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 18, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSaaProfileJitterThreshold.setStatus('current')
alaDaSaaProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 18, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaSaaProfileRowStatus.setStatus('current')
alaDaCPortalMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19))
alaDaCPortalGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 1))
alaDaCPortalRedirectUrlName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('captive-portal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaCPortalRedirectUrlName.setStatus('current')
alaDaCPortalIpAddressType = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 1, 2), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2))).clone('ipv4')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaCPortalIpAddressType.setStatus('current')
alaDaCPortalIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaCPortalIpAddress.setStatus('current')
alaDaCPortalMode = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2))).clone('internal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaCPortalMode.setStatus('current')
alaDaCPortalSuccRedirectUrl = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaCPortalSuccRedirectUrl.setStatus('current')
alaDaCPortalProxyPort = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1024, 49151), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaCPortalProxyPort.setStatus('current')
alaDaCPortalRetryCnt = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaCPortalRetryCnt.setStatus('current')
alaDaCPortalPolicyListName = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaCPortalPolicyListName.setStatus('current')
alaDaCPortalCustomization = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaCPortalCustomization.setStatus('current')
alaDaCPortalUNPProfile = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaCPortalUNPProfile.setStatus('current')
alaDaCPortalUNPProfileChange = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaCPortalUNPProfileChange.setStatus('current')
alaDaCPortalAuthPassTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 2), )
if mibBuilder.loadTexts: alaDaCPortalAuthPassTable.setStatus('current')
alaDaCPortalAuthPassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaCPortalAuthDomainName"))
if mibBuilder.loadTexts: alaDaCPortalAuthPassEntry.setStatus('current')
alaDaCPortalAuthDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaCPortalAuthDomainName.setStatus('current')
alaDaCPortalAuthRealm = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("prefix", 1), ("suffix", 2))).clone('prefix')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaCPortalAuthRealm.setStatus('current')
alaDaCPortalAuthPolicyListName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 2, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaCPortalAuthPolicyListName.setStatus('current')
alaDaCPortalAuthRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaCPortalAuthRowStatus.setStatus('current')
alaDaCPortalAuthUNPProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 2, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaCPortalAuthUNPProfile.setStatus('current')
alaDaCPortalAuthUNPProfileChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaCPortalAuthUNPProfileChange.setStatus('current')
alaDaCPortalProfTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 3), )
if mibBuilder.loadTexts: alaDaCPortalProfTable.setStatus('current')
alaDaCPortalProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaCPortalProfName"))
if mibBuilder.loadTexts: alaDaCPortalProfEntry.setStatus('current')
alaDaCPortalProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 3, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaCPortalProfName.setStatus('current')
alaDaCPortalProfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("external", 2))).clone('internal')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaCPortalProfMode.setStatus('current')
alaDaCPortalProfSuccRedirectUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 3, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaCPortalProfSuccRedirectUrl.setStatus('current')
alaDaCPortalProfRetryCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaCPortalProfRetryCnt.setStatus('current')
alaDaCPortalProfAuthPolicyListName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 3, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaCPortalProfAuthPolicyListName.setStatus('current')
alaDaCPortalProfAaaProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 3, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaCPortalProfAaaProf.setStatus('current')
alaDaCPortalProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 3, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaCPortalProfRowStatus.setStatus('current')
alaDaCPortalProfUNPProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 3, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaCPortalProfUNPProfile.setStatus('current')
alaDaCPortalProfUNPProfileChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaCPortalProfUNPProfileChange.setStatus('current')
alaDaCPortalProfDomainTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 4), )
if mibBuilder.loadTexts: alaDaCPortalProfDomainTable.setStatus('current')
alaDaCPortalProfDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaCPortalProfName"), (0, "ALCATEL-IND1-DA-MIB", "alaDaCPortalProfDomainAuthDomainName"))
if mibBuilder.loadTexts: alaDaCPortalProfDomainEntry.setStatus('current')
alaDaCPortalProfDomainAuthDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 4, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaCPortalProfDomainAuthDomainName.setStatus('current')
alaDaCPortalProfDomainAuthPolicyListName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 4, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaCPortalProfDomainAuthPolicyListName.setStatus('current')
alaDaCPortalProfDomainAuthRealm = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("prefix", 1), ("suffix", 2))).clone('prefix')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaCPortalProfDomainAuthRealm.setStatus('current')
alaDaCPortalProfDomainRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaCPortalProfDomainRowStatus.setStatus('current')
alaDaCPortalProfDomainUNPProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 4, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaCPortalProfDomainUNPProfile.setStatus('current')
alaDaCPortalProfDomainUNPProfileChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 19, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaCPortalProfDomainUNPProfileChange.setStatus('current')
alaDaHICMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20))
alaDaHICGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 1))
alaDaHICStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaHICStatus.setStatus('current')
alaDaHICWebAgentDownloadUrl = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaHICWebAgentDownloadUrl.setStatus('current')
alaDaHICCustomHttpProxyPort = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1025, 65535)).clone(8080)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaHICCustomHttpProxyPort.setStatus('current')
alaDaHICBgPollInterval = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(16, 16), ValueRangeConstraint(32, 32), ValueRangeConstraint(48, 48), ValueRangeConstraint(64, 64), ValueRangeConstraint(80, 80), ValueRangeConstraint(96, 96), ValueRangeConstraint(112, 112), ValueRangeConstraint(128, 128), ValueRangeConstraint(144, 144), ValueRangeConstraint(160, 160), ValueRangeConstraint(176, 176), ValueRangeConstraint(192, 192), ValueRangeConstraint(208, 208), ValueRangeConstraint(224, 224), ValueRangeConstraint(240, 240), ValueRangeConstraint(256, 256), )).clone(16)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaHICBgPollInterval.setStatus('current')
alaDaHICSvrFailMode = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("hold", 1), ("passthrough", 2))).clone('hold')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaHICSvrFailMode.setStatus('current')
alaDaHICSvrTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 2), )
if mibBuilder.loadTexts: alaDaHICSvrTable.setStatus('current')
alaDaHICSvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaHICSvrName"))
if mibBuilder.loadTexts: alaDaHICSvrEntry.setStatus('current')
alaDaHICSvrName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: alaDaHICSvrName.setStatus('current')
alaDaHICSvrIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 2, 1, 2), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaHICSvrIpAddrType.setStatus('current')
alaDaHICSvrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 2, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaHICSvrIpAddr.setStatus('current')
alaDaHICSvrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1025, 65535)).clone(11707)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaHICSvrPort.setStatus('current')
alaDaHICSvrKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 2, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaHICSvrKey.setStatus('current')
alaDaHICSvrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("down", 1), ("up", 2))).clone('down')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaHICSvrStatus.setStatus('current')
alaDaHICSvrRole = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("backup", 2))).clone('primary')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaHICSvrRole.setStatus('current')
alaDaHICSvrConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaHICSvrConnection.setStatus('current')
alaDaHICSvrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 2, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaHICSvrRowStatus.setStatus('current')
alaDaHICAllowedTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 3), )
if mibBuilder.loadTexts: alaDaHICAllowedTable.setStatus('current')
alaDaHICAllowedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaHICAllowedName"))
if mibBuilder.loadTexts: alaDaHICAllowedEntry.setStatus('current')
alaDaHICAllowedName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 3, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 31)))
if mibBuilder.loadTexts: alaDaHICAllowedName.setStatus('current')
alaDaHICAllowedIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 3, 1, 2), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaHICAllowedIpAddrType.setStatus('current')
alaDaHICAllowedIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 3, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaHICAllowedIpAddr.setStatus('current')
alaDaHICAllowedIpMaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 3, 1, 4), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaHICAllowedIpMaskType.setStatus('current')
alaDaHICAllowedIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 3, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="FFFFFFFF")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaHICAllowedIpMask.setStatus('current')
alaDaHICAllowedRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 3, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaHICAllowedRowStatus.setStatus('current')
alaDaHICSvrFailPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 4), )
if mibBuilder.loadTexts: alaDaHICSvrFailPolicyTable.setStatus('current')
alaDaHICSvrFailPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaHICSvrFailPolicyName"))
if mibBuilder.loadTexts: alaDaHICSvrFailPolicyEntry.setStatus('current')
alaDaHICSvrFailPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 4, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaHICSvrFailPolicyName.setStatus('current')
alaDaHICSvrFailChangedPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 4, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaHICSvrFailChangedPolicyName.setStatus('current')
alaDaHICSvrFailRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaHICSvrFailRowStatus.setStatus('current')
alaDaHICHostTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 5), )
if mibBuilder.loadTexts: alaDaHICHostTable.setStatus('current')
alaDaHICHostEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 5, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaHICHostMac"))
if mibBuilder.loadTexts: alaDaHICHostEntry.setStatus('current')
alaDaHICHostMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 5, 1, 1), MacAddress())
if mibBuilder.loadTexts: alaDaHICHostMac.setStatus('current')
alaDaHICHostStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 20, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inprogress", 1), ("success", 2), ("fail", 3), ("timeout", 4))).clone('fail')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaHICHostStatus.setStatus('current')
alaDaUNPETmplTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21), )
if mibBuilder.loadTexts: alaDaUNPETmplTable.setStatus('deprecated')
alaDaUNPETmplEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPETmplName"))
if mibBuilder.loadTexts: alaDaUNPETmplEntry.setStatus('deprecated')
alaDaUNPETmplName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaUNPETmplName.setStatus('deprecated')
alaDaUNPETmpl8021XAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmpl8021XAuthStatus.setStatus('deprecated')
alaDaUNPETmpl8021XTxPeriodStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmpl8021XTxPeriodStatus.setStatus('deprecated')
alaDaUNPETmpl8021XTxPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmpl8021XTxPeriod.setStatus('deprecated')
alaDaUNPETmpl8021XSuppTimeoutStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmpl8021XSuppTimeoutStatus.setStatus('deprecated')
alaDaUNPETmpl8021XSuppTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmpl8021XSuppTimeOut.setStatus('deprecated')
alaDaUNPETmpl8021XMaxReqStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmpl8021XMaxReqStatus.setStatus('deprecated')
alaDaUNPETmpl8021XMaxReq = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmpl8021XMaxReq.setStatus('deprecated')
alaDaUNPETmpl8021XPassAltEProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmpl8021XPassAltEProf.setStatus('deprecated')
alaDaUNPETmplMacAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmplMacAuthStatus.setStatus('deprecated')
alaDaUNPETmplMacPassAltEProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmplMacPassAltEProf.setStatus('deprecated')
alaDaUNPETmplClassifStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmplClassifStatus.setStatus('deprecated')
alaDaUNPETmplDefEProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 13), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmplDefEProf.setStatus('deprecated')
alaDaUNPETmplGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmplGroupId.setStatus('deprecated')
alaDaUNPETmplAaaProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 15), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmplAaaProf.setStatus('deprecated')
alaDaUNPETmplRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 16), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmplRowStatus.setStatus('deprecated')
alaDaUNPETmplRedirectPortBounce = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmplRedirectPortBounce.setStatus('deprecated')
alaDaUNPETmplFailurePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("macAuth", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmplFailurePolicy.setStatus('deprecated')
alaDaUNPETmplBypassStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmplBypassStatus.setStatus('deprecated')
alaDaUNPETmplMacAllowEap = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("pass", 1), ("fail", 2), ("noauth", 3), ("none", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmplMacAllowEap.setStatus('deprecated')
alaDaUNPETmplAdminControlledDirections = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("both", 1), ("in", 2), ("noVal", 3))).clone('both')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmplAdminControlledDirections.setStatus('deprecated')
alaDaUNPETmplTrustTagStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmplTrustTagStatus.setStatus('deprecated')
alaDaUNPETmplForceL3Learning = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmplForceL3Learning.setStatus('current')
alaDaUNPETmplForceL3LearningPortBounce = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 21, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmplForceL3LearningPortBounce.setStatus('current')
alaDaUNPEdgeProfTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 22), )
if mibBuilder.loadTexts: alaDaUNPEdgeProfTable.setStatus('deprecated')
alaDaUNPEdgeProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 22, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeProfName"))
if mibBuilder.loadTexts: alaDaUNPEdgeProfEntry.setStatus('deprecated')
alaDaUNPEdgeProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 22, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaUNPEdgeProfName.setStatus('deprecated')
alaDaUNPEdgeProfQosPolicyList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 22, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEdgeProfQosPolicyList.setStatus('deprecated')
alaDaUNPEdgeProfLocationPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 22, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEdgeProfLocationPolicy.setStatus('deprecated')
alaDaUNPEdgeProfPeriodPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 22, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEdgeProfPeriodPolicy.setStatus('deprecated')
alaDaUNPEdgeProfHICStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 22, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEdgeProfHICStatus.setStatus('deprecated')
alaDaUNPEdgeProfCPortalAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 22, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEdgeProfCPortalAuth.setStatus('deprecated')
alaDaUNPEdgeProfAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 22, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEdgeProfAuthStatus.setStatus('deprecated')
alaDaUNPEdgeProfMobileTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 22, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEdgeProfMobileTag.setStatus('deprecated')
alaDaUNPEdgeProfDHCPEnforcment = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 22, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEdgeProfDHCPEnforcment.setStatus('deprecated')
alaDaUNPEdgeProfCPortalProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 22, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEdgeProfCPortalProf.setStatus('deprecated')
alaDaUNPEdgeProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 22, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEdgeProfRowStatus.setStatus('deprecated')
alaDaUNPEdgeProfRedirectStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 22, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEdgeProfRedirectStatus.setStatus('deprecated')
alaDaUNPEdgeProfKerberosStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 22, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEdgeProfKerberosStatus.setStatus('deprecated')
alaDaUNPEdgeProfMaxIngressBw = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 22, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEdgeProfMaxIngressBw.setStatus('deprecated')
alaDaUNPEdgeProfMaxEgressBw = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 22, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEdgeProfMaxEgressBw.setStatus('deprecated')
alaDaUNPEdgeProfMaxIngressDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 22, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 16384), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEdgeProfMaxIngressDepth.setStatus('deprecated')
alaDaUNPEdgeProfMaxEgressDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 22, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 16384), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEdgeProfMaxEgressDepth.setStatus('deprecated')
alaDaUNPPortRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 23), )
if mibBuilder.loadTexts: alaDaUNPPortRuleTable.setStatus('current')
alaDaUNPPortRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 23, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPPortRuleNum"))
if mibBuilder.loadTexts: alaDaUNPPortRuleEntry.setStatus('current')
alaDaUNPPortRuleNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 23, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaDaUNPPortRuleNum.setStatus('current')
alaDaUNPPortRuleEdgeProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 23, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortRuleEdgeProf.setStatus('deprecated')
alaDaUNPPortRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 23, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortRuleRowStatus.setStatus('current')
alaDaUNPPortRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 23, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortRuleVlanTag.setStatus('current')
alaDaUNPPortRuleProfile1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 23, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortRuleProfile1.setStatus('current')
alaDaUNPPortRuleProfile2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 23, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortRuleProfile2.setStatus('current')
alaDaUNPPortRuleProfile3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 23, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortRuleProfile3.setStatus('current')
alaDaUNPGroupRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 24), )
if mibBuilder.loadTexts: alaDaUNPGroupRuleTable.setStatus('deprecated')
alaDaUNPGroupRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 24, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPGroupRuleId"))
if mibBuilder.loadTexts: alaDaUNPGroupRuleEntry.setStatus('deprecated')
alaDaUNPGroupRuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 24, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: alaDaUNPGroupRuleId.setStatus('deprecated')
alaDaUNPGroupRuleEdgeProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 24, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPGroupRuleEdgeProf.setStatus('deprecated')
alaDaUNPGroupRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 24, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPGroupRuleRowStatus.setStatus('deprecated')
alaDaUNPGroupRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 24, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPGroupRuleVlanTag.setStatus('deprecated')
alaDaUNPMacOuiRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 25), )
if mibBuilder.loadTexts: alaDaUNPMacOuiRuleTable.setStatus('current')
alaDaUNPMacOuiRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 25, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPMacOuiRuleAddr"))
if mibBuilder.loadTexts: alaDaUNPMacOuiRuleEntry.setStatus('current')
alaDaUNPMacOuiRuleAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 25, 1, 1), MacOui())
if mibBuilder.loadTexts: alaDaUNPMacOuiRuleAddr.setStatus('current')
alaDaUNPMacOuiRuleEdgeProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 25, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacOuiRuleEdgeProfile.setStatus('deprecated')
alaDaUNPMacOuiRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 25, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacOuiRuleRowStatus.setStatus('current')
alaDaUNPMacOuiRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 25, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacOuiRuleVlanTag.setStatus('current')
alaDaUNPMacOuiRuleProfile1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 25, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacOuiRuleProfile1.setStatus('current')
alaDaUNPMacOuiRuleProfile2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 25, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacOuiRuleProfile2.setStatus('current')
alaDaUNPMacOuiRuleProfile3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 25, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacOuiRuleProfile3.setStatus('current')
alaDaUNPEndPoinRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 26), )
if mibBuilder.loadTexts: alaDaUNPEndPoinRuleTable.setStatus('current')
alaDaUNPEndPoinRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 26, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPEndPoinRuleId"))
if mibBuilder.loadTexts: alaDaUNPEndPoinRuleEntry.setStatus('current')
alaDaUNPEndPoinRuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 26, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("ipPhone", 1))))
if mibBuilder.loadTexts: alaDaUNPEndPoinRuleId.setStatus('current')
alaDaUNPEndPoinEdgeProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 26, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEndPoinEdgeProfile.setStatus('deprecated')
alaDaUNPEndPoinRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 26, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEndPoinRuleRowStatus.setStatus('current')
alaDaUNPEndPoinProfile1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 26, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEndPoinProfile1.setStatus('current')
alaDaUNPEndPoinProfile2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 26, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEndPoinProfile2.setStatus('current')
alaDaUNPEndPoinProfile3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 26, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEndPoinProfile3.setStatus('current')
alaDaUNPEndPoinVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 26, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPEndPoinVlanTag.setStatus('current')
alaDaUNPAuthRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 27), )
if mibBuilder.loadTexts: alaDaUNPAuthRuleTable.setStatus('current')
alaDaUNPAuthRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 27, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPAuthRuleType"))
if mibBuilder.loadTexts: alaDaUNPAuthRuleEntry.setStatus('current')
alaDaUNPAuthRuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 27, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("none", 1), ("dot1x", 2), ("mac", 3), ("dot1xFail", 4), ("macFail", 5), ("noAuth", 6))))
if mibBuilder.loadTexts: alaDaUNPAuthRuleType.setStatus('current')
alaDaUNPAuthRuleEdgeProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 27, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPAuthRuleEdgeProfile.setStatus('deprecated')
alaDaUNPAuthRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 27, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPAuthRuleRowStatus.setStatus('current')
alaDaUNPAuthRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 27, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPAuthRuleVlanTag.setStatus('current')
alaDaUNPAuthRuleProfile1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 27, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPAuthRuleProfile1.setStatus('current')
alaDaUNPAuthRuleProfile2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 27, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPAuthRuleProfile2.setStatus('current')
alaDaUNPAuthRuleProfile3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 27, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPAuthRuleProfile3.setStatus('current')
alaDaUNPClassifRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28), )
if mibBuilder.loadTexts: alaDaUNPClassifRuleTable.setStatus('current')
alaDaUNPClassifRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRuleName"))
if mibBuilder.loadTexts: alaDaUNPClassifRuleEntry.setStatus('current')
alaDaUNPClassifRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaUNPClassifRuleName.setStatus('current')
alaDaUNPClassifRulePrecedenceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRulePrecedenceNum.setStatus('current')
alaDaUNPClassifRuleEdgeProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRuleEdgeProfile.setStatus('deprecated')
alaDaUNPClassifRulePort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRulePort.setStatus('current')
alaDaUNPClassifRulePortHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 5), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRulePortHigh.setStatus('current')
alaDaUNPClassifRuleGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRuleGroupId.setStatus('deprecated')
alaDaUNPClassifRuleMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 7), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRuleMacAddr.setStatus('current')
alaDaUNPClassifRuleMacRngLoaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 8), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRuleMacRngLoaddr.setStatus('current')
alaDaUNPClassifRuleMacRngHiaddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 9), MacAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRuleMacRngHiaddr.setStatus('current')
alaDaUNPClassifRuleMacOuiAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 10), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(3, 3), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRuleMacOuiAddr.setStatus('current')
alaDaUNPClassifRuleEndPoin = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("ipPhone", 1))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRuleEndPoin.setStatus('current')
alaDaUNPClassifRuleAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 0), ("noAuth", 1), ("dot1x", 2), ("mac", 3), ("dot1xFail", 4), ("macFail", 5))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRuleAuthType.setStatus('current')
alaDaUNPClassifRuleIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 13), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRuleIpAddressType.setStatus('current')
alaDaUNPClassifRuleIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 14), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRuleIpAddress.setStatus('current')
alaDaUNPClassifRuleIpMaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 15), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRuleIpMaskType.setStatus('current')
alaDaUNPClassifRuleIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 16), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRuleIpMask.setStatus('current')
alaDaUNPClassifRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRowStatus.setStatus('current')
alaDaUNPClassifRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 4094), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRuleVlanTag.setStatus('current')
alaDaUNPClassifRuleCustomerDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 4294967295), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRuleCustomerDomain.setStatus('current')
alaDaUNPClassifRuleProfile1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 20), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRuleProfile1.setStatus('current')
alaDaUNPClassifRuleProfile2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 21), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRuleProfile2.setStatus('current')
alaDaUNPClassifRuleProfile3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 28, 1, 22), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPClassifRuleProfile3.setStatus('current')
alaDaUNPMacPortRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 29), )
if mibBuilder.loadTexts: alaDaUNPMacPortRuleTable.setStatus('current')
alaDaUNPMacPortRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 29, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPMacPortRuleMacAddr"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPMacPortRuleNum"))
if mibBuilder.loadTexts: alaDaUNPMacPortRuleEntry.setStatus('current')
alaDaUNPMacPortRuleMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 29, 1, 1), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: alaDaUNPMacPortRuleMacAddr.setStatus('current')
alaDaUNPMacPortRuleNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 29, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: alaDaUNPMacPortRuleNum.setStatus('current')
alaDaUNPMacPortRuleEdgeProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 29, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacPortRuleEdgeProf.setStatus('deprecated')
alaDaUNPMacPortRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 29, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacPortRuleRowStatus.setStatus('current')
alaDaUNPMacPortRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 29, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacPortRuleVlanTag.setStatus('current')
alaDaUNPMacPortRuleProfile1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 29, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacPortRuleProfile1.setStatus('current')
alaDaUNPMacPortRuleProfile2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 29, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacPortRuleProfile2.setStatus('current')
alaDaUNPMacPortRuleProfile3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 29, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacPortRuleProfile3.setStatus('current')
alaDaUNPIpPortRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 30), )
if mibBuilder.loadTexts: alaDaUNPIpPortRuleTable.setStatus('current')
alaDaUNPIpPortRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 30, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPIpPortRuleAddrType"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPIpPortRuleAddr"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPIpPortRuleNum"))
if mibBuilder.loadTexts: alaDaUNPIpPortRuleEntry.setStatus('current')
alaDaUNPIpPortRuleAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 30, 1, 1), InetAddressType())
if mibBuilder.loadTexts: alaDaUNPIpPortRuleAddrType.setStatus('current')
alaDaUNPIpPortRuleAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 30, 1, 2), InetAddress())
if mibBuilder.loadTexts: alaDaUNPIpPortRuleAddr.setStatus('current')
alaDaUNPIpPortRuleNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 30, 1, 3), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: alaDaUNPIpPortRuleNum.setStatus('current')
alaDaUNPIpPortRuleEdgeProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 30, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpPortRuleEdgeProf.setStatus('deprecated')
alaDaUNPIpPortRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 30, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpPortRuleRowStatus.setStatus('current')
alaDaUNPIpPortRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 30, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpPortRuleVlanTag.setStatus('current')
alaDaUNPIpPortRuleProfile1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 30, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpPortRuleProfile1.setStatus('current')
alaDaUNPIpPortRuleProfile2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 30, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpPortRuleProfile2.setStatus('current')
alaDaUNPIpPortRuleProfile3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 30, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpPortRuleProfile3.setStatus('current')
alaDaUNPIpPortRuleMaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 30, 1, 10), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpPortRuleMaskType.setStatus('current')
alaDaUNPIpPortRuleMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 30, 1, 11), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpPortRuleMask.setStatus('current')
alaDaUNPMacIpPortRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 31), )
if mibBuilder.loadTexts: alaDaUNPMacIpPortRuleTable.setStatus('current')
alaDaUNPMacIpPortRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 31, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpPortRuleMacAddr"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpPortRuleAddrIpType"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpPortRuleIpAddr"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpPortRuleNum"))
if mibBuilder.loadTexts: alaDaUNPMacIpPortRuleEntry.setStatus('current')
alaDaUNPMacIpPortRuleMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 31, 1, 1), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: alaDaUNPMacIpPortRuleMacAddr.setStatus('current')
alaDaUNPMacIpPortRuleAddrIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 31, 1, 2), InetAddressType())
if mibBuilder.loadTexts: alaDaUNPMacIpPortRuleAddrIpType.setStatus('current')
alaDaUNPMacIpPortRuleIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 31, 1, 3), InetAddress())
if mibBuilder.loadTexts: alaDaUNPMacIpPortRuleIpAddr.setStatus('current')
alaDaUNPMacIpPortRuleNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 31, 1, 4), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: alaDaUNPMacIpPortRuleNum.setStatus('current')
alaDaUNPMacIpPortRuleEdgeProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 31, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacIpPortRuleEdgeProf.setStatus('deprecated')
alaDaUNPMacIpPortRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 31, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacIpPortRuleRowStatus.setStatus('current')
alaDaUNPMacIpPortRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 31, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacIpPortRuleVlanTag.setStatus('current')
alaDaUNPMacIpPortRuleProfile1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 31, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacIpPortRuleProfile1.setStatus('current')
alaDaUNPMacIpPortRuleProfile2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 31, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacIpPortRuleProfile2.setStatus('current')
alaDaUNPMacIpPortRuleProfile3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 31, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacIpPortRuleProfile3.setStatus('current')
alaDaUNPMacIpPortRuleIpMaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 31, 1, 11), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacIpPortRuleIpMaskType.setStatus('current')
alaDaUNPMacIpPortRuleIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 31, 1, 12), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacIpPortRuleIpMask.setStatus('current')
alaDaUNPMacGroupRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 32), )
if mibBuilder.loadTexts: alaDaUNPMacGroupRuleTable.setStatus('deprecated')
alaDaUNPMacGroupRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 32, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPMacGroupRuleAddr"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPMacGroupRuleId"))
if mibBuilder.loadTexts: alaDaUNPMacGroupRuleEntry.setStatus('deprecated')
alaDaUNPMacGroupRuleAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 32, 1, 1), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: alaDaUNPMacGroupRuleAddr.setStatus('deprecated')
alaDaUNPMacGroupRuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 32, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: alaDaUNPMacGroupRuleId.setStatus('deprecated')
alaDaUNPMacGroupRuleEdgeProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 32, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacGroupRuleEdgeProf.setStatus('deprecated')
alaDaUNPMacGroupRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 32, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacGroupRuleRowStatus.setStatus('deprecated')
alaDaUNPMacGroupRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 32, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacGroupRuleVlanTag.setStatus('deprecated')
alaDaUNPIpGroupRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 33), )
if mibBuilder.loadTexts: alaDaUNPIpGroupRuleTable.setStatus('deprecated')
alaDaUNPIpGroupRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 33, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPIpGroupRuleAddrType"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPIpGroupRuleAddr"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPIpGroupRuleNum"))
if mibBuilder.loadTexts: alaDaUNPIpGroupRuleEntry.setStatus('deprecated')
alaDaUNPIpGroupRuleAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 33, 1, 1), InetAddressType())
if mibBuilder.loadTexts: alaDaUNPIpGroupRuleAddrType.setStatus('deprecated')
alaDaUNPIpGroupRuleAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 33, 1, 2), InetAddress())
if mibBuilder.loadTexts: alaDaUNPIpGroupRuleAddr.setStatus('deprecated')
alaDaUNPIpGroupRuleNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 33, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: alaDaUNPIpGroupRuleNum.setStatus('deprecated')
alaDaUNPIpGroupRuleEdgeProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 33, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpGroupRuleEdgeProf.setStatus('deprecated')
alaDaUNPIpGroupRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 33, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpGroupRuleRowStatus.setStatus('deprecated')
alaDaUNPIpGroupRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 33, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpGroupRuleVlanTag.setStatus('deprecated')
alaDaUNPMacIpGroupRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 34), )
if mibBuilder.loadTexts: alaDaUNPMacIpGroupRuleTable.setStatus('deprecated')
alaDaUNPMacIpGroupRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 34, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpGroupRuleMacAddr"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpGroupRuleIpAddrType"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpGroupRuleIpAddr"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpGroupRuleId"))
if mibBuilder.loadTexts: alaDaUNPMacIpGroupRuleEntry.setStatus('deprecated')
alaDaUNPMacIpGroupRuleMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 34, 1, 1), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: alaDaUNPMacIpGroupRuleMacAddr.setStatus('deprecated')
alaDaUNPMacIpGroupRuleIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 34, 1, 2), InetAddressType())
if mibBuilder.loadTexts: alaDaUNPMacIpGroupRuleIpAddrType.setStatus('deprecated')
alaDaUNPMacIpGroupRuleIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 34, 1, 3), InetAddress())
if mibBuilder.loadTexts: alaDaUNPMacIpGroupRuleIpAddr.setStatus('deprecated')
alaDaUNPMacIpGroupRuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 34, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: alaDaUNPMacIpGroupRuleId.setStatus('deprecated')
alaDaUNPMacIpGroupRuleEdgeProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 34, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacIpGroupRuleEdgeProf.setStatus('deprecated')
alaDaUNPMacIpGroupRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 34, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacIpGroupRuleRowStatus.setStatus('deprecated')
alaDaUNPMacIpGroupRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 34, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacIpGroupRuleVlanTag.setStatus('deprecated')
alaDaUNPUserRoleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 35), )
if mibBuilder.loadTexts: alaDaUNPUserRoleTable.setStatus('current')
alaDaUNPUserRoleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 35, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPUserRoleName"))
if mibBuilder.loadTexts: alaDaUNPUserRoleEntry.setStatus('current')
alaDaUNPUserRoleName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 35, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaUNPUserRoleName.setStatus('current')
alaDaUNPUserRolePrecedenceNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 35, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPUserRolePrecedenceNum.setStatus('current')
alaDaUNPUserRolePolicyList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 35, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPUserRolePolicyList.setStatus('current')
alaDaUNPUserRoleEdgeProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 35, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPUserRoleEdgeProfile.setStatus('deprecated')
alaDaUNPUserRoleAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 35, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("noAuth", 0), ("none", 1), ("dot1x", 2), ("mac", 3), ("dot1xFail", 4), ("macFail", 5))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPUserRoleAuthType.setStatus('current')
alaDaUNPUserRolePostLoginStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 35, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPUserRolePostLoginStatus.setStatus('current')
alaDaUNPUserRoleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 35, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPUserRoleRowStatus.setStatus('current')
alaDaUNPUserRoleKerberosPostLoginStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 35, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPUserRoleKerberosPostLoginStatus.setStatus('current')
alaDaUNPUserRoleProfile1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 35, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPUserRoleProfile1.setStatus('current')
alaDaUNPUserRoleProfile2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 35, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPUserRoleProfile2.setStatus('current')
alaDaUNPUserRoleProfile3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 35, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPUserRoleProfile3.setStatus('current')
alaDaUNPRstrctedRoleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 36), )
if mibBuilder.loadTexts: alaDaUNPRstrctedRoleTable.setStatus('current')
alaDaUNPRstrctedRoleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 36, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPRstrctedRoleType"))
if mibBuilder.loadTexts: alaDaUNPRstrctedRoleEntry.setStatus('current')
alaDaUNPRstrctedRoleType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 36, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unauthorized", 1), ("hic", 2), ("qmr", 3), ("blacklist", 4), ("cpPreLogin", 5), ("kerberosPreLogin", 6))))
if mibBuilder.loadTexts: alaDaUNPRstrctedRoleType.setStatus('current')
alaDaUNPRstrctedRolePolicyList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 36, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPRstrctedRolePolicyList.setStatus('current')
alaDaUNPRstrctedRoleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 36, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPRstrctedRoleRowStatus.setStatus('current')
alaDaUNPVlanMapTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 37), )
if mibBuilder.loadTexts: alaDaUNPVlanMapTable.setStatus('deprecated')
alaDaUNPVlanMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 37, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPVlanMapEdgeProf"))
if mibBuilder.loadTexts: alaDaUNPVlanMapEntry.setStatus('deprecated')
alaDaUNPVlanMapEdgeProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 37, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaUNPVlanMapEdgeProf.setStatus('deprecated')
alaDaUNPVlanMapIdent = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 37, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVlanMapIdent.setStatus('deprecated')
alaDaUNPVlanMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 37, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVlanMapRowStatus.setStatus('deprecated')
alaDaUnpGroupIdTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 38), )
if mibBuilder.loadTexts: alaDaUnpGroupIdTable.setStatus('deprecated')
alaDaUnpGroupIdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 38, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUnpGroupId"))
if mibBuilder.loadTexts: alaDaUnpGroupIdEntry.setStatus('deprecated')
alaDaUnpGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 38, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: alaDaUnpGroupId.setStatus('deprecated')
alaDaUnpGroupDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 38, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUnpGroupDescription.setStatus('deprecated')
alaDaUnpGroupIdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 38, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUnpGroupIdRowStatus.setStatus('deprecated')
alaDaUNPEdgeFlushTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 39), )
if mibBuilder.loadTexts: alaDaUNPEdgeFlushTable.setStatus('current')
alaDaUNPEdgeFlushEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 39, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeFlushIndex"))
if mibBuilder.loadTexts: alaDaUNPEdgeFlushEntry.setStatus('current')
alaDaUNPEdgeFlushIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 39, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: alaDaUNPEdgeFlushIndex.setStatus('current')
alaDaUNPEdgeFlushPortLow = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 39, 1, 2), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPEdgeFlushPortLow.setStatus('current')
alaDaUNPEdgeFlushPortHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 39, 1, 3), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPEdgeFlushPortHigh.setStatus('current')
alaDaUNPEdgeFlushType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 39, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noAuth", 1), ("onex", 2), ("mac", 3), ("none", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPEdgeFlushType.setStatus('current')
alaDaUNPEdgrFlushMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 39, 1, 5), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPEdgrFlushMac.setStatus('current')
alaDaUNPEdgeFlushComplete = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 39, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("all", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPEdgeFlushComplete.setStatus('current')
alaDaUNPEdgeFlushProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 39, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPEdgeFlushProfile.setStatus('current')
alaDaUNPMacRulesTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 40), )
if mibBuilder.loadTexts: alaDaUNPMacRulesTable.setStatus('deprecated')
alaDaUNPMacRulesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 40, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPMacRulesMacAddr"))
if mibBuilder.loadTexts: alaDaUNPMacRulesEntry.setStatus('deprecated')
alaDaUNPMacRulesMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 40, 1, 1), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: alaDaUNPMacRulesMacAddr.setStatus('deprecated')
alaDaUNPMacRulesEdgeProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 40, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRulesEdgeProf.setStatus('deprecated')
alaDaUNPMacRulesRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 40, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRulesRowStatus.setStatus('deprecated')
alaDaUNPMacRulesVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 40, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRulesVlanTag.setStatus('deprecated')
alaDaUNPMacRangeTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 41), )
if mibBuilder.loadTexts: alaDaUNPMacRangeTable.setStatus('deprecated')
alaDaUNPMacRangeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 41, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangeStartMacAddr"))
if mibBuilder.loadTexts: alaDaUNPMacRangeEntry.setStatus('deprecated')
alaDaUNPMacRangeStartMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 41, 1, 1), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: alaDaUNPMacRangeStartMacAddr.setStatus('deprecated')
alaDaUNPMacRangeEndMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 41, 1, 2), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRangeEndMacAddr.setStatus('deprecated')
alaDaUNPMacRangeEdgeProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 41, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRangeEdgeProf.setStatus('deprecated')
alaDaUNPMacRangeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 41, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRangeRowStatus.setStatus('deprecated')
alaDaUNPMacRangeVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 41, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPMacRangeVlanTag.setStatus('deprecated')
alaDaUNPIpMaskRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 42), )
if mibBuilder.loadTexts: alaDaUNPIpMaskRuleTable.setStatus('deprecated')
alaDaUNPIpMaskRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 42, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPIpMaskRuleAddrType"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPIpMaskRuleAddr"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPIpMaskRuleMaskType"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPIpMaskRuleMask"))
if mibBuilder.loadTexts: alaDaUNPIpMaskRuleEntry.setStatus('deprecated')
alaDaUNPIpMaskRuleAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 42, 1, 1), InetAddressType())
if mibBuilder.loadTexts: alaDaUNPIpMaskRuleAddrType.setStatus('deprecated')
alaDaUNPIpMaskRuleAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 42, 1, 2), InetAddress())
if mibBuilder.loadTexts: alaDaUNPIpMaskRuleAddr.setStatus('deprecated')
alaDaUNPIpMaskRuleMaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 42, 1, 3), InetAddressType())
if mibBuilder.loadTexts: alaDaUNPIpMaskRuleMaskType.setStatus('deprecated')
alaDaUNPIpMaskRuleMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 42, 1, 4), InetAddress())
if mibBuilder.loadTexts: alaDaUNPIpMaskRuleMask.setStatus('deprecated')
alaDaUNPIpMaskRuleEdgeProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 42, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpMaskRuleEdgeProf.setStatus('deprecated')
alaDaUNPIpMaskRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 42, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpMaskRuleRowStatus.setStatus('deprecated')
alaDaUNPIpMaskRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 42, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPIpMaskRuleVlanTag.setStatus('deprecated')
alaDaQMRMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 43))
alaDaQMRGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 43, 1))
alaDaQMRPage = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 43, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaQMRPage.setStatus('current')
alaDaQMRPath = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 43, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaQMRPath.setStatus('current')
alaDaQMRCustomHttpProxyPort = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 43, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1025, 65535), )).clone(8080)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaQMRCustomHttpProxyPort.setStatus('current')
alaDaQMRPolicyList = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 43, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaQMRPolicyList.setStatus('current')
alaDaQMRAllowedTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 43, 2), )
if mibBuilder.loadTexts: alaDaQMRAllowedTable.setStatus('current')
alaDaQMRAllowedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 43, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaQMRAllowedName"))
if mibBuilder.loadTexts: alaDaQMRAllowedEntry.setStatus('current')
alaDaQMRAllowedName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 43, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)))
if mibBuilder.loadTexts: alaDaQMRAllowedName.setStatus('current')
alaDaQMRAllowedIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 43, 2, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaQMRAllowedIpAddrType.setStatus('current')
alaDaQMRAllowedIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 43, 2, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaQMRAllowedIpAddr.setStatus('current')
alaDaQMRAllowedIpMaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 43, 2, 1, 4), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaQMRAllowedIpMaskType.setStatus('current')
alaDaQMRAllowedIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 43, 2, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="FFFFFFFF")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaQMRAllowedIpMask.setStatus('current')
alaDaQMRAllowedRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 43, 2, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaQMRAllowedRowStatus.setStatus('current')
alaDaUNPValidityPeriodTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 44), )
if mibBuilder.loadTexts: alaDaUNPValidityPeriodTable.setStatus('current')
alaDaUNPValidityPeriodEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 44, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPValidityPeriodName"))
if mibBuilder.loadTexts: alaDaUNPValidityPeriodEntry.setStatus('current')
alaDaUNPValidityPeriodName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 44, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaUNPValidityPeriodName.setStatus('current')
alaDaUNPValidityPeriodDays = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 44, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPValidityPeriodDays.setStatus('current')
alaDaUNPValidityPeriodDaysStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 44, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPValidityPeriodDaysStatus.setStatus('current')
alaDaUNPValidityPeriodMonths = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 44, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPValidityPeriodMonths.setStatus('current')
alaDaUNPValidityPeriodMonthsStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 44, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPValidityPeriodMonthsStatus.setStatus('current')
alaDaUNPValidityPeriodHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 44, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPValidityPeriodHour.setStatus('current')
alaDaUNPValidityPeriodHourStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 44, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPValidityPeriodHourStatus.setStatus('current')
alaDaUNPValidityPeriodEndHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 44, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPValidityPeriodEndHour.setStatus('current')
alaDaUNPValidityPeriodInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 44, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPValidityPeriodInterval.setStatus('current')
alaDaUNPValidityPeriodIntervalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 44, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPValidityPeriodIntervalStatus.setStatus('current')
alaDaUNPValidityPeriodEndInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 44, 1, 11), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 19))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPValidityPeriodEndInterval.setStatus('current')
alaDaUNPValidityPeriodTimezone = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 44, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39))).clone(namedValues=NamedValues(("nzst", 1), ("zp11", 2), ("aest", 3), ("gst", 4), ("acst", 5), ("kst", 6), ("jst", 7), ("awst", 8), ("zp8", 9), ("zp7", 10), ("zp6", 11), ("ist", 12), ("zp5", 13), ("zp4", 14), ("msk", 15), ("eet", 16), ("cet", 17), ("met", 18), ("bst", 19), ("wat", 20), ("utc", 21), ("gmt", 22), ("wet", 23), ("zm2", 24), ("zm3", 25), ("nst", 26), ("ast", 27), ("astcam", 28), ("est", 29), ("estcam", 30), ("cst", 31), ("cstcam", 32), ("mst", 33), ("mstcam", 34), ("pst", 35), ("pstcam", 36), ("akst", 37), ("hst", 38), ("zm11", 39)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPValidityPeriodTimezone.setStatus('current')
alaDaUNPValidityPeriodTimezoneStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 44, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPValidityPeriodTimezoneStatus.setStatus('current')
alaDaUNPValidityPeriodActiveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 44, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPValidityPeriodActiveStatus.setStatus('current')
alaDaUNPValidityPeriodRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 44, 1, 15), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPValidityPeriodRowStatus.setStatus('current')
alaDaUNPLocationPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 45), )
if mibBuilder.loadTexts: alaDaUNPLocationPolicyTable.setStatus('current')
alaDaUNPLocationPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 45, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPLocationPolicyName"))
if mibBuilder.loadTexts: alaDaUNPLocationPolicyEntry.setStatus('current')
alaDaUNPLocationPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 45, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaUNPLocationPolicyName.setStatus('current')
alaDaUNPLocationPolicyPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 45, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPLocationPolicyPort.setStatus('current')
alaDaUNPLocationPolicyPortHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 45, 1, 3), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPLocationPolicyPortHigh.setStatus('current')
alaDaUNPLocationPolicyPortStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 45, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPLocationPolicyPortStatus.setStatus('current')
alaDaUNPLocationPolicySystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 45, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPLocationPolicySystemName.setStatus('current')
alaDaUNPLocationPolicySystemLocation = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 45, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPLocationPolicySystemLocation.setStatus('current')
alaDaUNPLocationPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 45, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPLocationPolicyRowStatus.setStatus('current')
alaDaUNPRedirectAllowedServerTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 46), )
if mibBuilder.loadTexts: alaDaUNPRedirectAllowedServerTable.setStatus('current')
alaDaUNPRedirectAllowedServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 46, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPRedirectAllowedServerName"))
if mibBuilder.loadTexts: alaDaUNPRedirectAllowedServerEntry.setStatus('current')
alaDaUNPRedirectAllowedServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 46, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaUNPRedirectAllowedServerName.setStatus('current')
alaDaUNPRedirectAllowedServerIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 46, 1, 2), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPRedirectAllowedServerIPType.setStatus('current')
alaDaUNPRedirectAllowedServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 46, 1, 3), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPRedirectAllowedServerIP.setStatus('current')
alaDaUNPRedirectAllowedMaskIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 46, 1, 4), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPRedirectAllowedMaskIPType.setStatus('current')
alaDaUNPRedirectAllowedMaskIP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 46, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPRedirectAllowedMaskIP.setStatus('current')
alaDaUNPRedirectAllowedRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 46, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPRedirectAllowedRowStatus.setStatus('current')
alaDaMacVlanUserExtTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 47), )
if mibBuilder.loadTexts: alaDaMacVlanUserExtTable.setStatus('current')
alaDaMacVlanUserExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 47, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserExtIntfNum"), (0, "ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserExtMACAddress"), (0, "ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserExtVlanID"), (0, "ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserExtAppID"))
if mibBuilder.loadTexts: alaDaMacVlanUserExtEntry.setStatus('current')
alaDaMacVlanUserExtIntfNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 47, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaDaMacVlanUserExtIntfNum.setStatus('current')
alaDaMacVlanUserExtMACAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 47, 1, 2), MacAddress())
if mibBuilder.loadTexts: alaDaMacVlanUserExtMACAddress.setStatus('current')
alaDaMacVlanUserExtVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 47, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: alaDaMacVlanUserExtVlanID.setStatus('current')
alaDaMacVlanUserExtAppID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 47, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 32)))
if mibBuilder.loadTexts: alaDaMacVlanUserExtAppID.setStatus('current')
alaDaMacVlanUserExtAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 47, 1, 5), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaMacVlanUserExtAppName.setStatus('current')
alaDaUNPVxlanProfileTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 48), )
if mibBuilder.loadTexts: alaDaUNPVxlanProfileTable.setStatus('deprecated')
alaDaUNPVxlanProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 48, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanProfileName"))
if mibBuilder.loadTexts: alaDaUNPVxlanProfileEntry.setStatus('deprecated')
alaDaUNPVxlanProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 48, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaUNPVxlanProfileName.setStatus('deprecated')
alaDaUNPVxlanProfileEncapVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 48, 1, 2), TmnxEncapVal()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVxlanProfileEncapVal.setStatus('deprecated')
alaDaUNPVxlanProfileVnid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 48, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777214))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVxlanProfileVnid.setStatus('deprecated')
alaDaUNPVxlanProfileQosPolicyListName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 48, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVxlanProfileQosPolicyListName.setStatus('deprecated')
alaDaUNPVxlanProfileFarEndIPListName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 48, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVxlanProfileFarEndIPListName.setStatus('deprecated')
alaDaUNPVxlanProfileMulticastIPAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 48, 1, 6), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVxlanProfileMulticastIPAddressType.setStatus('deprecated')
alaDaUNPVxlanProfileMulticastIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 48, 1, 7), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVxlanProfileMulticastIPAddress.setStatus('deprecated')
alaDaUNPVxlanProfileSapVlanXlation = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 48, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVxlanProfileSapVlanXlation.setStatus('deprecated')
alaDaUNPVxlanProfileMobileTagStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 48, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVxlanProfileMobileTagStatus.setStatus('deprecated')
alaDaUNPVxlanProfileMulticastMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 48, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("headend", 1), ("tandem", 2), ("hybrid", 3))).clone('headend')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVxlanProfileMulticastMode.setStatus('deprecated')
alaDaUNPVxlanProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 48, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVxlanProfileRowStatus.setStatus('deprecated')
alaDaUNPVxlanFlushTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 49), )
if mibBuilder.loadTexts: alaDaUNPVxlanFlushTable.setStatus('deprecated')
alaDaUNPVxlanFlushEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 49, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanFlushIndex"))
if mibBuilder.loadTexts: alaDaUNPVxlanFlushEntry.setStatus('deprecated')
alaDaUNPVxlanFlushIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 49, 1, 1), Unsigned32())
if mibBuilder.loadTexts: alaDaUNPVxlanFlushIndex.setStatus('deprecated')
alaDaUNPVxlanFlushComplete = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 49, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("all", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPVxlanFlushComplete.setStatus('deprecated')
alaDaUNPVxlanFlushAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 49, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAuth", 1), ("onex", 2), ("mac", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPVxlanFlushAuthType.setStatus('deprecated')
alaDaUNPVxlanFlushMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 49, 1, 4), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPVxlanFlushMacAddress.setStatus('deprecated')
alaDaUNPVxlanFlushSapIDIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 49, 1, 5), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPVxlanFlushSapIDIfIndex.setStatus('deprecated')
alaDaUNPVxlanFlushSapIDEncapVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 49, 1, 6), TmnxEncapVal()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPVxlanFlushSapIDEncapVal.setStatus('deprecated')
alaDaUNPVxlanFlushServiceID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 49, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPVxlanFlushServiceID.setStatus('deprecated')
alaDaUNPVxlanFlushVxlanProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 49, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPVxlanFlushVxlanProfile.setStatus('deprecated')
alaDaUNPVxlanFarEndIPListTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 50), )
if mibBuilder.loadTexts: alaDaUNPVxlanFarEndIPListTable.setStatus('current')
alaDaUNPVxlanFarEndIPListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 50, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanFarEndIPListName"))
if mibBuilder.loadTexts: alaDaUNPVxlanFarEndIPListEntry.setStatus('current')
alaDaUNPVxlanFarEndIPListName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 50, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaUNPVxlanFarEndIPListName.setStatus('current')
alaDaUNPVxlanFarEndIPListIPAddressCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 50, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPVxlanFarEndIPListIPAddressCount.setStatus('current')
alaDaUNPVxlanFarEndIPListRemove = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 50, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPVxlanFarEndIPListRemove.setStatus('current')
alaDaUNPVxlanFarEndIPAddressListTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 51), )
if mibBuilder.loadTexts: alaDaUNPVxlanFarEndIPAddressListTable.setStatus('current')
alaDaUNPVxlanFarEndIPAddressListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 51, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanFarEndIPListName"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanFarEndIPAddressListIPType"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanFarEndIPAddressListIP"))
if mibBuilder.loadTexts: alaDaUNPVxlanFarEndIPAddressListEntry.setStatus('current')
alaDaUNPVxlanFarEndIPAddressListIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 51, 1, 1), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2))))
if mibBuilder.loadTexts: alaDaUNPVxlanFarEndIPAddressListIPType.setStatus('current')
alaDaUNPVxlanFarEndIPAddressListIP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 51, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: alaDaUNPVxlanFarEndIPAddressListIP.setStatus('current')
alaDaUNPVxlanFarEndIPAddressListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 51, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVxlanFarEndIPAddressListRowStatus.setStatus('current')
alaDaUNPSpbFlushTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 52), )
if mibBuilder.loadTexts: alaDaUNPSpbFlushTable.setStatus('deprecated')
alaDaUNPSpbFlushEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 52, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPSpbFlushIndex"))
if mibBuilder.loadTexts: alaDaUNPSpbFlushEntry.setStatus('deprecated')
alaDaUNPSpbFlushIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 52, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: alaDaUNPSpbFlushIndex.setStatus('deprecated')
alaDaUNPSpbFlushComplete = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 52, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("all", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPSpbFlushComplete.setStatus('deprecated')
alaDaUNPSpbFlushAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 52, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAuth", 1), ("onex", 2), ("mac", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPSpbFlushAuthType.setStatus('deprecated')
alaDaUNPSpbFlushMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 52, 1, 4), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPSpbFlushMacAddress.setStatus('deprecated')
alaDaUNPSpbFlushSapIDIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 52, 1, 5), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPSpbFlushSapIDIfIndex.setStatus('deprecated')
alaDaUNPSpbFlushSapIDEncapVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 52, 1, 6), TmnxEncapVal()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPSpbFlushSapIDEncapVal.setStatus('deprecated')
alaDaUNPSpbFlushServiceID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 52, 1, 7), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPSpbFlushServiceID.setStatus('deprecated')
alaDaUNPSpbFlushSpbProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 52, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPSpbFlushSpbProfile.setStatus('deprecated')
alaDaKerberosMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53))
alaDaKerberosGlobalConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 1))
alaDaKerberosGlobalMacMoveStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaKerberosGlobalMacMoveStatus.setStatus('current')
alaDaKerberosGlobalInactivityTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 600)).clone(300)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaKerberosGlobalInactivityTimer.setStatus('current')
alaDaKerberosGlobalPolicy = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaKerberosGlobalPolicy.setStatus('current')
alaDaKerberosGlobalPolicyStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("active", 2), ("inactive", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosGlobalPolicyStatus.setStatus('current')
alaDaKerberosClientPktHwDiscardStats = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosClientPktHwDiscardStats.setStatus('current')
alaDaKerberosServerPktHwDiscardStats = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosServerPktHwDiscardStats.setStatus('current')
alaDaKerberosTotalClientPktRxStats = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosTotalClientPktRxStats.setStatus('current')
alaDaKerberosTotalServerPktRxStats = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosTotalServerPktRxStats.setStatus('current')
alaDaKerberosClientPktSwDiscardStats = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosClientPktSwDiscardStats.setStatus('current')
alaDaKerberosServerPktSwDiscardStats = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosServerPktSwDiscardStats.setStatus('current')
alaDaKerberosTotalASREQRxStats = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosTotalASREQRxStats.setStatus('current')
alaDaKerberosTotalASREPRxStats = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosTotalASREPRxStats.setStatus('current')
alaDaKerberosTotalTGSREQRxStats = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosTotalTGSREQRxStats.setStatus('current')
alaDaKerberosTotalTGSREPRxStats = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosTotalTGSREPRxStats.setStatus('current')
alaDaKerberosTotalErrorRxStats = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosTotalErrorRxStats.setStatus('current')
alaDaKerberosGlobalClearStats = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("reset", 2))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaKerberosGlobalClearStats.setStatus('current')
alaDaKerberosGlobalClearPortStats = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("reset", 2))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaKerberosGlobalClearPortStats.setStatus('current')
alaDaKerberosGlobalServerTimeoutTimer = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaKerberosGlobalServerTimeoutTimer.setStatus('current')
alaDaKerberosPolicyConfigTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 2), )
if mibBuilder.loadTexts: alaDaKerberosPolicyConfigTable.setStatus('current')
alaDaKerberosPolicyConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 2, 1), ).setIndexNames((1, "ALCATEL-IND1-DA-MIB", "alaDaKerberosPolicyDomainName"))
if mibBuilder.loadTexts: alaDaKerberosPolicyConfigEntry.setStatus('current')
alaDaKerberosPolicyDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 2, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaKerberosPolicyDomainName.setStatus('current')
alaDaKerberosPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 31))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaKerberosPolicyName.setStatus('current')
alaDaKerberosPolicyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosPolicyStatus.setStatus('current')
alaDaKerberosPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaKerberosPolicyRowStatus.setStatus('current')
alaDaKerberosUserTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 3), )
if mibBuilder.loadTexts: alaDaKerberosUserTable.setStatus('current')
alaDaKerberosUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaKerberosUserMac"))
if mibBuilder.loadTexts: alaDaKerberosUserEntry.setStatus('current')
alaDaKerberosUserMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 3, 1, 1), MacAddress())
if mibBuilder.loadTexts: alaDaKerberosUserMac.setStatus('current')
alaDaKerberosUserPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 3, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosUserPort.setStatus('current')
alaDaKerberosUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 3, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosUserName.setStatus('current')
alaDaKerberosUserDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 3, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosUserDomain.setStatus('current')
alaDaKerberosUserAuthState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("asAuthenticating", 1), ("asAuthenticated", 2), ("asFailed", 3), ("asTimeout", 4), ("tgsAuthenticating", 5), ("tgsAuthenticated", 6), ("tgsFailed", 7), ("tgsTimeout", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosUserAuthState.setStatus('current')
alaDaKerberosUserPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 3, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosUserPolicy.setStatus('current')
alaDaKerberosUserLeftTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 3, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosUserLeftTime.setStatus('current')
alaDaKerberosUserState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("idle", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosUserState.setStatus('current')
alaDaKerberosPortStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 4), )
if mibBuilder.loadTexts: alaDaKerberosPortStatsTable.setStatus('current')
alaDaKerberosPortStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaKerberosStatsIfIndex"))
if mibBuilder.loadTexts: alaDaKerberosPortStatsEntry.setStatus('current')
alaDaKerberosStatsIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: alaDaKerberosStatsIfIndex.setStatus('current')
alaDaKerberosPortClearStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("reset", 2))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaKerberosPortClearStats.setStatus('current')
alaDaKerberosPortClientPktRxStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosPortClientPktRxStats.setStatus('current')
alaDaKerberosPortServerPktRxStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosPortServerPktRxStats.setStatus('current')
alaDaKerberosPortClientPktSwDiscardStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosPortClientPktSwDiscardStats.setStatus('current')
alaDaKerberosPortServerPktSwDiscardStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosPortServerPktSwDiscardStats.setStatus('current')
alaDaKerberosPortASREQRxStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosPortASREQRxStats.setStatus('current')
alaDaKerberosPortASREPRxStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosPortASREPRxStats.setStatus('current')
alaDaKerberosPortTGSREQRxStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosPortTGSREQRxStats.setStatus('current')
alaDaKerberosPortTGSREPRxStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosPortTGSREPRxStats.setStatus('current')
alaDaKerberosPortErrorRxStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 4, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaKerberosPortErrorRxStats.setStatus('current')
alaDaKerberosServerTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 5), )
if mibBuilder.loadTexts: alaDaKerberosServerTable.setStatus('current')
alaDaKerberosServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 5, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaKerberosIpAddressType"), (0, "ALCATEL-IND1-DA-MIB", "alaDaKerberosIpAddress"))
if mibBuilder.loadTexts: alaDaKerberosServerEntry.setStatus('current')
alaDaKerberosIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 5, 1, 1), InetAddressType())
if mibBuilder.loadTexts: alaDaKerberosIpAddressType.setStatus('current')
alaDaKerberosIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 5, 1, 2), InetAddress())
if mibBuilder.loadTexts: alaDaKerberosIpAddress.setStatus('current')
alaDaKerberosUdpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 5, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(88)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaKerberosUdpPort.setStatus('current')
alaDaKerberosRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 53, 5, 1, 4), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaKerberosRowStatus.setStatus('current')
alaDaUNPPortVlanTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 54), )
if mibBuilder.loadTexts: alaDaUNPPortVlanTable.setStatus('current')
alaDaUNPPortVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 54, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPPortIfIndex"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPPortVlanVID"))
if mibBuilder.loadTexts: alaDaUNPPortVlanEntry.setStatus('current')
alaDaUNPPortVlanVID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 54, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaDaUNPPortVlanVID.setStatus('current')
alaDaUNPPortVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 54, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortVlanRowStatus.setStatus('current')
alaDaUNPVlanRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 55), )
if mibBuilder.loadTexts: alaDaUNPVlanRuleTable.setStatus('current')
alaDaUNPVlanRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 55, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPVlanRuleVlanTag"))
if mibBuilder.loadTexts: alaDaUNPVlanRuleEntry.setStatus('current')
alaDaUNPVlanRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 55, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaDaUNPVlanRuleVlanTag.setStatus('current')
alaDaUNPVlanRuleVlanTagPosition = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 55, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("outerTag", 1), ("innerTag", 2))).clone('outerTag')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVlanRuleVlanTagPosition.setStatus('current')
alaDaUNPVlanRuleEdgeProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 55, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVlanRuleEdgeProf.setStatus('current')
alaDaUNPVlanRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 55, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPVlanRuleRowStatus.setStatus('current')
alaDaUNPETmplVlanTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 56), )
if mibBuilder.loadTexts: alaDaUNPETmplVlanTable.setStatus('current')
alaDaUNPETmplVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 56, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPETmplName"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPETmplVlanVID"))
if mibBuilder.loadTexts: alaDaUNPETmplVlanEntry.setStatus('current')
alaDaUNPETmplVlanVID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 56, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaDaUNPETmplVlanVID.setStatus('current')
alaDaUNPETmplVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 56, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPETmplVlanRowStatus.setStatus('current')
alaDaUNPUserFlushTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 57), )
if mibBuilder.loadTexts: alaDaUNPUserFlushTable.setStatus('current')
alaDaUNPUserFlushEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 57, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPUserFlushIndex"))
if mibBuilder.loadTexts: alaDaUNPUserFlushEntry.setStatus('current')
alaDaUNPUserFlushIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 57, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: alaDaUNPUserFlushIndex.setStatus('current')
alaDaUNPUserFlushComplete = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 57, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("all", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPUserFlushComplete.setStatus('current')
alaDaUNPUserFlushAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 57, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAuth", 1), ("onex", 2), ("mac", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPUserFlushAuthType.setStatus('current')
alaDaUNPUserFlushMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 57, 1, 4), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPUserFlushMacAddress.setStatus('current')
alaDaUNPUserFlushProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 57, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPUserFlushProfile.setStatus('current')
alaDaUNPUserFlushPortStart = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 57, 1, 6), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPUserFlushPortStart.setStatus('current')
alaDaUNPUserFlushPortEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 57, 1, 7), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPUserFlushPortEnd.setStatus('current')
alaDaUNPUserFlushSapIDIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 57, 1, 8), InterfaceIndex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPUserFlushSapIDIfIndex.setStatus('current')
alaDaUNPUserFlushSapIDEncapVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 57, 1, 9), TmnxEncapVal()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPUserFlushSapIDEncapVal.setStatus('current')
alaDaUNPUserFlushServiceID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 57, 1, 10), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaDaUNPUserFlushServiceID.setStatus('current')
alaDaUNPCustDomainRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 58), )
if mibBuilder.loadTexts: alaDaUNPCustDomainRuleTable.setStatus('current')
alaDaUNPCustDomainRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 58, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainRuleId"))
if mibBuilder.loadTexts: alaDaUNPCustDomainRuleEntry.setStatus('current')
alaDaUNPCustDomainRuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 58, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: alaDaUNPCustDomainRuleId.setStatus('current')
alaDaUNPCustDomainRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 58, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainRuleVlanTag.setStatus('current')
alaDaUNPCustDomainRuleProfile1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 58, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainRuleProfile1.setStatus('current')
alaDaUNPCustDomainRuleProfile2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 58, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainRuleProfile2.setStatus('current')
alaDaUNPCustDomainRuleProfile3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 58, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainRuleProfile3.setStatus('current')
alaDaUNPCustDomainRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 58, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainRuleRowStatus.setStatus('current')
alaDaUNPPortTemplateTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59), )
if mibBuilder.loadTexts: alaDaUNPPortTemplateTable.setStatus('current')
alaDaUNPPortTemplateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateName"))
if mibBuilder.loadTexts: alaDaUNPPortTemplateEntry.setStatus('current')
alaDaUNPPortTemplateName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaUNPPortTemplateName.setStatus('current')
alaDaUNPPortTemplateAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplateAdminState.setStatus('current')
alaDaUNPPortTemplateDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("both", 1), ("in", 2), ("noVal", 3))).clone('both')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplateDirection.setStatus('current')
alaDaUNPPortTemplateDomainID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplateDomainID.setStatus('current')
alaDaUNPPortTemplateClassification = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplateClassification.setStatus('current')
alaDaUNPPortTemplateTrustTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplateTrustTag.setStatus('current')
alaDaUNPPortTemplateDynamicService = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("spb", 2), ("vxlan", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplateDynamicService.setStatus('current')
alaDaUNPPortTemplateDefaultProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplateDefaultProfile.setStatus('current')
alaDaUNPPortTemplateAAAProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplateAAAProfile.setStatus('current')
alaDaUNPPortTemplateRedirectPortBounce = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplateRedirectPortBounce.setStatus('current')
alaDaUNPPortTemplate8021XAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplate8021XAuth.setStatus('current')
alaDaUNPPortTemplate8021XAuthPassAlternate = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 12), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplate8021XAuthPassAlternate.setStatus('current')
alaDaUNPPortTemplate8021XAuthBypass = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplate8021XAuthBypass.setStatus('current')
alaDaUNPPortTemplate8021XAuthFailPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("mac", 2))).clone('mac')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplate8021XAuthFailPolicy.setStatus('current')
alaDaUNPPortTemplate8021XAuthTxPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplate8021XAuthTxPeriod.setStatus('current')
alaDaUNPPortTemplate8021XAuthSuppTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 120)).clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplate8021XAuthSuppTimeout.setStatus('current')
alaDaUNPPortTemplate8021XAuthMaxReq = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)).clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplate8021XAuthMaxReq.setStatus('current')
alaDaUNPPortTemplateMACAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplateMACAuth.setStatus('current')
alaDaUNPPortTemplateMACAuthPassAlternate = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 19), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplateMACAuthPassAlternate.setStatus('current')
alaDaUNPPortTemplateMACAuthAllowEAP = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("pass", 1), ("fail", 2), ("noAuth", 3), ("none", 4))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplateMACAuthAllowEAP.setStatus('current')
alaDaUNPPortTemplateForceL3Learning = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplateForceL3Learning.setStatus('current')
alaDaUNPPortTemplateForceL3LearningPortBounce = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplateForceL3LearningPortBounce.setStatus('current')
alaDaUNPPortTemplateRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 59, 1, 23), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplateRowStatus.setStatus('current')
alaDaUNPProfileTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60), )
if mibBuilder.loadTexts: alaDaUNPProfileTable.setStatus('current')
alaDaUNPProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPProfileName"))
if mibBuilder.loadTexts: alaDaUNPProfileEntry.setStatus('current')
alaDaUNPProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: alaDaUNPProfileName.setStatus('current')
alaDaUNPProfileAuthenticationFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileAuthenticationFlag.setStatus('current')
alaDaUNPProfileMobileTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMobileTag.setStatus('current')
alaDaUNPProfileCPortalAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileCPortalAuthentication.setStatus('current')
alaDaUNPProfileRedirect = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileRedirect.setStatus('current')
alaDaUNPProfileQoSPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileQoSPolicy.setStatus('current')
alaDaUNPProfilePeriodPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfilePeriodPolicy.setStatus('current')
alaDaUNPProfileCPortalProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileCPortalProfile.setStatus('current')
alaDaUNPProfileLocationPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileLocationPolicy.setStatus('current')
alaDaUNPProfileSaaProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60, 1, 10), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileSaaProfile.setStatus('current')
alaDaUNPProfileInactivityInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 600)).clone(300)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileInactivityInterval.setStatus('current')
alaDaUNPProfileKerberosAuthentication = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileKerberosAuthentication.setStatus('current')
alaDaUNPProfileMaxIngressBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMaxIngressBandwidth.setStatus('current')
alaDaUNPProfileMaxEgressBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('kilobits per second').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMaxEgressBandwidth.setStatus('current')
alaDaUNPProfileMaxIngressDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 16384), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMaxIngressDepth.setStatus('current')
alaDaUNPProfileMaxEgressDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 16384), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMaxEgressDepth.setStatus('current')
alaDaUNPProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileRowStatus.setStatus('current')
alaDaUNPProfileAFDConfig = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 60, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("admin", 1), ("autoFabric", 2))).clone('admin')).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaDaUNPProfileAFDConfig.setStatus('current')
alaDaUNPProfileMapVlanTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 61), )
if mibBuilder.loadTexts: alaDaUNPProfileMapVlanTable.setStatus('current')
alaDaUNPProfileMapVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 61, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPProfileName"))
if mibBuilder.loadTexts: alaDaUNPProfileMapVlanEntry.setStatus('current')
alaDaUNPProfileMapVlanVlanID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 61, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMapVlanVlanID.setStatus('current')
alaDaUNPProfileMapVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 61, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMapVlanRowStatus.setStatus('current')
alaDaUNPProfileMapSpbTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 62), )
if mibBuilder.loadTexts: alaDaUNPProfileMapSpbTable.setStatus('current')
alaDaUNPProfileMapSpbEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 62, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPProfileName"))
if mibBuilder.loadTexts: alaDaUNPProfileMapSpbEntry.setStatus('current')
alaDaUNPProfileMapSpbEncapVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 62, 1, 1), TmnxEncapVal()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMapSpbEncapVal.setStatus('current')
alaDaUNPProfileMapSpbIsid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 62, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(256, 16777214))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMapSpbIsid.setStatus('current')
alaDaUNPProfileMapSpbBVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 62, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMapSpbBVlan.setStatus('current')
alaDaUNPProfileMapSpbMulticastMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 62, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("headend", 1), ("tandem", 2))).clone('headend')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMapSpbMulticastMode.setStatus('current')
alaDaUNPProfileMapSpbVlanXlation = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 62, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMapSpbVlanXlation.setStatus('current')
alaDaUNPProfileMapSpbRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 62, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMapSpbRowStatus.setStatus('current')
alaDaUNPProfileMapVxlanTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 63), )
if mibBuilder.loadTexts: alaDaUNPProfileMapVxlanTable.setStatus('current')
alaDaUNPProfileMapVxlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 63, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPProfileName"))
if mibBuilder.loadTexts: alaDaUNPProfileMapVxlanEntry.setStatus('current')
alaDaUNPProfileMapVxlanEncapVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 63, 1, 1), TmnxEncapVal()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMapVxlanEncapVal.setStatus('current')
alaDaUNPProfileMapVxlanVnid = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 63, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777214))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMapVxlanVnid.setStatus('current')
alaDaUNPProfileMapVxlanFarEndIPList = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 63, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMapVxlanFarEndIPList.setStatus('current')
alaDaUNPProfileMapVxlanMulticastIPAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 63, 1, 4), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMapVxlanMulticastIPAddressType.setStatus('current')
alaDaUNPProfileMapVxlanMulticastIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 63, 1, 5), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMapVxlanMulticastIPAddress.setStatus('current')
alaDaUNPProfileMapVxlanVlanXlation = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 63, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMapVxlanVlanXlation.setStatus('current')
alaDaUNPProfileMapVxlanMulticastMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 63, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("headend", 1), ("tandem", 2), ("hybrid", 3))).clone('headend')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMapVxlanMulticastMode.setStatus('current')
alaDaUNPProfileMapVxlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 63, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMapVxlanRowStatus.setStatus('current')
alaDaUNPProfileMapStaticTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 64), )
if mibBuilder.loadTexts: alaDaUNPProfileMapStaticTable.setStatus('current')
alaDaUNPProfileMapStaticEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 64, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPProfileName"))
if mibBuilder.loadTexts: alaDaUNPProfileMapStaticEntry.setStatus('current')
alaDaUNPProfileMapStaticEncapVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 64, 1, 1), TmnxEncapVal()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMapStaticEncapVal.setStatus('current')
alaDaUNPProfileMapStaticServiceID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 64, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMapStaticServiceID.setStatus('current')
alaDaUNPProfileMapStaticRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 64, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPProfileMapStaticRowStatus.setStatus('current')
alaDaUNPCustDomainMacIpRuleTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 65), )
if mibBuilder.loadTexts: alaDaUNPCustDomainMacIpRuleTable.setStatus('current')
alaDaUNPCustDomainMacIpRuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 65, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacIpRuleMacAddr"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacIpRuleIpAddrType"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacIpRuleIpAddr"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacIpRuleDomainId"))
if mibBuilder.loadTexts: alaDaUNPCustDomainMacIpRuleEntry.setStatus('current')
alaDaUNPCustDomainMacIpRuleMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 65, 1, 1), MacAddress().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6))
if mibBuilder.loadTexts: alaDaUNPCustDomainMacIpRuleMacAddr.setStatus('current')
alaDaUNPCustDomainMacIpRuleIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 65, 1, 2), InetAddressType())
if mibBuilder.loadTexts: alaDaUNPCustDomainMacIpRuleIpAddrType.setStatus('current')
alaDaUNPCustDomainMacIpRuleIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 65, 1, 3), InetAddress())
if mibBuilder.loadTexts: alaDaUNPCustDomainMacIpRuleIpAddr.setStatus('current')
alaDaUNPCustDomainMacIpRuleDomainId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 65, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: alaDaUNPCustDomainMacIpRuleDomainId.setStatus('current')
alaDaUNPCustDomainMacIpRuleVlanTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 65, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacIpRuleVlanTag.setStatus('current')
alaDaUNPCustDomainMacIpRuleProfile1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 65, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacIpRuleProfile1.setStatus('current')
alaDaUNPCustDomainMacIpRuleProfile2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 65, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacIpRuleProfile2.setStatus('current')
alaDaUNPCustDomainMacIpRuleProfile3 = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 65, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacIpRuleProfile3.setStatus('current')
alaDaUNPCustDomainMacIpRuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 65, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacIpRuleRowStatus.setStatus('current')
alaDaUNPCustDomainMacIpRuleIpMaskType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 65, 1, 10), InetAddressType().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacIpRuleIpMaskType.setStatus('current')
alaDaUNPCustDomainMacIpRuleIpMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 65, 1, 11), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPCustDomainMacIpRuleIpMask.setStatus('current')
alaDaUNPPortTemplateVlanTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 66), )
if mibBuilder.loadTexts: alaDaUNPPortTemplateVlanTable.setStatus('current')
alaDaUNPPortTemplateVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 66, 1), ).setIndexNames((0, "ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateName"), (0, "ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateVlanVID"))
if mibBuilder.loadTexts: alaDaUNPPortTemplateVlanEntry.setStatus('current')
alaDaUNPPortTemplateVlanVID = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 66, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094)))
if mibBuilder.loadTexts: alaDaUNPPortTemplateVlanVID.setStatus('current')
alaDaUNPPortTemplateVlanRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 1, 66, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaDaUNPPortTemplateVlanRowStatus.setStatus('current')
alaIND1DaMIBCompliances = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 2)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUserNetProfileGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpNetRuleGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRuleGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangeGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVlanTagGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaMacUserGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPGlobalGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaNotificationObjectGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaNotificationsGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpCustomerDomainGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaSpbProfileGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainEvbGpIdRuleGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaSaaProfileGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaHICGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeTemplateGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeProfileGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassificationRuleGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPGroupIdEdgeClassifyGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacOuiGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEndPointGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthRuleGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPRuleGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacPortClassifyGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpPortClassifyGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpClassifyGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacClassifyGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpAddressGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPUserRoleGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPRestrictedRoleGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVlanMappingGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeFlushGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacAddrsRuleGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangesGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpMaskGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaQMRGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPValidityPeriodGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPLocationPolicyGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPRedirectAllowedServerGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserExtGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVlanGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortVlanGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmplVlanGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPUserFlushGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainRuleGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapVlanGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapSpbGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapVxlanGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapStaticGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacIpRuleGroup"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateVlanGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaIND1DaMIBCompliances = alaIND1DaMIBCompliances.setStatus('current')
alaDaUserNetProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUserNetProfileVlanID"), ("ALCATEL-IND1-DA-MIB", "alaDaUserNetProfileRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUserNetProfileQosPolicyListName"), ("ALCATEL-IND1-DA-MIB", "alaDaUserNetProfileMCLagConfigStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUserNetProfileSaaProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUserNetProfileMobileTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUserNetProfileMaxIngressBw"), ("ALCATEL-IND1-DA-MIB", "alaDaUserNetProfileMaxEgressBw"), ("ALCATEL-IND1-DA-MIB", "alaDaUserNetProfileMaxIngressDepth"), ("ALCATEL-IND1-DA-MIB", "alaDaUserNetProfileMaxEgressDepth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUserNetProfileGroup = alaDaUserNetProfileGroup.setStatus('deprecated')
alaDaUNPIpNetRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPIpNetRuleProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpNetRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpNetRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpNetRuleMCLagConfigStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPIpNetRuleGroup = alaDaUNPIpNetRuleGroup.setStatus('current')
alaDaUNPMacRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRuleProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRuleMCLagConfigStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPMacRuleGroup = alaDaUNPMacRuleGroup.setStatus('current')
alaDaUNPMacRangeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangeRuleHiAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangeRuleProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangeRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangeRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangeRuleMCLagConfigStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPMacRangeGroup = alaDaUNPMacRangeGroup.setStatus('current')
alaDaUNPVlanTagGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPVlanTagRuleProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVlanTagRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVlanTagRuleMCLagConfigStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPVlanTagGroup = alaDaUNPVlanTagGroup.setStatus('current')
alaDaMacUserGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaMacUserVlanID"), ("ALCATEL-IND1-DA-MIB", "alaDaAuthenticationStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaMacUserIpAddress"), ("ALCATEL-IND1-DA-MIB", "alaDaMacUserUnpUsed"), ("ALCATEL-IND1-DA-MIB", "alaDaMacUserLoginTimeStamp"), ("ALCATEL-IND1-DA-MIB", "alaDaMacUserAuthtype"), ("ALCATEL-IND1-DA-MIB", "alaDaMacUserClassificationSource"), ("ALCATEL-IND1-DA-MIB", "alaDaMacUserName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaMacUserGroup = alaDaMacUserGroup.setStatus('current')
alaDaUNPPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 7)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPPortDefaultProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortPassAltProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortMacAuthFlag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortClassificationFlag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTrustTagStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortMCLagConfigStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPPortGroup = alaDaUNPPortGroup.setStatus('current')
alaDaUNPGlobalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 8)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPDynamicVlanConfigFlag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthServerDownUnp"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthServerDownTimeout"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPDynamicVlanMCLagConfigStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthServerDownUNPMCLagConfigStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthServerDownTimeoutMCLagConfigStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPDynamicProfileConfigFlag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPDynamicProfileConfigMCLagConfigStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPReloadVsiTypeDB"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthSrvDownEdgeProfName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthServerDowneEdgeProfTimeout"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeUserFlush"), ("ALCATEL-IND1-DA-MIB", "alaDaUNP8021XEdgeUserFlush"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacEdgeUserFlush"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPNoAuthEdgeUserFlush"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPRedirectPortBounce"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPRedirectPauseTimer"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPRedirectProxyServerPort"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPRedirectServerIPType"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPRedirectServerIP"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthSrvDownVxlanProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthSrvDownVxlanProfileTimeout"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPForceL3Learning"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPForceL3LearningPortBounce"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthServerDownProfile1"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthServerDownProfile2"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthServerDownProfile3"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVlanUserFlush"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPGlobalGroup = alaDaUNPGlobalGroup.setStatus('current')
alaDaNotificationObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 9)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUnpMacAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpSourceIpAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpNativeVlan"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpVlan"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpMCLAGId"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpCommandType"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpName"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpMacAddr1"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpMacAddr2"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpIpAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpIpMask"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosRateLimitString"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaNotificationObjectGroup = alaDaNotificationObjectGroup.setStatus('current')
alaDaNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 10)).setObjects(("ALCATEL-IND1-DA-MIB", "unpMcLagMacIgnored"), ("ALCATEL-IND1-DA-MIB", "unpMcLagConfigInconsistency"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosReqTimeoutTrap"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosInactivityTimerExpiryTrap"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosRateLimitExceed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaNotificationsGroup = alaDaNotificationsGroup.setStatus('current')
alaDaMacVlanUserGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 11)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserAuthStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserIpAddressType"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserIpAddress"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserUnpUsed"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserLoginTimeStamp"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserAuthtype"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserClassificationSource"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserMCLagLearningLoc"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserName"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserRole"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserRoleSource"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserAuthFailReason"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserAuthRetryCount"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserClassifProfRule"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserRoleRule"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserRestAccessStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserLocPolicyStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserTimePolicyStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserCapPortalStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserQMRStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserAuthServerIpType"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserAuthServerIpUsed"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserAuthServerUsed"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserServerMessage"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserRedirectionUrl"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserSIPCallType"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserSIPMediaType"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserUnpFromAuthServer"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserType"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserServiceID"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserServiceSapIDIfIndex"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserServiceSapIDEncapVal"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserVxlanVnid"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserSpbIsid"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserSpbBVlan"), ("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserKerberosStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaMacVlanUserGroup = alaDaMacVlanUserGroup.setStatus('current')
alaDaUnpCustomerDomainGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 12)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUnpCustomerDomainDesc"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpCustomerDomainRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUnpCustomerDomainGroup = alaDaUnpCustomerDomainGroup.setStatus('current')
alaDaSpbProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 13)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaSpbProfileEncapVal"), ("ALCATEL-IND1-DA-MIB", "alaDaSpbProfileQosPolicyListName"), ("ALCATEL-IND1-DA-MIB", "alaDaSpbProfileIsid"), ("ALCATEL-IND1-DA-MIB", "alaDaSpbProfileBVlan"), ("ALCATEL-IND1-DA-MIB", "alaDaSpbProfileRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaSpbProfileMulticastMode"), ("ALCATEL-IND1-DA-MIB", "alaDaSpbProfileSapVlanXlation"), ("ALCATEL-IND1-DA-MIB", "alaDaSpbProfileMobileTag"), ("ALCATEL-IND1-DA-MIB", "alaDaSpbProfileAFDConfig"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaSpbProfileGroup = alaDaSpbProfileGroup.setStatus('deprecated')
alaDaUNPCustDomainEvbGpIdRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 14)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainEvbGpIdRuleVlanProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainEvbGpIdRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainEvbGpIdRuleSpbProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainEvbGpIdRuleVxlanProfileName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPCustDomainEvbGpIdRuleGroup = alaDaUNPCustDomainEvbGpIdRuleGroup.setStatus('current')
alaDaUNPCustDomainVlanTagRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 15)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleVlanProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleSpbProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleMCLagConfigStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleTagPosition"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleVxlanProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleProfile1"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleProfile2"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainVlanTagRuleProfile3"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPCustDomainVlanTagRuleGroup = alaDaUNPCustDomainVlanTagRuleGroup.setStatus('current')
alaDaUNPCustDomainIpNetRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 16)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleSpbProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleMCLagConfigStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleEdgeProfile"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleVxlanProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleProfile1"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleProfile2"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainIpNetRuleProfile3"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPCustDomainIpNetRuleGroup = alaDaUNPCustDomainIpNetRuleGroup.setStatus('current')
alaDaUNPCustDomainMacRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 17)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRuleProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRuleSpbProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRuleMCLagConfigStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRuleEdgeProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRuleVxlanProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRuleProfile1"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRuleProfile2"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRuleProfile3"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPCustDomainMacRuleGroup = alaDaUNPCustDomainMacRuleGroup.setStatus('current')
alaDaUNPCustDomainMacRangeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 18)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleHiAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleSpbProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleMCLagConfigStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleEdgeProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleVxlanProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleProfile1"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleProfile2"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacRangeRuleProfile3"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPCustDomainMacRangeGroup = alaDaUNPCustDomainMacRangeGroup.setStatus('current')
alaDaUNPGroupObjects = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 19)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPPortCustomerDomainId"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortType"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortPassAltSpbProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortDefaultSpbProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortDefaultEdgeProfName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortMacPassEdgeProfName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPort8021XEdgeProfName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPort8021XAuthStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPort8021XTxPeriodStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPort8021XTxPeriod"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPort8021XSuppTimeoutStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPort8021XSuppTimeOut"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPort8021XMaxReqStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPort8021XMaxReq"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortGroupId"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortAaaProfile"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortEdgeTemplate"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortRedirectPortBounce"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPort8021XFailurePolicy"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPort8021XBypassStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortMacAllowEap"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortAdminControlledDirections"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortAdminControlledOperDirections"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPort8021XPassAltUserNetProfName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPort8021XPassAltSpbProfName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPort8021XPassAltVxlanProfName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortPassAltVxlanProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortDefaultVxlanProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortAFDConfig"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortMaxIngressBw"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortMaxIngressBwSource"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortMaxEgressBw"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortMaxEgressBwSource"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortMaxIngressDepth"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortMaxEgressDepth"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortIngressSourceProfile"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortEgressSourceProfile"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortForceL3Learning"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortForceL3LearningPortBounce"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPort8021XPassAltProfileName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortPortTemplateName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortDomainID"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortAdminState"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortDynamicService"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortPVlanPortType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPGroupObjects = alaDaUNPGroupObjects.setStatus('current')
alaDaSaaProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 20)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaSaaProfileLatencyThreshold"), ("ALCATEL-IND1-DA-MIB", "alaDaSaaProfileJitterThreshold"), ("ALCATEL-IND1-DA-MIB", "alaDaSaaProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaSaaProfileGroup = alaDaSaaProfileGroup.setStatus('current')
alaDaCPortalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 21)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaCPortalRedirectUrlName"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalIpAddressType"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalIpAddress"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalMode"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalSuccRedirectUrl"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalProxyPort"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalPolicyListName"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalRetryCnt"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalAuthRealm"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalAuthPolicyListName"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalAuthRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalAuthUNPProfile"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalAuthUNPProfileChange"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalProfMode"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalProfSuccRedirectUrl"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalProfRetryCnt"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalProfAuthPolicyListName"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalProfAaaProf"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalProfRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalProfDomainAuthPolicyListName"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalProfDomainAuthRealm"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalProfDomainRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalCustomization"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalProfUNPProfile"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalProfUNPProfileChange"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalUNPProfile"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalUNPProfileChange"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalProfDomainUNPProfile"), ("ALCATEL-IND1-DA-MIB", "alaDaCPortalProfDomainUNPProfileChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaCPortalGroup = alaDaCPortalGroup.setStatus('current')
alaDaHICGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 22)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaHICStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaHICWebAgentDownloadUrl"), ("ALCATEL-IND1-DA-MIB", "alaDaHICCustomHttpProxyPort"), ("ALCATEL-IND1-DA-MIB", "alaDaHICBgPollInterval"), ("ALCATEL-IND1-DA-MIB", "alaDaHICSvrFailMode"), ("ALCATEL-IND1-DA-MIB", "alaDaHICSvrIpAddrType"), ("ALCATEL-IND1-DA-MIB", "alaDaHICSvrIpAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaHICSvrPort"), ("ALCATEL-IND1-DA-MIB", "alaDaHICSvrKey"), ("ALCATEL-IND1-DA-MIB", "alaDaHICSvrStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaHICSvrRole"), ("ALCATEL-IND1-DA-MIB", "alaDaHICSvrConnection"), ("ALCATEL-IND1-DA-MIB", "alaDaHICSvrRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaHICAllowedIpAddrType"), ("ALCATEL-IND1-DA-MIB", "alaDaHICAllowedIpAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaHICAllowedIpMaskType"), ("ALCATEL-IND1-DA-MIB", "alaDaHICAllowedIpMask"), ("ALCATEL-IND1-DA-MIB", "alaDaHICAllowedRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaHICSvrFailChangedPolicyName"), ("ALCATEL-IND1-DA-MIB", "alaDaHICSvrFailRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaHICHostStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaHICGroup = alaDaHICGroup.setStatus('current')
alaDaUNPEdgeTemplateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 23)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPETmpl8021XAuthStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmpl8021XTxPeriodStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmpl8021XTxPeriod"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmpl8021XSuppTimeoutStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmpl8021XSuppTimeOut"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmpl8021XMaxReqStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmpl8021XMaxReq"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmpl8021XPassAltEProf"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmplMacAuthStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmplMacPassAltEProf"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmplClassifStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmplDefEProf"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmplGroupId"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmplAaaProf"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmplRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmplRedirectPortBounce"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmplFailurePolicy"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmplBypassStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmplMacAllowEap"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmplAdminControlledDirections"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmplTrustTagStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmplForceL3Learning"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPETmplForceL3LearningPortBounce"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPEdgeTemplateGroup = alaDaUNPEdgeTemplateGroup.setStatus('deprecated')
alaDaUNPEdgeProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 24)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeProfQosPolicyList"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeProfLocationPolicy"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeProfPeriodPolicy"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeProfHICStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeProfCPortalAuth"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeProfAuthStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeProfMobileTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeProfDHCPEnforcment"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeProfCPortalProf"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeProfRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeProfRedirectStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeProfKerberosStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeProfMaxIngressBw"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeProfMaxEgressBw"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeProfMaxIngressDepth"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeProfMaxEgressDepth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPEdgeProfileGroup = alaDaUNPEdgeProfileGroup.setStatus('deprecated')
alaDaUNPClassificationRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 25)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPPortRuleEdgeProf"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortRuleProfile1"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortRuleProfile2"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortRuleProfile3"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPClassificationRuleGroup = alaDaUNPClassificationRuleGroup.setStatus('current')
alaDaUNPGroupIdEdgeClassifyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 26)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPGroupRuleEdgeProf"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPGroupRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPGroupRuleVlanTag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPGroupIdEdgeClassifyGroup = alaDaUNPGroupIdEdgeClassifyGroup.setStatus('deprecated')
alaDaUNPMacOuiGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 27)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPMacOuiRuleEdgeProfile"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacOuiRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacOuiRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacOuiRuleProfile1"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacOuiRuleProfile2"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacOuiRuleProfile3"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPMacOuiGroup = alaDaUNPMacOuiGroup.setStatus('current')
alaDaUNPEndPointGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 28)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPEndPoinEdgeProfile"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEndPoinRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEndPoinProfile1"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEndPoinProfile2"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEndPoinProfile3"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEndPoinVlanTag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPEndPointGroup = alaDaUNPEndPointGroup.setStatus('current')
alaDaUNPAuthRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 29)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthRuleEdgeProfile"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthRuleProfile1"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthRuleProfile2"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPAuthRuleProfile3"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPAuthRuleGroup = alaDaUNPAuthRuleGroup.setStatus('current')
alaDaUNPRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 30)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRulePrecedenceNum"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRuleEdgeProfile"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRulePort"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRulePortHigh"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRuleGroupId"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRuleMacAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRuleMacRngLoaddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRuleMacRngHiaddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRuleMacOuiAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRuleEndPoin"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRuleAuthType"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRuleIpAddressType"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRuleIpAddress"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRuleIpMaskType"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRuleIpMask"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRuleCustomerDomain"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRuleProfile1"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRuleProfile2"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPClassifRuleProfile3"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPRuleGroup = alaDaUNPRuleGroup.setStatus('current')
alaDaUNPMacPortClassifyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 31)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPMacPortRuleEdgeProf"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacPortRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacPortRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacPortRuleProfile1"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacPortRuleProfile2"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacPortRuleProfile3"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPMacPortClassifyGroup = alaDaUNPMacPortClassifyGroup.setStatus('current')
alaDaUNPIpPortClassifyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 32)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPIpPortRuleEdgeProf"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpPortRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpPortRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpPortRuleProfile1"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpPortRuleProfile2"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpPortRuleProfile3"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpPortRuleMaskType"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpPortRuleMask"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPIpPortClassifyGroup = alaDaUNPIpPortClassifyGroup.setStatus('current')
alaDaUNPMacIpClassifyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 33)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpPortRuleEdgeProf"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpPortRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpPortRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpPortRuleProfile1"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpPortRuleProfile2"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpPortRuleProfile3"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpPortRuleIpMaskType"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpPortRuleIpMask"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPMacIpClassifyGroup = alaDaUNPMacIpClassifyGroup.setStatus('current')
alaDaUNPMacClassifyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 34)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPMacGroupRuleEdgeProf"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacGroupRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacGroupRuleVlanTag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPMacClassifyGroup = alaDaUNPMacClassifyGroup.setStatus('deprecated')
alaDaUNPIpAddressGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 35)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPIpGroupRuleEdgeProf"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpGroupRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpGroupRuleVlanTag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPIpAddressGroup = alaDaUNPIpAddressGroup.setStatus('deprecated')
alaDaUNPMacIpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 36)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpGroupRuleEdgeProf"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpGroupRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacIpGroupRuleVlanTag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPMacIpGroup = alaDaUNPMacIpGroup.setStatus('deprecated')
alaDaUNPUserRoleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 37)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPUserRolePrecedenceNum"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPUserRolePolicyList"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPUserRoleEdgeProfile"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPUserRoleAuthType"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPUserRolePostLoginStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPUserRoleKerberosPostLoginStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPUserRoleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPUserRoleProfile1"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPUserRoleProfile2"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPUserRoleProfile3"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPUserRoleGroup = alaDaUNPUserRoleGroup.setStatus('current')
alaDaUNPRestrictedRoleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 38)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPRstrctedRolePolicyList"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPRstrctedRoleRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPRestrictedRoleGroup = alaDaUNPRestrictedRoleGroup.setStatus('current')
alaDaUNPVlanMappingGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 39)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPVlanMapIdent"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVlanMapRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPVlanMappingGroup = alaDaUNPVlanMappingGroup.setStatus('deprecated')
alaDaUNPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 40)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUnpGroupDescription"), ("ALCATEL-IND1-DA-MIB", "alaDaUnpGroupIdRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPGroup = alaDaUNPGroup.setStatus('deprecated')
alaDaUNPEdgeFlushGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 41)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeFlushPortLow"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeFlushPortHigh"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeFlushType"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgrFlushMac"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeFlushComplete"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPEdgeFlushProfile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPEdgeFlushGroup = alaDaUNPEdgeFlushGroup.setStatus('current')
alaDaUNPMacAddrsRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 42)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRulesEdgeProf"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRulesRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRulesVlanTag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPMacAddrsRuleGroup = alaDaUNPMacAddrsRuleGroup.setStatus('deprecated')
alaDaUNPMacRangesGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 43)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangeEndMacAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangeEdgeProf"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangeRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPMacRangeVlanTag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPMacRangesGroup = alaDaUNPMacRangesGroup.setStatus('deprecated')
alaDaUNPIpMaskGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 44)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPIpMaskRuleEdgeProf"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpMaskRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPIpMaskRuleVlanTag"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPIpMaskGroup = alaDaUNPIpMaskGroup.setStatus('deprecated')
alaDaQMRGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 45)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaQMRPage"), ("ALCATEL-IND1-DA-MIB", "alaDaQMRPath"), ("ALCATEL-IND1-DA-MIB", "alaDaQMRCustomHttpProxyPort"), ("ALCATEL-IND1-DA-MIB", "alaDaQMRPolicyList"), ("ALCATEL-IND1-DA-MIB", "alaDaQMRAllowedIpAddrType"), ("ALCATEL-IND1-DA-MIB", "alaDaQMRAllowedIpAddr"), ("ALCATEL-IND1-DA-MIB", "alaDaQMRAllowedIpMaskType"), ("ALCATEL-IND1-DA-MIB", "alaDaQMRAllowedIpMask"), ("ALCATEL-IND1-DA-MIB", "alaDaQMRAllowedRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaQMRGroup = alaDaQMRGroup.setStatus('current')
alaDaUNPValidityPeriodGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 46)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPValidityPeriodDays"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPValidityPeriodDaysStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPValidityPeriodMonths"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPValidityPeriodMonthsStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPValidityPeriodHour"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPValidityPeriodHourStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPValidityPeriodEndHour"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPValidityPeriodInterval"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPValidityPeriodIntervalStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPValidityPeriodEndInterval"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPValidityPeriodTimezone"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPValidityPeriodTimezoneStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPValidityPeriodActiveStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPValidityPeriodRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPValidityPeriodGroup = alaDaUNPValidityPeriodGroup.setStatus('current')
alaDaUNPLocationPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 47)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPLocationPolicyPort"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPLocationPolicyPortHigh"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPLocationPolicyPortStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPLocationPolicySystemName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPLocationPolicySystemLocation"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPLocationPolicyRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPLocationPolicyGroup = alaDaUNPLocationPolicyGroup.setStatus('current')
alaDaUNPRedirectAllowedServerGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 48)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPRedirectAllowedServerIPType"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPRedirectAllowedServerIP"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPRedirectAllowedMaskIPType"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPRedirectAllowedMaskIP"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPRedirectAllowedRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPRedirectAllowedServerGroup = alaDaUNPRedirectAllowedServerGroup.setStatus('current')
alaDaMacVlanUserExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 49)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaMacVlanUserExtAppName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaMacVlanUserExtGroup = alaDaMacVlanUserExtGroup.setStatus('current')
alaDaUNPVxlanProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 50)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanProfileEncapVal"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanProfileVnid"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanProfileQosPolicyListName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanProfileFarEndIPListName"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanProfileMulticastIPAddressType"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanProfileMulticastIPAddress"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanProfileSapVlanXlation"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanProfileMobileTagStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanProfileMulticastMode"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanProfileRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPVxlanProfileGroup = alaDaUNPVxlanProfileGroup.setStatus('deprecated')
alaDaUNPVxlanFlushGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 51)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanFlushComplete"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanFlushAuthType"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanFlushMacAddress"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanFlushSapIDIfIndex"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanFlushSapIDEncapVal"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanFlushServiceID"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanFlushVxlanProfile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPVxlanFlushGroup = alaDaUNPVxlanFlushGroup.setStatus('deprecated')
alaDaUNPVxlanFarEndIPListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 52)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanFarEndIPListIPAddressCount"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanFarEndIPListRemove"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPVxlanFarEndIPListGroup = alaDaUNPVxlanFarEndIPListGroup.setStatus('current')
alaDaUNPVxlanFarEndIPAddressListGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 53)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPVxlanFarEndIPAddressListRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPVxlanFarEndIPAddressListGroup = alaDaUNPVxlanFarEndIPAddressListGroup.setStatus('current')
alaDaUNPSpbFlushGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 54)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPSpbFlushComplete"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPSpbFlushAuthType"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPSpbFlushMacAddress"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPSpbFlushSapIDIfIndex"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPSpbFlushSapIDEncapVal"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPSpbFlushServiceID"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPSpbFlushSpbProfile"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPSpbFlushGroup = alaDaUNPSpbFlushGroup.setStatus('deprecated')
alaDaKerberosGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 55)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaKerberosGlobalMacMoveStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosGlobalInactivityTimer"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosGlobalPolicy"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosGlobalPolicyStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosClientPktHwDiscardStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosServerPktHwDiscardStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosTotalClientPktRxStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosTotalServerPktRxStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosClientPktSwDiscardStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosServerPktSwDiscardStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosTotalASREQRxStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosTotalASREPRxStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosTotalTGSREQRxStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosTotalTGSREPRxStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosTotalErrorRxStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosGlobalClearStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosGlobalClearPortStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosGlobalServerTimeoutTimer"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosPolicyName"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosPolicyStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosPolicyRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosUserPort"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosUserName"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosUserDomain"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosUserAuthState"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosUserPolicy"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosUserLeftTime"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosUserState"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosPortClearStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosPortClientPktRxStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosPortServerPktRxStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosPortClientPktSwDiscardStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosPortServerPktSwDiscardStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosPortASREQRxStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosPortASREPRxStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosPortTGSREQRxStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosPortTGSREPRxStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosPortErrorRxStats"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosUdpPort"), ("ALCATEL-IND1-DA-MIB", "alaDaKerberosRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaKerberosGroup = alaDaKerberosGroup.setStatus('current')
alaDaUNPVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 56)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPVlanRuleVlanTagPosition"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVlanRuleEdgeProf"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPVlanRuleRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPVlanGroup = alaDaUNPVlanGroup.setStatus('current')
alaDaUNPPortVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 57)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPPortVlanRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPPortVlanGroup = alaDaUNPPortVlanGroup.setStatus('current')
alaDaUNPETmplVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 58)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPETmplVlanRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPETmplVlanGroup = alaDaUNPETmplVlanGroup.setStatus('current')
alaDaUNPUserFlushGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 59)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPUserFlushComplete"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPUserFlushAuthType"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPUserFlushMacAddress"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPUserFlushProfile"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPUserFlushPortStart"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPUserFlushPortEnd"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPUserFlushSapIDIfIndex"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPUserFlushSapIDEncapVal"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPUserFlushServiceID"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPUserFlushGroup = alaDaUNPUserFlushGroup.setStatus('current')
alaDaUNPCustDomainRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 60)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainRuleProfile1"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainRuleProfile2"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainRuleProfile3"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainRuleRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPCustDomainRuleGroup = alaDaUNPCustDomainRuleGroup.setStatus('current')
alaDaUNPPortTemplateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 61)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateAdminState"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateDirection"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateDomainID"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateClassification"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateTrustTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateDynamicService"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateDefaultProfile"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateAAAProfile"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateRedirectPortBounce"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplate8021XAuth"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplate8021XAuthPassAlternate"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplate8021XAuthBypass"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplate8021XAuthFailPolicy"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplate8021XAuthTxPeriod"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplate8021XAuthSuppTimeout"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplate8021XAuthMaxReq"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateMACAuth"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateMACAuthPassAlternate"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateMACAuthAllowEAP"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateForceL3Learning"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateForceL3LearningPortBounce"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPPortTemplateGroup = alaDaUNPPortTemplateGroup.setStatus('current')
alaDaUNPProfileGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 62)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileAuthenticationFlag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMobileTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileCPortalAuthentication"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileRedirect"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileQoSPolicy"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfilePeriodPolicy"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileCPortalProfile"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileLocationPolicy"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileSaaProfile"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileInactivityInterval"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileKerberosAuthentication"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMaxIngressBandwidth"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMaxEgressBandwidth"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMaxIngressDepth"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMaxEgressDepth"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileAFDConfig"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPProfileGroup = alaDaUNPProfileGroup.setStatus('current')
alaDaUNPProfileMapVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 63)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapVlanVlanID"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapVlanRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPProfileMapVlanGroup = alaDaUNPProfileMapVlanGroup.setStatus('current')
alaDaUNPProfileMapSpbGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 64)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapSpbEncapVal"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapSpbIsid"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapSpbBVlan"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapSpbMulticastMode"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapSpbVlanXlation"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapSpbRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPProfileMapSpbGroup = alaDaUNPProfileMapSpbGroup.setStatus('current')
alaDaUNPProfileMapVxlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 65)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapVxlanEncapVal"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapVxlanVnid"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapVxlanFarEndIPList"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapVxlanMulticastIPAddressType"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapVxlanMulticastIPAddress"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapVxlanVlanXlation"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapVxlanMulticastMode"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapVxlanRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPProfileMapVxlanGroup = alaDaUNPProfileMapVxlanGroup.setStatus('current')
alaDaUNPProfileMapStaticGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 66)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapStaticEncapVal"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapStaticServiceID"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPProfileMapStaticRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPProfileMapStaticGroup = alaDaUNPProfileMapStaticGroup.setStatus('current')
alaDaUNPCustDomainMacIpRuleGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 67)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacIpRuleVlanTag"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacIpRuleProfile1"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacIpRuleProfile2"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacIpRuleProfile3"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacIpRuleRowStatus"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacIpRuleIpMaskType"), ("ALCATEL-IND1-DA-MIB", "alaDaUNPCustDomainMacIpRuleIpMask"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPCustDomainMacIpRuleGroup = alaDaUNPCustDomainMacIpRuleGroup.setStatus('current')
alaDaUNPPortTemplateVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 63, 1, 2, 1, 68)).setObjects(("ALCATEL-IND1-DA-MIB", "alaDaUNPPortTemplateVlanRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaDaUNPPortTemplateVlanGroup = alaDaUNPPortTemplateVlanGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-DA-MIB", alaDaUNPUserFlushProfile=alaDaUNPUserFlushProfile, alaDaUNPPortTemplateGroup=alaDaUNPPortTemplateGroup, alaDaUNPCustDomainMacIpRuleIpAddr=alaDaUNPCustDomainMacIpRuleIpAddr, alaDaUNPEdgeProfEntry=alaDaUNPEdgeProfEntry, alaDaCPortalMode=alaDaCPortalMode, alaDaUNPSpbFlushComplete=alaDaUNPSpbFlushComplete, alaDaUnpMCLAGId=alaDaUnpMCLAGId, alaDaUNPETmplVlanVID=alaDaUNPETmplVlanVID, alaDaUNPVxlanFlushSapIDEncapVal=alaDaUNPVxlanFlushSapIDEncapVal, alaDaUNPIpMaskGroup=alaDaUNPIpMaskGroup, alaDaUNPPort8021XTxPeriod=alaDaUNPPort8021XTxPeriod, alaDaUNPCustDomainIpNetRuleVxlanProfileName=alaDaUNPCustDomainIpNetRuleVxlanProfileName, alaDaUNPETmpl8021XTxPeriod=alaDaUNPETmpl8021XTxPeriod, alaDaUNPPortTemplateRowStatus=alaDaUNPPortTemplateRowStatus, alaDaUNPCustDomainMacRangeRuleTable=alaDaUNPCustDomainMacRangeRuleTable, alaDaUNPETmplTable=alaDaUNPETmplTable, alaDaHICGlobalConfig=alaDaHICGlobalConfig, alaDaUNPIpNetRuleMask=alaDaUNPIpNetRuleMask, alaDaHICWebAgentDownloadUrl=alaDaHICWebAgentDownloadUrl, alaDaSaaProfileName=alaDaSaaProfileName, alaDaUNPMacRangeStartMacAddr=alaDaUNPMacRangeStartMacAddr, alaDaUNPValidityPeriodInterval=alaDaUNPValidityPeriodInterval, alaDaUNPRedirectPauseTimer=alaDaUNPRedirectPauseTimer, alaDaUNPMacGroupRuleAddr=alaDaUNPMacGroupRuleAddr, alaDaMacUserGroup=alaDaMacUserGroup, alaDaHICAllowedTable=alaDaHICAllowedTable, alaDaUNPETmplVlanTable=alaDaUNPETmplVlanTable, alaDaKerberosTotalTGSREQRxStats=alaDaKerberosTotalTGSREQRxStats, alaDaUNPEndPoinRuleTable=alaDaUNPEndPoinRuleTable, alaDaUNPUserFlushServiceID=alaDaUNPUserFlushServiceID, alaDaHICAllowedEntry=alaDaHICAllowedEntry, alaDaKerberosMIBObjects=alaDaKerberosMIBObjects, alaDaUNPVxlanProfileMulticastMode=alaDaUNPVxlanProfileMulticastMode, alaDaUNPCustDomainMacRangeRuleLoAddr=alaDaUNPCustDomainMacRangeRuleLoAddr, alaDaUNPUserRoleProfile2=alaDaUNPUserRoleProfile2, alaDaQMRAllowedName=alaDaQMRAllowedName, alaDaUNPPortTemplateClassification=alaDaUNPPortTemplateClassification, alaDaKerberosUdpPort=alaDaKerberosUdpPort, alaDaUNPCustDomainRuleEntry=alaDaUNPCustDomainRuleEntry, alaDaUNPSpbFlushEntry=alaDaUNPSpbFlushEntry, PYSNMP_MODULE_ID=alcatelIND1DaMIB, alaDaUNPMacRangeRuleEntry=alaDaUNPMacRangeRuleEntry, alaDaUNPCustDomainMacRuleTable=alaDaUNPCustDomainMacRuleTable, alaDaUNPPort8021XPassAltUserNetProfName=alaDaUNPPort8021XPassAltUserNetProfName, alaDaUserNetProfileMaxIngressDepth=alaDaUserNetProfileMaxIngressDepth, alaDaUNPVxlanFarEndIPAddressListRowStatus=alaDaUNPVxlanFarEndIPAddressListRowStatus, alaDaUNPCustDomainEvbGpIdRuleEntry=alaDaUNPCustDomainEvbGpIdRuleEntry, alaDaUNPUserRoleTable=alaDaUNPUserRoleTable, alaDaUNPPortMaxIngressBw=alaDaUNPPortMaxIngressBw, alaDaUNPCustDomainIpNetRuleAddr=alaDaUNPCustDomainIpNetRuleAddr, alaDaCPortalProfEntry=alaDaCPortalProfEntry, alaDaUNPPortTemplate8021XAuthSuppTimeout=alaDaUNPPortTemplate8021XAuthSuppTimeout, alaDaUNPCustDomainMacIpRuleVlanTag=alaDaUNPCustDomainMacIpRuleVlanTag, alaDaUNPCustDomainMacRangeRuleMCLagConfigStatus=alaDaUNPCustDomainMacRangeRuleMCLagConfigStatus, alaDaCPortalProfDomainUNPProfile=alaDaCPortalProfDomainUNPProfile, alaDaUNPMacIpPortRuleProfile2=alaDaUNPMacIpPortRuleProfile2, alaDaKerberosServerPktHwDiscardStats=alaDaKerberosServerPktHwDiscardStats, alaDaUNPCustDomainMacIpRuleRowStatus=alaDaUNPCustDomainMacIpRuleRowStatus, alaDaUNPMacGroupRuleTable=alaDaUNPMacGroupRuleTable, alaDaUNPUserFlushGroup=alaDaUNPUserFlushGroup, alaDaUNPVxlanProfileMulticastIPAddressType=alaDaUNPVxlanProfileMulticastIPAddressType, alaDaUNPLocationPolicyEntry=alaDaUNPLocationPolicyEntry, alaDaUNPEdgeProfMaxIngressDepth=alaDaUNPEdgeProfMaxIngressDepth, alaDaUNPCustDomainMacIpRuleProfile2=alaDaUNPCustDomainMacIpRuleProfile2, alaDaUNPPortVlanTable=alaDaUNPPortVlanTable, alaDaUNPPortRuleEntry=alaDaUNPPortRuleEntry, alaDaUNPSpbFlushServiceID=alaDaUNPSpbFlushServiceID, alaDaUNPClassifRuleProfile2=alaDaUNPClassifRuleProfile2, alaDaMacUserLoginTimeStamp=alaDaMacUserLoginTimeStamp, alaDaUNPVxlanFlushVxlanProfile=alaDaUNPVxlanFlushVxlanProfile, alaDaUNPETmpl8021XTxPeriodStatus=alaDaUNPETmpl8021XTxPeriodStatus, alaDaKerberosUserPolicy=alaDaKerberosUserPolicy, alaDaUNPAuthRuleVlanTag=alaDaUNPAuthRuleVlanTag, alaDaUNPVlanTagRuleEntry=alaDaUNPVlanTagRuleEntry, alaDaUNPCustDomainMacRangeRuleRowStatus=alaDaUNPCustDomainMacRangeRuleRowStatus, alaDaUNPClassifRuleMacAddr=alaDaUNPClassifRuleMacAddr, alaDaKerberosPolicyName=alaDaKerberosPolicyName, alaDaKerberosPolicyRowStatus=alaDaKerberosPolicyRowStatus, alaDaKerberosPortASREPRxStats=alaDaKerberosPortASREPRxStats, alaDaMacVlanUserRestAccessStatus=alaDaMacVlanUserRestAccessStatus, alaDaUNPUserFlushPortEnd=alaDaUNPUserFlushPortEnd, alaDaUNPProfileMapStaticRowStatus=alaDaUNPProfileMapStaticRowStatus, alaDaUNPETmplFailurePolicy=alaDaUNPETmplFailurePolicy, alaDaUNPCustDomainMacIpRuleProfile3=alaDaUNPCustDomainMacIpRuleProfile3, alaDaKerberosTotalASREQRxStats=alaDaKerberosTotalASREQRxStats, alaDaUNPClassifRuleProfile3=alaDaUNPClassifRuleProfile3, alaDaMacVlanUserExtTable=alaDaMacVlanUserExtTable, alaDaUNPEdgeFlushPortHigh=alaDaUNPEdgeFlushPortHigh, alaDaMacVlanUserRedirectionUrl=alaDaMacVlanUserRedirectionUrl, alaDaSpbProfileMobileTag=alaDaSpbProfileMobileTag, alaDaUNPProfileTable=alaDaUNPProfileTable, alaDaUNPPortTemplate8021XAuthBypass=alaDaUNPPortTemplate8021XAuthBypass, alaDaUNPVxlanFarEndIPListGroup=alaDaUNPVxlanFarEndIPListGroup, alaDaUNPETmplName=alaDaUNPETmplName, alaDaUNPValidityPeriodActiveStatus=alaDaUNPValidityPeriodActiveStatus, alaDaUNPUserFlushPortStart=alaDaUNPUserFlushPortStart, alaDaKerberosRowStatus=alaDaKerberosRowStatus, alaDaUNPValidityPeriodRowStatus=alaDaUNPValidityPeriodRowStatus, alaDaUNPCustDomainIpNetRuleMCLagConfigStatus=alaDaUNPCustDomainIpNetRuleMCLagConfigStatus, alaDaCPortalAuthPassTable=alaDaCPortalAuthPassTable, AlaDaMacLearntState=AlaDaMacLearntState, alaDaUNPProfileCPortalProfile=alaDaUNPProfileCPortalProfile, alaDaUNPSpbFlushGroup=alaDaUNPSpbFlushGroup, alaDaUNPIpGroupRuleAddrType=alaDaUNPIpGroupRuleAddrType, alaDaUNPPortTemplateRedirectPortBounce=alaDaUNPPortTemplateRedirectPortBounce, alaDaUnpMacAddr=alaDaUnpMacAddr, alaDaUNPMacIpPortRuleEntry=alaDaUNPMacIpPortRuleEntry, alaDaMacVlanUserSpbBVlan=alaDaMacVlanUserSpbBVlan, alaDaUNPCustDomainRuleRowStatus=alaDaUNPCustDomainRuleRowStatus, alaDaUNPVxlanFlushGroup=alaDaUNPVxlanFlushGroup, alaDaUNPPortTable=alaDaUNPPortTable, alaDaMacVlanUserIntfNum=alaDaMacVlanUserIntfNum, alaDaUNPPortTemplateForceL3LearningPortBounce=alaDaUNPPortTemplateForceL3LearningPortBounce, alaDaUNPProfileMapVxlanRowStatus=alaDaUNPProfileMapVxlanRowStatus, alaDaUNPMacIpGroupRuleMacAddr=alaDaUNPMacIpGroupRuleMacAddr, alaDaMacVlanUserIpAddress=alaDaMacVlanUserIpAddress, alaDaUNPUserFlushIndex=alaDaUNPUserFlushIndex, alaDaUNPProfileMapStaticTable=alaDaUNPProfileMapStaticTable, alaDaUNPGlobalGroup=alaDaUNPGlobalGroup, alaDaUNPCustDomainRuleGroup=alaDaUNPCustDomainRuleGroup, alaDaCPortalProfDomainEntry=alaDaCPortalProfDomainEntry, alaDaSpbProfileBVlan=alaDaSpbProfileBVlan, alaDaUNPCustDomainMacRuleVlanTag=alaDaUNPCustDomainMacRuleVlanTag, alaDaMacVlanUserMACAddress=alaDaMacVlanUserMACAddress, alaDaCPortalProfMode=alaDaCPortalProfMode, alaDaHICAllowedIpMaskType=alaDaHICAllowedIpMaskType, alaDaKerberosPolicyConfigEntry=alaDaKerberosPolicyConfigEntry, alaDaCPortalProfDomainAuthPolicyListName=alaDaCPortalProfDomainAuthPolicyListName, alaDaUNPPort8021XPassAltSpbProfName=alaDaUNPPort8021XPassAltSpbProfName, alaDaUnpName=alaDaUnpName, alaDaUNPPortIngressSourceProfile=alaDaUNPPortIngressSourceProfile, alaDaUNPProfileMapStaticGroup=alaDaUNPProfileMapStaticGroup, alaDaUNPEdgeProfPeriodPolicy=alaDaUNPEdgeProfPeriodPolicy, alaDaHICAllowedIpAddr=alaDaHICAllowedIpAddr, alaDaUNPMacRuleAddr=alaDaUNPMacRuleAddr, alaDaUnpCustomerDomainId=alaDaUnpCustomerDomainId, alaDaUNPAuthServerDownProfile2=alaDaUNPAuthServerDownProfile2, alaDaUNPAuthServerDownUNPMCLagConfigStatus=alaDaUNPAuthServerDownUNPMCLagConfigStatus, alaDaUNPCustDomainMacRuleProfile3=alaDaUNPCustDomainMacRuleProfile3, alaDaKerberosGlobalPolicy=alaDaKerberosGlobalPolicy, alaDaUNPCustDomainMacRuleEdgeProfileName=alaDaUNPCustDomainMacRuleEdgeProfileName, alaDaUNPMacIpClassifyGroup=alaDaUNPMacIpClassifyGroup, alaDaUNPProfileMapVlanVlanID=alaDaUNPProfileMapVlanVlanID, alaDaUNPIpAddressGroup=alaDaUNPIpAddressGroup, alaDaUNPAuthRuleGroup=alaDaUNPAuthRuleGroup, alaDaUNPGroup=alaDaUNPGroup, alaDaUNPPortMaxEgressDepth=alaDaUNPPortMaxEgressDepth, alaDaSpbProfileRowStatus=alaDaSpbProfileRowStatus, alaDaUNPCustDomainMacRangeRuleProfile3=alaDaUNPCustDomainMacRangeRuleProfile3, alaDaUNPMacPortClassifyGroup=alaDaUNPMacPortClassifyGroup, alaDaUNPEndPoinRuleId=alaDaUNPEndPoinRuleId, alaDaUNPProfileAuthenticationFlag=alaDaUNPProfileAuthenticationFlag, alaDaUNPCustDomainVlanTagRuleSpbProfileName=alaDaUNPCustDomainVlanTagRuleSpbProfileName, alaDaUNPPortRowStatus=alaDaUNPPortRowStatus, alaDaUNPProfileInactivityInterval=alaDaUNPProfileInactivityInterval, alaDaSaaProfileJitterThreshold=alaDaSaaProfileJitterThreshold, alaDaUNPCustDomainEvbGpIdRuleGroupId=alaDaUNPCustDomainEvbGpIdRuleGroupId, alaDaUNPPortTemplate8021XAuthMaxReq=alaDaUNPPortTemplate8021XAuthMaxReq, alaDaUNPCustDomainEvbGpIdRuleVxlanProfileName=alaDaUNPCustDomainEvbGpIdRuleVxlanProfileName, alaDaUNPPort8021XMaxReq=alaDaUNPPort8021XMaxReq, alaDaUNPMacIpPortRuleVlanTag=alaDaUNPMacIpPortRuleVlanTag, alaDaUNPPortTemplateAdminState=alaDaUNPPortTemplateAdminState, alaDaKerberosUserName=alaDaKerberosUserName, alaDaUNPAuthRuleProfile1=alaDaUNPAuthRuleProfile1, alaDaUNPIpPortRuleEdgeProf=alaDaUNPIpPortRuleEdgeProf, alaDaUNPGroupRuleRowStatus=alaDaUNPGroupRuleRowStatus, alaDaCPortalProfDomainRowStatus=alaDaCPortalProfDomainRowStatus, alaDaKerberosClientPktSwDiscardStats=alaDaKerberosClientPktSwDiscardStats, alaDaUNPEdgeProfAuthStatus=alaDaUNPEdgeProfAuthStatus, alaDaUNPForceL3LearningPortBounce=alaDaUNPForceL3LearningPortBounce, alaDaCPortalAuthRowStatus=alaDaCPortalAuthRowStatus, alaDaHICSvrFailMode=alaDaHICSvrFailMode, alaDaUNPAuthRuleProfile2=alaDaUNPAuthRuleProfile2, alaDaUNPEdgeFlushTable=alaDaUNPEdgeFlushTable, alaDaUNPValidityPeriodDays=alaDaUNPValidityPeriodDays, alaDaUNPVxlanFlushIndex=alaDaUNPVxlanFlushIndex, alaDaUNPProfileMapVxlanMulticastIPAddress=alaDaUNPProfileMapVxlanMulticastIPAddress, alaDaNotificationsGroup=alaDaNotificationsGroup, alaDaUNPMacOuiGroup=alaDaUNPMacOuiGroup, alaDaUNPValidityPeriodTable=alaDaUNPValidityPeriodTable, alaDaUNPMacOuiRuleProfile3=alaDaUNPMacOuiRuleProfile3, alaDaUNPAuthRuleEdgeProfile=alaDaUNPAuthRuleEdgeProfile, alaDaUNPUserFlushTable=alaDaUNPUserFlushTable, alaDaKerberosTotalErrorRxStats=alaDaKerberosTotalErrorRxStats, alaDaMacVlanUserSIPCallType=alaDaMacVlanUserSIPCallType, alaDaUNPIpPortRuleRowStatus=alaDaUNPIpPortRuleRowStatus, alaDaMacVlanUserRole=alaDaMacVlanUserRole, alaDaUNPEdgeProfLocationPolicy=alaDaUNPEdgeProfLocationPolicy, alaDaUNPUserRoleEdgeProfile=alaDaUNPUserRoleEdgeProfile, alaDaUNPCustDomainMacRangeRuleHiAddr=alaDaUNPCustDomainMacRangeRuleHiAddr, alaDaUNPGroupRuleVlanTag=alaDaUNPGroupRuleVlanTag, alaDaKerberosUserLeftTime=alaDaKerberosUserLeftTime, alaDaUNP8021XEdgeUserFlush=alaDaUNP8021XEdgeUserFlush, alaDaHICSvrRowStatus=alaDaHICSvrRowStatus, alaDaCPortalProfDomainUNPProfileChange=alaDaCPortalProfDomainUNPProfileChange, alaDaUNPETmplVlanEntry=alaDaUNPETmplVlanEntry, alaDaUNPVlanTagRuleMCLagConfigStatus=alaDaUNPVlanTagRuleMCLagConfigStatus, alaDaUNPProfilePeriodPolicy=alaDaUNPProfilePeriodPolicy, alaDaUNPDynamicVlanMCLagConfigStatus=alaDaUNPDynamicVlanMCLagConfigStatus, alaDaUnpCustomerDomainDesc=alaDaUnpCustomerDomainDesc, alaDaUNPAuthServerDowneEdgeProfTimeout=alaDaUNPAuthServerDowneEdgeProfTimeout, alaDaNotificationObjectGroup=alaDaNotificationObjectGroup, alaDaUNPValidityPeriodName=alaDaUNPValidityPeriodName, alaDaQMRAllowedIpAddrType=alaDaQMRAllowedIpAddrType, alaDaKerberosPortClientPktSwDiscardStats=alaDaKerberosPortClientPktSwDiscardStats, alaDaUNPUserFlushSapIDEncapVal=alaDaUNPUserFlushSapIDEncapVal, alcatelIND1DaMIB=alcatelIND1DaMIB, alaDaUNPMacRulesVlanTag=alaDaUNPMacRulesVlanTag, alaDaUNPETmplGroupId=alaDaUNPETmplGroupId, alaDaUNPMacRangeRuleProfileName=alaDaUNPMacRangeRuleProfileName, alaDaKerberosUserAuthState=alaDaKerberosUserAuthState, alaDaUNPPortDomainID=alaDaUNPPortDomainID, alaDaUNPCustDomainMacRangeRuleProfileName=alaDaUNPCustDomainMacRangeRuleProfileName, alaDaUNPLocationPolicyPortHigh=alaDaUNPLocationPolicyPortHigh, alaDaUNPGroupIdEdgeClassifyGroup=alaDaUNPGroupIdEdgeClassifyGroup, alaDaSaaProfileEntry=alaDaSaaProfileEntry, alaDaUNPMacRulesRowStatus=alaDaUNPMacRulesRowStatus, alaDaUNPProfileKerberosAuthentication=alaDaUNPProfileKerberosAuthentication, alaDaCPortalUNPProfile=alaDaCPortalUNPProfile, alaDaUNPClassifRuleIpMask=alaDaUNPClassifRuleIpMask, alaDaUNPPortForceL3LearningPortBounce=alaDaUNPPortForceL3LearningPortBounce, alaDaUNPIpPortRuleAddr=alaDaUNPIpPortRuleAddr, alaDaUNPProfileMapSpbVlanXlation=alaDaUNPProfileMapSpbVlanXlation, alaDaUNPCustDomainMacIpRuleTable=alaDaUNPCustDomainMacIpRuleTable, alaDaCPortalSuccRedirectUrl=alaDaCPortalSuccRedirectUrl, alaDaUNPCustDomainIpNetRuleEntry=alaDaUNPCustDomainIpNetRuleEntry, alaDaKerberosGlobalPolicyStatus=alaDaKerberosGlobalPolicyStatus, alaDaHICSvrKey=alaDaHICSvrKey, alaDaUNPSpbFlushTable=alaDaUNPSpbFlushTable, alaDaUNPProfileMapVxlanGroup=alaDaUNPProfileMapVxlanGroup, alaDaCPortalProxyPort=alaDaCPortalProxyPort, alaDaUNPGlobalConfiguration=alaDaUNPGlobalConfiguration, alaDaUNPMacGroupRuleId=alaDaUNPMacGroupRuleId, alaDaUNPCustDomainVlanTagRuleGroup=alaDaUNPCustDomainVlanTagRuleGroup, alaDaHICSvrFailChangedPolicyName=alaDaHICSvrFailChangedPolicyName, alaDaQMRPage=alaDaQMRPage, alaDaUNPVxlanProfileEntry=alaDaUNPVxlanProfileEntry, alaDaUNPPortTemplateEntry=alaDaUNPPortTemplateEntry, alaDaUNPCustDomainIpNetRuleTable=alaDaUNPCustDomainIpNetRuleTable, alaDaUNPETmplDefEProf=alaDaUNPETmplDefEProf, alaDaMacVlanUserEntry=alaDaMacVlanUserEntry, alaDaUNPCustDomainIpNetRuleEdgeProfile=alaDaUNPCustDomainIpNetRuleEdgeProfile, alaDaUNPIpPortRuleNum=alaDaUNPIpPortRuleNum, alaDaUNPPortRedirectPortBounce=alaDaUNPPortRedirectPortBounce, alaDaUNPETmplVlanGroup=alaDaUNPETmplVlanGroup, alaDaUNPPortAaaProfile=alaDaUNPPortAaaProfile, alaDaUNPIpGroupRuleEntry=alaDaUNPIpGroupRuleEntry, alaDaUNPClassifRulePortHigh=alaDaUNPClassifRulePortHigh, AlaMultiChassisConfigStatus=AlaMultiChassisConfigStatus, alaDaUNPPortAFDConfig=alaDaUNPPortAFDConfig, alaDaMacVlanUserClassifProfRule=alaDaMacVlanUserClassifProfRule, alaDaHICAllowedRowStatus=alaDaHICAllowedRowStatus, alaDaKerberosUserMac=alaDaKerberosUserMac, alaDaUNPProfileEntry=alaDaUNPProfileEntry)
mibBuilder.exportSymbols("ALCATEL-IND1-DA-MIB", alaDaKerberosPolicyDomainName=alaDaKerberosPolicyDomainName, alaDaUNPClassifRuleMacOuiAddr=alaDaUNPClassifRuleMacOuiAddr, alaDaUNPClassifRuleEntry=alaDaUNPClassifRuleEntry, alaDaUserNetProfileMobileTag=alaDaUserNetProfileMobileTag, alaDaUNPEdgeProfCPortalAuth=alaDaUNPEdgeProfCPortalAuth, alaDaUNPRuleGroup=alaDaUNPRuleGroup, alaDaUNPIpPortRuleVlanTag=alaDaUNPIpPortRuleVlanTag, alaDaUNPMacGroupRuleEdgeProf=alaDaUNPMacGroupRuleEdgeProf, alaDaUNPPortRuleVlanTag=alaDaUNPPortRuleVlanTag, alaDaMacUserName=alaDaMacUserName, alaDaUNPProfileMapVxlanVlanXlation=alaDaUNPProfileMapVxlanVlanXlation, alaDaUNPEdgeFlushProfile=alaDaUNPEdgeFlushProfile, alaDaUNPCustDomainIpNetRuleSpbProfileName=alaDaUNPCustDomainIpNetRuleSpbProfileName, alaDaUNPMacRulesTable=alaDaUNPMacRulesTable, alaDaUNPPortMacAllowEap=alaDaUNPPortMacAllowEap, alaDaUNPIpMaskRuleEdgeProf=alaDaUNPIpMaskRuleEdgeProf, alaDaUNPCustDomainEvbGpIdRuleCustomerDomainId=alaDaUNPCustDomainEvbGpIdRuleCustomerDomainId, alaDaUNPCustDomainMacRangeRuleSpbProfileName=alaDaUNPCustDomainMacRangeRuleSpbProfileName, alaDaCPortalProfTable=alaDaCPortalProfTable, alaDaUNPEdgeProfKerberosStatus=alaDaUNPEdgeProfKerberosStatus, alaDaUNPCustDomainMacRuleAddr=alaDaUNPCustDomainMacRuleAddr, alaDaMacVlanUserServiceSapIDEncapVal=alaDaMacVlanUserServiceSapIDEncapVal, alaDaUNPVlanMapEntry=alaDaUNPVlanMapEntry, alaDaUNPVxlanProfileSapVlanXlation=alaDaUNPVxlanProfileSapVlanXlation, alaDaUnpGroupDescription=alaDaUnpGroupDescription, alaDaMacVlanUserTable=alaDaMacVlanUserTable, alaDaHICSvrFailPolicyEntry=alaDaHICSvrFailPolicyEntry, alaDaUNPCustDomainMacIpRuleGroup=alaDaUNPCustDomainMacIpRuleGroup, alaDaKerberosPortASREQRxStats=alaDaKerberosPortASREQRxStats, alaIND1DaMIBGroups=alaIND1DaMIBGroups, alaDaUNPProfileMapVxlanEntry=alaDaUNPProfileMapVxlanEntry, alaDaUNPProfileMapSpbEntry=alaDaUNPProfileMapSpbEntry, alaDaUNPCustDomainMacRangeRuleEdgeProfileName=alaDaUNPCustDomainMacRangeRuleEdgeProfileName, alaDaKerberosPortServerPktRxStats=alaDaKerberosPortServerPktRxStats, alaDaUNPEdgeProfCPortalProf=alaDaUNPEdgeProfCPortalProf, alaDaUNPEdgeFlushPortLow=alaDaUNPEdgeFlushPortLow, alaDaUNPIpNetRuleRowStatus=alaDaUNPIpNetRuleRowStatus, alaDaUNPVlanMapTable=alaDaUNPVlanMapTable, alaDaHICBgPollInterval=alaDaHICBgPollInterval, alaDaUNPPort8021XSuppTimeoutStatus=alaDaUNPPort8021XSuppTimeoutStatus, alaDaUNPPortRuleProfile3=alaDaUNPPortRuleProfile3, alaDaUnpCustomerDomainRowStatus=alaDaUnpCustomerDomainRowStatus, alaDaUNPClassifRulePort=alaDaUNPClassifRulePort, alaDaUNPVlanTagRuleVlan=alaDaUNPVlanTagRuleVlan, alaDaUNPIpGroupRuleNum=alaDaUNPIpGroupRuleNum, alaDaUNPUserFlushMacAddress=alaDaUNPUserFlushMacAddress, alaIND1DaMIBCompliances=alaIND1DaMIBCompliances, alaDaUNPAuthRuleTable=alaDaUNPAuthRuleTable, alaDaUNPRstrctedRoleRowStatus=alaDaUNPRstrctedRoleRowStatus, alaDaUNPProfileMaxIngressBandwidth=alaDaUNPProfileMaxIngressBandwidth, alaDaUNPEndPointGroup=alaDaUNPEndPointGroup, alaDaMacUserAuthtype=alaDaMacUserAuthtype, alaDaMacVlanUserAuthtype=alaDaMacVlanUserAuthtype, alaDaUNPUserFlushEntry=alaDaUNPUserFlushEntry, alaDaUNPIpMaskRuleMaskType=alaDaUNPIpMaskRuleMaskType, alaDaCPortalProfUNPProfile=alaDaCPortalProfUNPProfile, alaDaUNPClassifRulePrecedenceNum=alaDaUNPClassifRulePrecedenceNum, alaDaUNPProfileMobileTag=alaDaUNPProfileMobileTag, alaDaUNPSpbFlushSapIDEncapVal=alaDaUNPSpbFlushSapIDEncapVal, alaDaUNPProfileMapStaticEntry=alaDaUNPProfileMapStaticEntry, alaDaUNPForceL3Learning=alaDaUNPForceL3Learning, alaDaUNPPortTemplateMACAuthPassAlternate=alaDaUNPPortTemplateMACAuthPassAlternate, alaDaUNPEdgeProfRowStatus=alaDaUNPEdgeProfRowStatus, alaDaUNPPortTemplateForceL3Learning=alaDaUNPPortTemplateForceL3Learning, alaDaUNPProfileName=alaDaUNPProfileName, alaDaMacVlanUserName=alaDaMacVlanUserName, alaDaUNPCustDomainRuleProfile3=alaDaUNPCustDomainRuleProfile3, alaDaUNPVxlanFarEndIPAddressListGroup=alaDaUNPVxlanFarEndIPAddressListGroup, alaDaUNPNotificationObjects=alaDaUNPNotificationObjects, alaDaUNPVlanMapEdgeProf=alaDaUNPVlanMapEdgeProf, alaDaUnpIpAddr=alaDaUnpIpAddr, alaDaUNPMacRulesEdgeProf=alaDaUNPMacRulesEdgeProf, alaDaUNPETmplForceL3LearningPortBounce=alaDaUNPETmplForceL3LearningPortBounce, alaDaUNPEndPoinRuleRowStatus=alaDaUNPEndPoinRuleRowStatus, alaDaUNPPort8021XTxPeriodStatus=alaDaUNPPort8021XTxPeriodStatus, alaDaUNPETmpl8021XSuppTimeoutStatus=alaDaUNPETmpl8021XSuppTimeoutStatus, alaDaKerberosPolicyStatus=alaDaKerberosPolicyStatus, alaDaUNPIpGroupRuleTable=alaDaUNPIpGroupRuleTable, alaDaKerberosPortStatsTable=alaDaKerberosPortStatsTable, alaDaUNPPortForceL3Learning=alaDaUNPPortForceL3Learning, alaDaUNPRstrctedRoleEntry=alaDaUNPRstrctedRoleEntry, alaDaUNPCustDomainMacRuleProfile1=alaDaUNPCustDomainMacRuleProfile1, alaDaUNPMacOuiRuleVlanTag=alaDaUNPMacOuiRuleVlanTag, alaDaUNPPortGroup=alaDaUNPPortGroup, alaIND1DaMIBObjects=alaIND1DaMIBObjects, alaDaCPortalProfSuccRedirectUrl=alaDaCPortalProfSuccRedirectUrl, alaDaUNPPortVlanEntry=alaDaUNPPortVlanEntry, alaDaCPortalProfRetryCnt=alaDaCPortalProfRetryCnt, alaDaCPortalProfRowStatus=alaDaCPortalProfRowStatus, alaDaUNPPortTemplateDomainID=alaDaUNPPortTemplateDomainID, alaDaUNPMacPortRuleProfile2=alaDaUNPMacPortRuleProfile2, alaDaUNPPortMaxIngressBwSource=alaDaUNPPortMaxIngressBwSource, alaDaUNPVxlanFlushComplete=alaDaUNPVxlanFlushComplete, alaDaUNPCustDomainVlanTagRuleRowStatus=alaDaUNPCustDomainVlanTagRuleRowStatus, alaDaMacUserMACAddress=alaDaMacUserMACAddress, alaDaUNPPortMacPassEdgeProfName=alaDaUNPPortMacPassEdgeProfName, alaDaCPortalMIBObjects=alaDaCPortalMIBObjects, alaDaUNPPortMCLagConfigStatus=alaDaUNPPortMCLagConfigStatus, alaDaMacVlanUserServiceSapIDIfIndex=alaDaMacVlanUserServiceSapIDIfIndex, alaDaUNPSpbFlushIndex=alaDaUNPSpbFlushIndex, alaDaHICGroup=alaDaHICGroup, alaDaUNPCustDomainVlanTagRuleProfile2=alaDaUNPCustDomainVlanTagRuleProfile2, alaDaUNPGroupRuleEdgeProf=alaDaUNPGroupRuleEdgeProf, alaDaUNPValidityPeriodEntry=alaDaUNPValidityPeriodEntry, alaDaUNPETmplRedirectPortBounce=alaDaUNPETmplRedirectPortBounce, alaDaUNPPortMacAuthFlag=alaDaUNPPortMacAuthFlag, alaDaUNPPortMaxEgressBwSource=alaDaUNPPortMaxEgressBwSource, alaDaQMRAllowedEntry=alaDaQMRAllowedEntry, alaDaUNPIpNetRuleEntry=alaDaUNPIpNetRuleEntry, alaDaUNPLocationPolicyGroup=alaDaUNPLocationPolicyGroup, alaDaUNPVxlanProfileRowStatus=alaDaUNPVxlanProfileRowStatus, alaDaMacVlanUserServerMessage=alaDaMacVlanUserServerMessage, alaDaMacVlanUserAuthRetryCount=alaDaMacVlanUserAuthRetryCount, alaDaUNPClassifRuleIpAddressType=alaDaUNPClassifRuleIpAddressType, alaDaUNPPortGroupId=alaDaUNPPortGroupId, alaDaCPortalAuthUNPProfile=alaDaCPortalAuthUNPProfile, alaDaUNPEndPoinRuleEntry=alaDaUNPEndPoinRuleEntry, alaDaUNPMacIpPortRuleMacAddr=alaDaUNPMacIpPortRuleMacAddr, alaDaUNPSpbFlushMacAddress=alaDaUNPSpbFlushMacAddress, alaDaUNPPortTemplateMACAuthAllowEAP=alaDaUNPPortTemplateMACAuthAllowEAP, alaDaUNPETmplMacAllowEap=alaDaUNPETmplMacAllowEap, alaDaUNPVlanMapIdent=alaDaUNPVlanMapIdent, alaDaUNPIpMaskRuleVlanTag=alaDaUNPIpMaskRuleVlanTag, alaDaUNPMacRuleTable=alaDaUNPMacRuleTable, alaDaUnpGroupIdRowStatus=alaDaUnpGroupIdRowStatus, alaDaUNPCustDomainEvbGpIdRuleVlanProfileName=alaDaUNPCustDomainEvbGpIdRuleVlanProfileName, alaDaUNPCustDomainIpNetRuleProfile1=alaDaUNPCustDomainIpNetRuleProfile1, alaDaUNPPortIfIndex=alaDaUNPPortIfIndex, alaDaUNPPortDynamicService=alaDaUNPPortDynamicService, alaDaUNPUserRoleRowStatus=alaDaUNPUserRoleRowStatus, alaDaUNPIpNetRuleTable=alaDaUNPIpNetRuleTable, alaDaCPortalProfAaaProf=alaDaCPortalProfAaaProf, alaDaUNPMacOuiRuleTable=alaDaUNPMacOuiRuleTable, alaDaUNPProfileMapVxlanVnid=alaDaUNPProfileMapVxlanVnid, alaDaUNPMacRuleProfileName=alaDaUNPMacRuleProfileName, alaDaUNPPortVlanRowStatus=alaDaUNPPortVlanRowStatus, alaDaKerberosInactivityTimerExpiryTrap=alaDaKerberosInactivityTimerExpiryTrap, alaDaUNPMacIpPortRuleAddrIpType=alaDaUNPMacIpPortRuleAddrIpType, alaDaCPortalProfAuthPolicyListName=alaDaCPortalProfAuthPolicyListName, alaDaUNPPortTemplateVlanTable=alaDaUNPPortTemplateVlanTable, alaDaMacVlanUserExtIntfNum=alaDaMacVlanUserExtIntfNum, alaDaUNPRedirectServerIP=alaDaUNPRedirectServerIP, alaDaUNPLocationPolicyRowStatus=alaDaUNPLocationPolicyRowStatus, alaDaUNPProfileMapVlanEntry=alaDaUNPProfileMapVlanEntry, alaDaCPortalProfUNPProfileChange=alaDaCPortalProfUNPProfileChange, alaDaUNPETmplAdminControlledDirections=alaDaUNPETmplAdminControlledDirections, alaDaUNPAuthRuleProfile3=alaDaUNPAuthRuleProfile3, alaDaHICSvrPort=alaDaHICSvrPort, alaDaMacVlanUserAuthFailReason=alaDaMacVlanUserAuthFailReason, alaDaUnpCustomerDomainTable=alaDaUnpCustomerDomainTable, alaDaUNPMacRangeEndMacAddr=alaDaUNPMacRangeEndMacAddr, alaDaQMRAllowedIpAddr=alaDaQMRAllowedIpAddr, alaDaUNPValidityPeriodEndInterval=alaDaUNPValidityPeriodEndInterval, alaDaUNPVxlanProfileTable=alaDaUNPVxlanProfileTable, alaDaUNPMacPortRuleVlanTag=alaDaUNPMacPortRuleVlanTag, alaDaMacUserClassificationSource=alaDaMacUserClassificationSource, alaDaUNPProfileMapSpbTable=alaDaUNPProfileMapSpbTable, alaDaUserNetProfileName=alaDaUserNetProfileName, alaDaUserNetProfileVlanID=alaDaUserNetProfileVlanID, alaDaUNPRedirectAllowedServerName=alaDaUNPRedirectAllowedServerName, alaDaUNPMacIpGroupRuleId=alaDaUNPMacIpGroupRuleId, alaDaKerberosUserPort=alaDaKerberosUserPort, alaDaUNPProfileMapVxlanMulticastMode=alaDaUNPProfileMapVxlanMulticastMode, alaDaUNPCustDomainIpNetRuleAddrType=alaDaUNPCustDomainIpNetRuleAddrType, AlaDaClassificationPolicyType=AlaDaClassificationPolicyType, alaDaUNPCustDomainVlanTagRuleProfile3=alaDaUNPCustDomainVlanTagRuleProfile3, alaDaUNPIpNetRuleAddr=alaDaUNPIpNetRuleAddr, alaDaUNPEdgeProfMobileTag=alaDaUNPEdgeProfMobileTag, alaDaKerberosPortTGSREQRxStats=alaDaKerberosPortTGSREQRxStats, alaDaUNPProfileMapSpbGroup=alaDaUNPProfileMapSpbGroup, alaDaUNPProfileMaxIngressDepth=alaDaUNPProfileMaxIngressDepth, alaDaMacVlanUserRoleRule=alaDaMacVlanUserRoleRule, alaDaUNPMacRangeEdgeProf=alaDaUNPMacRangeEdgeProf, AlaDaAuthenticationType=AlaDaAuthenticationType, alaDaUNPCustDomainMacRuleDomainId=alaDaUNPCustDomainMacRuleDomainId, alaDaUserNetProfileEntry=alaDaUserNetProfileEntry, alaDaCPortalRetryCnt=alaDaCPortalRetryCnt, alaDaUNPIpNetRuleVlanTag=alaDaUNPIpNetRuleVlanTag, alaDaKerberosTotalASREPRxStats=alaDaKerberosTotalASREPRxStats, alaDaUNPVlanRuleEntry=alaDaUNPVlanRuleEntry, alaDaUNPPortTemplate8021XAuth=alaDaUNPPortTemplate8021XAuth, alaDaUNPValidityPeriodMonthsStatus=alaDaUNPValidityPeriodMonthsStatus, alaDaUNPCustDomainMacRangeGroup=alaDaUNPCustDomainMacRangeGroup, alaDaMacVlanUserAuthServerUsed=alaDaMacVlanUserAuthServerUsed, alaDaMacVlanUserSIPMediaType=alaDaMacVlanUserSIPMediaType, alaDaUNPMacIpPortRuleIpAddr=alaDaUNPMacIpPortRuleIpAddr, alaDaQMRAllowedIpMask=alaDaQMRAllowedIpMask, alaDaUNPValidityPeriodTimezoneStatus=alaDaUNPValidityPeriodTimezoneStatus, alaDaUNPProfileSaaProfile=alaDaUNPProfileSaaProfile, alaDaKerberosRateLimitExceed=alaDaKerberosRateLimitExceed, alaDaUNPMacRuleEntry=alaDaUNPMacRuleEntry, alaDaUNPIpMaskRuleTable=alaDaUNPIpMaskRuleTable, alaDaUNPVxlanProfileFarEndIPListName=alaDaUNPVxlanProfileFarEndIPListName, alaDaUNPClassifRuleCustomerDomain=alaDaUNPClassifRuleCustomerDomain, alaDaUNPIpGroupRuleRowStatus=alaDaUNPIpGroupRuleRowStatus, alaDaKerberosTotalTGSREPRxStats=alaDaKerberosTotalTGSREPRxStats, alaDaUNPDynamicProfileConfigFlag=alaDaUNPDynamicProfileConfigFlag, alaDaUserNetProfileQosPolicyListName=alaDaUserNetProfileQosPolicyListName, alaDaUNPVlanRuleVlanTag=alaDaUNPVlanRuleVlanTag, alaDaUNPReloadVsiTypeDB=alaDaUNPReloadVsiTypeDB, alaDaUNPVlanTagRuleTable=alaDaUNPVlanTagRuleTable, alaDaHICSvrConnection=alaDaHICSvrConnection, alaDaUNPPortTemplate8021XAuthFailPolicy=alaDaUNPPortTemplate8021XAuthFailPolicy, alaDaUNPIpGroupRuleAddr=alaDaUNPIpGroupRuleAddr, alaDaUNPMacRangeVlanTag=alaDaUNPMacRangeVlanTag, alaDaUNPPortClassificationFlag=alaDaUNPPortClassificationFlag, alaDaUNPMacGroupRuleRowStatus=alaDaUNPMacGroupRuleRowStatus, alaDaUNPVlanRuleEdgeProf=alaDaUNPVlanRuleEdgeProf, alaDaUNPEdgeProfQosPolicyList=alaDaUNPEdgeProfQosPolicyList, alaDaUNPMacIpGroupRuleVlanTag=alaDaUNPMacIpGroupRuleVlanTag, alaDaUNPAuthSrvDownEdgeProfName=alaDaUNPAuthSrvDownEdgeProfName, alaDaUnpIpMask=alaDaUnpIpMask, alaDaUNPCustDomainIpNetRuleProfile3=alaDaUNPCustDomainIpNetRuleProfile3, alaDaUNPPort8021XPassAltVxlanProfName=alaDaUNPPort8021XPassAltVxlanProfName, alaDaUNPMacRulesEntry=alaDaUNPMacRulesEntry, alaDaUNPCustDomainIpNetRuleGroup=alaDaUNPCustDomainIpNetRuleGroup, alaDaUNPAuthServerDownTimeout=alaDaUNPAuthServerDownTimeout, alaDaMacVlanUserIpAddressType=alaDaMacVlanUserIpAddressType, alaDaUNPGroupRuleEntry=alaDaUNPGroupRuleEntry, alaDaUNPCustDomainMacRangeRuleProfile1=alaDaUNPCustDomainMacRangeRuleProfile1, alaDaCPortalGlobalConfig=alaDaCPortalGlobalConfig, alaDaUnpMacAddr1=alaDaUnpMacAddr1, alaDaUNPRedirectAllowedServerIP=alaDaUNPRedirectAllowedServerIP, alaDaUNPCustDomainMacRangeRuleDomainId=alaDaUNPCustDomainMacRangeRuleDomainId, alaDaUNPEdgeFlushEntry=alaDaUNPEdgeFlushEntry, alaDaSpbProfileTable=alaDaSpbProfileTable, alaDaUNPPortRuleEdgeProf=alaDaUNPPortRuleEdgeProf, alaDaUNPMacOuiRuleRowStatus=alaDaUNPMacOuiRuleRowStatus, alaDaUNPCustDomainMacRuleProfileName=alaDaUNPCustDomainMacRuleProfileName, alaDaUNPAuthServerDownProfile3=alaDaUNPAuthServerDownProfile3, alaDaUNPMacIpGroupRuleRowStatus=alaDaUNPMacIpGroupRuleRowStatus, alaDaUNPUserRolePolicyList=alaDaUNPUserRolePolicyList, alaDaUNPMacPortRuleProfile1=alaDaUNPMacPortRuleProfile1, alaDaUNPUserFlushAuthType=alaDaUNPUserFlushAuthType, alaDaUNPMacOuiRuleEdgeProfile=alaDaUNPMacOuiRuleEdgeProfile, alaDaUNPMacIpPortRuleNum=alaDaUNPMacIpPortRuleNum, alaDaUNPPortTemplateVlanRowStatus=alaDaUNPPortTemplateVlanRowStatus, alaDaUNPCustDomainRuleId=alaDaUNPCustDomainRuleId, alaDaUNPVxlanFlushEntry=alaDaUNPVxlanFlushEntry, alaDaUNPIpGroupRuleEdgeProf=alaDaUNPIpGroupRuleEdgeProf, alaDaUNPMacIpGroupRuleIpAddrType=alaDaUNPMacIpGroupRuleIpAddrType, alaDaUNPCustDomainRuleProfile2=alaDaUNPCustDomainRuleProfile2, alaDaCPortalAuthRealm=alaDaCPortalAuthRealm, alaDaCPortalProfDomainAuthRealm=alaDaCPortalProfDomainAuthRealm, alaDaUNPEdgeProfMaxIngressBw=alaDaUNPEdgeProfMaxIngressBw, alaDaMacVlanUserUnpFromAuthServer=alaDaMacVlanUserUnpFromAuthServer, alaDaUNPEdgeProfMaxEgressBw=alaDaUNPEdgeProfMaxEgressBw, alaDaUNPMacPortRuleTable=alaDaUNPMacPortRuleTable, alaDaUNPLocationPolicySystemName=alaDaUNPLocationPolicySystemName, alaDaUNPCustDomainMacIpRuleProfile1=alaDaUNPCustDomainMacIpRuleProfile1, alaDaUNPProfileGroup=alaDaUNPProfileGroup, alaDaUNPCustDomainEvbGpIdRuleSpbProfileName=alaDaUNPCustDomainEvbGpIdRuleSpbProfileName, alaDaUNPVxlanFlushTable=alaDaUNPVxlanFlushTable, alaDaUNPVlanRuleTable=alaDaUNPVlanRuleTable)
mibBuilder.exportSymbols("ALCATEL-IND1-DA-MIB", alaDaUNPMacRangesGroup=alaDaUNPMacRangesGroup, alaDaUNPProfileMapSpbIsid=alaDaUNPProfileMapSpbIsid, alaDaQMRAllowedTable=alaDaQMRAllowedTable, alaDaUNPEdgeFlushType=alaDaUNPEdgeFlushType, alaDaUNPIpNetRuleProfileName=alaDaUNPIpNetRuleProfileName, alaDaKerberosPortServerPktSwDiscardStats=alaDaKerberosPortServerPktSwDiscardStats, alaDaUNPMacClassifyGroup=alaDaUNPMacClassifyGroup, alaDaUNPValidityPeriodIntervalStatus=alaDaUNPValidityPeriodIntervalStatus, alaDaUNPEndPoinVlanTag=alaDaUNPEndPoinVlanTag, alaDaUNPCustDomainVlanTagRuleVlan=alaDaUNPCustDomainVlanTagRuleVlan, alaDaUNPAuthServerDownTimeoutMCLagConfigStatus=alaDaUNPAuthServerDownTimeoutMCLagConfigStatus, alaDaUNPPortTemplate8021XAuthPassAlternate=alaDaUNPPortTemplate8021XAuthPassAlternate, alaDaUNPCustDomainVlanTagRuleVxlanProfileName=alaDaUNPCustDomainVlanTagRuleVxlanProfileName, alaDaUNPEndPoinProfile1=alaDaUNPEndPoinProfile1, alaDaUNPEdgeFlushComplete=alaDaUNPEdgeFlushComplete, alaDaMacVlanUserExtAppID=alaDaMacVlanUserExtAppID, alaDaKerberosUserTable=alaDaKerberosUserTable, alaDaUNPCustDomainIpNetRuleVlanTag=alaDaUNPCustDomainIpNetRuleVlanTag, alaDaSpbProfileSapVlanXlation=alaDaSpbProfileSapVlanXlation, alaDaUNPAuthServerDownUnp=alaDaUNPAuthServerDownUnp, alaDaMacVlanUserVxlanVnid=alaDaMacVlanUserVxlanVnid, alaDaUNPETmplForceL3Learning=alaDaUNPETmplForceL3Learning, alaDaKerberosPortErrorRxStats=alaDaKerberosPortErrorRxStats, alaDaUNPIpPortRuleEntry=alaDaUNPIpPortRuleEntry, alaDaMacVlanUserLocPolicyStatus=alaDaMacVlanUserLocPolicyStatus, alaDaSpbProfileAFDConfig=alaDaSpbProfileAFDConfig, alaDaUNPEdgrFlushMac=alaDaUNPEdgrFlushMac, alaDaHICSvrName=alaDaHICSvrName, alaDaUserNetProfileGroup=alaDaUserNetProfileGroup, alaDaUNPRedirectServerIPType=alaDaUNPRedirectServerIPType, alaDaUNPMacRangeRuleTable=alaDaUNPMacRangeRuleTable, alaDaMacUserIntfNum=alaDaMacUserIntfNum, alaDaMacVlanUserLoginTimeStamp=alaDaMacVlanUserLoginTimeStamp, alaDaUNPMacEdgeUserFlush=alaDaUNPMacEdgeUserFlush, alaDaUNPVxlanProfileVnid=alaDaUNPVxlanProfileVnid, alaDaUNPIpPortClassifyGroup=alaDaUNPIpPortClassifyGroup, AlaDaAuthenticationResult=AlaDaAuthenticationResult, alaDaUNPClassificationRuleGroup=alaDaUNPClassificationRuleGroup, alaDaUNPMacOuiRuleProfile1=alaDaUNPMacOuiRuleProfile1, alaDaSaaProfileGroup=alaDaSaaProfileGroup, alaDaHICSvrStatus=alaDaHICSvrStatus, alaDaUNPPortTemplate8021XAuthTxPeriod=alaDaUNPPortTemplate8021XAuthTxPeriod, alaDaUNPVxlanProfileMobileTagStatus=alaDaUNPVxlanProfileMobileTagStatus, alaDaUNPPortRuleTable=alaDaUNPPortRuleTable, alaDaSpbProfileMulticastMode=alaDaSpbProfileMulticastMode, alaDaUserNetProfileMCLagConfigStatus=alaDaUserNetProfileMCLagConfigStatus, alaDaUNPMacRuleRowStatus=alaDaUNPMacRuleRowStatus, alaDaUNPProfileCPortalAuthentication=alaDaUNPProfileCPortalAuthentication, alaDaUNPCustDomainIpNetRuleRowStatus=alaDaUNPCustDomainIpNetRuleRowStatus, alaDaUNPCustDomainVlanTagRuleEntry=alaDaUNPCustDomainVlanTagRuleEntry, alaDaUNPETmpl8021XMaxReq=alaDaUNPETmpl8021XMaxReq, alaDaUNPClassifRuleIpMaskType=alaDaUNPClassifRuleIpMaskType, alaDaUNPCustDomainMacRangeRuleProfile2=alaDaUNPCustDomainMacRangeRuleProfile2, alaDaUNPProfileMaxEgressDepth=alaDaUNPProfileMaxEgressDepth, alaDaUNPPortAdminControlledDirections=alaDaUNPPortAdminControlledDirections, alaDaUNPMacRangeRowStatus=alaDaUNPMacRangeRowStatus, alaDaUNPCustDomainMacRuleProfile2=alaDaUNPCustDomainMacRuleProfile2, alaDaUnpGroupIdTable=alaDaUnpGroupIdTable, alaDaKerberosPolicyConfigTable=alaDaKerberosPolicyConfigTable, alaDaQMRGroup=alaDaQMRGroup, alaDaUNPRstrctedRoleTable=alaDaUNPRstrctedRoleTable, alaDaUNPPortType=alaDaUNPPortType, alaDaKerberosServerTable=alaDaKerberosServerTable, alaDaUNPVxlanProfileGroup=alaDaUNPVxlanProfileGroup, alaDaUNPProfileLocationPolicy=alaDaUNPProfileLocationPolicy, alaDaKerberosGlobalInactivityTimer=alaDaKerberosGlobalInactivityTimer, alaDaMacVlanUserSpbIsid=alaDaMacVlanUserSpbIsid, alaDaUNPMacIpGroupRuleIpAddr=alaDaUNPMacIpGroupRuleIpAddr, alaDaMacVlanUserUnpUsed=alaDaMacVlanUserUnpUsed, alaDaUNPMacPortRuleNum=alaDaUNPMacPortRuleNum, alaDaUNPPortTemplateName=alaDaUNPPortTemplateName, alaDaUNPMacGroupRuleVlanTag=alaDaUNPMacGroupRuleVlanTag, alaDaKerberosServerPktSwDiscardStats=alaDaKerberosServerPktSwDiscardStats, alaDaUserNetProfileMaxIngressBw=alaDaUserNetProfileMaxIngressBw, alaDaMacVlanUserClassificationSource=alaDaMacVlanUserClassificationSource, alaDaQMRCustomHttpProxyPort=alaDaQMRCustomHttpProxyPort, alaDaUNPAuthSrvDownVxlanProfileName=alaDaUNPAuthSrvDownVxlanProfileName, alaDaUNPPortDefaultEdgeProfName=alaDaUNPPortDefaultEdgeProfName, alaDaKerberosStatsIfIndex=alaDaKerberosStatsIfIndex, alaDaUNPVxlanFarEndIPListIPAddressCount=alaDaUNPVxlanFarEndIPListIPAddressCount, alaDaSpbProfileGroup=alaDaSpbProfileGroup, alaDaUNPCustDomainMacIpRuleIpAddrType=alaDaUNPCustDomainMacIpRuleIpAddrType, alaDaUNPMacPortRuleMacAddr=alaDaUNPMacPortRuleMacAddr, alaDaUNPMacRuleMCLagConfigStatus=alaDaUNPMacRuleMCLagConfigStatus, alaDaUNPRedirectProxyServerPort=alaDaUNPRedirectProxyServerPort, alaDaUNPCustDomainMacRuleSpbProfileName=alaDaUNPCustDomainMacRuleSpbProfileName, alaDaUNPCustDomainEvbGpIdRuleRowStatus=alaDaUNPCustDomainEvbGpIdRuleRowStatus, alaDaUNPCustDomainRuleVlanTag=alaDaUNPCustDomainRuleVlanTag, alaDaUNPProfileMapVlanGroup=alaDaUNPProfileMapVlanGroup, alaDaUNPMacGroupRuleEntry=alaDaUNPMacGroupRuleEntry, alaDaMacVlanUserExtEntry=alaDaMacVlanUserExtEntry, alaDaQMRPolicyList=alaDaQMRPolicyList, alaDaUNPCustDomainMacRangeRuleVlanTag=alaDaUNPCustDomainMacRangeRuleVlanTag, alaDaUNPCustDomainMacRuleEntry=alaDaUNPCustDomainMacRuleEntry, alaDaMacVlanUserType=alaDaMacVlanUserType, alaDaKerberosGlobalClearStats=alaDaKerberosGlobalClearStats, alaDaUNPDynamicVlanConfigFlag=alaDaUNPDynamicVlanConfigFlag, alaDaUNPIpPortRuleAddrType=alaDaUNPIpPortRuleAddrType, alaDaKerberosGlobalServerTimeoutTimer=alaDaKerberosGlobalServerTimeoutTimer, alaDaUNPPort8021XAuthStatus=alaDaUNPPort8021XAuthStatus, alaDaUNPRedirectPortBounce=alaDaUNPRedirectPortBounce, alaDaUNPCustDomainIpNetRuleProfile2=alaDaUNPCustDomainIpNetRuleProfile2, alaDaUNPPort8021XMaxReqStatus=alaDaUNPPort8021XMaxReqStatus, alaDaUNPPort8021XEdgeProfName=alaDaUNPPort8021XEdgeProfName, alaDaHICSvrIpAddrType=alaDaHICSvrIpAddrType, alaDaUNPEdgeFlushIndex=alaDaUNPEdgeFlushIndex, alaDaUNPEndPoinProfile3=alaDaUNPEndPoinProfile3, alaDaUNPPortEdgeTemplate=alaDaUNPPortEdgeTemplate, alaDaUNPMacIpPortRuleTable=alaDaUNPMacIpPortRuleTable, alaDaUNPETmpl8021XPassAltEProf=alaDaUNPETmpl8021XPassAltEProf, alaDaUNPMacRangeEntry=alaDaUNPMacRangeEntry, alaDaMacVlanUserExtMACAddress=alaDaMacVlanUserExtMACAddress, alaDaUNPVxlanFarEndIPAddressListEntry=alaDaUNPVxlanFarEndIPAddressListEntry, alaDaUNPPortAdminControlledOperDirections=alaDaUNPPortAdminControlledOperDirections, alaDaUserNetProfileSaaProfileName=alaDaUserNetProfileSaaProfileName, alaDaUNPGroupRuleTable=alaDaUNPGroupRuleTable, alaDaUNPValidityPeriodDaysStatus=alaDaUNPValidityPeriodDaysStatus, alaDaUNPVxlanFarEndIPAddressListIP=alaDaUNPVxlanFarEndIPAddressListIP, alaDaMacVlanUserKerberosStatus=alaDaMacVlanUserKerberosStatus, alaDaMacVlanUserVlanID=alaDaMacVlanUserVlanID, alaDaUNPClassifRuleIpAddress=alaDaUNPClassifRuleIpAddress, alaDaCPortalRedirectUrlName=alaDaCPortalRedirectUrlName, alaDaUNPETmpl8021XAuthStatus=alaDaUNPETmpl8021XAuthStatus, alaDaUNPRedirectAllowedServerEntry=alaDaUNPRedirectAllowedServerEntry, alaDaUNPVxlanProfileMulticastIPAddress=alaDaUNPVxlanProfileMulticastIPAddress, alaDaHICHostTable=alaDaHICHostTable, alaDaUNPIpMaskRuleMask=alaDaUNPIpMaskRuleMask, alaDaUserNetProfileTable=alaDaUserNetProfileTable, alaDaUNPProfileMapSpbBVlan=alaDaUNPProfileMapSpbBVlan, alaDaUNPEdgeProfRedirectStatus=alaDaUNPEdgeProfRedirectStatus, alaDaHICSvrIpAddr=alaDaHICSvrIpAddr, alaDaCPortalPolicyListName=alaDaCPortalPolicyListName, alaDaUNPValidityPeriodGroup=alaDaUNPValidityPeriodGroup, alaDaUNPCustDomainMacIpRuleDomainId=alaDaUNPCustDomainMacIpRuleDomainId, alaDaUNPIpPortRuleTable=alaDaUNPIpPortRuleTable, alaDaKerberosRateLimitString=alaDaKerberosRateLimitString, alaDaUNPIpGroupRuleVlanTag=alaDaUNPIpGroupRuleVlanTag, alaDaUNPPortTrustTagStatus=alaDaUNPPortTrustTagStatus, alaDaUNPVxlanFarEndIPListEntry=alaDaUNPVxlanFarEndIPListEntry, alaDaUNPMacIpGroup=alaDaUNPMacIpGroup, alaDaUNPIpPortRuleProfile3=alaDaUNPIpPortRuleProfile3, alaDaUNPCustDomainMacRangeRuleEntry=alaDaUNPCustDomainMacRangeRuleEntry, alaDaUNPVxlanFarEndIPAddressListTable=alaDaUNPVxlanFarEndIPAddressListTable, alaDaUNPVlanRuleVlanTagPosition=alaDaUNPVlanRuleVlanTagPosition, alaDaMacUserUnpUsed=alaDaMacUserUnpUsed, alaDaKerberosTotalClientPktRxStats=alaDaKerberosTotalClientPktRxStats, alaDaUserNetProfileRowStatus=alaDaUserNetProfileRowStatus, alaIND1DaMIBNotifications=alaIND1DaMIBNotifications, alaDaUNPMacIpPortRuleIpMask=alaDaUNPMacIpPortRuleIpMask, alaDaUNPPortPassAltSpbProfileName=alaDaUNPPortPassAltSpbProfileName, alaDaUNPVxlanProfileQosPolicyListName=alaDaUNPVxlanProfileQosPolicyListName, alaDaUNPETmplRowStatus=alaDaUNPETmplRowStatus, alaDaUNPProfileMapVxlanEncapVal=alaDaUNPProfileMapVxlanEncapVal, alaDaUNPProfileRedirect=alaDaUNPProfileRedirect, alaDaUNPVxlanProfileEncapVal=alaDaUNPVxlanProfileEncapVal, alaDaCPortalAuthUNPProfileChange=alaDaCPortalAuthUNPProfileChange, alaDaUNPProfileMapVxlanMulticastIPAddressType=alaDaUNPProfileMapVxlanMulticastIPAddressType, alaDaUNPVxlanFlushSapIDIfIndex=alaDaUNPVxlanFlushSapIDIfIndex, alaDaCPortalAuthDomainName=alaDaCPortalAuthDomainName, alaDaUNPIpNetRuleMCLagConfigStatus=alaDaUNPIpNetRuleMCLagConfigStatus, alaDaUNPAuthSrvDownVxlanProfileTimeout=alaDaUNPAuthSrvDownVxlanProfileTimeout, alaDaUNPCustDomainVlanTagRuleMCLagConfigStatus=alaDaUNPCustDomainVlanTagRuleMCLagConfigStatus, alaDaUNPMacIpGroupRuleEdgeProf=alaDaUNPMacIpGroupRuleEdgeProf, alaDaHICSvrFailPolicyName=alaDaHICSvrFailPolicyName, alaDaUNPAuthRuleRowStatus=alaDaUNPAuthRuleRowStatus, alaDaUNPPortRuleRowStatus=alaDaUNPPortRuleRowStatus, alaDaUNPETmplClassifStatus=alaDaUNPETmplClassifStatus, alaDaUNPPortTemplateTable=alaDaUNPPortTemplateTable, alaDaUNPMacRangeRuleHiAddr=alaDaUNPMacRangeRuleHiAddr, alaDaUNPPortDefaultProfileName=alaDaUNPPortDefaultProfileName, alaDaMacUserTable=alaDaMacUserTable, alaDaCPortalProfDomainAuthDomainName=alaDaCPortalProfDomainAuthDomainName, alaDaUNPCustDomainVlanTagRuleTable=alaDaUNPCustDomainVlanTagRuleTable, alaDaUNPCustDomainVlanTagRuleDomainId=alaDaUNPCustDomainVlanTagRuleDomainId, alaDaUNPVlanUserFlush=alaDaUNPVlanUserFlush, alaDaKerberosUserState=alaDaKerberosUserState, alaDaHICStatus=alaDaHICStatus, alaDaMacVlanUserAuthServerIpType=alaDaMacVlanUserAuthServerIpType, alaDaUNPIpMaskRuleAddr=alaDaUNPIpMaskRuleAddr, alaDaUnpGroupIdEntry=alaDaUnpGroupIdEntry, alaDaUNPClassifRuleEdgeProfile=alaDaUNPClassifRuleEdgeProfile, alaDaHICHostEntry=alaDaHICHostEntry, alaDaUNPProfileQoSPolicy=alaDaUNPProfileQoSPolicy, alaDaUNPETmpl8021XSuppTimeOut=alaDaUNPETmpl8021XSuppTimeOut, alaDaMacVlanUserQMRStatus=alaDaMacVlanUserQMRStatus, alaDaUNPCustDomainEvbGpIdRuleTable=alaDaUNPCustDomainEvbGpIdRuleTable, alaDaKerberosPortStatsEntry=alaDaKerberosPortStatsEntry, alaDaUNPRedirectAllowedServerIPType=alaDaUNPRedirectAllowedServerIPType, alaDaKerberosUserEntry=alaDaKerberosUserEntry, alaDaUNPPortTemplateMACAuth=alaDaUNPPortTemplateMACAuth, alaDaUNPPortRuleProfile2=alaDaUNPPortRuleProfile2, alaDaUNPPortMaxIngressDepth=alaDaUNPPortMaxIngressDepth, alaDaMacVlanUserTimePolicyStatus=alaDaMacVlanUserTimePolicyStatus, alaDaUNPDynamicProfileConfigMCLagConfigStatus=alaDaUNPDynamicProfileConfigMCLagConfigStatus, alaDaUNPUserRoleAuthType=alaDaUNPUserRoleAuthType, alaDaUNPMacOuiRuleAddr=alaDaUNPMacOuiRuleAddr, alaDaMacVlanUserRoleSource=alaDaMacVlanUserRoleSource, alaDaUNPMacIpPortRuleIpMaskType=alaDaUNPMacIpPortRuleIpMaskType, alaDaAuthenticationStatus=alaDaAuthenticationStatus, alaDaUNPValidityPeriodEndHour=alaDaUNPValidityPeriodEndHour, alaDaUNPETmplAaaProf=alaDaUNPETmplAaaProf, alaDaUNPProfileMapVlanRowStatus=alaDaUNPProfileMapVlanRowStatus, alaDaKerberosReqTimeoutTrap=alaDaKerberosReqTimeoutTrap, alaDaUNPProfileMapSpbRowStatus=alaDaUNPProfileMapSpbRowStatus, alaDaUNPIpPortRuleProfile1=alaDaUNPIpPortRuleProfile1, alaDaUNPLocationPolicyPort=alaDaUNPLocationPolicyPort, alaDaUNPProfileMapVxlanTable=alaDaUNPProfileMapVxlanTable, alaDaUNPETmplEntry=alaDaUNPETmplEntry, alaDaUNPUserRolePrecedenceNum=alaDaUNPUserRolePrecedenceNum, alaDaQMRMIBObjects=alaDaQMRMIBObjects, alaDaCPortalIpAddress=alaDaCPortalIpAddress, alaDaUNPPortPortTemplateName=alaDaUNPPortPortTemplateName, alaDaHICSvrFailPolicyTable=alaDaHICSvrFailPolicyTable, alaDaUNPLocationPolicyName=alaDaUNPLocationPolicyName, alaDaMacVlanUserExtGroup=alaDaMacVlanUserExtGroup, alaDaUNPEdgeFlushGroup=alaDaUNPEdgeFlushGroup, alaDaUNPMacOuiRuleEntry=alaDaUNPMacOuiRuleEntry, alaDaUNPPortVlanVID=alaDaUNPPortVlanVID, alaDaUNPSpbFlushSapIDIfIndex=alaDaUNPSpbFlushSapIDIfIndex, alaDaUNPNoAuthEdgeUserFlush=alaDaUNPNoAuthEdgeUserFlush, alaDaHICSvrEntry=alaDaHICSvrEntry, alaDaUNPMacIpGroupRuleEntry=alaDaUNPMacIpGroupRuleEntry, alaDaMacUserVlanID=alaDaMacUserVlanID, alaDaUNPUserRoleEntry=alaDaUNPUserRoleEntry, alaDaUNPClassifRuleGroupId=alaDaUNPClassifRuleGroupId, alaDaUNPProfileRowStatus=alaDaUNPProfileRowStatus, alaDaUNPVlanTagRuleProfileName=alaDaUNPVlanTagRuleProfileName, alaDaUnpCustomerDomainGroup=alaDaUnpCustomerDomainGroup, alaDaUNPValidityPeriodTimezone=alaDaUNPValidityPeriodTimezone, alaDaUNPProfileMapVxlanFarEndIPList=alaDaUNPProfileMapVxlanFarEndIPList, alaDaUNPPortCustomerDomainId=alaDaUNPPortCustomerDomainId, alaDaSaaProfileRowStatus=alaDaSaaProfileRowStatus, alaDaUNPPort8021XBypassStatus=alaDaUNPPort8021XBypassStatus, alaDaUNPCustDomainRuleTable=alaDaUNPCustDomainRuleTable, alaDaUNPCustDomainIpNetRuleMask=alaDaUNPCustDomainIpNetRuleMask, alaDaUNPAuthRuleEntry=alaDaUNPAuthRuleEntry, alaDaUNPMacIpPortRuleEdgeProf=alaDaUNPMacIpPortRuleEdgeProf, alaDaUNPPortAdminState=alaDaUNPPortAdminState, alaDaUNPPortVlanGroup=alaDaUNPPortVlanGroup, alaDaUNPClassifRowStatus=alaDaUNPClassifRowStatus, alaDaUNPValidityPeriodMonths=alaDaUNPValidityPeriodMonths, alaDaUNPPort8021XPassAltProfileName=alaDaUNPPort8021XPassAltProfileName, alaDaUNPPortDefaultSpbProfileName=alaDaUNPPortDefaultSpbProfileName, alaDaUserNetProfileMaxEgressBw=alaDaUserNetProfileMaxEgressBw, alaDaUNPVxlanFlushMacAddress=alaDaUNPVxlanFlushMacAddress, alaDaMacVlanUserAuthServerIpUsed=alaDaMacVlanUserAuthServerIpUsed, alaDaUNPClassifRuleTable=alaDaUNPClassifRuleTable, alaDaUNPMacPortRuleEdgeProf=alaDaUNPMacPortRuleEdgeProf, alaDaSaaProfileLatencyThreshold=alaDaSaaProfileLatencyThreshold, alaDaUNPVlanGroup=alaDaUNPVlanGroup, alaDaUNPCustDomainMacRuleVxlanProfileName=alaDaUNPCustDomainMacRuleVxlanProfileName, alaDaUNPRedirectAllowedRowStatus=alaDaUNPRedirectAllowedRowStatus, alaDaUNPGroupObjects=alaDaUNPGroupObjects, alaDaUNPEdgeProfMaxEgressDepth=alaDaUNPEdgeProfMaxEgressDepth)
mibBuilder.exportSymbols("ALCATEL-IND1-DA-MIB", alaDaUNPGroupRuleId=alaDaUNPGroupRuleId, alaDaUNPPortTemplateDirection=alaDaUNPPortTemplateDirection, alaDaUNPVlanTagGroup=alaDaUNPVlanTagGroup, alaDaUNPCustDomainMacRangeRuleVxlanProfileName=alaDaUNPCustDomainMacRangeRuleVxlanProfileName, alaDaUNPMacRuleGroup=alaDaUNPMacRuleGroup, alaDaQMRAllowedIpMaskType=alaDaQMRAllowedIpMaskType, alaDaUNPLocationPolicyTable=alaDaUNPLocationPolicyTable, alaDaUNPProfileMapVlanTable=alaDaUNPProfileMapVlanTable, alaDaUNPVlanMapRowStatus=alaDaUNPVlanMapRowStatus, alaDaKerberosIpAddressType=alaDaKerberosIpAddressType, alaDaUNPCustDomainMacIpRuleMacAddr=alaDaUNPCustDomainMacIpRuleMacAddr, alaDaUNPVxlanFlushAuthType=alaDaUNPVxlanFlushAuthType, alaDaKerberosServerEntry=alaDaKerberosServerEntry, alaDaUNPEdgeProfTable=alaDaUNPEdgeProfTable, alaDaUNPCustDomainVlanTagRuleProfile1=alaDaUNPCustDomainVlanTagRuleProfile1, alaDaUNPMacIpPortRuleRowStatus=alaDaUNPMacIpPortRuleRowStatus, alaDaUNPUserRoleProfile3=alaDaUNPUserRoleProfile3, alaDaUnpCustomerDomainEntry=alaDaUnpCustomerDomainEntry, alaDaUNPPortRuleProfile1=alaDaUNPPortRuleProfile1, alaDaUNPCustDomainMacIpRuleEntry=alaDaUNPCustDomainMacIpRuleEntry, alaDaMacVlanUserExtAppName=alaDaMacVlanUserExtAppName, alaDaHICCustomHttpProxyPort=alaDaHICCustomHttpProxyPort, alaDaKerberosUserDomain=alaDaKerberosUserDomain, alaDaUNPClassifRuleEndPoin=alaDaUNPClassifRuleEndPoin, alaDaQMRAllowedRowStatus=alaDaQMRAllowedRowStatus, alaDaUNPMacRangeRuleRowStatus=alaDaUNPMacRangeRuleRowStatus, alaDaUNPPortRuleNum=alaDaUNPPortRuleNum, alaDaUNPCustDomainMacIpRuleIpMaskType=alaDaUNPCustDomainMacIpRuleIpMaskType, alaIND1DaMIBConformance=alaIND1DaMIBConformance, alaDaHICAllowedIpAddrType=alaDaHICAllowedIpAddrType, alaDaUNPMacOuiRuleProfile2=alaDaUNPMacOuiRuleProfile2, alaDaUnpSourceIpAddr=alaDaUnpSourceIpAddr, alaDaUNPEndPoinEdgeProfile=alaDaUNPEndPoinEdgeProfile, alaDaUNPEdgeProfHICStatus=alaDaUNPEdgeProfHICStatus, alaDaHICAllowedName=alaDaHICAllowedName, alaDaMacVlanUserGroup=alaDaMacVlanUserGroup, alaDaMacVlanUserAuthStatus=alaDaMacVlanUserAuthStatus, alaDaUNPMacRangeTable=alaDaUNPMacRangeTable, alaDaCPortalIpAddressType=alaDaCPortalIpAddressType, alaDaUNPVxlanFarEndIPListRemove=alaDaUNPVxlanFarEndIPListRemove, alaDaCPortalAuthPassEntry=alaDaCPortalAuthPassEntry, alaDaUNPIpMaskRuleAddrType=alaDaUNPIpMaskRuleAddrType, alaDaKerberosPortClientPktRxStats=alaDaKerberosPortClientPktRxStats, alaDaUNPValidityPeriodHourStatus=alaDaUNPValidityPeriodHourStatus, alaDaUNPProfileMapStaticEncapVal=alaDaUNPProfileMapStaticEncapVal, alaDaUNPVlanTagRuleRowStatus=alaDaUNPVlanTagRuleRowStatus, alaDaUNPPortPassAltVxlanProfileName=alaDaUNPPortPassAltVxlanProfileName, alaDaUNPRedirectAllowedMaskIPType=alaDaUNPRedirectAllowedMaskIPType, alaDaUNPVxlanFarEndIPListName=alaDaUNPVxlanFarEndIPListName, alaDaUNPCustDomainMacRuleMCLagConfigStatus=alaDaUNPCustDomainMacRuleMCLagConfigStatus, alaDaUNPProfileMapSpbEncapVal=alaDaUNPProfileMapSpbEncapVal, alaDaUNPPortTemplateVlanEntry=alaDaUNPPortTemplateVlanEntry, alaDaUNPClassifRuleVlanTag=alaDaUNPClassifRuleVlanTag, alaDaUNPCustDomainMacRuleGroup=alaDaUNPCustDomainMacRuleGroup, alaDaUNPAuthRuleType=alaDaUNPAuthRuleType, alaDaUNPPortTemplateDynamicService=alaDaUNPPortTemplateDynamicService, alaDaUNPIpPortRuleProfile2=alaDaUNPIpPortRuleProfile2, alaDaUNPVxlanProfileName=alaDaUNPVxlanProfileName, alaDaUNPSpbFlushAuthType=alaDaUNPSpbFlushAuthType, alaDaUNPVlanRuleRowStatus=alaDaUNPVlanRuleRowStatus, alaDaUNPPortEgressSourceProfile=alaDaUNPPortEgressSourceProfile, alaDaUNPMacPortRuleProfile3=alaDaUNPMacPortRuleProfile3, alaDaKerberosPortTGSREPRxStats=alaDaKerberosPortTGSREPRxStats, alaDaUNPVxlanFarEndIPListTable=alaDaUNPVxlanFarEndIPListTable, alaDaKerberosClientPktHwDiscardStats=alaDaKerberosClientPktHwDiscardStats, unpMcLagConfigInconsistency=unpMcLagConfigInconsistency, alaDaUnpVlanTag=alaDaUnpVlanTag, alaDaUNPSpbFlushSpbProfile=alaDaUNPSpbFlushSpbProfile, alaDaUNPPortTemplateVlanVID=alaDaUNPPortTemplateVlanVID, alaDaUNPProfileMaxEgressBandwidth=alaDaUNPProfileMaxEgressBandwidth, alaDaUNPETmpl8021XMaxReqStatus=alaDaUNPETmpl8021XMaxReqStatus, alaDaUNPEdgeProfileGroup=alaDaUNPEdgeProfileGroup, alaDaCPortalUNPProfileChange=alaDaCPortalUNPProfileChange, alaDaHICAllowedIpMask=alaDaHICAllowedIpMask, alaDaUNPMacPortRuleRowStatus=alaDaUNPMacPortRuleRowStatus, alaDaUNPETmplBypassStatus=alaDaUNPETmplBypassStatus, alaDaUNPLocationPolicySystemLocation=alaDaUNPLocationPolicySystemLocation, alaDaUNPVxlanFarEndIPAddressListIPType=alaDaUNPVxlanFarEndIPAddressListIPType, alaDaHICSvrFailRowStatus=alaDaHICSvrFailRowStatus, alaDaUNPCustDomainIpNetRuleDomainId=alaDaUNPCustDomainIpNetRuleDomainId, alaDaUNPRedirectAllowedServerTable=alaDaUNPRedirectAllowedServerTable, alaDaKerberosPortClearStats=alaDaKerberosPortClearStats, alaDaSaaProfileTable=alaDaSaaProfileTable, alaDaUNPPortEntry=alaDaUNPPortEntry, alaDaCPortalAuthPolicyListName=alaDaCPortalAuthPolicyListName, alaDaUNPCustDomainMacRuleRowStatus=alaDaUNPCustDomainMacRuleRowStatus, alaDaUNPLocationPolicyPortStatus=alaDaUNPLocationPolicyPortStatus, alaDaUNPCustDomainRuleProfile1=alaDaUNPCustDomainRuleProfile1, alaDaUNPMacRangeGroup=alaDaUNPMacRangeGroup, alaDaUNPUserFlushSapIDIfIndex=alaDaUNPUserFlushSapIDIfIndex, alaDaCPortalProfName=alaDaCPortalProfName, alaDaUNPClassifRuleName=alaDaUNPClassifRuleName, alaDaCPortalGroup=alaDaCPortalGroup, alaDaUNPRedirectAllowedServerGroup=alaDaUNPRedirectAllowedServerGroup, alaDaKerberosTotalServerPktRxStats=alaDaKerberosTotalServerPktRxStats, alaDaHICHostStatus=alaDaHICHostStatus, alaDaHICSvrRole=alaDaHICSvrRole, alaDaUNPRstrctedRolePolicyList=alaDaUNPRstrctedRolePolicyList, alaDaUnpMacAddr2=alaDaUnpMacAddr2, alaDaUNPMacPortRuleEntry=alaDaUNPMacPortRuleEntry, alaDaCPortalCustomization=alaDaCPortalCustomization, alaDaCPortalProfDomainTable=alaDaCPortalProfDomainTable, alaDaMacVlanUserMCLagLearningLoc=alaDaMacVlanUserMCLagLearningLoc, alaDaUNPIpNetRuleAddrType=alaDaUNPIpNetRuleAddrType, alaDaUNPRedirectAllowedMaskIP=alaDaUNPRedirectAllowedMaskIP, alaDaUNPETmplTrustTagStatus=alaDaUNPETmplTrustTagStatus, alaDaKerberosGlobalClearPortStats=alaDaKerberosGlobalClearPortStats, alaDaMacUserIpAddress=alaDaMacUserIpAddress, alaDaUNPCustDomainVlanTagRuleVlanProfileName=alaDaUNPCustDomainVlanTagRuleVlanProfileName, alaDaUNPETmplMacAuthStatus=alaDaUNPETmplMacAuthStatus, alaDaUNPIpPortRuleMask=alaDaUNPIpPortRuleMask, alaDaUNPVlanMappingGroup=alaDaUNPVlanMappingGroup, alaDaKerberosGlobalConfig=alaDaKerberosGlobalConfig, alaDaUNPRstrctedRoleType=alaDaUNPRstrctedRoleType, alaDaUNPRestrictedRoleGroup=alaDaUNPRestrictedRoleGroup, alaDaUnpGroupId=alaDaUnpGroupId, alaDaUNPVxlanFlushServiceID=alaDaUNPVxlanFlushServiceID, alaDaUNPPortTemplateVlanGroup=alaDaUNPPortTemplateVlanGroup, alaDaUNPClassifRuleAuthType=alaDaUNPClassifRuleAuthType, alaDaUNPPortTemplateAAAProfile=alaDaUNPPortTemplateAAAProfile, alaDaUNPUserRoleGroup=alaDaUNPUserRoleGroup, alaDaUNPMacIpGroupRuleTable=alaDaUNPMacIpGroupRuleTable, alaDaUNPUserRoleName=alaDaUNPUserRoleName, alaDaUnpNativeVlan=alaDaUnpNativeVlan, alaDaUNPUserRolePostLoginStatus=alaDaUNPUserRolePostLoginStatus, alaDaQMRGlobalConfig=alaDaQMRGlobalConfig, alaDaUNPEndPoinProfile2=alaDaUNPEndPoinProfile2, alaDaMacVlanUserExtVlanID=alaDaMacVlanUserExtVlanID, alaDaUNPIpMaskRuleEntry=alaDaUNPIpMaskRuleEntry, alaDaSpbProfileIsid=alaDaSpbProfileIsid, alaDaUNPPortMaxEgressBw=alaDaUNPPortMaxEgressBw, alaDaUNPEdgeUserFlush=alaDaUNPEdgeUserFlush, alaDaUNPCustDomainIpNetRuleProfileName=alaDaUNPCustDomainIpNetRuleProfileName, alaDaKerberosGlobalMacMoveStatus=alaDaKerberosGlobalMacMoveStatus, alaDaUNPAuthServerDownProfile1=alaDaUNPAuthServerDownProfile1, alaDaUNPEdgeProfName=alaDaUNPEdgeProfName, alaDaUNPIpPortRuleMaskType=alaDaUNPIpPortRuleMaskType, alaDaUNPUserRoleKerberosPostLoginStatus=alaDaUNPUserRoleKerberosPostLoginStatus, alaDaMacUserEntry=alaDaMacUserEntry, alaDaUNPClassifRuleMacRngHiaddr=alaDaUNPClassifRuleMacRngHiaddr, alaDaUnpVlan=alaDaUnpVlan, alaDaUNPValidityPeriodHour=alaDaUNPValidityPeriodHour, alaDaSpbProfileEncapVal=alaDaSpbProfileEncapVal, MacOui=MacOui, alaDaUNPUserRoleProfile1=alaDaUNPUserRoleProfile1, alaDaUNPClassifRuleProfile1=alaDaUNPClassifRuleProfile1, alaDaUNPProfileMapSpbMulticastMode=alaDaUNPProfileMapSpbMulticastMode, alaDaHICMIBObjects=alaDaHICMIBObjects, alaDaHICHostMac=alaDaHICHostMac, alaDaMacVlanUserServiceID=alaDaMacVlanUserServiceID, alaDaUNPCustDomainVlanTagRuleTagPosition=alaDaUNPCustDomainVlanTagRuleTagPosition, alaDaSpbProfileQosPolicyListName=alaDaSpbProfileQosPolicyListName, alaDaUNPProfileMapStaticServiceID=alaDaUNPProfileMapStaticServiceID, alaDaUNPMacRuleVlanTag=alaDaUNPMacRuleVlanTag, alaDaUNPETmplMacPassAltEProf=alaDaUNPETmplMacPassAltEProf, alaDaUNPPort8021XFailurePolicy=alaDaUNPPort8021XFailurePolicy, alaDaHICSvrTable=alaDaHICSvrTable, alaDaUserNetProfileMaxEgressDepth=alaDaUserNetProfileMaxEgressDepth, alaDaUNPClassifRuleMacRngLoaddr=alaDaUNPClassifRuleMacRngLoaddr, alaDaQMRPath=alaDaQMRPath, alaDaUNPMacRangeRuleMCLagConfigStatus=alaDaUNPMacRangeRuleMCLagConfigStatus, alaDaUNPPortPassAltProfileName=alaDaUNPPortPassAltProfileName, alaDaKerberosIpAddress=alaDaKerberosIpAddress, alaDaUNPIpNetRuleGroup=alaDaUNPIpNetRuleGroup, alaDaUNPMacRangeRuleLoAddr=alaDaUNPMacRangeRuleLoAddr, alaDaSpbProfileEntry=alaDaSpbProfileEntry, alaDaUNPCustDomainEvbGpIdRuleGroup=alaDaUNPCustDomainEvbGpIdRuleGroup, alaDaUNPPortDefaultVxlanProfileName=alaDaUNPPortDefaultVxlanProfileName, alaDaUNPMacAddrsRuleGroup=alaDaUNPMacAddrsRuleGroup, alaDaUNPIpMaskRuleRowStatus=alaDaUNPIpMaskRuleRowStatus, alaDaUNPMacIpPortRuleProfile1=alaDaUNPMacIpPortRuleProfile1, alaDaUNPETmplVlanRowStatus=alaDaUNPETmplVlanRowStatus, alaDaUNPPortTemplateTrustTag=alaDaUNPPortTemplateTrustTag, alaDaUNPPortTemplateDefaultProfile=alaDaUNPPortTemplateDefaultProfile, alaDaKerberosGroup=alaDaKerberosGroup, alaDaUNPMacIpPortRuleProfile3=alaDaUNPMacIpPortRuleProfile3, alaDaUNPPortPVlanPortType=alaDaUNPPortPVlanPortType, alaDaUNPProfileAFDConfig=alaDaUNPProfileAFDConfig, alaDaUNPEdgeProfDHCPEnforcment=alaDaUNPEdgeProfDHCPEnforcment, alaDaUNPMacRulesMacAddr=alaDaUNPMacRulesMacAddr, alaDaUNPMacRangeRuleVlanTag=alaDaUNPMacRangeRuleVlanTag, alaDaMacVlanUserCapPortalStatus=alaDaMacVlanUserCapPortalStatus, alaDaUnpCommandType=alaDaUnpCommandType, alaDaUNPUserFlushComplete=alaDaUNPUserFlushComplete, alaDaUNPEdgeTemplateGroup=alaDaUNPEdgeTemplateGroup, alaDaUNPCustDomainMacIpRuleIpMask=alaDaUNPCustDomainMacIpRuleIpMask, alaDaUNPPort8021XSuppTimeOut=alaDaUNPPort8021XSuppTimeOut, alaDaSpbProfileName=alaDaSpbProfileName, unpMcLagMacIgnored=unpMcLagMacIgnored)
