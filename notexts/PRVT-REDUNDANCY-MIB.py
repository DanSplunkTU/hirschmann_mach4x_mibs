#
# PySNMP MIB module PRVT-REDUNDANCY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-REDUNDANCY-MIB
# Produced by pysmi-1.1.3 at Wed Dec  1 15:01:31 2021
# On host fv-az126-713 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint")
software, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "software")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, TimeTicks, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, MibIdentifier, Unsigned32, ObjectIdentity, NotificationType, iso, IpAddress, Gauge32, ModuleIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "TimeTicks", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "MibIdentifier", "Unsigned32", "ObjectIdentity", "NotificationType", "iso", "IpAddress", "Gauge32", "ModuleIdentity", "Counter64")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
prvtRedundancyMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 111, 5))
prvtRedundancyMIB.setRevisions(('2013-12-17 00:00',))
if mibBuilder.loadTexts: prvtRedundancyMIB.setLastUpdated('201312170000Z')
if mibBuilder.loadTexts: prvtRedundancyMIB.setOrganization('BATM Advanced Communication')
prvtRedundancyNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 0))
prvtRedundancyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1))
prvtRedundancyChassisTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1, 1), )
if mibBuilder.loadTexts: prvtRedundancyChassisTable.setStatus('current')
prvtRedundancyChassisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1, 1, 1), ).setIndexNames((0, "PRVT-REDUNDANCY-MIB", "prvtRedundancyChassisSlotId"))
if mibBuilder.loadTexts: prvtRedundancyChassisEntry.setStatus('current')
prvtRedundancyChassisSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: prvtRedundancyChassisSlotId.setStatus('current')
prvtRedundancyChassisLICType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 19, 20))).clone(namedValues=NamedValues(("lc-unknown", 1), ("lc-8020-10GE", 3), ("lc-8064-1GE", 4), ("lc-8032-1GE", 19), ("lc-8062-1GE", 20)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtRedundancyChassisLICType.setStatus('current')
prvtRedundancyChassisStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("protected", 0), ("notProtected", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtRedundancyChassisStatus.setStatus('current')
prvtRedundancyChassisEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("extracted", 0), ("inserted", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtRedundancyChassisEntryStatus.setStatus('current')
licStatus = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 0, 1)).setObjects(("PRVT-REDUNDANCY-MIB", "prvtRedundancyChassisEntryStatus"))
if mibBuilder.loadTexts: licStatus.setStatus('current')
switchover = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 0, 2))
if mibBuilder.loadTexts: switchover.setStatus('current')
redundancyStatus = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 0, 3)).setObjects(("PRVT-REDUNDANCY-MIB", "prvtRedundancyChassisStatus"))
if mibBuilder.loadTexts: redundancyStatus.setStatus('current')
mibBuilder.exportSymbols("PRVT-REDUNDANCY-MIB", prvtRedundancyChassisStatus=prvtRedundancyChassisStatus, licStatus=licStatus, prvtRedundancyChassisEntry=prvtRedundancyChassisEntry, prvtRedundancyObjects=prvtRedundancyObjects, prvtRedundancyMIB=prvtRedundancyMIB, PYSNMP_MODULE_ID=prvtRedundancyMIB, prvtRedundancyChassisSlotId=prvtRedundancyChassisSlotId, redundancyStatus=redundancyStatus, prvtRedundancyNotifications=prvtRedundancyNotifications, prvtRedundancyChassisEntryStatus=prvtRedundancyChassisEntryStatus, switchover=switchover, prvtRedundancyChassisLICType=prvtRedundancyChassisLICType, prvtRedundancyChassisTable=prvtRedundancyChassisTable)
