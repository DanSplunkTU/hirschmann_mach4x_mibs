#
# PySNMP MIB module PRVT-REDUNDANCY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-REDUNDANCY-MIB
# Produced by pysmi-1.1.3 at Mon Nov 22 20:08:06 2021
# On host fv-az42-715 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
software, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "software")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ModuleIdentity, ObjectIdentity, NotificationType, Counter32, Gauge32, TimeTicks, Unsigned32, MibIdentifier, Counter64, IpAddress = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ModuleIdentity", "ObjectIdentity", "NotificationType", "Counter32", "Gauge32", "TimeTicks", "Unsigned32", "MibIdentifier", "Counter64", "IpAddress")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
prvtRedundancyMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 111, 5))
prvtRedundancyMIB.setRevisions(('2013-12-17 00:00',))
if mibBuilder.loadTexts: prvtRedundancyMIB.setLastUpdated('201312170000Z')
if mibBuilder.loadTexts: prvtRedundancyMIB.setOrganization('BATM Advanced Communication')
prvtRedundancyNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 0))
prvtRedundancyObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1))
prvtRedundancyChassisTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1, 1), )
if mibBuilder.loadTexts: prvtRedundancyChassisTable.setStatus('current')
prvtRedundancyChassisEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1, 1, 1), ).setIndexNames((0, "PRVT-REDUNDANCY-MIB", "prvtRedundancyChassisSlotId"))
if mibBuilder.loadTexts: prvtRedundancyChassisEntry.setStatus('current')
prvtRedundancyChassisSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: prvtRedundancyChassisSlotId.setStatus('current')
prvtRedundancyChassisLICType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 19, 20))).clone(namedValues=NamedValues(("lc-unknown", 1), ("lc-8020-10GE", 3), ("lc-8064-1GE", 4), ("lc-8032-1GE", 19), ("lc-8062-1GE", 20)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtRedundancyChassisLICType.setStatus('current')
prvtRedundancyChassisStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("protected", 0), ("notProtected", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtRedundancyChassisStatus.setStatus('current')
prvtRedundancyChassisEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("extracted", 0), ("inserted", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtRedundancyChassisEntryStatus.setStatus('current')
licStatus = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 0, 1)).setObjects(("PRVT-REDUNDANCY-MIB", "prvtRedundancyChassisEntryStatus"))
if mibBuilder.loadTexts: licStatus.setStatus('current')
switchover = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 0, 2))
if mibBuilder.loadTexts: switchover.setStatus('current')
redundancyStatus = NotificationType((1, 3, 6, 1, 4, 1, 738, 10, 111, 5, 0, 3)).setObjects(("PRVT-REDUNDANCY-MIB", "prvtRedundancyChassisStatus"))
if mibBuilder.loadTexts: redundancyStatus.setStatus('current')
mibBuilder.exportSymbols("PRVT-REDUNDANCY-MIB", prvtRedundancyMIB=prvtRedundancyMIB, redundancyStatus=redundancyStatus, PYSNMP_MODULE_ID=prvtRedundancyMIB, prvtRedundancyNotifications=prvtRedundancyNotifications, prvtRedundancyChassisSlotId=prvtRedundancyChassisSlotId, prvtRedundancyChassisEntryStatus=prvtRedundancyChassisEntryStatus, licStatus=licStatus, prvtRedundancyChassisLICType=prvtRedundancyChassisLICType, prvtRedundancyChassisTable=prvtRedundancyChassisTable, switchover=switchover, prvtRedundancyObjects=prvtRedundancyObjects, prvtRedundancyChassisEntry=prvtRedundancyChassisEntry, prvtRedundancyChassisStatus=prvtRedundancyChassisStatus)
