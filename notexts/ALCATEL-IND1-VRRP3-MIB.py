#
# PySNMP MIB module ALCATEL-IND1-VRRP3-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-VRRP3-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 01:18:01 2022
# On host fv-az74-997 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
softentIND1Vrrp, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1Vrrp")
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Integer32, NotificationType, IpAddress, ObjectIdentity, TimeTicks, MibIdentifier, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ModuleIdentity, Gauge32, Unsigned32, iso, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "NotificationType", "IpAddress", "ObjectIdentity", "TimeTicks", "MibIdentifier", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ModuleIdentity", "Gauge32", "Unsigned32", "iso", "Bits")
DisplayString, RowStatus, TruthValue, MacAddress, TimeStamp, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TruthValue", "MacAddress", "TimeStamp", "TextualConvention")
VrId, = mibBuilder.importSymbols("VRRP-MIB", "VrId")
alcatelIND1VRRP3MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2))
alcatelIND1VRRP3MIB.setRevisions(('2007-04-03 00:00',))
if mibBuilder.loadTexts: alcatelIND1VRRP3MIB.setLastUpdated('200704030000Z')
if mibBuilder.loadTexts: alcatelIND1VRRP3MIB.setOrganization('Alcatel-Lucent')
alaVrrp3Operations = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1))
alaVrrp3Statistics = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 2))
alaVrrp3Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 3))
alaVrrp3NotificationCntl = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVrrp3NotificationCntl.setStatus('current')
alaVrrp3OperTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 2), )
if mibBuilder.loadTexts: alaVrrp3OperTable.setStatus('current')
alaVrrp3OperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperIpVersion"), (0, "ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperVrId"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: alaVrrp3OperEntry.setStatus('current')
alaVrrp3OperIpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2))))
if mibBuilder.loadTexts: alaVrrp3OperIpVersion.setStatus('current')
alaVrrp3OperVrId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 2, 1, 2), VrId())
if mibBuilder.loadTexts: alaVrrp3OperVrId.setStatus('current')
alaVrrp3OperVirtualMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 2, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3OperVirtualMacAddr.setStatus('current')
alaVrrp3OperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("initialize", 1), ("backup", 2), ("master", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3OperState.setStatus('current')
alaVrrp3OperAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2))).clone('down')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrp3OperAdminState.setStatus('current')
alaVrrp3OperPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrp3OperPriority.setStatus('current')
alaVrrp3OperVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("vrrpv2", 1), ("vrrpv3", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3OperVersion.setStatus('current')
alaVrrp3OperIpAddrCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3OperIpAddrCount.setStatus('current')
alaVrrp3OperMasterIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 2, 1, 9), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3OperMasterIpAddrType.setStatus('current')
alaVrrp3OperMasterIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 2, 1, 10), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3OperMasterIpAddr.setStatus('current')
alaVrrp3OperPrimaryIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 2, 1, 11), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3OperPrimaryIpAddrType.setStatus('current')
alaVrrp3OperPrimaryIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 2, 1, 12), InetAddress().clone(hexValue="00000000")).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3OperPrimaryIpAddr.setStatus('current')
alaVrrp3OperAdvInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)).clone(100)).setUnits('centiseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrp3OperAdvInterval.setStatus('current')
alaVrrp3OperPreemptMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 2, 1, 14), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrp3OperPreemptMode.setStatus('current')
alaVrrp3OperAcceptMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 2, 1, 15), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrp3OperAcceptMode.setStatus('current')
alaVrrp3OperUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 2, 1, 16), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3OperUpTime.setStatus('current')
alaVrrp3OperRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 2, 1, 17), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrp3OperRowStatus.setStatus('current')
alaVrrp3AssoIpAddrTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 3), )
if mibBuilder.loadTexts: alaVrrp3AssoIpAddrTable.setStatus('current')
alaVrrp3AssoIpAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperIpVersion"), (0, "ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperVrId"), (0, "IF-MIB", "ifIndex"), (0, "ALCATEL-IND1-VRRP3-MIB", "alaVrrp3AssoIpAddrType"), (0, "ALCATEL-IND1-VRRP3-MIB", "alaVrrp3AssoIpAddr"))
if mibBuilder.loadTexts: alaVrrp3AssoIpAddrEntry.setStatus('current')
alaVrrp3AssoIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: alaVrrp3AssoIpAddrType.setStatus('current')
alaVrrp3AssoIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 3, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(4, 16)))
if mibBuilder.loadTexts: alaVrrp3AssoIpAddr.setStatus('current')
alaVrrp3AssoIpAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrp3AssoIpAddrRowStatus.setStatus('current')
alaVrrp3RouterChecksumErrors = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3RouterChecksumErrors.setStatus('current')
alaVrrp3RouterVersionErrors = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3RouterVersionErrors.setStatus('current')
alaVrrp3RouterVrIdErrors = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3RouterVrIdErrors.setStatus('current')
alaVrrp3RouterStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 2, 4), )
if mibBuilder.loadTexts: alaVrrp3RouterStatsTable.setStatus('current')
alaVrrp3RouterStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 2, 4, 1), ).setIndexNames((0, "ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperIpVersion"), (0, "ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperVrId"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: alaVrrp3RouterStatsEntry.setStatus('current')
alaVrrp3StatsBecomeMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 2, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3StatsBecomeMaster.setStatus('current')
alaVrrp3StatsAdvertiseRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 2, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3StatsAdvertiseRcvd.setStatus('current')
alaVrrp3StatsAdvIntervalErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 2, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3StatsAdvIntervalErrors.setStatus('current')
alaVrrp3StatsIpTtlErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3StatsIpTtlErrors.setStatus('current')
alaVrrp3StatsPriZeroPktsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3StatsPriZeroPktsRcvd.setStatus('current')
alaVrrp3StatsPriZeroPktsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3StatsPriZeroPktsSent.setStatus('current')
alaVrrp3StatsInvldTypePktsRcvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 2, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3StatsInvldTypePktsRcvd.setStatus('current')
alaVrrp3StatsAddressListErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3StatsAddressListErrors.setStatus('current')
alaVrrp3StatsInvldAuthType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 2, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3StatsInvldAuthType.setStatus('current')
alaVrrp3StatsPacketLengthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 2, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3StatsPacketLengthErrors.setStatus('current')
alaVrrp3Notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 0))
alaVrrp3TrapNewMasterReason = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("priority", 0), ("preempted", 1), ("masterNoResponse", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaVrrp3TrapNewMasterReason.setStatus('current')
alaVrrp3TrapProtoErrReason = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("hopLimitError", 0), ("versionError", 1), ("checksumError", 2), ("vridError", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: alaVrrp3TrapProtoErrReason.setStatus('current')
alaVrrp3TrapNewMaster = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 0, 1)).setObjects(("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperMasterIpAddrType"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperMasterIpAddr"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3TrapNewMasterReason"))
if mibBuilder.loadTexts: alaVrrp3TrapNewMaster.setStatus('current')
alaVrrp3TrapProtoError = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 0, 2)).setObjects(("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3TrapProtoErrReason"))
if mibBuilder.loadTexts: alaVrrp3TrapProtoError.setStatus('current')
alaVrrp3MIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 3, 1))
alaVrrp3MIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 3, 2))
alaVrrp3MIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 3, 1, 1)).setObjects(("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperGroup"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3StatsGroup"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3TrapInfoGroup"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3NotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVrrp3MIBCompliance = alaVrrp3MIBCompliance.setStatus('current')
alaVrrp3OperGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 3, 2, 1)).setObjects(("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3NotificationCntl"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperVirtualMacAddr"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperState"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperAdminState"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperPriority"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperVersion"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperIpAddrCount"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperMasterIpAddrType"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperMasterIpAddr"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperPrimaryIpAddrType"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperPrimaryIpAddr"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperAdvInterval"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperPreemptMode"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperAcceptMode"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperUpTime"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperRowStatus"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3AssoIpAddrRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVrrp3OperGroup = alaVrrp3OperGroup.setStatus('current')
alaVrrp3StatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 3, 2, 2)).setObjects(("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3RouterChecksumErrors"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3RouterVersionErrors"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3RouterVrIdErrors"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3StatsBecomeMaster"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3StatsAdvertiseRcvd"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3StatsAdvIntervalErrors"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3StatsPriZeroPktsRcvd"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3StatsPriZeroPktsSent"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3StatsInvldTypePktsRcvd"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3StatsInvldAuthType"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3StatsIpTtlErrors"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3StatsAddressListErrors"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3StatsPacketLengthErrors"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVrrp3StatsGroup = alaVrrp3StatsGroup.setStatus('current')
alaVrrp3TrapInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 3, 2, 3)).setObjects(("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3TrapNewMasterReason"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3TrapProtoErrReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVrrp3TrapInfoGroup = alaVrrp3TrapInfoGroup.setStatus('current')
alaVrrp3NotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 2, 3, 2, 4)).setObjects(("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3TrapNewMaster"), ("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3TrapProtoError"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVrrp3NotificationsGroup = alaVrrp3NotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-VRRP3-MIB", alaVrrp3OperPreemptMode=alaVrrp3OperPreemptMode, alaVrrp3AssoIpAddrTable=alaVrrp3AssoIpAddrTable, alaVrrp3StatsAdvIntervalErrors=alaVrrp3StatsAdvIntervalErrors, alaVrrp3StatsAdvertiseRcvd=alaVrrp3StatsAdvertiseRcvd, alaVrrp3StatsInvldAuthType=alaVrrp3StatsInvldAuthType, alaVrrp3OperIpAddrCount=alaVrrp3OperIpAddrCount, alaVrrp3AssoIpAddrType=alaVrrp3AssoIpAddrType, alaVrrp3OperEntry=alaVrrp3OperEntry, alaVrrp3RouterChecksumErrors=alaVrrp3RouterChecksumErrors, alaVrrp3TrapProtoError=alaVrrp3TrapProtoError, alaVrrp3OperGroup=alaVrrp3OperGroup, alaVrrp3OperVirtualMacAddr=alaVrrp3OperVirtualMacAddr, alaVrrp3TrapInfoGroup=alaVrrp3TrapInfoGroup, alaVrrp3OperAdminState=alaVrrp3OperAdminState, alaVrrp3OperState=alaVrrp3OperState, alaVrrp3StatsPriZeroPktsRcvd=alaVrrp3StatsPriZeroPktsRcvd, alaVrrp3OperAcceptMode=alaVrrp3OperAcceptMode, alaVrrp3OperVrId=alaVrrp3OperVrId, alaVrrp3OperPrimaryIpAddrType=alaVrrp3OperPrimaryIpAddrType, alaVrrp3OperRowStatus=alaVrrp3OperRowStatus, alaVrrp3StatsPriZeroPktsSent=alaVrrp3StatsPriZeroPktsSent, alaVrrp3AssoIpAddrEntry=alaVrrp3AssoIpAddrEntry, alaVrrp3OperVersion=alaVrrp3OperVersion, alaVrrp3RouterStatsEntry=alaVrrp3RouterStatsEntry, alaVrrp3RouterVersionErrors=alaVrrp3RouterVersionErrors, alaVrrp3MIBCompliance=alaVrrp3MIBCompliance, alaVrrp3StatsBecomeMaster=alaVrrp3StatsBecomeMaster, alcatelIND1VRRP3MIB=alcatelIND1VRRP3MIB, alaVrrp3StatsGroup=alaVrrp3StatsGroup, alaVrrp3OperIpVersion=alaVrrp3OperIpVersion, alaVrrp3TrapNewMaster=alaVrrp3TrapNewMaster, PYSNMP_MODULE_ID=alcatelIND1VRRP3MIB, alaVrrp3NotificationCntl=alaVrrp3NotificationCntl, alaVrrp3MIBGroups=alaVrrp3MIBGroups, alaVrrp3OperTable=alaVrrp3OperTable, alaVrrp3TrapProtoErrReason=alaVrrp3TrapProtoErrReason, alaVrrp3RouterVrIdErrors=alaVrrp3RouterVrIdErrors, alaVrrp3Notifications=alaVrrp3Notifications, alaVrrp3StatsIpTtlErrors=alaVrrp3StatsIpTtlErrors, alaVrrp3Operations=alaVrrp3Operations, alaVrrp3OperPriority=alaVrrp3OperPriority, alaVrrp3AssoIpAddr=alaVrrp3AssoIpAddr, alaVrrp3TrapNewMasterReason=alaVrrp3TrapNewMasterReason, alaVrrp3OperMasterIpAddrType=alaVrrp3OperMasterIpAddrType, alaVrrp3OperUpTime=alaVrrp3OperUpTime, alaVrrp3Conformance=alaVrrp3Conformance, alaVrrp3Statistics=alaVrrp3Statistics, alaVrrp3StatsPacketLengthErrors=alaVrrp3StatsPacketLengthErrors, alaVrrp3OperPrimaryIpAddr=alaVrrp3OperPrimaryIpAddr, alaVrrp3OperAdvInterval=alaVrrp3OperAdvInterval, alaVrrp3StatsInvldTypePktsRcvd=alaVrrp3StatsInvldTypePktsRcvd, alaVrrp3AssoIpAddrRowStatus=alaVrrp3AssoIpAddrRowStatus, alaVrrp3RouterStatsTable=alaVrrp3RouterStatsTable, alaVrrp3StatsAddressListErrors=alaVrrp3StatsAddressListErrors, alaVrrp3NotificationsGroup=alaVrrp3NotificationsGroup, alaVrrp3MIBCompliances=alaVrrp3MIBCompliances, alaVrrp3OperMasterIpAddr=alaVrrp3OperMasterIpAddr)
