#
# PySNMP MIB module PROTECTION-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/sagemcom/PROTECTION-MIB
# Produced by pysmi-1.1.3 at Sun Nov 28 20:35:31 2021
# On host fv-az36-794 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
SagemBoolean, Severity = mibBuilder.importSymbols("EQUIPMENT-MIB", "SagemBoolean", "Severity")
sagemDr, = mibBuilder.importSymbols("SAGEM-DR-MIB", "sagemDr")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Unsigned32, Integer32, NotificationType, Bits, iso, ObjectIdentity, Counter32, MibIdentifier, IpAddress, Counter64, TimeTicks, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Unsigned32", "Integer32", "NotificationType", "Bits", "iso", "ObjectIdentity", "Counter32", "MibIdentifier", "IpAddress", "Counter64", "TimeTicks", "ModuleIdentity")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
protection = ModuleIdentity((1, 3, 6, 1, 4, 1, 1038, 130))
if mibBuilder.loadTexts: protection.setLastUpdated('9911290000Z')
if mibBuilder.loadTexts: protection.setOrganization('SAGEM-Tolbiac drd/ddp/tmhd')
msp = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 130, 10))
msSPRing = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 130, 20))
sncp = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 130, 30))
cardp = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 130, 40))
class TrafficStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("working", 1), ("protection", 2))

class MspInitiator(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unknown", 0), ("local", 1), ("remote", 2))

class MspFailure(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 4, 6))
    namedValues = NamedValues(("none", 0), ("pam", 1), ("scm", 2), ("otm", 4), ("scmOtm", 6))

class MspPriority(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unknown", 0), ("highG783", 1), ("low", 2))

class MspStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(15, 14, 13, 12, 11, 10, 8, 6, 4, 2, 1, 0))
    namedValues = NamedValues(("lockoutProtection", 15), ("forcedSwitch", 14), ("highSF", 13), ("lowSF", 12), ("highSD", 11), ("lowSD", 10), ("manualSwitch", 8), ("waitToRestore", 6), ("exercise", 4), ("reverseRequest", 2), ("doNotRevert", 1), ("noRequest", 0))

class MspType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("unknown", 0), ("onePlusOneOptimized", 1), ("onePlusOneCompatible", 2), ("oneForN", 3))

class MspDirection(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unknown", 0), ("unidirectionnal", 1), ("bidirectionnal", 2))

class MspCommand(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("clear", 0), ("lw", 1), ("lp", 2), ("fsW", 3), ("fsP", 4), ("msW", 5), ("msP", 6), ("exer", 7))

mspNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 130, 10, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspNumber.setStatus('current')
mspTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2), )
if mibBuilder.loadTexts: mspTable.setStatus('current')
mspEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1), ).setIndexNames((0, "PROTECTION-MIB", "mspIndex"))
if mibBuilder.loadTexts: mspEntry.setStatus('current')
mspIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspIndex.setStatus('current')
mspWorkingPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspWorkingPointer.setStatus('current')
mspProtectionPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mspProtectionPointer.setStatus('current')
mspType = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1, 4), MspType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mspType.setStatus('current')
mspDir = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1, 5), MspDirection()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mspDir.setStatus('current')
mspTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1, 6), TrafficStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspTraffic.setStatus('current')
mspRevertive = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1, 7), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mspRevertive.setStatus('current')
mspWtr = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mspWtr.setStatus('current')
mspSfSdPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1, 9), MspPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mspSfSdPriority.setStatus('current')
mspSfSdHoldOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mspSfSdHoldOffTime.setStatus('current')
mspCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1, 11), MspCommand()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mspCommand.setStatus('current')
mspInitiator = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1, 12), MspInitiator()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspInitiator.setStatus('current')
mspStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1, 13), MspStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspStatus.setStatus('current')
mspMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1, 14), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mspMonitor.setStatus('current')
mspFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1, 15), MspFailure()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspFailure.setStatus('current')
mspSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1, 16), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mspSeverity.setStatus('current')
mspPam = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1, 20), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mspPam.setStatus('current')
mspScm = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1, 21), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mspScm.setStatus('current')
mspOtm = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 10, 2, 1, 22), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mspOtm.setStatus('current')
class MsSPRingFailure(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("none", 0), ("ato", 1), ("arv", 2), ("aun", 3), ("ptm", 4), ("mms", 5), ("exr", 6))

class MsSPRingStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(19, 15, 13, 11, 8, 6, 5, 3, 1, 0))
    namedValues = NamedValues(("off", 19), ("lockoutProtection", 15), ("forcedSwitchR", 13), ("sfR", 11), ("sdR", 8), ("manualSwitchR", 6), ("waitToRestore", 5), ("exerR", 3), ("reverseRequestR", 1), ("noRequest", 0))

class MsSPRingCommand(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(16, 15, 13, 6, 3, 20, 19))
    namedValues = NamedValues(("clear", 16), ("lpS", 15), ("fsR", 13), ("msR", 6), ("exerR", 3), ("on", 20), ("off", 19))

class MsSPRingID(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 255))
    namedValues = NamedValues(("node0", 0), ("node1", 1), ("node2", 2), ("node3", 3), ("node4", 4), ("node5", 5), ("node6", 6), ("node7", 7), ("node8", 8), ("node9", 9), ("node10", 10), ("node11", 11), ("node12", 12), ("node13", 13), ("node14", 14), ("node15", 15), ("nodeUNK", 255))

class State(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("off", 0), ("idle", 1), ("pass", 2), ("switch", 3), ("unknown", 4))

msSPRingNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 130, 20, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msSPRingNumber.setStatus('current')
msSPRingTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6), )
if mibBuilder.loadTexts: msSPRingTable.setStatus('current')
msSPRingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1), ).setIndexNames((0, "PROTECTION-MIB", "msSPRingIndex"))
if mibBuilder.loadTexts: msSPRingEntry.setStatus('current')
msSPRingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msSPRingIndex.setStatus('current')
msSPRingWestPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msSPRingWestPointer.setStatus('current')
msSPRingEastPointer = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingEastPointer.setStatus('current')
msSPRingWtr = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingWtr.setStatus('current')
msSPRingSfSdHoldOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingSfSdHoldOffTime.setStatus('current')
msSPRingCommandSide = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingCommandSide.setStatus('current')
msSPRingCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 8), MsSPRingCommand()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingCommand.setStatus('current')
msSPRingInitiator1 = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 10), MsSPRingID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msSPRingInitiator1.setStatus('current')
msSPRingInitiator2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 11), MsSPRingID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msSPRingInitiator2.setStatus('current')
msSPRingNodeState = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 29), State()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msSPRingNodeState.setStatus('current')
msSPRingSwitchingSide = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msSPRingSwitchingSide.setStatus('current')
msSPRingWestTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 31), TrafficStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msSPRingWestTraffic.setStatus('current')
msSPRingEastTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 32), TrafficStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msSPRingEastTraffic.setStatus('current')
msSPRingWestStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 33), MsSPRingStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msSPRingWestStatus.setStatus('current')
msSPRingEastStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 34), MsSPRingStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msSPRingEastStatus.setStatus('current')
msSPRingMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 12), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingMonitor.setStatus('current')
msSPRingFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 13), MsSPRingFailure()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msSPRingFailure.setStatus('current')
msSPRingSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 14), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msSPRingSeverity.setStatus('current')
msSPRingAto = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 21), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingAto.setStatus('current')
msSPRingArv = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 22), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingArv.setStatus('current')
msSPRingAun = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 23), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingAun.setStatus('current')
msSPRingPtm = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 24), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingPtm.setStatus('current')
msSPRingMms = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 25), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingMms.setStatus('current')
msSPRingExr = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 26), Severity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingExr.setStatus('current')
msSPRingSimpleFailure = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 27), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingSimpleFailure.setStatus('current')
msSPRingId = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 6, 1, 28), MsSPRingID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingId.setStatus('current')
msSPRingTopoMapTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 130, 20, 11), )
if mibBuilder.loadTexts: msSPRingTopoMapTable.setStatus('current')
msSPRingTopoMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 130, 20, 11, 1), ).setIndexNames((0, "PROTECTION-MIB", "msSPRingTopoMapIndex"))
if mibBuilder.loadTexts: msSPRingTopoMapEntry.setStatus('current')
msSPRingTopoMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msSPRingTopoMapIndex.setStatus('current')
msSPRingTopoMapID = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 11, 1, 2), MsSPRingID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingTopoMapID.setStatus('current')
class MisconMapType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("terminated", 1), ("passedThrough", 2))

class MsSPRingSide(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("west", 0), ("east", 1), ("unknown", 2))

msSPRingMisconMapTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 130, 20, 21), )
if mibBuilder.loadTexts: msSPRingMisconMapTable.setStatus('current')
msSPRingMisconMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 130, 20, 21, 1), ).setIndexNames((0, "PROTECTION-MIB", "msSPRingMisconMapIndex"))
if mibBuilder.loadTexts: msSPRingMisconMapEntry.setStatus('current')
msSPRingMisconMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 21, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msSPRingMisconMapIndex.setStatus('current')
msSPRingMisconMapSide = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 21, 1, 2), MsSPRingSide()).setMaxAccess("readonly")
if mibBuilder.loadTexts: msSPRingMisconMapSide.setStatus('current')
msSPRingMisconMapIn = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 21, 1, 3), MsSPRingID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingMisconMapIn.setStatus('current')
msSPRingMisconMapOut = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 21, 1, 4), MsSPRingID()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingMisconMapOut.setStatus('current')
msSPRingMisconMapTimeSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 21, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingMisconMapTimeSlot.setStatus('current')
msSPRingMisconMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 21, 1, 6), MisconMapType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingMisconMapType.setStatus('current')
msSPRingMisconMapLOAccess = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 21, 1, 7), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingMisconMapLOAccess.setStatus('current')
msSPRingNUTTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 130, 20, 31), )
if mibBuilder.loadTexts: msSPRingNUTTable.setStatus('current')
msSPRingNUTEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 130, 20, 31, 1), ).setIndexNames((0, "PROTECTION-MIB", "msSPRingNUTIndex"))
if mibBuilder.loadTexts: msSPRingNUTEntry.setStatus('current')
msSPRingNUTIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 31, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: msSPRingNUTIndex.setStatus('current')
msSPRingNUTisNut = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 20, 31, 1, 2), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: msSPRingNUTisNut.setStatus('current')
class LinkType(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 10, 20))
    namedValues = NamedValues(("unknown", 0), ("au", 1), ("au4c", 2), ("au16c", 3), ("tu3", 10), ("tu12", 20))

class TriggerCriterion(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("none", 0), ("sncI", 1), ("sncN", 2), ("sncIRdi", 3), ("sncNRdi", 4))

class SNCStateProcess(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))
    namedValues = NamedValues(("nrnormal", 0), ("nrsecours", 1), ("wtr", 2), ("dontRev", 3), ("mssecours", 4), ("msnormal", 5), ("sdnormal", 6), ("sdsecours", 7), ("sfnormal", 8), ("fssecours", 9), ("sfsecours", 10), ("fsnormal", 11), ("lockout", 12))

class SNCCommand(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 19, 20))
    namedValues = NamedValues(("clear", 0), ("manualWorking", 1), ("manualProtection", 2), ("forcedWorking", 3), ("forcedProtection", 4), ("lockout", 5), ("off", 19), ("on", 20))

sncNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 130, 30, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sncNumber.setStatus('current')
sncTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 130, 30, 2), )
if mibBuilder.loadTexts: sncTable.setStatus('current')
sncEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 130, 30, 2, 1), ).setIndexNames((0, "PROTECTION-MIB", "sncIndex"))
if mibBuilder.loadTexts: sncEntry.setStatus('current')
sncIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 30, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sncIndex.setStatus('current')
sncCTPSink = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 30, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sncCTPSink.setStatus('current')
sncLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 30, 2, 1, 3), LinkType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sncLinkType.setStatus('current')
sncCTPSourceW = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 30, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sncCTPSourceW.setStatus('current')
sncCTPSourceP = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 30, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sncCTPSourceP.setStatus('current')
sncTrafficStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 30, 2, 1, 6), TrafficStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sncTrafficStatus.setStatus('current')
sncWorkingTriggerType = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 30, 2, 1, 8), TriggerCriterion()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sncWorkingTriggerType.setStatus('current')
sncProtectionTriggerType = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 30, 2, 1, 9), TriggerCriterion()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sncProtectionTriggerType.setStatus('current')
sncRevertive = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 30, 2, 1, 20), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sncRevertive.setStatus('current')
sncWtr = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 30, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sncWtr.setStatus('current')
sncStateProcess = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 30, 2, 1, 22), SNCStateProcess()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sncStateProcess.setStatus('current')
sncHoldOffTime = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 30, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sncHoldOffTime.setStatus('current')
sncCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 30, 2, 1, 24), SNCCommand()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sncCommand.setStatus('current')
class CardpFamily(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("none", 0), ("switch", 1))

class CardpCommand(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("clear", 0), ("manualSwitch", 1))

class CardpStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("notSwitched", 0), ("manualSwitch", 1), ("automaticSwitch", 2))

cardpNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 130, 40, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardpNumber.setStatus('current')
cardpTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 130, 40, 2), )
if mibBuilder.loadTexts: cardpTable.setStatus('current')
cardpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 130, 40, 2, 1), ).setIndexNames((0, "PROTECTION-MIB", "cardpIndex"))
if mibBuilder.loadTexts: cardpEntry.setStatus('current')
cardpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 40, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardpIndex.setStatus('current')
cardpBoardFamily = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 40, 2, 1, 2), CardpFamily()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardpBoardFamily.setStatus('current')
cardpReliefIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 40, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cardpReliefIndex.setStatus('current')
cardpTrafficStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 40, 2, 1, 4), TrafficStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardpTrafficStatus.setStatus('current')
cardpCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 40, 2, 1, 5), CardpCommand()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cardpCommand.setStatus('current')
cardpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 130, 40, 2, 1, 6), CardpStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardpStatus.setStatus('current')
mibBuilder.exportSymbols("PROTECTION-MIB", msSPRingWestPointer=msSPRingWestPointer, mspIndex=mspIndex, MspInitiator=MspInitiator, msSPRingNUTIndex=msSPRingNUTIndex, sncTable=sncTable, msSPRingMisconMapEntry=msSPRingMisconMapEntry, mspProtectionPointer=mspProtectionPointer, mspPam=mspPam, cardpBoardFamily=cardpBoardFamily, cardpReliefIndex=cardpReliefIndex, msSPRingExr=msSPRingExr, mspTable=mspTable, mspWorkingPointer=mspWorkingPointer, protection=protection, msSPRingNUTEntry=msSPRingNUTEntry, mspSeverity=mspSeverity, mspType=mspType, mspOtm=mspOtm, msSPRingEastPointer=msSPRingEastPointer, cardpTable=cardpTable, cardpTrafficStatus=cardpTrafficStatus, msSPRingNodeState=msSPRingNodeState, cardpCommand=cardpCommand, mspNumber=mspNumber, mspFailure=mspFailure, sncCTPSourceW=sncCTPSourceW, sncCTPSourceP=sncCTPSourceP, mspTraffic=mspTraffic, CardpCommand=CardpCommand, mspEntry=mspEntry, mspSfSdHoldOffTime=mspSfSdHoldOffTime, msSPRingEastStatus=msSPRingEastStatus, msSPRingSeverity=msSPRingSeverity, MisconMapType=MisconMapType, msSPRingWestStatus=msSPRingWestStatus, msSPRingMisconMapIn=msSPRingMisconMapIn, sncProtectionTriggerType=sncProtectionTriggerType, cardpEntry=cardpEntry, mspWtr=mspWtr, msSPRingNUTTable=msSPRingNUTTable, cardpStatus=cardpStatus, msSPRingMisconMapSide=msSPRingMisconMapSide, msp=msp, sncIndex=sncIndex, msSPRingInitiator2=msSPRingInitiator2, SNCCommand=SNCCommand, CardpFamily=CardpFamily, MsSPRingCommand=MsSPRingCommand, PYSNMP_MODULE_ID=protection, msSPRingWtr=msSPRingWtr, msSPRingNUTisNut=msSPRingNUTisNut, msSPRingSimpleFailure=msSPRingSimpleFailure, msSPRingMisconMapTimeSlot=msSPRingMisconMapTimeSlot, msSPRingMisconMapTable=msSPRingMisconMapTable, cardpIndex=cardpIndex, LinkType=LinkType, msSPRingInitiator1=msSPRingInitiator1, cardpNumber=cardpNumber, MspType=MspType, msSPRingTopoMapIndex=msSPRingTopoMapIndex, cardp=cardp, TriggerCriterion=TriggerCriterion, msSPRingTopoMapEntry=msSPRingTopoMapEntry, mspMonitor=mspMonitor, msSPRingId=msSPRingId, msSPRingAto=msSPRingAto, msSPRingEastTraffic=msSPRingEastTraffic, msSPRingAun=msSPRingAun, msSPRing=msSPRing, sncWorkingTriggerType=sncWorkingTriggerType, msSPRingTopoMapTable=msSPRingTopoMapTable, mspCommand=mspCommand, msSPRingMisconMapIndex=msSPRingMisconMapIndex, MsSPRingStatus=MsSPRingStatus, mspScm=mspScm, mspSfSdPriority=mspSfSdPriority, sncStateProcess=sncStateProcess, TrafficStatus=TrafficStatus, mspInitiator=mspInitiator, msSPRingMms=msSPRingMms, msSPRingFailure=msSPRingFailure, mspDir=mspDir, msSPRingCommand=msSPRingCommand, msSPRingMisconMapOut=msSPRingMisconMapOut, sncLinkType=sncLinkType, sncTrafficStatus=sncTrafficStatus, CardpStatus=CardpStatus, MsSPRingID=MsSPRingID, State=State, sncCTPSink=sncCTPSink, sncRevertive=sncRevertive, msSPRingWestTraffic=msSPRingWestTraffic, msSPRingNumber=msSPRingNumber, msSPRingMonitor=msSPRingMonitor, msSPRingCommandSide=msSPRingCommandSide, MspFailure=MspFailure, msSPRingEntry=msSPRingEntry, msSPRingMisconMapType=msSPRingMisconMapType, msSPRingMisconMapLOAccess=msSPRingMisconMapLOAccess, mspRevertive=mspRevertive, msSPRingTable=msSPRingTable, msSPRingTopoMapID=msSPRingTopoMapID, MspPriority=MspPriority, msSPRingSfSdHoldOffTime=msSPRingSfSdHoldOffTime, sncEntry=sncEntry, msSPRingSwitchingSide=msSPRingSwitchingSide, mspStatus=mspStatus, sncCommand=sncCommand, sncp=sncp, MspStatus=MspStatus, MsSPRingFailure=MsSPRingFailure, MspDirection=MspDirection, msSPRingPtm=msSPRingPtm, msSPRingArv=msSPRingArv, sncWtr=sncWtr, SNCStateProcess=SNCStateProcess, msSPRingIndex=msSPRingIndex, sncHoldOffTime=sncHoldOffTime, MspCommand=MspCommand, sncNumber=sncNumber, MsSPRingSide=MsSPRingSide)
