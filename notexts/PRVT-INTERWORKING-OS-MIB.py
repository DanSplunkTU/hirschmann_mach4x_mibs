#
# PySNMP MIB module PRVT-INTERWORKING-OS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-INTERWORKING-OS-MIB
# Produced by pysmi-1.1.3 at Tue Dec  7 14:20:35 2021
# On host fv-az42-142 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
InetAddressType, InetAddress, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetPortNumber")
software, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "software")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibIdentifier, Integer32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, TimeTicks, ObjectIdentity, IpAddress, Counter32, NotificationType, ModuleIdentity, Counter64, Bits, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Integer32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "TimeTicks", "ObjectIdentity", "IpAddress", "Counter32", "NotificationType", "ModuleIdentity", "Counter64", "Bits", "Gauge32")
TextualConvention, DateAndTime, TestAndIncr, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "TestAndIncr", "DisplayString")
prvtInterworkingOSMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 111, 1))
prvtInterworkingOSMIB.setRevisions(('2011-05-12 00:00', '2010-10-14 00:00', '2009-08-06 00:00',))
if mibBuilder.loadTexts: prvtInterworkingOSMIB.setLastUpdated('201105120000Z')
if mibBuilder.loadTexts: prvtInterworkingOSMIB.setOrganization('BATM Advanced Communication')
class PrvtFileLocationType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("fileSystem", 1), ("runningBinary", 2), ("runningScript", 3), ("techSupport", 4), ("tftp", 5), ("ftp", 6))

prvtInterworkingOSMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1))
version = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 1))
oSversionNumber = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oSversionNumber.setStatus('current')
oSversionDate = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: oSversionDate.setStatus('current')
bootVersionDate = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bootVersionDate.setStatus('current')
management = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2))
managementMisc = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 1))
managementMiscReset = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noop", 1), ("reset", 2), ("resetToDefaults", 3), ("saveAndReset", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: managementMiscReset.setStatus('current')
managementMiscReload = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noop", 1), ("saveAndReload", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: managementMiscReload.setStatus('current')
managementMiscReloadInTime = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: managementMiscReloadInTime.setStatus('current')
managementMiscReloadAtTime = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: managementMiscReloadAtTime.setStatus('current')
prvtBootConfigUpgrade = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 2))
prvtBootUpgradeSrcURI = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtBootUpgradeSrcURI.setStatus('current')
prvtBootApplicationName = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtBootApplicationName.setStatus('current')
prvtBootUpgradeCmd = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("ready", 1), ("apply", 2), ("applyExec", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtBootUpgradeCmd.setStatus('current')
prvtBootOperStatus = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("ready", 1), ("notReady", 2), ("upgradeInProgress", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtBootOperStatus.setStatus('current')
prvtBootErrorCondition = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))).clone(namedValues=NamedValues(("noError", 0), ("genericError", 1), ("copyFailed", 2), ("downloadFailed", 3), ("freeSpaceError", 4), ("validationFailed", 5), ("backupFailed", 6), ("inProgressError", 7), ("consistencyError", 8), ("fileSystemError", 9), ("profileNameError", 10), ("profileError", 11), ("fileNameError", 12), ("pathError", 13), ("zFileError", 14), ("cannotFindFile", 15), ("defApplicationProfileError", 16), ("configProfileError", 17), ("bootDevProfileError", 18), ("ftpServerProfileError", 19), ("ftpUserProfileError", 20), ("ftpPassProfileError", 21)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtBootErrorCondition.setStatus('current')
prvtConfigFiles = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 3))
prvtConfigFileAction = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 3, 1))
prvtConfigFileSource = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 3, 1, 1))
prvtConfigSourceType = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 3, 1, 1, 1), PrvtFileLocationType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtConfigSourceType.setStatus('current')
prvtConfigSourceFileName = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtConfigSourceFileName.setStatus('current')
prvtConfigFileTarget = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 3, 1, 2))
prvtConfigTargetType = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 3, 1, 2, 1), PrvtFileLocationType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtConfigTargetType.setStatus('current')
prvtConfigTargetFileName = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 3, 1, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtConfigTargetFileName.setStatus('current')
prvtConfigFileRemote = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 3, 1, 3))
prvtConfigRemoteAddressType = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 3, 1, 3, 1), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtConfigRemoteAddressType.setStatus('current')
prvtConfigRemoteAddress = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 3, 1, 3, 2), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtConfigRemoteAddress.setStatus('current')
prvtConfigRemotePort = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 3, 1, 3, 3), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtConfigRemotePort.setStatus('current')
prvtConfigRemoteUser = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 3, 1, 3, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtConfigRemoteUser.setStatus('current')
prvtConfigRemotePassword = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 3, 1, 3, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtConfigRemotePassword.setStatus('current')
prvtConfigActionSpinLock = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 3, 1, 4), TestAndIncr()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtConfigActionSpinLock.setStatus('current')
prvtConfigAction = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("idle", 1), ("prepare", 2), ("copy", 3), ("rename", 4), ("merge", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtConfigAction.setStatus('current')
prvtFileSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 4))
prvtFileSystemSize = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 4, 1), Unsigned32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtFileSystemSize.setStatus('current')
prvtFileSystemUsedSize = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 4, 2), Unsigned32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtFileSystemUsedSize.setStatus('current')
prvtFileSystemFreeSize = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 4, 3), Unsigned32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtFileSystemFreeSize.setStatus('current')
prvtFileSystemFileTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 4, 4), )
if mibBuilder.loadTexts: prvtFileSystemFileTable.setStatus('current')
prvtFileSystemFileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 4, 4, 1), ).setIndexNames((0, "PRVT-INTERWORKING-OS-MIB", "prvtFileSystemFileType"), (0, "PRVT-INTERWORKING-OS-MIB", "prvtFileSystemFileIndex"))
if mibBuilder.loadTexts: prvtFileSystemFileEntry.setStatus('current')
prvtFileSystemFileType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 4, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("osImage", 2))))
if mibBuilder.loadTexts: prvtFileSystemFileType.setStatus('current')
prvtFileSystemFileIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 4, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: prvtFileSystemFileIndex.setStatus('current')
prvtFileSystemFileCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 4, 4, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtFileSystemFileCreated.setStatus('current')
prvtFileSystemFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 4, 4, 1, 4), Unsigned32()).setUnits('Bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtFileSystemFileSize.setStatus('current')
prvtFileSystemFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 4, 4, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtFileSystemFileName.setStatus('current')
prvtFileSystemFileDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 2, 4, 4, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtFileSystemFileDelete.setStatus('current')
cpu = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 3))
cpuMonitoring = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 3, 1))
cpuMonitoringUtilization = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 111, 1, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuMonitoringUtilization.setStatus('current')
mibBuilder.exportSymbols("PRVT-INTERWORKING-OS-MIB", prvtBootOperStatus=prvtBootOperStatus, prvtFileSystemUsedSize=prvtFileSystemUsedSize, prvtConfigFileSource=prvtConfigFileSource, prvtFileSystemFileCreated=prvtFileSystemFileCreated, prvtBootApplicationName=prvtBootApplicationName, prvtBootErrorCondition=prvtBootErrorCondition, management=management, prvtFileSystemFileDelete=prvtFileSystemFileDelete, prvtBootUpgradeCmd=prvtBootUpgradeCmd, version=version, managementMiscReloadAtTime=managementMiscReloadAtTime, bootVersionDate=bootVersionDate, managementMiscReset=managementMiscReset, prvtConfigRemoteUser=prvtConfigRemoteUser, prvtFileSystemFileType=prvtFileSystemFileType, prvtBootConfigUpgrade=prvtBootConfigUpgrade, oSversionNumber=oSversionNumber, cpuMonitoring=cpuMonitoring, prvtConfigFileRemote=prvtConfigFileRemote, prvtConfigFileAction=prvtConfigFileAction, managementMiscReloadInTime=managementMiscReloadInTime, prvtInterworkingOSMIBObjects=prvtInterworkingOSMIBObjects, prvtFileSystemFileSize=prvtFileSystemFileSize, prvtFileSystemFileTable=prvtFileSystemFileTable, prvtConfigSourceType=prvtConfigSourceType, prvtConfigRemotePassword=prvtConfigRemotePassword, prvtFileSystemFreeSize=prvtFileSystemFreeSize, prvtBootUpgradeSrcURI=prvtBootUpgradeSrcURI, prvtConfigRemotePort=prvtConfigRemotePort, prvtConfigSourceFileName=prvtConfigSourceFileName, prvtFileSystemFileName=prvtFileSystemFileName, oSversionDate=oSversionDate, prvtConfigRemoteAddressType=prvtConfigRemoteAddressType, prvtConfigFileTarget=prvtConfigFileTarget, prvtConfigFiles=prvtConfigFiles, prvtConfigTargetType=prvtConfigTargetType, managementMiscReload=managementMiscReload, cpu=cpu, prvtFileSystemSize=prvtFileSystemSize, prvtConfigAction=prvtConfigAction, managementMisc=managementMisc, prvtFileSystemFileEntry=prvtFileSystemFileEntry, prvtConfigActionSpinLock=prvtConfigActionSpinLock, prvtInterworkingOSMIB=prvtInterworkingOSMIB, prvtConfigRemoteAddress=prvtConfigRemoteAddress, prvtFileSystem=prvtFileSystem, PrvtFileLocationType=PrvtFileLocationType, prvtFileSystemFileIndex=prvtFileSystemFileIndex, prvtConfigTargetFileName=prvtConfigTargetFileName, cpuMonitoringUtilization=cpuMonitoringUtilization, PYSNMP_MODULE_ID=prvtInterworkingOSMIB)
