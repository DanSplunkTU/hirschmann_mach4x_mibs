#
# PySNMP MIB module SIAE-RADIO-SYSTEM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/siae/SIAE-RADIO-SYSTEM-MIB
# Produced by pysmi-1.1.8 at Tue Feb  8 22:39:03 2022
# On host fv-az36-646 platform Linux version 5.11.0-1028-azure by user runner
# Using Python version 3.10.2 (main, Jan 16 2022, 11:55:27) [GCC 9.3.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
AlarmStatus, AlarmSeverityCode, alarmTrap = mibBuilder.importSymbols("SIAE-ALARM-MIB", "AlarmStatus", "AlarmSeverityCode", "alarmTrap")
equipIpSnmpAgentAddress, = mibBuilder.importSymbols("SIAE-EQUIP-MIB", "equipIpSnmpAgentAddress")
siaeMib, = mibBuilder.importSymbols("SIAE-TREE-MIB", "siaeMib")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, Counter64, Counter32, MibIdentifier, Gauge32, NotificationType, iso, IpAddress, ModuleIdentity, Bits, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "Counter64", "Counter32", "MibIdentifier", "Gauge32", "NotificationType", "iso", "IpAddress", "ModuleIdentity", "Bits", "Integer32")
StorageType, RowStatus, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "RowStatus", "TextualConvention", "DisplayString")
radioSystem = ModuleIdentity((1, 3, 6, 1, 4, 1, 3373, 1103, 80))
radioSystem.setRevisions(('2016-07-14 00:00', '2016-02-29 00:00', '2015-09-15 00:00', '2015-06-18 00:00', '2015-03-23 00:00', '2014-11-05 00:00', '2014-09-16 00:00', '2014-04-01 00:00',))
if mibBuilder.loadTexts: radioSystem.setLastUpdated('201607140000Z')
if mibBuilder.loadTexts: radioSystem.setOrganization('SIAE MICROELETTRONICA spa')
class ChannelSpacing(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
    namedValues = NamedValues(("bw3M5Hz", 0), ("bw7Mhz", 1), ("bw14MHz", 2), ("bw28MHz", 3), ("bw40MHz", 5), ("bw56MHz", 4), ("bw112MHz", 6), ("bw250Mhz", 7), ("bw500Mhz", 8), ("bw750Mhz", 9), ("bw1000Mhz", 10), ("bw10Mhz", 11), ("bw20Mhz", 12), ("bw30Mhz", 13), ("bw50Mhz", 14), ("bw60Mhz", 15), ("bw80Mhz", 16))

class ModulationMap(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("modBPSK", 0), ("mod4QAM", 1), ("mod8PSK", 2), ("mod16QAM", 3), ("mod32QAM", 4), ("mod64QAM", 5), ("mod128QAM", 6), ("mod256QAM", 7), ("mod512QAM", 8), ("mod1024QAM", 9), ("mod2048QAM", 10), ("mod4096QAM", 11))

class ConfigMismatchReason(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("securityMismatch", 0), ("frequencyFailMismatch", 1), ("frequencyAlertMismatch", 2), ("ptxMismatch", 3), ("channelSpacingAndModulationMismatch", 4), ("remoteConfigurationMismatch", 5), ("acmMismatch", 6), ("profileSetMismatch", 7))

class RadioCapability(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("reserved", 0), ("trafficSquelch", 1), ("baseBandLoop", 2), ("maxPower", 3), ("carrierOnly", 4), ("iQLoop", 5), ("rfLoopGivenMod", 6), ("rfLoopAnyMod", 7))

class BitsPerSymbol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))
    namedValues = NamedValues(("bpsBPSK", 1), ("bps4QAM", 2), ("bps8PSK", 3), ("bps16QAM", 4), ("bps32QAM", 5), ("bps64QAM", 6), ("bps128QAM", 7), ("bps256QAM", 8), ("bps512QAM", 9), ("bps1024QAM", 10), ("bps2048QAM", 11), ("bps4096QAM", 12))

class Stm1IndexOrZero(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2147483647)

radioSystemMibVersion = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioSystemMibVersion.setStatus('current')
radioTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 2), )
if mibBuilder.loadTexts: radioTable.setStatus('current')
radioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 2, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "radioIndex"))
if mibBuilder.loadTexts: radioEntry.setStatus('current')
radioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioIndex.setStatus('current')
radioLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioLabel.setStatus('current')
radioType = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("analogRadio", 2), ("digitalRadio", 3), ("xpicRadio", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioType.setStatus('current')
radioIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 2, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioIfIndex.setStatus('current')
radioStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 2, 1, 5), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioStorageType.setStatus('current')
xpicTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 3), )
if mibBuilder.loadTexts: xpicTable.setStatus('current')
xpicEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 3, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "xpicIndex"))
if mibBuilder.loadTexts: xpicEntry.setStatus('current')
xpicIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpicIndex.setStatus('current')
xpicRadioIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 3, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpicRadioIdx.setStatus('current')
xpicRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpicRowstatus.setStatus('current')
xpicChTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 4), )
if mibBuilder.loadTexts: xpicChTable.setStatus('current')
xpicChEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 4, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "xpicIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "xpicChPolIndex"))
if mibBuilder.loadTexts: xpicChEntry.setStatus('current')
xpicChPolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xpicChPolIndex.setStatus('current')
xpicChRadioIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 4, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpicChRadioIdx.setStatus('current')
xpicChRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: xpicChRowstatus.setStatus('current')
linkAvailableIndex = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAvailableIndex.setStatus('current')
linkTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 6), )
if mibBuilder.loadTexts: linkTable.setStatus('current')
linkEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 6, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"))
if mibBuilder.loadTexts: linkEntry.setStatus('current')
linkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 6, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkIndex.setStatus('current')
linkType = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 6, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("radio1p0", 1), ("radio1p1HS", 2), ("radio1p1FD", 3), ("radio2p0Xpic", 4), ("radio2p2XpicHS", 5), ("radio2p2XpicFD", 6), ("radioNp1", 7))).clone('radio1p0')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkType.setStatus('current')
linkLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 6, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkLabel.setStatus('current')
linkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 6, 1, 4), InterfaceIndexOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkIfIndex.setStatus('current')
linkRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 6, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkRowstatus.setStatus('current')
linkChTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 7), )
if mibBuilder.loadTexts: linkChTable.setStatus('current')
linkChEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 7, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "linkChIndex"))
if mibBuilder.loadTexts: linkChEntry.setStatus('current')
linkChIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkChIndex.setStatus('current')
linkChRadioIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 7, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkChRadioIdx.setStatus('current')
linkChRadioSettingsIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 7, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkChRadioSettingsIdx.setStatus('current')
linkChRowstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 7, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkChRowstatus.setStatus('current')
linkSettingsTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 8), )
if mibBuilder.loadTexts: linkSettingsTable.setStatus('current')
linkSettingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 8, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"))
if mibBuilder.loadTexts: linkSettingsEntry.setStatus('current')
linkBandwidthAndModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 8, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkBandwidthAndModulation.setStatus('current')
linkAcmEngineEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 8, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkAcmEngineEnable.setStatus('current')
linkTxUpperProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 8, 1, 3), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkTxUpperProfile.setStatus('current')
linkTxLowerProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 8, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkTxLowerProfile.setStatus('current')
linkId = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 8, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkId.setStatus('current')
linkTxPwrThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 8, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(3, 15)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkTxPwrThresh.setStatus('current')
linkRxPwrThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 8, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-99, -40)).clone(-70)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkRxPwrThresh.setStatus('current')
linkSynchSetupProtocolEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 8, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkSynchSetupProtocolEnable.setStatus('current')
linkProfilesSetSelection = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 8, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("highThroughput", 1), ("highGain", 2))).clone('highThroughput')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkProfilesSetSelection.setStatus('current')
linkXpicControlProcedure = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 8, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkXpicControlProcedure.setStatus('current')
radioSettingsTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 9), )
if mibBuilder.loadTexts: radioSettingsTable.setStatus('current')
radioSettingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 9, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "radioSettingsIndex"))
if mibBuilder.loadTexts: radioSettingsEntry.setStatus('current')
radioSettingsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioSettingsIndex.setStatus('current')
radioSettingsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 9, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioSettingsRowStatus.setStatus('current')
radioSettingsLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioSettingsLabel.setStatus('current')
radioTxFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 9, 1, 4), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioTxFrequency.setStatus('current')
radioDuplexFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 9, 1, 5), Integer32().clone(-2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioDuplexFrequency.setStatus('current')
radioTxAttenuation = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 9, 1, 6), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioTxAttenuation.setStatus('current')
radioAtpcManual = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioAtpcManual.setStatus('current')
radioAtpcPwrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 9, 1, 8), Integer32().clone(-40)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioAtpcPwrHigh.setStatus('current')
radioAtpcPwrLow = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 9, 1, 9), Integer32().clone(-60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioAtpcPwrLow.setStatus('current')
radioAtpcRange = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 9, 1, 10), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioAtpcRange.setStatus('current')
radioFreqTableSelection = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 9, 1, 11), ChannelSpacing()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: radioFreqTableSelection.setStatus('current')
tdmSettingsTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 10), )
if mibBuilder.loadTexts: tdmSettingsTable.setStatus('current')
tdmSettingsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 10, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "tdmPolIndex"))
if mibBuilder.loadTexts: tdmSettingsEntry.setStatus('current')
tdmPolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 10, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tdmPolIndex.setStatus('current')
tdmE1Channel = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 10, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmE1Channel.setStatus('current')
tdmE1Framer = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tdmE1Framer.setStatus('current')
radioCapabilitiesTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 11), )
if mibBuilder.loadTexts: radioCapabilitiesTable.setStatus('current')
radioCapabilitiesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 11, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "radioIndex"))
if mibBuilder.loadTexts: radioCapabilitiesEntry.setStatus('current')
radioCapabilitiesCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 11, 1, 1), RadioCapability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioCapabilitiesCapability.setStatus('current')
radioCapabilitiesTxMinFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioCapabilitiesTxMinFrequency.setStatus('current')
radioCapabilitiesTxMaxFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 11, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioCapabilitiesTxMaxFrequency.setStatus('current')
radioCapabilitiesStepFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 11, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioCapabilitiesStepFrequency.setStatus('current')
radioCapabilitiesMinPtxNominalValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 11, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioCapabilitiesMinPtxNominalValue.setStatus('current')
radioCapabilitiesMaxPtxNominalValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 11, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioCapabilitiesMaxPtxNominalValue.setStatus('current')
radioCapabilitiesExtendedMinPwr = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 11, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioCapabilitiesExtendedMinPwr.setStatus('current')
radioStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12), )
if mibBuilder.loadTexts: radioStatusTable.setStatus('current')
radioStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "radioIndex"))
if mibBuilder.loadTexts: radioStatusEntry.setStatus('current')
radioCurrentDuplexFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioCurrentDuplexFrequency.setStatus('current')
radioTxChannelSpacing = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioTxChannelSpacing.setStatus('current')
radioPrx = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioPrx.setStatus('current')
radioPtx = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioPtx.setStatus('current')
radioNormalizedMse = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioNormalizedMse.setStatus('current')
radioRxActiveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cleared", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioRxActiveStatus.setStatus('current')
radioTxActiveStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cleared", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioTxActiveStatus.setStatus('current')
radioCableOpenAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 8), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioCableOpenAlarm.setStatus('current')
radioCableShortAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 9), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioCableShortAlarm.setStatus('current')
radioInvalidFrequencyAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 10), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioInvalidFrequencyAlarm.setStatus('current')
radioBaseBandRxAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 11), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioBaseBandRxAlarm.setStatus('current')
radioModulatorFailAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 12), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioModulatorFailAlarm.setStatus('current')
radioDemodulatorFailAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 13), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioDemodulatorFailAlarm.setStatus('current')
radioRxPowerLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 14), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioRxPowerLowAlarm.setStatus('current')
radioTxPowerLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 15), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioTxPowerLowAlarm.setStatus('current')
radioRemDemodulatorFailAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 16), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioRemDemodulatorFailAlarm.setStatus('current')
radioVcoFailAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 17), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioVcoFailAlarm.setStatus('current')
radioRxIFAgcAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 18), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioRxIFAgcAlarm.setStatus('current')
radioTxIFAgcAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 19), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioTxIFAgcAlarm.setStatus('current')
radioIduOduCommunicationAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 20), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioIduOduCommunicationAlarm.setStatus('current')
radioOduIduCommunicationAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 21), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioOduIduCommunicationAlarm.setStatus('current')
radioLocalOduAlarmSynthesis = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 22), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioLocalOduAlarmSynthesis.setStatus('current')
radioRemoteOduAlarmSynthesis = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 23), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioRemoteOduAlarmSynthesis.setStatus('current')
radioConfigMismatchAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 24), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioConfigMismatchAlarm.setStatus('current')
radioConfigAlarmReason = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 25), ConfigMismatchReason()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioConfigAlarmReason.setStatus('current')
radioRxQualityLowAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 26), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioRxQualityLowAlarm.setStatus('current')
radioRxQualityWarningAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 27), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioRxQualityWarningAlarm.setStatus('current')
radioXpd = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 12, 1, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioXpd.setStatus('current')
radioMaintTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 13), )
if mibBuilder.loadTexts: radioMaintTable.setStatus('current')
radioMaintEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 13, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "radioIndex"))
if mibBuilder.loadTexts: radioMaintEntry.setStatus('current')
radioTxStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("transmitterOff", 1), ("transmitterOn", 2), ("permanentOff", 3))).clone('transmitterOn')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioTxStatus.setStatus('current')
radioCarrierOnly = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 13, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("carrierOnlyOff", 1), ("carrierOnlyOn", 2))).clone('carrierOnlyOff')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioCarrierOnly.setStatus('current')
radioLoop = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 7, 8, 9))).clone(namedValues=NamedValues(("loopOff", 1), ("rfLoop", 2), ("iqLoop", 3), ("baseBandLoop", 4), ("rfLoopAtFixedMod", 6), ("baseBandLoopEthSquelch", 7), ("rfLoopAtFixedModEthSquelch", 8), ("iqloopEthSquelch", 9))).clone('loopOff')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioLoop.setStatus('current')
radioRFLoopTestResult = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("testNone", 0), ("testRunning", 1), ("testNotPossible", 2), ("testPassed", 3), ("testFail", 4), ("testInterrupted", 5))).clone('testNone')).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioRFLoopTestResult.setStatus('current')
radioRFLoopTestPercTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 13, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioRFLoopTestPercTime.setStatus('current')
radioRtPsuOff = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("rtPsuOff", 1), ("rtPsuOn", 2))).clone('rtPsuOn')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioRtPsuOff.setStatus('current')
radioLom = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioLom.setStatus('current')
radioXpic = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 13, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioXpic.setStatus('current')
radioFrequencyTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 14), )
if mibBuilder.loadTexts: radioFrequencyTable.setStatus('current')
radioFreqTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 14, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "radioIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "radioFreqChannelId"))
if mibBuilder.loadTexts: radioFreqTabEntry.setStatus('current')
radioFreqChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 14, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioFreqChannelId.setStatus('current')
radioFreqChannelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 14, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioFreqChannelNum.setStatus('current')
radioFreqValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 14, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioFreqValue.setStatus('current')
radioDuplexFrequencyTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 15), )
if mibBuilder.loadTexts: radioDuplexFrequencyTable.setStatus('current')
radioDuplexFreqEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 15, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "radioIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "radioDuplexFreqId"))
if mibBuilder.loadTexts: radioDuplexFreqEntry.setStatus('current')
radioDuplexFreqId = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 15, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioDuplexFreqId.setStatus('current')
radioDuplexFreqValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioDuplexFreqValue.setStatus('current')
radioModulationTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 16), )
if mibBuilder.loadTexts: radioModulationTable.setStatus('current')
radioModulationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 16, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "radioIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "radioChannelSpacing"))
if mibBuilder.loadTexts: radioModulationEntry.setStatus('current')
radioChannelSpacing = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 16, 1, 1), ChannelSpacing()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioChannelSpacing.setStatus('current')
radioModulationMap = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 16, 1, 2), ModulationMap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioModulationMap.setStatus('current')
radioRefModulationMap = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 16, 1, 3), ModulationMap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioRefModulationMap.setStatus('current')
linkStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17), )
if mibBuilder.loadTexts: linkStatusTable.setStatus('current')
linkStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "linkPolIndex"))
if mibBuilder.loadTexts: linkStatusEntry.setStatus('current')
linkPolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkPolIndex.setStatus('current')
linkAcmRxProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmRxProfile.setStatus('current')
linkAcmTxProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmTxProfile.setStatus('current')
linkAcmRxProfileLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmRxProfileLabel.setStatus('current')
linkAcmTxProfileLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmTxProfileLabel.setStatus('current')
linkAcmRxModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 6), BitsPerSymbol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmRxModulation.setStatus('current')
linkAcmTxModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 7), BitsPerSymbol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmTxModulation.setStatus('current')
linkAcmRxCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("normal", 1), ("strong", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmRxCode.setStatus('current')
linkAcmTxCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("normal", 1), ("strong", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmTxCode.setStatus('current')
linkTxETHCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkTxETHCapacity.setStatus('current')
linkRxETHCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkRxETHCapacity.setStatus('current')
linkTxTDMCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkTxTDMCapacity.setStatus('current')
linkRxTDMCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkRxTDMCapacity.setStatus('current')
linkRescueModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 14), BitsPerSymbol().clone('bps4QAM')).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkRescueModulation.setStatus('current')
linkReducedCapacityAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 15), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkReducedCapacityAlarm.setStatus('current')
linkLinkTelemetryFailAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 16), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkLinkTelemetryFailAlarm.setStatus('current')
linkIdMismatchAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 17), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkIdMismatchAlarm.setStatus('current')
linkRadioEocAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 18), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkRadioEocAlarm.setStatus('current')
linkSetupMismatchAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 19), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkSetupMismatchAlarm.setStatus('current')
linkRescueSetupAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 20), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkRescueSetupAlarm.setStatus('current')
linkXpicProcedureBlockAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 21), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkXpicProcedureBlockAlarm.setStatus('current')
linkXpicRemTxOffAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 22), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkXpicRemTxOffAlarm.setStatus('current')
linkRemoteIduAlarmSynthesis = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 23), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkRemoteIduAlarmSynthesis.setStatus('current')
linkNotMatchingRadiosAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 24), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkNotMatchingRadiosAlarm.setStatus('current')
linkConfigurationInProgress = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cleared", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkConfigurationInProgress.setStatus('current')
linkXpd = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 17, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkXpd.setStatus('deprecated')
linkTfcTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 18), )
if mibBuilder.loadTexts: linkTfcTable.setStatus('deprecated')
linkTfcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 18, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"))
if mibBuilder.loadTexts: linkTfcEntry.setStatus('deprecated')
linkTfcAction = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 18, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notActive", 0), ("reset", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkTfcAction.setStatus('deprecated')
linkTfcControl = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 18, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkTfcControl.setStatus('deprecated')
linkTfcWatchWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 18, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkTfcWatchWindow.setStatus('deprecated')
linkTfcAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 18, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkTfcAlarmThreshold.setStatus('deprecated')
linkTfcAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 18, 1, 5), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkTfcAlarm.setStatus('deprecated')
linkTfcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 18, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkTfcRowStatus.setStatus('deprecated')
linkMaintTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 19), )
if mibBuilder.loadTexts: linkMaintTable.setStatus('current')
linkMaintEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 19, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "linkPolIndex"))
if mibBuilder.loadTexts: linkMaintEntry.setStatus('current')
linkBerStart = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 19, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("restart", 1), ("stop", 2))).clone('stop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkBerStart.setStatus('current')
linkBaseBandLom = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 19, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkBaseBandLom.setStatus('current')
linkFadeMarginMeasure = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 19, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkFadeMarginMeasure.setStatus('deprecated')
linkXpicControlProcedureReset = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 19, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notActive", 0), ("reset", 1))).clone('notActive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkXpicControlProcedureReset.setStatus('current')
linkBerTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 20), )
if mibBuilder.loadTexts: linkBerTable.setStatus('current')
linkBerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 20, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "linkPolIndex"))
if mibBuilder.loadTexts: linkBerEntry.setStatus('current')
linkBerErrorCounterH = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 20, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkBerErrorCounterH.setStatus('current')
linkBerErrorCounterL = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 20, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkBerErrorCounterL.setStatus('current')
linkBerDataCounterH = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 20, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkBerDataCounterH.setStatus('current')
linkBerDataCounterL = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 20, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkBerDataCounterL.setStatus('current')
linkBerSyncLossAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 20, 1, 5), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkBerSyncLossAlarm.setStatus('current')
linkBerSyncLossAlarmCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 20, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkBerSyncLossAlarmCounter.setStatus('current')
linkBerElapsedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 20, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkBerElapsedTime.setStatus('current')
linkAcmTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 21), )
if mibBuilder.loadTexts: linkAcmTable.setStatus('current')
linkAcmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 21, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "linkPolIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "linkAcmProfileId"))
if mibBuilder.loadTexts: linkAcmEntry.setStatus('current')
linkAcmProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 21, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmProfileId.setStatus('current')
linkAcmProfileModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 21, 1, 2), BitsPerSymbol()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmProfileModulation.setStatus('current')
linkAcmProfileCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("strong", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmProfileCode.setStatus('current')
linkAcmProfileCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 21, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmProfileCapacity.setStatus('current')
linkAcmProfileLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 21, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkAcmProfileLabel.setStatus('current')
linkAcmProfileEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 21, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmProfileEnable.setStatus('current')
linkAcmMaxTDMCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 21, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmMaxTDMCapacity.setStatus('deprecated')
linkAcmPowerScaling = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 21, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmPowerScaling.setStatus('deprecated')
linkAcmDownshiftThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 21, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmDownshiftThreshold.setStatus('current')
linkAcmUpshiftThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 21, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmUpshiftThreshold.setStatus('current')
linkAcmActiveProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 21, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("cleared", 1), ("activeRx", 2), ("activeTx", 3), ("activeBoth", 4))).clone('cleared')).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmActiveProfile.setStatus('current')
linkAcmTDMCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 21, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmTDMCapacity.setStatus('current')
linkAcmETHCapacity = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 21, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmETHCapacity.setStatus('current')
linkAcmAtpcRxPowerScaling = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 21, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmAtpcRxPowerScaling.setStatus('deprecated')
linkAcmPowerRange = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 21, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkAcmPowerRange.setStatus('deprecated')
linkProTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 22), )
if mibBuilder.loadTexts: linkProTable.setStatus('deprecated')
linkProEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 22, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"))
if mibBuilder.loadTexts: linkProEntry.setStatus('deprecated')
linkProProtectionTxChIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 22, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkProProtectionTxChIdx.setStatus('deprecated')
linkProProtectionRxChIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 22, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkProProtectionRxChIdx.setStatus('deprecated')
linkProTxWtrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 22, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkProTxWtrTime.setStatus('deprecated')
linkProRxWtrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 22, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkProRxWtrTime.setStatus('deprecated')
linkProTxSwitchedChIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 22, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkProTxSwitchedChIdx.setStatus('deprecated')
linkProRxSwitchedChIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 22, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkProRxSwitchedChIdx.setStatus('deprecated')
linkProTxRevertive = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 22, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkProTxRevertive.setStatus('deprecated')
linkProRxRevertive = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 22, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkProRxRevertive.setStatus('deprecated')
linkProExtraTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 22, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkProExtraTraffic.setStatus('deprecated')
linkProRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 22, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkProRowStatus.setStatus('deprecated')
linkProMaintTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 23), )
if mibBuilder.loadTexts: linkProMaintTable.setStatus('deprecated')
linkProMaintEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 23, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"))
if mibBuilder.loadTexts: linkProMaintEntry.setStatus('deprecated')
linkProMaintTxLockout = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 23, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkProMaintTxLockout.setStatus('deprecated')
linkProMaintRxLockout = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 23, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkProMaintRxLockout.setStatus('deprecated')
linkProMaintTxForced = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 23, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkProMaintTxForced.setStatus('deprecated')
linkProMaintRxForced = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 23, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkProMaintRxForced.setStatus('deprecated')
linkProMaintTxWtrReset = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 23, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notActive", 1), ("on", 2))).clone('notActive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkProMaintTxWtrReset.setStatus('deprecated')
linkProMaintRxWtrReset = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 23, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notActive", 1), ("on", 2))).clone('notActive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkProMaintRxWtrReset.setStatus('deprecated')
linkCapabilitiesTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 24), )
if mibBuilder.loadTexts: linkCapabilitiesTable.setStatus('deprecated')
linkCapabilitiesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 24, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"))
if mibBuilder.loadTexts: linkCapabilitiesEntry.setStatus('deprecated')
linkCapabilitiesCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 24, 1, 1), RadioCapability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkCapabilitiesCapability.setStatus('deprecated')
linkCapabilitiesTxMinFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 24, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkCapabilitiesTxMinFrequency.setStatus('deprecated')
linkCapabilitiesTxMaxFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 24, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkCapabilitiesTxMaxFrequency.setStatus('deprecated')
linkCapabilitiesStepFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 24, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkCapabilitiesStepFrequency.setStatus('deprecated')
linkCapabilitiesMinPtxNominalValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 24, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkCapabilitiesMinPtxNominalValue.setStatus('deprecated')
linkCapabilitiesMaxPtxNominalValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 24, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkCapabilitiesMaxPtxNominalValue.setStatus('deprecated')
linkCapabilitiesExtendedMinPwr = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 24, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkCapabilitiesExtendedMinPwr.setStatus('deprecated')
linkFrequencyTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 25), )
if mibBuilder.loadTexts: linkFrequencyTable.setStatus('deprecated')
linkFreqTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 25, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "linkFreqChannelId"))
if mibBuilder.loadTexts: linkFreqTabEntry.setStatus('deprecated')
linkFreqChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 25, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkFreqChannelId.setStatus('deprecated')
linkFreqChannelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 25, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkFreqChannelNum.setStatus('deprecated')
linkFreqValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 25, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkFreqValue.setStatus('deprecated')
linkDuplexFrequencyTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 26), )
if mibBuilder.loadTexts: linkDuplexFrequencyTable.setStatus('deprecated')
linkDuplexFreqEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 26, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "linkDuplexFreqId"))
if mibBuilder.loadTexts: linkDuplexFreqEntry.setStatus('deprecated')
linkDuplexFreqId = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 26, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkDuplexFreqId.setStatus('deprecated')
linkDuplexFreqValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 26, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkDuplexFreqValue.setStatus('deprecated')
linkModulationTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 27), )
if mibBuilder.loadTexts: linkModulationTable.setStatus('current')
linkModulationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 27, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "linkChannelSpacing"))
if mibBuilder.loadTexts: linkModulationEntry.setStatus('current')
linkChannelSpacing = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 27, 1, 1), ChannelSpacing()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkChannelSpacing.setStatus('current')
linkModulationMap = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 27, 1, 2), ModulationMap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkModulationMap.setStatus('current')
linkRefModulationMap = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 27, 1, 3), ModulationMap()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkRefModulationMap.setStatus('current')
combinedRadioCapabilitiesTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 28), )
if mibBuilder.loadTexts: combinedRadioCapabilitiesTable.setStatus('current')
combinedRadioCapabilitiesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 28, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "radioSettingsIndex"))
if mibBuilder.loadTexts: combinedRadioCapabilitiesEntry.setStatus('current')
combinedRadioCapabilitiesCapability = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 28, 1, 1), RadioCapability()).setMaxAccess("readonly")
if mibBuilder.loadTexts: combinedRadioCapabilitiesCapability.setStatus('current')
combinedRadioCapabilitiesTxMinFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 28, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: combinedRadioCapabilitiesTxMinFrequency.setStatus('current')
combinedRadioCapabilitiesTxMaxFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 28, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: combinedRadioCapabilitiesTxMaxFrequency.setStatus('current')
combinedRadioCapabilitiesStepFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 28, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: combinedRadioCapabilitiesStepFrequency.setStatus('current')
combinedRadioCapabilitiesMinPtxNominalValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 28, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: combinedRadioCapabilitiesMinPtxNominalValue.setStatus('current')
combinedRadioCapabilitiesMaxPtxNominalValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 28, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: combinedRadioCapabilitiesMaxPtxNominalValue.setStatus('current')
combinedRadioCapabilitiesExtendedMinPwr = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 28, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: combinedRadioCapabilitiesExtendedMinPwr.setStatus('current')
combinedRadioFrequencyTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 29), )
if mibBuilder.loadTexts: combinedRadioFrequencyTable.setStatus('current')
combinedRadioFreqTabEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 29, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "radioSettingsIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "combinedRadioFreqChannelId"))
if mibBuilder.loadTexts: combinedRadioFreqTabEntry.setStatus('current')
combinedRadioFreqChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 29, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: combinedRadioFreqChannelId.setStatus('current')
combinedRadioFreqChannelNum = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 29, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: combinedRadioFreqChannelNum.setStatus('current')
combinedRadioFreqValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 29, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: combinedRadioFreqValue.setStatus('current')
combinedRadioDuplexFrequencyTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 30), )
if mibBuilder.loadTexts: combinedRadioDuplexFrequencyTable.setStatus('current')
combinedRadioDuplexFreqEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 30, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "radioSettingsIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "combinedRadioDuplexFreqId"))
if mibBuilder.loadTexts: combinedRadioDuplexFreqEntry.setStatus('current')
combinedRadioDuplexFreqId = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 30, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: combinedRadioDuplexFreqId.setStatus('current')
combinedRadioDuplexFreqValue = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 30, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: combinedRadioDuplexFreqValue.setStatus('current')
combinedRadioPowerScalingTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 31), )
if mibBuilder.loadTexts: combinedRadioPowerScalingTable.setStatus('current')
combinedRadioPowerScalingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 31, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "radioSettingsIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "linkAcmProfileId"))
if mibBuilder.loadTexts: combinedRadioPowerScalingEntry.setStatus('current')
combinedRadioPowerScaling = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 31, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: combinedRadioPowerScaling.setStatus('current')
combinedRadioAtpcRxPowerScaling = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 31, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: combinedRadioAtpcRxPowerScaling.setStatus('current')
combinedRadioPowerRange = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 31, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: combinedRadioPowerRange.setStatus('current')
stm1BulkMappingTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 32), )
if mibBuilder.loadTexts: stm1BulkMappingTable.setStatus('current')
stm1BulkMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 32, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "stm1BulkPolIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "stm1BulkChanIndex"))
if mibBuilder.loadTexts: stm1BulkMappingEntry.setStatus('current')
stm1BulkPolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 32, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stm1BulkPolIndex.setStatus('current')
stm1BulkChanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 32, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stm1BulkChanIndex.setStatus('current')
stm1BulkChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 32, 1, 3), Stm1IndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: stm1BulkChannel.setStatus('current')
linkE1vsSTM1CapacityTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 33), )
if mibBuilder.loadTexts: linkE1vsSTM1CapacityTable.setStatus('current')
linkE1vsSTM1CapacityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 33, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "linkAcmProfileId"), (0, "SIAE-RADIO-SYSTEM-MIB", "linkE1vsSTM1CapacityStm1"))
if mibBuilder.loadTexts: linkE1vsSTM1CapacityEntry.setStatus('current')
linkE1vsSTM1CapacityStm1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 33, 1, 1), Integer32())
if mibBuilder.loadTexts: linkE1vsSTM1CapacityStm1.setStatus('current')
linkE1vsSTM1CapacityE1 = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 33, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkE1vsSTM1CapacityE1.setStatus('current')
linkTfcV2Table = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 34), )
if mibBuilder.loadTexts: linkTfcV2Table.setStatus('current')
linkTfcV2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 34, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "linkPolIndex"))
if mibBuilder.loadTexts: linkTfcV2Entry.setStatus('current')
linkTfcV2Action = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 34, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("notActive", 0), ("reset", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkTfcV2Action.setStatus('current')
linkTfcV2Control = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 34, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkTfcV2Control.setStatus('current')
linkTfcV2WatchWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 34, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 300)).clone(60)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkTfcV2WatchWindow.setStatus('current')
linkTfcV2AlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 34, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkTfcV2AlarmThreshold.setStatus('current')
linkTfcV2Alarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 34, 1, 5), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkTfcV2Alarm.setStatus('current')
linkTfcV2RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 34, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkTfcV2RowStatus.setStatus('current')
linkProV2Table = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 35), )
if mibBuilder.loadTexts: linkProV2Table.setStatus('current')
linkProV2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 35, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "linkPolIndex"))
if mibBuilder.loadTexts: linkProV2Entry.setStatus('current')
linkProV2ProtectionTxChIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 35, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkProV2ProtectionTxChIdx.setStatus('current')
linkProV2ProtectionRxChIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 35, 1, 2), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkProV2ProtectionRxChIdx.setStatus('current')
linkProV2TxWtrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 35, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkProV2TxWtrTime.setStatus('current')
linkProV2RxWtrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 35, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkProV2RxWtrTime.setStatus('current')
linkProV2TxSwitchedChIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 35, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkProV2TxSwitchedChIdx.setStatus('current')
linkProV2RxSwitchedChIdx = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 35, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkProV2RxSwitchedChIdx.setStatus('current')
linkProV2TxRevertive = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 35, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkProV2TxRevertive.setStatus('current')
linkProV2RxRevertive = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 35, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkProV2RxRevertive.setStatus('current')
linkProV2ExtraTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 35, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkProV2ExtraTraffic.setStatus('current')
linkProV2RowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 35, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: linkProV2RowStatus.setStatus('current')
linkProMaintV2Table = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 36), )
if mibBuilder.loadTexts: linkProMaintV2Table.setStatus('current')
linkProMaintV2Entry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 36, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "linkPolIndex"))
if mibBuilder.loadTexts: linkProMaintV2Entry.setStatus('current')
linkProMaintV2TxLockout = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 36, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkProMaintV2TxLockout.setStatus('current')
linkProMaintV2RxLockout = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 36, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkProMaintV2RxLockout.setStatus('current')
linkProMaintV2TxForced = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 36, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkProMaintV2TxForced.setStatus('current')
linkProMaintV2RxForced = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 36, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkProMaintV2RxForced.setStatus('current')
linkProMaintV2TxWtrReset = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 36, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notActive", 1), ("on", 2))).clone('notActive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkProMaintV2TxWtrReset.setStatus('current')
linkProMaintV2RxWtrReset = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 36, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notActive", 1), ("on", 2))).clone('notActive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkProMaintV2RxWtrReset.setStatus('current')
sspTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 37), )
if mibBuilder.loadTexts: sspTable.setStatus('current')
sspEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 37, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "linkIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "linkPolIndex"), (0, "SIAE-RADIO-SYSTEM-MIB", "sspParameterType"))
if mibBuilder.loadTexts: sspEntry.setStatus('current')
sspParameterType = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 37, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("localAdminStatus", 1), ("localOperStatus", 2), ("remoteAdminStatus", 3))))
if mibBuilder.loadTexts: sspParameterType.setStatus('current')
sspLinkBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 37, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("sspBw3p5Mhz", 0), ("sspBw7MHz", 1), ("sspBw14MHz", 2), ("sspBw28MHz", 3), ("sspBw56MHz", 4), ("sspBw10MHz", 5), ("sspBw20MHz", 6), ("sspBw30MHz", 7), ("sspBw40MHz", 8), ("sspBw50MHz", 9), ("sspBw112Mhz", 10), ("sspBw250Mhz", 11), ("sspBw500Mhz", 12), ("sspBw750Mhz", 13), ("sspBw1Ghz", 14), ("sspBw60MHz", 15), ("sspBw80MHz", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sspLinkBandwidth.setStatus('current')
sspLinkModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 37, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("sspModBPSK", 1), ("sspMod4QAM", 2), ("sspMod8PSK", 3), ("sspMod16QAM", 4), ("sspMod32QAM", 5), ("sspMod64QAM", 6), ("sspMod128QAM", 7), ("sspMod256QAM", 8), ("sspMod512QAM", 9), ("sspMod1024QAM", 10), ("sspMod2048QAM", 11), ("sspMod4096QAM", 12)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sspLinkModulation.setStatus('current')
sspLinkAcmEngineEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 37, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sspLinkAcmEngineEnable.setStatus('current')
sspLinkTxUpperProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 37, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sspLinkTxUpperProfile.setStatus('current')
sspLinkTxLowerProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 37, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sspLinkTxLowerProfile.setStatus('current')
sspLinkSynchSetupProtocolEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 37, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sspLinkSynchSetupProtocolEnable.setStatus('current')
sspLinkProfilesSetSelection = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 37, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("highThroughput", 1), ("highGain", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sspLinkProfilesSetSelection.setStatus('current')
sspTdmE1Channel = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 37, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sspTdmE1Channel.setStatus('current')
sspTdmStm1Channel = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 37, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sspTdmStm1Channel.setStatus('current')
radioLoopCapabilityTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 38), )
if mibBuilder.loadTexts: radioLoopCapabilityTable.setStatus('current')
radioLoopCapabilityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 38, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "radioIndex"))
if mibBuilder.loadTexts: radioLoopCapabilityEntry.setStatus('current')
radioLoopRfGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 38, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioLoopRfGroup.setStatus('current')
radioLoopIqGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 38, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioLoopIqGroup.setStatus('current')
radioLoopBaseBandGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 38, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioLoopBaseBandGroup.setStatus('current')
radioRxBerThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 39), )
if mibBuilder.loadTexts: radioRxBerThresholdTable.setStatus('current')
radioRxBerThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 39, 1), ).setIndexNames((0, "SIAE-RADIO-SYSTEM-MIB", "radioIndex"))
if mibBuilder.loadTexts: radioRxBerThresholdEntry.setStatus('current')
radioRxBerThresholdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 39, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("nonValid", 1), ("valid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioRxBerThresholdStatus.setStatus('current')
radioNominalRxBerThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 39, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioNominalRxBerThreshold.setStatus('current')
radioMeasuredRxBerThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 39, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radioMeasuredRxBerThreshold.setStatus('current')
radioRemDemodulatorFailAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 50), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioRemDemodulatorFailAlarmSeverityCode.setStatus('current')
radioRxActiveStatusTrapNotification = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trapDisable", 1), ("trapEnable", 2))).clone('trapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioRxActiveStatusTrapNotification.setStatus('current')
radioTxActiveStatusTrapNotification = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trapDisable", 1), ("trapEnable", 2))).clone('trapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioTxActiveStatusTrapNotification.setStatus('current')
radioCableOpenAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 53), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioCableOpenAlarmSeverityCode.setStatus('current')
radioCableShortAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 54), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioCableShortAlarmSeverityCode.setStatus('current')
radioInvalidFrequencyAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 55), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioInvalidFrequencyAlarmSeverityCode.setStatus('current')
radioBaseBandRxAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 56), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioBaseBandRxAlarmSeverityCode.setStatus('current')
radioModulatorFailAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 57), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioModulatorFailAlarmSeverityCode.setStatus('current')
radioDemodulatorFailAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 58), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioDemodulatorFailAlarmSeverityCode.setStatus('current')
radioRxPowerLowAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 59), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioRxPowerLowAlarmSeverityCode.setStatus('current')
radioTxPowerLowAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 60), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioTxPowerLowAlarmSeverityCode.setStatus('current')
radioVcoFailAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 61), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioVcoFailAlarmSeverityCode.setStatus('current')
radioRxIFAgcAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 62), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioRxIFAgcAlarmSeverityCode.setStatus('current')
radioTxIFAgcAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 63), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioTxIFAgcAlarmSeverityCode.setStatus('current')
radioIduOduCommunicationAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 64), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioIduOduCommunicationAlarmSeverityCode.setStatus('current')
radioOduIduCommunicationAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 65), AlarmSeverityCode().clone('warningTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioOduIduCommunicationAlarmSeverityCode.setStatus('current')
radioLocalOduAlarmSynthesisSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 66), AlarmSeverityCode().clone('statusTrapDisable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioLocalOduAlarmSynthesisSeverityCode.setStatus('current')
radioRemoteOduAlarmSynthesisSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 67), AlarmSeverityCode().clone('statusTrapDisable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioRemoteOduAlarmSynthesisSeverityCode.setStatus('current')
radioConfigMismatchAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 68), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioConfigMismatchAlarmSeverityCode.setStatus('current')
radioPrxHysteresisValue = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 69), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioPrxHysteresisValue.setStatus('current')
radioPtxHysteresisValue = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 70), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioPtxHysteresisValue.setStatus('current')
radioPrxHysteresisValueTrapNotification = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 71), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trapDisable", 1), ("trapEnable", 2))).clone('trapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioPrxHysteresisValueTrapNotification.setStatus('current')
radioPtxHysteresisValueTrapNotification = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 72), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trapDisable", 1), ("trapEnable", 2))).clone('trapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioPtxHysteresisValueTrapNotification.setStatus('current')
radioRxQualityLowAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 73), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioRxQualityLowAlarmSeverityCode.setStatus('current')
radioRxQualityWarningAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 74), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: radioRxQualityWarningAlarmSeverityCode.setStatus('current')
linkReducedCapacityAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 75), AlarmSeverityCode().clone('warningTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkReducedCapacityAlarmSeverityCode.setStatus('current')
linkLinkTelemetryFailAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 76), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkLinkTelemetryFailAlarmSeverityCode.setStatus('current')
linkIdMismatchAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 77), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkIdMismatchAlarmSeverityCode.setStatus('current')
linkRadioEocAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 78), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkRadioEocAlarmSeverityCode.setStatus('current')
linkSetupMismatchAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 79), AlarmSeverityCode().clone('warningTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkSetupMismatchAlarmSeverityCode.setStatus('current')
linkRescueSetupAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 80), AlarmSeverityCode().clone('criticalTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkRescueSetupAlarmSeverityCode.setStatus('current')
linkXpicProcedureBlockAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 81), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkXpicProcedureBlockAlarmSeverityCode.setStatus('current')
linkXpicRemTxOffAlarmAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 82), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkXpicRemTxOffAlarmAlarmSeverityCode.setStatus('current')
linkLocalIduAlarmSynthesis = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 83), AlarmStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: linkLocalIduAlarmSynthesis.setStatus('current')
linkLocalIduAlarmSynthesisSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 84), AlarmSeverityCode().clone('statusTrapDisable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkLocalIduAlarmSynthesisSeverityCode.setStatus('current')
linkRemoteIduAlarmSynthesisSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 85), AlarmSeverityCode().clone('statusTrapDisable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkRemoteIduAlarmSynthesisSeverityCode.setStatus('current')
linkTfcAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 86), AlarmSeverityCode().clone('minorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkTfcAlarmSeverityCode.setStatus('current')
linkBerSyncLossAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 87), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkBerSyncLossAlarmSeverityCode.setStatus('current')
linkNotMatchingRadiosAlarmSeverityCode = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 88), AlarmSeverityCode().clone('majorTrapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkNotMatchingRadiosAlarmSeverityCode.setStatus('current')
channelSpacingSelection = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 89), Bits().clone(namedValues=NamedValues(("etsi", 0), ("fcc", 1))).clone(namedValues=NamedValues(("etsi", 0), ("fcc", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelSpacingSelection.setStatus('current')
fadeMarginMeasure = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 90), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fadeMarginMeasure.setStatus('current')
linkConfigurationInProgressTrapNotification = MibScalar((1, 3, 6, 1, 4, 1, 3373, 1103, 80, 91), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("trapDisable", 1), ("trapEnable", 2))).clone('trapEnable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: linkConfigurationInProgressTrapNotification.setStatus('current')
radioPrxChange = NotificationType((1, 3, 6, 1, 4, 1, 3373, 1103, 0, 8001)).setObjects(("SIAE-EQUIP-MIB", "equipIpSnmpAgentAddress"), ("SIAE-RADIO-SYSTEM-MIB", "radioIndex"), ("SIAE-RADIO-SYSTEM-MIB", "radioSettingsLabel"), ("SIAE-RADIO-SYSTEM-MIB", "radioPrx"))
if mibBuilder.loadTexts: radioPrxChange.setStatus('current')
radioPtxChange = NotificationType((1, 3, 6, 1, 4, 1, 3373, 1103, 0, 8002)).setObjects(("SIAE-EQUIP-MIB", "equipIpSnmpAgentAddress"), ("SIAE-RADIO-SYSTEM-MIB", "radioIndex"), ("SIAE-RADIO-SYSTEM-MIB", "radioSettingsLabel"), ("SIAE-RADIO-SYSTEM-MIB", "radioPtx"))
if mibBuilder.loadTexts: radioPtxChange.setStatus('current')
mibBuilder.exportSymbols("SIAE-RADIO-SYSTEM-MIB", linkMaintTable=linkMaintTable, linkBerEntry=linkBerEntry, linkProV2RxWtrTime=linkProV2RxWtrTime, tdmE1Framer=tdmE1Framer, xpicChPolIndex=xpicChPolIndex, linkProV2ProtectionTxChIdx=linkProV2ProtectionTxChIdx, radioFreqValue=radioFreqValue, linkAcmProfileId=linkAcmProfileId, radioOduIduCommunicationAlarm=radioOduIduCommunicationAlarm, linkPolIndex=linkPolIndex, linkAcmRxProfileLabel=linkAcmRxProfileLabel, linkIfIndex=linkIfIndex, linkAcmTxProfile=linkAcmTxProfile, radioModulationMap=radioModulationMap, radioAtpcRange=radioAtpcRange, radioRemoteOduAlarmSynthesisSeverityCode=radioRemoteOduAlarmSynthesisSeverityCode, xpicEntry=xpicEntry, radioConfigMismatchAlarm=radioConfigMismatchAlarm, linkBerSyncLossAlarmCounter=linkBerSyncLossAlarmCounter, sspLinkAcmEngineEnable=sspLinkAcmEngineEnable, linkAcmTDMCapacity=linkAcmTDMCapacity, linkTfcV2Alarm=linkTfcV2Alarm, radioNominalRxBerThreshold=radioNominalRxBerThreshold, linkXpicProcedureBlockAlarmSeverityCode=linkXpicProcedureBlockAlarmSeverityCode, radioCapabilitiesStepFrequency=radioCapabilitiesStepFrequency, radioLoopCapabilityTable=radioLoopCapabilityTable, linkBandwidthAndModulation=linkBandwidthAndModulation, linkRemoteIduAlarmSynthesis=linkRemoteIduAlarmSynthesis, radioDemodulatorFailAlarmSeverityCode=radioDemodulatorFailAlarmSeverityCode, linkConfigurationInProgressTrapNotification=linkConfigurationInProgressTrapNotification, radioTxStatus=radioTxStatus, radioEntry=radioEntry, radioLoop=radioLoop, ChannelSpacing=ChannelSpacing, linkSettingsEntry=linkSettingsEntry, radioCapabilitiesEntry=radioCapabilitiesEntry, linkCapabilitiesTxMaxFrequency=linkCapabilitiesTxMaxFrequency, linkStatusTable=linkStatusTable, linkAcmProfileModulation=linkAcmProfileModulation, linkProMaintRxLockout=linkProMaintRxLockout, radioPtxHysteresisValueTrapNotification=radioPtxHysteresisValueTrapNotification, linkCapabilitiesStepFrequency=linkCapabilitiesStepFrequency, combinedRadioCapabilitiesExtendedMinPwr=combinedRadioCapabilitiesExtendedMinPwr, sspTdmE1Channel=sspTdmE1Channel, stm1BulkMappingTable=stm1BulkMappingTable, linkReducedCapacityAlarm=linkReducedCapacityAlarm, combinedRadioPowerScaling=combinedRadioPowerScaling, radioRxIFAgcAlarm=radioRxIFAgcAlarm, radioTxFrequency=radioTxFrequency, radioCableOpenAlarm=radioCableOpenAlarm, radioRemoteOduAlarmSynthesis=radioRemoteOduAlarmSynthesis, linkProMaintV2RxLockout=linkProMaintV2RxLockout, radioLoopCapabilityEntry=radioLoopCapabilityEntry, linkTfcAlarm=linkTfcAlarm, combinedRadioDuplexFreqEntry=combinedRadioDuplexFreqEntry, linkProMaintV2Entry=linkProMaintV2Entry, fadeMarginMeasure=fadeMarginMeasure, linkTfcV2Table=linkTfcV2Table, sspLinkTxLowerProfile=sspLinkTxLowerProfile, linkConfigurationInProgress=linkConfigurationInProgress, radioVcoFailAlarmSeverityCode=radioVcoFailAlarmSeverityCode, combinedRadioCapabilitiesMinPtxNominalValue=combinedRadioCapabilitiesMinPtxNominalValue, combinedRadioCapabilitiesMaxPtxNominalValue=combinedRadioCapabilitiesMaxPtxNominalValue, linkProV2ExtraTraffic=linkProV2ExtraTraffic, combinedRadioCapabilitiesTxMaxFrequency=combinedRadioCapabilitiesTxMaxFrequency, linkIdMismatchAlarmSeverityCode=linkIdMismatchAlarmSeverityCode, radioCapabilitiesMinPtxNominalValue=radioCapabilitiesMinPtxNominalValue, radioFreqChannelId=radioFreqChannelId, linkRadioEocAlarm=linkRadioEocAlarm, linkDuplexFreqEntry=linkDuplexFreqEntry, linkProV2TxRevertive=linkProV2TxRevertive, combinedRadioCapabilitiesCapability=combinedRadioCapabilitiesCapability, linkProMaintV2RxForced=linkProMaintV2RxForced, radioCableShortAlarm=radioCableShortAlarm, linkAcmEngineEnable=linkAcmEngineEnable, linkAcmTxModulation=linkAcmTxModulation, linkXpicControlProcedureReset=linkXpicControlProcedureReset, linkProMaintTxLockout=linkProMaintTxLockout, radioLoopBaseBandGroup=radioLoopBaseBandGroup, linkProMaintTable=linkProMaintTable, sspLinkTxUpperProfile=sspLinkTxUpperProfile, linkAcmTxProfileLabel=linkAcmTxProfileLabel, linkBerSyncLossAlarm=linkBerSyncLossAlarm, sspTable=sspTable, linkFreqValue=linkFreqValue, radioSystemMibVersion=radioSystemMibVersion, linkAcmTxCode=linkAcmTxCode, linkFreqChannelId=linkFreqChannelId, linkRadioEocAlarmSeverityCode=linkRadioEocAlarmSeverityCode, linkIdMismatchAlarm=linkIdMismatchAlarm, linkProTxSwitchedChIdx=linkProTxSwitchedChIdx, combinedRadioFreqChannelNum=combinedRadioFreqChannelNum, radioPrxChange=radioPrxChange, linkRescueSetupAlarm=linkRescueSetupAlarm, combinedRadioCapabilitiesStepFrequency=combinedRadioCapabilitiesStepFrequency, xpicRadioIdx=xpicRadioIdx, linkTfcAlarmSeverityCode=linkTfcAlarmSeverityCode, linkLinkTelemetryFailAlarm=linkLinkTelemetryFailAlarm, radioModulationEntry=radioModulationEntry, radioCableOpenAlarmSeverityCode=radioCableOpenAlarmSeverityCode, linkLocalIduAlarmSynthesisSeverityCode=linkLocalIduAlarmSynthesisSeverityCode, radioSystem=radioSystem, combinedRadioPowerRange=combinedRadioPowerRange, combinedRadioPowerScalingTable=combinedRadioPowerScalingTable, combinedRadioAtpcRxPowerScaling=combinedRadioAtpcRxPowerScaling, radioModulatorFailAlarm=radioModulatorFailAlarm, linkE1vsSTM1CapacityTable=linkE1vsSTM1CapacityTable, linkProMaintRxWtrReset=linkProMaintRxWtrReset, linkProExtraTraffic=linkProExtraTraffic, linkRxPwrThresh=linkRxPwrThresh, radioRtPsuOff=radioRtPsuOff, radioConfigAlarmReason=radioConfigAlarmReason, linkStatusEntry=linkStatusEntry, radioInvalidFrequencyAlarmSeverityCode=radioInvalidFrequencyAlarmSeverityCode, linkRefModulationMap=linkRefModulationMap, combinedRadioPowerScalingEntry=combinedRadioPowerScalingEntry, xpicChRadioIdx=xpicChRadioIdx, linkType=linkType, Stm1IndexOrZero=Stm1IndexOrZero, radioIndex=radioIndex, radioRemDemodulatorFailAlarmSeverityCode=radioRemDemodulatorFailAlarmSeverityCode, radioModulationTable=radioModulationTable, radioType=radioType, radioSettingsTable=radioSettingsTable, linkProV2RxSwitchedChIdx=linkProV2RxSwitchedChIdx, linkBerElapsedTime=linkBerElapsedTime, radioSettingsIndex=radioSettingsIndex, linkAvailableIndex=linkAvailableIndex, radioFrequencyTable=radioFrequencyTable, linkTxTDMCapacity=linkTxTDMCapacity, radioCapabilitiesMaxPtxNominalValue=radioCapabilitiesMaxPtxNominalValue, linkProProtectionRxChIdx=linkProProtectionRxChIdx, radioRFLoopTestPercTime=radioRFLoopTestPercTime, radioRxQualityLowAlarmSeverityCode=radioRxQualityLowAlarmSeverityCode, linkMaintEntry=linkMaintEntry, linkAcmUpshiftThreshold=linkAcmUpshiftThreshold, radioIfIndex=radioIfIndex, radioRxPowerLowAlarmSeverityCode=radioRxPowerLowAlarmSeverityCode, linkProTxWtrTime=linkProTxWtrTime, radioTxPowerLowAlarm=radioTxPowerLowAlarm, xpicChRowstatus=xpicChRowstatus, linkProMaintV2RxWtrReset=linkProMaintV2RxWtrReset, linkFadeMarginMeasure=linkFadeMarginMeasure, radioPrx=radioPrx, xpicRowstatus=xpicRowstatus, radioRFLoopTestResult=radioRFLoopTestResult, radioPtx=radioPtx, radioTxAttenuation=radioTxAttenuation, linkNotMatchingRadiosAlarm=linkNotMatchingRadiosAlarm, stm1BulkMappingEntry=stm1BulkMappingEntry, combinedRadioCapabilitiesTable=combinedRadioCapabilitiesTable, linkAcmEntry=linkAcmEntry, linkTfcV2WatchWindow=linkTfcV2WatchWindow, radioCableShortAlarmSeverityCode=radioCableShortAlarmSeverityCode, radioLom=radioLom, radioConfigMismatchAlarmSeverityCode=radioConfigMismatchAlarmSeverityCode, linkProV2TxWtrTime=linkProV2TxWtrTime, radioOduIduCommunicationAlarmSeverityCode=radioOduIduCommunicationAlarmSeverityCode, linkAcmRxProfile=linkAcmRxProfile, sspTdmStm1Channel=sspTdmStm1Channel, linkTxLowerProfile=linkTxLowerProfile, linkFreqTabEntry=linkFreqTabEntry, linkE1vsSTM1CapacityStm1=linkE1vsSTM1CapacityStm1, sspParameterType=sspParameterType, radioRxQualityLowAlarm=radioRxQualityLowAlarm, radioFreqTabEntry=radioFreqTabEntry, sspEntry=sspEntry, linkCapabilitiesExtendedMinPwr=linkCapabilitiesExtendedMinPwr, linkXpicControlProcedure=linkXpicControlProcedure, radioDuplexFreqId=radioDuplexFreqId, linkTfcAction=linkTfcAction, radioRxQualityWarningAlarmSeverityCode=radioRxQualityWarningAlarmSeverityCode, linkProV2ProtectionRxChIdx=linkProV2ProtectionRxChIdx, combinedRadioDuplexFreqId=combinedRadioDuplexFreqId, radioXpd=radioXpd, linkTfcV2Action=linkTfcV2Action, radioDemodulatorFailAlarm=radioDemodulatorFailAlarm, linkCapabilitiesCapability=linkCapabilitiesCapability, radioRefModulationMap=radioRefModulationMap, linkCapabilitiesEntry=linkCapabilitiesEntry, radioCurrentDuplexFrequency=radioCurrentDuplexFrequency, linkAcmPowerScaling=linkAcmPowerScaling, linkRowstatus=linkRowstatus, sspLinkBandwidth=sspLinkBandwidth, linkAcmRxModulation=linkAcmRxModulation, linkAcmProfileEnable=linkAcmProfileEnable, linkTfcEntry=linkTfcEntry, sspLinkSynchSetupProtocolEnable=sspLinkSynchSetupProtocolEnable, linkLabel=linkLabel, linkChTable=linkChTable, linkTfcV2AlarmThreshold=linkTfcV2AlarmThreshold, linkProEntry=linkProEntry, linkSynchSetupProtocolEnable=linkSynchSetupProtocolEnable, radioAtpcPwrHigh=radioAtpcPwrHigh, linkE1vsSTM1CapacityE1=linkE1vsSTM1CapacityE1, xpicIndex=xpicIndex, stm1BulkPolIndex=stm1BulkPolIndex, radioPtxHysteresisValue=radioPtxHysteresisValue, linkModulationMap=linkModulationMap, linkTxPwrThresh=linkTxPwrThresh, radioTxChannelSpacing=radioTxChannelSpacing, radioIduOduCommunicationAlarm=radioIduOduCommunicationAlarm, linkBerDataCounterL=linkBerDataCounterL, radioSettingsRowStatus=radioSettingsRowStatus, linkBerSyncLossAlarmSeverityCode=linkBerSyncLossAlarmSeverityCode, RadioCapability=RadioCapability, linkProMaintV2TxLockout=linkProMaintV2TxLockout, channelSpacingSelection=channelSpacingSelection, radioCapabilitiesTxMaxFrequency=radioCapabilitiesTxMaxFrequency, linkCapabilitiesTable=linkCapabilitiesTable, radioTable=radioTable, linkXpicRemTxOffAlarmAlarmSeverityCode=linkXpicRemTxOffAlarmAlarmSeverityCode, radioRxActiveStatusTrapNotification=radioRxActiveStatusTrapNotification, linkLocalIduAlarmSynthesis=linkLocalIduAlarmSynthesis, linkRescueModulation=linkRescueModulation, linkProRxSwitchedChIdx=linkProRxSwitchedChIdx, linkChRadioIdx=linkChRadioIdx, linkAcmETHCapacity=linkAcmETHCapacity, linkProMaintV2Table=linkProMaintV2Table, linkRescueSetupAlarmSeverityCode=linkRescueSetupAlarmSeverityCode, linkTfcAlarmThreshold=linkTfcAlarmThreshold, radioRxIFAgcAlarmSeverityCode=radioRxIFAgcAlarmSeverityCode, radioDuplexFreqValue=radioDuplexFreqValue, linkDuplexFreqValue=linkDuplexFreqValue, linkId=linkId, linkBerDataCounterH=linkBerDataCounterH, linkChannelSpacing=linkChannelSpacing, radioLoopIqGroup=radioLoopIqGroup, combinedRadioDuplexFrequencyTable=combinedRadioDuplexFrequencyTable, linkAcmProfileLabel=linkAcmProfileLabel, linkXpicRemTxOffAlarm=linkXpicRemTxOffAlarm, linkProV2TxSwitchedChIdx=linkProV2TxSwitchedChIdx, linkAcmActiveProfile=linkAcmActiveProfile, linkRxTDMCapacity=linkRxTDMCapacity, linkCapabilitiesTxMinFrequency=linkCapabilitiesTxMinFrequency, radioSettingsEntry=radioSettingsEntry, radioDuplexFrequency=radioDuplexFrequency, linkReducedCapacityAlarmSeverityCode=linkReducedCapacityAlarmSeverityCode, radioBaseBandRxAlarmSeverityCode=radioBaseBandRxAlarmSeverityCode, radioDuplexFreqEntry=radioDuplexFreqEntry, linkTfcWatchWindow=linkTfcWatchWindow, radioStorageType=radioStorageType, radioTxIFAgcAlarmSeverityCode=radioTxIFAgcAlarmSeverityCode, radioInvalidFrequencyAlarm=radioInvalidFrequencyAlarm, linkAcmRxCode=linkAcmRxCode, radioMaintEntry=radioMaintEntry, linkEntry=linkEntry, radioDuplexFrequencyTable=radioDuplexFrequencyTable, linkSetupMismatchAlarmSeverityCode=linkSetupMismatchAlarmSeverityCode, linkProMaintTxForced=linkProMaintTxForced, combinedRadioCapabilitiesEntry=combinedRadioCapabilitiesEntry, linkTfcTable=linkTfcTable, tdmSettingsEntry=tdmSettingsEntry, xpicChEntry=xpicChEntry)
mibBuilder.exportSymbols("SIAE-RADIO-SYSTEM-MIB", linkAcmProfileCode=linkAcmProfileCode, radioRxQualityWarningAlarm=radioRxQualityWarningAlarm, linkBerErrorCounterL=linkBerErrorCounterL, radioCarrierOnly=radioCarrierOnly, radioRxActiveStatus=radioRxActiveStatus, radioRxBerThresholdStatus=radioRxBerThresholdStatus, linkProV2Entry=linkProV2Entry, linkProV2Table=linkProV2Table, linkModulationEntry=linkModulationEntry, linkProRowStatus=linkProRowStatus, linkAcmTable=linkAcmTable, linkDuplexFrequencyTable=linkDuplexFrequencyTable, linkChIndex=linkChIndex, radioLabel=radioLabel, linkProRxRevertive=linkProRxRevertive, linkProMaintEntry=linkProMaintEntry, combinedRadioFreqTabEntry=combinedRadioFreqTabEntry, linkFrequencyTable=linkFrequencyTable, linkAcmDownshiftThreshold=linkAcmDownshiftThreshold, linkTfcV2Entry=linkTfcV2Entry, radioLocalOduAlarmSynthesis=radioLocalOduAlarmSynthesis, combinedRadioCapabilitiesTxMinFrequency=combinedRadioCapabilitiesTxMinFrequency, linkProMaintV2TxForced=linkProMaintV2TxForced, radioFreqChannelNum=radioFreqChannelNum, combinedRadioDuplexFreqValue=combinedRadioDuplexFreqValue, linkProfilesSetSelection=linkProfilesSetSelection, radioBaseBandRxAlarm=radioBaseBandRxAlarm, radioNormalizedMse=radioNormalizedMse, tdmSettingsTable=tdmSettingsTable, linkProMaintTxWtrReset=linkProMaintTxWtrReset, radioFreqTableSelection=radioFreqTableSelection, linkProProtectionTxChIdx=linkProProtectionTxChIdx, linkCapabilitiesMinPtxNominalValue=linkCapabilitiesMinPtxNominalValue, radioTxPowerLowAlarmSeverityCode=radioTxPowerLowAlarmSeverityCode, linkFreqChannelNum=linkFreqChannelNum, radioAtpcManual=radioAtpcManual, linkProTable=linkProTable, radioTxIFAgcAlarm=radioTxIFAgcAlarm, linkChEntry=linkChEntry, linkTfcV2RowStatus=linkTfcV2RowStatus, radioVcoFailAlarm=radioVcoFailAlarm, radioPrxHysteresisValueTrapNotification=radioPrxHysteresisValueTrapNotification, linkRemoteIduAlarmSynthesisSeverityCode=linkRemoteIduAlarmSynthesisSeverityCode, linkModulationTable=linkModulationTable, PYSNMP_MODULE_ID=radioSystem, linkIndex=linkIndex, ConfigMismatchReason=ConfigMismatchReason, linkProV2RxRevertive=linkProV2RxRevertive, radioMaintTable=radioMaintTable, radioStatusTable=radioStatusTable, radioXpic=radioXpic, linkTfcControl=linkTfcControl, ModulationMap=ModulationMap, combinedRadioFreqChannelId=combinedRadioFreqChannelId, radioAtpcPwrLow=radioAtpcPwrLow, radioModulatorFailAlarmSeverityCode=radioModulatorFailAlarmSeverityCode, linkProV2RowStatus=linkProV2RowStatus, stm1BulkChannel=stm1BulkChannel, radioCapabilitiesTxMinFrequency=radioCapabilitiesTxMinFrequency, linkNotMatchingRadiosAlarmSeverityCode=linkNotMatchingRadiosAlarmSeverityCode, radioIduOduCommunicationAlarmSeverityCode=radioIduOduCommunicationAlarmSeverityCode, radioSettingsLabel=radioSettingsLabel, radioTxActiveStatusTrapNotification=radioTxActiveStatusTrapNotification, linkBerErrorCounterH=linkBerErrorCounterH, linkProRxWtrTime=linkProRxWtrTime, radioCapabilitiesCapability=radioCapabilitiesCapability, linkRxETHCapacity=linkRxETHCapacity, combinedRadioFreqValue=combinedRadioFreqValue, stm1BulkChanIndex=stm1BulkChanIndex, linkProTxRevertive=linkProTxRevertive, radioLoopRfGroup=radioLoopRfGroup, linkProMaintV2TxWtrReset=linkProMaintV2TxWtrReset, linkSettingsTable=linkSettingsTable, linkTxUpperProfile=linkTxUpperProfile, linkXpd=linkXpd, linkChRadioSettingsIdx=linkChRadioSettingsIdx, sspLinkProfilesSetSelection=sspLinkProfilesSetSelection, linkTable=linkTable, radioMeasuredRxBerThreshold=radioMeasuredRxBerThreshold, linkTfcRowStatus=linkTfcRowStatus, linkLinkTelemetryFailAlarmSeverityCode=linkLinkTelemetryFailAlarmSeverityCode, sspLinkModulation=sspLinkModulation, tdmPolIndex=tdmPolIndex, linkDuplexFreqId=linkDuplexFreqId, radioPtxChange=radioPtxChange, linkAcmProfileCapacity=linkAcmProfileCapacity, linkSetupMismatchAlarm=linkSetupMismatchAlarm, linkProMaintRxForced=linkProMaintRxForced, linkBerStart=linkBerStart, linkXpicProcedureBlockAlarm=linkXpicProcedureBlockAlarm, linkTfcV2Control=linkTfcV2Control, linkChRowstatus=linkChRowstatus, radioLocalOduAlarmSynthesisSeverityCode=radioLocalOduAlarmSynthesisSeverityCode, xpicTable=xpicTable, linkBaseBandLom=linkBaseBandLom, linkCapabilitiesMaxPtxNominalValue=linkCapabilitiesMaxPtxNominalValue, radioRxBerThresholdEntry=radioRxBerThresholdEntry, radioChannelSpacing=radioChannelSpacing, radioCapabilitiesExtendedMinPwr=radioCapabilitiesExtendedMinPwr, BitsPerSymbol=BitsPerSymbol, radioCapabilitiesTable=radioCapabilitiesTable, radioTxActiveStatus=radioTxActiveStatus, radioRxBerThresholdTable=radioRxBerThresholdTable, radioPrxHysteresisValue=radioPrxHysteresisValue, radioStatusEntry=radioStatusEntry, linkAcmMaxTDMCapacity=linkAcmMaxTDMCapacity, linkBerTable=linkBerTable, linkTxETHCapacity=linkTxETHCapacity, linkE1vsSTM1CapacityEntry=linkE1vsSTM1CapacityEntry, tdmE1Channel=tdmE1Channel, radioRemDemodulatorFailAlarm=radioRemDemodulatorFailAlarm, radioRxPowerLowAlarm=radioRxPowerLowAlarm, xpicChTable=xpicChTable, combinedRadioFrequencyTable=combinedRadioFrequencyTable, linkAcmAtpcRxPowerScaling=linkAcmAtpcRxPowerScaling, linkAcmPowerRange=linkAcmPowerRange)
