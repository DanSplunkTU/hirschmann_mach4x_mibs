#
# PySNMP MIB module LOG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/sagemcom/LOG-MIB
# Produced by pysmi-1.1.3 at Tue Dec  7 17:31:36 2021
# On host fv-az74-115 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
SagemBoolean, IntDateTime, Severity = mibBuilder.importSymbols("EQUIPMENT-MIB", "SagemBoolean", "IntDateTime", "Severity")
sagemDr, = mibBuilder.importSymbols("SAGEM-DR-MIB", "sagemDr")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, Integer32, IpAddress, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter32, ObjectIdentity, Counter64, TimeTicks, NotificationType, Unsigned32, MibIdentifier, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "IpAddress", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter32", "ObjectIdentity", "Counter64", "TimeTicks", "NotificationType", "Unsigned32", "MibIdentifier", "Gauge32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
log = ModuleIdentity((1, 3, 6, 1, 4, 1, 1038, 105))
if mibBuilder.loadTexts: log.setLastUpdated('0211150000Z')
if mibBuilder.loadTexts: log.setOrganization('SAGEM/DR Tolbiac Centre')
class LogEvent(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 10, 13, 14, 20, 21, 30))
    namedValues = NamedValues(("clear", 0), ("nonAlarmed", 1), ("minor", 2), ("major", 3), ("critical", 4), ("warning", 5), ("raise", 10), ("event", 13), ("switch", 14), ("perf", 20), ("otherThresholdOverflow", 21), ("maintenance", 30))

logClear = MibScalar((1, 3, 6, 1, 4, 1, 1038, 105, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("setToClear", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logClear.setStatus('current')
logCapacity = MibScalar((1, 3, 6, 1, 4, 1, 1038, 105, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logCapacity.setStatus('current')
logLastEvent = MibScalar((1, 3, 6, 1, 4, 1, 1038, 105, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logLastEvent.setStatus('current')
logNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 105, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logNumber.setStatus('current')
logTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 105, 5), )
if mibBuilder.loadTexts: logTable.setStatus('current')
logEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 105, 5, 1), ).setIndexNames((0, "LOG-MIB", "logIndex"))
if mibBuilder.loadTexts: logEntry.setStatus('current')
logIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 105, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logIndex.setStatus('current')
logDate = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 105, 5, 1, 2), IntDateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logDate.setStatus('current')
logObject = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 105, 5, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logObject.setStatus('current')
logName = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 105, 5, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logName.setStatus('current')
logEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 105, 5, 1, 5), LogEvent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logEvent.setStatus('current')
logPC = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 105, 5, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logPC.setStatus('current')
logAI = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 105, 5, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logAI.setStatus('current')
logEquipStatusV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 105, 5, 1, 8), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logEquipStatusV2.setStatus('current')
logTrapEnable = MibScalar((1, 3, 6, 1, 4, 1, 1038, 105, 6), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logTrapEnable.setStatus('current')
lostTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 105, 7))
resendTrapBool = MibScalar((1, 3, 6, 1, 4, 1, 1038, 105, 7, 1), SagemBoolean()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resendTrapBool.setStatus('current')
logTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 1038, 105, 0))
logTrap = NotificationType((1, 3, 6, 1, 4, 1, 1038, 105, 0, 1)).setObjects(("LOG-MIB", "logIndex"), ("LOG-MIB", "logDate"), ("LOG-MIB", "logObject"), ("LOG-MIB", "logName"), ("LOG-MIB", "logEvent"), ("LOG-MIB", "logPC"), ("LOG-MIB", "logAI"), ("LOG-MIB", "logEquipStatusV2"))
if mibBuilder.loadTexts: logTrap.setStatus('current')
thresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 1038, 105, 0, 2)).setObjects(("LOG-MIB", "logIndex"), ("LOG-MIB", "logDate"), ("LOG-MIB", "logObject"), ("LOG-MIB", "logName"), ("LOG-MIB", "logEvent"), ("LOG-MIB", "logPC"), ("LOG-MIB", "logAI"), ("LOG-MIB", "logEquipStatusV2"))
if mibBuilder.loadTexts: thresholdTrap.setStatus('current')
logCurrentClear = MibScalar((1, 3, 6, 1, 4, 1, 1038, 105, 101), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0))).clone(namedValues=NamedValues(("setToClear", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logCurrentClear.setStatus('current')
logCurrentCapacity = MibScalar((1, 3, 6, 1, 4, 1, 1038, 105, 102), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logCurrentCapacity.setStatus('current')
logCurrentLastEvent = MibScalar((1, 3, 6, 1, 4, 1, 1038, 105, 103), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logCurrentLastEvent.setStatus('current')
logCurrentNumber = MibScalar((1, 3, 6, 1, 4, 1, 1038, 105, 104), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logCurrentNumber.setStatus('current')
logCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 1038, 105, 105), )
if mibBuilder.loadTexts: logCurrentTable.setStatus('current')
logCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1038, 105, 105, 1), ).setIndexNames((0, "LOG-MIB", "logCurrentIndex"))
if mibBuilder.loadTexts: logCurrentEntry.setStatus('current')
logCurrentIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 105, 105, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logCurrentIndex.setStatus('current')
logCurrentDate = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 105, 105, 1, 2), IntDateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logCurrentDate.setStatus('current')
logCurrentObject = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 105, 105, 1, 3), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logCurrentObject.setStatus('current')
logCurrentName = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 105, 105, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logCurrentName.setStatus('current')
logCurrentEvent = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 105, 105, 1, 5), LogEvent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logCurrentEvent.setStatus('current')
logCurrentPC = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 105, 105, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logCurrentPC.setStatus('current')
logCurrentAI = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 105, 105, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logCurrentAI.setStatus('current')
logCurrentStatusV2 = MibTableColumn((1, 3, 6, 1, 4, 1, 1038, 105, 105, 1, 8), Severity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logCurrentStatusV2.setStatus('current')
mibBuilder.exportSymbols("LOG-MIB", logCurrentTable=logCurrentTable, logDate=logDate, PYSNMP_MODULE_ID=log, logCurrentNumber=logCurrentNumber, logEvent=logEvent, lostTrap=lostTrap, logTraps=logTraps, logName=logName, logTable=logTable, logCurrentIndex=logCurrentIndex, thresholdTrap=thresholdTrap, logEntry=logEntry, LogEvent=LogEvent, logEquipStatusV2=logEquipStatusV2, logCapacity=logCapacity, logLastEvent=logLastEvent, logIndex=logIndex, logObject=logObject, logCurrentClear=logCurrentClear, logCurrentCapacity=logCurrentCapacity, logCurrentEvent=logCurrentEvent, logCurrentPC=logCurrentPC, logAI=logAI, logTrapEnable=logTrapEnable, logCurrentObject=logCurrentObject, logCurrentStatusV2=logCurrentStatusV2, logClear=logClear, logCurrentEntry=logCurrentEntry, log=log, logCurrentAI=logCurrentAI, logCurrentLastEvent=logCurrentLastEvent, logTrap=logTrap, logNumber=logNumber, logPC=logPC, logCurrentDate=logCurrentDate, logCurrentName=logCurrentName, resendTrapBool=resendTrapBool)
