#
# PySNMP MIB module PT3080-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/protelevision/PT3080-MIB
# Produced by pysmi-1.1.3 at Wed Dec  8 19:05:50 2021
# On host fv-az39-899 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
pt, = mibBuilder.importSymbols("PT-MIB", "pt")
ObjectGroup, NotificationGroup, AgentCapabilities, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "AgentCapabilities", "ModuleCompliance")
Gauge32, NotificationType, Counter32, MibIdentifier, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, iso, Bits, Integer32, Unsigned32, IpAddress, ObjectIdentity, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "NotificationType", "Counter32", "MibIdentifier", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "iso", "Bits", "Integer32", "Unsigned32", "IpAddress", "ObjectIdentity", "ModuleIdentity")
TextualConvention, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "DisplayString")
pt3080 = ModuleIdentity((1, 3, 6, 1, 4, 1, 18086, 3080))
pt3080.setRevisions(('2015-06-22 09:40',))
if mibBuilder.loadTexts: pt3080.setLastUpdated('201506220940Z')
if mibBuilder.loadTexts: pt3080.setOrganization('ProTelevision Technologies A/S, Denmark')
pt3080System = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 1))
pt3080Mode = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 2))
pt3080Input = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 3))
pt3080Output = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 4))
pt3080Gps = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 7))
pt3080TSoIP = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 10))
pt3080Monitor = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 12))
pt3080Test = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 13))
pt3080Alarm = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 14))
pt3080Preset = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 15))
pt3080Eventlog = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 16))
pt3080Comms = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 17))
pt3080Demodulator = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 24))
pt3080Precorrector = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 25))
pt3080ASI = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 30))
pt3080Reception = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 26))
pt3080Backplane = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 27))
pt3080Notifs = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 64))
pt3080Conformance = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 100))
pt3080Compliances = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 1))
pt3080SystemInstrumentFW1Rev = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemInstrumentFW1Rev.setStatus('current')
pt3080SystemInstrumentFW1RevBL = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemInstrumentFW1RevBL.setStatus('current')
pt3080SystemInstrumentFW2Rev = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemInstrumentFW2Rev.setStatus('current')
pt3080SystemInstrumentFW2RevBL = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemInstrumentFW2RevBL.setStatus('current')
pt3080SystemInstrumentFW3Rev = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemInstrumentFW3Rev.setStatus('current')
pt3080SystemInstrumentFW4Rev = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemInstrumentFW4Rev.setStatus('current')
pt3080SystemInstrumentPCBRev = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemInstrumentPCBRev.setStatus('current')
pt3080SystemInstrumentCalibrationRev = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemInstrumentCalibrationRev.setStatus('current')
pt3080SystemInstrumentCalibrationDate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 15), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemInstrumentCalibrationDate.setStatus('current')
pt3080SystemReboot = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("keeprunning", 0), ("sameimage", 1), ("otherimage", 2), ("image0", 3), ("image1", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemReboot.setStatus('current')
pt3080SystemRebootDefaultConfig = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("keeprunning", 0), ("reboot", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemRebootDefaultConfig.setStatus('current')
pt3080SystemDateTime = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemDateTime.setStatus('current')
pt3080SystemImage0Version = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemImage0Version.setStatus('current')
pt3080SystemImage0InstalledDate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 25), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemImage0InstalledDate.setStatus('current')
pt3080SystemImage1version = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemImage1version.setStatus('current')
pt3080SystemImage1InstalledDate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 27), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemImage1InstalledDate.setStatus('current')
pt3080SystemServiceLED = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemServiceLED.setStatus('current')
pt3080SystemLanguage = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("c", 0), ("da-dk", 1), ("ru-ru", 2), ("es-es", 3), ("pt-br", 4), ("it-it", 5), ("de-de", 6), ("fr-fr", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemLanguage.setStatus('current')
pt3080SystemType = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("modulator", 0), ("repeater", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemType.setStatus('current')
pt3080SystemModulationStandard = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("dvbt", 0), ("dvbt2", 1), ("atsc", 2), ("isdbt", 3), ("iboc", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemModulationStandard.setStatus('current')
pt3080SystemCurrentImage = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemCurrentImage.setStatus('current')
pt3080SystemInstrumentKU = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemInstrumentKU.setStatus('current')
pt3080SystemInstrumentType = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemInstrumentType.setStatus('current')
pt3080SystemInstrumentOptions = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemInstrumentOptions.setStatus('current')
pt3080SystemDateTimeSync = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("manual", 0), ("auto", 1), ("gps", 2), ("ntp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemDateTimeSync.setStatus('current')
pt3080SystemDateTimeSyncActual = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("manual", 0), ("auto", 1), ("gps", 2), ("ntp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemDateTimeSyncActual.setStatus('current')
pt3080SystemTimezone = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemTimezone.setStatus('current')
pt3080SystemInstrumentSWRev = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemInstrumentSWRev.setStatus('current')
pt3080SystemInstrumentBootLoaderRev = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemInstrumentBootLoaderRev.setStatus('current')
pt3080SystemInstrumentKernelRev = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemInstrumentKernelRev.setStatus('current')
pt3080SystemOperationOnTime = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 34), Integer32()).setUnits('1 secs').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemOperationOnTime.setStatus('current')
pt3080SystemOperationOnAirTime = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 35), Integer32()).setUnits('1 secs').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemOperationOnAirTime.setStatus('current')
pt3080SystemOperationNumberOfBoots = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemOperationNumberOfBoots.setStatus('current')
pt3080SystemBackplaneid = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemBackplaneid.setStatus('current')
pt3080SystemBackplaneIdRaw = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 41), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemBackplaneIdRaw.setStatus('current')
pt3080SystemBackplaneIdPcb = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemBackplaneIdPcb.setStatus('current')
pt3080SystemBackplaneIdCableOptions = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemBackplaneIdCableOptions.setStatus('current')
pt3080SystemBackplaneIdMAnuf = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 44), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemBackplaneIdMAnuf.setStatus('current')
pt3080SystemBackplaneCalibrationDate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 45), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemBackplaneCalibrationDate.setStatus('current')
pt3080SystemBackplaneCalibrationSw = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemBackplaneCalibrationSw.setStatus('current')
pt3080SystemBackplaneIdPartlist = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SystemBackplaneIdPartlist.setStatus('current')
pt3080SystemScheduledActionTable = MibTable((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50), )
if mibBuilder.loadTexts: pt3080SystemScheduledActionTable.setStatus('current')
pt3080SystemScheduledActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1), ).setIndexNames((0, "PT3080-MIB", "pt3080SystemScheduledActionID"))
if mibBuilder.loadTexts: pt3080SystemScheduledActionEntry.setStatus('current')
pt3080SystemScheduledActionID = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: pt3080SystemScheduledActionID.setStatus('current')
pt3080SystemScheduledActionRecurrence = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("never", 0), ("immediate", 1), ("once", 2), ("hourly", 3), ("daily", 4), ("weekly", 5), ("monthly", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemScheduledActionRecurrence.setStatus('current')
pt3080SystemScheduledActionHour = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemScheduledActionHour.setStatus('current')
pt3080SystemScheduledActionMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemScheduledActionMinute.setStatus('current')
pt3080SystemScheduledActionWeekday = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("monday", 0), ("tuesday", 1), ("wednesday", 2), ("thursday", 3), ("friday", 4), ("saturday", 5), ("sunday", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemScheduledActionWeekday.setStatus('current')
pt3080SystemScheduledActionMonthDay = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemScheduledActionMonthDay.setStatus('current')
pt3080SystemScheduledActionDate = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemScheduledActionDate.setStatus('current')
pt3080SystemScheduledActionRandomDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 600))).setUnits('secs').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemScheduledActionRandomDelay.setStatus('current')
pt3080SystemScheduledActionAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 0), ("repeatermode", 1), ("preset", 2), ("swupgrade", 3), ("reboot", 4), ("mute", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemScheduledActionAction.setStatus('current')
pt3080SystemScheduledActionRepeaterMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("auto", 0), ("digital-iso-repeater", 1), ("digital-transposer", 2), ("analog-iso-repeater", 3), ("analog-transposer", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemScheduledActionRepeaterMode.setStatus('current')
pt3080SystemScheduledActionPresetNo = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("auto", 0), ("digital-iso-repeater", 1), ("digital-transposer", 2), ("analog-iso-repeater", 3), ("analog-transposer", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemScheduledActionPresetNo.setStatus('current')
pt3080SystemScheduledActionRebootImage = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("sameimage", 0), ("otherimage", 1), ("image0", 2), ("image1", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemScheduledActionRebootImage.setStatus('current')
pt3080SystemScheduledActionRebootSystemType = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("modulator", 0), ("repeater", 1), ("same", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemScheduledActionRebootSystemType.setStatus('current')
pt3080SystemScheduledActionMute = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemScheduledActionMute.setStatus('current')
pt3080SystemScheduledActionSWUpgradeProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("http", 0), ("ftp", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemScheduledActionSWUpgradeProtocol.setStatus('current')
pt3080SystemScheduledActionSWUpgradeUsername = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemScheduledActionSWUpgradeUsername.setStatus('current')
pt3080SystemScheduledActionSWUpgradePassword = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemScheduledActionSWUpgradePassword.setStatus('current')
pt3080SystemScheduledActionSWUpgradeImageServer = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemScheduledActionSWUpgradeImageServer.setStatus('current')
pt3080SystemScheduledActionSWUpgradeImagePath = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 1, 50, 1, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SystemScheduledActionSWUpgradeImagePath.setStatus('current')
pt3080ModeListenBroadcast = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeListenBroadcast.setStatus('current')
pt3080ModeNetwork = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("network-mode-mfn", 0), ("network-mode-sfn", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeNetwork.setStatus('current')
pt3080ModeHierarchy = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("network-hierarchy-none", 0), ("network-hierarchy-h1", 1), ("network-hierarchy-h2", 2), ("network-hierarchy-h4", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeHierarchy.setStatus('current')
pt3080Modeifft = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("ifft-mode-2k", 0), ("ifft-mode-4k", 1), ("ifft-mode-8k", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080Modeifft.setStatus('current')
pt3080ModeCodeRateHighPrio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("code-rate-1-2", 0), ("code-rate-2-3", 1), ("code-rate-3-4", 2), ("code-rate-5-6", 3), ("code-rate-7-8", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeCodeRateHighPrio.setStatus('current')
pt3080ModeCodeRateLowPrio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("code-rate-1-2", 0), ("code-rate-2-3", 1), ("code-rate-3-4", 2), ("code-rate-5-6", 3), ("code-rate-7-8", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeCodeRateLowPrio.setStatus('current')
pt3080ModeConstellation = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("qpsk", 0), ("qam16", 1), ("qam64", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeConstellation.setStatus('current')
pt3080ModeGuardInterval = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("guard-1-32", 0), ("guard-1-16", 1), ("guard-1-8", 2), ("guard-1-4", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeGuardInterval.setStatus('current')
pt3080ModeCellID = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeCellID.setStatus('current')
pt3080ModeEnableCellID = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeEnableCellID.setStatus('current')
pt3080ModeDeepInterleaver = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeDeepInterleaver.setStatus('current')
pt3080ModeEnableDVBH = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeEnableDVBH.setStatus('current')
pt3080ModeMpeFecLowPrio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeMpeFecLowPrio.setStatus('current')
pt3080ModeMpeFecHighPrio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeMpeFecHighPrio.setStatus('current')
pt3080ModeTimeSlicingLowPrio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeTimeSlicingLowPrio.setStatus('current')
pt3080ModeTimeSlicingHighPrio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeTimeSlicingHighPrio.setStatus('current')
pt3080ModeSfnDelayOffset = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-9999999, 9999999))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeSfnDelayOffset.setStatus('current')
pt3080ModeTxIdent = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeTxIdent.setStatus('current')
pt3080ModeMipControl = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeMipControl.setStatus('current')
pt3080ModeMfnKeepNullPackets = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeMfnKeepNullPackets.setStatus('current')
pt3080ModeNetworkDelayHP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 20), Integer32()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ModeNetworkDelayHP.setStatus('current')
pt3080ModeNetworkDelayMinHP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 21), Integer32()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ModeNetworkDelayMinHP.setStatus('current')
pt3080ModeNetworkDelayMaxHP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 22), Integer32()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ModeNetworkDelayMaxHP.setStatus('current')
pt3080ModeMaxNetworkDelayHP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 23), Integer32()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ModeMaxNetworkDelayHP.setStatus('current')
pt3080ModeNetworkDelayMarginHP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 24), Integer32()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ModeNetworkDelayMarginHP.setStatus('current')
pt3080ModeNetworkDelayLP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 25), Integer32()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ModeNetworkDelayLP.setStatus('current')
pt3080ModeNetworkDelayMinLP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 26), Integer32()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ModeNetworkDelayMinLP.setStatus('current')
pt3080ModeNetworkDelayMaxLP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 27), Integer32()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ModeNetworkDelayMaxLP.setStatus('current')
pt3080ModeMaxNetworkDelayLP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 28), Integer32()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ModeMaxNetworkDelayLP.setStatus('current')
pt3080ModeNetworkDelayMarginLP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 29), Integer32()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ModeNetworkDelayMarginLP.setStatus('current')
pt3080ModeNetworkDelayReset = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noop", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeNetworkDelayReset.setStatus('current')
pt3080ModeDefaultMIPOutputPower = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setUnits('0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeDefaultMIPOutputPower.setStatus('current')
pt3080ModeDefaultMIPOutputTimeOffset = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-9999999, 9999999))).setUnits('x100ns').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeDefaultMIPOutputTimeOffset.setStatus('current')
pt3080ModeDefaultMIPOutputCellID = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeDefaultMIPOutputCellID.setStatus('current')
pt3080ModeDefaultMIPOutputFreqOffset = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-8388608, 8388607))).setUnits('Hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeDefaultMIPOutputFreqOffset.setStatus('current')
pt3080ModeMIPMaxSFNDelay = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 35), Integer32()).setUnits('x100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ModeMIPMaxSFNDelay.setStatus('current')
pt3080ModeMipControlOutputPower = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeMipControlOutputPower.setStatus('current')
pt3080ModeMipControlOutputTimeOffset = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeMipControlOutputTimeOffset.setStatus('current')
pt3080ModeMipControlOutputCellId = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeMipControlOutputCellId.setStatus('current')
pt3080ModeMipControlOutputFreqOffset = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 2, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ModeMipControlOutputFreqOffset.setStatus('current')
pt3080ReceptionGainControl = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("auto", 0), ("freeze", 1), ("manual", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionGainControl.setStatus('current')
pt3080ReceptionGainManualValue = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 700))).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionGainManualValue.setStatus('current')
pt3080ReceptionGainLimitEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionGainLimitEnable.setStatus('current')
pt3080ReceptionGainLimit = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 700))).setUnits('0.1 db').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionGainLimit.setStatus('current')
pt3080ReceptionGainCurrent = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 13), Integer32()).setUnits('0.01 db').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ReceptionGainCurrent.setStatus('current')
pt3080ReceptionAGCMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("slow", 0), ("fast", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionAGCMode.setStatus('current')
pt3080ReceptionAGCHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 200))).setUnits('0.01 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionAGCHysteresis.setStatus('current')
pt3080ReceptionBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("r5", 0), ("r6", 1), ("r7", 2), ("r8", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionBandwidth.setStatus('current')
pt3080ReceptionRFFrequency = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30000000, 954000000))).setUnits('1 hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionRFFrequency.setStatus('current')
pt3080ReceptionRFFrequencyOffset = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-500000, 500000))).setUnits('1 hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionRFFrequencyOffset.setStatus('current')
pt3080ReceptionRFPolarity = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("norm", 0), ("inv", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionRFPolarity.setStatus('current')
pt3080ReceptionRFSquelchEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionRFSquelchEnable.setStatus('current')
pt3080ReceptionRFSquelchThreshold = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-800, -70))).setUnits('0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionRFSquelchThreshold.setStatus('current')
pt3080ReceptionRFSquelchHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 500))).setUnits('0.01 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionRFSquelchHysteresis.setStatus('current')
pt3080ReceptionRFTrackingFilterEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionRFTrackingFilterEnable.setStatus('current')
pt3080ReceptionRFifLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 36), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ReceptionRFifLevel.setStatus('current')
pt3080ReceptionRFNominalInputLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-400, 100))).setUnits('0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionRFNominalInputLevel.setStatus('current')
pt3080ReceptionRFInputLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 21), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ReceptionRFInputLevel.setStatus('current')
pt3080ReceptionRFInputLevelThreshold = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-8000, -700))).setUnits('0.01 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionRFInputLevelThreshold.setStatus('current')
pt3080ReceptionRFInputLevelHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 500))).setUnits('0.01 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionRFInputLevelHysteresis.setStatus('current')
pt3080ReceptionIFFrequency = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("if36mhz", 0), ("if36p15mhz", 1), ("if40mhz", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionIFFrequency.setStatus('current')
pt3080ReceptionIFPolarity = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("norm", 0), ("inv", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionIFPolarity.setStatus('current')
pt3080ReceptionIFInputLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 22), Integer32()).setUnits('0.01 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ReceptionIFInputLevel.setStatus('current')
pt3080ReceptionIFInputPolicy = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("rf", 0), ("if", 1), ("rfav", 2), ("ifav", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionIFInputPolicy.setStatus('current')
pt3080ReceptionIFInput = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("if", 0), ("rf", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ReceptionIFInput.setStatus('current')
pt3080ReceptionIFRFtoIFHoldoverDelay = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300))).setUnits('1 secs').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionIFRFtoIFHoldoverDelay.setStatus('current')
pt3080ReceptionIFIFtoRFHoldoverDelay = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300))).setUnits('1 secs').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReceptionIFIFtoRFHoldoverDelay.setStatus('current')
pt3080ReceptionTunerHWVersion = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 40), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ReceptionTunerHWVersion.setStatus('current')
pt3080ReceptionTunerHWType = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 41), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ReceptionTunerHWType.setStatus('current')
pt3080ReceptionTunerHWID = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 42), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ReceptionTunerHWID.setStatus('current')
pt3080ReceptionTunerHWSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 43), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ReceptionTunerHWSerialNumber.setStatus('current')
pt3080ReceptionTunerHWCalibrationDate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 44), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ReceptionTunerHWCalibrationDate.setStatus('current')
pt3080ReceptionTunerHWCalibrationDataVersion = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 45), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ReceptionTunerHWCalibrationDataVersion.setStatus('current')
pt3080ReceptionTunerHWCalibrationSWVersion = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 26, 46), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ReceptionTunerHWCalibrationSWVersion.setStatus('current')
pt3080ASIInput1SyncTimeout = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250))).setUnits('1 ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASIInput1SyncTimeout.setStatus('current')
pt3080ASIInput2SyncTimeout = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 250))).setUnits('1 ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASIInput2SyncTimeout.setStatus('current')
pt3080ASIInput1DataErrorLimit = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20000))).setUnits('0.1 bits/s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASIInput1DataErrorLimit.setStatus('current')
pt3080ASIInput2DataErrorLimit = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 20000))).setUnits('0.1 bits/s').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASIInput2DataErrorLimit.setStatus('current')
pt3080ASIInput1SyncStatus = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIInput1SyncStatus.setStatus('current')
pt3080ASIInput2SyncStatus = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIInput2SyncStatus.setStatus('current')
pt3080ASIInput1SyncSignal = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("undefined", 0), ("norm", 1), ("inv", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIInput1SyncSignal.setStatus('current')
pt3080ASIInput2SyncSignal = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("undefined", 0), ("norm", 1), ("inv", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIInput2SyncSignal.setStatus('current')
pt3080ASIInput1SyncTSSize = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("undefined", 0), ("ts188", 1), ("ts204", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIInput1SyncTSSize.setStatus('current')
pt3080ASIInput2SyncTSSize = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("undefined", 0), ("ts188", 1), ("ts204", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIInput2SyncTSSize.setStatus('current')
pt3080ASIInput1LineErrors = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 6), Integer32()).setUnits('1 bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIInput1LineErrors.setStatus('current')
pt3080ASIInput2LineErrors = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 56), Integer32()).setUnits('1 bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIInput2LineErrors.setStatus('current')
pt3080ASIInput1LineRate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 7), Integer32()).setUnits('0.1 Mbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIInput1LineRate.setStatus('current')
pt3080ASIInput2LineRate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 57), Integer32()).setUnits('0.1 Mbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIInput2LineRate.setStatus('current')
pt3080ASIInput1LineErrorRate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 8), Integer32()).setUnits('0.1 bits/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIInput1LineErrorRate.setStatus('current')
pt3080ASIInput2LineErrorRate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 58), Integer32()).setUnits('0.1 bits/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIInput2LineErrorRate.setStatus('current')
pt3080ASIInput1DataErrors = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 9), Integer32()).setUnits('1 bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIInput1DataErrors.setStatus('current')
pt3080ASIInput2DataErrors = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 59), Integer32()).setUnits('1 bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIInput2DataErrors.setStatus('current')
pt3080ASIInput1DataRate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 10), Integer32()).setUnits('0.1 Mbps/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIInput1DataRate.setStatus('current')
pt3080ASIInput2DataRate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 60), Integer32()).setUnits('0.1 Mbps/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIInput2DataRate.setStatus('current')
pt3080ASIInput1DataErrorRate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 11), Integer32()).setUnits('0.1 bits/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIInput1DataErrorRate.setStatus('current')
pt3080ASIInput2DataErrorRate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 61), Integer32()).setUnits('0.1 bits/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIInput2DataErrorRate.setStatus('current')
pt3080ASIInput1ClearErrorCounters = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noop", 0), ("activate", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASIInput1ClearErrorCounters.setStatus('current')
pt3080ASIInput2ClearErrorCounters = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 30, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noop", 0), ("activate", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASIInput2ClearErrorCounters.setStatus('current')
pt3080InputRefDevType = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 90), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("tcxo-int", 0), ("ocxo-pt3710-10", 1), ("ocxo-pt3710-20", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputRefDevType.setStatus('current')
pt3080InputRefCalDate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 91), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputRefCalDate.setStatus('current')
pt3080InputRefCalVer = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 92), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputRefCalVer.setStatus('current')
pt3080InputRefDirection = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("input", 0), ("output", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputRefDirection.setStatus('current')
pt3080InputRefSource = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("auto", 0), ("ext", 1), ("int", 2), ("gps", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputRefSource.setStatus('current')
pt3080InputRefStatus = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("external", 0), ("external-10mhz", 1), ("external-1pps", 2), ("internal", 3), ("gnss", 4), ("asi1", 5), ("asi2", 6), ("ndel", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputRefStatus.setStatus('current')
pt3080InputRef10MhzImpedance = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("o-50", 0), ("himp", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputRef10MhzImpedance.setStatus('current')
pt3080InputRef10MhzHoldoverDelay = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 172800))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputRef10MhzHoldoverDelay.setStatus('current')
pt3080InputRef10MhzHoldoverForever = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputRef10MhzHoldoverForever.setStatus('current')
pt3080InputRef1PPSImpedance = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("o-50", 0), ("himp", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputRef1PPSImpedance.setStatus('current')
pt3080InputRef1PPSHoldoverDelay = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 172800))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputRef1PPSHoldoverDelay.setStatus('current')
pt3080InputRef1PPSHoldoverForever = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputRef1PPSHoldoverForever.setStatus('current')
pt3080InputRef1PPSTrigSlope = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("rising", 0), ("falling", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputRef1PPSTrigSlope.setStatus('current')
pt3080InputRef1PPSTrigLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 16))).setUnits('0.1 v').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputRef1PPSTrigLevel.setStatus('current')
pt3080InputASIAutoRoutingDelayHp2Lp = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300))).setUnits('1 secs').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputASIAutoRoutingDelayHp2Lp.setStatus('current')
pt3080InputASIAutoRoutingDelayLp2Hp = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300))).setUnits('1 secs').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputASIAutoRoutingDelayLp2Hp.setStatus('current')
pt3080InputASIHoldoverTimeout = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600))).setUnits('1 secs').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputASIHoldoverTimeout.setStatus('current')
pt3080InputASITSPrimarySource = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("asi-in-1", 0), ("asi-in-2", 1), ("demodulator-1", 2), ("demodulator-2", 3), ("tsoip-rx1", 4), ("tsoip-rx2", 5), ("satRecv", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputASITSPrimarySource.setStatus('current')
pt3080InputASITSSecondarySource = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("asi-in-1", 0), ("asi-in-2", 1), ("demodulator-1", 2), ("demodulator-2", 3), ("tsoip-rx1", 4), ("tsoip-rx2", 5), ("satRecv", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputASITSSecondarySource.setStatus('current')
pt3080InputASIAutoRoutingPolicy = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("only-use-primary", 0), ("only-use-secondary", 1), ("use-primary-if-available", 2), ("use-any-available", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputASIAutoRoutingPolicy.setStatus('current')
pt3080InputTSPrimaryMaxPATDelay = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 10000))).setUnits('1 ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSPrimaryMaxPATDelay.setStatus('current')
pt3080InputTSPrimaryMaxPATDelayEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSPrimaryMaxPATDelayEnable.setStatus('current')
pt3080InputTSPrimaryExpectedTSID = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSPrimaryExpectedTSID.setStatus('current')
pt3080InputTSPrimaryExpectedTSIDEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSPrimaryExpectedTSIDEnable.setStatus('current')
pt3080InputTSPrimaryExpectedNWID = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSPrimaryExpectedNWID.setStatus('current')
pt3080InputTSPrimaryExpectedNWIDEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSPrimaryExpectedNWIDEnable.setStatus('current')
pt3080InputTSPrimaryMaxStuffingrate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('1 %').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSPrimaryMaxStuffingrate.setStatus('current')
pt3080InputTSPrimaryMaxStuffingrateEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSPrimaryMaxStuffingrateEnable.setStatus('current')
pt3080InputTSPrimaryMinDelaymargin = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setUnits('1 ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSPrimaryMinDelaymargin.setStatus('current')
pt3080InputTSPrimaryMinDelaymarginEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSPrimaryMinDelaymarginEnable.setStatus('current')
pt3080InputTSPrimaryMaxMissingmip = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 68), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setUnits('1 secs').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSPrimaryMaxMissingmip.setStatus('current')
pt3080InputTSPrimaryMaxMissingmipEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 69), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSPrimaryMaxMissingmipEnable.setStatus('current')
pt3080InputTSSecondaryMaxPATDelay = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 10000))).setUnits('1 ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSSecondaryMaxPATDelay.setStatus('current')
pt3080InputTSSecondaryMaxPATDelayEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSSecondaryMaxPATDelayEnable.setStatus('current')
pt3080InputTSSecondaryExpectedTSID = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSSecondaryExpectedTSID.setStatus('current')
pt3080InputTSSecondaryExpectedTSIDEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSSecondaryExpectedTSIDEnable.setStatus('current')
pt3080InputTSSecondaryExpectedNWID = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSSecondaryExpectedNWID.setStatus('current')
pt3080InputTSSecondaryExpectedNWIDEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSSecondaryExpectedNWIDEnable.setStatus('current')
pt3080InputTSSecondaryMaxStuffingrate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('1 %').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSSecondaryMaxStuffingrate.setStatus('current')
pt3080InputTSSecondaryMaxStuffingrateEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSSecondaryMaxStuffingrateEnable.setStatus('current')
pt3080InputTSSecondaryMinDelaymargin = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 66), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setUnits('1 ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSSecondaryMinDelaymargin.setStatus('current')
pt3080InputTSSecondaryMinDelaymarginEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSSecondaryMinDelaymarginEnable.setStatus('current')
pt3080InputTSSecondaryMaxMissingmip = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 73), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setUnits('1 secs').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSSecondaryMaxMissingmip.setStatus('current')
pt3080InputTSSecondaryMaxMissingmipEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSSecondaryMaxMissingmipEnable.setStatus('current')
pt3080InputTSPrimaryMaxStsJitter = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500))).setUnits('100ns').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSPrimaryMaxStsJitter.setStatus('current')
pt3080InputTSSecondaryMaxStsJitter = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500))).setUnits('100ns').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSSecondaryMaxStsJitter.setStatus('current')
pt3080InputTSPrimaryStatus = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("available", 0), ("unavailable", 1), ("nosync", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSPrimaryStatus.setStatus('current')
pt3080InputTSSecondaryStatus = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("available", 0), ("unavailable", 1), ("nosync", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSSecondaryStatus.setStatus('current')
pt3080InputTSHp = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("asi-in-1", 0), ("asi-in-2", 1), ("demodulator-1", 2), ("demodulator-2", 3), ("tsoip-rx1", 4), ("tsoip-rx2", 5), ("satRecv", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSHp.setStatus('current')
pt3080InputTSLp = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("asi-in-1", 0), ("asi-in-2", 1), ("demodulator-1", 2), ("demodulator-2", 3), ("tsoip-rx1", 4), ("tsoip-rx2", 5), ("satRecv", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSLp.setStatus('current')
pt3080InputEffectiveAutoroutingPolicy = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("only-primary", 0), ("only-secondary", 1), ("prefer-primary", 2), ("any-available", 3), ("seamless", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputEffectiveAutoroutingPolicy.setStatus('current')
pt3080InputTSHpBitrate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 41), Integer32()).setUnits('Kb/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSHpBitrate.setStatus('current')
pt3080InputTSHpPacketsBuffered = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 42), Integer32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSHpPacketsBuffered.setStatus('current')
pt3080InputTSHpPacketSize = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 43), Integer32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSHpPacketSize.setStatus('current')
pt3080InputTSHpStuffingrate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 44), Integer32()).setUnits('Kb/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSHpStuffingrate.setStatus('current')
pt3080InputTSHpTSID = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSHpTSID.setStatus('current')
pt3080InputTSHpNWID = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 46), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSHpNWID.setStatus('current')
pt3080InputTSLpBitrate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 47), Integer32()).setUnits('Kb/s').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSLpBitrate.setStatus('current')
pt3080InputTSLpPacketsBuffered = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 48), Integer32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSLpPacketsBuffered.setStatus('current')
pt3080InputTSLpPacketSize = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 49), Integer32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSLpPacketSize.setStatus('current')
pt3080InputTSLpStuffingrate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 50), Integer32()).setUnits('Permille').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSLpStuffingrate.setStatus('current')
pt3080InputTSLpTSID = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSLpTSID.setStatus('current')
pt3080InputTSLpNWID = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSLpNWID.setStatus('current')
pt3080InputTSPrimaryStsJitter = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 53), Integer32()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSPrimaryStsJitter.setStatus('current')
pt3080InputTSPrimaryStsJitterMax = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 54), Integer32()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSPrimaryStsJitterMax.setStatus('current')
pt3080InputTSPrimaryStsJitterMin = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 55), Integer32()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSPrimaryStsJitterMin.setStatus('current')
pt3080InputTSPrimaryStsJitterReset = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noop", 0), ("reset-min-max", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSPrimaryStsJitterReset.setStatus('current')
pt3080InputTSSecondaryStsJitter = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 57), Integer32()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSSecondaryStsJitter.setStatus('current')
pt3080InputTSSecondaryStsJitterMax = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 58), Integer32()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSSecondaryStsJitterMax.setStatus('current')
pt3080InputTSSecondaryStsJitterMin = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 59), Integer32()).setUnits('100ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InputTSSecondaryStsJitterMin.setStatus('current')
pt3080InputTSSecondaryStsJitterReset = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 3, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noop", 0), ("reset-min-max", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InputTSSecondaryStsJitterReset.setStatus('current')
pt3080OutputBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 8))).setUnits('MHz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputBandwidth.setStatus('current')
pt3080OutputChannel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(21, 69))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputChannel.setStatus('current')
pt3080OutputSynchronized = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("not-synchronized", 0), ("synchronized", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080OutputSynchronized.setStatus('current')
pt3080OutputMute = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputMute.setStatus('current')
pt3080OutputPowerLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(280, 490))).setUnits('0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputPowerLevel.setStatus('current')
pt3080OutputIfEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputIfEnable.setStatus('current')
pt3080OutputIfFrequency = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(35150000, 37150000))).setUnits('1 Hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputIfFrequency.setStatus('current')
pt3080OutputIfPolarity = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("norm", 0), ("inv", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputIfPolarity.setStatus('current')
pt3080OutputIfLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000, 0))).setUnits('0.01 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputIfLevel.setStatus('current')
pt3080OutputMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("normal", 0), ("standby", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputMode.setStatus('current')
pt3080OutputEffectiveLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 17), Integer32()).setUnits('0.01 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080OutputEffectiveLevel.setStatus('current')
pt3080OutputActualLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 18), Integer32()).setUnits('0.01 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080OutputActualLevel.setStatus('current')
pt3080OutputPolarity = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("norm", 0), ("inv", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputPolarity.setStatus('current')
pt3080OutputRfFrequency = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30000000, 860000000))).setUnits('1 Hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputRfFrequency.setStatus('current')
pt3080OutputRfFrequencyOffset = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-8388608, 8388607))).setUnits('1 Hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputRfFrequencyOffset.setStatus('current')
pt3080OutputRfLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000, 1000))).setUnits('0.01 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputRfLevel.setStatus('current')
pt3080OutputRfCableMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("const", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputRfCableMode.setStatus('current')
pt3080OutputRfCableConstantLevelOffset = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 51), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10000, 10000))).setUnits('0.001 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputRfCableConstantLevelOffset.setStatus('current')
pt3080OutputRfCableFrequencyLevelOffset0 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10000, 10000))).setUnits('0.001 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputRfCableFrequencyLevelOffset0.setStatus('current')
pt3080OutputRfCableFrequencyLevelOffset1 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 53), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10000, 10000))).setUnits('0.001 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputRfCableFrequencyLevelOffset1.setStatus('current')
pt3080OutputRfCableFrequencyLevelOffset2 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 54), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10000, 10000))).setUnits('0.001 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputRfCableFrequencyLevelOffset2.setStatus('current')
pt3080OutputRfCableFrequencyLevelOffset3 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10000, 10000))).setUnits('0.001 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputRfCableFrequencyLevelOffset3.setStatus('current')
pt3080OutputRfCableFrequencyLevelOffset4 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10000, 10000))).setUnits('0.001 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputRfCableFrequencyLevelOffset4.setStatus('current')
pt3080OutputRfCableFrequencyLevelOffset5 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 57), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-10000, 10000))).setUnits('0.001 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputRfCableFrequencyLevelOffset5.setStatus('current')
pt3080OutputRfDetectedActualLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 19), Integer32()).setUnits('0.01 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080OutputRfDetectedActualLevel.setStatus('current')
pt3080OutputRfDetectedLowerLevelLimit = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 50))).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputRfDetectedLowerLevelLimit.setStatus('current')
pt3080OutputRfDetectedLowerLevelcontrol = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputRfDetectedLowerLevelcontrol.setStatus('current')
pt3080OutputRfDetectedHigherLevelLimit = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 50))).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputRfDetectedHigherLevelLimit.setStatus('current')
pt3080OutputRfDetectedHigherLevelcontrol = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputRfDetectedHigherLevelcontrol.setStatus('current')
pt3080OutputRfAlcControl = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputRfAlcControl.setStatus('current')
pt3080OutputRfAlcSense = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("rfsense1", 0), ("rfsense2", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputRfAlcSense.setStatus('current')
pt3080OutputRfAlcSetpointPort1 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-11000, 11000))).setUnits('0.01 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputRfAlcSetpointPort1.setStatus('current')
pt3080OutputRfAlcSetpointPort2 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-11000, 11000))).setUnits('0.01 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080OutputRfAlcSetpointPort2.setStatus('current')
pt3080OutputRfAlcStatus = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080OutputRfAlcStatus.setStatus('current')
pt3080OutputRfAlcStatusInformation = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 4, 35), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080OutputRfAlcStatusInformation.setStatus('current')
pt3080GpsBias = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 7, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GpsBias.setStatus('current')
pt3080GpsbiasVoltage = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 7, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("gpsant-5v", 0), ("gpsant-33v", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GpsbiasVoltage.setStatus('current')
pt3080GpsCableDelay = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 7, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-18125, 13750))).setUnits('0.1 ns').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GpsCableDelay.setStatus('current')
pt3080GpsHoldoverForever = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 7, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GpsHoldoverForever.setStatus('current')
pt3080GpsHoldoverTime = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 7, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 172800))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GpsHoldoverTime.setStatus('current')
pt3080GpsSatelliteSystemGPS = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 7, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GpsSatelliteSystemGPS.setStatus('current')
pt3080GpsSatelliteSystemGLONASS = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 7, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GpsSatelliteSystemGLONASS.setStatus('current')
pt3080GpsSatelliteSystemGALILEO = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 7, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GpsSatelliteSystemGALILEO.setStatus('current')
pt3080GpsSatelliteSystemCOMPASS = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 7, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GpsSatelliteSystemCOMPASS.setStatus('current')
pt3080GpsVersion = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 7, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080GpsVersion.setStatus('current')
pt3080Gps1PPSStatus = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 7, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Gps1PPSStatus.setStatus('current')
pt3080GpsState = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 7, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080GpsState.setStatus('current')
pt3080GpsVisibleSatellitesSnr = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 7, 14), Integer32()).setUnits('0.1 dBHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080GpsVisibleSatellitesSnr.setStatus('current')
pt3080GpsVisibleSatellites = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 7, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080GpsVisibleSatellites.setStatus('current')
pt3080GpsTrackedSatellites = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 7, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080GpsTrackedSatellites.setStatus('current')
pt3080GpsLongtitude = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 7, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080GpsLongtitude.setStatus('current')
pt3080GpsLatitude = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 7, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080GpsLatitude.setStatus('current')
pt3080GpsAltitude = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 7, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080GpsAltitude.setStatus('current')
pt3080TSoIPRx1ReceiverEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPRx1ReceiverEnable.setStatus('current')
pt3080TSoIPRx2ReceiverEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPRx2ReceiverEnable.setStatus('current')
pt3080TSoIPRx1LanSelect = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("flan", 0), ("alan", 1), ("tlan", 2), ("blan", 3), ("plan", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPRx1LanSelect.setStatus('current')
pt3080TSoIPRx2LanSelect = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("flan", 0), ("alan", 1), ("tlan", 2), ("blan", 3), ("plan", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPRx2LanSelect.setStatus('current')
pt3080TSoIPRx1Multicast = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPRx1Multicast.setStatus('current')
pt3080TSoIPRx2Multicast = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPRx2Multicast.setStatus('current')
pt3080TSoIPRx1Protocol = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("udp", 0), ("rtp", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPRx1Protocol.setStatus('current')
pt3080TSoIPRx2Protocol = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("udp", 0), ("rtp", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPRx2Protocol.setStatus('current')
pt3080TSoIPRx1Portnumber = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPRx1Portnumber.setStatus('current')
pt3080TSoIPRx2Portnumber = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPRx2Portnumber.setStatus('current')
pt3080TSoIPRx1PacketErrorRatioLimit = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500))).setUnits('0.1 %').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPRx1PacketErrorRatioLimit.setStatus('current')
pt3080TSoIPRx2PacketErrorRatioLimit = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 500))).setUnits('0.1 %').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPRx2PacketErrorRatioLimit.setStatus('current')
pt3080TSoIPRx1MinumimLatency = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setUnits('0.1 ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPRx1MinumimLatency.setStatus('current')
pt3080TSoIPRx2MinumimLatency = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000))).setUnits('0.1 ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPRx2MinumimLatency.setStatus('current')
pt3080TSoIPRx1SyncTimeout = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 250))).setUnits('1 ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPRx1SyncTimeout.setStatus('current')
pt3080TSoIPRx2SyncTimeout = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 250))).setUnits('1 ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPRx2SyncTimeout.setStatus('current')
pt3080TSoIPRx1Status = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx1Status.setStatus('current')
pt3080TSoIPRx2Status = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx2Status.setStatus('current')
pt3080TSoIPRx1CurrentIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 18), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx1CurrentIPAddress.setStatus('current')
pt3080TSoIPRx2CurrentIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 48), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx2CurrentIPAddress.setStatus('current')
pt3080TSoIPRx1IpBitrate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 26), Integer32()).setUnits('0.001 Mbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx1IpBitrate.setStatus('current')
pt3080TSoIPRx2IpBitrate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 56), Integer32()).setUnits('0.001 Mbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx2IpBitrate.setStatus('current')
pt3080TSoIPRx1PacketErrorRatio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 20), Integer32()).setUnits('0.1 %').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx1PacketErrorRatio.setStatus('current')
pt3080TSoIPRx2PacketErrorRatio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 50), Integer32()).setUnits('0.1 %').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx2PacketErrorRatio.setStatus('current')
pt3080TSoIPRx1SequenceErrors = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx1SequenceErrors.setStatus('current')
pt3080TSoIPRx2SequenceErrors = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx2SequenceErrors.setStatus('current')
pt3080TSoIPRx1LostIPFrames = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx1LostIPFrames.setStatus('current')
pt3080TSoIPRx2LostIPFrames = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx2LostIPFrames.setStatus('current')
pt3080TSoIPRx1CorrectedIPFrames = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx1CorrectedIPFrames.setStatus('current')
pt3080TSoIPRx2CorrectedIPFrames = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx2CorrectedIPFrames.setStatus('current')
pt3080TSoIPRx1OverrunIPFrames = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx1OverrunIPFrames.setStatus('current')
pt3080TSoIPRx2OverrunIPFrames = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx2OverrunIPFrames.setStatus('current')
pt3080TSoIPRx1PacketsPerFrame = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx1PacketsPerFrame.setStatus('current')
pt3080TSoIPRx2PacketsPerFrame = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 55), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx2PacketsPerFrame.setStatus('current')
pt3080TSoIPRx1TSPacketSize = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx1TSPacketSize.setStatus('current')
pt3080TSoIPRx2TSPacketSize = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx2TSPacketSize.setStatus('current')
pt3080TSoIPRx1FecColumn = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx1FecColumn.setStatus('current')
pt3080TSoIPRx2FecColumn = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx2FecColumn.setStatus('current')
pt3080TSoIPRx1FecRow = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx1FecRow.setStatus('current')
pt3080TSoIPRx2FecRow = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx2FecRow.setStatus('current')
pt3080TSoIPRx1QueueSize = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 27), Integer32()).setUnits('1 Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx1QueueSize.setStatus('current')
pt3080TSoIPRx2QueueSize = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 57), Integer32()).setUnits('1 Frames').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx2QueueSize.setStatus('current')
pt3080TSoIPRx1CurrentLatency = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 28), Integer32()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx1CurrentLatency.setStatus('current')
pt3080TSoIPRx2CurrentLatency = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 10, 58), Integer32()).setUnits('0.1 ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPRx2CurrentLatency.setStatus('current')
pt3080MonitorSource = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("asi-in1", 0), ("asi-in2", 1), ("aux1", 2), ("aux2", 3), ("tsoiprx1", 4), ("tsoiprx2", 5), ("ts-hp", 6), ("ts-lp", 7), ("backplane1", 8), ("backplane2", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080MonitorSource.setStatus('current')
pt3080MonitorTSoIPEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080MonitorTSoIPEnable.setStatus('current')
pt3080MonitorTSoIPSource = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("asi-in1", 0), ("asi-in2", 1), ("aux1", 2), ("aux2", 3), ("tsoiprx1", 4), ("tsoiprx2", 5), ("ts-hp", 6), ("ts-lp", 7), ("backplane1", 8), ("backplane2", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080MonitorTSoIPSource.setStatus('current')
pt3080MonitorTSoIPMulticastLanSelect = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("flan", 0), ("alan", 1), ("tlan", 2), ("blan", 3), ("plan", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080MonitorTSoIPMulticastLanSelect.setStatus('current')
pt3080MonitorTSoIPDestIPAddress = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080MonitorTSoIPDestIPAddress.setStatus('current')
pt3080MonitorTSoIPDestPort = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080MonitorTSoIPDestPort.setStatus('current')
pt3080MonitorTSoIPProtocol = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("udp", 0), ("rtp", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080MonitorTSoIPProtocol.setStatus('current')
pt3080MonitorTSoIPEnableFec = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080MonitorTSoIPEnableFec.setStatus('current')
pt3080MonitorTSoIPFecColumn = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080MonitorTSoIPFecColumn.setStatus('current')
pt3080MonitorTSoIPFecRow = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080MonitorTSoIPFecRow.setStatus('current')
pt3080MonitorTSoIPFecSkew = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080MonitorTSoIPFecSkew.setStatus('current')
pt3080MonitorTSoIPKeepNullPackets = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080MonitorTSoIPKeepNullPackets.setStatus('current')
pt3080MonitorTSoIPPacketsPerFrame = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080MonitorTSoIPPacketsPerFrame.setStatus('current')
pt3080MonitorTSoIPUDPChecksum = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080MonitorTSoIPUDPChecksum.setStatus('current')
pt3080MonitorTSoIPDSCP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080MonitorTSoIPDSCP.setStatus('current')
pt3080MonitorTSoIPTTL = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080MonitorTSoIPTTL.setStatus('current')
pt3080MonitorTSoIPGenerateError = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setUnits('0.1 %').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080MonitorTSoIPGenerateError.setStatus('current')
pt3080MonitorTSoIPIpBitrate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 30), Integer32()).setUnits('0.001 Mbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080MonitorTSoIPIpBitrate.setStatus('current')
pt3080MonitorTSoIPTSSize = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 32), Integer32()).setUnits('1 bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080MonitorTSoIPTSSize.setStatus('current')
pt3080MonitorTSoIPLostIPFrames = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 12, 31), Integer32()).setUnits('1 Mbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080MonitorTSoIPLostIPFrames.setStatus('current')
pt3080TestEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("off", 0), ("scar", 1), ("sweep2", 2), ("prbs-on", 3), ("prbs-auto", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TestEnable.setStatus('current')
pt3080TestEnableReconnect = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 13, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TestEnableReconnect.setStatus('current')
pt3080TestScarrierLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 13, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TestScarrierLevel.setStatus('current')
pt3080TestscarrierFrequencyOffset = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 13, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-4000000, 4000000))).setUnits('1 Hz').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TestscarrierFrequencyOffset.setStatus('current')
pt3080GroupAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 1), )
if mibBuilder.loadTexts: pt3080GroupAlarmTable.setStatus('current')
pt3080GroupAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 1, 1), ).setIndexNames((0, "PT3080-MIB", "pt3080GroupAlarmID"))
if mibBuilder.loadTexts: pt3080GroupAlarmEntry.setStatus('current')
pt3080GroupAlarmID = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: pt3080GroupAlarmID.setStatus('current')
pt3080GroupAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080GroupAlarmDescription.setStatus('current')
pt3080GroupAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("activated", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080GroupAlarmState.setStatus('current')
pt3080GroupAlarmActionEventlog = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GroupAlarmActionEventlog.setStatus('current')
pt3080GroupAlarmActionRelay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GroupAlarmActionRelay1.setStatus('current')
pt3080GroupAlarmActionRelay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GroupAlarmActionRelay2.setStatus('current')
pt3080GroupAlarmActionTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GroupAlarmActionTrap.setStatus('current')
pt3080GroupAlarmActionEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GroupAlarmActionEmail.setStatus('current')
pt3080GroupAlarmActionAlarmLED = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GroupAlarmActionAlarmLED.setStatus('current')
pt3080GroupAlarmActionForceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("mute", 1), ("reboot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GroupAlarmActionForceMode.setStatus('current')
pt3080ASITSPrimaryAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 5), )
if mibBuilder.loadTexts: pt3080ASITSPrimaryAlarmTable.setStatus('current')
pt3080ASITSPrimaryAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 5, 1), ).setIndexNames((0, "PT3080-MIB", "pt3080ASITSPrimaryAlarmID"))
if mibBuilder.loadTexts: pt3080ASITSPrimaryAlarmEntry.setStatus('current')
pt3080ASITSPrimaryAlarmID = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: pt3080ASITSPrimaryAlarmID.setStatus('current')
pt3080ASITSPrimaryAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 5, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASITSPrimaryAlarmDescription.setStatus('current')
pt3080ASITSPrimaryAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("activated", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASITSPrimaryAlarmState.setStatus('current')
pt3080ASITSPrimaryAlarmActionEventlog = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASITSPrimaryAlarmActionEventlog.setStatus('current')
pt3080ASITSPrimaryAlarmActionRelay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 5, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASITSPrimaryAlarmActionRelay1.setStatus('current')
pt3080ASITSPrimaryAlarmActionRelay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASITSPrimaryAlarmActionRelay2.setStatus('current')
pt3080ASITSPrimaryAlarmActionTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 5, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASITSPrimaryAlarmActionTrap.setStatus('current')
pt3080ASITSPrimaryAlarmActionEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASITSPrimaryAlarmActionEmail.setStatus('current')
pt3080ASITSPrimaryAlarmActionAlarmLED = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASITSPrimaryAlarmActionAlarmLED.setStatus('current')
pt3080ASITSPrimaryAlarmActionForceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 5, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("mute", 1), ("reboot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASITSPrimaryAlarmActionForceMode.setStatus('current')
pt3080ASITSSecondaryAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 6), )
if mibBuilder.loadTexts: pt3080ASITSSecondaryAlarmTable.setStatus('current')
pt3080ASITSSecondaryAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 6, 1), ).setIndexNames((0, "PT3080-MIB", "pt3080ASITSSecondaryAlarmID"))
if mibBuilder.loadTexts: pt3080ASITSSecondaryAlarmEntry.setStatus('current')
pt3080ASITSSecondaryAlarmID = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: pt3080ASITSSecondaryAlarmID.setStatus('current')
pt3080ASITSSecondaryAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 6, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASITSSecondaryAlarmDescription.setStatus('current')
pt3080ASITSSecondaryAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("activated", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASITSSecondaryAlarmState.setStatus('current')
pt3080ASITSSecondaryAlarmActionEventlog = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 6, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASITSSecondaryAlarmActionEventlog.setStatus('current')
pt3080ASITSSecondaryAlarmActionRelay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 6, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASITSSecondaryAlarmActionRelay1.setStatus('current')
pt3080ASITSSecondaryAlarmActionRelay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 6, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASITSSecondaryAlarmActionRelay2.setStatus('current')
pt3080ASITSSecondaryAlarmActionTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 6, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASITSSecondaryAlarmActionTrap.setStatus('current')
pt3080ASITSSecondaryAlarmActionEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 6, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASITSSecondaryAlarmActionEmail.setStatus('current')
pt3080ASITSSecondaryAlarmActionAlarmLED = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 6, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASITSSecondaryAlarmActionAlarmLED.setStatus('current')
pt3080ASITSSecondaryAlarmActionForceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("mute", 1), ("reboot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASITSSecondaryAlarmActionForceMode.setStatus('current')
pt3080SFNAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 7), )
if mibBuilder.loadTexts: pt3080SFNAlarmTable.setStatus('current')
pt3080SFNAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 7, 1), ).setIndexNames((0, "PT3080-MIB", "pt3080SFNAlarmID"))
if mibBuilder.loadTexts: pt3080SFNAlarmEntry.setStatus('current')
pt3080SFNAlarmID = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: pt3080SFNAlarmID.setStatus('current')
pt3080SFNAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 7, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SFNAlarmDescription.setStatus('current')
pt3080SFNAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("activated", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080SFNAlarmState.setStatus('current')
pt3080SFNAlarmActionEventlog = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SFNAlarmActionEventlog.setStatus('current')
pt3080SFNAlarmActionRelay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SFNAlarmActionRelay1.setStatus('current')
pt3080SFNAlarmActionRelay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SFNAlarmActionRelay2.setStatus('current')
pt3080SFNAlarmActionTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SFNAlarmActionTrap.setStatus('current')
pt3080SFNAlarmActionEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 7, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SFNAlarmActionEmail.setStatus('current')
pt3080SFNAlarmActionAlarmLED = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 7, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SFNAlarmActionAlarmLED.setStatus('current')
pt3080SFNAlarmActionForceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 7, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("mute", 1), ("reboot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080SFNAlarmActionForceMode.setStatus('current')
pt3080ReferenceAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 8), )
if mibBuilder.loadTexts: pt3080ReferenceAlarmTable.setStatus('current')
pt3080ReferenceAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 8, 1), ).setIndexNames((0, "PT3080-MIB", "pt3080ReferenceAlarmID"))
if mibBuilder.loadTexts: pt3080ReferenceAlarmEntry.setStatus('current')
pt3080ReferenceAlarmID = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 8, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: pt3080ReferenceAlarmID.setStatus('current')
pt3080ReferenceAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 8, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ReferenceAlarmDescription.setStatus('current')
pt3080ReferenceAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("activated", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ReferenceAlarmState.setStatus('current')
pt3080ReferenceAlarmActionEventlog = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 8, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReferenceAlarmActionEventlog.setStatus('current')
pt3080ReferenceAlarmActionRelay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 8, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReferenceAlarmActionRelay1.setStatus('current')
pt3080ReferenceAlarmActionRelay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 8, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReferenceAlarmActionRelay2.setStatus('current')
pt3080ReferenceAlarmActionTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 8, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReferenceAlarmActionTrap.setStatus('current')
pt3080ReferenceAlarmActionEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 8, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReferenceAlarmActionEmail.setStatus('current')
pt3080ReferenceAlarmActionAlarmLED = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 8, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReferenceAlarmActionAlarmLED.setStatus('current')
pt3080ReferenceAlarmActionForceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 8, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("mute", 1), ("reboot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ReferenceAlarmActionForceMode.setStatus('current')
pt3080RFAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 9), )
if mibBuilder.loadTexts: pt3080RFAlarmTable.setStatus('current')
pt3080RFAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 9, 1), ).setIndexNames((0, "PT3080-MIB", "pt3080RFAlarmID"))
if mibBuilder.loadTexts: pt3080RFAlarmEntry.setStatus('current')
pt3080RFAlarmID = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: pt3080RFAlarmID.setStatus('current')
pt3080RFAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 9, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080RFAlarmDescription.setStatus('current')
pt3080RFAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 9, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("activated", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080RFAlarmState.setStatus('current')
pt3080RFAlarmActionEventlog = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080RFAlarmActionEventlog.setStatus('current')
pt3080RFAlarmActionRelay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080RFAlarmActionRelay1.setStatus('current')
pt3080RFAlarmActionRelay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080RFAlarmActionRelay2.setStatus('current')
pt3080RFAlarmActionTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 9, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080RFAlarmActionTrap.setStatus('current')
pt3080RFAlarmActionEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 9, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080RFAlarmActionEmail.setStatus('current')
pt3080RFAlarmActionAlarmLED = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 9, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080RFAlarmActionAlarmLED.setStatus('current')
pt3080RFAlarmActionForceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 9, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("mute", 1), ("reboot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080RFAlarmActionForceMode.setStatus('current')
pt3080GPSAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 10), )
if mibBuilder.loadTexts: pt3080GPSAlarmTable.setStatus('current')
pt3080GPSAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 10, 1), ).setIndexNames((0, "PT3080-MIB", "pt3080GPSAlarmID"))
if mibBuilder.loadTexts: pt3080GPSAlarmEntry.setStatus('current')
pt3080GPSAlarmID = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: pt3080GPSAlarmID.setStatus('current')
pt3080GPSAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 10, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080GPSAlarmDescription.setStatus('current')
pt3080GPSAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("activated", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080GPSAlarmState.setStatus('current')
pt3080GPSAlarmActionEventlog = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GPSAlarmActionEventlog.setStatus('current')
pt3080GPSAlarmActionRelay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GPSAlarmActionRelay1.setStatus('current')
pt3080GPSAlarmActionRelay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GPSAlarmActionRelay2.setStatus('current')
pt3080GPSAlarmActionTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GPSAlarmActionTrap.setStatus('current')
pt3080GPSAlarmActionEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GPSAlarmActionEmail.setStatus('current')
pt3080GPSAlarmActionAlarmLED = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GPSAlarmActionAlarmLED.setStatus('current')
pt3080GPSAlarmActionForceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("mute", 1), ("reboot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080GPSAlarmActionForceMode.setStatus('current')
pt3080TSoIPAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 12), )
if mibBuilder.loadTexts: pt3080TSoIPAlarmTable.setStatus('current')
pt3080TSoIPAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 12, 1), ).setIndexNames((0, "PT3080-MIB", "pt3080TSoIPAlarmID"))
if mibBuilder.loadTexts: pt3080TSoIPAlarmEntry.setStatus('current')
pt3080TSoIPAlarmID = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 12, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: pt3080TSoIPAlarmID.setStatus('current')
pt3080TSoIPAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 12, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPAlarmDescription.setStatus('current')
pt3080TSoIPAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("activated", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080TSoIPAlarmState.setStatus('current')
pt3080TSoIPAlarmActionEventlog = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 12, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPAlarmActionEventlog.setStatus('current')
pt3080TSoIPAlarmActionRelay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPAlarmActionRelay1.setStatus('current')
pt3080TSoIPAlarmActionRelay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 12, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPAlarmActionRelay2.setStatus('current')
pt3080TSoIPAlarmActionTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 12, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPAlarmActionTrap.setStatus('current')
pt3080TSoIPAlarmActionEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 12, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPAlarmActionEmail.setStatus('current')
pt3080TSoIPAlarmActionAlarmLED = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 12, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPAlarmActionAlarmLED.setStatus('current')
pt3080TSoIPAlarmActionForceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 12, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("mute", 1), ("reboot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080TSoIPAlarmActionForceMode.setStatus('current')
pt3080ExternalAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 13), )
if mibBuilder.loadTexts: pt3080ExternalAlarmTable.setStatus('current')
pt3080ExternalAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 13, 1), ).setIndexNames((0, "PT3080-MIB", "pt3080ExternalAlarmID"))
if mibBuilder.loadTexts: pt3080ExternalAlarmEntry.setStatus('current')
pt3080ExternalAlarmID = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 13, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: pt3080ExternalAlarmID.setStatus('current')
pt3080ExternalAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 13, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ExternalAlarmDescription.setStatus('current')
pt3080ExternalAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 13, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("activated", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ExternalAlarmState.setStatus('current')
pt3080ExternalAlarmActionEventlog = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 13, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ExternalAlarmActionEventlog.setStatus('current')
pt3080ExternalAlarmActionRelay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 13, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ExternalAlarmActionRelay1.setStatus('current')
pt3080ExternalAlarmActionRelay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ExternalAlarmActionRelay2.setStatus('current')
pt3080ExternalAlarmActionTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 13, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ExternalAlarmActionTrap.setStatus('current')
pt3080ExternalAlarmActionEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 13, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ExternalAlarmActionEmail.setStatus('current')
pt3080ExternalAlarmActionAlarmLED = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 13, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ExternalAlarmActionAlarmLED.setStatus('current')
pt3080ExternalAlarmActionForceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 13, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("mute", 1), ("reboot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ExternalAlarmActionForceMode.setStatus('current')
pt3080HWMonitorAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 14), )
if mibBuilder.loadTexts: pt3080HWMonitorAlarmTable.setStatus('current')
pt3080HWMonitorAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 14, 1), ).setIndexNames((0, "PT3080-MIB", "pt3080HWMonitorAlarmID"))
if mibBuilder.loadTexts: pt3080HWMonitorAlarmEntry.setStatus('current')
pt3080HWMonitorAlarmID = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 14, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: pt3080HWMonitorAlarmID.setStatus('current')
pt3080HWMonitorAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 14, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080HWMonitorAlarmDescription.setStatus('current')
pt3080HWMonitorAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("activated", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080HWMonitorAlarmState.setStatus('current')
pt3080HWMonitorAlarmActionEventlog = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080HWMonitorAlarmActionEventlog.setStatus('current')
pt3080HWMonitorAlarmActionRelay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 14, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080HWMonitorAlarmActionRelay1.setStatus('current')
pt3080HWMonitorAlarmActionRelay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 14, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080HWMonitorAlarmActionRelay2.setStatus('current')
pt3080HWMonitorAlarmActionTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 14, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080HWMonitorAlarmActionTrap.setStatus('current')
pt3080HWMonitorAlarmActionEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 14, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080HWMonitorAlarmActionEmail.setStatus('current')
pt3080HWMonitorAlarmActionAlarmLED = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 14, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080HWMonitorAlarmActionAlarmLED.setStatus('current')
pt3080HWMonitorAlarmActionForceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 14, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("mute", 1), ("reboot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080HWMonitorAlarmActionForceMode.setStatus('current')
pt3080CommsAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 15), )
if mibBuilder.loadTexts: pt3080CommsAlarmTable.setStatus('current')
pt3080CommsAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 15, 1), ).setIndexNames((0, "PT3080-MIB", "pt3080CommsAlarmID"))
if mibBuilder.loadTexts: pt3080CommsAlarmEntry.setStatus('current')
pt3080CommsAlarmID = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 15, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: pt3080CommsAlarmID.setStatus('current')
pt3080CommsAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 15, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsAlarmDescription.setStatus('current')
pt3080CommsAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("activated", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsAlarmState.setStatus('current')
pt3080CommsAlarmActionEventlog = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 15, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsAlarmActionEventlog.setStatus('current')
pt3080CommsAlarmActionRelay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsAlarmActionRelay1.setStatus('current')
pt3080CommsAlarmActionRelay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 15, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsAlarmActionRelay2.setStatus('current')
pt3080CommsAlarmActionTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 15, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsAlarmActionTrap.setStatus('current')
pt3080CommsAlarmActionEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 15, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsAlarmActionEmail.setStatus('current')
pt3080CommsAlarmActionAlarmLED = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 15, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsAlarmActionAlarmLED.setStatus('current')
pt3080CommsAlarmActionForceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 15, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("mute", 1), ("reboot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsAlarmActionForceMode.setStatus('current')
pt3080ASIAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 16), )
if mibBuilder.loadTexts: pt3080ASIAlarmTable.setStatus('current')
pt3080ASIAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 16, 1), ).setIndexNames((0, "PT3080-MIB", "pt3080ASIAlarmID"))
if mibBuilder.loadTexts: pt3080ASIAlarmEntry.setStatus('current')
pt3080ASIAlarmID = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 16, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: pt3080ASIAlarmID.setStatus('current')
pt3080ASIAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 16, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIAlarmDescription.setStatus('current')
pt3080ASIAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("activated", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080ASIAlarmState.setStatus('current')
pt3080ASIAlarmActionEventlog = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASIAlarmActionEventlog.setStatus('current')
pt3080ASIAlarmActionRelay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASIAlarmActionRelay1.setStatus('current')
pt3080ASIAlarmActionRelay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 16, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASIAlarmActionRelay2.setStatus('current')
pt3080ASIAlarmActionTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 16, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASIAlarmActionTrap.setStatus('current')
pt3080ASIAlarmActionEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 16, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASIAlarmActionEmail.setStatus('current')
pt3080ASIAlarmActionAlarmLED = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 16, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASIAlarmActionAlarmLED.setStatus('current')
pt3080ASIAlarmActionForceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 16, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("mute", 1), ("reboot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080ASIAlarmActionForceMode.setStatus('current')
pt3080DemodulatorAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 17), )
if mibBuilder.loadTexts: pt3080DemodulatorAlarmTable.setStatus('current')
pt3080DemodulatorAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 17, 1), ).setIndexNames((0, "PT3080-MIB", "pt3080DemodulatorAlarmID"))
if mibBuilder.loadTexts: pt3080DemodulatorAlarmEntry.setStatus('current')
pt3080DemodulatorAlarmID = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 17, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: pt3080DemodulatorAlarmID.setStatus('current')
pt3080DemodulatorAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 17, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080DemodulatorAlarmDescription.setStatus('current')
pt3080DemodulatorAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("activated", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080DemodulatorAlarmState.setStatus('current')
pt3080DemodulatorAlarmActionEventlog = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 17, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080DemodulatorAlarmActionEventlog.setStatus('current')
pt3080DemodulatorAlarmActionRelay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 17, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080DemodulatorAlarmActionRelay1.setStatus('current')
pt3080DemodulatorAlarmActionRelay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 17, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080DemodulatorAlarmActionRelay2.setStatus('current')
pt3080DemodulatorAlarmActionTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 17, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080DemodulatorAlarmActionTrap.setStatus('current')
pt3080DemodulatorAlarmActionEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 17, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080DemodulatorAlarmActionEmail.setStatus('current')
pt3080DemodulatorAlarmActionAlarmLED = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 17, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080DemodulatorAlarmActionAlarmLED.setStatus('current')
pt3080DemodulatorAlarmActionForceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 17, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("mute", 1), ("reboot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080DemodulatorAlarmActionForceMode.setStatus('current')
pt3080InternalAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 18), )
if mibBuilder.loadTexts: pt3080InternalAlarmTable.setStatus('current')
pt3080InternalAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 18, 1), ).setIndexNames((0, "PT3080-MIB", "pt3080InternalAlarmID"))
if mibBuilder.loadTexts: pt3080InternalAlarmEntry.setStatus('current')
pt3080InternalAlarmID = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 18, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: pt3080InternalAlarmID.setStatus('current')
pt3080InternalAlarmDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 18, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InternalAlarmDescription.setStatus('current')
pt3080InternalAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("activated", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080InternalAlarmState.setStatus('current')
pt3080InternalAlarmActionEventlog = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 18, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InternalAlarmActionEventlog.setStatus('current')
pt3080InternalAlarmActionRelay1 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 18, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InternalAlarmActionRelay1.setStatus('current')
pt3080InternalAlarmActionRelay2 = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 18, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InternalAlarmActionRelay2.setStatus('current')
pt3080InternalAlarmActionTrap = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 18, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InternalAlarmActionTrap.setStatus('current')
pt3080InternalAlarmActionEmail = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 18, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InternalAlarmActionEmail.setStatus('current')
pt3080InternalAlarmActionAlarmLED = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 18, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InternalAlarmActionAlarmLED.setStatus('current')
pt3080InternalAlarmActionForceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 14, 18, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("mute", 1), ("reboot", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080InternalAlarmActionForceMode.setStatus('current')
pt3080PresetTable = MibTable((1, 3, 6, 1, 4, 1, 18086, 3080, 15, 1), )
if mibBuilder.loadTexts: pt3080PresetTable.setStatus('current')
pt3080PresetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18086, 3080, 15, 1, 1), ).setIndexNames((0, "PT3080-MIB", "pt3080PresetNo"))
if mibBuilder.loadTexts: pt3080PresetEntry.setStatus('current')
pt3080PresetNo = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 15, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: pt3080PresetNo.setStatus('current')
pt3080PresetName = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 15, 1, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PresetName.setStatus('current')
pt3080PresetRecall = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 15, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PresetRecall.setStatus('current')
pt3080PresetStore = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 15, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PresetStore.setStatus('current')
pt3080EventlogTable = MibTable((1, 3, 6, 1, 4, 1, 18086, 3080, 16, 1), )
if mibBuilder.loadTexts: pt3080EventlogTable.setStatus('current')
pt3080EventlogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18086, 3080, 16, 1, 1), ).setIndexNames((0, "PT3080-MIB", "pt3080EventlogNo"))
if mibBuilder.loadTexts: pt3080EventlogEntry.setStatus('current')
pt3080EventlogNo = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 16, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2047)))
if mibBuilder.loadTexts: pt3080EventlogNo.setStatus('current')
pt3080EventlogID = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 16, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080EventlogID.setStatus('current')
pt3080EventlogTimestamp = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 16, 1, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080EventlogTimestamp.setStatus('current')
pt3080EventlogText = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 16, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080EventlogText.setStatus('current')
pt3080EventlogClear = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 16, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noop", 0), ("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080EventlogClear.setStatus('current')
pt3080EventlogEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 16, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080EventlogEnable.setStatus('current')
pt3080EventlogMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 16, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("fifo", 0), ("full", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080EventlogMode.setStatus('current')
pt3080CommsAlarmEmailReceiver = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 34), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsAlarmEmailReceiver.setStatus('current')
pt3080CommsSeparatedSwitchPorts = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 98), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsSeparatedSwitchPorts.setStatus('current')
pt3080CommsBroadcastStormProtection = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 94), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBroadcastStormProtection.setStatus('current')
pt3080CommsLocalPhysicalInterface = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 80), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("eth0", 0), ("eth1", 1), ("eth2", 2), ("eth3", 3), ("eth4", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsLocalPhysicalInterface.setStatus('current')
pt3080CommsLocalDhcpMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("client", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsLocalDhcpMode.setStatus('current')
pt3080CommsLocalStaticIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsLocalStaticIpAddr.setStatus('current')
pt3080CommsLocalStaticNetmask = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsLocalStaticNetmask.setStatus('current')
pt3080CommsLocalIpMulticastAddr = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 100), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsLocalIpMulticastAddr.setStatus('current')
pt3080CommsLocalIpMulticastSourceFilterMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 190), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("sfinclude", 0), ("sfexclude", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsLocalIpMulticastSourceFilterMode.setStatus('current')
pt3080CommsLocalIpMulticastSourceFilterAddress1 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 200), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsLocalIpMulticastSourceFilterAddress1.setStatus('current')
pt3080CommsLocalIpMulticastSourceFilterAddress2 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 201), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsLocalIpMulticastSourceFilterAddress2.setStatus('current')
pt3080CommsLocalIpMulticastSourceFilterAddress3 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 202), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsLocalIpMulticastSourceFilterAddress3.setStatus('current')
pt3080CommsLocalIpMulticastSourceFilterAddress4 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 203), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsLocalIpMulticastSourceFilterAddress4.setStatus('current')
pt3080CommsLocalIpMulticastSourceFilterAddress5 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 204), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsLocalIpMulticastSourceFilterAddress5.setStatus('current')
pt3080CommsLocalIpMulticastSourceFilterAddress6 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 205), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsLocalIpMulticastSourceFilterAddress6.setStatus('current')
pt3080CommsLocalVlanEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 101), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsLocalVlanEnable.setStatus('current')
pt3080CommsLocalVlanId = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 102), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsLocalVlanId.setStatus('current')
pt3080CommsLocalServiceSNMP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 103), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsLocalServiceSNMP.setStatus('current')
pt3080CommsLocalServiceSCPI = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 104), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsLocalServiceSCPI.setStatus('current')
pt3080CommsLocalServiceTSoIP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 105), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsLocalServiceTSoIP.setStatus('current')
pt3080CommsLocalServiceRIP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 106), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsLocalServiceRIP.setStatus('current')
pt3080CommsLocalCurrentIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsLocalCurrentIpAddr.setStatus('current')
pt3080CommsLocalCurrentNetmask = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsLocalCurrentNetmask.setStatus('current')
pt3080CommsRemoteEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 117), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemoteEnable.setStatus('current')
pt3080CommsRemotePhysicalInterface = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 81), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("eth0", 0), ("eth1", 1), ("eth2", 2), ("eth3", 3), ("eth4", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemotePhysicalInterface.setStatus('current')
pt3080CommsRemoteDhcpMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 73), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("client", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemoteDhcpMode.setStatus('current')
pt3080CommsRemoteStaticIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemoteStaticIpAddr.setStatus('current')
pt3080CommsRemoteStaticNetmask = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemoteStaticNetmask.setStatus('current')
pt3080CommsRemoteIpMulticastAddr = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 110), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemoteIpMulticastAddr.setStatus('current')
pt3080CommsRemoteIpMulticastSourceFilterMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 191), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("sfinclude", 0), ("sfexclude", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemoteIpMulticastSourceFilterMode.setStatus('current')
pt3080CommsRemoteIpMulticastSourceFilterAddress1 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 220), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemoteIpMulticastSourceFilterAddress1.setStatus('current')
pt3080CommsRemoteIpMulticastSourceFilterAddress2 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 221), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemoteIpMulticastSourceFilterAddress2.setStatus('current')
pt3080CommsRemoteIpMulticastSourceFilterAddress3 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 222), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemoteIpMulticastSourceFilterAddress3.setStatus('current')
pt3080CommsRemoteIpMulticastSourceFilterAddress4 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 223), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemoteIpMulticastSourceFilterAddress4.setStatus('current')
pt3080CommsRemoteIpMulticastSourceFilterAddress5 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 224), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemoteIpMulticastSourceFilterAddress5.setStatus('current')
pt3080CommsRemoteIpMulticastSourceFilterAddress6 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 225), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemoteIpMulticastSourceFilterAddress6.setStatus('current')
pt3080CommsRemoteVlanEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 111), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemoteVlanEnable.setStatus('current')
pt3080CommsRemoteVlanId = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 112), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemoteVlanId.setStatus('current')
pt3080CommsRemoteServiceSNMP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 113), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemoteServiceSNMP.setStatus('current')
pt3080CommsRemoteServiceSCPI = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 114), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemoteServiceSCPI.setStatus('current')
pt3080CommsRemoteServiceTSoIP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 115), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemoteServiceTSoIP.setStatus('current')
pt3080CommsRemoteServiceWeb = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 116), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemoteServiceWeb.setStatus('current')
pt3080CommsRemoteServiceRIP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 118), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRemoteServiceRIP.setStatus('current')
pt3080CommsRemoteCurrentIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 10), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsRemoteCurrentIpAddr.setStatus('current')
pt3080CommsRemoteCurrentNetmask = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsRemoteCurrentNetmask.setStatus('current')
pt3080CommsGbeAdminEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 127), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminEnable.setStatus('current')
pt3080CommsGbeAdminPhysicalInterface = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 82), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("eth0", 0), ("eth1", 1), ("eth2", 2), ("eth3", 3), ("eth4", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminPhysicalInterface.setStatus('current')
pt3080CommsGbeAdminDhcpMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("client", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminDhcpMode.setStatus('current')
pt3080CommsGbeAdminStaticIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminStaticIpAddr.setStatus('current')
pt3080CommsGbeAdminStaticNetmask = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminStaticNetmask.setStatus('current')
pt3080CommsGbeAdminIpMulticastAddr = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 120), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminIpMulticastAddr.setStatus('current')
pt3080CommsGbeAdminIpMulticastSourceFilterMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 192), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("sfinclude", 0), ("sfexclude", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminIpMulticastSourceFilterMode.setStatus('current')
pt3080CommsGbeAdminIpMulticastSourceFilterAddress1 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 230), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminIpMulticastSourceFilterAddress1.setStatus('current')
pt3080CommsGbeAdminIpMulticastSourceFilterAddress2 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 231), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminIpMulticastSourceFilterAddress2.setStatus('current')
pt3080CommsGbeAdminIpMulticastSourceFilterAddress3 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 232), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminIpMulticastSourceFilterAddress3.setStatus('current')
pt3080CommsGbeAdminIpMulticastSourceFilterAddress4 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 233), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminIpMulticastSourceFilterAddress4.setStatus('current')
pt3080CommsGbeAdminIpMulticastSourceFilterAddress5 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 234), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminIpMulticastSourceFilterAddress5.setStatus('current')
pt3080CommsGbeAdminIpMulticastSourceFilterAddress6 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 235), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminIpMulticastSourceFilterAddress6.setStatus('current')
pt3080CommsGbeAdminVlanEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 121), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminVlanEnable.setStatus('current')
pt3080CommsGbeAdminVlanId = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 122), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminVlanId.setStatus('current')
pt3080CommsGbeAdminServiceSNMP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 123), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminServiceSNMP.setStatus('current')
pt3080CommsGbeAdminServiceSCPI = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 124), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminServiceSCPI.setStatus('current')
pt3080CommsGbeAdminServiceTSoIP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 125), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminServiceTSoIP.setStatus('current')
pt3080CommsGbeAdminServiceWeb = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 126), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminServiceWeb.setStatus('current')
pt3080CommsGbeAdminServiceRIP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 128), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsGbeAdminServiceRIP.setStatus('current')
pt3080CommsGbeAdminCurrentIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 16), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsGbeAdminCurrentIpAddr.setStatus('current')
pt3080CommsGbeAdminCurrentNetmask = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 17), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsGbeAdminCurrentNetmask.setStatus('current')
pt3080CommsBackupEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 150), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupEnable.setStatus('current')
pt3080CommsBackupPhysicalInterface = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 151), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("eth0", 0), ("eth1", 1), ("eth2", 2), ("eth3", 3), ("eth4", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupPhysicalInterface.setStatus('current')
pt3080CommsBackupDhcpMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 75), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("client", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupDhcpMode.setStatus('current')
pt3080CommsBackupStaticIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 152), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupStaticIpAddr.setStatus('current')
pt3080CommsBackupStaticNetmask = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 153), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupStaticNetmask.setStatus('current')
pt3080CommsBackupIpMulticastAddr = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 154), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupIpMulticastAddr.setStatus('current')
pt3080CommsBackupIpMulticastSourceFilterMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 193), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("sfinclude", 0), ("sfexclude", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupIpMulticastSourceFilterMode.setStatus('current')
pt3080CommsBackupIpMulticastSourceFilterAddress1 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 170), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupIpMulticastSourceFilterAddress1.setStatus('current')
pt3080CommsBackupIpMulticastSourceFilterAddress2 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 171), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupIpMulticastSourceFilterAddress2.setStatus('current')
pt3080CommsBackupIpMulticastSourceFilterAddress3 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 172), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupIpMulticastSourceFilterAddress3.setStatus('current')
pt3080CommsBackupIpMulticastSourceFilterAddress4 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 173), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupIpMulticastSourceFilterAddress4.setStatus('current')
pt3080CommsBackupIpMulticastSourceFilterAddress5 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 174), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupIpMulticastSourceFilterAddress5.setStatus('current')
pt3080CommsBackupIpMulticastSourceFilterAddress6 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 175), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupIpMulticastSourceFilterAddress6.setStatus('current')
pt3080CommsBackupVlanEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 155), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupVlanEnable.setStatus('current')
pt3080CommsBackupVlanId = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 156), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupVlanId.setStatus('current')
pt3080CommsBackupServiceSNMP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 157), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupServiceSNMP.setStatus('current')
pt3080CommsBackupServiceSCPI = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 158), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupServiceSCPI.setStatus('current')
pt3080CommsBackupServiceTSoIP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 159), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupServiceTSoIP.setStatus('current')
pt3080CommsBackupServiceWeb = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 160), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupServiceWeb.setStatus('current')
pt3080CommsBackupServiceRIP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 161), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsBackupServiceRIP.setStatus('current')
pt3080CommsBackupCurrentIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 162), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsBackupCurrentIpAddr.setStatus('current')
pt3080CommsBackupCurrentNetmask = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 163), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsBackupCurrentNetmask.setStatus('current')
pt3080CommsPortEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2500), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortEnable.setStatus('current')
pt3080CommsPortPhysicalInterface = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2151), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("eth0", 0), ("eth1", 1), ("eth2", 2), ("eth3", 3), ("eth4", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortPhysicalInterface.setStatus('current')
pt3080CommsPortDhcpMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2075), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("client", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortDhcpMode.setStatus('current')
pt3080CommsPortStaticIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2152), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortStaticIpAddr.setStatus('current')
pt3080CommsPortStaticNetmask = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2153), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortStaticNetmask.setStatus('current')
pt3080CommsPortIpMulticastAddr = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2154), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortIpMulticastAddr.setStatus('current')
pt3080CommsPortIpMulticastSourceFilterMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2193), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("sfinclude", 0), ("sfexclude", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortIpMulticastSourceFilterMode.setStatus('current')
pt3080CommsPortIpMulticastSourceFilterAddress1 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2170), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortIpMulticastSourceFilterAddress1.setStatus('current')
pt3080CommsPortIpMulticastSourceFilterAddress2 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2171), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortIpMulticastSourceFilterAddress2.setStatus('current')
pt3080CommsPortIpMulticastSourceFilterAddress3 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2172), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortIpMulticastSourceFilterAddress3.setStatus('current')
pt3080CommsPortIpMulticastSourceFilterAddress4 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2173), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortIpMulticastSourceFilterAddress4.setStatus('current')
pt3080CommsPortIpMulticastSourceFilterAddress5 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2174), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortIpMulticastSourceFilterAddress5.setStatus('current')
pt3080CommsPortIpMulticastSourceFilterAddress6 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2175), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortIpMulticastSourceFilterAddress6.setStatus('current')
pt3080CommsPortVlanEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2155), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortVlanEnable.setStatus('current')
pt3080CommsPortVlanId = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2156), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortVlanId.setStatus('current')
pt3080CommsPortServiceSNMP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2157), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortServiceSNMP.setStatus('current')
pt3080CommsPortServiceSCPI = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2158), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortServiceSCPI.setStatus('current')
pt3080CommsPortServiceTSoIP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2159), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortServiceTSoIP.setStatus('current')
pt3080CommsPortServiceWeb = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2160), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortServiceWeb.setStatus('current')
pt3080CommsPortServiceRIP = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2161), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsPortServiceRIP.setStatus('current')
pt3080CommsPortCurrentIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2162), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsPortCurrentIpAddr.setStatus('current')
pt3080CommsPortCurrentNetmask = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 2163), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsPortCurrentNetmask.setStatus('current')
pt3080CommsSNMPServicePort = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsSNMPServicePort.setStatus('current')
pt3080CommsSNMPReadOnlyCommunity = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 56), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsSNMPReadOnlyCommunity.setStatus('current')
pt3080CommsSNMPReadWriteCommunity = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 57), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsSNMPReadWriteCommunity.setStatus('current')
pt3080CommsSNMPTrapCommunity = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 58), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsSNMPTrapCommunity.setStatus('current')
pt3080CommsSNMPTrapDestination = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 59), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsSNMPTrapDestination.setStatus('current')
pt3080CommsSNMPTrapDestination2 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 419), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsSNMPTrapDestination2.setStatus('current')
pt3080CommsSNMPTrapDestination3 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 779), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsSNMPTrapDestination3.setStatus('current')
pt3080CommsSNMPTrapDestination4 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 1139), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsSNMPTrapDestination4.setStatus('current')
pt3080CommsSNMPTrapDestination5 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 1499), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsSNMPTrapDestination5.setStatus('current')
pt3080CommsSNMPTrapDestinationPort = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsSNMPTrapDestinationPort.setStatus('current')
pt3080CommsSNMPTrapDestinationPort2 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 420), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsSNMPTrapDestinationPort2.setStatus('current')
pt3080CommsSNMPTrapDestinationPort3 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 780), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsSNMPTrapDestinationPort3.setStatus('current')
pt3080CommsSNMPTrapDestinationPort4 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 1140), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsSNMPTrapDestinationPort4.setStatus('current')
pt3080CommsSNMPTrapDestinationPort5 = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 1500), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsSNMPTrapDestinationPort5.setStatus('current')
pt3080CommsStaticGateway = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 29), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsStaticGateway.setStatus('current')
pt3080CommsCurrentGateway = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 30), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsCurrentGateway.setStatus('current')
pt3080CommsStaticHostname = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 27), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsStaticHostname.setStatus('current')
pt3080CommsCurrentHostname = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsCurrentHostname.setStatus('current')
pt3080CommsStaticDNSDomain = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 25), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsStaticDNSDomain.setStatus('current')
pt3080CommsCurrentDNSDomain = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsCurrentDNSDomain.setStatus('current')
pt3080CommsStaticDNS1ServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 19), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsStaticDNS1ServerAddress.setStatus('current')
pt3080CommsStaticDNS2ServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 21), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsStaticDNS2ServerAddress.setStatus('current')
pt3080CommsStaticDNS3ServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 23), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsStaticDNS3ServerAddress.setStatus('current')
pt3080CommsCurrentDNS1ServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 20), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsCurrentDNS1ServerAddress.setStatus('current')
pt3080CommsCurrentDNS2ServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 22), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsCurrentDNS2ServerAddress.setStatus('current')
pt3080CommsCurrentDNS3ServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 24), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsCurrentDNS3ServerAddress.setStatus('current')
pt3080CommsStaticNtpServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 31), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsStaticNtpServerAddress.setStatus('current')
pt3080CommsCurrentNtpServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 32), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsCurrentNtpServerAddress.setStatus('current')
pt3080CommsEmailServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 33), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsEmailServerAddress.setStatus('current')
pt3080CommsWebServicePort = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsWebServicePort.setStatus('current')
pt3080CommsSCPIServicePort = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsSCPIServicePort.setStatus('current')
pt3080CommsSCPIServerBaudrate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("r2400", 0), ("r4800", 1), ("r9600", 2), ("r19200", 3), ("r38400", 4), ("r57600", 5), ("r115200", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsSCPIServerBaudrate.setStatus('current')
pt3080CommsSCPIUartInterface = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("rs232", 0), ("rs485", 1), ("rs485hd", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsSCPIUartInterface.setStatus('current')
pt3080CommsRipPort = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsRipPort.setStatus('current')
pt3080CommsIGMPVersion = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 99), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("auto", 0), ("v1", 1), ("v2", 2), ("v3", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsIGMPVersion.setStatus('current')
pt3080CommsIGMPQueryRobustnessCount = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 97), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 16))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsIGMPQueryRobustnessCount.setStatus('current')
pt3080CommsIGMPv3UnsolicitedReportInterval = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 96), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000))).setUnits('1 ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsIGMPv3UnsolicitedReportInterval.setStatus('current')
pt3080CommsIGMPv2UnsolicitedReportInterval = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 95), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000))).setUnits('1 ms').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsIGMPv2UnsolicitedReportInterval.setStatus('current')
pt3080CommsAccessAllowed = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("remote", 0), ("local-disable-set", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsAccessAllowed.setStatus('current')
pt3080CommsAccessAllowedTimeout = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440))).setUnits('1 min').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsAccessAllowedTimeout.setStatus('current')
pt3080CommsAccessAllowedTimeLeft = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 50), Integer32()).setUnits('1 secs').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080CommsAccessAllowedTimeLeft.setStatus('current')
pt3080CommsAccessPasswordObserver = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 51), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsAccessPasswordObserver.setStatus('current')
pt3080CommsAccessPasswordOperator = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 52), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsAccessPasswordOperator.setStatus('current')
pt3080CommsAccessPasswordAdministrator = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 53), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsAccessPasswordAdministrator.setStatus('current')
pt3080CommsStaticRouteTable = MibTable((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 300), )
if mibBuilder.loadTexts: pt3080CommsStaticRouteTable.setStatus('current')
pt3080CommsStaticRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 300, 1), ).setIndexNames((0, "PT3080-MIB", "pt3080CommsStaticRouteNO"))
if mibBuilder.loadTexts: pt3080CommsStaticRouteEntry.setStatus('current')
pt3080CommsStaticRouteNO = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 300, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: pt3080CommsStaticRouteNO.setStatus('current')
pt3080CommsStaticRouteType = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 300, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("unused", 0), ("normal", 1), ("physicalif", 2), ("recursive", 3), ("drop", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsStaticRouteType.setStatus('current')
pt3080CommsStaticRoutePrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 300, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsStaticRoutePrefix.setStatus('current')
pt3080CommsStaticRoutePrefixSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 300, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsStaticRoutePrefixSize.setStatus('current')
pt3080CommsStaticRouteTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 300, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsStaticRouteTarget.setStatus('current')
pt3080CommsStaticRoutePhysicalInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 18086, 3080, 17, 300, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("eth0", 0), ("eth1", 1), ("eth2", 2), ("eth3", 3), ("eth4", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080CommsStaticRoutePhysicalInterface.setStatus('current')
pt3080DemodulatorFollowMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080DemodulatorFollowMode.setStatus('current')
pt3080Demodulator1Available = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1Available.setStatus('current')
pt3080Demodulator2Available = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2Available.setStatus('current')
pt3080Demodulator1FWVersion = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1FWVersion.setStatus('current')
pt3080Demodulator2FWVersion = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 30), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2FWVersion.setStatus('current')
pt3080Demodulator1OutputTS = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("hp", 0), ("lp", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080Demodulator1OutputTS.setStatus('current')
pt3080Demodulator2OutputTS = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("hp", 0), ("lp", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080Demodulator2OutputTS.setStatus('current')
pt3080Demodulator1MerLimit = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 240))).setUnits('0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080Demodulator1MerLimit.setStatus('current')
pt3080Demodulator2MerLimit = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 240))).setUnits('0.1 dBm').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080Demodulator2MerLimit.setStatus('current')
pt3080Demodulator1PreVirterbiErrorRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080Demodulator1PreVirterbiErrorRateLimit.setStatus('current')
pt3080Demodulator2PreVirterbiErrorRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080Demodulator2PreVirterbiErrorRateLimit.setStatus('current')
pt3080Demodulator1PostVirterbiErrorRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080Demodulator1PostVirterbiErrorRateLimit.setStatus('current')
pt3080Demodulator2PostVirterbiErrorRateLimit = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080Demodulator2PostVirterbiErrorRateLimit.setStatus('current')
pt3080Demodulator1FelStatus = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1FelStatus.setStatus('current')
pt3080Demodulator2FelStatus = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2FelStatus.setStatus('current')
pt3080Demodulator1UncorrectedPackets = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1UncorrectedPackets.setStatus('current')
pt3080Demodulator2UncorrectedPackets = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2UncorrectedPackets.setStatus('current')
pt3080Demodulator1Mer = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 11), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1Mer.setStatus('current')
pt3080Demodulator2Mer = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 38), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2Mer.setStatus('current')
pt3080Demodulator1PreVirterbiErrorRate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 12), Integer32()).setUnits('0.1 x1e-7').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1PreVirterbiErrorRate.setStatus('current')
pt3080Demodulator2PreVirterbiErrorRate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 39), Integer32()).setUnits('0.1 x1e-7').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2PreVirterbiErrorRate.setStatus('current')
pt3080Demodulator1PostVirterbiErrorRate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 13), Integer32()).setUnits('0.1 x1e-7').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1PostVirterbiErrorRate.setStatus('current')
pt3080Demodulator2PostVirterbiErrorRate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 40), Integer32()).setUnits('0.1 x1e-7').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2PostVirterbiErrorRate.setStatus('current')
pt3080Demodulator1ActualGuardInterval = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("g1-32", 0), ("g1-16", 1), ("g1-8", 2), ("g1-4", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1ActualGuardInterval.setStatus('current')
pt3080Demodulator2ActualGuardInterval = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("g1-32", 0), ("g1-16", 1), ("g1-8", 2), ("g1-4", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2ActualGuardInterval.setStatus('current')
pt3080Demodulator1Actualifft = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("f2k", 0), ("f4k", 1), ("f8k", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1Actualifft.setStatus('current')
pt3080Demodulator2Actualifft = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("f2k", 0), ("f4k", 1), ("f8k", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2Actualifft.setStatus('current')
pt3080Demodulator1ActualConstellation = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("qpsk", 0), ("qam16", 1), ("qam64", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1ActualConstellation.setStatus('current')
pt3080Demodulator2ActualConstellation = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("qpsk", 0), ("qam16", 1), ("qam64", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2ActualConstellation.setStatus('current')
pt3080Demodulator1ActualHierarchy = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("h-1", 1), ("h-2", 2), ("h-4", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1ActualHierarchy.setStatus('current')
pt3080Demodulator2ActualHierarchy = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("h-1", 1), ("h-2", 2), ("h-4", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2ActualHierarchy.setStatus('current')
pt3080Demodulator1ActualCodeRateHighPrio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("r1-2", 0), ("r2-3", 1), ("r3-4", 2), ("r5-6", 3), ("r7-8", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1ActualCodeRateHighPrio.setStatus('current')
pt3080Demodulator2ActualCodeRateHighPrio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("r1-2", 0), ("r2-3", 1), ("r3-4", 2), ("r5-6", 3), ("r7-8", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2ActualCodeRateHighPrio.setStatus('current')
pt3080Demodulator1ActualCodeRateLowPrio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("r1-2", 0), ("r2-3", 1), ("r3-4", 2), ("r5-6", 3), ("r7-8", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1ActualCodeRateLowPrio.setStatus('current')
pt3080Demodulator2ActualCodeRateLowPrio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("r1-2", 0), ("r2-3", 1), ("r3-4", 2), ("r5-6", 3), ("r7-8", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2ActualCodeRateLowPrio.setStatus('current')
pt3080Demodulator1ActualDeepInterleaver = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1ActualDeepInterleaver.setStatus('current')
pt3080Demodulator2ActualDeepInterleaver = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2ActualDeepInterleaver.setStatus('current')
pt3080Demodulator1ActualMpeFecHighPrio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1ActualMpeFecHighPrio.setStatus('current')
pt3080Demodulator2ActualMpeFecHighPrio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2ActualMpeFecHighPrio.setStatus('current')
pt3080Demodulator1ActualMpeFecLowPrio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1ActualMpeFecLowPrio.setStatus('current')
pt3080Demodulator2ActualMpeFecLowPrio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2ActualMpeFecLowPrio.setStatus('current')
pt3080Demodulator1ActualTimeSlicingHighPrio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1ActualTimeSlicingHighPrio.setStatus('current')
pt3080Demodulator2ActualTimeSlicingHighPrio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2ActualTimeSlicingHighPrio.setStatus('current')
pt3080Demodulator1ActualTimeSlicingLowPrio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1ActualTimeSlicingLowPrio.setStatus('current')
pt3080Demodulator2ActualTimeSlicingLowPrio = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2ActualTimeSlicingLowPrio.setStatus('current')
pt3080Demodulator1ActualCellID = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1ActualCellID.setStatus('current')
pt3080Demodulator2ActualCellID = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2ActualCellID.setStatus('current')
pt3080Demodulator1ActualDVBHMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator1ActualDVBHMode.setStatus('current')
pt3080Demodulator2ActualDVBHMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 24, 53), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080Demodulator2ActualDVBHMode.setStatus('current')
pt3080PrecorrectorLinearAdaptive = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 79), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearAdaptive.setStatus('current')
pt3080PrecorrectorLinearMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("monitoring", 0), ("static", 1), ("adaptive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearMode.setStatus('current')
pt3080PrecorrectorLinearSenseEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearSenseEnable.setStatus('current')
pt3080PrecorrectorLinearMonitorStatus = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("not-running", 0), ("monitoring", 1), ("initialising", 2), ("initialising-0", 3), ("initialising-10", 4), ("initialising-20", 5), ("initialising-30", 6), ("initialising-40", 7), ("initialising-50", 8), ("initialising-60", 9), ("initialising-70", 10), ("initialising-80", 11), ("initialising-90", 12), ("auto-applying", 13), ("completed", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearMonitorStatus.setStatus('current')
pt3080PrecorrectorLinearMonitorSenseLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 22), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearMonitorSenseLevel.setStatus('current')
pt3080PrecorrectorLinearMonitorSenseValid = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearMonitorSenseValid.setStatus('current')
pt3080PrecorrectorLinearMonitorSenseBadCount = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearMonitorSenseBadCount.setStatus('current')
pt3080PrecorrectorLinearMonitorAmplitudeRipple = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 26), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearMonitorAmplitudeRipple.setStatus('current')
pt3080PrecorrectorLinearMonitorAmplitudeRippleValid = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearMonitorAmplitudeRippleValid.setStatus('current')
pt3080PrecorrectorLinearMonitorGroupDelay = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 27), Integer32()).setUnits('0.1 ns').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearMonitorGroupDelay.setStatus('current')
pt3080PrecorrectorLinearMonitorGroupDelayValid = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearMonitorGroupDelayValid.setStatus('current')
pt3080PrecorrectorLinearMonitorDiscartedIterations = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearMonitorDiscartedIterations.setStatus('current')
pt3080PrecorrectorLinearMonitorIterations = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearMonitorIterations.setStatus('current')
pt3080PrecorrectorLinearAdaptiveMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 0), ("autorun", 1), ("runtotarget", 2), ("continuous", 3), ("single", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearAdaptiveMode.setStatus('current')
pt3080PrecorrectorLinearAdaptiveAmplitudeRippleTargetLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearAdaptiveAmplitudeRippleTargetLevel.setStatus('current')
pt3080PrecorrectorLinearAdaptiveAmplitudeRippleTargetHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('0.01 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearAdaptiveAmplitudeRippleTargetHysteresis.setStatus('current')
pt3080PrecorrectorLinearAdaptiveAmplitudeRippleEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearAdaptiveAmplitudeRippleEnable.setStatus('current')
pt3080PrecorrectorLinearAdaptiveGroupDelayTargetLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setUnits('0.1 ns').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearAdaptiveGroupDelayTargetLevel.setStatus('current')
pt3080PrecorrectorLinearAdaptiveGroupDelayTargetHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setUnits('0.01 ns').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearAdaptiveGroupDelayTargetHysteresis.setStatus('current')
pt3080PrecorrectorLinearAdaptiveGroupDelayEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearAdaptiveGroupDelayEnable.setStatus('current')
pt3080PrecorrectorLinearAttenuation = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 78), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000, 1000))).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearAttenuation.setStatus('current')
pt3080PrecorrectorNonlinearAdaptive = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 80), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearAdaptive.setStatus('current')
pt3080PrecorrectorNonlinearMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("monitoring", 0), ("static", 1), ("adaptive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearMode.setStatus('current')
pt3080PrecorrectorNonlinearSenseEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearSenseEnable.setStatus('current')
pt3080PrecorrectorNonlinearMonitorStatus = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("not-running", 0), ("monitoring", 1), ("initialising", 2), ("initialising-0", 3), ("initialising-10", 4), ("initialising-20", 5), ("initialising-30", 6), ("initialising-40", 7), ("initialising-50", 8), ("initialising-60", 9), ("initialising-70", 10), ("initialising-80", 11), ("initialising-90", 12), ("auto-applying", 13), ("completed", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearMonitorStatus.setStatus('current')
pt3080PrecorrectorNonlinearMonitorSenseLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 38), Integer32()).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearMonitorSenseLevel.setStatus('current')
pt3080PrecorrectorNonlinearMonitorSenseValid = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearMonitorSenseValid.setStatus('current')
pt3080PrecorrectorNonlinearMonitorSenseBadCount = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearMonitorSenseBadCount.setStatus('current')
pt3080PrecorrectorNonlinearMonitorLowerShoulderLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 28), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearMonitorLowerShoulderLevel.setStatus('current')
pt3080PrecorrectorNonlinearMonitorLowerShoulderValid = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearMonitorLowerShoulderValid.setStatus('current')
pt3080PrecorrectorNonlinearMonitorUpperShoulderLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 29), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearMonitorUpperShoulderLevel.setStatus('current')
pt3080PrecorrectorNonlinearMonitorUpperShoulderValid = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearMonitorUpperShoulderValid.setStatus('current')
pt3080PrecorrectorNonlinearMonitorDiscartedIterations = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearMonitorDiscartedIterations.setStatus('current')
pt3080PrecorrectorNonlinearMonitorIterations = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearMonitorIterations.setStatus('current')
pt3080PrecorrectorNonlinearMonitorMer = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 50), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearMonitorMer.setStatus('current')
pt3080PrecorrectorNonlinearMonitorMerValid = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearMonitorMerValid.setStatus('current')
pt3080PrecorrectorNonlinearMonitorPapr = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 52), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearMonitorPapr.setStatus('current')
pt3080PrecorrectorNonlinearMonitorPaprValid = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearMonitorPaprValid.setStatus('current')
pt3080PrecorrectorNonlinearAttenuation = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 77), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1000, 1000))).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearAttenuation.setStatus('current')
pt3080PrecorrectorNonlinearAdaptiveMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("idle", 0), ("autorun", 1), ("runtotarget", 2), ("continuous", 3), ("single", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearAdaptiveMode.setStatus('current')
pt3080PrecorrectorNonlinearAdaptiveAveraging = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 54), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearAdaptiveAveraging.setStatus('current')
pt3080PrecorrectorNonlinearAdaptiveMaxRfPaprEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearAdaptiveMaxRfPaprEnable.setStatus('current')
pt3080PrecorrectorNonlinearAdaptiveMaxRfPaprLimit = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 180))).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearAdaptiveMaxRfPaprLimit.setStatus('current')
pt3080PrecorrectorNonlinearAdaptiveMerTarget = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 57), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 800))).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearAdaptiveMerTarget.setStatus('current')
pt3080PrecorrectorNonlinearAdaptiveMerTargetHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setUnits('0.01 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearAdaptiveMerTargetHysteresis.setStatus('current')
pt3080PrecorrectorNonlinearAdaptiveMerEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearAdaptiveMerEnable.setStatus('current')
pt3080PrecorrectorNonlinearAdaptiveLowerShoulderTargetLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-800, 0))).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearAdaptiveLowerShoulderTargetLevel.setStatus('current')
pt3080PrecorrectorNonlinearAdaptiveLowerShoulderTargetHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setUnits('0.01 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearAdaptiveLowerShoulderTargetHysteresis.setStatus('current')
pt3080PrecorrectorNonlinearAdaptiveLowerShoulderEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearAdaptiveLowerShoulderEnable.setStatus('current')
pt3080PrecorrectorNonlinearAdaptiveUpperShoulderTargetLevel = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-800, 0))).setUnits('0.1 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearAdaptiveUpperShoulderTargetLevel.setStatus('current')
pt3080PrecorrectorNonlinearAdaptiveUpperShoulderTargetHysteresis = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setUnits('0.01 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearAdaptiveUpperShoulderTargetHysteresis.setStatus('current')
pt3080PrecorrectorNonlinearAdaptiveUpperShoulderEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearAdaptiveUpperShoulderEnable.setStatus('current')
pt3080PrecorrectorPaprClipping = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 60), Integer32().subtype(subtypeSpec=ValueRangeConstraint(200, 1200))).setUnits('0.01 dB').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorPaprClipping.setStatus('current')
pt3080PrecorrectorPaprShaping = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 61), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('1 %').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorPaprShaping.setStatus('current')
pt3080PrecorrectorClipperMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 74), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("monitoring", 0), ("static", 1), ("adaptive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorClipperMode.setStatus('current')
pt3080PrecorrectorClipperAdaptive = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 75), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorClipperAdaptive.setStatus('current')
pt3080PrecorrectorClipperEnable = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 76), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("on", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorClipperEnable.setStatus('current')
pt3080PrecorrectorClipperAdaptiveMode = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("monitoring", 0), ("continuous", 1), ("single", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorClipperAdaptiveMode.setStatus('current')
pt3080PrecorrectorClipperAdaptiveShaping = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 81), Integer32().subtype(subtypeSpec=ValueRangeConstraint(99, 100))).setUnits('1 %').setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorClipperAdaptiveShaping.setStatus('current')
pt3080PrecorrectorClipperMonitorStatus = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("not-running", 0), ("monitoring", 1), ("initialising", 2), ("initialising-0", 3), ("initialising-10", 4), ("initialising-20", 5), ("initialising-30", 6), ("initialising-40", 7), ("initialising-50", 8), ("initialising-60", 9), ("initialising-70", 10), ("initialising-80", 11), ("initialising-90", 12), ("auto-applying", 13), ("completed", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorClipperMonitorStatus.setStatus('current')
pt3080PrecorrectorClipperMonitorShoulderLevelLower = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 65), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorClipperMonitorShoulderLevelLower.setStatus('current')
pt3080PrecorrectorClipperMonitorShoulderLevelLowerValid = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 66), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorClipperMonitorShoulderLevelLowerValid.setStatus('current')
pt3080PrecorrectorClipperMonitorShoulderLevelUpper = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 67), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorClipperMonitorShoulderLevelUpper.setStatus('current')
pt3080PrecorrectorClipperMonitorShoulderLevelUpperValid = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 68), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorClipperMonitorShoulderLevelUpperValid.setStatus('current')
pt3080PrecorrectorClipperMonitorMer = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 69), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorClipperMonitorMer.setStatus('current')
pt3080PrecorrectorClipperMonitorMerValid = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 70), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorClipperMonitorMerValid.setStatus('current')
pt3080PrecorrectorClipperMonitorPapr = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 71), Integer32()).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorClipperMonitorPapr.setStatus('current')
pt3080PrecorrectorClipperMonitorPaprValid = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 72), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorClipperMonitorPaprValid.setStatus('current')
pt3080PrecorrectorClipperMonitorIterations = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 73), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorClipperMonitorIterations.setStatus('current')
pt3080PrecorrectorLastTurnAroundTime = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorLastTurnAroundTime.setStatus('current')
pt3080PrecorrectorSecondsSinceLastUpdate = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorSecondsSinceLastUpdate.setStatus('current')
pt3080PrecorrectorLinCleanrun = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorLinCleanrun.setStatus('current')
pt3080PrecorrectorNlinCleanrun = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: pt3080PrecorrectorNlinCleanrun.setStatus('current')
pt3080PrecorrectorLinearLoadNeutral = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noop", 0), ("load", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearLoadNeutral.setStatus('current')
pt3080PrecorrectorLinearLoadFactory = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noop", 0), ("load", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearLoadFactory.setStatus('current')
pt3080PrecorrectorLinearUpdateFactoryCurve = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noop", 0), ("update", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorLinearUpdateFactoryCurve.setStatus('current')
pt3080PrecorrectorNonlinearLoadNeutral = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noop", 0), ("load", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearLoadNeutral.setStatus('current')
pt3080PrecorrectorNonlinearLoadFactory = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noop", 0), ("load", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearLoadFactory.setStatus('current')
pt3080PrecorrectorNonlinearUpdateFactoryCurve = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 25, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noop", 0), ("update", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080PrecorrectorNonlinearUpdateFactoryCurve.setStatus('current')
pt3080BackplanePolarityHardMute = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 27, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("activelow", 0), ("activehigh", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080BackplanePolarityHardMute.setStatus('current')
pt3080BackplanePolarityRFFail = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 27, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("activelow", 0), ("activehigh", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: pt3080BackplanePolarityRFFail.setStatus('current')
pt3080Notif = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0))
pt3080NotifMessage = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 1), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: pt3080NotifMessage.setStatus('current')
pt3080NotifState = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("off", 0), ("activated", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: pt3080NotifState.setStatus('current')
pt3080NotifLocalTime = MibScalar((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 3), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: pt3080NotifLocalTime.setStatus('current')
pt3080Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 1, 1)).setObjects(("PT3080-MIB", "pt3080SystemGroup"), ("PT3080-MIB", "pt3080InputGroup"), ("PT3080-MIB", "pt3080OutputGroup"), ("PT3080-MIB", "pt3080MonitorGroup"), ("PT3080-MIB", "pt3080TestGroup"), ("PT3080-MIB", "pt3080AlarmGroup"), ("PT3080-MIB", "pt3080PresetGroup"), ("PT3080-MIB", "pt3080EventlogGroup"), ("PT3080-MIB", "pt3080CommsGroup"), ("PT3080-MIB", "pt3080PrecorrectorGroup"), ("PT3080-MIB", "pt3080ModeGroup"), ("PT3080-MIB", "pt3080GpsGroup"), ("PT3080-MIB", "pt3080ChannelFilterGroup"), ("PT3080-MIB", "pt3080TSoIPGroup"), ("PT3080-MIB", "pt3080DemodulatorGroup"), ("PT3080-MIB", "pt3080ReceptionGroup"), ("PT3080-MIB", "pt3080ASIGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080Compliance = pt3080Compliance.setStatus('current')
pt3080Groups = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2))
pt3080SystemGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2, 1)).setObjects(("PT3080-MIB", "pt3080SystemInstrumentFW1Rev"), ("PT3080-MIB", "pt3080SystemInstrumentFW1RevBL"), ("PT3080-MIB", "pt3080SystemInstrumentFW2Rev"), ("PT3080-MIB", "pt3080SystemInstrumentFW2RevBL"), ("PT3080-MIB", "pt3080SystemInstrumentFW3Rev"), ("PT3080-MIB", "pt3080SystemInstrumentFW4Rev"), ("PT3080-MIB", "pt3080SystemInstrumentPCBRev"), ("PT3080-MIB", "pt3080SystemInstrumentCalibrationRev"), ("PT3080-MIB", "pt3080SystemInstrumentCalibrationDate"), ("PT3080-MIB", "pt3080SystemReboot"), ("PT3080-MIB", "pt3080SystemRebootDefaultConfig"), ("PT3080-MIB", "pt3080SystemDateTime"), ("PT3080-MIB", "pt3080SystemImage0Version"), ("PT3080-MIB", "pt3080SystemImage0InstalledDate"), ("PT3080-MIB", "pt3080SystemImage1version"), ("PT3080-MIB", "pt3080SystemImage1InstalledDate"), ("PT3080-MIB", "pt3080SystemScheduledActionRecurrence"), ("PT3080-MIB", "pt3080SystemScheduledActionHour"), ("PT3080-MIB", "pt3080SystemScheduledActionMinute"), ("PT3080-MIB", "pt3080SystemScheduledActionWeekday"), ("PT3080-MIB", "pt3080SystemScheduledActionMonthDay"), ("PT3080-MIB", "pt3080SystemScheduledActionDate"), ("PT3080-MIB", "pt3080SystemScheduledActionRandomDelay"), ("PT3080-MIB", "pt3080SystemScheduledActionAction"), ("PT3080-MIB", "pt3080SystemScheduledActionRepeaterMode"), ("PT3080-MIB", "pt3080SystemScheduledActionPresetNo"), ("PT3080-MIB", "pt3080SystemScheduledActionRebootImage"), ("PT3080-MIB", "pt3080SystemScheduledActionRebootSystemType"), ("PT3080-MIB", "pt3080SystemScheduledActionMute"), ("PT3080-MIB", "pt3080SystemScheduledActionSWUpgradeProtocol"), ("PT3080-MIB", "pt3080SystemScheduledActionSWUpgradeUsername"), ("PT3080-MIB", "pt3080SystemScheduledActionSWUpgradePassword"), ("PT3080-MIB", "pt3080SystemScheduledActionSWUpgradeImageServer"), ("PT3080-MIB", "pt3080SystemScheduledActionSWUpgradeImagePath"), ("PT3080-MIB", "pt3080SystemServiceLED"), ("PT3080-MIB", "pt3080SystemLanguage"), ("PT3080-MIB", "pt3080SystemType"), ("PT3080-MIB", "pt3080SystemModulationStandard"), ("PT3080-MIB", "pt3080SystemCurrentImage"), ("PT3080-MIB", "pt3080SystemInstrumentKU"), ("PT3080-MIB", "pt3080SystemInstrumentType"), ("PT3080-MIB", "pt3080SystemInstrumentOptions"), ("PT3080-MIB", "pt3080SystemDateTimeSync"), ("PT3080-MIB", "pt3080SystemDateTimeSyncActual"), ("PT3080-MIB", "pt3080SystemTimezone"), ("PT3080-MIB", "pt3080SystemInstrumentSWRev"), ("PT3080-MIB", "pt3080SystemInstrumentBootLoaderRev"), ("PT3080-MIB", "pt3080SystemInstrumentKernelRev"), ("PT3080-MIB", "pt3080SystemOperationOnTime"), ("PT3080-MIB", "pt3080SystemOperationOnAirTime"), ("PT3080-MIB", "pt3080SystemOperationNumberOfBoots"), ("PT3080-MIB", "pt3080SystemBackplaneid"), ("PT3080-MIB", "pt3080SystemBackplaneIdRaw"), ("PT3080-MIB", "pt3080SystemBackplaneIdPcb"), ("PT3080-MIB", "pt3080SystemBackplaneIdCableOptions"), ("PT3080-MIB", "pt3080SystemBackplaneIdMAnuf"), ("PT3080-MIB", "pt3080SystemBackplaneCalibrationDate"), ("PT3080-MIB", "pt3080SystemBackplaneCalibrationSw"), ("PT3080-MIB", "pt3080SystemBackplaneIdPartlist"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080SystemGroup = pt3080SystemGroup.setStatus('current')
pt3080ModeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2, 2)).setObjects(("PT3080-MIB", "pt3080ModeListenBroadcast"), ("PT3080-MIB", "pt3080ModeNetwork"), ("PT3080-MIB", "pt3080ModeHierarchy"), ("PT3080-MIB", "pt3080Modeifft"), ("PT3080-MIB", "pt3080ModeCodeRateHighPrio"), ("PT3080-MIB", "pt3080ModeCodeRateLowPrio"), ("PT3080-MIB", "pt3080ModeConstellation"), ("PT3080-MIB", "pt3080ModeGuardInterval"), ("PT3080-MIB", "pt3080ModeCellID"), ("PT3080-MIB", "pt3080ModeEnableCellID"), ("PT3080-MIB", "pt3080ModeDeepInterleaver"), ("PT3080-MIB", "pt3080ModeEnableDVBH"), ("PT3080-MIB", "pt3080ModeMpeFecLowPrio"), ("PT3080-MIB", "pt3080ModeMpeFecHighPrio"), ("PT3080-MIB", "pt3080ModeTimeSlicingLowPrio"), ("PT3080-MIB", "pt3080ModeTimeSlicingHighPrio"), ("PT3080-MIB", "pt3080ModeSfnDelayOffset"), ("PT3080-MIB", "pt3080ModeTxIdent"), ("PT3080-MIB", "pt3080ModeMipControl"), ("PT3080-MIB", "pt3080ModeNetworkDelayHP"), ("PT3080-MIB", "pt3080ModeNetworkDelayMinHP"), ("PT3080-MIB", "pt3080ModeNetworkDelayMaxHP"), ("PT3080-MIB", "pt3080ModeMaxNetworkDelayHP"), ("PT3080-MIB", "pt3080ModeNetworkDelayMarginHP"), ("PT3080-MIB", "pt3080ModeNetworkDelayLP"), ("PT3080-MIB", "pt3080ModeNetworkDelayMinLP"), ("PT3080-MIB", "pt3080ModeNetworkDelayMaxLP"), ("PT3080-MIB", "pt3080ModeMaxNetworkDelayLP"), ("PT3080-MIB", "pt3080ModeNetworkDelayMarginLP"), ("PT3080-MIB", "pt3080ModeNetworkDelayReset"), ("PT3080-MIB", "pt3080ModeDefaultMIPOutputPower"), ("PT3080-MIB", "pt3080ModeDefaultMIPOutputTimeOffset"), ("PT3080-MIB", "pt3080ModeDefaultMIPOutputCellID"), ("PT3080-MIB", "pt3080ModeDefaultMIPOutputFreqOffset"), ("PT3080-MIB", "pt3080ModeMIPMaxSFNDelay"), ("PT3080-MIB", "pt3080ModeMipControlOutputPower"), ("PT3080-MIB", "pt3080ModeMipControlOutputTimeOffset"), ("PT3080-MIB", "pt3080ModeMipControlOutputCellId"), ("PT3080-MIB", "pt3080ModeMipControlOutputFreqOffset"), ("PT3080-MIB", "pt3080ModeMfnKeepNullPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080ModeGroup = pt3080ModeGroup.setStatus('current')
pt3080InputGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2, 3)).setObjects(("PT3080-MIB", "pt3080InputASITSPrimarySource"), ("PT3080-MIB", "pt3080InputASITSSecondarySource"), ("PT3080-MIB", "pt3080InputASIAutoRoutingPolicy"), ("PT3080-MIB", "pt3080InputTSPrimaryMaxPATDelay"), ("PT3080-MIB", "pt3080InputTSPrimaryMaxPATDelayEnable"), ("PT3080-MIB", "pt3080InputTSPrimaryExpectedTSID"), ("PT3080-MIB", "pt3080InputTSPrimaryExpectedTSIDEnable"), ("PT3080-MIB", "pt3080InputTSPrimaryExpectedNWID"), ("PT3080-MIB", "pt3080InputTSPrimaryExpectedNWIDEnable"), ("PT3080-MIB", "pt3080InputTSPrimaryMaxStuffingrate"), ("PT3080-MIB", "pt3080InputTSPrimaryMaxStuffingrateEnable"), ("PT3080-MIB", "pt3080InputTSPrimaryMinDelaymargin"), ("PT3080-MIB", "pt3080InputTSPrimaryMinDelaymarginEnable"), ("PT3080-MIB", "pt3080InputTSPrimaryMaxMissingmip"), ("PT3080-MIB", "pt3080InputTSPrimaryMaxMissingmipEnable"), ("PT3080-MIB", "pt3080InputTSSecondaryMaxPATDelay"), ("PT3080-MIB", "pt3080InputTSSecondaryMaxPATDelayEnable"), ("PT3080-MIB", "pt3080InputTSSecondaryExpectedTSID"), ("PT3080-MIB", "pt3080InputTSSecondaryExpectedTSIDEnable"), ("PT3080-MIB", "pt3080InputTSSecondaryExpectedNWID"), ("PT3080-MIB", "pt3080InputTSSecondaryExpectedNWIDEnable"), ("PT3080-MIB", "pt3080InputTSSecondaryMaxStuffingrate"), ("PT3080-MIB", "pt3080InputTSSecondaryMaxStuffingrateEnable"), ("PT3080-MIB", "pt3080InputTSSecondaryMinDelaymargin"), ("PT3080-MIB", "pt3080InputTSSecondaryMinDelaymarginEnable"), ("PT3080-MIB", "pt3080InputTSSecondaryMaxMissingmip"), ("PT3080-MIB", "pt3080InputTSSecondaryMaxMissingmipEnable"), ("PT3080-MIB", "pt3080InputTSPrimaryMaxStsJitter"), ("PT3080-MIB", "pt3080InputTSSecondaryMaxStsJitter"), ("PT3080-MIB", "pt3080InputTSPrimaryStatus"), ("PT3080-MIB", "pt3080InputTSSecondaryStatus"), ("PT3080-MIB", "pt3080InputTSHp"), ("PT3080-MIB", "pt3080InputTSLp"), ("PT3080-MIB", "pt3080InputEffectiveAutoroutingPolicy"), ("PT3080-MIB", "pt3080InputTSHpBitrate"), ("PT3080-MIB", "pt3080InputTSLpBitrate"), ("PT3080-MIB", "pt3080InputTSHpPacketsBuffered"), ("PT3080-MIB", "pt3080InputTSHpPacketSize"), ("PT3080-MIB", "pt3080InputTSHpStuffingrate"), ("PT3080-MIB", "pt3080InputTSHpTSID"), ("PT3080-MIB", "pt3080InputTSLpPacketsBuffered"), ("PT3080-MIB", "pt3080InputTSLpPacketSize"), ("PT3080-MIB", "pt3080InputTSLpStuffingrate"), ("PT3080-MIB", "pt3080InputTSLpTSID"), ("PT3080-MIB", "pt3080InputTSHpNWID"), ("PT3080-MIB", "pt3080InputTSLpNWID"), ("PT3080-MIB", "pt3080InputTSPrimaryStsJitter"), ("PT3080-MIB", "pt3080InputTSPrimaryStsJitterMax"), ("PT3080-MIB", "pt3080InputTSPrimaryStsJitterMin"), ("PT3080-MIB", "pt3080InputTSPrimaryStsJitterReset"), ("PT3080-MIB", "pt3080InputTSSecondaryStsJitter"), ("PT3080-MIB", "pt3080InputTSSecondaryStsJitterMax"), ("PT3080-MIB", "pt3080InputTSSecondaryStsJitterMin"), ("PT3080-MIB", "pt3080InputTSSecondaryStsJitterReset"), ("PT3080-MIB", "pt3080InputRefDevType"), ("PT3080-MIB", "pt3080InputRefCalDate"), ("PT3080-MIB", "pt3080InputRefCalVer"), ("PT3080-MIB", "pt3080InputRefDirection"), ("PT3080-MIB", "pt3080InputRefSource"), ("PT3080-MIB", "pt3080InputRefStatus"), ("PT3080-MIB", "pt3080InputRef10MhzImpedance"), ("PT3080-MIB", "pt3080InputRef10MhzHoldoverDelay"), ("PT3080-MIB", "pt3080InputRef10MhzHoldoverForever"), ("PT3080-MIB", "pt3080InputRef1PPSImpedance"), ("PT3080-MIB", "pt3080InputRef1PPSHoldoverDelay"), ("PT3080-MIB", "pt3080InputRef1PPSHoldoverForever"), ("PT3080-MIB", "pt3080InputRef1PPSTrigSlope"), ("PT3080-MIB", "pt3080InputRef1PPSTrigLevel"), ("PT3080-MIB", "pt3080InputASIAutoRoutingDelayHp2Lp"), ("PT3080-MIB", "pt3080InputASIAutoRoutingDelayLp2Hp"), ("PT3080-MIB", "pt3080InputASIHoldoverTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080InputGroup = pt3080InputGroup.setStatus('current')
pt3080OutputGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2, 4)).setObjects(("PT3080-MIB", "pt3080OutputIfEnable"), ("PT3080-MIB", "pt3080OutputIfFrequency"), ("PT3080-MIB", "pt3080OutputIfPolarity"), ("PT3080-MIB", "pt3080OutputIfLevel"), ("PT3080-MIB", "pt3080OutputMode"), ("PT3080-MIB", "pt3080OutputEffectiveLevel"), ("PT3080-MIB", "pt3080OutputActualLevel"), ("PT3080-MIB", "pt3080OutputPolarity"), ("PT3080-MIB", "pt3080OutputRfFrequency"), ("PT3080-MIB", "pt3080OutputRfFrequencyOffset"), ("PT3080-MIB", "pt3080OutputRfLevel"), ("PT3080-MIB", "pt3080OutputRfCableMode"), ("PT3080-MIB", "pt3080OutputRfCableConstantLevelOffset"), ("PT3080-MIB", "pt3080OutputRfCableFrequencyLevelOffset0"), ("PT3080-MIB", "pt3080OutputRfCableFrequencyLevelOffset1"), ("PT3080-MIB", "pt3080OutputRfCableFrequencyLevelOffset2"), ("PT3080-MIB", "pt3080OutputRfCableFrequencyLevelOffset3"), ("PT3080-MIB", "pt3080OutputRfCableFrequencyLevelOffset4"), ("PT3080-MIB", "pt3080OutputRfCableFrequencyLevelOffset5"), ("PT3080-MIB", "pt3080OutputRfDetectedActualLevel"), ("PT3080-MIB", "pt3080OutputRfDetectedLowerLevelLimit"), ("PT3080-MIB", "pt3080OutputRfDetectedLowerLevelcontrol"), ("PT3080-MIB", "pt3080OutputRfDetectedHigherLevelLimit"), ("PT3080-MIB", "pt3080OutputRfDetectedHigherLevelcontrol"), ("PT3080-MIB", "pt3080OutputRfAlcControl"), ("PT3080-MIB", "pt3080OutputRfAlcSense"), ("PT3080-MIB", "pt3080OutputRfAlcSetpointPort1"), ("PT3080-MIB", "pt3080OutputRfAlcSetpointPort2"), ("PT3080-MIB", "pt3080OutputRfAlcStatus"), ("PT3080-MIB", "pt3080OutputRfAlcStatusInformation"), ("PT3080-MIB", "pt3080OutputBandwidth"), ("PT3080-MIB", "pt3080OutputChannel"), ("PT3080-MIB", "pt3080OutputSynchronized"), ("PT3080-MIB", "pt3080OutputMute"), ("PT3080-MIB", "pt3080OutputPowerLevel"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080OutputGroup = pt3080OutputGroup.setStatus('current')
pt3080GpsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2, 7)).setObjects(("PT3080-MIB", "pt3080GpsBias"), ("PT3080-MIB", "pt3080GpsbiasVoltage"), ("PT3080-MIB", "pt3080GpsCableDelay"), ("PT3080-MIB", "pt3080GpsHoldoverForever"), ("PT3080-MIB", "pt3080GpsHoldoverTime"), ("PT3080-MIB", "pt3080GpsSatelliteSystemGPS"), ("PT3080-MIB", "pt3080GpsSatelliteSystemGLONASS"), ("PT3080-MIB", "pt3080GpsSatelliteSystemGALILEO"), ("PT3080-MIB", "pt3080GpsSatelliteSystemCOMPASS"), ("PT3080-MIB", "pt3080GpsVersion"), ("PT3080-MIB", "pt3080Gps1PPSStatus"), ("PT3080-MIB", "pt3080GpsState"), ("PT3080-MIB", "pt3080GpsVisibleSatellitesSnr"), ("PT3080-MIB", "pt3080GpsVisibleSatellites"), ("PT3080-MIB", "pt3080GpsTrackedSatellites"), ("PT3080-MIB", "pt3080GpsLongtitude"), ("PT3080-MIB", "pt3080GpsLatitude"), ("PT3080-MIB", "pt3080GpsAltitude"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080GpsGroup = pt3080GpsGroup.setStatus('current')
pt3080ChannelFilterGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2, 8)).setObjects(("PT3080-MIB", "pt3080ChannelFiltersSelect"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080ChannelFilterGroup = pt3080ChannelFilterGroup.setStatus('current')
pt3080TSoIPGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2, 10)).setObjects(("PT3080-MIB", "pt3080TSoIPRx1ReceiverEnable"), ("PT3080-MIB", "pt3080TSoIPRx2ReceiverEnable"), ("PT3080-MIB", "pt3080TSoIPRx1LanSelect"), ("PT3080-MIB", "pt3080TSoIPRx2LanSelect"), ("PT3080-MIB", "pt3080TSoIPRx1Multicast"), ("PT3080-MIB", "pt3080TSoIPRx2Multicast"), ("PT3080-MIB", "pt3080TSoIPRx1Protocol"), ("PT3080-MIB", "pt3080TSoIPRx2Protocol"), ("PT3080-MIB", "pt3080TSoIPRx1Portnumber"), ("PT3080-MIB", "pt3080TSoIPRx2Portnumber"), ("PT3080-MIB", "pt3080TSoIPRx1PacketErrorRatioLimit"), ("PT3080-MIB", "pt3080TSoIPRx2PacketErrorRatioLimit"), ("PT3080-MIB", "pt3080TSoIPRx1MinumimLatency"), ("PT3080-MIB", "pt3080TSoIPRx2MinumimLatency"), ("PT3080-MIB", "pt3080TSoIPRx1SyncTimeout"), ("PT3080-MIB", "pt3080TSoIPRx2SyncTimeout"), ("PT3080-MIB", "pt3080TSoIPRx1Status"), ("PT3080-MIB", "pt3080TSoIPRx2Status"), ("PT3080-MIB", "pt3080TSoIPRx1CurrentIPAddress"), ("PT3080-MIB", "pt3080TSoIPRx2CurrentIPAddress"), ("PT3080-MIB", "pt3080TSoIPRx1IpBitrate"), ("PT3080-MIB", "pt3080TSoIPRx2IpBitrate"), ("PT3080-MIB", "pt3080TSoIPRx1PacketErrorRatio"), ("PT3080-MIB", "pt3080TSoIPRx2PacketErrorRatio"), ("PT3080-MIB", "pt3080TSoIPRx1SequenceErrors"), ("PT3080-MIB", "pt3080TSoIPRx2SequenceErrors"), ("PT3080-MIB", "pt3080TSoIPRx1LostIPFrames"), ("PT3080-MIB", "pt3080TSoIPRx2LostIPFrames"), ("PT3080-MIB", "pt3080TSoIPRx1CorrectedIPFrames"), ("PT3080-MIB", "pt3080TSoIPRx2CorrectedIPFrames"), ("PT3080-MIB", "pt3080TSoIPRx1OverrunIPFrames"), ("PT3080-MIB", "pt3080TSoIPRx2OverrunIPFrames"), ("PT3080-MIB", "pt3080TSoIPRx1PacketsPerFrame"), ("PT3080-MIB", "pt3080TSoIPRx2PacketsPerFrame"), ("PT3080-MIB", "pt3080TSoIPRx1TSPacketSize"), ("PT3080-MIB", "pt3080TSoIPRx2TSPacketSize"), ("PT3080-MIB", "pt3080TSoIPRx1FecColumn"), ("PT3080-MIB", "pt3080TSoIPRx2FecColumn"), ("PT3080-MIB", "pt3080TSoIPRx1FecRow"), ("PT3080-MIB", "pt3080TSoIPRx2FecRow"), ("PT3080-MIB", "pt3080TSoIPRx1QueueSize"), ("PT3080-MIB", "pt3080TSoIPRx2QueueSize"), ("PT3080-MIB", "pt3080TSoIPRx1CurrentLatency"), ("PT3080-MIB", "pt3080TSoIPRx2CurrentLatency"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080TSoIPGroup = pt3080TSoIPGroup.setStatus('current')
pt3080MonitorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2, 12)).setObjects(("PT3080-MIB", "pt3080MonitorSource"), ("PT3080-MIB", "pt3080MonitorTSoIPEnable"), ("PT3080-MIB", "pt3080MonitorTSoIPSource"), ("PT3080-MIB", "pt3080MonitorTSoIPMulticastLanSelect"), ("PT3080-MIB", "pt3080MonitorTSoIPDestIPAddress"), ("PT3080-MIB", "pt3080MonitorTSoIPDestPort"), ("PT3080-MIB", "pt3080MonitorTSoIPProtocol"), ("PT3080-MIB", "pt3080MonitorTSoIPEnableFec"), ("PT3080-MIB", "pt3080MonitorTSoIPFecColumn"), ("PT3080-MIB", "pt3080MonitorTSoIPFecRow"), ("PT3080-MIB", "pt3080MonitorTSoIPFecSkew"), ("PT3080-MIB", "pt3080MonitorTSoIPKeepNullPackets"), ("PT3080-MIB", "pt3080MonitorTSoIPPacketsPerFrame"), ("PT3080-MIB", "pt3080MonitorTSoIPUDPChecksum"), ("PT3080-MIB", "pt3080MonitorTSoIPDSCP"), ("PT3080-MIB", "pt3080MonitorTSoIPTTL"), ("PT3080-MIB", "pt3080MonitorTSoIPGenerateError"), ("PT3080-MIB", "pt3080MonitorTSoIPIpBitrate"), ("PT3080-MIB", "pt3080MonitorTSoIPTSSize"), ("PT3080-MIB", "pt3080MonitorTSoIPLostIPFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080MonitorGroup = pt3080MonitorGroup.setStatus('current')
pt3080TestGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2, 13)).setObjects(("PT3080-MIB", "pt3080TestEnable"), ("PT3080-MIB", "pt3080TestEnableReconnect"), ("PT3080-MIB", "pt3080TestScarrierLevel"), ("PT3080-MIB", "pt3080TestscarrierFrequencyOffset"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080TestGroup = pt3080TestGroup.setStatus('current')
pt3080AlarmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2, 14)).setObjects(("PT3080-MIB", "pt3080GroupAlarmDescription"), ("PT3080-MIB", "pt3080GroupAlarmState"), ("PT3080-MIB", "pt3080GroupAlarmActionEventlog"), ("PT3080-MIB", "pt3080GroupAlarmActionRelay1"), ("PT3080-MIB", "pt3080GroupAlarmActionRelay2"), ("PT3080-MIB", "pt3080GroupAlarmActionTrap"), ("PT3080-MIB", "pt3080GroupAlarmActionEmail"), ("PT3080-MIB", "pt3080GroupAlarmActionAlarmLED"), ("PT3080-MIB", "pt3080GroupAlarmActionForceMode"), ("PT3080-MIB", "pt3080ASITSPrimaryAlarmDescription"), ("PT3080-MIB", "pt3080ASITSPrimaryAlarmState"), ("PT3080-MIB", "pt3080ASITSPrimaryAlarmActionEventlog"), ("PT3080-MIB", "pt3080ASITSPrimaryAlarmActionRelay1"), ("PT3080-MIB", "pt3080ASITSPrimaryAlarmActionRelay2"), ("PT3080-MIB", "pt3080ASITSPrimaryAlarmActionTrap"), ("PT3080-MIB", "pt3080ASITSPrimaryAlarmActionEmail"), ("PT3080-MIB", "pt3080ASITSPrimaryAlarmActionAlarmLED"), ("PT3080-MIB", "pt3080ASITSPrimaryAlarmActionForceMode"), ("PT3080-MIB", "pt3080ASITSSecondaryAlarmDescription"), ("PT3080-MIB", "pt3080ASITSSecondaryAlarmState"), ("PT3080-MIB", "pt3080ASITSSecondaryAlarmActionEventlog"), ("PT3080-MIB", "pt3080ASITSSecondaryAlarmActionRelay1"), ("PT3080-MIB", "pt3080ASITSSecondaryAlarmActionRelay2"), ("PT3080-MIB", "pt3080ASITSSecondaryAlarmActionTrap"), ("PT3080-MIB", "pt3080ASITSSecondaryAlarmActionEmail"), ("PT3080-MIB", "pt3080ASITSSecondaryAlarmActionAlarmLED"), ("PT3080-MIB", "pt3080ASITSSecondaryAlarmActionForceMode"), ("PT3080-MIB", "pt3080SFNAlarmDescription"), ("PT3080-MIB", "pt3080SFNAlarmState"), ("PT3080-MIB", "pt3080SFNAlarmActionEventlog"), ("PT3080-MIB", "pt3080SFNAlarmActionRelay1"), ("PT3080-MIB", "pt3080SFNAlarmActionRelay2"), ("PT3080-MIB", "pt3080SFNAlarmActionTrap"), ("PT3080-MIB", "pt3080SFNAlarmActionEmail"), ("PT3080-MIB", "pt3080SFNAlarmActionAlarmLED"), ("PT3080-MIB", "pt3080SFNAlarmActionForceMode"), ("PT3080-MIB", "pt3080TSoIPAlarmDescription"), ("PT3080-MIB", "pt3080TSoIPAlarmState"), ("PT3080-MIB", "pt3080TSoIPAlarmActionEventlog"), ("PT3080-MIB", "pt3080TSoIPAlarmActionRelay1"), ("PT3080-MIB", "pt3080TSoIPAlarmActionRelay2"), ("PT3080-MIB", "pt3080TSoIPAlarmActionTrap"), ("PT3080-MIB", "pt3080TSoIPAlarmActionEmail"), ("PT3080-MIB", "pt3080TSoIPAlarmActionAlarmLED"), ("PT3080-MIB", "pt3080TSoIPAlarmActionForceMode"), ("PT3080-MIB", "pt3080DemodulatorAlarmDescription"), ("PT3080-MIB", "pt3080DemodulatorAlarmState"), ("PT3080-MIB", "pt3080DemodulatorAlarmActionEventlog"), ("PT3080-MIB", "pt3080DemodulatorAlarmActionRelay1"), ("PT3080-MIB", "pt3080DemodulatorAlarmActionRelay2"), ("PT3080-MIB", "pt3080DemodulatorAlarmActionTrap"), ("PT3080-MIB", "pt3080DemodulatorAlarmActionEmail"), ("PT3080-MIB", "pt3080DemodulatorAlarmActionAlarmLED"), ("PT3080-MIB", "pt3080DemodulatorAlarmActionForceMode"), ("PT3080-MIB", "pt3080ReferenceAlarmDescription"), ("PT3080-MIB", "pt3080ReferenceAlarmState"), ("PT3080-MIB", "pt3080ReferenceAlarmActionEventlog"), ("PT3080-MIB", "pt3080ReferenceAlarmActionRelay1"), ("PT3080-MIB", "pt3080ReferenceAlarmActionRelay2"), ("PT3080-MIB", "pt3080ReferenceAlarmActionTrap"), ("PT3080-MIB", "pt3080ReferenceAlarmActionEmail"), ("PT3080-MIB", "pt3080ReferenceAlarmActionAlarmLED"), ("PT3080-MIB", "pt3080ReferenceAlarmActionForceMode"), ("PT3080-MIB", "pt3080RFAlarmDescription"), ("PT3080-MIB", "pt3080RFAlarmState"), ("PT3080-MIB", "pt3080RFAlarmActionEventlog"), ("PT3080-MIB", "pt3080RFAlarmActionRelay1"), ("PT3080-MIB", "pt3080RFAlarmActionRelay2"), ("PT3080-MIB", "pt3080RFAlarmActionTrap"), ("PT3080-MIB", "pt3080RFAlarmActionEmail"), ("PT3080-MIB", "pt3080RFAlarmActionAlarmLED"), ("PT3080-MIB", "pt3080RFAlarmActionForceMode"), ("PT3080-MIB", "pt3080GPSAlarmDescription"), ("PT3080-MIB", "pt3080GPSAlarmState"), ("PT3080-MIB", "pt3080GPSAlarmActionEventlog"), ("PT3080-MIB", "pt3080GPSAlarmActionRelay1"), ("PT3080-MIB", "pt3080GPSAlarmActionRelay2"), ("PT3080-MIB", "pt3080GPSAlarmActionTrap"), ("PT3080-MIB", "pt3080GPSAlarmActionEmail"), ("PT3080-MIB", "pt3080GPSAlarmActionAlarmLED"), ("PT3080-MIB", "pt3080GPSAlarmActionForceMode"), ("PT3080-MIB", "pt3080ExternalAlarmDescription"), ("PT3080-MIB", "pt3080ExternalAlarmState"), ("PT3080-MIB", "pt3080ExternalAlarmActionEventlog"), ("PT3080-MIB", "pt3080ExternalAlarmActionRelay1"), ("PT3080-MIB", "pt3080ExternalAlarmActionRelay2"), ("PT3080-MIB", "pt3080ExternalAlarmActionTrap"), ("PT3080-MIB", "pt3080ExternalAlarmActionEmail"), ("PT3080-MIB", "pt3080ExternalAlarmActionAlarmLED"), ("PT3080-MIB", "pt3080ExternalAlarmActionForceMode"), ("PT3080-MIB", "pt3080HWMonitorAlarmDescription"), ("PT3080-MIB", "pt3080HWMonitorAlarmState"), ("PT3080-MIB", "pt3080HWMonitorAlarmActionEventlog"), ("PT3080-MIB", "pt3080HWMonitorAlarmActionRelay1"), ("PT3080-MIB", "pt3080HWMonitorAlarmActionRelay2"), ("PT3080-MIB", "pt3080HWMonitorAlarmActionTrap"), ("PT3080-MIB", "pt3080HWMonitorAlarmActionEmail"), ("PT3080-MIB", "pt3080HWMonitorAlarmActionAlarmLED"), ("PT3080-MIB", "pt3080HWMonitorAlarmActionForceMode"), ("PT3080-MIB", "pt3080CommsAlarmDescription"), ("PT3080-MIB", "pt3080CommsAlarmState"), ("PT3080-MIB", "pt3080CommsAlarmActionEventlog"), ("PT3080-MIB", "pt3080CommsAlarmActionRelay1"), ("PT3080-MIB", "pt3080CommsAlarmActionRelay2"), ("PT3080-MIB", "pt3080CommsAlarmActionTrap"), ("PT3080-MIB", "pt3080CommsAlarmActionEmail"), ("PT3080-MIB", "pt3080CommsAlarmActionAlarmLED"), ("PT3080-MIB", "pt3080CommsAlarmActionForceMode"), ("PT3080-MIB", "pt3080InternalAlarmDescription"), ("PT3080-MIB", "pt3080InternalAlarmState"), ("PT3080-MIB", "pt3080InternalAlarmActionEventlog"), ("PT3080-MIB", "pt3080InternalAlarmActionRelay1"), ("PT3080-MIB", "pt3080InternalAlarmActionRelay2"), ("PT3080-MIB", "pt3080InternalAlarmActionTrap"), ("PT3080-MIB", "pt3080InternalAlarmActionEmail"), ("PT3080-MIB", "pt3080InternalAlarmActionAlarmLED"), ("PT3080-MIB", "pt3080InternalAlarmActionForceMode"), ("PT3080-MIB", "pt3080ASIAlarmDescription"), ("PT3080-MIB", "pt3080ASIAlarmState"), ("PT3080-MIB", "pt3080ASIAlarmActionEventlog"), ("PT3080-MIB", "pt3080ASIAlarmActionRelay1"), ("PT3080-MIB", "pt3080ASIAlarmActionRelay2"), ("PT3080-MIB", "pt3080ASIAlarmActionTrap"), ("PT3080-MIB", "pt3080ASIAlarmActionEmail"), ("PT3080-MIB", "pt3080ASIAlarmActionAlarmLED"), ("PT3080-MIB", "pt3080ASIAlarmActionForceMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080AlarmGroup = pt3080AlarmGroup.setStatus('current')
pt3080PresetGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2, 15)).setObjects(("PT3080-MIB", "pt3080PresetName"), ("PT3080-MIB", "pt3080PresetRecall"), ("PT3080-MIB", "pt3080PresetStore"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080PresetGroup = pt3080PresetGroup.setStatus('current')
pt3080EventlogGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2, 16)).setObjects(("PT3080-MIB", "pt3080EventlogID"), ("PT3080-MIB", "pt3080EventlogTimestamp"), ("PT3080-MIB", "pt3080EventlogText"), ("PT3080-MIB", "pt3080EventlogClear"), ("PT3080-MIB", "pt3080EventlogEnable"), ("PT3080-MIB", "pt3080EventlogMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080EventlogGroup = pt3080EventlogGroup.setStatus('current')
pt3080CommsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2, 17)).setObjects(("PT3080-MIB", "pt3080CommsAccessPasswordObserver"), ("PT3080-MIB", "pt3080CommsAccessPasswordOperator"), ("PT3080-MIB", "pt3080CommsAccessPasswordAdministrator"), ("PT3080-MIB", "pt3080CommsStaticRouteType"), ("PT3080-MIB", "pt3080CommsStaticRoutePrefix"), ("PT3080-MIB", "pt3080CommsStaticRoutePrefixSize"), ("PT3080-MIB", "pt3080CommsStaticRouteTarget"), ("PT3080-MIB", "pt3080CommsStaticRoutePhysicalInterface"), ("PT3080-MIB", "pt3080CommsAlarmEmailReceiver"), ("PT3080-MIB", "pt3080CommsSeparatedSwitchPorts"), ("PT3080-MIB", "pt3080CommsBroadcastStormProtection"), ("PT3080-MIB", "pt3080CommsLocalPhysicalInterface"), ("PT3080-MIB", "pt3080CommsLocalDhcpMode"), ("PT3080-MIB", "pt3080CommsLocalStaticIpAddr"), ("PT3080-MIB", "pt3080CommsLocalStaticNetmask"), ("PT3080-MIB", "pt3080CommsLocalIpMulticastAddr"), ("PT3080-MIB", "pt3080CommsLocalIpMulticastSourceFilterMode"), ("PT3080-MIB", "pt3080CommsLocalIpMulticastSourceFilterAddress1"), ("PT3080-MIB", "pt3080CommsLocalIpMulticastSourceFilterAddress2"), ("PT3080-MIB", "pt3080CommsLocalIpMulticastSourceFilterAddress3"), ("PT3080-MIB", "pt3080CommsLocalIpMulticastSourceFilterAddress4"), ("PT3080-MIB", "pt3080CommsLocalIpMulticastSourceFilterAddress5"), ("PT3080-MIB", "pt3080CommsLocalIpMulticastSourceFilterAddress6"), ("PT3080-MIB", "pt3080CommsLocalVlanEnable"), ("PT3080-MIB", "pt3080CommsLocalVlanId"), ("PT3080-MIB", "pt3080CommsLocalServiceSNMP"), ("PT3080-MIB", "pt3080CommsLocalServiceSCPI"), ("PT3080-MIB", "pt3080CommsLocalServiceTSoIP"), ("PT3080-MIB", "pt3080CommsLocalServiceRIP"), ("PT3080-MIB", "pt3080CommsLocalCurrentIpAddr"), ("PT3080-MIB", "pt3080CommsLocalCurrentNetmask"), ("PT3080-MIB", "pt3080CommsRemoteEnable"), ("PT3080-MIB", "pt3080CommsRemotePhysicalInterface"), ("PT3080-MIB", "pt3080CommsRemoteDhcpMode"), ("PT3080-MIB", "pt3080CommsRemoteStaticIpAddr"), ("PT3080-MIB", "pt3080CommsRemoteStaticNetmask"), ("PT3080-MIB", "pt3080CommsRemoteIpMulticastAddr"), ("PT3080-MIB", "pt3080CommsRemoteIpMulticastSourceFilterMode"), ("PT3080-MIB", "pt3080CommsRemoteIpMulticastSourceFilterAddress1"), ("PT3080-MIB", "pt3080CommsRemoteIpMulticastSourceFilterAddress2"), ("PT3080-MIB", "pt3080CommsRemoteIpMulticastSourceFilterAddress3"), ("PT3080-MIB", "pt3080CommsRemoteIpMulticastSourceFilterAddress4"), ("PT3080-MIB", "pt3080CommsRemoteIpMulticastSourceFilterAddress5"), ("PT3080-MIB", "pt3080CommsRemoteIpMulticastSourceFilterAddress6"), ("PT3080-MIB", "pt3080CommsRemoteVlanEnable"), ("PT3080-MIB", "pt3080CommsRemoteVlanId"), ("PT3080-MIB", "pt3080CommsRemoteServiceSNMP"), ("PT3080-MIB", "pt3080CommsRemoteServiceSCPI"), ("PT3080-MIB", "pt3080CommsRemoteServiceTSoIP"), ("PT3080-MIB", "pt3080CommsRemoteServiceWeb"), ("PT3080-MIB", "pt3080CommsRemoteServiceRIP"), ("PT3080-MIB", "pt3080CommsRemoteCurrentIpAddr"), ("PT3080-MIB", "pt3080CommsRemoteCurrentNetmask"), ("PT3080-MIB", "pt3080CommsGbeAdminEnable"), ("PT3080-MIB", "pt3080CommsGbeAdminPhysicalInterface"), ("PT3080-MIB", "pt3080CommsGbeAdminDhcpMode"), ("PT3080-MIB", "pt3080CommsGbeAdminStaticIpAddr"), ("PT3080-MIB", "pt3080CommsGbeAdminStaticNetmask"), ("PT3080-MIB", "pt3080CommsGbeAdminIpMulticastAddr"), ("PT3080-MIB", "pt3080CommsGbeAdminIpMulticastSourceFilterMode"), ("PT3080-MIB", "pt3080CommsGbeAdminIpMulticastSourceFilterAddress1"), ("PT3080-MIB", "pt3080CommsGbeAdminIpMulticastSourceFilterAddress2"), ("PT3080-MIB", "pt3080CommsGbeAdminIpMulticastSourceFilterAddress3"), ("PT3080-MIB", "pt3080CommsGbeAdminIpMulticastSourceFilterAddress4"), ("PT3080-MIB", "pt3080CommsGbeAdminIpMulticastSourceFilterAddress5"), ("PT3080-MIB", "pt3080CommsGbeAdminIpMulticastSourceFilterAddress6"), ("PT3080-MIB", "pt3080CommsGbeAdminVlanEnable"), ("PT3080-MIB", "pt3080CommsGbeAdminVlanId"), ("PT3080-MIB", "pt3080CommsGbeAdminServiceSNMP"), ("PT3080-MIB", "pt3080CommsGbeAdminServiceSCPI"), ("PT3080-MIB", "pt3080CommsGbeAdminServiceTSoIP"), ("PT3080-MIB", "pt3080CommsGbeAdminServiceWeb"), ("PT3080-MIB", "pt3080CommsGbeAdminServiceRIP"), ("PT3080-MIB", "pt3080CommsGbeAdminCurrentIpAddr"), ("PT3080-MIB", "pt3080CommsGbeAdminCurrentNetmask"), ("PT3080-MIB", "pt3080CommsBackupEnable"), ("PT3080-MIB", "pt3080CommsBackupPhysicalInterface"), ("PT3080-MIB", "pt3080CommsBackupDhcpMode"), ("PT3080-MIB", "pt3080CommsBackupStaticIpAddr"), ("PT3080-MIB", "pt3080CommsBackupStaticNetmask"), ("PT3080-MIB", "pt3080CommsBackupIpMulticastAddr"), ("PT3080-MIB", "pt3080CommsBackupIpMulticastSourceFilterMode"), ("PT3080-MIB", "pt3080CommsBackupIpMulticastSourceFilterAddress1"), ("PT3080-MIB", "pt3080CommsBackupIpMulticastSourceFilterAddress2"), ("PT3080-MIB", "pt3080CommsBackupIpMulticastSourceFilterAddress3"), ("PT3080-MIB", "pt3080CommsBackupIpMulticastSourceFilterAddress4"), ("PT3080-MIB", "pt3080CommsBackupIpMulticastSourceFilterAddress5"), ("PT3080-MIB", "pt3080CommsBackupIpMulticastSourceFilterAddress6"), ("PT3080-MIB", "pt3080CommsBackupVlanEnable"), ("PT3080-MIB", "pt3080CommsBackupVlanId"), ("PT3080-MIB", "pt3080CommsBackupServiceSNMP"), ("PT3080-MIB", "pt3080CommsBackupServiceSCPI"), ("PT3080-MIB", "pt3080CommsBackupServiceTSoIP"), ("PT3080-MIB", "pt3080CommsBackupServiceWeb"), ("PT3080-MIB", "pt3080CommsBackupServiceRIP"), ("PT3080-MIB", "pt3080CommsBackupCurrentIpAddr"), ("PT3080-MIB", "pt3080CommsBackupCurrentNetmask"), ("PT3080-MIB", "pt3080CommsPortEnable"), ("PT3080-MIB", "pt3080CommsPortPhysicalInterface"), ("PT3080-MIB", "pt3080CommsPortDhcpMode"), ("PT3080-MIB", "pt3080CommsPortStaticIpAddr"), ("PT3080-MIB", "pt3080CommsPortStaticNetmask"), ("PT3080-MIB", "pt3080CommsPortIpMulticastAddr"), ("PT3080-MIB", "pt3080CommsPortIpMulticastSourceFilterMode"), ("PT3080-MIB", "pt3080CommsPortIpMulticastSourceFilterAddress1"), ("PT3080-MIB", "pt3080CommsPortIpMulticastSourceFilterAddress2"), ("PT3080-MIB", "pt3080CommsPortIpMulticastSourceFilterAddress3"), ("PT3080-MIB", "pt3080CommsPortIpMulticastSourceFilterAddress4"), ("PT3080-MIB", "pt3080CommsPortIpMulticastSourceFilterAddress5"), ("PT3080-MIB", "pt3080CommsPortIpMulticastSourceFilterAddress6"), ("PT3080-MIB", "pt3080CommsPortVlanEnable"), ("PT3080-MIB", "pt3080CommsPortVlanId"), ("PT3080-MIB", "pt3080CommsPortServiceSNMP"), ("PT3080-MIB", "pt3080CommsPortServiceSCPI"), ("PT3080-MIB", "pt3080CommsPortServiceTSoIP"), ("PT3080-MIB", "pt3080CommsPortServiceWeb"), ("PT3080-MIB", "pt3080CommsPortServiceRIP"), ("PT3080-MIB", "pt3080CommsPortCurrentIpAddr"), ("PT3080-MIB", "pt3080CommsPortCurrentNetmask"), ("PT3080-MIB", "pt3080CommsSNMPServicePort"), ("PT3080-MIB", "pt3080CommsSNMPReadOnlyCommunity"), ("PT3080-MIB", "pt3080CommsSNMPReadWriteCommunity"), ("PT3080-MIB", "pt3080CommsSNMPTrapCommunity"), ("PT3080-MIB", "pt3080CommsSNMPTrapDestination"), ("PT3080-MIB", "pt3080CommsSNMPTrapDestination2"), ("PT3080-MIB", "pt3080CommsSNMPTrapDestination3"), ("PT3080-MIB", "pt3080CommsSNMPTrapDestination4"), ("PT3080-MIB", "pt3080CommsSNMPTrapDestination5"), ("PT3080-MIB", "pt3080CommsSNMPTrapDestinationPort"), ("PT3080-MIB", "pt3080CommsSNMPTrapDestinationPort2"), ("PT3080-MIB", "pt3080CommsSNMPTrapDestinationPort3"), ("PT3080-MIB", "pt3080CommsSNMPTrapDestinationPort4"), ("PT3080-MIB", "pt3080CommsSNMPTrapDestinationPort5"), ("PT3080-MIB", "pt3080CommsStaticGateway"), ("PT3080-MIB", "pt3080CommsCurrentGateway"), ("PT3080-MIB", "pt3080CommsStaticHostname"), ("PT3080-MIB", "pt3080CommsCurrentHostname"), ("PT3080-MIB", "pt3080CommsStaticDNSDomain"), ("PT3080-MIB", "pt3080CommsCurrentDNSDomain"), ("PT3080-MIB", "pt3080CommsStaticDNS1ServerAddress"), ("PT3080-MIB", "pt3080CommsStaticDNS2ServerAddress"), ("PT3080-MIB", "pt3080CommsStaticDNS3ServerAddress"), ("PT3080-MIB", "pt3080CommsCurrentDNS1ServerAddress"), ("PT3080-MIB", "pt3080CommsCurrentDNS2ServerAddress"), ("PT3080-MIB", "pt3080CommsCurrentDNS3ServerAddress"), ("PT3080-MIB", "pt3080CommsStaticNtpServerAddress"), ("PT3080-MIB", "pt3080CommsCurrentNtpServerAddress"), ("PT3080-MIB", "pt3080CommsEmailServerAddress"), ("PT3080-MIB", "pt3080CommsWebServicePort"), ("PT3080-MIB", "pt3080CommsSCPIServicePort"), ("PT3080-MIB", "pt3080CommsSCPIServerBaudrate"), ("PT3080-MIB", "pt3080CommsSCPIUartInterface"), ("PT3080-MIB", "pt3080CommsRipPort"), ("PT3080-MIB", "pt3080CommsIGMPVersion"), ("PT3080-MIB", "pt3080CommsIGMPQueryRobustnessCount"), ("PT3080-MIB", "pt3080CommsIGMPv3UnsolicitedReportInterval"), ("PT3080-MIB", "pt3080CommsIGMPv2UnsolicitedReportInterval"), ("PT3080-MIB", "pt3080CommsAccessAllowed"), ("PT3080-MIB", "pt3080CommsAccessAllowedTimeout"), ("PT3080-MIB", "pt3080CommsAccessAllowedTimeLeft"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080CommsGroup = pt3080CommsGroup.setStatus('current')
pt3080DemodulatorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2, 24)).setObjects(("PT3080-MIB", "pt3080DemodulatorFollowMode"), ("PT3080-MIB", "pt3080Demodulator1Available"), ("PT3080-MIB", "pt3080Demodulator2Available"), ("PT3080-MIB", "pt3080Demodulator1FWVersion"), ("PT3080-MIB", "pt3080Demodulator2FWVersion"), ("PT3080-MIB", "pt3080Demodulator1OutputTS"), ("PT3080-MIB", "pt3080Demodulator2OutputTS"), ("PT3080-MIB", "pt3080Demodulator1MerLimit"), ("PT3080-MIB", "pt3080Demodulator2MerLimit"), ("PT3080-MIB", "pt3080Demodulator1PreVirterbiErrorRateLimit"), ("PT3080-MIB", "pt3080Demodulator2PreVirterbiErrorRateLimit"), ("PT3080-MIB", "pt3080Demodulator1PostVirterbiErrorRateLimit"), ("PT3080-MIB", "pt3080Demodulator2PostVirterbiErrorRateLimit"), ("PT3080-MIB", "pt3080Demodulator1FelStatus"), ("PT3080-MIB", "pt3080Demodulator2FelStatus"), ("PT3080-MIB", "pt3080Demodulator1UncorrectedPackets"), ("PT3080-MIB", "pt3080Demodulator2UncorrectedPackets"), ("PT3080-MIB", "pt3080Demodulator1Mer"), ("PT3080-MIB", "pt3080Demodulator2Mer"), ("PT3080-MIB", "pt3080Demodulator1PreVirterbiErrorRate"), ("PT3080-MIB", "pt3080Demodulator2PreVirterbiErrorRate"), ("PT3080-MIB", "pt3080Demodulator1PostVirterbiErrorRate"), ("PT3080-MIB", "pt3080Demodulator2PostVirterbiErrorRate"), ("PT3080-MIB", "pt3080Demodulator1ActualGuardInterval"), ("PT3080-MIB", "pt3080Demodulator2ActualGuardInterval"), ("PT3080-MIB", "pt3080Demodulator1Actualifft"), ("PT3080-MIB", "pt3080Demodulator2Actualifft"), ("PT3080-MIB", "pt3080Demodulator1ActualConstellation"), ("PT3080-MIB", "pt3080Demodulator2ActualConstellation"), ("PT3080-MIB", "pt3080Demodulator1ActualHierarchy"), ("PT3080-MIB", "pt3080Demodulator2ActualHierarchy"), ("PT3080-MIB", "pt3080Demodulator1ActualCodeRateHighPrio"), ("PT3080-MIB", "pt3080Demodulator2ActualCodeRateHighPrio"), ("PT3080-MIB", "pt3080Demodulator1ActualCodeRateLowPrio"), ("PT3080-MIB", "pt3080Demodulator2ActualCodeRateLowPrio"), ("PT3080-MIB", "pt3080Demodulator1ActualDeepInterleaver"), ("PT3080-MIB", "pt3080Demodulator2ActualDeepInterleaver"), ("PT3080-MIB", "pt3080Demodulator1ActualMpeFecHighPrio"), ("PT3080-MIB", "pt3080Demodulator2ActualMpeFecHighPrio"), ("PT3080-MIB", "pt3080Demodulator1ActualMpeFecLowPrio"), ("PT3080-MIB", "pt3080Demodulator2ActualMpeFecLowPrio"), ("PT3080-MIB", "pt3080Demodulator1ActualTimeSlicingHighPrio"), ("PT3080-MIB", "pt3080Demodulator2ActualTimeSlicingHighPrio"), ("PT3080-MIB", "pt3080Demodulator1ActualTimeSlicingLowPrio"), ("PT3080-MIB", "pt3080Demodulator2ActualTimeSlicingLowPrio"), ("PT3080-MIB", "pt3080Demodulator1ActualCellID"), ("PT3080-MIB", "pt3080Demodulator2ActualCellID"), ("PT3080-MIB", "pt3080Demodulator1ActualDVBHMode"), ("PT3080-MIB", "pt3080Demodulator2ActualDVBHMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080DemodulatorGroup = pt3080DemodulatorGroup.setStatus('current')
pt3080PrecorrectorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2, 25)).setObjects(("PT3080-MIB", "pt3080PrecorrectorLastTurnAroundTime"), ("PT3080-MIB", "pt3080PrecorrectorSecondsSinceLastUpdate"), ("PT3080-MIB", "pt3080PrecorrectorLinCleanrun"), ("PT3080-MIB", "pt3080PrecorrectorNlinCleanrun"), ("PT3080-MIB", "pt3080PrecorrectorLinearLoadNeutral"), ("PT3080-MIB", "pt3080PrecorrectorLinearLoadFactory"), ("PT3080-MIB", "pt3080PrecorrectorLinearUpdateFactoryCurve"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearLoadNeutral"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearLoadFactory"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearUpdateFactoryCurve"), ("PT3080-MIB", "pt3080PrecorrectorLinearAdaptive"), ("PT3080-MIB", "pt3080PrecorrectorLinearMode"), ("PT3080-MIB", "pt3080PrecorrectorLinearSenseEnable"), ("PT3080-MIB", "pt3080PrecorrectorLinearMonitorStatus"), ("PT3080-MIB", "pt3080PrecorrectorLinearMonitorSenseLevel"), ("PT3080-MIB", "pt3080PrecorrectorLinearMonitorSenseValid"), ("PT3080-MIB", "pt3080PrecorrectorLinearMonitorSenseBadCount"), ("PT3080-MIB", "pt3080PrecorrectorLinearMonitorAmplitudeRipple"), ("PT3080-MIB", "pt3080PrecorrectorLinearMonitorAmplitudeRippleValid"), ("PT3080-MIB", "pt3080PrecorrectorLinearMonitorGroupDelay"), ("PT3080-MIB", "pt3080PrecorrectorLinearMonitorGroupDelayValid"), ("PT3080-MIB", "pt3080PrecorrectorLinearMonitorDiscartedIterations"), ("PT3080-MIB", "pt3080PrecorrectorLinearMonitorIterations"), ("PT3080-MIB", "pt3080PrecorrectorLinearAdaptiveMode"), ("PT3080-MIB", "pt3080PrecorrectorLinearAdaptiveAmplitudeRippleTargetLevel"), ("PT3080-MIB", "pt3080PrecorrectorLinearAdaptiveAmplitudeRippleTargetHysteresis"), ("PT3080-MIB", "pt3080PrecorrectorLinearAdaptiveAmplitudeRippleEnable"), ("PT3080-MIB", "pt3080PrecorrectorLinearAdaptiveGroupDelayTargetLevel"), ("PT3080-MIB", "pt3080PrecorrectorLinearAdaptiveGroupDelayTargetHysteresis"), ("PT3080-MIB", "pt3080PrecorrectorLinearAdaptiveGroupDelayEnable"), ("PT3080-MIB", "pt3080PrecorrectorLinearAttenuation"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearAdaptive"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearMode"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearSenseEnable"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearMonitorStatus"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearMonitorSenseLevel"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearMonitorSenseValid"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearMonitorSenseBadCount"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearMonitorLowerShoulderLevel"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearMonitorLowerShoulderValid"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearMonitorUpperShoulderLevel"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearMonitorUpperShoulderValid"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearMonitorDiscartedIterations"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearMonitorIterations"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearMonitorMer"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearMonitorMerValid"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearMonitorPapr"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearMonitorPaprValid"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearAttenuation"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearAdaptiveMode"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearAdaptiveAveraging"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearAdaptiveMaxRfPaprEnable"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearAdaptiveMaxRfPaprLimit"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearAdaptiveMerTarget"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearAdaptiveMerTargetHysteresis"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearAdaptiveMerEnable"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearAdaptiveLowerShoulderTargetLevel"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearAdaptiveLowerShoulderTargetHysteresis"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearAdaptiveLowerShoulderEnable"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearAdaptiveUpperShoulderTargetLevel"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearAdaptiveUpperShoulderTargetHysteresis"), ("PT3080-MIB", "pt3080PrecorrectorNonlinearAdaptiveUpperShoulderEnable"), ("PT3080-MIB", "pt3080PrecorrectorPaprClipping"), ("PT3080-MIB", "pt3080PrecorrectorPaprShaping"), ("PT3080-MIB", "pt3080PrecorrectorClipperMode"), ("PT3080-MIB", "pt3080PrecorrectorClipperAdaptive"), ("PT3080-MIB", "pt3080PrecorrectorClipperEnable"), ("PT3080-MIB", "pt3080PrecorrectorClipperAdaptiveMode"), ("PT3080-MIB", "pt3080PrecorrectorClipperAdaptiveShaping"), ("PT3080-MIB", "pt3080PrecorrectorClipperMonitorStatus"), ("PT3080-MIB", "pt3080PrecorrectorClipperMonitorShoulderLevelLower"), ("PT3080-MIB", "pt3080PrecorrectorClipperMonitorShoulderLevelLowerValid"), ("PT3080-MIB", "pt3080PrecorrectorClipperMonitorShoulderLevelUpper"), ("PT3080-MIB", "pt3080PrecorrectorClipperMonitorShoulderLevelUpperValid"), ("PT3080-MIB", "pt3080PrecorrectorClipperMonitorMer"), ("PT3080-MIB", "pt3080PrecorrectorClipperMonitorMerValid"), ("PT3080-MIB", "pt3080PrecorrectorClipperMonitorPapr"), ("PT3080-MIB", "pt3080PrecorrectorClipperMonitorPaprValid"), ("PT3080-MIB", "pt3080PrecorrectorClipperMonitorIterations"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080PrecorrectorGroup = pt3080PrecorrectorGroup.setStatus('current')
pt3080ReceptionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2, 26)).setObjects(("PT3080-MIB", "pt3080ReceptionGainControl"), ("PT3080-MIB", "pt3080ReceptionGainManualValue"), ("PT3080-MIB", "pt3080ReceptionGainLimitEnable"), ("PT3080-MIB", "pt3080ReceptionGainLimit"), ("PT3080-MIB", "pt3080ReceptionGainCurrent"), ("PT3080-MIB", "pt3080ReceptionAGCMode"), ("PT3080-MIB", "pt3080ReceptionAGCHysteresis"), ("PT3080-MIB", "pt3080ReceptionBandwidth"), ("PT3080-MIB", "pt3080ReceptionRFFrequency"), ("PT3080-MIB", "pt3080ReceptionRFFrequencyOffset"), ("PT3080-MIB", "pt3080ReceptionRFPolarity"), ("PT3080-MIB", "pt3080ReceptionRFSquelchEnable"), ("PT3080-MIB", "pt3080ReceptionRFSquelchThreshold"), ("PT3080-MIB", "pt3080ReceptionRFSquelchHysteresis"), ("PT3080-MIB", "pt3080ReceptionRFTrackingFilterEnable"), ("PT3080-MIB", "pt3080ReceptionRFifLevel"), ("PT3080-MIB", "pt3080ReceptionRFNominalInputLevel"), ("PT3080-MIB", "pt3080ReceptionRFInputLevel"), ("PT3080-MIB", "pt3080ReceptionRFInputLevelThreshold"), ("PT3080-MIB", "pt3080ReceptionRFInputLevelHysteresis"), ("PT3080-MIB", "pt3080ReceptionIFFrequency"), ("PT3080-MIB", "pt3080ReceptionIFPolarity"), ("PT3080-MIB", "pt3080ReceptionIFInputLevel"), ("PT3080-MIB", "pt3080ReceptionIFInputPolicy"), ("PT3080-MIB", "pt3080ReceptionIFInput"), ("PT3080-MIB", "pt3080ReceptionIFRFtoIFHoldoverDelay"), ("PT3080-MIB", "pt3080ReceptionIFIFtoRFHoldoverDelay"), ("PT3080-MIB", "pt3080ReceptionTunerHWVersion"), ("PT3080-MIB", "pt3080ReceptionTunerHWType"), ("PT3080-MIB", "pt3080ReceptionTunerHWID"), ("PT3080-MIB", "pt3080ReceptionTunerHWSerialNumber"), ("PT3080-MIB", "pt3080ReceptionTunerHWCalibrationDate"), ("PT3080-MIB", "pt3080ReceptionTunerHWCalibrationDataVersion"), ("PT3080-MIB", "pt3080ReceptionTunerHWCalibrationSWVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080ReceptionGroup = pt3080ReceptionGroup.setStatus('current')
pt3080BackplaneGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2, 27)).setObjects(("PT3080-MIB", "pt3080BackplanePolarityHardMute"), ("PT3080-MIB", "pt3080BackplanePolarityRFFail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080BackplaneGroup = pt3080BackplaneGroup.setStatus('current')
pt3080ASIGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2, 30)).setObjects(("PT3080-MIB", "pt3080ASIInput1SyncTimeout"), ("PT3080-MIB", "pt3080ASIInput2SyncTimeout"), ("PT3080-MIB", "pt3080ASIInput1DataErrorLimit"), ("PT3080-MIB", "pt3080ASIInput2DataErrorLimit"), ("PT3080-MIB", "pt3080ASIInput1SyncStatus"), ("PT3080-MIB", "pt3080ASIInput2SyncStatus"), ("PT3080-MIB", "pt3080ASIInput1SyncSignal"), ("PT3080-MIB", "pt3080ASIInput2SyncSignal"), ("PT3080-MIB", "pt3080ASIInput1SyncTSSize"), ("PT3080-MIB", "pt3080ASIInput2SyncTSSize"), ("PT3080-MIB", "pt3080ASIInput1LineErrors"), ("PT3080-MIB", "pt3080ASIInput2LineErrors"), ("PT3080-MIB", "pt3080ASIInput1LineRate"), ("PT3080-MIB", "pt3080ASIInput2LineRate"), ("PT3080-MIB", "pt3080ASIInput1LineErrorRate"), ("PT3080-MIB", "pt3080ASIInput2LineErrorRate"), ("PT3080-MIB", "pt3080ASIInput1DataErrors"), ("PT3080-MIB", "pt3080ASIInput2DataErrors"), ("PT3080-MIB", "pt3080ASIInput1DataRate"), ("PT3080-MIB", "pt3080ASIInput2DataRate"), ("PT3080-MIB", "pt3080ASIInput1DataErrorRate"), ("PT3080-MIB", "pt3080ASIInput2DataErrorRate"), ("PT3080-MIB", "pt3080ASIInput1ClearErrorCounters"), ("PT3080-MIB", "pt3080ASIInput2ClearErrorCounters"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080ASIGroup = pt3080ASIGroup.setStatus('current')
pt3080NotifsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 2, 64)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080NotifsGroup = pt3080NotifsGroup.setStatus('current')
pt3080Agent = AgentCapabilities((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 3))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080Agent = pt3080Agent.setProductRelease('SWPROTELEVISION_P3_1_02_157 build 1441106393')
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080Agent = pt3080Agent.setStatus('current')
pt3080NotificationsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 4))
pt3080NotifModulatorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 3)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifModulatorAlarm.setStatus('current')
pt3080NotifTSPrimaryAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 5)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSPrimaryAlarm.setStatus('current')
pt3080NotifTSSecondaryAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 6)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSSecondaryAlarm.setStatus('current')
pt3080NotifSFNAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 7)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifSFNAlarm.setStatus('current')
pt3080NotifRefenceClockAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 8)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifRefenceClockAlarm.setStatus('current')
pt3080NotifRFAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 9)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifRFAlarm.setStatus('current')
pt3080NotifGNSSAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 10)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifGNSSAlarm.setStatus('current')
pt3080NotifTSoIPAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 12)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSoIPAlarm.setStatus('current')
pt3080NotifExternalAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 13)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifExternalAlarm.setStatus('current')
pt3080NotifHWMonitorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 14)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifHWMonitorAlarm.setStatus('current')
pt3080NotifCommAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 15)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifCommAlarm.setStatus('current')
pt3080NotifASIAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 16)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifASIAlarm.setStatus('current')
pt3080NotifInternalAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 18)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifInternalAlarm.setStatus('current')
pt3080NotifTSPrimarySyncLossAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 21)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSPrimarySyncLossAlarm.setStatus('current')
pt3080NotifTSPrimarySyncErrorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 22)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSPrimarySyncErrorAlarm.setStatus('current')
pt3080NotifTSPrimaryPCRErrorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 23)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSPrimaryPCRErrorAlarm.setStatus('current')
pt3080NotifTSPrimaryPATLossAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 24)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSPrimaryPATLossAlarm.setStatus('current')
pt3080NotifTSPrimaryTSIDWrongAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 25)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSPrimaryTSIDWrongAlarm.setStatus('current')
pt3080NotifTSPrimaryNWIDWrongAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 26)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSPrimaryNWIDWrongAlarm.setStatus('current')
pt3080NotifTSPrimaryStuffingRateExceededAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 27)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSPrimaryStuffingRateExceededAlarm.setStatus('current')
pt3080NotifTSPrimaryBufferPoolExceededAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 28)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSPrimaryBufferPoolExceededAlarm.setStatus('current')
pt3080NotifTSPrimarySTSJitterExceededAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 29)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSPrimarySTSJitterExceededAlarm.setStatus('current')
pt3080NotifTSPrimaryMIPDataMissingAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 30)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSPrimaryMIPDataMissingAlarm.setStatus('current')
pt3080NotifTSPrimaryMIPPriorityBadAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 31)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSPrimaryMIPPriorityBadAlarm.setStatus('current')
pt3080NotifTSSecondarySyncLossAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 32)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSSecondarySyncLossAlarm.setStatus('current')
pt3080NotifTSSecondarySyncErrorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 33)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSSecondarySyncErrorAlarm.setStatus('current')
pt3080NotifTSSecondaryPCRErrorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 34)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSSecondaryPCRErrorAlarm.setStatus('current')
pt3080NotifTSSecondaryPATLossAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 35)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSSecondaryPATLossAlarm.setStatus('current')
pt3080NotifTSSecondaryTSIDWrongAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 36)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSSecondaryTSIDWrongAlarm.setStatus('current')
pt3080NotifTSSecondaryNWIDWrongAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 37)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSSecondaryNWIDWrongAlarm.setStatus('current')
pt3080NotifTSSecondaryStuffingRateExceededAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 38)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSSecondaryStuffingRateExceededAlarm.setStatus('current')
pt3080NotifTSSecondaryBufferPoolExceededAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 39)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSSecondaryBufferPoolExceededAlarm.setStatus('current')
pt3080NotifTSSecondarySTSJitterExceededAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 40)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSSecondarySTSJitterExceededAlarm.setStatus('current')
pt3080NotifTSSecondaryMIPDataMissingAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 41)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSSecondaryMIPDataMissingAlarm.setStatus('current')
pt3080NotifTSSecondaryMIPPriorityBadAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 42)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSSecondaryMIPPriorityBadAlarm.setStatus('current')
pt3080NotifRFOverloadProtectionAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 44)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifRFOverloadProtectionAlarm.setStatus('current')
pt3080NotifCommeth0Alarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 55)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifCommeth0Alarm.setStatus('current')
pt3080NotifCommeth1Alarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 56)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifCommeth1Alarm.setStatus('current')
pt3080NotifCommeth2Alarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 57)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifCommeth2Alarm.setStatus('current')
pt3080NotifCommeth3Alarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 58)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifCommeth3Alarm.setStatus('current')
pt3080NotifCommeth4Alarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 59)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifCommeth4Alarm.setStatus('current')
pt3080NotifExternalInput1Alarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 72)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifExternalInput1Alarm.setStatus('current')
pt3080NotifExternalInput2Alarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 73)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifExternalInput2Alarm.setStatus('current')
pt3080NotifExternalInput3Alarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 74)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifExternalInput3Alarm.setStatus('current')
pt3080NotifExternalInput4Alarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 75)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifExternalInput4Alarm.setStatus('current')
pt3080NotifRefenceClockExtern1PPSLossAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 76)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifRefenceClockExtern1PPSLossAlarm.setStatus('current')
pt3080NotifRefenceClockIntern1PPSLossAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 77)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifRefenceClockIntern1PPSLossAlarm.setStatus('current')
pt3080NotifRefenceClockExtern10MHzLossAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 78)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifRefenceClockExtern10MHzLossAlarm.setStatus('current')
pt3080NotifRFAlcRangeAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 79)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifRFAlcRangeAlarm.setStatus('current')
pt3080NotifSFNResyncAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 80)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifSFNResyncAlarm.setStatus('current')
pt3080NotifSFNTSPrimaryMaxDelayOffsetExceededAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 81)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifSFNTSPrimaryMaxDelayOffsetExceededAlarm.setStatus('current')
pt3080NotifSFNTSPrimaryNetworkDelayExceededAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 82)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifSFNTSPrimaryNetworkDelayExceededAlarm.setStatus('current')
pt3080NotifSFNTSSecondaryMaxDelayOffsetExceededAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 84)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifSFNTSSecondaryMaxDelayOffsetExceededAlarm.setStatus('current')
pt3080NotifSFNTSSecondaryNetworkDelayExceededAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 85)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifSFNTSSecondaryNetworkDelayExceededAlarm.setStatus('current')
pt3080NotifRFLevelOutOfRangeAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 87)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifRFLevelOutOfRangeAlarm.setStatus('current')
pt3080NotifRefenceClockNTPSyncLossAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 89)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifRefenceClockNTPSyncLossAlarm.setStatus('current')
pt3080NotifSFNTSPrimarySeamlessDelayTooSmallAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 92)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifSFNTSPrimarySeamlessDelayTooSmallAlarm.setStatus('current')
pt3080NotifSFNTSPrimaryMIPConfigErrorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 93)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifSFNTSPrimaryMIPConfigErrorAlarm.setStatus('current')
pt3080NotifSFNTSSecondarySeamlessDelayTooSmallAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 94)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifSFNTSSecondarySeamlessDelayTooSmallAlarm.setStatus('current')
pt3080NotifSFNTSSecondaryMIPConfigErrorAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 95)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifSFNTSSecondaryMIPConfigErrorAlarm.setStatus('current')
pt3080NotifGNSSUnlockedAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 98)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifGNSSUnlockedAlarm.setStatus('current')
pt3080NotifGNSSAntennaFaultAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 107)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifGNSSAntennaFaultAlarm.setStatus('current')
pt3080NotifGNSSHoldOverAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 108)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifGNSSHoldOverAlarm.setStatus('current')
pt3080NotifRefenceClockExternal10MHzHoldOverAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 109)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifRefenceClockExternal10MHzHoldOverAlarm.setStatus('current')
pt3080NotifRefenceClockExternal1PPSHoldOverAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 110)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifRefenceClockExternal1PPSHoldOverAlarm.setStatus('current')
pt3080NotifASIASI1ErrorRateEceeededAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 113)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifASIASI1ErrorRateEceeededAlarm.setStatus('current')
pt3080NotifASIASI2ErrorRateEceeededAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 114)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifASIASI2ErrorRateEceeededAlarm.setStatus('current')
pt3080NotifTSoIPRx1PackageErrorRationExceededAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 115)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSoIPRx1PackageErrorRationExceededAlarm.setStatus('current')
pt3080NotifTSoIPRx2PackageErrorRationExceededAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 117)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSoIPRx2PackageErrorRationExceededAlarm.setStatus('current')
pt3080NotifTSoIPRx1SyncLossAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 119)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSoIPRx1SyncLossAlarm.setStatus('current')
pt3080NotifTSoIPRx2SyncLossAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 121)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSoIPRx2SyncLossAlarm.setStatus('current')
pt3080NotifInternalBackplaneAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 129)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifInternalBackplaneAlarm.setStatus('current')
pt3080NotifInternalReferenceClockAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 132)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifInternalReferenceClockAlarm.setStatus('current')
pt3080NotifInternalUpConverterAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 134)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifInternalUpConverterAlarm.setStatus('current')
pt3080NotifInternalDownConverterAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 135)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifInternalDownConverterAlarm.setStatus('current')
pt3080NotifInternalMainboardAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 136)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifInternalMainboardAlarm.setStatus('current')
pt3080NotifInternalBatteryAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 137)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifInternalBatteryAlarm.setStatus('current')
pt3080NotifInternalFirmware1Alarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 139)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifInternalFirmware1Alarm.setStatus('current')
pt3080NotifInternalGNSSAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 142)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifInternalGNSSAlarm.setStatus('current')
pt3080NotifInternalSatelliteAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 143)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifInternalSatelliteAlarm.setStatus('current')
pt3080NotifInternalEthAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 146)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifInternalEthAlarm.setStatus('current')
pt3080NotifHWMonitorFPGAAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 156)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifHWMonitorFPGAAlarm.setStatus('current')
pt3080NotifHWMonitorMainBoardCPUTemperatureAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 157)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifHWMonitorMainBoardCPUTemperatureAlarm.setStatus('current')
pt3080NotifHWMonitorMainBoardTemperatureAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 158)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifHWMonitorMainBoardTemperatureAlarm.setStatus('current')
pt3080NotifHWMonitorLeftFanAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 159)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifHWMonitorLeftFanAlarm.setStatus('current')
pt3080NotifHWMonitorRightFan2Alarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 160)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifHWMonitorRightFan2Alarm.setStatus('current')
pt3080NotifHWMonitorBackplaneTemperatureAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 162)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifHWMonitorBackplaneTemperatureAlarm.setStatus('current')
pt3080NotifTSPrimaryInputTSHoldOverAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 180)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSPrimaryInputTSHoldOverAlarm.setStatus('current')
pt3080NotifInternalPLLUnlockedAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 182)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifInternalPLLUnlockedAlarm.setStatus('current')
pt3080NotifExternalInput5Alarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 183)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifExternalInput5Alarm.setStatus('current')
pt3080NotifSFNUntimedModeAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 184)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifSFNUntimedModeAlarm.setStatus('current')
pt3080NotifSFNFreeRunningModeAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 185)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifSFNFreeRunningModeAlarm.setStatus('current')
pt3080NotifExternalInput6Alarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 186)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifExternalInput6Alarm.setStatus('current')
pt3080NotifExternalInput7Alarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 187)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifExternalInput7Alarm.setStatus('current')
pt3080NotifExternalInput8Alarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 188)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifExternalInput8Alarm.setStatus('current')
pt3080NotifTSPrimaryDelayMarginAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 190)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSPrimaryDelayMarginAlarm.setStatus('current')
pt3080NotifTSSecondaryDelayMarginAlarm = NotificationType((1, 3, 6, 1, 4, 1, 18086, 3080, 64, 0, 191)).setObjects(("PT3080-MIB", "pt3080NotifMessage"), ("PT3080-MIB", "pt3080NotifState"), ("PT3080-MIB", "pt3080NotifLocalTime"))
if mibBuilder.loadTexts: pt3080NotifTSSecondaryDelayMarginAlarm.setStatus('current')
pt3080NotifGroupModulatorAlarm = NotificationGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 4, 3)).setObjects(("PT3080-MIB", "pt3080NotifModulatorAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080NotifGroupModulatorAlarm = pt3080NotifGroupModulatorAlarm.setStatus('current')
pt3080NotifGroupTSPrimaryAlarm = NotificationGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 4, 5)).setObjects(("PT3080-MIB", "pt3080NotifTSPrimaryAlarm"), ("PT3080-MIB", "pt3080NotifTSPrimarySyncLossAlarm"), ("PT3080-MIB", "pt3080NotifTSPrimarySyncErrorAlarm"), ("PT3080-MIB", "pt3080NotifTSPrimaryPCRErrorAlarm"), ("PT3080-MIB", "pt3080NotifTSPrimaryPATLossAlarm"), ("PT3080-MIB", "pt3080NotifTSPrimaryTSIDWrongAlarm"), ("PT3080-MIB", "pt3080NotifTSPrimaryNWIDWrongAlarm"), ("PT3080-MIB", "pt3080NotifTSPrimaryStuffingRateExceededAlarm"), ("PT3080-MIB", "pt3080NotifTSPrimaryBufferPoolExceededAlarm"), ("PT3080-MIB", "pt3080NotifTSPrimarySTSJitterExceededAlarm"), ("PT3080-MIB", "pt3080NotifTSPrimaryMIPDataMissingAlarm"), ("PT3080-MIB", "pt3080NotifTSPrimaryMIPPriorityBadAlarm"), ("PT3080-MIB", "pt3080NotifTSPrimaryInputTSHoldOverAlarm"), ("PT3080-MIB", "pt3080NotifTSPrimaryDelayMarginAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080NotifGroupTSPrimaryAlarm = pt3080NotifGroupTSPrimaryAlarm.setStatus('current')
pt3080NotifGroupTSSecondaryAlarm = NotificationGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 4, 6)).setObjects(("PT3080-MIB", "pt3080NotifTSSecondaryAlarm"), ("PT3080-MIB", "pt3080NotifTSSecondarySyncLossAlarm"), ("PT3080-MIB", "pt3080NotifTSSecondarySyncErrorAlarm"), ("PT3080-MIB", "pt3080NotifTSSecondaryPCRErrorAlarm"), ("PT3080-MIB", "pt3080NotifTSSecondaryPATLossAlarm"), ("PT3080-MIB", "pt3080NotifTSSecondaryTSIDWrongAlarm"), ("PT3080-MIB", "pt3080NotifTSSecondaryNWIDWrongAlarm"), ("PT3080-MIB", "pt3080NotifTSSecondaryStuffingRateExceededAlarm"), ("PT3080-MIB", "pt3080NotifTSSecondaryBufferPoolExceededAlarm"), ("PT3080-MIB", "pt3080NotifTSSecondarySTSJitterExceededAlarm"), ("PT3080-MIB", "pt3080NotifTSSecondaryMIPDataMissingAlarm"), ("PT3080-MIB", "pt3080NotifTSSecondaryMIPPriorityBadAlarm"), ("PT3080-MIB", "pt3080NotifTSSecondaryDelayMarginAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080NotifGroupTSSecondaryAlarm = pt3080NotifGroupTSSecondaryAlarm.setStatus('current')
pt3080NotifGroupSFNAlarm = NotificationGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 4, 7)).setObjects(("PT3080-MIB", "pt3080NotifSFNAlarm"), ("PT3080-MIB", "pt3080NotifSFNResyncAlarm"), ("PT3080-MIB", "pt3080NotifSFNTSPrimaryMaxDelayOffsetExceededAlarm"), ("PT3080-MIB", "pt3080NotifSFNTSPrimaryNetworkDelayExceededAlarm"), ("PT3080-MIB", "pt3080NotifSFNTSSecondaryMaxDelayOffsetExceededAlarm"), ("PT3080-MIB", "pt3080NotifSFNTSSecondaryNetworkDelayExceededAlarm"), ("PT3080-MIB", "pt3080NotifSFNTSPrimarySeamlessDelayTooSmallAlarm"), ("PT3080-MIB", "pt3080NotifSFNTSPrimaryMIPConfigErrorAlarm"), ("PT3080-MIB", "pt3080NotifSFNTSSecondarySeamlessDelayTooSmallAlarm"), ("PT3080-MIB", "pt3080NotifSFNTSSecondaryMIPConfigErrorAlarm"), ("PT3080-MIB", "pt3080NotifSFNUntimedModeAlarm"), ("PT3080-MIB", "pt3080NotifSFNFreeRunningModeAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080NotifGroupSFNAlarm = pt3080NotifGroupSFNAlarm.setStatus('current')
pt3080NotifGroupRefenceClockAlarm = NotificationGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 4, 8)).setObjects(("PT3080-MIB", "pt3080NotifRefenceClockAlarm"), ("PT3080-MIB", "pt3080NotifRefenceClockExtern1PPSLossAlarm"), ("PT3080-MIB", "pt3080NotifRefenceClockIntern1PPSLossAlarm"), ("PT3080-MIB", "pt3080NotifRefenceClockExtern10MHzLossAlarm"), ("PT3080-MIB", "pt3080NotifRefenceClockNTPSyncLossAlarm"), ("PT3080-MIB", "pt3080NotifRefenceClockExternal10MHzHoldOverAlarm"), ("PT3080-MIB", "pt3080NotifRefenceClockExternal1PPSHoldOverAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080NotifGroupRefenceClockAlarm = pt3080NotifGroupRefenceClockAlarm.setStatus('current')
pt3080NotifGroupRFAlarm = NotificationGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 4, 9)).setObjects(("PT3080-MIB", "pt3080NotifRFAlarm"), ("PT3080-MIB", "pt3080NotifRFOverloadProtectionAlarm"), ("PT3080-MIB", "pt3080NotifRFAlcRangeAlarm"), ("PT3080-MIB", "pt3080NotifRFLevelOutOfRangeAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080NotifGroupRFAlarm = pt3080NotifGroupRFAlarm.setStatus('current')
pt3080NotifGroupGNSSAlarm = NotificationGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 4, 10)).setObjects(("PT3080-MIB", "pt3080NotifGNSSAlarm"), ("PT3080-MIB", "pt3080NotifGNSSUnlockedAlarm"), ("PT3080-MIB", "pt3080NotifGNSSAntennaFaultAlarm"), ("PT3080-MIB", "pt3080NotifGNSSHoldOverAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080NotifGroupGNSSAlarm = pt3080NotifGroupGNSSAlarm.setStatus('current')
pt3080NotifGroupTSoIPAlarm = NotificationGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 4, 12)).setObjects(("PT3080-MIB", "pt3080NotifTSoIPAlarm"), ("PT3080-MIB", "pt3080NotifTSoIPRx1PackageErrorRationExceededAlarm"), ("PT3080-MIB", "pt3080NotifTSoIPRx2PackageErrorRationExceededAlarm"), ("PT3080-MIB", "pt3080NotifTSoIPRx1SyncLossAlarm"), ("PT3080-MIB", "pt3080NotifTSoIPRx2SyncLossAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080NotifGroupTSoIPAlarm = pt3080NotifGroupTSoIPAlarm.setStatus('current')
pt3080NotifGroupExternalAlarm = NotificationGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 4, 13)).setObjects(("PT3080-MIB", "pt3080NotifExternalAlarm"), ("PT3080-MIB", "pt3080NotifExternalInput1Alarm"), ("PT3080-MIB", "pt3080NotifExternalInput2Alarm"), ("PT3080-MIB", "pt3080NotifExternalInput3Alarm"), ("PT3080-MIB", "pt3080NotifExternalInput4Alarm"), ("PT3080-MIB", "pt3080NotifExternalInput5Alarm"), ("PT3080-MIB", "pt3080NotifExternalInput6Alarm"), ("PT3080-MIB", "pt3080NotifExternalInput7Alarm"), ("PT3080-MIB", "pt3080NotifExternalInput8Alarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080NotifGroupExternalAlarm = pt3080NotifGroupExternalAlarm.setStatus('current')
pt3080NotifGroupHWMonitorAlarm = NotificationGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 4, 14)).setObjects(("PT3080-MIB", "pt3080NotifHWMonitorAlarm"), ("PT3080-MIB", "pt3080NotifHWMonitorFPGAAlarm"), ("PT3080-MIB", "pt3080NotifHWMonitorMainBoardCPUTemperatureAlarm"), ("PT3080-MIB", "pt3080NotifHWMonitorMainBoardTemperatureAlarm"), ("PT3080-MIB", "pt3080NotifHWMonitorLeftFanAlarm"), ("PT3080-MIB", "pt3080NotifHWMonitorRightFan2Alarm"), ("PT3080-MIB", "pt3080NotifHWMonitorBackplaneTemperatureAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080NotifGroupHWMonitorAlarm = pt3080NotifGroupHWMonitorAlarm.setStatus('current')
pt3080NotifGroupCommAlarm = NotificationGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 4, 15)).setObjects(("PT3080-MIB", "pt3080NotifCommAlarm"), ("PT3080-MIB", "pt3080NotifCommeth0Alarm"), ("PT3080-MIB", "pt3080NotifCommeth1Alarm"), ("PT3080-MIB", "pt3080NotifCommeth2Alarm"), ("PT3080-MIB", "pt3080NotifCommeth3Alarm"), ("PT3080-MIB", "pt3080NotifCommeth4Alarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080NotifGroupCommAlarm = pt3080NotifGroupCommAlarm.setStatus('current')
pt3080NotifGroupASIAlarm = NotificationGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 4, 16)).setObjects(("PT3080-MIB", "pt3080NotifASIAlarm"), ("PT3080-MIB", "pt3080NotifASIASI1ErrorRateEceeededAlarm"), ("PT3080-MIB", "pt3080NotifASIASI2ErrorRateEceeededAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080NotifGroupASIAlarm = pt3080NotifGroupASIAlarm.setStatus('current')
pt3080NotifGroupInternalAlarm = NotificationGroup((1, 3, 6, 1, 4, 1, 18086, 3080, 100, 4, 18)).setObjects(("PT3080-MIB", "pt3080NotifInternalAlarm"), ("PT3080-MIB", "pt3080NotifInternalBackplaneAlarm"), ("PT3080-MIB", "pt3080NotifInternalReferenceClockAlarm"), ("PT3080-MIB", "pt3080NotifInternalUpConverterAlarm"), ("PT3080-MIB", "pt3080NotifInternalDownConverterAlarm"), ("PT3080-MIB", "pt3080NotifInternalMainboardAlarm"), ("PT3080-MIB", "pt3080NotifInternalBatteryAlarm"), ("PT3080-MIB", "pt3080NotifInternalFirmware1Alarm"), ("PT3080-MIB", "pt3080NotifInternalGNSSAlarm"), ("PT3080-MIB", "pt3080NotifInternalSatelliteAlarm"), ("PT3080-MIB", "pt3080NotifInternalEthAlarm"), ("PT3080-MIB", "pt3080NotifInternalPLLUnlockedAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    pt3080NotifGroupInternalAlarm = pt3080NotifGroupInternalAlarm.setStatus('current')
mibBuilder.exportSymbols("PT3080-MIB", pt3080SystemInstrumentPCBRev=pt3080SystemInstrumentPCBRev, pt3080CommsBackupServiceSNMP=pt3080CommsBackupServiceSNMP, pt3080ModeHierarchy=pt3080ModeHierarchy, pt3080ReferenceAlarmActionRelay2=pt3080ReferenceAlarmActionRelay2, pt3080SystemBackplaneIdMAnuf=pt3080SystemBackplaneIdMAnuf, pt3080CommsRemoteIpMulticastSourceFilterAddress2=pt3080CommsRemoteIpMulticastSourceFilterAddress2, pt3080TSoIPAlarmDescription=pt3080TSoIPAlarmDescription, pt3080CommsAlarmActionEventlog=pt3080CommsAlarmActionEventlog, pt3080CommsPortVlanEnable=pt3080CommsPortVlanEnable, pt3080GpsSatelliteSystemGALILEO=pt3080GpsSatelliteSystemGALILEO, pt3080SystemScheduledActionMinute=pt3080SystemScheduledActionMinute, pt3080InputTSHpNWID=pt3080InputTSHpNWID, pt3080ChannelFilterGroup=pt3080ChannelFilterGroup, pt3080PrecorrectorLinearAdaptiveMode=pt3080PrecorrectorLinearAdaptiveMode, pt3080SystemScheduledActionEntry=pt3080SystemScheduledActionEntry, pt3080Demodulator2FelStatus=pt3080Demodulator2FelStatus, pt3080InputTSSecondaryMinDelaymargin=pt3080InputTSSecondaryMinDelaymargin, pt3080TSoIPRx2Protocol=pt3080TSoIPRx2Protocol, pt3080OutputRfDetectedHigherLevelLimit=pt3080OutputRfDetectedHigherLevelLimit, pt3080NotifTSSecondaryStuffingRateExceededAlarm=pt3080NotifTSSecondaryStuffingRateExceededAlarm, pt3080NotifRefenceClockExtern10MHzLossAlarm=pt3080NotifRefenceClockExtern10MHzLossAlarm, pt3080GPSAlarmActionTrap=pt3080GPSAlarmActionTrap, pt3080ASITSSecondaryAlarmTable=pt3080ASITSSecondaryAlarmTable, pt3080TSoIPAlarmTable=pt3080TSoIPAlarmTable, pt3080Demodulator1PostVirterbiErrorRate=pt3080Demodulator1PostVirterbiErrorRate, pt3080CommsRemoteStaticNetmask=pt3080CommsRemoteStaticNetmask, pt3080Conformance=pt3080Conformance, pt3080TSoIPRx2CorrectedIPFrames=pt3080TSoIPRx2CorrectedIPFrames, pt3080NotifSFNTSPrimarySeamlessDelayTooSmallAlarm=pt3080NotifSFNTSPrimarySeamlessDelayTooSmallAlarm, pt3080MonitorTSoIPDSCP=pt3080MonitorTSoIPDSCP, pt3080CommsStaticRouteType=pt3080CommsStaticRouteType, pt3080ModeNetworkDelayMarginLP=pt3080ModeNetworkDelayMarginLP, pt3080CommsGbeAdminServiceSNMP=pt3080CommsGbeAdminServiceSNMP, pt3080CommsGbeAdminPhysicalInterface=pt3080CommsGbeAdminPhysicalInterface, pt3080SystemInstrumentCalibrationRev=pt3080SystemInstrumentCalibrationRev, pt3080CommsSNMPTrapDestinationPort4=pt3080CommsSNMPTrapDestinationPort4, pt3080ModeNetworkDelayReset=pt3080ModeNetworkDelayReset, pt3080GpsLongtitude=pt3080GpsLongtitude, pt3080PrecorrectorNonlinearMonitorSenseValid=pt3080PrecorrectorNonlinearMonitorSenseValid, pt3080PrecorrectorNonlinearAdaptiveLowerShoulderTargetHysteresis=pt3080PrecorrectorNonlinearAdaptiveLowerShoulderTargetHysteresis, pt3080SystemInstrumentOptions=pt3080SystemInstrumentOptions, pt3080TSoIPGroup=pt3080TSoIPGroup, pt3080CommsPortCurrentIpAddr=pt3080CommsPortCurrentIpAddr, pt3080OutputGroup=pt3080OutputGroup, pt3080NotifTSSecondaryMIPPriorityBadAlarm=pt3080NotifTSSecondaryMIPPriorityBadAlarm, pt3080NotifInternalGNSSAlarm=pt3080NotifInternalGNSSAlarm, pt3080Demodulator2MerLimit=pt3080Demodulator2MerLimit, pt3080PrecorrectorGroup=pt3080PrecorrectorGroup, pt3080NotifGroupHWMonitorAlarm=pt3080NotifGroupHWMonitorAlarm, pt3080OutputRfCableFrequencyLevelOffset2=pt3080OutputRfCableFrequencyLevelOffset2, pt3080ReceptionTunerHWCalibrationDate=pt3080ReceptionTunerHWCalibrationDate, pt3080ModeNetworkDelayHP=pt3080ModeNetworkDelayHP, pt3080InternalAlarmActionForceMode=pt3080InternalAlarmActionForceMode, pt3080CommsBackupPhysicalInterface=pt3080CommsBackupPhysicalInterface, pt3080CommsPortIpMulticastSourceFilterAddress4=pt3080CommsPortIpMulticastSourceFilterAddress4, pt3080PrecorrectorClipperMonitorIterations=pt3080PrecorrectorClipperMonitorIterations, pt3080ModeNetwork=pt3080ModeNetwork, pt3080SFNAlarmActionRelay1=pt3080SFNAlarmActionRelay1, pt3080ModeMipControlOutputPower=pt3080ModeMipControlOutputPower, pt3080DemodulatorAlarmActionAlarmLED=pt3080DemodulatorAlarmActionAlarmLED, pt3080NotifTSPrimaryMIPDataMissingAlarm=pt3080NotifTSPrimaryMIPDataMissingAlarm, pt3080InputTSSecondaryMinDelaymarginEnable=pt3080InputTSSecondaryMinDelaymarginEnable, pt3080TSoIPRx1LanSelect=pt3080TSoIPRx1LanSelect, pt3080CommsStaticRouteNO=pt3080CommsStaticRouteNO, pt3080InputTSSecondaryStsJitterMin=pt3080InputTSSecondaryStsJitterMin, pt3080ModeSfnDelayOffset=pt3080ModeSfnDelayOffset, pt3080TSoIPRx1Status=pt3080TSoIPRx1Status, pt3080CommsPortEnable=pt3080CommsPortEnable, pt3080NotifSFNAlarm=pt3080NotifSFNAlarm, pt3080ASIInput2DataRate=pt3080ASIInput2DataRate, pt3080ASIAlarmID=pt3080ASIAlarmID, pt3080ExternalAlarmEntry=pt3080ExternalAlarmEntry, pt3080NotifTSSecondaryMIPDataMissingAlarm=pt3080NotifTSSecondaryMIPDataMissingAlarm, pt3080AlarmGroup=pt3080AlarmGroup, pt3080TSoIPRx1FecRow=pt3080TSoIPRx1FecRow, pt3080CommsBackupStaticIpAddr=pt3080CommsBackupStaticIpAddr, pt3080ModeTimeSlicingHighPrio=pt3080ModeTimeSlicingHighPrio, pt3080NotifSFNTSPrimaryMIPConfigErrorAlarm=pt3080NotifSFNTSPrimaryMIPConfigErrorAlarm, pt3080PrecorrectorNonlinearAdaptive=pt3080PrecorrectorNonlinearAdaptive, pt3080InputTSPrimaryStsJitter=pt3080InputTSPrimaryStsJitter, pt3080TSoIPRx2Status=pt3080TSoIPRx2Status, pt3080ASIGroup=pt3080ASIGroup, pt3080ModeNetworkDelayMaxHP=pt3080ModeNetworkDelayMaxHP, pt3080CommsLocalServiceSNMP=pt3080CommsLocalServiceSNMP, pt3080Demodulator1UncorrectedPackets=pt3080Demodulator1UncorrectedPackets, PYSNMP_MODULE_ID=pt3080, pt3080PrecorrectorNonlinearMonitorPapr=pt3080PrecorrectorNonlinearMonitorPapr, pt3080SystemGroup=pt3080SystemGroup, pt3080CommsPortServiceWeb=pt3080CommsPortServiceWeb, pt3080BackplanePolarityRFFail=pt3080BackplanePolarityRFFail, pt3080SystemScheduledActionRepeaterMode=pt3080SystemScheduledActionRepeaterMode, pt3080GpsbiasVoltage=pt3080GpsbiasVoltage, pt3080ModeDeepInterleaver=pt3080ModeDeepInterleaver, pt3080SystemScheduledActionTable=pt3080SystemScheduledActionTable, pt3080PrecorrectorLinearAdaptiveGroupDelayTargetHysteresis=pt3080PrecorrectorLinearAdaptiveGroupDelayTargetHysteresis, pt3080InputASITSPrimarySource=pt3080InputASITSPrimarySource, pt3080InputASITSSecondarySource=pt3080InputASITSSecondarySource, pt3080PrecorrectorNonlinearMonitorStatus=pt3080PrecorrectorNonlinearMonitorStatus, pt3080DemodulatorAlarmTable=pt3080DemodulatorAlarmTable, pt3080CommsPortIpMulticastAddr=pt3080CommsPortIpMulticastAddr, pt3080ExternalAlarmActionAlarmLED=pt3080ExternalAlarmActionAlarmLED, pt3080ReferenceAlarmID=pt3080ReferenceAlarmID, pt3080ASIAlarmActionRelay1=pt3080ASIAlarmActionRelay1, pt3080Demodulator1MerLimit=pt3080Demodulator1MerLimit, pt3080ASIAlarmActionEmail=pt3080ASIAlarmActionEmail, pt3080InternalAlarmActionAlarmLED=pt3080InternalAlarmActionAlarmLED, pt3080SFNAlarmActionForceMode=pt3080SFNAlarmActionForceMode, pt3080HWMonitorAlarmActionEventlog=pt3080HWMonitorAlarmActionEventlog, pt3080CommsSNMPTrapDestination3=pt3080CommsSNMPTrapDestination3, pt3080SystemScheduledActionMonthDay=pt3080SystemScheduledActionMonthDay, pt3080ReceptionIFInput=pt3080ReceptionIFInput, pt3080PrecorrectorNonlinearAdaptiveMaxRfPaprLimit=pt3080PrecorrectorNonlinearAdaptiveMaxRfPaprLimit, pt3080NotifSFNResyncAlarm=pt3080NotifSFNResyncAlarm, pt3080ReceptionRFFrequency=pt3080ReceptionRFFrequency, pt3080CommsStaticNtpServerAddress=pt3080CommsStaticNtpServerAddress, pt3080InputASIAutoRoutingDelayLp2Hp=pt3080InputASIAutoRoutingDelayLp2Hp, pt3080CommsGbeAdminIpMulticastSourceFilterAddress5=pt3080CommsGbeAdminIpMulticastSourceFilterAddress5, pt3080OutputRfCableFrequencyLevelOffset5=pt3080OutputRfCableFrequencyLevelOffset5, pt3080Reception=pt3080Reception, pt3080ReceptionRFifLevel=pt3080ReceptionRFifLevel, pt3080GroupAlarmActionAlarmLED=pt3080GroupAlarmActionAlarmLED, pt3080PrecorrectorNonlinearAdaptiveUpperShoulderEnable=pt3080PrecorrectorNonlinearAdaptiveUpperShoulderEnable, pt3080NotifGroupInternalAlarm=pt3080NotifGroupInternalAlarm, pt3080CommsSNMPTrapDestinationPort2=pt3080CommsSNMPTrapDestinationPort2, pt3080NotifTSPrimarySyncErrorAlarm=pt3080NotifTSPrimarySyncErrorAlarm, pt3080NotifInternalAlarm=pt3080NotifInternalAlarm, pt3080ReferenceAlarmActionForceMode=pt3080ReferenceAlarmActionForceMode, pt3080PrecorrectorClipperMonitorShoulderLevelLower=pt3080PrecorrectorClipperMonitorShoulderLevelLower, pt3080PrecorrectorClipperMonitorShoulderLevelUpper=pt3080PrecorrectorClipperMonitorShoulderLevelUpper, pt3080ModeMpeFecHighPrio=pt3080ModeMpeFecHighPrio, pt3080MonitorTSoIPIpBitrate=pt3080MonitorTSoIPIpBitrate, pt3080Demodulator1ActualCellID=pt3080Demodulator1ActualCellID, pt3080CommsGbeAdminStaticIpAddr=pt3080CommsGbeAdminStaticIpAddr, pt3080CommsRemotePhysicalInterface=pt3080CommsRemotePhysicalInterface, pt3080SystemBackplaneCalibrationDate=pt3080SystemBackplaneCalibrationDate, pt3080OutputRfDetectedHigherLevelcontrol=pt3080OutputRfDetectedHigherLevelcontrol, pt3080DemodulatorAlarmActionEmail=pt3080DemodulatorAlarmActionEmail, pt3080CommsStaticRoutePhysicalInterface=pt3080CommsStaticRoutePhysicalInterface, pt3080SystemScheduledActionSWUpgradeProtocol=pt3080SystemScheduledActionSWUpgradeProtocol, pt3080PrecorrectorLinearMonitorAmplitudeRipple=pt3080PrecorrectorLinearMonitorAmplitudeRipple, pt3080CommsRemoteVlanEnable=pt3080CommsRemoteVlanEnable, pt3080CommsBackupStaticNetmask=pt3080CommsBackupStaticNetmask, pt3080InputRefDevType=pt3080InputRefDevType, pt3080CommsBackupEnable=pt3080CommsBackupEnable, pt3080Demodulator1ActualTimeSlicingLowPrio=pt3080Demodulator1ActualTimeSlicingLowPrio, pt3080TSoIPRx2OverrunIPFrames=pt3080TSoIPRx2OverrunIPFrames, pt3080SFNAlarmActionEmail=pt3080SFNAlarmActionEmail, pt3080InternalAlarmActionRelay2=pt3080InternalAlarmActionRelay2, pt3080RFAlarmActionForceMode=pt3080RFAlarmActionForceMode, pt3080GroupAlarmDescription=pt3080GroupAlarmDescription, pt3080NotifRefenceClockAlarm=pt3080NotifRefenceClockAlarm, pt3080NotifGroupModulatorAlarm=pt3080NotifGroupModulatorAlarm, pt3080MonitorTSoIPDestPort=pt3080MonitorTSoIPDestPort, pt3080CommsPortServiceRIP=pt3080CommsPortServiceRIP, pt3080CommsBackupIpMulticastSourceFilterMode=pt3080CommsBackupIpMulticastSourceFilterMode, pt3080InternalAlarmState=pt3080InternalAlarmState, pt3080ReferenceAlarmActionEventlog=pt3080ReferenceAlarmActionEventlog, pt3080PrecorrectorClipperMonitorMer=pt3080PrecorrectorClipperMonitorMer, pt3080CommsLocalDhcpMode=pt3080CommsLocalDhcpMode, pt3080TestGroup=pt3080TestGroup, pt3080NotifTSPrimaryTSIDWrongAlarm=pt3080NotifTSPrimaryTSIDWrongAlarm, pt3080Precorrector=pt3080Precorrector, pt3080ASITSPrimaryAlarmActionAlarmLED=pt3080ASITSPrimaryAlarmActionAlarmLED, pt3080NotifSFNTSSecondaryNetworkDelayExceededAlarm=pt3080NotifSFNTSSecondaryNetworkDelayExceededAlarm, pt3080CommsRemoteIpMulticastSourceFilterAddress3=pt3080CommsRemoteIpMulticastSourceFilterAddress3, pt3080CommsAlarmActionEmail=pt3080CommsAlarmActionEmail, pt3080MonitorTSoIPSource=pt3080MonitorTSoIPSource, pt3080SystemScheduledActionSWUpgradeImageServer=pt3080SystemScheduledActionSWUpgradeImageServer, pt3080InputTSSecondaryStatus=pt3080InputTSSecondaryStatus, pt3080OutputRfAlcSetpointPort2=pt3080OutputRfAlcSetpointPort2, pt3080OutputRfAlcStatus=pt3080OutputRfAlcStatus, pt3080CommsSNMPTrapDestinationPort5=pt3080CommsSNMPTrapDestinationPort5, pt3080CommsCurrentGateway=pt3080CommsCurrentGateway, pt3080Demodulator2UncorrectedPackets=pt3080Demodulator2UncorrectedPackets, pt3080NotifTSPrimarySyncLossAlarm=pt3080NotifTSPrimarySyncLossAlarm, pt3080ASITSPrimaryAlarmActionRelay2=pt3080ASITSPrimaryAlarmActionRelay2, pt3080PrecorrectorNonlinearAdaptiveLowerShoulderEnable=pt3080PrecorrectorNonlinearAdaptiveLowerShoulderEnable, pt3080Eventlog=pt3080Eventlog, pt3080CommsRemoteServiceWeb=pt3080CommsRemoteServiceWeb, pt3080OutputMute=pt3080OutputMute, pt3080GpsVersion=pt3080GpsVersion, pt3080CommsLocalServiceRIP=pt3080CommsLocalServiceRIP, pt3080SFNAlarmState=pt3080SFNAlarmState, pt3080InputTSPrimaryExpectedNWID=pt3080InputTSPrimaryExpectedNWID, pt3080CommsBackupVlanEnable=pt3080CommsBackupVlanEnable, pt3080ASITSSecondaryAlarmID=pt3080ASITSSecondaryAlarmID, pt3080PrecorrectorNonlinearMonitorMer=pt3080PrecorrectorNonlinearMonitorMer, pt3080InputTSSecondaryStsJitterReset=pt3080InputTSSecondaryStsJitterReset, pt3080NotifCommeth0Alarm=pt3080NotifCommeth0Alarm, pt3080ASITSSecondaryAlarmActionAlarmLED=pt3080ASITSSecondaryAlarmActionAlarmLED, pt3080CommsBackupVlanId=pt3080CommsBackupVlanId, pt3080PrecorrectorLinearMonitorGroupDelayValid=pt3080PrecorrectorLinearMonitorGroupDelayValid, pt3080ASITSPrimaryAlarmActionEmail=pt3080ASITSPrimaryAlarmActionEmail, pt3080CommsGbeAdminServiceTSoIP=pt3080CommsGbeAdminServiceTSoIP, pt3080InputRefDirection=pt3080InputRefDirection, pt3080PrecorrectorNonlinearSenseEnable=pt3080PrecorrectorNonlinearSenseEnable, pt3080CommsRemoteIpMulticastSourceFilterAddress1=pt3080CommsRemoteIpMulticastSourceFilterAddress1, pt3080ASITSPrimaryAlarmID=pt3080ASITSPrimaryAlarmID, pt3080CommsSNMPReadWriteCommunity=pt3080CommsSNMPReadWriteCommunity, pt3080Groups=pt3080Groups, pt3080TSoIPRx1PacketErrorRatio=pt3080TSoIPRx1PacketErrorRatio, pt3080NotifTSoIPRx1PackageErrorRationExceededAlarm=pt3080NotifTSoIPRx1PackageErrorRationExceededAlarm, pt3080TSoIP=pt3080TSoIP, pt3080NotifHWMonitorBackplaneTemperatureAlarm=pt3080NotifHWMonitorBackplaneTemperatureAlarm, pt3080NotifSFNTSPrimaryMaxDelayOffsetExceededAlarm=pt3080NotifSFNTSPrimaryMaxDelayOffsetExceededAlarm, pt3080NotifTSPrimaryAlarm=pt3080NotifTSPrimaryAlarm, pt3080SFNAlarmEntry=pt3080SFNAlarmEntry, pt3080RFAlarmActionRelay2=pt3080RFAlarmActionRelay2, pt3080CommsBackupIpMulticastSourceFilterAddress6=pt3080CommsBackupIpMulticastSourceFilterAddress6, pt3080CommsPortCurrentNetmask=pt3080CommsPortCurrentNetmask, pt3080CommsStaticRoutePrefix=pt3080CommsStaticRoutePrefix, pt3080Demodulator2FWVersion=pt3080Demodulator2FWVersion, pt3080ModeConstellation=pt3080ModeConstellation, pt3080CommsStaticDNS2ServerAddress=pt3080CommsStaticDNS2ServerAddress, pt3080CommsAccessAllowedTimeLeft=pt3080CommsAccessAllowedTimeLeft, pt3080ModeMaxNetworkDelayLP=pt3080ModeMaxNetworkDelayLP, pt3080InputTSLpStuffingrate=pt3080InputTSLpStuffingrate, pt3080CommsBackupServiceSCPI=pt3080CommsBackupServiceSCPI, pt3080Demodulator=pt3080Demodulator, pt3080NotifGroupSFNAlarm=pt3080NotifGroupSFNAlarm, pt3080NotifRefenceClockIntern1PPSLossAlarm=pt3080NotifRefenceClockIntern1PPSLossAlarm, pt3080TSoIPRx2CurrentIPAddress=pt3080TSoIPRx2CurrentIPAddress, pt3080NotifGNSSHoldOverAlarm=pt3080NotifGNSSHoldOverAlarm, pt3080Demodulator1Available=pt3080Demodulator1Available, pt3080GpsAltitude=pt3080GpsAltitude, pt3080ExternalAlarmActionEventlog=pt3080ExternalAlarmActionEventlog, pt3080CommsAccessPasswordObserver=pt3080CommsAccessPasswordObserver, pt3080NotifGroupRefenceClockAlarm=pt3080NotifGroupRefenceClockAlarm, pt3080PrecorrectorLinearAdaptiveAmplitudeRippleEnable=pt3080PrecorrectorLinearAdaptiveAmplitudeRippleEnable, pt3080ExternalAlarmActionRelay2=pt3080ExternalAlarmActionRelay2, pt3080InputTSSecondaryMaxMissingmip=pt3080InputTSSecondaryMaxMissingmip, pt3080Notifs=pt3080Notifs, pt3080SystemInstrumentFW4Rev=pt3080SystemInstrumentFW4Rev, pt3080ModeMipControlOutputTimeOffset=pt3080ModeMipControlOutputTimeOffset, pt3080GpsHoldoverTime=pt3080GpsHoldoverTime, pt3080InputRefStatus=pt3080InputRefStatus, pt3080TSoIPRx1PacketsPerFrame=pt3080TSoIPRx1PacketsPerFrame, pt3080TSoIPAlarmActionAlarmLED=pt3080TSoIPAlarmActionAlarmLED, pt3080DemodulatorAlarmActionEventlog=pt3080DemodulatorAlarmActionEventlog, pt3080PrecorrectorSecondsSinceLastUpdate=pt3080PrecorrectorSecondsSinceLastUpdate, pt3080PrecorrectorNonlinearUpdateFactoryCurve=pt3080PrecorrectorNonlinearUpdateFactoryCurve, pt3080NotifTSPrimaryMIPPriorityBadAlarm=pt3080NotifTSPrimaryMIPPriorityBadAlarm, pt3080NotifRFLevelOutOfRangeAlarm=pt3080NotifRFLevelOutOfRangeAlarm, pt3080ASI=pt3080ASI, pt3080TSoIPRx1Multicast=pt3080TSoIPRx1Multicast, pt3080TSoIPRx1CorrectedIPFrames=pt3080TSoIPRx1CorrectedIPFrames, pt3080RFAlarmEntry=pt3080RFAlarmEntry, pt3080InputTSSecondaryMaxMissingmipEnable=pt3080InputTSSecondaryMaxMissingmipEnable, pt3080CommsAlarmActionRelay1=pt3080CommsAlarmActionRelay1, pt3080SystemInstrumentSWRev=pt3080SystemInstrumentSWRev, pt3080ReceptionRFInputLevelThreshold=pt3080ReceptionRFInputLevelThreshold, pt3080OutputRfFrequency=pt3080OutputRfFrequency, pt3080CommsPortIpMulticastSourceFilterAddress5=pt3080CommsPortIpMulticastSourceFilterAddress5, pt3080CommsSNMPTrapDestinationPort=pt3080CommsSNMPTrapDestinationPort)
mibBuilder.exportSymbols("PT3080-MIB", pt3080HWMonitorAlarmID=pt3080HWMonitorAlarmID, pt3080NotifTSPrimaryPCRErrorAlarm=pt3080NotifTSPrimaryPCRErrorAlarm, pt3080NotifGroupTSPrimaryAlarm=pt3080NotifGroupTSPrimaryAlarm, pt3080CommsLocalIpMulticastSourceFilterAddress3=pt3080CommsLocalIpMulticastSourceFilterAddress3, pt3080SystemModulationStandard=pt3080SystemModulationStandard, pt3080NotifInternalDownConverterAlarm=pt3080NotifInternalDownConverterAlarm, pt3080OutputRfAlcSense=pt3080OutputRfAlcSense, pt3080ReceptionIFInputLevel=pt3080ReceptionIFInputLevel, pt3080Output=pt3080Output, pt3080ASIInput1SyncTSSize=pt3080ASIInput1SyncTSSize, pt3080ASIInput1LineErrorRate=pt3080ASIInput1LineErrorRate, pt3080ASIInput2SyncSignal=pt3080ASIInput2SyncSignal, pt3080InputTSPrimaryMaxMissingmipEnable=pt3080InputTSPrimaryMaxMissingmipEnable, pt3080MonitorTSoIPFecRow=pt3080MonitorTSoIPFecRow, pt3080GpsSatelliteSystemGLONASS=pt3080GpsSatelliteSystemGLONASS, pt3080TSoIPRx2LanSelect=pt3080TSoIPRx2LanSelect, pt3080SystemScheduledActionRebootSystemType=pt3080SystemScheduledActionRebootSystemType, pt3080RFAlarmDescription=pt3080RFAlarmDescription, pt3080CommsPortStaticIpAddr=pt3080CommsPortStaticIpAddr, pt3080RFAlarmActionTrap=pt3080RFAlarmActionTrap, pt3080ExternalAlarmActionRelay1=pt3080ExternalAlarmActionRelay1, pt3080ReferenceAlarmActionAlarmLED=pt3080ReferenceAlarmActionAlarmLED, pt3080CommsGbeAdminStaticNetmask=pt3080CommsGbeAdminStaticNetmask, pt3080ModeGuardInterval=pt3080ModeGuardInterval, pt3080SystemScheduledActionPresetNo=pt3080SystemScheduledActionPresetNo, pt3080ReceptionGainCurrent=pt3080ReceptionGainCurrent, pt3080NotifExternalInput8Alarm=pt3080NotifExternalInput8Alarm, pt3080CommsLocalStaticNetmask=pt3080CommsLocalStaticNetmask, pt3080CommsBackupServiceRIP=pt3080CommsBackupServiceRIP, pt3080NotifTSoIPRx2PackageErrorRationExceededAlarm=pt3080NotifTSoIPRx2PackageErrorRationExceededAlarm, pt3080CommsWebServicePort=pt3080CommsWebServicePort, pt3080EventlogGroup=pt3080EventlogGroup, pt3080CommsAccessAllowedTimeout=pt3080CommsAccessAllowedTimeout, pt3080NotifInternalUpConverterAlarm=pt3080NotifInternalUpConverterAlarm, pt3080SystemInstrumentBootLoaderRev=pt3080SystemInstrumentBootLoaderRev, pt3080CommsLocalIpMulticastSourceFilterAddress5=pt3080CommsLocalIpMulticastSourceFilterAddress5, pt3080NotifExternalInput1Alarm=pt3080NotifExternalInput1Alarm, pt3080System=pt3080System, pt3080SystemBackplaneCalibrationSw=pt3080SystemBackplaneCalibrationSw, pt3080SystemScheduledActionAction=pt3080SystemScheduledActionAction, pt3080NotifExternalAlarm=pt3080NotifExternalAlarm, pt3080ModeTxIdent=pt3080ModeTxIdent, pt3080NotifRefenceClockNTPSyncLossAlarm=pt3080NotifRefenceClockNTPSyncLossAlarm, pt3080Demodulator2ActualTimeSlicingLowPrio=pt3080Demodulator2ActualTimeSlicingLowPrio, pt3080PrecorrectorNonlinearAdaptiveMerEnable=pt3080PrecorrectorNonlinearAdaptiveMerEnable, pt3080TSoIPRx2QueueSize=pt3080TSoIPRx2QueueSize, pt3080MonitorTSoIPMulticastLanSelect=pt3080MonitorTSoIPMulticastLanSelect, pt3080CommsSCPIServerBaudrate=pt3080CommsSCPIServerBaudrate, pt3080InputTSPrimaryMaxStuffingrateEnable=pt3080InputTSPrimaryMaxStuffingrateEnable, pt3080PresetRecall=pt3080PresetRecall, pt3080MonitorTSoIPKeepNullPackets=pt3080MonitorTSoIPKeepNullPackets, pt3080TSoIPRx1FecColumn=pt3080TSoIPRx1FecColumn, pt3080EventlogID=pt3080EventlogID, pt3080CommsSNMPTrapCommunity=pt3080CommsSNMPTrapCommunity, pt3080InputTSLpPacketSize=pt3080InputTSLpPacketSize, pt3080RFAlarmActionAlarmLED=pt3080RFAlarmActionAlarmLED, pt3080OutputRfDetectedLowerLevelLimit=pt3080OutputRfDetectedLowerLevelLimit, pt3080GPSAlarmActionForceMode=pt3080GPSAlarmActionForceMode, pt3080PrecorrectorNonlinearMonitorMerValid=pt3080PrecorrectorNonlinearMonitorMerValid, pt3080CommsAlarmActionForceMode=pt3080CommsAlarmActionForceMode, pt3080CommsAlarmActionTrap=pt3080CommsAlarmActionTrap, pt3080TSoIPRx2PacketsPerFrame=pt3080TSoIPRx2PacketsPerFrame, pt3080DemodulatorAlarmActionRelay2=pt3080DemodulatorAlarmActionRelay2, pt3080MonitorTSoIPFecColumn=pt3080MonitorTSoIPFecColumn, pt3080PrecorrectorLinearMonitorSenseValid=pt3080PrecorrectorLinearMonitorSenseValid, pt3080EventlogTimestamp=pt3080EventlogTimestamp, pt3080ModeCodeRateLowPrio=pt3080ModeCodeRateLowPrio, pt3080NotifInternalFirmware1Alarm=pt3080NotifInternalFirmware1Alarm, pt3080InputTSPrimaryMinDelaymarginEnable=pt3080InputTSPrimaryMinDelaymarginEnable, pt3080CommsEmailServerAddress=pt3080CommsEmailServerAddress, pt3080SystemScheduledActionHour=pt3080SystemScheduledActionHour, pt3080CommsRemoteIpMulticastSourceFilterAddress4=pt3080CommsRemoteIpMulticastSourceFilterAddress4, pt3080CommsPortIpMulticastSourceFilterAddress3=pt3080CommsPortIpMulticastSourceFilterAddress3, pt3080ASIInput2SyncTSSize=pt3080ASIInput2SyncTSSize, pt3080CommsGbeAdminEnable=pt3080CommsGbeAdminEnable, pt3080HWMonitorAlarmActionRelay1=pt3080HWMonitorAlarmActionRelay1, pt3080TSoIPRx1IpBitrate=pt3080TSoIPRx1IpBitrate, pt3080NotifTSPrimaryBufferPoolExceededAlarm=pt3080NotifTSPrimaryBufferPoolExceededAlarm, pt3080NotifSFNUntimedModeAlarm=pt3080NotifSFNUntimedModeAlarm, pt3080ASIAlarmActionEventlog=pt3080ASIAlarmActionEventlog, pt3080PresetStore=pt3080PresetStore, pt3080TSoIPRx2PacketErrorRatio=pt3080TSoIPRx2PacketErrorRatio, pt3080GPSAlarmDescription=pt3080GPSAlarmDescription, pt3080CommsRemoteCurrentNetmask=pt3080CommsRemoteCurrentNetmask, pt3080Demodulator2ActualTimeSlicingHighPrio=pt3080Demodulator2ActualTimeSlicingHighPrio, pt3080Demodulator1ActualConstellation=pt3080Demodulator1ActualConstellation, pt3080CommsLocalPhysicalInterface=pt3080CommsLocalPhysicalInterface, pt3080CommsLocalVlanId=pt3080CommsLocalVlanId, pt3080GroupAlarmActionRelay2=pt3080GroupAlarmActionRelay2, pt3080NotifGroupExternalAlarm=pt3080NotifGroupExternalAlarm, pt3080OutputIfEnable=pt3080OutputIfEnable, pt3080Comms=pt3080Comms, pt3080NotifASIAlarm=pt3080NotifASIAlarm, pt3080PresetEntry=pt3080PresetEntry, pt3080OutputIfFrequency=pt3080OutputIfFrequency, pt3080TSoIPAlarmActionEmail=pt3080TSoIPAlarmActionEmail, pt3080MonitorSource=pt3080MonitorSource, pt3080PrecorrectorNonlinearLoadFactory=pt3080PrecorrectorNonlinearLoadFactory, pt3080InputTSHpStuffingrate=pt3080InputTSHpStuffingrate, pt3080ASIInput1DataRate=pt3080ASIInput1DataRate, pt3080CommsBackupDhcpMode=pt3080CommsBackupDhcpMode, pt3080CommsSNMPTrapDestination5=pt3080CommsSNMPTrapDestination5, pt3080OutputMode=pt3080OutputMode, pt3080PrecorrectorLinearAdaptiveGroupDelayTargetLevel=pt3080PrecorrectorLinearAdaptiveGroupDelayTargetLevel, pt3080PrecorrectorClipperMonitorPaprValid=pt3080PrecorrectorClipperMonitorPaprValid, pt3080CommsSNMPTrapDestination=pt3080CommsSNMPTrapDestination, pt3080InputTSLpPacketsBuffered=pt3080InputTSLpPacketsBuffered, pt3080HWMonitorAlarmTable=pt3080HWMonitorAlarmTable, pt3080InputRefCalDate=pt3080InputRefCalDate, pt3080CommsStaticDNS1ServerAddress=pt3080CommsStaticDNS1ServerAddress, pt3080SystemTimezone=pt3080SystemTimezone, pt3080SystemDateTimeSync=pt3080SystemDateTimeSync, pt3080PrecorrectorNonlinearMode=pt3080PrecorrectorNonlinearMode, pt3080NotifTSoIPRx2SyncLossAlarm=pt3080NotifTSoIPRx2SyncLossAlarm, pt3080InputTSSecondaryExpectedNWID=pt3080InputTSSecondaryExpectedNWID, pt3080CommsStaticRouteEntry=pt3080CommsStaticRouteEntry, pt3080NotifSFNFreeRunningModeAlarm=pt3080NotifSFNFreeRunningModeAlarm, pt3080TSoIPAlarmState=pt3080TSoIPAlarmState, pt3080CommsSNMPTrapDestination2=pt3080CommsSNMPTrapDestination2, pt3080GpsSatelliteSystemGPS=pt3080GpsSatelliteSystemGPS, pt3080MonitorTSoIPFecSkew=pt3080MonitorTSoIPFecSkew, pt3080PrecorrectorLinearLoadFactory=pt3080PrecorrectorLinearLoadFactory, pt3080NotifCommeth2Alarm=pt3080NotifCommeth2Alarm, pt3080Demodulator1PreVirterbiErrorRateLimit=pt3080Demodulator1PreVirterbiErrorRateLimit, pt3080ModeNetworkDelayLP=pt3080ModeNetworkDelayLP, pt3080Demodulator2ActualHierarchy=pt3080Demodulator2ActualHierarchy, pt3080SystemReboot=pt3080SystemReboot, pt3080ASITSSecondaryAlarmActionEventlog=pt3080ASITSSecondaryAlarmActionEventlog, pt3080CommsLocalStaticIpAddr=pt3080CommsLocalStaticIpAddr, pt3080ASITSSecondaryAlarmActionTrap=pt3080ASITSSecondaryAlarmActionTrap, pt3080NotifTSoIPAlarm=pt3080NotifTSoIPAlarm, pt3080InputTSHpTSID=pt3080InputTSHpTSID, pt3080OutputRfCableFrequencyLevelOffset4=pt3080OutputRfCableFrequencyLevelOffset4, pt3080CommsRemoteCurrentIpAddr=pt3080CommsRemoteCurrentIpAddr, pt3080ReceptionIFRFtoIFHoldoverDelay=pt3080ReceptionIFRFtoIFHoldoverDelay, pt3080Demodulator1ActualDeepInterleaver=pt3080Demodulator1ActualDeepInterleaver, pt3080CommsBackupIpMulticastSourceFilterAddress4=pt3080CommsBackupIpMulticastSourceFilterAddress4, pt3080ASIInput2DataErrorLimit=pt3080ASIInput2DataErrorLimit, pt3080Demodulator1ActualTimeSlicingHighPrio=pt3080Demodulator1ActualTimeSlicingHighPrio, pt3080ASIInput1DataErrors=pt3080ASIInput1DataErrors, pt3080CommsBackupServiceWeb=pt3080CommsBackupServiceWeb, pt3080CommsGbeAdminIpMulticastSourceFilterAddress3=pt3080CommsGbeAdminIpMulticastSourceFilterAddress3, pt3080DemodulatorAlarmActionRelay1=pt3080DemodulatorAlarmActionRelay1, pt3080CommsStaticGateway=pt3080CommsStaticGateway, pt3080ModeMipControlOutputFreqOffset=pt3080ModeMipControlOutputFreqOffset, pt3080Demodulator2ActualDVBHMode=pt3080Demodulator2ActualDVBHMode, pt3080ASITSPrimaryAlarmDescription=pt3080ASITSPrimaryAlarmDescription, pt3080CommsStaticDNSDomain=pt3080CommsStaticDNSDomain, pt3080CommsRemoteServiceTSoIP=pt3080CommsRemoteServiceTSoIP, pt3080InputTSSecondaryStsJitterMax=pt3080InputTSSecondaryStsJitterMax, pt3080CommsPortIpMulticastSourceFilterAddress2=pt3080CommsPortIpMulticastSourceFilterAddress2, pt3080ASIInput1ClearErrorCounters=pt3080ASIInput1ClearErrorCounters, pt3080SFNAlarmDescription=pt3080SFNAlarmDescription, pt3080TSoIPRx2LostIPFrames=pt3080TSoIPRx2LostIPFrames, pt3080ASITSPrimaryAlarmTable=pt3080ASITSPrimaryAlarmTable, pt3080ReceptionGroup=pt3080ReceptionGroup, pt3080CommsPortStaticNetmask=pt3080CommsPortStaticNetmask, pt3080Demodulator1FWVersion=pt3080Demodulator1FWVersion, pt3080OutputPowerLevel=pt3080OutputPowerLevel, pt3080OutputPolarity=pt3080OutputPolarity, pt3080InputTSSecondaryExpectedNWIDEnable=pt3080InputTSSecondaryExpectedNWIDEnable, pt3080GPSAlarmActionRelay1=pt3080GPSAlarmActionRelay1, pt3080PrecorrectorNonlinearAdaptiveAveraging=pt3080PrecorrectorNonlinearAdaptiveAveraging, pt3080ReceptionIFPolarity=pt3080ReceptionIFPolarity, pt3080ASIInput2SyncStatus=pt3080ASIInput2SyncStatus, pt3080OutputBandwidth=pt3080OutputBandwidth, pt3080SystemScheduledActionID=pt3080SystemScheduledActionID, pt3080ModeMipControlOutputCellId=pt3080ModeMipControlOutputCellId, pt3080GroupAlarmActionEventlog=pt3080GroupAlarmActionEventlog, pt3080CommsPortIpMulticastSourceFilterAddress1=pt3080CommsPortIpMulticastSourceFilterAddress1, pt3080TestEnable=pt3080TestEnable, pt3080PrecorrectorNonlinearMonitorSenseBadCount=pt3080PrecorrectorNonlinearMonitorSenseBadCount, pt3080PrecorrectorNonlinearAdaptiveUpperShoulderTargetHysteresis=pt3080PrecorrectorNonlinearAdaptiveUpperShoulderTargetHysteresis, pt3080Compliance=pt3080Compliance, pt3080CommsGbeAdminIpMulticastAddr=pt3080CommsGbeAdminIpMulticastAddr, pt3080InputEffectiveAutoroutingPolicy=pt3080InputEffectiveAutoroutingPolicy, pt3080Demodulator2ActualGuardInterval=pt3080Demodulator2ActualGuardInterval, pt3080GroupAlarmEntry=pt3080GroupAlarmEntry, pt3080TSoIPRx2IpBitrate=pt3080TSoIPRx2IpBitrate, pt3080ReceptionTunerHWCalibrationDataVersion=pt3080ReceptionTunerHWCalibrationDataVersion, pt3080Backplane=pt3080Backplane, pt3080CommsRemoteServiceRIP=pt3080CommsRemoteServiceRIP, pt3080InputRef1PPSTrigLevel=pt3080InputRef1PPSTrigLevel, pt3080Demodulator1FelStatus=pt3080Demodulator1FelStatus, pt3080InputRef1PPSTrigSlope=pt3080InputRef1PPSTrigSlope, pt3080CommsLocalIpMulticastSourceFilterAddress6=pt3080CommsLocalIpMulticastSourceFilterAddress6, pt3080ModeDefaultMIPOutputFreqOffset=pt3080ModeDefaultMIPOutputFreqOffset, pt3080SystemImage0Version=pt3080SystemImage0Version, pt3080ASIInput2DataErrors=pt3080ASIInput2DataErrors, pt3080InputRef10MhzImpedance=pt3080InputRef10MhzImpedance, pt3080ASIInput1SyncTimeout=pt3080ASIInput1SyncTimeout, pt3080ASIInput1SyncStatus=pt3080ASIInput1SyncStatus, pt3080OutputChannel=pt3080OutputChannel, pt3080OutputActualLevel=pt3080OutputActualLevel, pt3080GpsTrackedSatellites=pt3080GpsTrackedSatellites, pt3080InputTSLpTSID=pt3080InputTSLpTSID, pt3080MonitorTSoIPPacketsPerFrame=pt3080MonitorTSoIPPacketsPerFrame, pt3080GPSAlarmState=pt3080GPSAlarmState, pt3080EventlogNo=pt3080EventlogNo, pt3080NotifASIASI2ErrorRateEceeededAlarm=pt3080NotifASIASI2ErrorRateEceeededAlarm, pt3080EventlogMode=pt3080EventlogMode, pt3080ReceptionRFPolarity=pt3080ReceptionRFPolarity, pt3080InputTSHpPacketSize=pt3080InputTSHpPacketSize, pt3080GPSAlarmTable=pt3080GPSAlarmTable, pt3080PrecorrectorClipperMode=pt3080PrecorrectorClipperMode, pt3080ASIInput1LineRate=pt3080ASIInput1LineRate, pt3080TSoIPRx2PacketErrorRatioLimit=pt3080TSoIPRx2PacketErrorRatioLimit, pt3080SystemScheduledActionWeekday=pt3080SystemScheduledActionWeekday, pt3080InputTSHpPacketsBuffered=pt3080InputTSHpPacketsBuffered, pt3080SFNAlarmActionTrap=pt3080SFNAlarmActionTrap, pt3080CommsBackupIpMulticastSourceFilterAddress3=pt3080CommsBackupIpMulticastSourceFilterAddress3, pt3080NotifHWMonitorLeftFanAlarm=pt3080NotifHWMonitorLeftFanAlarm, pt3080GPSAlarmActionEventlog=pt3080GPSAlarmActionEventlog, pt3080CommsPortIpMulticastSourceFilterMode=pt3080CommsPortIpMulticastSourceFilterMode, pt3080PrecorrectorLinearAdaptiveAmplitudeRippleTargetLevel=pt3080PrecorrectorLinearAdaptiveAmplitudeRippleTargetLevel, pt3080Demodulator1ActualMpeFecLowPrio=pt3080Demodulator1ActualMpeFecLowPrio, pt3080SystemInstrumentFW3Rev=pt3080SystemInstrumentFW3Rev, pt3080ModeMipControl=pt3080ModeMipControl, pt3080GpsHoldoverForever=pt3080GpsHoldoverForever, pt3080HWMonitorAlarmEntry=pt3080HWMonitorAlarmEntry, pt3080CommsCurrentDNS1ServerAddress=pt3080CommsCurrentDNS1ServerAddress, pt3080SystemScheduledActionSWUpgradePassword=pt3080SystemScheduledActionSWUpgradePassword, pt3080CommsRipPort=pt3080CommsRipPort, pt3080OutputRfDetectedLowerLevelcontrol=pt3080OutputRfDetectedLowerLevelcontrol, pt3080CommsAlarmTable=pt3080CommsAlarmTable, pt3080SystemOperationNumberOfBoots=pt3080SystemOperationNumberOfBoots, pt3080CommsAlarmDescription=pt3080CommsAlarmDescription, pt3080NotifGroupTSSecondaryAlarm=pt3080NotifGroupTSSecondaryAlarm, pt3080ModeDefaultMIPOutputPower=pt3080ModeDefaultMIPOutputPower, pt3080ReceptionRFFrequencyOffset=pt3080ReceptionRFFrequencyOffset, pt3080OutputRfAlcSetpointPort1=pt3080OutputRfAlcSetpointPort1, pt3080NotifCommeth4Alarm=pt3080NotifCommeth4Alarm, pt3080ASIAlarmActionForceMode=pt3080ASIAlarmActionForceMode, pt3080ASIInput2DataErrorRate=pt3080ASIInput2DataErrorRate, pt3080ASIInput1DataErrorLimit=pt3080ASIInput1DataErrorLimit, pt3080PresetNo=pt3080PresetNo, pt3080DemodulatorAlarmID=pt3080DemodulatorAlarmID, pt3080PrecorrectorLinearAdaptiveGroupDelayEnable=pt3080PrecorrectorLinearAdaptiveGroupDelayEnable, pt3080ASIAlarmState=pt3080ASIAlarmState, pt3080Notif=pt3080Notif, pt3080OutputRfCableFrequencyLevelOffset0=pt3080OutputRfCableFrequencyLevelOffset0, pt3080TestscarrierFrequencyOffset=pt3080TestscarrierFrequencyOffset, pt3080InputTSSecondaryMaxStsJitter=pt3080InputTSSecondaryMaxStsJitter, pt3080ASIAlarmTable=pt3080ASIAlarmTable, pt3080CommsAlarmActionAlarmLED=pt3080CommsAlarmActionAlarmLED, pt3080NotifHWMonitorFPGAAlarm=pt3080NotifHWMonitorFPGAAlarm, pt3080ASIInput2LineErrors=pt3080ASIInput2LineErrors, pt3080SystemBackplaneIdRaw=pt3080SystemBackplaneIdRaw, pt3080ExternalAlarmDescription=pt3080ExternalAlarmDescription, pt3080InternalAlarmActionTrap=pt3080InternalAlarmActionTrap, pt3080InputTSSecondaryMaxStuffingrate=pt3080InputTSSecondaryMaxStuffingrate, pt3080CommsPortDhcpMode=pt3080CommsPortDhcpMode, pt3080CommsLocalIpMulticastSourceFilterAddress1=pt3080CommsLocalIpMulticastSourceFilterAddress1, pt3080Demodulator2PostVirterbiErrorRateLimit=pt3080Demodulator2PostVirterbiErrorRateLimit)
mibBuilder.exportSymbols("PT3080-MIB", pt3080ReceptionIFInputPolicy=pt3080ReceptionIFInputPolicy, pt3080SystemScheduledActionSWUpgradeImagePath=pt3080SystemScheduledActionSWUpgradeImagePath, pt3080PrecorrectorLinearAdaptiveAmplitudeRippleTargetHysteresis=pt3080PrecorrectorLinearAdaptiveAmplitudeRippleTargetHysteresis, pt3080EventlogEntry=pt3080EventlogEntry, pt3080ASIInput2ClearErrorCounters=pt3080ASIInput2ClearErrorCounters, pt3080PrecorrectorLinearMonitorGroupDelay=pt3080PrecorrectorLinearMonitorGroupDelay, pt3080CommsAccessAllowed=pt3080CommsAccessAllowed, pt3080ASITSPrimaryAlarmActionForceMode=pt3080ASITSPrimaryAlarmActionForceMode, pt3080ExternalAlarmID=pt3080ExternalAlarmID, pt3080InputASIAutoRoutingDelayHp2Lp=pt3080InputASIAutoRoutingDelayHp2Lp, pt3080CommsIGMPVersion=pt3080CommsIGMPVersion, pt3080ReceptionIFFrequency=pt3080ReceptionIFFrequency, pt3080Demodulator1PostVirterbiErrorRateLimit=pt3080Demodulator1PostVirterbiErrorRateLimit, pt3080NotifGroupTSoIPAlarm=pt3080NotifGroupTSoIPAlarm, pt3080TSoIPRx2MinumimLatency=pt3080TSoIPRx2MinumimLatency, pt3080InputTSPrimaryStatus=pt3080InputTSPrimaryStatus, pt3080Demodulator1ActualHierarchy=pt3080Demodulator1ActualHierarchy, pt3080CommsRemoteEnable=pt3080CommsRemoteEnable, pt3080ModeCodeRateHighPrio=pt3080ModeCodeRateHighPrio, pt3080CommsRemoteVlanId=pt3080CommsRemoteVlanId, pt3080Preset=pt3080Preset, pt3080PrecorrectorNonlinearAdaptiveMerTarget=pt3080PrecorrectorNonlinearAdaptiveMerTarget, pt3080ModeNetworkDelayMaxLP=pt3080ModeNetworkDelayMaxLP, pt3080CommsCurrentDNS3ServerAddress=pt3080CommsCurrentDNS3ServerAddress, pt3080NotifTSSecondaryNWIDWrongAlarm=pt3080NotifTSSecondaryNWIDWrongAlarm, pt3080InputTSSecondaryMaxStuffingrateEnable=pt3080InputTSSecondaryMaxStuffingrateEnable, pt3080ASIInput1SyncSignal=pt3080ASIInput1SyncSignal, pt3080TSoIPRx2SyncTimeout=pt3080TSoIPRx2SyncTimeout, pt3080ASITSSecondaryAlarmDescription=pt3080ASITSSecondaryAlarmDescription, pt3080GPSAlarmActionEmail=pt3080GPSAlarmActionEmail, pt3080GpsVisibleSatellitesSnr=pt3080GpsVisibleSatellitesSnr, pt3080ReceptionGainControl=pt3080ReceptionGainControl, pt3080PrecorrectorLinearMonitorSenseBadCount=pt3080PrecorrectorLinearMonitorSenseBadCount, pt3080NotifHWMonitorMainBoardCPUTemperatureAlarm=pt3080NotifHWMonitorMainBoardCPUTemperatureAlarm, pt3080CommsRemoteStaticIpAddr=pt3080CommsRemoteStaticIpAddr, pt3080CommsBackupCurrentIpAddr=pt3080CommsBackupCurrentIpAddr, pt3080InputTSPrimaryMaxMissingmip=pt3080InputTSPrimaryMaxMissingmip, pt3080ReferenceAlarmActionEmail=pt3080ReferenceAlarmActionEmail, pt3080ModeNetworkDelayMarginHP=pt3080ModeNetworkDelayMarginHP, pt3080NotifTSPrimaryNWIDWrongAlarm=pt3080NotifTSPrimaryNWIDWrongAlarm, pt3080SystemOperationOnTime=pt3080SystemOperationOnTime, pt3080Gps=pt3080Gps, pt3080ReceptionRFNominalInputLevel=pt3080ReceptionRFNominalInputLevel, pt3080Demodulator2ActualMpeFecHighPrio=pt3080Demodulator2ActualMpeFecHighPrio, pt3080MonitorTSoIPDestIPAddress=pt3080MonitorTSoIPDestIPAddress, pt3080OutputIfLevel=pt3080OutputIfLevel, pt3080SFNAlarmID=pt3080SFNAlarmID, pt3080ReferenceAlarmState=pt3080ReferenceAlarmState, pt3080EventlogClear=pt3080EventlogClear, pt3080InputTSPrimaryMaxPATDelay=pt3080InputTSPrimaryMaxPATDelay, pt3080NotifSFNTSSecondaryMaxDelayOffsetExceededAlarm=pt3080NotifSFNTSSecondaryMaxDelayOffsetExceededAlarm, pt3080Demodulator1PreVirterbiErrorRate=pt3080Demodulator1PreVirterbiErrorRate, pt3080PrecorrectorClipperAdaptive=pt3080PrecorrectorClipperAdaptive, pt3080NotifHWMonitorMainBoardTemperatureAlarm=pt3080NotifHWMonitorMainBoardTemperatureAlarm, pt3080NotifTSSecondaryAlarm=pt3080NotifTSSecondaryAlarm, pt3080SystemCurrentImage=pt3080SystemCurrentImage, pt3080SFNAlarmActionRelay2=pt3080SFNAlarmActionRelay2, pt3080CommsLocalCurrentIpAddr=pt3080CommsLocalCurrentIpAddr, pt3080NotifTSSecondaryDelayMarginAlarm=pt3080NotifTSSecondaryDelayMarginAlarm, pt3080SystemScheduledActionSWUpgradeUsername=pt3080SystemScheduledActionSWUpgradeUsername, pt3080ReceptionAGCMode=pt3080ReceptionAGCMode, pt3080PresetName=pt3080PresetName, pt3080PrecorrectorNonlinearAttenuation=pt3080PrecorrectorNonlinearAttenuation, pt3080NotifTSPrimaryStuffingRateExceededAlarm=pt3080NotifTSPrimaryStuffingRateExceededAlarm, pt3080NotifSFNTSPrimaryNetworkDelayExceededAlarm=pt3080NotifSFNTSPrimaryNetworkDelayExceededAlarm, pt3080NotifGroupGNSSAlarm=pt3080NotifGroupGNSSAlarm, pt3080PrecorrectorNonlinearMonitorUpperShoulderValid=pt3080PrecorrectorNonlinearMonitorUpperShoulderValid, pt3080PrecorrectorClipperMonitorStatus=pt3080PrecorrectorClipperMonitorStatus, pt3080GpsLatitude=pt3080GpsLatitude, pt3080SystemScheduledActionDate=pt3080SystemScheduledActionDate, pt3080ASITSPrimaryAlarmState=pt3080ASITSPrimaryAlarmState, pt3080CommsBackupIpMulticastSourceFilterAddress5=pt3080CommsBackupIpMulticastSourceFilterAddress5, pt3080ModeNetworkDelayMinLP=pt3080ModeNetworkDelayMinLP, pt3080CommsLocalIpMulticastAddr=pt3080CommsLocalIpMulticastAddr, pt3080CommsGbeAdminCurrentIpAddr=pt3080CommsGbeAdminCurrentIpAddr, pt3080CommsStaticHostname=pt3080CommsStaticHostname, pt3080TSoIPRx1SequenceErrors=pt3080TSoIPRx1SequenceErrors, pt3080TSoIPRx2CurrentLatency=pt3080TSoIPRx2CurrentLatency, pt3080HWMonitorAlarmState=pt3080HWMonitorAlarmState, pt3080CommsCurrentDNS2ServerAddress=pt3080CommsCurrentDNS2ServerAddress, pt3080InputTSPrimaryStsJitterMax=pt3080InputTSPrimaryStsJitterMax, pt3080MonitorTSoIPTSSize=pt3080MonitorTSoIPTSSize, pt3080ReceptionIFIFtoRFHoldoverDelay=pt3080ReceptionIFIFtoRFHoldoverDelay, pt3080GroupAlarmActionEmail=pt3080GroupAlarmActionEmail, pt3080OutputRfFrequencyOffset=pt3080OutputRfFrequencyOffset, pt3080DemodulatorFollowMode=pt3080DemodulatorFollowMode, pt3080PrecorrectorNonlinearLoadNeutral=pt3080PrecorrectorNonlinearLoadNeutral, pt3080CommsAlarmEmailReceiver=pt3080CommsAlarmEmailReceiver, pt3080TSoIPAlarmEntry=pt3080TSoIPAlarmEntry, pt3080ExternalAlarmActionEmail=pt3080ExternalAlarmActionEmail, pt3080NotifRefenceClockExternal10MHzHoldOverAlarm=pt3080NotifRefenceClockExternal10MHzHoldOverAlarm, pt3080CommsStaticRouteTable=pt3080CommsStaticRouteTable, pt3080InputTSPrimaryMinDelaymargin=pt3080InputTSPrimaryMinDelaymargin, pt3080CommsBackupServiceTSoIP=pt3080CommsBackupServiceTSoIP, pt3080InputTSSecondaryStsJitter=pt3080InputTSSecondaryStsJitter, pt3080OutputRfAlcStatusInformation=pt3080OutputRfAlcStatusInformation, pt3080Demodulator2ActualConstellation=pt3080Demodulator2ActualConstellation, pt3080CommsRemoteServiceSNMP=pt3080CommsRemoteServiceSNMP, pt3080CommsBackupIpMulticastSourceFilterAddress2=pt3080CommsBackupIpMulticastSourceFilterAddress2, pt3080InputRef1PPSImpedance=pt3080InputRef1PPSImpedance, pt3080=pt3080, pt3080InputASIHoldoverTimeout=pt3080InputASIHoldoverTimeout, pt3080CommsRemoteServiceSCPI=pt3080CommsRemoteServiceSCPI, pt3080HWMonitorAlarmActionRelay2=pt3080HWMonitorAlarmActionRelay2, pt3080NotifExternalInput7Alarm=pt3080NotifExternalInput7Alarm, pt3080NotifInternalBatteryAlarm=pt3080NotifInternalBatteryAlarm, pt3080Alarm=pt3080Alarm, pt3080NotifRFOverloadProtectionAlarm=pt3080NotifRFOverloadProtectionAlarm, pt3080InputRef1PPSHoldoverDelay=pt3080InputRef1PPSHoldoverDelay, pt3080CommsIGMPQueryRobustnessCount=pt3080CommsIGMPQueryRobustnessCount, pt3080SystemRebootDefaultConfig=pt3080SystemRebootDefaultConfig, pt3080Demodulator1ActualDVBHMode=pt3080Demodulator1ActualDVBHMode, pt3080CommsGbeAdminServiceSCPI=pt3080CommsGbeAdminServiceSCPI, pt3080NotifRFAlcRangeAlarm=pt3080NotifRFAlcRangeAlarm, pt3080SystemScheduledActionRebootImage=pt3080SystemScheduledActionRebootImage, pt3080RFAlarmActionRelay1=pt3080RFAlarmActionRelay1, pt3080InternalAlarmDescription=pt3080InternalAlarmDescription, pt3080CommsBackupIpMulticastAddr=pt3080CommsBackupIpMulticastAddr, pt3080PrecorrectorNonlinearMonitorIterations=pt3080PrecorrectorNonlinearMonitorIterations, pt3080OutputEffectiveLevel=pt3080OutputEffectiveLevel, pt3080InputTSPrimaryStsJitterMin=pt3080InputTSPrimaryStsJitterMin, pt3080TSoIPRx1MinumimLatency=pt3080TSoIPRx1MinumimLatency, pt3080ASITSPrimaryAlarmActionTrap=pt3080ASITSPrimaryAlarmActionTrap, pt3080ExternalAlarmTable=pt3080ExternalAlarmTable, pt3080OutputRfCableFrequencyLevelOffset1=pt3080OutputRfCableFrequencyLevelOffset1, pt3080Monitor=pt3080Monitor, pt3080PrecorrectorClipperMonitorShoulderLevelUpperValid=pt3080PrecorrectorClipperMonitorShoulderLevelUpperValid, pt3080SystemInstrumentType=pt3080SystemInstrumentType, pt3080ReceptionTunerHWVersion=pt3080ReceptionTunerHWVersion, pt3080CommsAlarmState=pt3080CommsAlarmState, pt3080NotifExternalInput3Alarm=pt3080NotifExternalInput3Alarm, pt3080CommsStaticRouteTarget=pt3080CommsStaticRouteTarget, pt3080CommsCurrentDNSDomain=pt3080CommsCurrentDNSDomain, pt3080CommsSCPIUartInterface=pt3080CommsSCPIUartInterface, pt3080InternalAlarmEntry=pt3080InternalAlarmEntry, pt3080GpsSatelliteSystemCOMPASS=pt3080GpsSatelliteSystemCOMPASS, pt3080GroupAlarmID=pt3080GroupAlarmID, pt3080CommsSeparatedSwitchPorts=pt3080CommsSeparatedSwitchPorts, pt3080CommsGbeAdminIpMulticastSourceFilterAddress1=pt3080CommsGbeAdminIpMulticastSourceFilterAddress1, pt3080CommsSCPIServicePort=pt3080CommsSCPIServicePort, pt3080GroupAlarmActionForceMode=pt3080GroupAlarmActionForceMode, pt3080DemodulatorAlarmState=pt3080DemodulatorAlarmState, pt3080Demodulator2Actualifft=pt3080Demodulator2Actualifft, pt3080OutputRfCableMode=pt3080OutputRfCableMode, pt3080CommsLocalCurrentNetmask=pt3080CommsLocalCurrentNetmask, pt3080TestScarrierLevel=pt3080TestScarrierLevel, pt3080NotifInternalMainboardAlarm=pt3080NotifInternalMainboardAlarm, pt3080PrecorrectorNonlinearMonitorLowerShoulderLevel=pt3080PrecorrectorNonlinearMonitorLowerShoulderLevel, pt3080SystemImage0InstalledDate=pt3080SystemImage0InstalledDate, pt3080ReceptionRFSquelchEnable=pt3080ReceptionRFSquelchEnable, pt3080ASITSSecondaryAlarmActionForceMode=pt3080ASITSSecondaryAlarmActionForceMode, pt3080Input=pt3080Input, pt3080CommsGbeAdminDhcpMode=pt3080CommsGbeAdminDhcpMode, pt3080BackplaneGroup=pt3080BackplaneGroup, pt3080ModeCellID=pt3080ModeCellID, pt3080CommsGbeAdminServiceWeb=pt3080CommsGbeAdminServiceWeb, pt3080ModeMaxNetworkDelayHP=pt3080ModeMaxNetworkDelayHP, pt3080ModeEnableDVBH=pt3080ModeEnableDVBH, pt3080SFNAlarmActionAlarmLED=pt3080SFNAlarmActionAlarmLED, pt3080ModeMfnKeepNullPackets=pt3080ModeMfnKeepNullPackets, pt3080SystemBackplaneIdPartlist=pt3080SystemBackplaneIdPartlist, pt3080CommsGbeAdminIpMulticastSourceFilterAddress4=pt3080CommsGbeAdminIpMulticastSourceFilterAddress4, pt3080ExternalAlarmActionForceMode=pt3080ExternalAlarmActionForceMode, pt3080CommsRemoteIpMulticastSourceFilterAddress6=pt3080CommsRemoteIpMulticastSourceFilterAddress6, pt3080ReceptionGainManualValue=pt3080ReceptionGainManualValue, pt3080PrecorrectorLinCleanrun=pt3080PrecorrectorLinCleanrun, pt3080InputRef1PPSHoldoverForever=pt3080InputRef1PPSHoldoverForever, pt3080NotifCommeth3Alarm=pt3080NotifCommeth3Alarm, pt3080NotifExternalInput2Alarm=pt3080NotifExternalInput2Alarm, pt3080MonitorTSoIPTTL=pt3080MonitorTSoIPTTL, pt3080PrecorrectorClipperEnable=pt3080PrecorrectorClipperEnable, pt3080NotifTSPrimaryPATLossAlarm=pt3080NotifTSPrimaryPATLossAlarm, pt3080InputTSSecondaryExpectedTSID=pt3080InputTSSecondaryExpectedTSID, pt3080Demodulator1Mer=pt3080Demodulator1Mer, pt3080NotifTSoIPRx1SyncLossAlarm=pt3080NotifTSoIPRx1SyncLossAlarm, pt3080HWMonitorAlarmActionAlarmLED=pt3080HWMonitorAlarmActionAlarmLED, pt3080ASITSPrimaryAlarmActionRelay1=pt3080ASITSPrimaryAlarmActionRelay1, pt3080ModeGroup=pt3080ModeGroup, pt3080InputTSLpBitrate=pt3080InputTSLpBitrate, pt3080TSoIPRx2TSPacketSize=pt3080TSoIPRx2TSPacketSize, pt3080SystemScheduledActionRandomDelay=pt3080SystemScheduledActionRandomDelay, pt3080PresetTable=pt3080PresetTable, pt3080ASITSSecondaryAlarmActionRelay1=pt3080ASITSSecondaryAlarmActionRelay1, pt3080ASIAlarmDescription=pt3080ASIAlarmDescription, pt3080CommsGbeAdminIpMulticastSourceFilterAddress2=pt3080CommsGbeAdminIpMulticastSourceFilterAddress2, pt3080CommsPortIpMulticastSourceFilterAddress6=pt3080CommsPortIpMulticastSourceFilterAddress6, pt3080InputRefSource=pt3080InputRefSource, pt3080OutputIfPolarity=pt3080OutputIfPolarity, pt3080NotifSFNTSSecondarySeamlessDelayTooSmallAlarm=pt3080NotifSFNTSSecondarySeamlessDelayTooSmallAlarm, pt3080MonitorTSoIPGenerateError=pt3080MonitorTSoIPGenerateError, pt3080InternalAlarmActionEventlog=pt3080InternalAlarmActionEventlog, pt3080PresetGroup=pt3080PresetGroup, pt3080CommsStaticRoutePrefixSize=pt3080CommsStaticRoutePrefixSize, pt3080ReceptionTunerHWID=pt3080ReceptionTunerHWID, pt3080GPSAlarmActionAlarmLED=pt3080GPSAlarmActionAlarmLED, pt3080CommsPortServiceTSoIP=pt3080CommsPortServiceTSoIP, pt3080PrecorrectorNonlinearMonitorUpperShoulderLevel=pt3080PrecorrectorNonlinearMonitorUpperShoulderLevel, pt3080CommsLocalServiceTSoIP=pt3080CommsLocalServiceTSoIP, pt3080PrecorrectorLinearUpdateFactoryCurve=pt3080PrecorrectorLinearUpdateFactoryCurve, pt3080GroupAlarmTable=pt3080GroupAlarmTable, pt3080ReceptionTunerHWCalibrationSWVersion=pt3080ReceptionTunerHWCalibrationSWVersion, pt3080InternalAlarmActionRelay1=pt3080InternalAlarmActionRelay1, pt3080SystemType=pt3080SystemType, pt3080InputASIAutoRoutingPolicy=pt3080InputASIAutoRoutingPolicy, pt3080CommsSNMPTrapDestinationPort3=pt3080CommsSNMPTrapDestinationPort3, pt3080Demodulator2ActualCodeRateHighPrio=pt3080Demodulator2ActualCodeRateHighPrio, pt3080ASITSSecondaryAlarmActionEmail=pt3080ASITSSecondaryAlarmActionEmail, pt3080PrecorrectorClipperAdaptiveMode=pt3080PrecorrectorClipperAdaptiveMode, pt3080SystemImage1InstalledDate=pt3080SystemImage1InstalledDate, pt3080ReceptionRFInputLevelHysteresis=pt3080ReceptionRFInputLevelHysteresis, pt3080CommsAlarmActionRelay2=pt3080CommsAlarmActionRelay2, pt3080InputRef10MhzHoldoverForever=pt3080InputRef10MhzHoldoverForever, pt3080OutputRfDetectedActualLevel=pt3080OutputRfDetectedActualLevel, pt3080ASIInput2SyncTimeout=pt3080ASIInput2SyncTimeout, pt3080CommsCurrentHostname=pt3080CommsCurrentHostname, pt3080ReceptionTunerHWType=pt3080ReceptionTunerHWType, pt3080InputTSHpBitrate=pt3080InputTSHpBitrate, pt3080NotifExternalInput5Alarm=pt3080NotifExternalInput5Alarm, pt3080CommsCurrentNtpServerAddress=pt3080CommsCurrentNtpServerAddress, pt3080NotifRefenceClockExternal1PPSHoldOverAlarm=pt3080NotifRefenceClockExternal1PPSHoldOverAlarm, pt3080Compliances=pt3080Compliances, pt3080SystemLanguage=pt3080SystemLanguage, pt3080TSoIPRx2Multicast=pt3080TSoIPRx2Multicast, pt3080HWMonitorAlarmActionEmail=pt3080HWMonitorAlarmActionEmail, pt3080SystemBackplaneIdPcb=pt3080SystemBackplaneIdPcb, pt3080Demodulator1ActualMpeFecHighPrio=pt3080Demodulator1ActualMpeFecHighPrio, pt3080Demodulator2Mer=pt3080Demodulator2Mer, pt3080CommsStaticDNS3ServerAddress=pt3080CommsStaticDNS3ServerAddress, pt3080NotifASIASI1ErrorRateEceeededAlarm=pt3080NotifASIASI1ErrorRateEceeededAlarm, pt3080TSoIPRx2ReceiverEnable=pt3080TSoIPRx2ReceiverEnable, pt3080ReceptionAGCHysteresis=pt3080ReceptionAGCHysteresis, pt3080PrecorrectorNonlinearMonitorPaprValid=pt3080PrecorrectorNonlinearMonitorPaprValid, pt3080ModeNetworkDelayMinHP=pt3080ModeNetworkDelayMinHP, pt3080PrecorrectorLinearMonitorSenseLevel=pt3080PrecorrectorLinearMonitorSenseLevel, pt3080TSoIPAlarmActionEventlog=pt3080TSoIPAlarmActionEventlog, pt3080CommsBroadcastStormProtection=pt3080CommsBroadcastStormProtection, pt3080PrecorrectorNonlinearAdaptiveUpperShoulderTargetLevel=pt3080PrecorrectorNonlinearAdaptiveUpperShoulderTargetLevel, pt3080CommsLocalServiceSCPI=pt3080CommsLocalServiceSCPI, pt3080GpsGroup=pt3080GpsGroup, pt3080Demodulator2ActualCellID=pt3080Demodulator2ActualCellID, pt3080PrecorrectorPaprShaping=pt3080PrecorrectorPaprShaping, pt3080NotifHWMonitorAlarm=pt3080NotifHWMonitorAlarm, pt3080TSoIPRx1QueueSize=pt3080TSoIPRx1QueueSize, pt3080ASIInput1LineErrors=pt3080ASIInput1LineErrors, pt3080CommsRemoteIpMulticastSourceFilterAddress5=pt3080CommsRemoteIpMulticastSourceFilterAddress5, pt3080Demodulator1ActualCodeRateHighPrio=pt3080Demodulator1ActualCodeRateHighPrio, pt3080BackplanePolarityHardMute=pt3080BackplanePolarityHardMute, pt3080NotifGroupCommAlarm=pt3080NotifGroupCommAlarm, pt3080TSoIPRx1PacketErrorRatioLimit=pt3080TSoIPRx1PacketErrorRatioLimit, pt3080CommsRemoteIpMulticastSourceFilterMode=pt3080CommsRemoteIpMulticastSourceFilterMode, pt3080ASIAlarmActionAlarmLED=pt3080ASIAlarmActionAlarmLED, pt3080PrecorrectorLinearAttenuation=pt3080PrecorrectorLinearAttenuation, pt3080PrecorrectorNonlinearAdaptiveMerTargetHysteresis=pt3080PrecorrectorNonlinearAdaptiveMerTargetHysteresis, pt3080SystemDateTimeSyncActual=pt3080SystemDateTimeSyncActual)
mibBuilder.exportSymbols("PT3080-MIB", pt3080SystemInstrumentFW1RevBL=pt3080SystemInstrumentFW1RevBL, pt3080NotifTSSecondaryPCRErrorAlarm=pt3080NotifTSSecondaryPCRErrorAlarm, pt3080InputTSPrimaryMaxStsJitter=pt3080InputTSPrimaryMaxStsJitter, pt3080RFAlarmActionEventlog=pt3080RFAlarmActionEventlog, pt3080NotifModulatorAlarm=pt3080NotifModulatorAlarm, pt3080NotifGroupRFAlarm=pt3080NotifGroupRFAlarm, pt3080NotifInternalSatelliteAlarm=pt3080NotifInternalSatelliteAlarm, pt3080PrecorrectorLinearAdaptive=pt3080PrecorrectorLinearAdaptive, pt3080ModeMIPMaxSFNDelay=pt3080ModeMIPMaxSFNDelay, pt3080ReceptionRFSquelchThreshold=pt3080ReceptionRFSquelchThreshold, pt3080InternalAlarmActionEmail=pt3080InternalAlarmActionEmail, pt3080MonitorGroup=pt3080MonitorGroup, pt3080ASITSSecondaryAlarmEntry=pt3080ASITSSecondaryAlarmEntry, pt3080InputTSSecondaryExpectedTSIDEnable=pt3080InputTSSecondaryExpectedTSIDEnable, pt3080PrecorrectorClipperAdaptiveShaping=pt3080PrecorrectorClipperAdaptiveShaping, pt3080Agent=pt3080Agent, pt3080PrecorrectorClipperMonitorShoulderLevelLowerValid=pt3080PrecorrectorClipperMonitorShoulderLevelLowerValid, pt3080Demodulator2OutputTS=pt3080Demodulator2OutputTS, pt3080NotifLocalTime=pt3080NotifLocalTime, pt3080GpsState=pt3080GpsState, pt3080ASIAlarmEntry=pt3080ASIAlarmEntry, pt3080CommsLocalIpMulticastSourceFilterMode=pt3080CommsLocalIpMulticastSourceFilterMode, pt3080MonitorTSoIPLostIPFrames=pt3080MonitorTSoIPLostIPFrames, pt3080CommsGbeAdminCurrentNetmask=pt3080CommsGbeAdminCurrentNetmask, pt3080Demodulator1OutputTS=pt3080Demodulator1OutputTS, pt3080CommsPortServiceSNMP=pt3080CommsPortServiceSNMP, pt3080PrecorrectorClipperMonitorPapr=pt3080PrecorrectorClipperMonitorPapr, pt3080PrecorrectorLinearMonitorDiscartedIterations=pt3080PrecorrectorLinearMonitorDiscartedIterations, pt3080NotifTSSecondarySyncErrorAlarm=pt3080NotifTSSecondarySyncErrorAlarm, pt3080CommsIGMPv2UnsolicitedReportInterval=pt3080CommsIGMPv2UnsolicitedReportInterval, pt3080TSoIPAlarmID=pt3080TSoIPAlarmID, pt3080SystemServiceLED=pt3080SystemServiceLED, pt3080CommsSNMPTrapDestination4=pt3080CommsSNMPTrapDestination4, pt3080NotifInternalReferenceClockAlarm=pt3080NotifInternalReferenceClockAlarm, pt3080PrecorrectorLinearLoadNeutral=pt3080PrecorrectorLinearLoadNeutral, pt3080NotificationsGroups=pt3080NotificationsGroups, pt3080TSoIPRx1CurrentIPAddress=pt3080TSoIPRx1CurrentIPAddress, pt3080SystemScheduledActionRecurrence=pt3080SystemScheduledActionRecurrence, pt3080SystemDateTime=pt3080SystemDateTime, pt3080NotifTSSecondaryPATLossAlarm=pt3080NotifTSSecondaryPATLossAlarm, pt3080TSoIPAlarmActionForceMode=pt3080TSoIPAlarmActionForceMode, pt3080CommsSNMPServicePort=pt3080CommsSNMPServicePort, pt3080Gps1PPSStatus=pt3080Gps1PPSStatus, pt3080TSoIPAlarmActionTrap=pt3080TSoIPAlarmActionTrap, pt3080CommsLocalIpMulticastSourceFilterAddress4=pt3080CommsLocalIpMulticastSourceFilterAddress4, pt3080Demodulator2PostVirterbiErrorRate=pt3080Demodulator2PostVirterbiErrorRate, pt3080NotifTSPrimaryInputTSHoldOverAlarm=pt3080NotifTSPrimaryInputTSHoldOverAlarm, pt3080CommsBackupCurrentNetmask=pt3080CommsBackupCurrentNetmask, pt3080PrecorrectorLinearMonitorStatus=pt3080PrecorrectorLinearMonitorStatus, pt3080ReceptionGainLimit=pt3080ReceptionGainLimit, pt3080PrecorrectorPaprClipping=pt3080PrecorrectorPaprClipping, pt3080ModeDefaultMIPOutputTimeOffset=pt3080ModeDefaultMIPOutputTimeOffset, pt3080ReferenceAlarmActionRelay1=pt3080ReferenceAlarmActionRelay1, pt3080TSoIPRx2SequenceErrors=pt3080TSoIPRx2SequenceErrors, pt3080DemodulatorAlarmActionForceMode=pt3080DemodulatorAlarmActionForceMode, pt3080InternalAlarmID=pt3080InternalAlarmID, pt3080Demodulator2PreVirterbiErrorRate=pt3080Demodulator2PreVirterbiErrorRate, pt3080TSoIPAlarmActionRelay2=pt3080TSoIPAlarmActionRelay2, pt3080Demodulator2PreVirterbiErrorRateLimit=pt3080Demodulator2PreVirterbiErrorRateLimit, pt3080CommsGbeAdminVlanEnable=pt3080CommsGbeAdminVlanEnable, pt3080RFAlarmState=pt3080RFAlarmState, pt3080CommsLocalIpMulticastSourceFilterAddress2=pt3080CommsLocalIpMulticastSourceFilterAddress2, pt3080EventlogText=pt3080EventlogText, pt3080ReceptionTunerHWSerialNumber=pt3080ReceptionTunerHWSerialNumber, pt3080ASITSSecondaryAlarmState=pt3080ASITSSecondaryAlarmState, pt3080PrecorrectorLinearMode=pt3080PrecorrectorLinearMode, pt3080InputTSSecondaryMaxPATDelay=pt3080InputTSSecondaryMaxPATDelay, pt3080ReceptionRFSquelchHysteresis=pt3080ReceptionRFSquelchHysteresis, pt3080Demodulator2Available=pt3080Demodulator2Available, pt3080GroupAlarmActionTrap=pt3080GroupAlarmActionTrap, pt3080ReferenceAlarmDescription=pt3080ReferenceAlarmDescription, pt3080TSoIPAlarmActionRelay1=pt3080TSoIPAlarmActionRelay1, pt3080TSoIPRx1OverrunIPFrames=pt3080TSoIPRx1OverrunIPFrames, pt3080CommsGbeAdminIpMulticastSourceFilterAddress6=pt3080CommsGbeAdminIpMulticastSourceFilterAddress6, pt3080NotifExternalInput4Alarm=pt3080NotifExternalInput4Alarm, pt3080SystemOperationOnAirTime=pt3080SystemOperationOnAirTime, pt3080SystemScheduledActionMute=pt3080SystemScheduledActionMute, pt3080TSoIPRx2Portnumber=pt3080TSoIPRx2Portnumber, pt3080InputTSHp=pt3080InputTSHp, pt3080ModeDefaultMIPOutputCellID=pt3080ModeDefaultMIPOutputCellID, pt3080ASITSPrimaryAlarmEntry=pt3080ASITSPrimaryAlarmEntry, pt3080Demodulator1Actualifft=pt3080Demodulator1Actualifft, pt3080InputTSPrimaryExpectedNWIDEnable=pt3080InputTSPrimaryExpectedNWIDEnable, pt3080PrecorrectorLastTurnAroundTime=pt3080PrecorrectorLastTurnAroundTime, pt3080ReceptionRFTrackingFilterEnable=pt3080ReceptionRFTrackingFilterEnable, pt3080GPSAlarmActionRelay2=pt3080GPSAlarmActionRelay2, pt3080TSoIPRx1SyncTimeout=pt3080TSoIPRx1SyncTimeout, pt3080PrecorrectorNonlinearMonitorSenseLevel=pt3080PrecorrectorNonlinearMonitorSenseLevel, pt3080ReceptionRFInputLevel=pt3080ReceptionRFInputLevel, pt3080OutputSynchronized=pt3080OutputSynchronized, pt3080InputTSPrimaryMaxStuffingrate=pt3080InputTSPrimaryMaxStuffingrate, pt3080CommsAccessPasswordOperator=pt3080CommsAccessPasswordOperator, pt3080InputTSPrimaryExpectedTSID=pt3080InputTSPrimaryExpectedTSID, pt3080InputTSSecondaryMaxPATDelayEnable=pt3080InputTSSecondaryMaxPATDelayEnable, pt3080CommsPortVlanId=pt3080CommsPortVlanId, pt3080SystemInstrumentCalibrationDate=pt3080SystemInstrumentCalibrationDate, pt3080ReferenceAlarmEntry=pt3080ReferenceAlarmEntry, pt3080RFAlarmID=pt3080RFAlarmID, pt3080ASIInput1DataErrorRate=pt3080ASIInput1DataErrorRate, pt3080MonitorTSoIPUDPChecksum=pt3080MonitorTSoIPUDPChecksum, pt3080SystemInstrumentKernelRev=pt3080SystemInstrumentKernelRev, pt3080SFNAlarmActionEventlog=pt3080SFNAlarmActionEventlog, pt3080CommsAccessPasswordAdministrator=pt3080CommsAccessPasswordAdministrator, pt3080NotifsGroup=pt3080NotifsGroup, pt3080NotifTSSecondarySTSJitterExceededAlarm=pt3080NotifTSSecondarySTSJitterExceededAlarm, pt3080NotifHWMonitorRightFan2Alarm=pt3080NotifHWMonitorRightFan2Alarm, pt3080ModeEnableCellID=pt3080ModeEnableCellID, pt3080CommsAlarmID=pt3080CommsAlarmID, pt3080HWMonitorAlarmActionForceMode=pt3080HWMonitorAlarmActionForceMode, pt3080DemodulatorAlarmDescription=pt3080DemodulatorAlarmDescription, pt3080Demodulator1ActualCodeRateLowPrio=pt3080Demodulator1ActualCodeRateLowPrio, pt3080PrecorrectorLinearSenseEnable=pt3080PrecorrectorLinearSenseEnable, pt3080PrecorrectorNonlinearMonitorLowerShoulderValid=pt3080PrecorrectorNonlinearMonitorLowerShoulderValid, pt3080PrecorrectorNonlinearAdaptiveMode=pt3080PrecorrectorNonlinearAdaptiveMode, pt3080InputTSPrimaryStsJitterReset=pt3080InputTSPrimaryStsJitterReset, pt3080DemodulatorAlarmActionTrap=pt3080DemodulatorAlarmActionTrap, pt3080NotifInternalPLLUnlockedAlarm=pt3080NotifInternalPLLUnlockedAlarm, pt3080CommsBackupIpMulticastSourceFilterAddress1=pt3080CommsBackupIpMulticastSourceFilterAddress1, pt3080NotifCommeth1Alarm=pt3080NotifCommeth1Alarm, pt3080ModeListenBroadcast=pt3080ModeListenBroadcast, pt3080CommsRemoteIpMulticastAddr=pt3080CommsRemoteIpMulticastAddr, pt3080NotifMessage=pt3080NotifMessage, pt3080CommsIGMPv3UnsolicitedReportInterval=pt3080CommsIGMPv3UnsolicitedReportInterval, pt3080NotifRFAlarm=pt3080NotifRFAlarm, pt3080CommsPortServiceSCPI=pt3080CommsPortServiceSCPI, pt3080PrecorrectorNonlinearAdaptiveLowerShoulderTargetLevel=pt3080PrecorrectorNonlinearAdaptiveLowerShoulderTargetLevel, pt3080PrecorrectorClipperMonitorMerValid=pt3080PrecorrectorClipperMonitorMerValid, pt3080PrecorrectorNlinCleanrun=pt3080PrecorrectorNlinCleanrun, pt3080TSoIPRx1Portnumber=pt3080TSoIPRx1Portnumber, pt3080CommsGroup=pt3080CommsGroup, pt3080OutputRfAlcControl=pt3080OutputRfAlcControl, pt3080ExternalAlarmActionTrap=pt3080ExternalAlarmActionTrap, pt3080GpsCableDelay=pt3080GpsCableDelay, pt3080CommsLocalVlanEnable=pt3080CommsLocalVlanEnable, pt3080NotifInternalBackplaneAlarm=pt3080NotifInternalBackplaneAlarm, pt3080ASIInput2LineRate=pt3080ASIInput2LineRate, pt3080RFAlarmActionEmail=pt3080RFAlarmActionEmail, pt3080ReceptionBandwidth=pt3080ReceptionBandwidth, pt3080HWMonitorAlarmDescription=pt3080HWMonitorAlarmDescription, pt3080TSoIPRx1TSPacketSize=pt3080TSoIPRx1TSPacketSize, pt3080NotifTSSecondaryTSIDWrongAlarm=pt3080NotifTSSecondaryTSIDWrongAlarm, pt3080TSoIPRx1LostIPFrames=pt3080TSoIPRx1LostIPFrames, pt3080SystemInstrumentFW2Rev=pt3080SystemInstrumentFW2Rev, pt3080SystemInstrumentKU=pt3080SystemInstrumentKU, pt3080MonitorTSoIPEnableFec=pt3080MonitorTSoIPEnableFec, pt3080SystemInstrumentFW1Rev=pt3080SystemInstrumentFW1Rev, pt3080OutputRfCableConstantLevelOffset=pt3080OutputRfCableConstantLevelOffset, pt3080TSoIPRx1ReceiverEnable=pt3080TSoIPRx1ReceiverEnable, pt3080NotifGNSSAntennaFaultAlarm=pt3080NotifGNSSAntennaFaultAlarm, pt3080InputGroup=pt3080InputGroup, pt3080NotifGroupASIAlarm=pt3080NotifGroupASIAlarm, pt3080ASIAlarmActionRelay2=pt3080ASIAlarmActionRelay2, pt3080GPSAlarmID=pt3080GPSAlarmID, pt3080InternalAlarmTable=pt3080InternalAlarmTable, pt3080GroupAlarmState=pt3080GroupAlarmState, pt3080GpsBias=pt3080GpsBias, pt3080SystemImage1version=pt3080SystemImage1version, pt3080TestEnableReconnect=pt3080TestEnableReconnect, pt3080HWMonitorAlarmActionTrap=pt3080HWMonitorAlarmActionTrap, pt3080ASIInput2LineErrorRate=pt3080ASIInput2LineErrorRate, pt3080CommsGbeAdminVlanId=pt3080CommsGbeAdminVlanId, pt3080Demodulator1ActualGuardInterval=pt3080Demodulator1ActualGuardInterval, pt3080Demodulator2ActualCodeRateLowPrio=pt3080Demodulator2ActualCodeRateLowPrio, pt3080NotifGNSSAlarm=pt3080NotifGNSSAlarm, pt3080Test=pt3080Test, pt3080SystemBackplaneIdCableOptions=pt3080SystemBackplaneIdCableOptions, pt3080InputRef10MhzHoldoverDelay=pt3080InputRef10MhzHoldoverDelay, pt3080TSoIPRx1Protocol=pt3080TSoIPRx1Protocol, pt3080ExternalAlarmState=pt3080ExternalAlarmState, pt3080NotifTSPrimaryDelayMarginAlarm=pt3080NotifTSPrimaryDelayMarginAlarm, pt3080NotifCommAlarm=pt3080NotifCommAlarm, pt3080ReferenceAlarmTable=pt3080ReferenceAlarmTable, pt3080CommsRemoteDhcpMode=pt3080CommsRemoteDhcpMode, pt3080MonitorTSoIPProtocol=pt3080MonitorTSoIPProtocol, pt3080ASIAlarmActionTrap=pt3080ASIAlarmActionTrap, pt3080CommsGbeAdminIpMulticastSourceFilterMode=pt3080CommsGbeAdminIpMulticastSourceFilterMode, pt3080MonitorTSoIPEnable=pt3080MonitorTSoIPEnable, pt3080GroupAlarmActionRelay1=pt3080GroupAlarmActionRelay1, pt3080SFNAlarmTable=pt3080SFNAlarmTable, pt3080DemodulatorGroup=pt3080DemodulatorGroup, pt3080ModeTimeSlicingLowPrio=pt3080ModeTimeSlicingLowPrio, pt3080Demodulator2ActualMpeFecLowPrio=pt3080Demodulator2ActualMpeFecLowPrio, pt3080ReceptionGainLimitEnable=pt3080ReceptionGainLimitEnable, pt3080RFAlarmTable=pt3080RFAlarmTable, pt3080NotifTSSecondaryBufferPoolExceededAlarm=pt3080NotifTSSecondaryBufferPoolExceededAlarm, pt3080InputTSLp=pt3080InputTSLp, pt3080ASITSSecondaryAlarmActionRelay2=pt3080ASITSSecondaryAlarmActionRelay2, pt3080PrecorrectorLinearMonitorAmplitudeRippleValid=pt3080PrecorrectorLinearMonitorAmplitudeRippleValid, pt3080CommsSNMPReadOnlyCommunity=pt3080CommsSNMPReadOnlyCommunity, pt3080NotifState=pt3080NotifState, pt3080CommsGbeAdminServiceRIP=pt3080CommsGbeAdminServiceRIP, pt3080ReferenceAlarmActionTrap=pt3080ReferenceAlarmActionTrap, pt3080InputTSPrimaryMaxPATDelayEnable=pt3080InputTSPrimaryMaxPATDelayEnable, pt3080GPSAlarmEntry=pt3080GPSAlarmEntry, pt3080PrecorrectorNonlinearMonitorDiscartedIterations=pt3080PrecorrectorNonlinearMonitorDiscartedIterations, pt3080OutputRfLevel=pt3080OutputRfLevel, pt3080NotifRefenceClockExtern1PPSLossAlarm=pt3080NotifRefenceClockExtern1PPSLossAlarm, pt3080NotifExternalInput6Alarm=pt3080NotifExternalInput6Alarm, pt3080ModeMpeFecLowPrio=pt3080ModeMpeFecLowPrio, pt3080InputTSPrimaryExpectedTSIDEnable=pt3080InputTSPrimaryExpectedTSIDEnable, pt3080NotifTSSecondarySyncLossAlarm=pt3080NotifTSSecondarySyncLossAlarm, pt3080InputRefCalVer=pt3080InputRefCalVer, pt3080EventlogTable=pt3080EventlogTable, pt3080EventlogEnable=pt3080EventlogEnable, pt3080GpsVisibleSatellites=pt3080GpsVisibleSatellites, pt3080InputTSLpNWID=pt3080InputTSLpNWID, pt3080NotifInternalEthAlarm=pt3080NotifInternalEthAlarm, pt3080Modeifft=pt3080Modeifft, pt3080SystemInstrumentFW2RevBL=pt3080SystemInstrumentFW2RevBL, pt3080OutputRfCableFrequencyLevelOffset3=pt3080OutputRfCableFrequencyLevelOffset3, pt3080PrecorrectorLinearMonitorIterations=pt3080PrecorrectorLinearMonitorIterations, pt3080NotifTSPrimarySTSJitterExceededAlarm=pt3080NotifTSPrimarySTSJitterExceededAlarm, pt3080Mode=pt3080Mode, pt3080Demodulator2ActualDeepInterleaver=pt3080Demodulator2ActualDeepInterleaver, pt3080TSoIPRx2FecColumn=pt3080TSoIPRx2FecColumn, pt3080DemodulatorAlarmEntry=pt3080DemodulatorAlarmEntry, pt3080CommsPortPhysicalInterface=pt3080CommsPortPhysicalInterface, pt3080NotifGNSSUnlockedAlarm=pt3080NotifGNSSUnlockedAlarm, pt3080TSoIPRx2FecRow=pt3080TSoIPRx2FecRow, pt3080ASITSPrimaryAlarmActionEventlog=pt3080ASITSPrimaryAlarmActionEventlog, pt3080CommsAlarmEntry=pt3080CommsAlarmEntry, pt3080TSoIPRx1CurrentLatency=pt3080TSoIPRx1CurrentLatency, pt3080SystemBackplaneid=pt3080SystemBackplaneid, pt3080NotifSFNTSSecondaryMIPConfigErrorAlarm=pt3080NotifSFNTSSecondaryMIPConfigErrorAlarm, pt3080PrecorrectorNonlinearAdaptiveMaxRfPaprEnable=pt3080PrecorrectorNonlinearAdaptiveMaxRfPaprEnable)
