#
# PySNMP MIB module ALCATEL-IND1-VRRP-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-VRRP-MIB
# Produced by pysmi-1.1.8 at Thu Jan 13 23:11:49 2022
# On host fv-az83-250 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
softentIND1Vrrp, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1Vrrp")
alaVrrp3OperEntry, alaVrrp3OperVrId, alaVrrp3OperIpVersion = mibBuilder.importSymbols("ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperEntry", "alaVrrp3OperVrId", "alaVrrp3OperIpVersion")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
ifIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndexOrZero")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
IpAddress, TimeTicks, ModuleIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, ObjectIdentity, Bits, Counter64, NotificationType, Gauge32, Integer32, Counter32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "TimeTicks", "ModuleIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "ObjectIdentity", "Bits", "Counter64", "NotificationType", "Gauge32", "Integer32", "Counter32", "iso")
TruthValue, DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "DisplayString", "RowStatus", "TextualConvention")
vrrpOperVrId, vrrpOperEntry = mibBuilder.importSymbols("VRRP-MIB", "vrrpOperVrId", "vrrpOperEntry")
alcatelIND1VRRPMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1))
alcatelIND1VRRPMIB.setRevisions(('2007-04-03 00:00',))
if mibBuilder.loadTexts: alcatelIND1VRRPMIB.setLastUpdated('200704030000Z')
if mibBuilder.loadTexts: alcatelIND1VRRPMIB.setOrganization('Alcatel-Lucent')
alcatelIND1VRRPMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1))
class AlaVrTrackId(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 255)

class AlaVrGroupId(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 255)

alaVRRPConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 1))
alaVrrpTracking = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2))
alaVrrpOperations = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 3))
alaVRRPv2Config = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 4))
alaVrrpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 5))
alaVRRPStartDelay = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 180)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVRRPStartDelay.setStatus('current')
alaVrrpBfdStatus = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVrrpBfdStatus.setStatus('current')
alaVRRPDefaultInterval = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 4, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVRRPDefaultInterval.setStatus('current')
alaVRRPDefaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 4, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVRRPDefaultPriority.setStatus('current')
alaVRRPDefaultPreemptMode = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 4, 3), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVRRPDefaultPreemptMode.setStatus('current')
alaVRRPAdminState = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("allEnable", 1), ("enable", 2), ("disable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVRRPAdminState.setStatus('current')
alaVRRPSetParam = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("all", 2), ("interval", 3), ("priority", 4), ("preempt", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVRRPSetParam.setStatus('current')
alaVRRPOverride = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 4, 6), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alaVRRPOverride.setStatus('current')
alaVrrpTrackTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 1), )
if mibBuilder.loadTexts: alaVrrpTrackTable.setStatus('current')
alaVrrpTrackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-VRRP-MIB", "alaVrrpTrackId"))
if mibBuilder.loadTexts: alaVrrpTrackEntry.setStatus('current')
alaVrrpTrackId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 1, 1, 1), AlaVrTrackId())
if mibBuilder.loadTexts: alaVrrpTrackId.setStatus('current')
alaVrrpTrackState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrpTrackState.setStatus('current')
alaVrrpTrackAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrpTrackAdminState.setStatus('current')
alaVrrpTrackEntityType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5))).clone(namedValues=NamedValues(("port", 2), ("ipaddress", 3), ("interface", 4), ("ipv6Interface", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrpTrackEntityType.setStatus('current')
alaVrrpTrackEntityPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 1, 1, 6), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrpTrackEntityPort.setStatus('current')
alaVrrpTrackPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(25)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrpTrackPriority.setStatus('current')
alaVrrpTrackRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 1, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrpTrackRowStatus.setStatus('current')
alaVrrpTrackEntityInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 1, 1, 10), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrpTrackEntityInterface.setStatus('current')
alaVrrpTrackEntityIpv6Interface = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 1, 1, 11), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrpTrackEntityIpv6Interface.setStatus('current')
alaVrrpTrackEntityIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 1, 1, 12), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrpTrackEntityIpAddrType.setStatus('current')
alaVrrpTrackEntityIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 1, 1, 13), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrpTrackEntityIpAddr.setStatus('current')
alaVrrpTrackBfdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrpTrackBfdStatus.setStatus('current')
alaVrrpAssoTrackTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 2), )
if mibBuilder.loadTexts: alaVrrpAssoTrackTable.setStatus('current')
alaVrrpAssoTrackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VRRP-MIB", "vrrpOperVrId"), (0, "ALCATEL-IND1-VRRP-MIB", "alaVrrpAssoTrackId"))
if mibBuilder.loadTexts: alaVrrpAssoTrackEntry.setStatus('current')
alaVrrpAssoTrackId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 2, 1, 1), AlaVrTrackId())
if mibBuilder.loadTexts: alaVrrpAssoTrackId.setStatus('current')
alaVrrpAssoTrackRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrpAssoTrackRowStatus.setStatus('current')
alaVrrpGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 5, 1), )
if mibBuilder.loadTexts: alaVrrpGroupTable.setStatus('current')
alaVrrpGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 5, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-VRRP-MIB", "alaVrrpGroupId"))
if mibBuilder.loadTexts: alaVrrpGroupEntry.setStatus('current')
alaVrrpGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 5, 1, 1, 1), AlaVrGroupId())
if mibBuilder.loadTexts: alaVrrpGroupId.setStatus('current')
alaVrrpGroupInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrpGroupInterval.setStatus('current')
alaVrrpGroupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrpGroupPriority.setStatus('current')
alaVrrpGroupPreemptMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 5, 1, 1, 4), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrpGroupPreemptMode.setStatus('current')
alaVrrpGroupAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("allEnable", 1), ("enable", 2), ("disable", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrpGroupAdminState.setStatus('current')
alaVrrpGroupSetParam = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 1), ("all", 2), ("interval", 3), ("priority", 4), ("preempt", 5)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrpGroupSetParam.setStatus('current')
alaVrrpGroupOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 5, 1, 1, 7), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrpGroupOverride.setStatus('current')
alaVrrpGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 5, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrpGroupRowStatus.setStatus('current')
alaVrrpAssoGroupTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 5, 2), )
if mibBuilder.loadTexts: alaVrrpAssoGroupTable.setStatus('current')
alaVrrpAssoGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 5, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-VRRP-MIB", "alaVrrpGroupId"), (0, "IF-MIB", "ifIndex"), (0, "VRRP-MIB", "vrrpOperVrId"))
if mibBuilder.loadTexts: alaVrrpAssoGroupEntry.setStatus('current')
alaVrrpAssoGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 5, 2, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrpAssoGroupRowStatus.setStatus('current')
alaVrrpOperTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 3, 1), )
if mibBuilder.loadTexts: alaVrrpOperTable.setStatus('current')
alaVrrpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 3, 1, 1), )
vrrpOperEntry.registerAugmentions(("ALCATEL-IND1-VRRP-MIB", "alaVrrpOperEntry"))
alaVrrpOperEntry.setIndexNames(*vrrpOperEntry.getIndexNames())
if mibBuilder.loadTexts: alaVrrpOperEntry.setStatus('current')
alaVrrpCurrentPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrpCurrentPriority.setStatus('current')
alaVrrpTrackCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrpTrackCount.setStatus('current')
alaVrrpGroupIdent = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrpGroupIdent.setStatus('current')
alaVrrp3AssoTrackTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 3), )
if mibBuilder.loadTexts: alaVrrp3AssoTrackTable.setStatus('current')
alaVrrp3AssoTrackEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperIpVersion"), (0, "ALCATEL-IND1-VRRP3-MIB", "alaVrrp3OperVrId"), (0, "IF-MIB", "ifIndex"), (0, "ALCATEL-IND1-VRRP-MIB", "alaVrrp3AssoTrackId"))
if mibBuilder.loadTexts: alaVrrp3AssoTrackEntry.setStatus('current')
alaVrrp3AssoTrackId = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 3, 1, 1), AlaVrTrackId())
if mibBuilder.loadTexts: alaVrrp3AssoTrackId.setStatus('current')
alaVrrp3AssoTrackRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 2, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: alaVrrp3AssoTrackRowStatus.setStatus('current')
alaVrrp3OperExTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 3, 2), )
if mibBuilder.loadTexts: alaVrrp3OperExTable.setStatus('current')
alaVrrp3OperExEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 3, 2, 1), )
alaVrrp3OperEntry.registerAugmentions(("ALCATEL-IND1-VRRP-MIB", "alaVrrp3OperExEntry"))
alaVrrp3OperExEntry.setIndexNames(*alaVrrp3OperEntry.getIndexNames())
if mibBuilder.loadTexts: alaVrrp3OperExEntry.setStatus('current')
alaVrrp3CurrentPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3CurrentPriority.setStatus('current')
alaVrrp3TrackCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 3, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3TrackCount.setStatus('current')
alaVrrp3GroupIdent = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 1, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: alaVrrp3GroupIdent.setStatus('current')
alcatelIND1VRRPMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 2))
alcatelIND1VRRPMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 2, 1))
alcatelIND1VRRPMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 2, 2))
alaVRRPCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-VRRP-MIB", "alaVRRPConfigGroup"), ("ALCATEL-IND1-VRRP-MIB", "alaVRRPv2ConfigGroup"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrp3AssoTrackTableGroup"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrp3OperExEntryGroup"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpAssoGroupEntryGroup"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpOperEntryGroup"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpGroupTableGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVRRPCompliance = alaVRRPCompliance.setStatus('current')
alaVRRPConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-VRRP-MIB", "alaVRRPStartDelay"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpBfdStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVRRPConfigGroup = alaVRRPConfigGroup.setStatus('current')
alaVRRPv2ConfigGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 2, 2, 2)).setObjects(("ALCATEL-IND1-VRRP-MIB", "alaVRRPAdminState"), ("ALCATEL-IND1-VRRP-MIB", "alaVRRPDefaultInterval"), ("ALCATEL-IND1-VRRP-MIB", "alaVRRPDefaultPreemptMode"), ("ALCATEL-IND1-VRRP-MIB", "alaVRRPDefaultPriority"), ("ALCATEL-IND1-VRRP-MIB", "alaVRRPOverride"), ("ALCATEL-IND1-VRRP-MIB", "alaVRRPSetParam"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVRRPv2ConfigGroup = alaVRRPv2ConfigGroup.setStatus('current')
alaVrrp3AssoTrackTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 2, 2, 3)).setObjects(("ALCATEL-IND1-VRRP-MIB", "alaVrrp3AssoTrackRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVrrp3AssoTrackTableGroup = alaVrrp3AssoTrackTableGroup.setStatus('current')
alaVrrp3OperExEntryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 2, 2, 4)).setObjects(("ALCATEL-IND1-VRRP-MIB", "alaVrrp3CurrentPriority"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrp3GroupIdent"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrp3TrackCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVrrp3OperExEntryGroup = alaVrrp3OperExEntryGroup.setStatus('current')
alaVrrpAssoGroupEntryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 2, 2, 5)).setObjects(("ALCATEL-IND1-VRRP-MIB", "alaVrrpAssoGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVrrpAssoGroupEntryGroup = alaVrrpAssoGroupEntryGroup.setStatus('current')
alaVrrpAssoTrackEntryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 2, 2, 6)).setObjects(("ALCATEL-IND1-VRRP-MIB", "alaVrrpAssoTrackRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVrrpAssoTrackEntryGroup = alaVrrpAssoTrackEntryGroup.setStatus('current')
alaVrrpOperEntryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 2, 2, 7)).setObjects(("ALCATEL-IND1-VRRP-MIB", "alaVrrpCurrentPriority"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpTrackCount"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpGroupIdent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVrrpOperEntryGroup = alaVrrpOperEntryGroup.setStatus('current')
alaVrrpGroupTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 2, 2, 8)).setObjects(("ALCATEL-IND1-VRRP-MIB", "alaVrrpGroupInterval"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpGroupPriority"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpGroupPreemptMode"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpGroupAdminState"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpGroupSetParam"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpGroupOverride"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpGroupRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVrrpGroupTableGroup = alaVrrpGroupTableGroup.setStatus('current')
alaVrrpTrackGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 28, 1, 2, 2, 9)).setObjects(("ALCATEL-IND1-VRRP-MIB", "alaVrrpTrackState"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpTrackAdminState"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpTrackEntityType"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpTrackEntityPort"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpTrackPriority"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpTrackRowStatus"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpTrackEntityInterface"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpTrackEntityIpv6Interface"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpTrackEntityIpAddrType"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpTrackEntityIpAddr"), ("ALCATEL-IND1-VRRP-MIB", "alaVrrpTrackBfdStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alaVrrpTrackGroup = alaVrrpTrackGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-VRRP-MIB", alaVrrpTrackId=alaVrrpTrackId, alaVrrp3AssoTrackTableGroup=alaVrrp3AssoTrackTableGroup, alaVrrpTrackEntry=alaVrrpTrackEntry, alaVrrpTrackBfdStatus=alaVrrpTrackBfdStatus, alaVRRPConfig=alaVRRPConfig, alaVrrp3TrackCount=alaVrrp3TrackCount, alaVrrpAssoTrackEntryGroup=alaVrrpAssoTrackEntryGroup, alaVrrp3OperExTable=alaVrrp3OperExTable, alaVrrpAssoTrackId=alaVrrpAssoTrackId, alaVrrpAssoGroupRowStatus=alaVrrpAssoGroupRowStatus, alaVrrp3CurrentPriority=alaVrrp3CurrentPriority, alaVRRPOverride=alaVRRPOverride, alaVrrpGroupTable=alaVrrpGroupTable, alaVrrpGroupIdent=alaVrrpGroupIdent, alaVrrpGroupRowStatus=alaVrrpGroupRowStatus, alaVrrpTracking=alaVrrpTracking, alaVRRPSetParam=alaVRRPSetParam, alaVrrpAssoGroupTable=alaVrrpAssoGroupTable, alaVrrp3AssoTrackEntry=alaVrrp3AssoTrackEntry, alaVRRPDefaultPreemptMode=alaVRRPDefaultPreemptMode, alaVrrpGroupAdminState=alaVrrpGroupAdminState, alaVrrpOperEntryGroup=alaVrrpOperEntryGroup, alaVrrpTrackGroup=alaVrrpTrackGroup, alaVrrpGroupSetParam=alaVrrpGroupSetParam, alaVrrpGroupId=alaVrrpGroupId, alaVrrpBfdStatus=alaVrrpBfdStatus, alaVrrpGroupEntry=alaVrrpGroupEntry, alaVrrpGroupTableGroup=alaVrrpGroupTableGroup, alaVrrp3OperExEntryGroup=alaVrrp3OperExEntryGroup, alcatelIND1VRRPMIBCompliances=alcatelIND1VRRPMIBCompliances, alaVRRPDefaultPriority=alaVRRPDefaultPriority, alaVrrpTrackPriority=alaVrrpTrackPriority, alcatelIND1VRRPMIBGroups=alcatelIND1VRRPMIBGroups, alaVrrpOperEntry=alaVrrpOperEntry, alaVRRPConfigGroup=alaVRRPConfigGroup, alaVrrp3AssoTrackId=alaVrrp3AssoTrackId, alaVrrpAssoTrackRowStatus=alaVrrpAssoTrackRowStatus, alaVrrpTrackEntityType=alaVrrpTrackEntityType, alaVrrpTrackEntityIpv6Interface=alaVrrpTrackEntityIpv6Interface, alaVrrpGroupInterval=alaVrrpGroupInterval, PYSNMP_MODULE_ID=alcatelIND1VRRPMIB, alaVrrpAssoGroupEntry=alaVrrpAssoGroupEntry, alaVRRPCompliance=alaVRRPCompliance, alcatelIND1VRRPMIBObjects=alcatelIND1VRRPMIBObjects, alaVRRPAdminState=alaVRRPAdminState, alcatelIND1VRRPMIB=alcatelIND1VRRPMIB, alaVrrpTrackState=alaVrrpTrackState, alaVrrpOperTable=alaVrrpOperTable, alaVrrpCurrentPriority=alaVrrpCurrentPriority, alaVrrpGroup=alaVrrpGroup, alaVrrp3GroupIdent=alaVrrp3GroupIdent, alcatelIND1VRRPMIBConformance=alcatelIND1VRRPMIBConformance, alaVrrpAssoGroupEntryGroup=alaVrrpAssoGroupEntryGroup, AlaVrGroupId=AlaVrGroupId, alaVrrp3OperExEntry=alaVrrp3OperExEntry, alaVRRPDefaultInterval=alaVRRPDefaultInterval, alaVrrpGroupOverride=alaVrrpGroupOverride, alaVrrpTrackEntityIpAddrType=alaVrrpTrackEntityIpAddrType, alaVRRPv2Config=alaVRRPv2Config, alaVrrp3AssoTrackTable=alaVrrp3AssoTrackTable, alaVrrpTrackRowStatus=alaVrrpTrackRowStatus, alaVrrpAssoTrackEntry=alaVrrpAssoTrackEntry, alaVrrpGroupPreemptMode=alaVrrpGroupPreemptMode, alaVrrpTrackTable=alaVrrpTrackTable, alaVrrp3AssoTrackRowStatus=alaVrrp3AssoTrackRowStatus, alaVrrpTrackAdminState=alaVrrpTrackAdminState, alaVRRPStartDelay=alaVRRPStartDelay, alaVrrpTrackEntityInterface=alaVrrpTrackEntityInterface, alaVrrpAssoTrackTable=alaVrrpAssoTrackTable, alaVrrpTrackEntityIpAddr=alaVrrpTrackEntityIpAddr, alaVrrpTrackEntityPort=alaVrrpTrackEntityPort, alaVrrpOperations=alaVrrpOperations, alaVrrpTrackCount=alaVrrpTrackCount, AlaVrTrackId=AlaVrTrackId, alaVrrpGroupPriority=alaVrrpGroupPriority, alaVRRPv2ConfigGroup=alaVRRPv2ConfigGroup)
