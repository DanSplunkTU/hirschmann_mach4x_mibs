#
# PySNMP MIB module PRVT-L2TUNNELING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-L2TUNNELING-MIB
# Produced by pysmi-1.1.3 at Wed Dec  8 18:57:20 2021
# On host fv-az121-73 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
sdpEntry, sapEntry = mibBuilder.importSymbols("PRVT-SERV-MIB", "sdpEntry", "sapEntry")
serviceAccessSwitch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "serviceAccessSwitch")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, MibIdentifier, Unsigned32, Integer32, TimeTicks, ModuleIdentity, Counter64, Counter32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Bits, iso, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibIdentifier", "Unsigned32", "Integer32", "TimeTicks", "ModuleIdentity", "Counter64", "Counter32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Bits", "iso", "ObjectIdentity")
DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus")
prvtL2TunnelingMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 7, 3))
prvtL2TunnelingMIB.setRevisions(('2010-01-29 00:00',))
if mibBuilder.loadTexts: prvtL2TunnelingMIB.setLastUpdated('201001290000Z')
if mibBuilder.loadTexts: prvtL2TunnelingMIB.setOrganization('BATM Advanced Communication')
class PrvtL2TunnelProfileNameTC(TextualConvention, OctetString):
    status = 'current'
    displayHint = '32a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 32)

class PrvtL2TunnelProfileNameOrNoneTC(TextualConvention, OctetString):
    status = 'current'
    displayHint = '32a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

prvtL2TunnelingMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1))
prvtL2TunnEnable = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtL2TunnEnable.setStatus('current')
prvtL2TunnProfileTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 2), )
if mibBuilder.loadTexts: prvtL2TunnProfileTable.setStatus('current')
prvtL2TunnProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 2, 1), ).setIndexNames((0, "PRVT-L2TUNNELING-MIB", "prvtL2TunnProfileName"))
if mibBuilder.loadTexts: prvtL2TunnProfileEntry.setStatus('current')
prvtL2TunnProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 2, 1, 1), PrvtL2TunnelProfileNameTC())
if mibBuilder.loadTexts: prvtL2TunnProfileName.setStatus('current')
prvtL2TunnProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtL2TunnProfileRowStatus.setStatus('current')
prvtL2ProtocolsTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 3), )
if mibBuilder.loadTexts: prvtL2ProtocolsTable.setStatus('current')
prvtL2ProtocolsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 3, 1), ).setIndexNames((0, "PRVT-L2TUNNELING-MIB", "prvtL2ProtocolName"))
if mibBuilder.loadTexts: prvtL2ProtocolsEntry.setStatus('current')
prvtL2ProtocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 3, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 16)))
if mibBuilder.loadTexts: prvtL2ProtocolName.setStatus('current')
prvtL2ProtocolRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtL2ProtocolRowStatus.setStatus('current')
prvtL2ProtocolEthertype = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 3, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtL2ProtocolEthertype.setStatus('current')
prvtL2ProtocolMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 3, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtL2ProtocolMAC.setStatus('current')
prvtL2ReplaceMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 3, 1, 5), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtL2ReplaceMAC.setStatus('current')
prvtL2TunnProfMapProtoTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 4), )
if mibBuilder.loadTexts: prvtL2TunnProfMapProtoTable.setStatus('current')
prvtL2TunnProfMapProtoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 4, 1), ).setIndexNames((0, "PRVT-L2TUNNELING-MIB", "prvtL2TunnProfileName"), (0, "PRVT-L2TUNNELING-MIB", "prvtL2ProtocolName"))
if mibBuilder.loadTexts: prvtL2TunnProfMapProtoEntry.setStatus('current')
prvtL2TunnProfMapProtoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 4, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtL2TunnProfMapProtoRowStatus.setStatus('current')
prvtL2TunnProfMapProtoAction = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("tunnel", 1), ("discard", 2), ("peer", 3), ("peerAndPass", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtL2TunnProfMapProtoAction.setStatus('current')
prvtL2TunnSapTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 5), )
if mibBuilder.loadTexts: prvtL2TunnSapTable.setStatus('current')
prvtL2TunnSapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 5, 1), )
sapEntry.registerAugmentions(("PRVT-L2TUNNELING-MIB", "prvtL2TunnSapEntry"))
prvtL2TunnSapEntry.setIndexNames(*sapEntry.getIndexNames())
if mibBuilder.loadTexts: prvtL2TunnSapEntry.setStatus('current')
prvtL2TunnSapProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 5, 1, 1), PrvtL2TunnelProfileNameOrNoneTC()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtL2TunnSapProfile.setStatus('current')
prvtL2TunnSdpTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 6), )
if mibBuilder.loadTexts: prvtL2TunnSdpTable.setStatus('current')
prvtL2TunnSdpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 6, 1), )
sdpEntry.registerAugmentions(("PRVT-L2TUNNELING-MIB", "prvtL2TunnSdpEntry"))
prvtL2TunnSdpEntry.setIndexNames(*sdpEntry.getIndexNames())
if mibBuilder.loadTexts: prvtL2TunnSdpEntry.setStatus('current')
prvtL2TunnSdpProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 6, 1, 1), PrvtL2TunnelProfileNameOrNoneTC()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtL2TunnSdpProfile.setStatus('current')
prvtL2TunnStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 8), )
if mibBuilder.loadTexts: prvtL2TunnStatisticsTable.setStatus('current')
prvtL2TunnStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 8, 1), ).setIndexNames((0, "PRVT-L2TUNNELING-MIB", "prvtL2TunnInterfaceName"), (0, "PRVT-L2TUNNELING-MIB", "prvtL2TunnProtocolName"))
if mibBuilder.loadTexts: prvtL2TunnStatisticsEntry.setStatus('current')
prvtL2TunnInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 8, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(4, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtL2TunnInterfaceName.setStatus('current')
prvtL2TunnProtocolName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 8, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtL2TunnProtocolName.setStatus('current')
prvtL2TunnRxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 8, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtL2TunnRxPackets.setStatus('current')
prvtL2TunnTxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 8, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtL2TunnTxPackets.setStatus('current')
prvtL2TunnClearStatistics = MibScalar((1, 3, 6, 1, 4, 1, 738, 10, 7, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtL2TunnClearStatistics.setStatus('current')
mibBuilder.exportSymbols("PRVT-L2TUNNELING-MIB", prvtL2ProtocolMAC=prvtL2ProtocolMAC, prvtL2ProtocolName=prvtL2ProtocolName, prvtL2ProtocolRowStatus=prvtL2ProtocolRowStatus, prvtL2TunnProfileTable=prvtL2TunnProfileTable, prvtL2TunnProfMapProtoTable=prvtL2TunnProfMapProtoTable, prvtL2TunnProtocolName=prvtL2TunnProtocolName, prvtL2TunnSapProfile=prvtL2TunnSapProfile, prvtL2TunnSdpProfile=prvtL2TunnSdpProfile, prvtL2TunnTxPackets=prvtL2TunnTxPackets, prvtL2TunnProfMapProtoAction=prvtL2TunnProfMapProtoAction, PrvtL2TunnelProfileNameOrNoneTC=PrvtL2TunnelProfileNameOrNoneTC, prvtL2TunnProfileRowStatus=prvtL2TunnProfileRowStatus, prvtL2TunnRxPackets=prvtL2TunnRxPackets, prvtL2TunnProfMapProtoEntry=prvtL2TunnProfMapProtoEntry, prvtL2TunnSdpTable=prvtL2TunnSdpTable, prvtL2ProtocolEthertype=prvtL2ProtocolEthertype, prvtL2TunnProfileEntry=prvtL2TunnProfileEntry, prvtL2TunnSapTable=prvtL2TunnSapTable, prvtL2TunnProfileName=prvtL2TunnProfileName, prvtL2TunnEnable=prvtL2TunnEnable, prvtL2TunnelingMIB=prvtL2TunnelingMIB, prvtL2TunnStatisticsEntry=prvtL2TunnStatisticsEntry, prvtL2TunnSapEntry=prvtL2TunnSapEntry, PYSNMP_MODULE_ID=prvtL2TunnelingMIB, prvtL2ReplaceMAC=prvtL2ReplaceMAC, prvtL2TunnSdpEntry=prvtL2TunnSdpEntry, prvtL2TunnClearStatistics=prvtL2TunnClearStatistics, prvtL2TunnInterfaceName=prvtL2TunnInterfaceName, prvtL2TunnelingMIBObjects=prvtL2TunnelingMIBObjects, prvtL2ProtocolsEntry=prvtL2ProtocolsEntry, PrvtL2TunnelProfileNameTC=PrvtL2TunnelProfileNameTC, prvtL2TunnProfMapProtoRowStatus=prvtL2TunnProfMapProtoRowStatus, prvtL2TunnStatisticsTable=prvtL2TunnStatisticsTable, prvtL2ProtocolsTable=prvtL2ProtocolsTable)
