#
# PySNMP MIB module ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nokia/aos7/ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB
# Produced by pysmi-1.1.8 at Fri Jan  7 15:33:21 2022
# On host fv-az42-180 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
softentIND1PortMirroringMonitoring, = mibBuilder.importSymbols("ALCATEL-IND1-BASE", "softentIND1PortMirroringMonitoring")
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
sFlowCpEntry, sFlowFsEntry = mibBuilder.importSymbols("SFLOW-MIB", "sFlowCpEntry", "sFlowFsEntry")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
NotificationType, iso, Integer32, TimeTicks, Bits, Counter32, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Gauge32, IpAddress, Counter64, Unsigned32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "iso", "Integer32", "TimeTicks", "Bits", "Counter32", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Gauge32", "IpAddress", "Counter64", "Unsigned32", "MibIdentifier")
RowStatus, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TextualConvention")
alcatelIND1PortMirrorMonitoringMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1))
alcatelIND1PortMirrorMonitoringMIB.setRevisions(('2007-04-03 00:00',))
if mibBuilder.loadTexts: alcatelIND1PortMirrorMonitoringMIB.setLastUpdated('200704030000Z')
if mibBuilder.loadTexts: alcatelIND1PortMirrorMonitoringMIB.setOrganization('Alcatel-Lucent')
alcatelIND1PortMirMonMIBNotifications = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 0))
if mibBuilder.loadTexts: alcatelIND1PortMirMonMIBNotifications.setStatus('current')
alcatelIND1PortMirMonMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1))
if mibBuilder.loadTexts: alcatelIND1PortMirMonMIBObjects.setStatus('current')
alcatelIND1PortMirMonMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 2))
if mibBuilder.loadTexts: alcatelIND1PortMirMonMIBConformance.setStatus('current')
alcatelIND1PortMirMonMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 2, 1))
if mibBuilder.loadTexts: alcatelIND1PortMirMonMIBGroups.setStatus('current')
alcatelIND1PortMirMonMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 2, 2))
if mibBuilder.loadTexts: alcatelIND1PortMirMonMIBCompliances.setStatus('current')
mirmonMirroring = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1))
mirrorTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 1), )
if mibBuilder.loadTexts: mirrorTable.setStatus('current')
mirrorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorSessionNumber"))
if mibBuilder.loadTexts: mirrorEntry.setStatus('current')
mirrorSessionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mirrorSessionNumber.setStatus('current')
mirrorMirroredIfindex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 1, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mirrorMirroredIfindex.setStatus('deprecated')
mirrorMirroringIfindex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 1, 1, 3), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mirrorMirroringIfindex.setStatus('deprecated')
mirrorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('on')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mirrorStatus.setStatus('current')
mirrorUnblockedVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mirrorUnblockedVLAN.setStatus('current')
mirrorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mirrorRowStatus.setStatus('current')
mirrorDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inport", 1), ("outport", 2), ("bidirectional", 3))).clone('bidirectional')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mirrorDirection.setStatus('deprecated')
mirrorSessOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('on')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mirrorSessOperStatus.setStatus('current')
mirrorTaggedVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mirrorTaggedVLAN.setStatus('current')
mirrorSrcTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 2), )
if mibBuilder.loadTexts: mirrorSrcTable.setStatus('current')
mirrorSrcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorSessionNumber"), (0, "ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorSrcMirroredIf"))
if mibBuilder.loadTexts: mirrorSrcEntry.setStatus('current')
mirrorSrcMirroredIf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mirrorSrcMirroredIf.setStatus('current')
mirrorSrcStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disable", 1), ("enable", 2))).clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mirrorSrcStatus.setStatus('current')
mirrorSrcDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inport", 1), ("outport", 2), ("bidirectional", 3))).clone('bidirectional')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mirrorSrcDirection.setStatus('current')
mirrorSrcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mirrorSrcRowStatus.setStatus('current')
mirrorSrcOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('on')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mirrorSrcOperStatus.setStatus('current')
mirrorDstTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 3), )
if mibBuilder.loadTexts: mirrorDstTable.setStatus('current')
mirrorDstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 3, 1), ).setIndexNames((0, "ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorSessionNumber"), (0, "ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorDstMirroringIf"))
if mibBuilder.loadTexts: mirrorDstEntry.setStatus('current')
mirrorDstMirroringIf = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 3, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: mirrorDstMirroringIf.setStatus('current')
mirrorDstOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('on')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mirrorDstOperStatus.setStatus('current')
mirrorDstAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mirrorDstAdminStatus.setStatus('current')
mirrorDstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 1, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: mirrorDstRowStatus.setStatus('current')
mirmonMonitoring = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2))
monitorTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 1), )
if mibBuilder.loadTexts: monitorTable.setStatus('current')
monitorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 1, 1), ).setIndexNames((0, "ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorSessionNumber"))
if mibBuilder.loadTexts: monitorEntry.setStatus('current')
monitorSessionNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: monitorSessionNumber.setStatus('current')
monitorIfindex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 1, 1, 2), InterfaceIndex().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: monitorIfindex.setStatus('deprecated')
monitorFileStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: monitorFileStatus.setStatus('current')
monitorFileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 1, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: monitorFileName.setStatus('current')
monitorFileSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: monitorFileSize.setStatus('current')
monitorScreenStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: monitorScreenStatus.setStatus('current')
monitorScreenLine = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(24)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: monitorScreenLine.setStatus('current')
monitorTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("all", 1), ("unicast", 2), ("multicast", 3), ("broadcast", 4), ("unimulti", 5), ("unibroad", 6), ("multibroad", 7))).clone('all')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: monitorTrafficType.setStatus('current')
monitorStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("off", 1), ("on", 2), ("suspended", 3))).clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: monitorStatus.setStatus('current')
monitorFileOverWrite = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('on')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: monitorFileOverWrite.setStatus('current')
monitorDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inport", 1), ("outport", 2), ("bidirectional", 3))).clone('bidirectional')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: monitorDirection.setStatus('deprecated')
monitorTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: monitorTimeout.setStatus('current')
monitorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 1, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: monitorRowStatus.setStatus('current')
monitorCaptureType = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("brief", 1), ("full", 2))).clone('brief')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: monitorCaptureType.setStatus('current')
monitorSrcTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 2), )
if mibBuilder.loadTexts: monitorSrcTable.setStatus('current')
monitorSrcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 2, 1), ).setIndexNames((0, "ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorSessionNumber"), (0, "ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorSrcIfindex"))
if mibBuilder.loadTexts: monitorSrcEntry.setStatus('current')
monitorSrcIfindex = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: monitorSrcIfindex.setStatus('current')
monitorSrcStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("off", 1), ("on", 2))).clone('off')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: monitorSrcStatus.setStatus('current')
monitorSrcDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inport", 1), ("outport", 2), ("bidirectional", 3))).clone('bidirectional')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: monitorSrcDirection.setStatus('current')
monitorSrcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 2, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: monitorSrcRowStatus.setStatus('current')
mirmonNotificationVars = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 3))
class MirMonErrorIds(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("other", 1), ("wrongSession", 2), ("hwQError", 3), ("swQError", 4))

mirmonPrimarySlot = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mirmonPrimarySlot.setStatus('current')
mirmonPrimaryPort = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mirmonPrimaryPort.setStatus('current')
mirroringSlot = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mirroringSlot.setStatus('current')
mirroringPort = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 3, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mirroringPort.setStatus('current')
mirMonSession = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 3, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mirMonSession.setStatus('current')
mirMonError = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 3, 6), MirMonErrorIds()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mirMonError.setStatus('current')
mirMonErrorNi = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 3, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mirMonErrorNi.setStatus('current')
mirrorConfigError = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 0, 1)).setObjects(("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirmonPrimarySlot"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirmonPrimaryPort"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirroringSlot"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirroringPort"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirMonErrorNi"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirMonError"))
if mibBuilder.loadTexts: mirrorConfigError.setStatus('current')
monitorFileWritten = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 0, 2)).setObjects(("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirmonPrimarySlot"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirmonPrimaryPort"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorFileName"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorFileSize"))
if mibBuilder.loadTexts: monitorFileWritten.setStatus('current')
mirrorUnlikeNi = NotificationType((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 0, 3)).setObjects(("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirmonPrimarySlot"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirmonPrimaryPort"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirroringSlot"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirroringPort"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirMonErrorNi"))
if mibBuilder.loadTexts: mirrorUnlikeNi.setStatus('current')
mirmonSFlowObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 4))
alasFlowFsTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 4, 1), )
if mibBuilder.loadTexts: alasFlowFsTable.setStatus('current')
alasFlowFsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 4, 1, 1), )
sFlowFsEntry.registerAugmentions(("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "alasFlowFsEntry"))
alasFlowFsEntry.setIndexNames(*sFlowFsEntry.getIndexNames())
if mibBuilder.loadTexts: alasFlowFsEntry.setStatus('current')
alasFlowFsDeleteEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("delete", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alasFlowFsDeleteEntry.setStatus('current')
alasFlowCpTable = MibTable((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 4, 2), )
if mibBuilder.loadTexts: alasFlowCpTable.setStatus('current')
alasFlowCpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 4, 2, 1), )
sFlowCpEntry.registerAugmentions(("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "alasFlowCpEntry"))
alasFlowCpEntry.setIndexNames(*sFlowCpEntry.getIndexNames())
if mibBuilder.loadTexts: alasFlowCpEntry.setStatus('current')
alasFlowCpDeleteEntry = MibTableColumn((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("delete", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alasFlowCpDeleteEntry.setStatus('current')
alasFlowAgentConfigType = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("user", 2))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alasFlowAgentConfigType.setStatus('current')
alasFlowAgentAddressType = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 4, 4), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alasFlowAgentAddressType.setStatus('current')
alasFlowAgentAddress = MibScalar((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 1, 4, 5), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: alasFlowAgentAddress.setStatus('current')
alcatelIND1PortMirMonMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 2, 2, 1)).setObjects(("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "portMirroringGroup"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "portMonitoringGroup"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "portNotificationVarsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    alcatelIND1PortMirMonMIBCompliance = alcatelIND1PortMirMonMIBCompliance.setStatus('current')
portMirroringGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 2, 1, 1)).setObjects(("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorSessionNumber"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorMirroredIfindex"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorMirroringIfindex"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorStatus"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorUnblockedVLAN"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorRowStatus"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorDirection"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorSessOperStatus"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorSrcMirroredIf"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorSrcStatus"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorSrcDirection"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorSrcRowStatus"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorSrcOperStatus"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorDstOperStatus"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorDstAdminStatus"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorDstRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    portMirroringGroup = portMirroringGroup.setStatus('current')
portMonitoringGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 2, 1, 2)).setObjects(("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorSessionNumber"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorIfindex"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorFileStatus"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorFileName"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorFileSize"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorScreenStatus"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorScreenLine"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorTrafficType"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorStatus"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorFileOverWrite"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorDirection"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorTimeout"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorRowStatus"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorCaptureType"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorSrcStatus"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorSrcDirection"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorSrcRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    portMonitoringGroup = portMonitoringGroup.setStatus('current')
portNotificationVarsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 2, 1, 3)).setObjects(("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirmonPrimarySlot"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirmonPrimaryPort"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirroringSlot"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirroringPort"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirMonSession"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirMonError"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirMonErrorNi"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    portNotificationVarsGroup = portNotificationVarsGroup.setStatus('current')
mirmonTrapsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 2, 1, 4)).setObjects(("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorConfigError"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorUnlikeNi"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "monitorFileWritten"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mirmonTrapsGroup = mirmonTrapsGroup.setStatus('current')
sFlowAgentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 2, 1, 5)).setObjects(("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "alasFlowAgentAddress"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "alasFlowAgentAddressType"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "alasFlowAgentConfigType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sFlowAgentGroup = sFlowAgentGroup.setStatus('current')
portMirrorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 2, 1, 6)).setObjects(("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorSessionNumber"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorMirroredIfindex"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorMirroringIfindex"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorStatus"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorUnblockedVLAN"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorRowStatus"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorDirection"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorSessOperStatus"), ("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "mirrorTaggedVLAN"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    portMirrorGroup = portMirrorGroup.setStatus('current')
portSFlowCpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 2, 1, 7)).setObjects(("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "alasFlowCpDeleteEntry"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    portSFlowCpGroup = portSFlowCpGroup.setStatus('current')
portSFlowFsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6486, 801, 1, 2, 1, 19, 1, 2, 1, 8)).setObjects(("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", "alasFlowFsDeleteEntry"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    portSFlowFsGroup = portSFlowFsGroup.setStatus('current')
mibBuilder.exportSymbols("ALCATEL-IND1-PORT-MIRRORING-MONITORING-MIB", monitorFileOverWrite=monitorFileOverWrite, monitorCaptureType=monitorCaptureType, PYSNMP_MODULE_ID=alcatelIND1PortMirrorMonitoringMIB, alcatelIND1PortMirMonMIBGroups=alcatelIND1PortMirMonMIBGroups, mirrorEntry=mirrorEntry, mirrorSrcOperStatus=mirrorSrcOperStatus, alasFlowAgentAddress=alasFlowAgentAddress, monitorDirection=monitorDirection, monitorIfindex=monitorIfindex, monitorSrcRowStatus=monitorSrcRowStatus, monitorFileStatus=monitorFileStatus, monitorSrcTable=monitorSrcTable, monitorEntry=monitorEntry, monitorSrcStatus=monitorSrcStatus, portSFlowFsGroup=portSFlowFsGroup, monitorFileSize=monitorFileSize, mirmonSFlowObjects=mirmonSFlowObjects, mirmonPrimaryPort=mirmonPrimaryPort, alcatelIND1PortMirMonMIBNotifications=alcatelIND1PortMirMonMIBNotifications, monitorSrcEntry=monitorSrcEntry, mirroringPort=mirroringPort, portNotificationVarsGroup=portNotificationVarsGroup, monitorTable=monitorTable, monitorScreenStatus=monitorScreenStatus, mirmonPrimarySlot=mirmonPrimarySlot, mirrorMirroringIfindex=mirrorMirroringIfindex, mirmonTrapsGroup=mirmonTrapsGroup, monitorSrcIfindex=monitorSrcIfindex, alasFlowFsEntry=alasFlowFsEntry, mirrorSrcDirection=mirrorSrcDirection, sFlowAgentGroup=sFlowAgentGroup, alasFlowCpDeleteEntry=alasFlowCpDeleteEntry, mirrorSessionNumber=mirrorSessionNumber, monitorSessionNumber=monitorSessionNumber, mirrorTaggedVLAN=mirrorTaggedVLAN, mirMonError=mirMonError, portMirroringGroup=portMirroringGroup, monitorRowStatus=monitorRowStatus, mirrorDstAdminStatus=mirrorDstAdminStatus, alasFlowFsDeleteEntry=alasFlowFsDeleteEntry, mirmonMonitoring=mirmonMonitoring, mirrorDstOperStatus=mirrorDstOperStatus, mirrorDirection=mirrorDirection, mirrorDstTable=mirrorDstTable, mirrorSrcMirroredIf=mirrorSrcMirroredIf, mirrorSrcTable=mirrorSrcTable, mirrorDstEntry=mirrorDstEntry, alcatelIND1PortMirMonMIBCompliances=alcatelIND1PortMirMonMIBCompliances, mirrorSrcStatus=mirrorSrcStatus, portSFlowCpGroup=portSFlowCpGroup, monitorFileWritten=monitorFileWritten, monitorSrcDirection=monitorSrcDirection, alasFlowAgentConfigType=alasFlowAgentConfigType, portMonitoringGroup=portMonitoringGroup, mirmonNotificationVars=mirmonNotificationVars, portMirrorGroup=portMirrorGroup, monitorScreenLine=monitorScreenLine, alasFlowAgentAddressType=alasFlowAgentAddressType, mirrorUnlikeNi=mirrorUnlikeNi, mirmonMirroring=mirmonMirroring, mirrorStatus=mirrorStatus, mirrorDstMirroringIf=mirrorDstMirroringIf, monitorTimeout=monitorTimeout, monitorTrafficType=monitorTrafficType, mirrorSessOperStatus=mirrorSessOperStatus, MirMonErrorIds=MirMonErrorIds, mirrorConfigError=mirrorConfigError, alasFlowCpTable=alasFlowCpTable, alcatelIND1PortMirMonMIBCompliance=alcatelIND1PortMirMonMIBCompliance, alasFlowCpEntry=alasFlowCpEntry, monitorFileName=monitorFileName, mirrorSrcRowStatus=mirrorSrcRowStatus, mirrorRowStatus=mirrorRowStatus, mirrorSrcEntry=mirrorSrcEntry, mirrorUnblockedVLAN=mirrorUnblockedVLAN, alcatelIND1PortMirMonMIBConformance=alcatelIND1PortMirMonMIBConformance, alcatelIND1PortMirMonMIBObjects=alcatelIND1PortMirMonMIBObjects, mirrorDstRowStatus=mirrorDstRowStatus, mirrorMirroredIfindex=mirrorMirroredIfindex, monitorStatus=monitorStatus, mirMonErrorNi=mirMonErrorNi, mirroringSlot=mirroringSlot, mirMonSession=mirMonSession, alcatelIND1PortMirrorMonitoringMIB=alcatelIND1PortMirrorMonitoringMIB, mirrorTable=mirrorTable, alasFlowFsTable=alasFlowFsTable)
