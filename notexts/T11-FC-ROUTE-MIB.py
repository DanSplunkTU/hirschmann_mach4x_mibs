#
# PySNMP MIB module T11-FC-ROUTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/T11-FC-ROUTE-MIB
# Produced by pysmi-1.1.8 at Sat Jan 15 17:49:34 2022
# On host fv-az121-65 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
FcDomainIdOrZero, fcmInstanceIndex, fcmSwitchIndex, FcAddressIdOrZero = mibBuilder.importSymbols("FC-MGMT-MIB", "FcDomainIdOrZero", "fcmInstanceIndex", "fcmSwitchIndex", "FcAddressIdOrZero")
InterfaceIndex, InterfaceIndexOrZero = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "InterfaceIndexOrZero")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, iso, ObjectIdentity, IpAddress, Counter64, mib_2, Bits, Counter32, NotificationType, Unsigned32, Gauge32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "iso", "ObjectIdentity", "IpAddress", "Counter64", "mib-2", "Bits", "Counter32", "NotificationType", "Unsigned32", "Gauge32", "MibIdentifier")
StorageType, DisplayString, TimeStamp, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "DisplayString", "TimeStamp", "RowStatus", "TextualConvention")
T11FabricIndex, = mibBuilder.importSymbols("T11-TC-MIB", "T11FabricIndex")
t11FcRouteMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 144))
t11FcRouteMIB.setRevisions(('2006-08-14 00:00',))
if mibBuilder.loadTexts: t11FcRouteMIB.setLastUpdated('200608140000Z')
if mibBuilder.loadTexts: t11FcRouteMIB.setOrganization('T11')
t11FcRouteNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 144, 0))
t11FcRouteObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 144, 1))
t11FcRouteConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 144, 2))
t11FcRouteFabricTable = MibTable((1, 3, 6, 1, 2, 1, 144, 1, 1), )
if mibBuilder.loadTexts: t11FcRouteFabricTable.setStatus('current')
t11FcRouteFabricEntry = MibTableRow((1, 3, 6, 1, 2, 1, 144, 1, 1, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-ROUTE-MIB", "t11FcRouteFabricIndex"))
if mibBuilder.loadTexts: t11FcRouteFabricEntry.setStatus('current')
t11FcRouteFabricIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 144, 1, 1, 1, 1), T11FabricIndex())
if mibBuilder.loadTexts: t11FcRouteFabricIndex.setStatus('current')
t11FcRouteFabricLastChange = MibTableColumn((1, 3, 6, 1, 2, 1, 144, 1, 1, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRouteFabricLastChange.setStatus('current')
t11FcRouteTable = MibTable((1, 3, 6, 1, 2, 1, 144, 1, 2), )
if mibBuilder.loadTexts: t11FcRouteTable.setStatus('current')
t11FcRouteEntry = MibTableRow((1, 3, 6, 1, 2, 1, 144, 1, 2, 1), ).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-ROUTE-MIB", "t11FcRouteFabricIndex"), (0, "T11-FC-ROUTE-MIB", "t11FcRouteDestAddrId"), (0, "T11-FC-ROUTE-MIB", "t11FcRouteDestMask"), (0, "T11-FC-ROUTE-MIB", "t11FcRouteSrcAddrId"), (0, "T11-FC-ROUTE-MIB", "t11FcRouteSrcMask"), (0, "T11-FC-ROUTE-MIB", "t11FcRouteInInterface"), (0, "T11-FC-ROUTE-MIB", "t11FcRouteProto"), (0, "T11-FC-ROUTE-MIB", "t11FcRouteOutInterface"))
if mibBuilder.loadTexts: t11FcRouteEntry.setStatus('current')
t11FcRouteDestAddrId = MibTableColumn((1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 1), FcAddressIdOrZero().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3))
if mibBuilder.loadTexts: t11FcRouteDestAddrId.setStatus('current')
t11FcRouteDestMask = MibTableColumn((1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 2), FcAddressIdOrZero())
if mibBuilder.loadTexts: t11FcRouteDestMask.setStatus('current')
t11FcRouteSrcAddrId = MibTableColumn((1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 3), FcAddressIdOrZero())
if mibBuilder.loadTexts: t11FcRouteSrcAddrId.setStatus('current')
t11FcRouteSrcMask = MibTableColumn((1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 4), FcAddressIdOrZero())
if mibBuilder.loadTexts: t11FcRouteSrcMask.setStatus('current')
t11FcRouteInInterface = MibTableColumn((1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 5), InterfaceIndexOrZero())
if mibBuilder.loadTexts: t11FcRouteInInterface.setStatus('current')
t11FcRouteProto = MibTableColumn((1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("netmgmt", 3), ("fspf", 4))))
if mibBuilder.loadTexts: t11FcRouteProto.setStatus('current')
t11FcRouteOutInterface = MibTableColumn((1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 7), InterfaceIndex())
if mibBuilder.loadTexts: t11FcRouteOutInterface.setStatus('current')
t11FcRouteDomainId = MibTableColumn((1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 8), FcDomainIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcRouteDomainId.setStatus('current')
t11FcRouteMetric = MibTableColumn((1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcRouteMetric.setStatus('current')
t11FcRouteType = MibTableColumn((1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2))).clone('local')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcRouteType.setStatus('current')
t11FcRouteIfDown = MibTableColumn((1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("remove", 1), ("retain", 2))).clone('retain')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcRouteIfDown.setStatus('current')
t11FcRouteStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 12), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcRouteStorageType.setStatus('current')
t11FcRouteRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 144, 1, 2, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: t11FcRouteRowStatus.setStatus('current')
t11FcRouteCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 144, 2, 1))
t11FcRouteGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 144, 2, 2))
t11FcRouteCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 144, 2, 1, 1)).setObjects(("T11-FC-ROUTE-MIB", "t11FcRouteGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FcRouteCompliance = t11FcRouteCompliance.setStatus('current')
t11FcRouteGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 144, 2, 2, 1)).setObjects(("T11-FC-ROUTE-MIB", "t11FcRouteFabricLastChange"), ("T11-FC-ROUTE-MIB", "t11FcRouteDomainId"), ("T11-FC-ROUTE-MIB", "t11FcRouteMetric"), ("T11-FC-ROUTE-MIB", "t11FcRouteType"), ("T11-FC-ROUTE-MIB", "t11FcRouteIfDown"), ("T11-FC-ROUTE-MIB", "t11FcRouteStorageType"), ("T11-FC-ROUTE-MIB", "t11FcRouteRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    t11FcRouteGroup = t11FcRouteGroup.setStatus('current')
mibBuilder.exportSymbols("T11-FC-ROUTE-MIB", t11FcRouteFabricIndex=t11FcRouteFabricIndex, t11FcRouteTable=t11FcRouteTable, t11FcRouteConformance=t11FcRouteConformance, t11FcRouteGroup=t11FcRouteGroup, t11FcRouteMetric=t11FcRouteMetric, t11FcRouteObjects=t11FcRouteObjects, t11FcRouteProto=t11FcRouteProto, t11FcRouteOutInterface=t11FcRouteOutInterface, t11FcRouteSrcAddrId=t11FcRouteSrcAddrId, t11FcRouteEntry=t11FcRouteEntry, t11FcRouteStorageType=t11FcRouteStorageType, t11FcRouteFabricLastChange=t11FcRouteFabricLastChange, t11FcRouteDestAddrId=t11FcRouteDestAddrId, t11FcRouteMIB=t11FcRouteMIB, t11FcRouteSrcMask=t11FcRouteSrcMask, t11FcRouteFabricEntry=t11FcRouteFabricEntry, t11FcRouteNotifications=t11FcRouteNotifications, t11FcRouteCompliance=t11FcRouteCompliance, t11FcRouteDestMask=t11FcRouteDestMask, t11FcRouteRowStatus=t11FcRouteRowStatus, t11FcRouteGroups=t11FcRouteGroups, t11FcRouteDomainId=t11FcRouteDomainId, t11FcRouteFabricTable=t11FcRouteFabricTable, t11FcRouteCompliances=t11FcRouteCompliances, t11FcRouteType=t11FcRouteType, PYSNMP_MODULE_ID=t11FcRouteMIB, t11FcRouteInInterface=t11FcRouteInInterface, t11FcRouteIfDown=t11FcRouteIfDown)
