#
# PySNMP MIB module DOT12-IF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/standard/DOT12-IF-MIB
# Produced by pysmi-1.1.8 at Sat Jan 15 17:49:35 2022
# On host fv-az121-65 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, transmission, ModuleIdentity, iso, ObjectIdentity, IpAddress, Counter64, Bits, Counter32, NotificationType, Unsigned32, Gauge32, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "transmission", "ModuleIdentity", "iso", "ObjectIdentity", "IpAddress", "Counter64", "Bits", "Counter32", "NotificationType", "Unsigned32", "Gauge32", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
dot12MIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 45))
if mibBuilder.loadTexts: dot12MIB.setLastUpdated('9602220452Z')
if mibBuilder.loadTexts: dot12MIB.setOrganization('IETF 100VG-AnyLAN MIB Working Group')
dot12MIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 45, 1))
dot12ConfigTable = MibTable((1, 3, 6, 1, 2, 1, 10, 45, 1, 1), )
if mibBuilder.loadTexts: dot12ConfigTable.setStatus('current')
dot12ConfigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 45, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dot12ConfigEntry.setStatus('current')
dot12CurrentFramingType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("frameType88023", 1), ("frameType88025", 2), ("frameTypeUnknown", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12CurrentFramingType.setStatus('current')
dot12DesiredFramingType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("frameType88023", 1), ("frameType88025", 2), ("frameTypeEither", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot12DesiredFramingType.setStatus('current')
dot12FramingCapability = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("frameType88023", 1), ("frameType88025", 2), ("frameTypeEither", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12FramingCapability.setStatus('current')
dot12DesiredPromiscStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("singleAddressMode", 1), ("promiscuousMode", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot12DesiredPromiscStatus.setStatus('current')
dot12TrainingVersion = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12TrainingVersion.setStatus('current')
dot12LastTrainingConfig = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12LastTrainingConfig.setStatus('current')
dot12Commands = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noOp", 1), ("open", 2), ("reset", 3), ("close", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot12Commands.setStatus('current')
dot12Status = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 6))).clone(namedValues=NamedValues(("opened", 1), ("closed", 2), ("opening", 3), ("openFailure", 5), ("linkFailure", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12Status.setStatus('current')
dot12ControlMode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("masterMode", 1), ("slaveMode", 2), ("learn", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dot12ControlMode.setStatus('current')
dot12StatTable = MibTable((1, 3, 6, 1, 2, 1, 10, 45, 1, 2), )
if mibBuilder.loadTexts: dot12StatTable.setStatus('current')
dot12StatEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 45, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dot12StatEntry.setStatus('current')
dot12InHighPriorityFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12InHighPriorityFrames.setStatus('current')
dot12InHighPriorityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12InHighPriorityOctets.setStatus('current')
dot12InNormPriorityFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12InNormPriorityFrames.setStatus('current')
dot12InNormPriorityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12InNormPriorityOctets.setStatus('current')
dot12InIPMErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12InIPMErrors.setStatus('current')
dot12InOversizeFrameErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12InOversizeFrameErrors.setStatus('current')
dot12InDataErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12InDataErrors.setStatus('current')
dot12InNullAddressedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12InNullAddressedFrames.setStatus('current')
dot12OutHighPriorityFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12OutHighPriorityFrames.setStatus('current')
dot12OutHighPriorityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12OutHighPriorityOctets.setStatus('current')
dot12TransitionIntoTrainings = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12TransitionIntoTrainings.setStatus('current')
dot12HCInHighPriorityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12HCInHighPriorityOctets.setStatus('current')
dot12HCInNormPriorityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12HCInNormPriorityOctets.setStatus('current')
dot12HCOutHighPriorityOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 45, 1, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dot12HCOutHighPriorityOctets.setStatus('current')
dot12Conformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 45, 2))
dot12Compliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 45, 2, 1))
dot12Groups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 45, 2, 2))
dot12Compliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 45, 2, 1, 1)).setObjects(("DOT12-IF-MIB", "dot12ConfigGroup"), ("DOT12-IF-MIB", "dot12StatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot12Compliance = dot12Compliance.setStatus('current')
dot12ConfigGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 45, 2, 2, 1)).setObjects(("DOT12-IF-MIB", "dot12DesiredFramingType"), ("DOT12-IF-MIB", "dot12FramingCapability"), ("DOT12-IF-MIB", "dot12DesiredPromiscStatus"), ("DOT12-IF-MIB", "dot12TrainingVersion"), ("DOT12-IF-MIB", "dot12LastTrainingConfig"), ("DOT12-IF-MIB", "dot12Commands"), ("DOT12-IF-MIB", "dot12Status"), ("DOT12-IF-MIB", "dot12CurrentFramingType"), ("DOT12-IF-MIB", "dot12ControlMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot12ConfigGroup = dot12ConfigGroup.setStatus('current')
dot12StatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 45, 2, 2, 2)).setObjects(("DOT12-IF-MIB", "dot12InHighPriorityFrames"), ("DOT12-IF-MIB", "dot12InHighPriorityOctets"), ("DOT12-IF-MIB", "dot12InNormPriorityFrames"), ("DOT12-IF-MIB", "dot12InNormPriorityOctets"), ("DOT12-IF-MIB", "dot12InIPMErrors"), ("DOT12-IF-MIB", "dot12InOversizeFrameErrors"), ("DOT12-IF-MIB", "dot12InDataErrors"), ("DOT12-IF-MIB", "dot12InNullAddressedFrames"), ("DOT12-IF-MIB", "dot12OutHighPriorityFrames"), ("DOT12-IF-MIB", "dot12OutHighPriorityOctets"), ("DOT12-IF-MIB", "dot12TransitionIntoTrainings"), ("DOT12-IF-MIB", "dot12HCInHighPriorityOctets"), ("DOT12-IF-MIB", "dot12HCInNormPriorityOctets"), ("DOT12-IF-MIB", "dot12HCOutHighPriorityOctets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dot12StatsGroup = dot12StatsGroup.setStatus('current')
mibBuilder.exportSymbols("DOT12-IF-MIB", dot12Commands=dot12Commands, dot12Groups=dot12Groups, dot12InIPMErrors=dot12InIPMErrors, dot12OutHighPriorityOctets=dot12OutHighPriorityOctets, dot12MIB=dot12MIB, dot12InNormPriorityOctets=dot12InNormPriorityOctets, dot12ControlMode=dot12ControlMode, dot12Status=dot12Status, dot12FramingCapability=dot12FramingCapability, dot12ConfigTable=dot12ConfigTable, dot12Compliances=dot12Compliances, dot12StatTable=dot12StatTable, PYSNMP_MODULE_ID=dot12MIB, dot12StatEntry=dot12StatEntry, dot12InHighPriorityOctets=dot12InHighPriorityOctets, dot12InNormPriorityFrames=dot12InNormPriorityFrames, dot12InNullAddressedFrames=dot12InNullAddressedFrames, dot12MIBObjects=dot12MIBObjects, dot12InOversizeFrameErrors=dot12InOversizeFrameErrors, dot12TrainingVersion=dot12TrainingVersion, dot12InHighPriorityFrames=dot12InHighPriorityFrames, dot12HCOutHighPriorityOctets=dot12HCOutHighPriorityOctets, dot12DesiredPromiscStatus=dot12DesiredPromiscStatus, dot12Conformance=dot12Conformance, dot12StatsGroup=dot12StatsGroup, dot12TransitionIntoTrainings=dot12TransitionIntoTrainings, dot12ConfigEntry=dot12ConfigEntry, dot12CurrentFramingType=dot12CurrentFramingType, dot12DesiredFramingType=dot12DesiredFramingType, dot12HCInHighPriorityOctets=dot12HCInHighPriorityOctets, dot12ConfigGroup=dot12ConfigGroup, dot12Compliance=dot12Compliance, dot12InDataErrors=dot12InDataErrors, dot12OutHighPriorityFrames=dot12OutHighPriorityFrames, dot12HCInNormPriorityOctets=dot12HCInNormPriorityOctets, dot12LastTrainingConfig=dot12LastTrainingConfig)
