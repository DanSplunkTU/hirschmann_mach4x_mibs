#
# PySNMP MIB module RAPID-POLICY-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/nortel/RAPID-POLICY-MIB
# Produced by pysmi-1.1.8 at Sat Jan 15 17:24:45 2022
# On host fv-az36-128 platform Linux version 5.11.0-1025-azure by user runner
# Using Python version 3.10.1 (main, Dec 22 2021, 10:45:09) [GCC 9.3.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
rapidstream, = mibBuilder.importSymbols("RAPID-MIB", "rapidstream")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, TimeTicks, IpAddress, Bits, MibIdentifier, Unsigned32, ModuleIdentity, Gauge32, Integer32, Counter64, ObjectIdentity, enterprises, Counter32, iso, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "TimeTicks", "IpAddress", "Bits", "MibIdentifier", "Unsigned32", "ModuleIdentity", "Gauge32", "Integer32", "Counter64", "ObjectIdentity", "enterprises", "Counter32", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DateAndTime, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "TextualConvention")
rsPolicyMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 4355, 4))
rsPolicyMIB.setRevisions(('2001-05-21 12:00', '2002-11-01 12:00',))
if mibBuilder.loadTexts: rsPolicyMIB.setLastUpdated('0105211200Z')
if mibBuilder.loadTexts: rsPolicyMIB.setOrganization('WatchGuard Technologies, Inc.')
rsPolicyToTunnel = ObjectIdentity((1, 3, 6, 1, 4, 1, 4355, 4, 1))
if mibBuilder.loadTexts: rsPolicyToTunnel.setStatus('current')
rsPolicyStatistics = ObjectIdentity((1, 3, 6, 1, 4, 1, 4355, 4, 2))
if mibBuilder.loadTexts: rsPolicyStatistics.setStatus('current')
rsPolicyToTunnelNum = MibScalar((1, 3, 6, 1, 4, 1, 4355, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyToTunnelNum.setStatus('current')
rsPolicyToTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 4355, 4, 1, 2), )
if mibBuilder.loadTexts: rsPolicyToTunnelTable.setStatus('current')
rsPolicyToTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4355, 4, 1, 2, 1), ).setIndexNames((0, "RAPID-POLICY-MIB", "rsPolicyToTunnelPolicyID"), (0, "RAPID-POLICY-MIB", "rsPolicyToTunnelTunnelID"))
if mibBuilder.loadTexts: rsPolicyToTunnelEntry.setStatus('current')
rsPolicyToTunnelPolicyID = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 1, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyToTunnelPolicyID.setStatus('current')
rsPolicyToTunnelTunnelID = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 1, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyToTunnelTunnelID.setStatus('current')
rsPolicyTableNum = MibScalar((1, 3, 6, 1, 4, 1, 4355, 4, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyTableNum.setStatus('current')
rsPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2), )
if mibBuilder.loadTexts: rsPolicyTable.setStatus('current')
rsPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1), ).setIndexNames((0, "RAPID-POLICY-MIB", "rsPolicyID"))
if mibBuilder.loadTexts: rsPolicyEntry.setStatus('current')
rsPolicyID = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyID.setStatus('current')
rsPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(32, 32)).setFixedLength(32)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyName.setStatus('current')
rsPolicyBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyBytes.setStatus('current')
rsPolicyPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyPackets.setStatus('current')
rsPolicyIpsecDecryptErr = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyIpsecDecryptErr.setStatus('current')
rsPolicyIpsecAuthErr = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyIpsecAuthErr.setStatus('current')
rsPolicyIpsecReplayErr = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyIpsecReplayErr.setStatus('current')
rsPolicyIpsecPadErr = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyIpsecPadErr.setStatus('current')
rsPolicyIpsecPolicyErr = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyIpsecPolicyErr.setStatus('current')
rsPolicyFwDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyFwDisc.setStatus('current')
rsPolicyOtherDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyOtherDisc.setStatus('current')
rsPolicyActiveStreams = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyActiveStreams.setStatus('current')
rsPolicyIpsecDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyIpsecDisc.setStatus('current')
rsPolicyDisc = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyDisc.setStatus('current')
rsPolicyNumTunl = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyNumTunl.setStatus('current')
rsPolicySingleCntrNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicySingleCntrNum.setStatus('current')
rsPolicyLogging = MibTableColumn((1, 3, 6, 1, 4, 1, 4355, 4, 2, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsPolicyLogging.setStatus('current')
mibBuilder.exportSymbols("RAPID-POLICY-MIB", rsPolicyLogging=rsPolicyLogging, rsPolicyOtherDisc=rsPolicyOtherDisc, PYSNMP_MODULE_ID=rsPolicyMIB, rsPolicyTableNum=rsPolicyTableNum, rsPolicyToTunnelTable=rsPolicyToTunnelTable, rsPolicyToTunnelEntry=rsPolicyToTunnelEntry, rsPolicyBytes=rsPolicyBytes, rsPolicyTable=rsPolicyTable, rsPolicyIpsecDecryptErr=rsPolicyIpsecDecryptErr, rsPolicyToTunnelNum=rsPolicyToTunnelNum, rsPolicyToTunnelTunnelID=rsPolicyToTunnelTunnelID, rsPolicyID=rsPolicyID, rsPolicyStatistics=rsPolicyStatistics, rsPolicyNumTunl=rsPolicyNumTunl, rsPolicyIpsecPadErr=rsPolicyIpsecPadErr, rsPolicyEntry=rsPolicyEntry, rsPolicyIpsecAuthErr=rsPolicyIpsecAuthErr, rsPolicyIpsecDisc=rsPolicyIpsecDisc, rsPolicyMIB=rsPolicyMIB, rsPolicyToTunnelPolicyID=rsPolicyToTunnelPolicyID, rsPolicyFwDisc=rsPolicyFwDisc, rsPolicyPackets=rsPolicyPackets, rsPolicySingleCntrNum=rsPolicySingleCntrNum, rsPolicyDisc=rsPolicyDisc, rsPolicyToTunnel=rsPolicyToTunnel, rsPolicyIpsecReplayErr=rsPolicyIpsecReplayErr, rsPolicyIpsecPolicyErr=rsPolicyIpsecPolicyErr, rsPolicyActiveStreams=rsPolicyActiveStreams, rsPolicyName=rsPolicyName)
