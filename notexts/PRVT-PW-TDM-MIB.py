#
# PySNMP MIB module PRVT-PW-TDM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binos/PRVT-PW-TDM-MIB
# Produced by pysmi-1.1.3 at Tue Dec  7 14:20:40 2021
# On host fv-az42-142 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
switch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "switch")
PerfCurrentCount, PerfIntervalCount = mibBuilder.importSymbols("PerfHist-TC-MIB", "PerfCurrentCount", "PerfIntervalCount")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, NotificationType, ObjectIdentity, Integer32, IpAddress, transmission, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, iso, TimeTicks, Gauge32, MibIdentifier, Counter32, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "NotificationType", "ObjectIdentity", "Integer32", "IpAddress", "transmission", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "iso", "TimeTicks", "Gauge32", "MibIdentifier", "Counter32", "Unsigned32")
StorageType, RowStatus, TruthValue, DisplayString, TextualConvention, TimeStamp = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "RowStatus", "TruthValue", "DisplayString", "TextualConvention", "TimeStamp")
prvtPwVcTDMMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2))
prvtPwVcTDMMIB.setRevisions(('2019-02-27 00:00', '2009-07-07 00:00', '2009-07-01 00:00', '2009-03-06 00:00', '2009-03-05 00:00', '2009-02-18 00:00', '2009-01-15 00:00', '2008-06-19 00:00', '2006-07-24 00:00',))
if mibBuilder.loadTexts: prvtPwVcTDMMIB.setLastUpdated('200907070000Z')
if mibBuilder.loadTexts: prvtPwVcTDMMIB.setOrganization('BATM Advanced Communication')
prvtPwVc = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 200))
class PrvtPwVcTDMCfgIndex(TextualConvention, Unsigned32):
    status = 'current'

class TimeSlotList(TextualConvention, OctetString):
    status = 'current'

class PrvtPwVcTDMCfgInterface(TextualConvention, IpAddress):
    status = 'current'

class InterfaceTimeSlot(TextualConvention, OctetString):
    status = 'current'

prvtPwVcTDMObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1))
prvtPwVcTDMTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 2))
prvtPwVcTDMConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 3))
prvtPwVcTDMTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 1), )
if mibBuilder.loadTexts: prvtPwVcTDMTable.setStatus('current')
prvtPwVcTDMEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 1, 1), ).setIndexNames((0, "PRVT-PW-TDM-MIB", "prvtPwVcTDMModuleId"), (0, "PRVT-PW-TDM-MIB", "prvtPwVcTDMCircuitId"))
if mibBuilder.loadTexts: prvtPwVcTDMEntry.setStatus('current')
prvtPwVcTDMModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMModuleId.setStatus('current')
prvtPwVcTDMCircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMCircuitId.setStatus('current')
prvtPwVcTDMType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("other", 1), ("ds1", 2), ("e1", 3), ("ds3", 4), ("e3", 5), ("octetAlignedT1", 6), ("nXds0", 7), ("nXds0WithCASe1", 8), ("nXds0WithCASds1Esf", 9), ("nXds0WithCASds1Sf", 10))).clone('e1')).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMType.setStatus('current')
prvtPwVcRelTDMCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 1, 1, 4), PrvtPwVcTDMCfgIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcRelTDMCfgIndex.setStatus('current')
prvtPwVcTDMTimeElapsed = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 900))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMTimeElapsed.setStatus('current')
prvtPwVcTDMValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMValidIntervals.setStatus('current')
prvtPwVcTDMCurrentIndications = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 1, 1, 7), Bits().clone(namedValues=NamedValues(("other", 0), ("strayPacket", 1), ("malformedPacket", 2), ("excessivePktLossRate", 3), ("bufferOverrun", 4), ("bufferUnderrun", 5), ("remotePktLoss", 6), ("packetLoss", 7), ("tdmFault", 8), ("packetsLbitCounter", 9), ("packetsRbitCounter", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMCurrentIndications.setStatus('current')
prvtPwVcTDMLatchedIndications = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 1, 1, 8), Bits().clone(namedValues=NamedValues(("other", 0), ("staryPacket", 1), ("malformedPacket", 2), ("excessivePktLossRate", 3), ("bufferOverrun", 4), ("bufferUnderrun", 5), ("remotePktLoss", 6), ("packetLoss", 7), ("tdmFault", 8), ("packetsLbitCounter", 9), ("packetsRbitCounter", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMLatchedIndications.setStatus('current')
prvtPwVcTDMLastEsTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 1, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMLastEsTimeStamp.setStatus('current')
prvtPwVcTDMEmulationMode = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("undefined", 0), ("structured", 1), ("unstuctured", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMEmulationMode.setStatus('current')
prvtPwVcTDMOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMOperStatus.setStatus('current')
prvtPwVcTDMClearCircuitStatistics = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtPwVcTDMClearCircuitStatistics.setStatus('current')
prvtPwVcTDMCfgTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3), )
if mibBuilder.loadTexts: prvtPwVcTDMCfgTable.setStatus('current')
prvtPwVcTDMCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1), ).setIndexNames((0, "PRVT-PW-TDM-MIB", "prvtPwVcTDMModuleId"), (0, "PRVT-PW-TDM-MIB", "prvtPwVcTDMCircuitId"))
if mibBuilder.loadTexts: prvtPwVcTDMCfgEntry.setStatus('current')
prvtPwVcTDMCfgPayloadSize = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 1), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgPayloadSize.setStatus('current')
prvtPwVcTDMCfgPktReorder = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 2), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgPktReorder.setStatus('current')
prvtPwVcTDMCfgRtpHdrUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgRtpHdrUsed.setStatus('current')
prvtPwVcTDMCfgJtrBfrDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 200)).clone(3)).setUnits('millisecond').setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgJtrBfrDepth.setStatus('current')
prvtPwVcTDMCfgChannelGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgChannelGroup.setStatus('current')
prvtPwVcTDMCfgPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 6), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgPorts.setStatus('current')
prvtPwVcTDMCfgPeerIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4, 6, 16))).clone(namedValues=NamedValues(("ipv4", 4), ("ipv6", 6), ("dns", 16)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgPeerIpType.setStatus('current')
prvtPwVcTDMCfgPeerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 8), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgPeerIpAddress.setStatus('current')
prvtPwVcTDMCfgPeerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgPeerPort.setStatus('current')
prvtPwVcTDMCfgPeerMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 10), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgPeerMAC.setStatus('current')
prvtPwVcTDMCfgPeerEcid = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 11), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgPeerEcid.setStatus('current')
prvtPwVcTDMCfgPeerOosEcid = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 12), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgPeerOosEcid.setStatus('current')
prvtPwVcTDMCfgVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgVlanId.setStatus('current')
prvtPwVcTDMCfgVlanPrio = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgVlanPrio.setStatus('current')
prvtPwVcTDMCfgLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgLocalPort.setStatus('current')
prvtPwVcTDMCfgEcid = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 16), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgEcid.setStatus('current')
prvtPwVcTDMCfgOosEcid = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 17), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgOosEcid.setStatus('current')
prvtPwVcTDMCfgProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("undefined", 0), ("satop", 1), ("cesopsn", 2), ("metro-ethernet", 3), ("mpls", 4)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgProtocol.setStatus('current')
prvtPwVcTDMCfgAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgAdminStatus.setStatus('current')
prvtPwVcTDMCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 20), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgRowStatus.setStatus('current')
prvtPwVcTDMCfgRtp = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgRtp.setStatus('current')
prvtPwVcTDMCfgOosPort = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgOosPort.setStatus('current')
prvtPwVcTDMCfgPayloadSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgPayloadSuppression.setStatus('current')
prvtPwVcTDMCfgInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 24), PrvtPwVcTDMCfgInterface()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgInterface.setStatus('current')
prvtPwVcTDMCfgIpTos = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgIpTos.setStatus('current')
prvtPwVcTDMCfgIpOosTos = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgIpOosTos.setStatus('current')
prvtPwVcTDMCfgPeerOosPort = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgPeerOosPort.setStatus('current')
prvtPwVcTDMCfgMplsLocalLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1048575)).clone(15)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgMplsLocalLabel.setStatus('current')
prvtPwVcTDMCfgMplsPeerLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1048575)).clone(15)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgMplsPeerLabel.setStatus('current')
prvtPwVcTDMCfgMplsTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 255)).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgMplsTTL.setStatus('current')
prvtPwVcTDMCfgMplsExp = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgMplsExp.setStatus('current')
prvtPwVcTDMCfgMplsOosLocalLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1048575)).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgMplsOosLocalLabel.setStatus('current')
prvtPwVcTDMCfgMplsOosPeerLabel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1048575)).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgMplsOosPeerLabel.setStatus('current')
prvtPwVcTDMCfgMplsOosTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 255)).clone(255)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgMplsOosTTL.setStatus('current')
prvtPwVcTDMCfgMplsOosExp = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgMplsOosExp.setStatus('current')
prvtPwVcTDMCfgRtpOosPayload = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgRtpOosPayload.setStatus('current')
prvtPwVcTDMCfgRtpPayload = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 3, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtPwVcTDMCfgRtpPayload.setStatus('current')
prvtTDMChannelGrpTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 4), )
if mibBuilder.loadTexts: prvtTDMChannelGrpTable.setStatus('current')
prvtTDMChannelGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 4, 1), ).setIndexNames((0, "PRVT-PW-TDM-MIB", "prvtTDMChannelGrpModuleID"), (0, "PRVT-PW-TDM-MIB", "prvtTDMChannelGrpID"))
if mibBuilder.loadTexts: prvtTDMChannelGrpEntry.setStatus('current')
prvtTDMChannelGrpModuleID = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 4, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtTDMChannelGrpModuleID.setStatus('current')
prvtTDMChannelGrpID = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtTDMChannelGrpID.setStatus('current')
prvtTDMChannelGrpCfgError = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("noError", 0), ("channelGroupAtached", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtTDMChannelGrpCfgError.setStatus('current')
prvtTDMChannelGrpTimeSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 4, 1, 4), TimeSlotList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtTDMChannelGrpTimeSlots.setStatus('current')
prvtTDMChannelGrpOC3TimeSlots = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 4, 1, 5), InterfaceTimeSlot()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtTDMChannelGrpOC3TimeSlots.setStatus('current')
prvtPwVcTDMPerfCurrentTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 5), )
if mibBuilder.loadTexts: prvtPwVcTDMPerfCurrentTable.setStatus('current')
prvtPwVcTDMPerfCurrentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 5, 1), ).setIndexNames((0, "PRVT-PW-TDM-MIB", "prvtPwVcTDMModuleId"), (0, "PRVT-PW-TDM-MIB", "prvtPwVcTDMCircuitId"))
if mibBuilder.loadTexts: prvtPwVcTDMPerfCurrentEntry.setStatus('current')
prvtPwVcTDMPerfCurrentPktsOoseq = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfCurrentPktsOoseq.setStatus('current')
prvtPwVcTDMPerfCurrentJtrBfrUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfCurrentJtrBfrUnderruns.setStatus('current')
prvtPwVcTDMPerfCurrentJtrBfrOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfCurrentJtrBfrOverruns.setStatus('current')
prvtPwVcTDMPerfCurrentMalformedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfCurrentMalformedPkt.setStatus('current')
prvtPwVcTDMPerfCurrentNearEndFC = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfCurrentNearEndFC.setStatus('current')
prvtPwVcTDMPerfCurrentFarEndFC = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfCurrentFarEndFC.setStatus('current')
prvtPwVcTDMPerfIntervalTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 6), )
if mibBuilder.loadTexts: prvtPwVcTDMPerfIntervalTable.setStatus('current')
prvtPwVcTDMPerfIntervalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 6, 1), ).setIndexNames((0, "PRVT-PW-TDM-MIB", "prvtPwVcTDMModuleId"), (0, "PRVT-PW-TDM-MIB", "prvtPwVcTDMCircuitId"), (0, "PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfIntervalNumber"))
if mibBuilder.loadTexts: prvtPwVcTDMPerfIntervalEntry.setStatus('current')
prvtPwVcTDMPerfIntervalNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: prvtPwVcTDMPerfIntervalNumber.setStatus('current')
prvtPwVcTDMPerfIntervalValidData = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 6, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfIntervalValidData.setStatus('current')
prvtPwVcTDMPerfIntervalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 6, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfIntervalDuration.setStatus('current')
prvtPwVcTDMPerfIntervalPktsOoseq = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfIntervalPktsOoseq.setStatus('current')
prvtPwVcTDMPerfIntervalJtrBfrUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfIntervalJtrBfrUnderruns.setStatus('current')
prvtPwVcTDMPerfIntervalJtrBfrOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfIntervalJtrBfrOverruns.setStatus('current')
prvtPwVcTDMPerfIntervalMalformedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfIntervalMalformedPkt.setStatus('current')
prvtPwVcTDMPerfIntervalNearEndFC = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfIntervalNearEndFC.setStatus('current')
prvtPwVcTDMPerfIntervalFarEndFC = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfIntervalFarEndFC.setStatus('current')
prvtPwVcTDMPerfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 7), )
if mibBuilder.loadTexts: prvtPwVcTDMPerfTable.setStatus('current')
prvtPwVcTDMPerfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 7, 1), ).setIndexNames((0, "PRVT-PW-TDM-MIB", "prvtPwVcTDMModuleId"), (0, "PRVT-PW-TDM-MIB", "prvtPwVcTDMCircuitId"))
if mibBuilder.loadTexts: prvtPwVcTDMPerfEntry.setStatus('current')
prvtPwVcTDMPerfPktsOoseq = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 7, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfPktsOoseq.setStatus('current')
prvtPwVcTDMPerfJtrBfrUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 7, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfJtrBfrUnderruns.setStatus('current')
prvtPwVcTDMPerfJtrBfrOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 7, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfJtrBfrOverruns.setStatus('current')
prvtPwVcTDMPerfMalformedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 7, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfMalformedPkt.setStatus('current')
prvtPwVcTDMPerfDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 7, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfDiscontinuityTime.setStatus('current')
prvtPwVcTDMPerfNearEndFC = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 7, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfNearEndFC.setStatus('current')
prvtPwVcTDMPerfFarEndFC = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 7, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMPerfFarEndFC.setStatus('current')
prvtPwVcTDMAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 8), )
if mibBuilder.loadTexts: prvtPwVcTDMAlarmTable.setStatus('current')
prvtPwVcTDMAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 8, 1), ).setIndexNames((0, "PRVT-PW-TDM-MIB", "prvtPwVcTDMModuleId"), (0, "PRVT-PW-TDM-MIB", "prvtPwVcTDMCircuitId"), (0, "PRVT-PW-TDM-MIB", "prvtPwVcTDMAlarmIndex"))
if mibBuilder.loadTexts: prvtPwVcTDMAlarmEntry.setStatus('current')
prvtPwVcTDMAlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 8, 1, 1), Gauge32())
if mibBuilder.loadTexts: prvtPwVcTDMAlarmIndex.setStatus('current')
prvtPwVcTDMAlarmVariable = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 8, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtPwVcTDMAlarmVariable.setStatus('current')
prvtPwVcTDMAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 8, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prvtPwVcTDMAlarmThreshold.setStatus('current')
prvtPwVcTDMAlarmValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 1, 8, 1, 4), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: prvtPwVcTDMAlarmValue.setStatus('current')
prvtPwVcTDMAlarm = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 2, 1)).setObjects(("PRVT-PW-TDM-MIB", "prvtPwVcTDMAlarmVariable"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMAlarmThreshold"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMAlarmValue"))
if mibBuilder.loadTexts: prvtPwVcTDMAlarm.setStatus('current')
prvtPwVcTDMStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 2, 2)).setObjects(("PRVT-PW-TDM-MIB", "prvtPwVcTDMOperStatus"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMCfgAdminStatus"))
if mibBuilder.loadTexts: prvtPwVcTDMStatusChange.setStatus('current')
prvtPwVcTDMGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 3, 1))
prvtPwVcTDMCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 3, 2))
prvtPwTDMModuleCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 3, 2, 1)).setObjects(("PRVT-PW-TDM-MIB", "prvtPwVcTDMGroup"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfCurrentGroup"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfIntervalGroup"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfGroup"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    prvtPwTDMModuleCompliance = prvtPwTDMModuleCompliance.setStatus('current')
prvtPwVcTDMGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 3, 1, 1)).setObjects(("PRVT-PW-TDM-MIB", "prvtPwVcTDMType"), ("PRVT-PW-TDM-MIB", "prvtPwVcRelTDMCfgIndex"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMTimeElapsed"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMValidIntervals"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMCurrentIndications"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMLatchedIndications"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMLastEsTimeStamp"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMCfgPayloadSize"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMCfgPktReorder"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMCfgRtpHdrUsed"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMCfgJtrBfrDepth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    prvtPwVcTDMGroup = prvtPwVcTDMGroup.setStatus('current')
prvtPwVcTDMPerfCurrentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 3, 1, 2)).setObjects(("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfCurrentPktsOoseq"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfCurrentJtrBfrUnderruns"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfCurrentJtrBfrOverruns"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfCurrentMalformedPkt"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfNearEndFC"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfFarEndFC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    prvtPwVcTDMPerfCurrentGroup = prvtPwVcTDMPerfCurrentGroup.setStatus('current')
prvtPwVcTDMPerfIntervalGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 3, 1, 3)).setObjects(("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfIntervalPktsOoseq"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfIntervalJtrBfrUnderruns"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfIntervalJtrBfrOverruns"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfIntervalMalformedPkt"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfNearEndFC"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfFarEndFC"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfIntervalValidData"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfIntervalDuration"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    prvtPwVcTDMPerfIntervalGroup = prvtPwVcTDMPerfIntervalGroup.setStatus('current')
prvtPwVcTDMPerfGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 3, 1, 4)).setObjects(("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfPktsOoseq"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfJtrBfrUnderruns"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfJtrBfrOverruns"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfMalformedPkt"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfNearEndFC"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfFarEndFC"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMPerfDiscontinuityTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    prvtPwVcTDMPerfGroup = prvtPwVcTDMPerfGroup.setStatus('current')
prvtPwVcTDMNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 738, 1, 5, 200, 2, 3, 1, 5)).setObjects(("PRVT-PW-TDM-MIB", "prvtPwVcTDMAlarm"), ("PRVT-PW-TDM-MIB", "prvtPwVcTDMStatusChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    prvtPwVcTDMNotificationsGroup = prvtPwVcTDMNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("PRVT-PW-TDM-MIB", prvtPwVcTDMCfgPeerPort=prvtPwVcTDMCfgPeerPort, prvtPwVcTDMPerfIntervalDuration=prvtPwVcTDMPerfIntervalDuration, prvtPwVcTDMCfgPeerMAC=prvtPwVcTDMCfgPeerMAC, prvtPwVcTDMEntry=prvtPwVcTDMEntry, TimeSlotList=TimeSlotList, prvtPwVcTDMPerfTable=prvtPwVcTDMPerfTable, prvtPwVcTDMCfgIpTos=prvtPwVcTDMCfgIpTos, prvtPwVcTDMCfgJtrBfrDepth=prvtPwVcTDMCfgJtrBfrDepth, prvtPwVcTDMCfgMplsExp=prvtPwVcTDMCfgMplsExp, prvtPwVcTDMValidIntervals=prvtPwVcTDMValidIntervals, prvtPwVcTDMCfgMplsOosLocalLabel=prvtPwVcTDMCfgMplsOosLocalLabel, prvtPwVcTDMObjects=prvtPwVcTDMObjects, prvtPwVcTDMCfgRtpHdrUsed=prvtPwVcTDMCfgRtpHdrUsed, prvtTDMChannelGrpEntry=prvtTDMChannelGrpEntry, prvtTDMChannelGrpOC3TimeSlots=prvtTDMChannelGrpOC3TimeSlots, prvtPwVcTDMPerfJtrBfrOverruns=prvtPwVcTDMPerfJtrBfrOverruns, prvtPwVcTDMCfgProtocol=prvtPwVcTDMCfgProtocol, prvtPwVcTDMCfgTable=prvtPwVcTDMCfgTable, prvtTDMChannelGrpCfgError=prvtTDMChannelGrpCfgError, prvtPwVcTDMAlarmEntry=prvtPwVcTDMAlarmEntry, prvtPwVcTDMCfgPorts=prvtPwVcTDMCfgPorts, prvtPwVcTDMMIB=prvtPwVcTDMMIB, prvtPwVcTDMCfgPeerIpType=prvtPwVcTDMCfgPeerIpType, prvtPwVcTDMPerfCurrentJtrBfrOverruns=prvtPwVcTDMPerfCurrentJtrBfrOverruns, prvtPwVcTDMTimeElapsed=prvtPwVcTDMTimeElapsed, prvtPwVcTDMCfgPayloadSize=prvtPwVcTDMCfgPayloadSize, prvtTDMChannelGrpTable=prvtTDMChannelGrpTable, prvtPwVcRelTDMCfgIndex=prvtPwVcRelTDMCfgIndex, prvtPwVcTDMPerfPktsOoseq=prvtPwVcTDMPerfPktsOoseq, prvtPwVcTDMCfgMplsOosTTL=prvtPwVcTDMCfgMplsOosTTL, prvtPwVcTDMPerfCurrentFarEndFC=prvtPwVcTDMPerfCurrentFarEndFC, prvtPwVcTDMPerfIntervalNearEndFC=prvtPwVcTDMPerfIntervalNearEndFC, prvtPwVcTDMAlarmTable=prvtPwVcTDMAlarmTable, prvtPwVc=prvtPwVc, prvtPwVcTDMGroup=prvtPwVcTDMGroup, prvtPwVcTDMCfgPeerEcid=prvtPwVcTDMCfgPeerEcid, prvtPwVcTDMPerfGroup=prvtPwVcTDMPerfGroup, prvtPwVcTDMPerfDiscontinuityTime=prvtPwVcTDMPerfDiscontinuityTime, prvtPwVcTDMCfgRtpOosPayload=prvtPwVcTDMCfgRtpOosPayload, prvtPwVcTDMCfgIpOosTos=prvtPwVcTDMCfgIpOosTos, prvtPwVcTDMPerfIntervalNumber=prvtPwVcTDMPerfIntervalNumber, prvtPwVcTDMPerfIntervalValidData=prvtPwVcTDMPerfIntervalValidData, prvtPwVcTDMCfgRtpPayload=prvtPwVcTDMCfgRtpPayload, prvtPwVcTDMCfgVlanPrio=prvtPwVcTDMCfgVlanPrio, prvtPwVcTDMCfgMplsTTL=prvtPwVcTDMCfgMplsTTL, prvtPwVcTDMAlarmIndex=prvtPwVcTDMAlarmIndex, prvtPwVcTDMCfgEntry=prvtPwVcTDMCfgEntry, prvtPwVcTDMCompliances=prvtPwVcTDMCompliances, InterfaceTimeSlot=InterfaceTimeSlot, prvtPwVcTDMLastEsTimeStamp=prvtPwVcTDMLastEsTimeStamp, prvtPwVcTDMTable=prvtPwVcTDMTable, prvtPwVcTDMPerfCurrentTable=prvtPwVcTDMPerfCurrentTable, prvtPwVcTDMPerfIntervalJtrBfrUnderruns=prvtPwVcTDMPerfIntervalJtrBfrUnderruns, prvtPwVcTDMPerfJtrBfrUnderruns=prvtPwVcTDMPerfJtrBfrUnderruns, prvtPwVcTDMTraps=prvtPwVcTDMTraps, prvtPwVcTDMCfgMplsPeerLabel=prvtPwVcTDMCfgMplsPeerLabel, prvtPwVcTDMCfgMplsLocalLabel=prvtPwVcTDMCfgMplsLocalLabel, prvtPwVcTDMCfgPeerIpAddress=prvtPwVcTDMCfgPeerIpAddress, prvtPwVcTDMCfgPayloadSuppression=prvtPwVcTDMCfgPayloadSuppression, prvtPwVcTDMPerfCurrentPktsOoseq=prvtPwVcTDMPerfCurrentPktsOoseq, prvtTDMChannelGrpID=prvtTDMChannelGrpID, prvtPwVcTDMPerfIntervalPktsOoseq=prvtPwVcTDMPerfIntervalPktsOoseq, prvtPwVcTDMAlarmValue=prvtPwVcTDMAlarmValue, prvtPwVcTDMGroups=prvtPwVcTDMGroups, PrvtPwVcTDMCfgIndex=PrvtPwVcTDMCfgIndex, prvtPwVcTDMCfgPktReorder=prvtPwVcTDMCfgPktReorder, prvtPwVcTDMCfgChannelGroup=prvtPwVcTDMCfgChannelGroup, prvtPwVcTDMCfgEcid=prvtPwVcTDMCfgEcid, prvtPwVcTDMPerfIntervalJtrBfrOverruns=prvtPwVcTDMPerfIntervalJtrBfrOverruns, prvtPwVcTDMPerfCurrentNearEndFC=prvtPwVcTDMPerfCurrentNearEndFC, prvtPwVcTDMLatchedIndications=prvtPwVcTDMLatchedIndications, prvtPwVcTDMCfgAdminStatus=prvtPwVcTDMCfgAdminStatus, prvtPwVcTDMPerfCurrentEntry=prvtPwVcTDMPerfCurrentEntry, prvtPwVcTDMCfgOosPort=prvtPwVcTDMCfgOosPort, prvtPwVcTDMPerfNearEndFC=prvtPwVcTDMPerfNearEndFC, prvtPwVcTDMCfgRtp=prvtPwVcTDMCfgRtp, prvtPwVcTDMCircuitId=prvtPwVcTDMCircuitId, prvtPwVcTDMCfgLocalPort=prvtPwVcTDMCfgLocalPort, prvtPwVcTDMType=prvtPwVcTDMType, PYSNMP_MODULE_ID=prvtPwVcTDMMIB, prvtPwTDMModuleCompliance=prvtPwTDMModuleCompliance, prvtTDMChannelGrpTimeSlots=prvtTDMChannelGrpTimeSlots, prvtPwVcTDMEmulationMode=prvtPwVcTDMEmulationMode, prvtPwVcTDMCfgMplsOosExp=prvtPwVcTDMCfgMplsOosExp, prvtPwVcTDMPerfFarEndFC=prvtPwVcTDMPerfFarEndFC, prvtPwVcTDMAlarmVariable=prvtPwVcTDMAlarmVariable, prvtPwVcTDMPerfEntry=prvtPwVcTDMPerfEntry, prvtPwVcTDMPerfIntervalTable=prvtPwVcTDMPerfIntervalTable, prvtPwVcTDMPerfCurrentJtrBfrUnderruns=prvtPwVcTDMPerfCurrentJtrBfrUnderruns, prvtPwVcTDMCurrentIndications=prvtPwVcTDMCurrentIndications, prvtPwVcTDMPerfIntervalEntry=prvtPwVcTDMPerfIntervalEntry, prvtPwVcTDMPerfCurrentGroup=prvtPwVcTDMPerfCurrentGroup, prvtPwVcTDMOperStatus=prvtPwVcTDMOperStatus, prvtPwVcTDMAlarm=prvtPwVcTDMAlarm, prvtPwVcTDMNotificationsGroup=prvtPwVcTDMNotificationsGroup, prvtPwVcTDMClearCircuitStatistics=prvtPwVcTDMClearCircuitStatistics, prvtPwVcTDMCfgOosEcid=prvtPwVcTDMCfgOosEcid, prvtPwVcTDMPerfCurrentMalformedPkt=prvtPwVcTDMPerfCurrentMalformedPkt, prvtPwVcTDMCfgInterface=prvtPwVcTDMCfgInterface, prvtPwVcTDMPerfIntervalGroup=prvtPwVcTDMPerfIntervalGroup, prvtPwVcTDMCfgPeerOosEcid=prvtPwVcTDMCfgPeerOosEcid, prvtPwVcTDMCfgMplsOosPeerLabel=prvtPwVcTDMCfgMplsOosPeerLabel, prvtPwVcTDMCfgPeerOosPort=prvtPwVcTDMCfgPeerOosPort, prvtPwVcTDMPerfMalformedPkt=prvtPwVcTDMPerfMalformedPkt, prvtPwVcTDMModuleId=prvtPwVcTDMModuleId, prvtPwVcTDMAlarmThreshold=prvtPwVcTDMAlarmThreshold, prvtPwVcTDMCfgVlanId=prvtPwVcTDMCfgVlanId, prvtPwVcTDMPerfIntervalFarEndFC=prvtPwVcTDMPerfIntervalFarEndFC, PrvtPwVcTDMCfgInterface=PrvtPwVcTDMCfgInterface, prvtPwVcTDMConformance=prvtPwVcTDMConformance, prvtPwVcTDMCfgRowStatus=prvtPwVcTDMCfgRowStatus, prvtPwVcTDMPerfIntervalMalformedPkt=prvtPwVcTDMPerfIntervalMalformedPkt, prvtTDMChannelGrpModuleID=prvtTDMChannelGrpModuleID, prvtPwVcTDMStatusChange=prvtPwVcTDMStatusChange)
