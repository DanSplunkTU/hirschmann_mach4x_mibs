#
# PySNMP MIB module CTRON-WAN-MULTI-IMUX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/enterasys/CTRON-WAN-MULTI-IMUX-MIB
# Produced by pysmi-1.1.0 at Fri Nov 19 15:22:26 2021
# On host fv-az33-360 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ctWanServices, = mibBuilder.importSymbols("CTRON-MIB-NAMES", "ctWanServices")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Integer32, ObjectIdentity, IpAddress, Counter64, Gauge32, Unsigned32, Counter32, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, NotificationType, MibIdentifier, TimeTicks, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "ObjectIdentity", "IpAddress", "Counter64", "Gauge32", "Unsigned32", "Counter32", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "NotificationType", "MibIdentifier", "TimeTicks", "Bits")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ctWanMultiMux = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2))
ctWANMMuxGeneralGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 1))
ctWANMMuxMaxNum = MibScalar((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWANMMuxMaxNum.setStatus('mandatory')
ctWanMMuxTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 2), )
if mibBuilder.loadTexts: ctWanMMuxTable.setStatus('mandatory')
ctWanMMuxEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 2, 1), ).setIndexNames((0, "CTRON-WAN-MULTI-IMUX-MIB", "ctWanMMuxId"))
if mibBuilder.loadTexts: ctWanMMuxEntry.setStatus('mandatory')
ctWanMMuxId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMMuxId.setStatus('mandatory')
ctWanMMuxIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMMuxIfIndex.setStatus('mandatory')
ctWanMMuxMaxNumGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMMuxMaxNumGroups.setStatus('mandatory')
ctWanMMuxAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctWanMMuxAdmin.setStatus('mandatory')
ctWanMMuxGroupTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 3), )
if mibBuilder.loadTexts: ctWanMMuxGroupTable.setStatus('mandatory')
ctWanMMuxGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 3, 1), ).setIndexNames((0, "CTRON-WAN-MULTI-IMUX-MIB", "ctWanMMuxGroupMMuxId"), (0, "CTRON-WAN-MULTI-IMUX-MIB", "ctWanMMuxGroupId"))
if mibBuilder.loadTexts: ctWanMMuxGroupEntry.setStatus('mandatory')
ctWanMMuxGroupMMuxId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMMuxGroupMMuxId.setStatus('mandatory')
ctWanMMuxGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMMuxGroupId.setStatus('mandatory')
ctWanMMuxGroupAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctWanMMuxGroupAdmin.setStatus('mandatory')
ctWanMMuxGroupNumChannels = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 3, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMMuxGroupNumChannels.setStatus('mandatory')
ctWanMMuxGroupAddChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 3, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctWanMMuxGroupAddChannel.setStatus('mandatory')
ctWanMMuxGroupDelChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 3, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ctWanMMuxGroupDelChannel.setStatus('mandatory')
ctWanMMuxChannelTable = MibTable((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 4), )
if mibBuilder.loadTexts: ctWanMMuxChannelTable.setStatus('mandatory')
ctWanMMuxChannelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 4, 1), ).setIndexNames((0, "CTRON-WAN-MULTI-IMUX-MIB", "ctWanMMuxChannelMMuxId"), (0, "CTRON-WAN-MULTI-IMUX-MIB", "ctWanMMuxChannelGroupId"), (0, "CTRON-WAN-MULTI-IMUX-MIB", "ctWanMMuxChannelId"))
if mibBuilder.loadTexts: ctWanMMuxChannelEntry.setStatus('mandatory')
ctWanMMuxChannelMMuxId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMMuxChannelMMuxId.setStatus('mandatory')
ctWanMMuxChannelGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMMuxChannelGroupId.setStatus('mandatory')
ctWanMMuxChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMMuxChannelId.setStatus('mandatory')
ctWanMMuxChannelIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMMuxChannelIfIndex.setStatus('mandatory')
ctWanMMuxChannelPhysNum = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 4, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMMuxChannelPhysNum.setStatus('mandatory')
ctWanMMuxChannelBwAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 4, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMMuxChannelBwAvail.setStatus('mandatory')
ctWanMMuxChannelByteCount = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 4, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMMuxChannelByteCount.setStatus('mandatory')
ctWanMMuxChannelStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 52, 4, 1, 2, 7, 3, 2, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ctWanMMuxChannelStatus.setStatus('mandatory')
mibBuilder.exportSymbols("CTRON-WAN-MULTI-IMUX-MIB", ctWanMMuxGroupMMuxId=ctWanMMuxGroupMMuxId, ctWanMMuxChannelBwAvail=ctWanMMuxChannelBwAvail, ctWanMMuxChannelTable=ctWanMMuxChannelTable, ctWanMMuxGroupAddChannel=ctWanMMuxGroupAddChannel, ctWanMMuxIfIndex=ctWanMMuxIfIndex, ctWanMMuxEntry=ctWanMMuxEntry, ctWanMMuxChannelGroupId=ctWanMMuxChannelGroupId, ctWanMMuxGroupDelChannel=ctWanMMuxGroupDelChannel, ctWanMMuxChannelByteCount=ctWanMMuxChannelByteCount, ctWanMMuxGroupNumChannels=ctWanMMuxGroupNumChannels, ctWanMMuxMaxNumGroups=ctWanMMuxMaxNumGroups, ctWanMMuxAdmin=ctWanMMuxAdmin, ctWanMMuxChannelIfIndex=ctWanMMuxChannelIfIndex, ctWanMMuxChannelEntry=ctWanMMuxChannelEntry, ctWanMMuxGroupTable=ctWanMMuxGroupTable, ctWanMMuxGroupEntry=ctWanMMuxGroupEntry, ctWANMMuxGeneralGroup=ctWANMMuxGeneralGroup, ctWanMMuxGroupId=ctWanMMuxGroupId, ctWanMMuxGroupAdmin=ctWanMMuxGroupAdmin, ctWanMMuxTable=ctWanMMuxTable, ctWanMMuxChannelId=ctWanMMuxChannelId, ctWanMMuxChannelStatus=ctWanMMuxChannelStatus, ctWanMultiMux=ctWanMultiMux, ctWanMMuxChannelMMuxId=ctWanMMuxChannelMMuxId, ctWanMMuxId=ctWanMMuxId, ctWANMMuxMaxNum=ctWANMMuxMaxNum, ctWanMMuxChannelPhysNum=ctWanMMuxChannelPhysNum)
