#
# PySNMP MIB module PRVT-HQOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-HQOS-MIB
# Produced by pysmi-1.1.8 at Tue Jan 11 21:46:26 2022
# On host fv-az74-997 platform Linux version 5.11.0-1022-azure by user runner
# Using Python version 3.10.1 (main, Dec 14 2021, 13:12:05) [GCC 9.3.0]
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
serviceAccessSwitch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "serviceAccessSwitch")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, MibIdentifier, iso, NotificationType, Integer32, IpAddress, ObjectIdentity, Bits, Counter32, TimeTicks, Counter64, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "MibIdentifier", "iso", "NotificationType", "Integer32", "IpAddress", "ObjectIdentity", "Bits", "Counter32", "TimeTicks", "Counter64", "ModuleIdentity")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
prvtHqosMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 7, 5))
prvtHqosMIB.setRevisions(('2010-08-26 00:00',))
if mibBuilder.loadTexts: prvtHqosMIB.setLastUpdated('201008260000Z')
if mibBuilder.loadTexts: prvtHqosMIB.setOrganization('BATM Advanced Communication')
class PrvtHqosNamedItem(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 6)

class PrvtHqosNamedItemOrNone(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 6)

class PrvtHqosLspExpValueType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 7)

class PrvtHqosDot1pPriority(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 7)

class PrvtHqosFcType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("be", 1), ("l2", 2), ("af", 3), ("l1", 4), ("h2", 5), ("ef", 6), ("h1", 7), ("nc", 8))

class PrvtHqosDscpValue(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 63)

class PrvtHqosDescrType(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 30)

class PrvtHqosServiceQueueId(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 24)

class PrvtHqosNetQueueIdType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 24)

class PrvtHqosServicePolicyId(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 64)

class PrvtHqosNetPolNameType(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 6)

class PrvtHqosNetPolNameOrNoneType(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 6)

class PrvtHqosRateValueL1(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(80, 5242875)

class PrvtHqosRateValueL2(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(16, 1048575)

class PrvtHqosRateValueNet(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(160, 1048575)

class PrvtHqosBurstValueL1(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(16, 65535)

class PrvtHqosBurstValueL2(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(16, 16383)

class PrvtHqosBurstValueNet(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 16383)

class PrvtHqosBurstValueIntf(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 32767)

class PrvtHqosWredMinValue(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 32768)

class PrvtHqosWredMaxValue(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(8, 32768)

class PrvtHqosWredProbValue(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 100)

class PrvtHqosLevel(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("low", 1), ("high", 2))

class PrvtHqosWeight(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 220)

class PrvtHqosColorType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("green", 1), ("yellow", 2))

class PrvtHqosIfShaperId(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2)

class PrvtHqosIfShaperIdOrNone(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2)

class PrvtHqosL1ShaperId(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 16)

class PrvtHqosNetShaperId(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(17, 64)

class PrvtHqosL2ShaperId(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 255)

class PrvtHqosPolicerIdType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 256)

class PrvtHqosQueueType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("unicast", 1), ("broadcast", 2), ("multicast", 3))

class PrvtHqosServWfqIdType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 64)

class PrvtHqosServSchedWfqIdType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 63)

class PrvtHqosNetWfqIdType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 16)

class PrvtHqosWredIdType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 32)

class PrvtHqosMapType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("vpt", 1), ("dscp", 2))

class PrvtHqosStatsCountType(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'

hqosMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1))
svcIngObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1))
prvtHqosSvcIngTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 1), )
if mibBuilder.loadTexts: prvtHqosSvcIngTable.setStatus('current')
prvtHqosSvcIngEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 1, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcIngId"))
if mibBuilder.loadTexts: prvtHqosSvcIngEntry.setStatus('current')
prvtHqosSvcIngId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 1, 1, 1), PrvtHqosServicePolicyId())
if mibBuilder.loadTexts: prvtHqosSvcIngId.setStatus('current')
prvtHqosSvcIngRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngRowStatus.setStatus('current')
prvtHqosSvcIngDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 1, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngDescr.setStatus('current')
prvtHqosSvcIngQueueTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 2), )
if mibBuilder.loadTexts: prvtHqosSvcIngQueueTable.setStatus('current')
prvtHqosSvcIngQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 2, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcIngId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngQueueId"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedIngPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedIngVirtName"))
if mibBuilder.loadTexts: prvtHqosSvcIngQueueEntry.setStatus('current')
prvtHqosSvcIngQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 2, 1, 1), PrvtHqosServiceQueueId())
if mibBuilder.loadTexts: prvtHqosSvcIngQueueId.setStatus('current')
prvtHqosSvcIngQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngQueueRowStatus.setStatus('current')
prvtHqosSvcIngQueueServWfq = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 2, 1, 3), PrvtHqosServWfqIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngQueueServWfq.setStatus('current')
prvtHqosSvcIngQueueWred = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 2, 1, 4), PrvtHqosWredIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngQueueWred.setStatus('current')
prvtHqosSvcIngQueuePolicer = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 2, 1, 5), PrvtHqosPolicerIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngQueuePolicer.setStatus('current')
prvtHqosSvcIngFcTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 3), )
if mibBuilder.loadTexts: prvtHqosSvcIngFcTable.setStatus('current')
prvtHqosSvcIngFcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 3, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcIngId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngFcType"))
if mibBuilder.loadTexts: prvtHqosSvcIngFcEntry.setStatus('current')
prvtHqosSvcIngFcType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 3, 1, 1), PrvtHqosFcType())
if mibBuilder.loadTexts: prvtHqosSvcIngFcType.setStatus('current')
prvtHqosSvcIngFcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngFcRowStatus.setStatus('current')
prvtHqosSvcIngFcDscpTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 4), )
if mibBuilder.loadTexts: prvtHqosSvcIngFcDscpTable.setStatus('current')
prvtHqosSvcIngFcDscpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 4, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcIngId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngFcType"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngFcDscpValue"))
if mibBuilder.loadTexts: prvtHqosSvcIngFcDscpEntry.setStatus('current')
prvtHqosSvcIngFcDscpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 4, 1, 1), PrvtHqosDscpValue())
if mibBuilder.loadTexts: prvtHqosSvcIngFcDscpValue.setStatus('current')
prvtHqosSvcIngFcDscpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngFcDscpRowStatus.setStatus('current')
prvtHqosSvcIngFcDscpColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 4, 1, 3), PrvtHqosColorType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngFcDscpColor.setStatus('current')
prvtHqosSvcIngFcDot1pTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 5), )
if mibBuilder.loadTexts: prvtHqosSvcIngFcDot1pTable.setStatus('current')
prvtHqosSvcIngFcDot1pEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 5, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcIngId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngFcType"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngFcDot1pValue"))
if mibBuilder.loadTexts: prvtHqosSvcIngFcDot1pEntry.setStatus('current')
prvtHqosSvcIngFcDot1pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 5, 1, 1), PrvtHqosDot1pPriority())
if mibBuilder.loadTexts: prvtHqosSvcIngFcDot1pValue.setStatus('current')
prvtHqosSvcIngFcDot1pRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngFcDot1pRowStatus.setStatus('current')
prvtHqosSvcIngFcDot1pColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 5, 1, 3), PrvtHqosColorType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngFcDot1pColor.setStatus('current')
prvtHqosSvcIngFcDefaultTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 6), )
if mibBuilder.loadTexts: prvtHqosSvcIngFcDefaultTable.setStatus('current')
prvtHqosSvcIngFcDefaultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 6, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcIngId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngFcType"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngFcDefaultMapType"))
if mibBuilder.loadTexts: prvtHqosSvcIngFcDefaultEntry.setStatus('current')
prvtHqosSvcIngFcDefaultMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 6, 1, 1), PrvtHqosMapType())
if mibBuilder.loadTexts: prvtHqosSvcIngFcDefaultMapType.setStatus('current')
prvtHqosSvcIngFcDefaultRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngFcDefaultRowStatus.setStatus('current')
prvtHqosSvcIngFcDefaultColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 6, 1, 3), PrvtHqosColorType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngFcDefaultColor.setStatus('current')
prvtHqosSvcIngFcQueueTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 7), )
if mibBuilder.loadTexts: prvtHqosSvcIngFcQueueTable.setStatus('current')
prvtHqosSvcIngFcQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 7, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcIngId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngFcType"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngFcQueueType"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngQueueId"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedIngPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedIngVirtName"))
if mibBuilder.loadTexts: prvtHqosSvcIngFcQueueEntry.setStatus('current')
prvtHqosSvcIngFcQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 7, 1, 1), PrvtHqosQueueType())
if mibBuilder.loadTexts: prvtHqosSvcIngFcQueueType.setStatus('current')
prvtHqosSvcIngFcQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngFcQueueRowStatus.setStatus('current')
prvtHqosSvcIngQStatsTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8), )
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsTable.setStatus('current')
prvtHqosSvcIngQStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcIngId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngQueueId"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedIngPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedIngVirtName"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsEntry.setStatus('current')
prvtHqosSvcIngQStatsGrnBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 2), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsGrnBytes.setStatus('current')
prvtHqosSvcIngQStatsGrnPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 3), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsGrnPckts.setStatus('current')
prvtHqosSvcIngQStatsYlwBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 4), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsYlwBytes.setStatus('current')
prvtHqosSvcIngQStatsYlwPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 5), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsYlwPckts.setStatus('current')
prvtHqosSvcIngQStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 6), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsTxBytes.setStatus('current')
prvtHqosSvcIngQStatsTxPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 7), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsTxPckts.setStatus('current')
prvtHqosSvcIngQStatsWredGrnBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 8), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsWredGrnBytes.setStatus('current')
prvtHqosSvcIngQStatsWredGrnPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 9), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsWredGrnPckts.setStatus('current')
prvtHqosSvcIngQStatsWredYlwBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 10), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsWredYlwBytes.setStatus('current')
prvtHqosSvcIngQStatsWredYlwPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 11), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsWredYlwPckts.setStatus('current')
prvtHqosSvcIngQStatsPolDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 12), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsPolDropBytes.setStatus('current')
prvtHqosSvcIngQStatsPolDropPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 13), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsPolDropPckts.setStatus('current')
svcEgrObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2))
prvtHqosSvcEgrTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 1), )
if mibBuilder.loadTexts: prvtHqosSvcEgrTable.setStatus('current')
prvtHqosSvcEgrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 1, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrId"))
if mibBuilder.loadTexts: prvtHqosSvcEgrEntry.setStatus('current')
prvtHqosSvcEgrId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 1, 1, 1), PrvtHqosServicePolicyId())
if mibBuilder.loadTexts: prvtHqosSvcEgrId.setStatus('current')
prvtHqosSvcEgrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcEgrRowStatus.setStatus('current')
prvtHqosSvcEgrDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 1, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcEgrDescr.setStatus('current')
prvtHqosSvcEgrQueueTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 2), )
if mibBuilder.loadTexts: prvtHqosSvcEgrQueueTable.setStatus('current')
prvtHqosSvcEgrQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 2, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrQueueId"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrVirtName"))
if mibBuilder.loadTexts: prvtHqosSvcEgrQueueEntry.setStatus('current')
prvtHqosSvcEgrQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 2, 1, 1), PrvtHqosServiceQueueId())
if mibBuilder.loadTexts: prvtHqosSvcEgrQueueId.setStatus('current')
prvtHqosSvcEgrQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcEgrQueueRowStatus.setStatus('current')
prvtHqosSvcEgrQueueServWfq = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 2, 1, 3), PrvtHqosServWfqIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcEgrQueueServWfq.setStatus('current')
prvtHqosSvcEgrQueueWred = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 2, 1, 4), PrvtHqosWredIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcEgrQueueWred.setStatus('current')
prvtHqosSvcEgrFcTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 3), )
if mibBuilder.loadTexts: prvtHqosSvcEgrFcTable.setStatus('current')
prvtHqosSvcEgrFcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 3, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrFcNumber"))
if mibBuilder.loadTexts: prvtHqosSvcEgrFcEntry.setStatus('current')
prvtHqosSvcEgrFcNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 3, 1, 1), PrvtHqosFcType())
if mibBuilder.loadTexts: prvtHqosSvcEgrFcNumber.setStatus('current')
prvtHqosSvcEgrFcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcEgrFcRowStatus.setStatus('current')
prvtHqosSvcEgrFcQueueTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 4), )
if mibBuilder.loadTexts: prvtHqosSvcEgrFcQueueTable.setStatus('current')
prvtHqosSvcEgrFcQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 4, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrFcNumber"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrFcQueueType"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrQueueId"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrVirtName"))
if mibBuilder.loadTexts: prvtHqosSvcEgrFcQueueEntry.setStatus('current')
prvtHqosSvcEgrFcQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 4, 1, 1), PrvtHqosQueueType())
if mibBuilder.loadTexts: prvtHqosSvcEgrFcQueueType.setStatus('current')
prvtHqosSvcEgrFcQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcEgrFcQueueRowStatus.setStatus('current')
prvtHqosSvcEgrFcColorTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 5), )
if mibBuilder.loadTexts: prvtHqosSvcEgrFcColorTable.setStatus('current')
prvtHqosSvcEgrFcColorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 5, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrFcNumber"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrFcColorValue"))
if mibBuilder.loadTexts: prvtHqosSvcEgrFcColorEntry.setStatus('current')
prvtHqosSvcEgrFcColorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 5, 1, 2), PrvtHqosColorType())
if mibBuilder.loadTexts: prvtHqosSvcEgrFcColorValue.setStatus('current')
prvtHqosSvcEgrFcColorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcEgrFcColorRowStatus.setStatus('current')
prvtHqosSvcEgrFcColorDot1PValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 5, 1, 4), PrvtHqosDot1pPriority()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcEgrFcColorDot1PValue.setStatus('current')
prvtHqosSvcEgrQStatsTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6), )
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsTable.setStatus('current')
prvtHqosSvcEgrQStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrQueueId"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrVirtName"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsEntry.setStatus('current')
prvtHqosSvcEgrQStatsGrnBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 2), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsGrnBytes.setStatus('current')
prvtHqosSvcEgrQStatsGrnPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 3), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsGrnPckts.setStatus('current')
prvtHqosSvcEgrQStatsYlwBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 4), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsYlwBytes.setStatus('current')
prvtHqosSvcEgrQStatsYlwPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 5), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsYlwPckts.setStatus('current')
prvtHqosSvcEgrQStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 6), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsTxBytes.setStatus('current')
prvtHqosSvcEgrQStatsTxPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 7), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsTxPckts.setStatus('current')
prvtHqosSvcEgrQStatsWredGrnBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 8), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsWredGrnBytes.setStatus('current')
prvtHqosSvcEgrQStatsWredGrnPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 9), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsWredGrnPckts.setStatus('current')
prvtHqosSvcEgrQStatsWredYlwBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 10), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsWredYlwBytes.setStatus('current')
prvtHqosSvcEgrQStatsWredYlwPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 11), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsWredYlwPckts.setStatus('current')
prvtHqosSvcEgrQStatsPolDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 12), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsPolDropBytes.setStatus('current')
prvtHqosSvcEgrQStatsPolDropPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 13), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsPolDropPckts.setStatus('current')
netObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3))
prvtHqosNetPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 1), )
if mibBuilder.loadTexts: prvtHqosNetPolicyTable.setStatus('current')
prvtHqosNetPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 1, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosNetPolicyName"))
if mibBuilder.loadTexts: prvtHqosNetPolicyEntry.setStatus('current')
prvtHqosNetPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 1, 1, 1), PrvtHqosNetPolNameType())
if mibBuilder.loadTexts: prvtHqosNetPolicyName.setStatus('current')
prvtHqosNetPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetPolicyRowStatus.setStatus('current')
prvtHqosNetPolicyDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 1, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetPolicyDescr.setStatus('current')
prvtHqosNetIngLspExpTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 2), )
if mibBuilder.loadTexts: prvtHqosNetIngLspExpTable.setStatus('current')
prvtHqosNetIngLspExpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 2, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosNetPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosNetIngLspExpValue"))
if mibBuilder.loadTexts: prvtHqosNetIngLspExpEntry.setStatus('current')
prvtHqosNetIngLspExpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 2, 1, 1), PrvtHqosLspExpValueType())
if mibBuilder.loadTexts: prvtHqosNetIngLspExpValue.setStatus('current')
prvtHqosNetIngLspExpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetIngLspExpRowStatus.setStatus('current')
prvtHqosNetIngLspExpFC = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 2, 1, 3), PrvtHqosFcType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetIngLspExpFC.setStatus('current')
prvtHqosNetIngLspExpColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 2, 1, 4), PrvtHqosColorType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetIngLspExpColor.setStatus('current')
prvtHqosNetEgrFcTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 3), )
if mibBuilder.loadTexts: prvtHqosNetEgrFcTable.setStatus('current')
prvtHqosNetEgrFcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 3, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosNetPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosNetEgrFcNumber"), (0, "PRVT-HQOS-MIB", "prvtHqosNetEgrFcColor"))
if mibBuilder.loadTexts: prvtHqosNetEgrFcEntry.setStatus('current')
prvtHqosNetEgrFcNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 3, 1, 1), PrvtHqosFcType())
if mibBuilder.loadTexts: prvtHqosNetEgrFcNumber.setStatus('current')
prvtHqosNetEgrFcColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 3, 1, 2), PrvtHqosColorType())
if mibBuilder.loadTexts: prvtHqosNetEgrFcColor.setStatus('current')
prvtHqosNetEgrFcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetEgrFcRowStatus.setStatus('current')
prvtHqosNetEgrFcLspExpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 3, 1, 4), PrvtHqosLspExpValueType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetEgrFcLspExpValue.setStatus('current')
netQueueObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4))
prvtHqosNetQPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 1), )
if mibBuilder.loadTexts: prvtHqosNetQPolicyTable.setStatus('current')
prvtHqosNetQPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 1, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyName"))
if mibBuilder.loadTexts: prvtHqosNetQPolicyEntry.setStatus('current')
prvtHqosNetQPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 1, 1, 1), PrvtHqosNamedItem())
if mibBuilder.loadTexts: prvtHqosNetQPolicyName.setStatus('current')
prvtHqosNetQPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetQPolicyRowStatus.setStatus('current')
prvtHqosNetQPolicyDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 1, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetQPolicyDescr.setStatus('current')
prvtHqosNetQPolicyQueueTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 2), )
if mibBuilder.loadTexts: prvtHqosNetQPolicyQueueTable.setStatus('current')
prvtHqosNetQPolicyQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 2, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyQueueId"))
if mibBuilder.loadTexts: prvtHqosNetQPolicyQueueEntry.setStatus('current')
prvtHqosNetQPolicyQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 2, 1, 1), PrvtHqosNetQueueIdType())
if mibBuilder.loadTexts: prvtHqosNetQPolicyQueueId.setStatus('current')
prvtHqosNetQPolicyQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetQPolicyQueueRowStatus.setStatus('current')
prvtHqosNetQPolicyQueueLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 2, 1, 3), PrvtHqosLevel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetQPolicyQueueLevel.setStatus('current')
prvtHqosNetQPolicyQueueWfq = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 2, 1, 4), PrvtHqosNetWfqIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetQPolicyQueueWfq.setStatus('current')
prvtHqosNetQPolicyQueueWred = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 2, 1, 5), PrvtHqosWredIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetQPolicyQueueWred.setStatus('current')
prvtHqosNetQPolicyQueueShaper = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 2, 1, 6), PrvtHqosNetShaperId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetQPolicyQueueShaper.setStatus('current')
prvtHqosNetQPolicyFcTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 3), )
if mibBuilder.loadTexts: prvtHqosNetQPolicyFcTable.setStatus('current')
prvtHqosNetQPolicyFcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 3, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyFcNumber"))
if mibBuilder.loadTexts: prvtHqosNetQPolicyFcEntry.setStatus('current')
prvtHqosNetQPolicyFcNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 3, 1, 1), PrvtHqosFcType())
if mibBuilder.loadTexts: prvtHqosNetQPolicyFcNumber.setStatus('current')
prvtHqosNetQPolicyFcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetQPolicyFcRowStatus.setStatus('current')
prvtHqosNetQPolicyFcQueueTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 4), )
if mibBuilder.loadTexts: prvtHqosNetQPolicyFcQueueTable.setStatus('current')
prvtHqosNetQPolicyFcQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 4, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyFcNumber"), (0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyFcQueueType"), (0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyQueueId"))
if mibBuilder.loadTexts: prvtHqosNetQPolicyFcQueueEntry.setStatus('current')
prvtHqosNetQPolicyFcQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 4, 1, 3), PrvtHqosQueueType())
if mibBuilder.loadTexts: prvtHqosNetQPolicyFcQueueType.setStatus('current')
prvtHqosNetQPolicyFcQueueRStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetQPolicyFcQueueRStatus.setStatus('current')
prvtHqosNetEgrQStatsTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5), )
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsTable.setStatus('current')
prvtHqosNetEgrQStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyQueueId"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsEntry.setStatus('current')
prvtHqosNetEgrQStatsGrnBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 2), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsGrnBytes.setStatus('current')
prvtHqosNetEgrQStatsGrnPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 3), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsGrnPckts.setStatus('current')
prvtHqosNetEgrQStatsYlwBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 4), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsYlwBytes.setStatus('current')
prvtHqosNetEgrQStatsYlwPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 5), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsYlwPckts.setStatus('current')
prvtHqosNetEgrQStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 6), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsTxBytes.setStatus('current')
prvtHqosNetEgrQStatsTxPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 7), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsTxPckts.setStatus('current')
prvtHqosNetEgrQStatsWredGrnBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 8), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsWredGrnBytes.setStatus('current')
prvtHqosNetEgrQStatsWredGrnPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 9), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsWredGrnPckts.setStatus('current')
prvtHqosNetEgrQStatsWredYlwBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 10), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsWredYlwBytes.setStatus('current')
prvtHqosNetEgrQStatsWredYlwPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 11), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsWredYlwPckts.setStatus('current')
prvtHqosNetEgrQStatsPolDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 12), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsPolDropBytes.setStatus('current')
prvtHqosNetEgrQStatsPolDropPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 13), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsPolDropPckts.setStatus('current')
schedObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5))
prvtHqosSchedIngPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 1), )
if mibBuilder.loadTexts: prvtHqosSchedIngPolicyTable.setStatus('current')
prvtHqosSchedIngPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 1, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSchedIngPolicyName"))
if mibBuilder.loadTexts: prvtHqosSchedIngPolicyEntry.setStatus('current')
prvtHqosSchedIngPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 1, 1, 1), PrvtHqosNamedItem())
if mibBuilder.loadTexts: prvtHqosSchedIngPolicyName.setStatus('current')
prvtHqosSchedIngPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngPolicyRowStatus.setStatus('current')
prvtHqosSchedIngPolicyDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 1, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngPolicyDescr.setStatus('current')
prvtHqosSchedIngVirtTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 2), )
if mibBuilder.loadTexts: prvtHqosSchedIngVirtTable.setStatus('current')
prvtHqosSchedIngVirtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 2, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSchedIngPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedIngVirtName"))
if mibBuilder.loadTexts: prvtHqosSchedIngVirtEntry.setStatus('current')
prvtHqosSchedIngVirtName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 2, 1, 1), PrvtHqosNamedItem())
if mibBuilder.loadTexts: prvtHqosSchedIngVirtName.setStatus('current')
prvtHqosSchedIngVirtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngVirtRowStatus.setStatus('current')
prvtHqosSchedIngVirtDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 2, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngVirtDescr.setStatus('current')
prvtHqosSchedIngVirtParent = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 2, 1, 4), PrvtHqosNamedItem()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngVirtParent.setStatus('current')
prvtHqosSchedIngVirtLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 2, 1, 5), PrvtHqosLevel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngVirtLevel.setStatus('current')
prvtHqosSchedIngVirtWfqProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 2, 1, 6), PrvtHqosServSchedWfqIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngVirtWfqProfile.setStatus('current')
prvtHqosSchedIngVirtShaper = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 2, 1, 7), PrvtHqosL2ShaperId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngVirtShaper.setStatus('current')
prvtHqosSchedIngRootTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 3), )
if mibBuilder.loadTexts: prvtHqosSchedIngRootTable.setStatus('current')
prvtHqosSchedIngRootEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 3, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSchedIngPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedIngRootName"))
if mibBuilder.loadTexts: prvtHqosSchedIngRootEntry.setStatus('current')
prvtHqosSchedIngRootName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 3, 1, 1), PrvtHqosNamedItem())
if mibBuilder.loadTexts: prvtHqosSchedIngRootName.setStatus('current')
prvtHqosSchedIngRootRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngRootRowStatus.setStatus('current')
prvtHqosSchedIngRootDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 3, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngRootDescr.setStatus('current')
prvtHqosSchedIngRootLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 3, 1, 4), PrvtHqosLevel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngRootLevel.setStatus('current')
prvtHqosSchedIngRootShaper = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 3, 1, 5), PrvtHqosL1ShaperId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngRootShaper.setStatus('current')
prvtHqosSchedEgrPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 4), )
if mibBuilder.loadTexts: prvtHqosSchedEgrPolicyTable.setStatus('current')
prvtHqosSchedEgrPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 4, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrPolicyName"))
if mibBuilder.loadTexts: prvtHqosSchedEgrPolicyEntry.setStatus('current')
prvtHqosSchedEgrPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 4, 1, 1), PrvtHqosNamedItem())
if mibBuilder.loadTexts: prvtHqosSchedEgrPolicyName.setStatus('current')
prvtHqosSchedEgrPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrPolicyRowStatus.setStatus('current')
prvtHqosSchedEgrPolicyDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 4, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrPolicyDescr.setStatus('current')
prvtHqosSchedEgrVirtTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 5), )
if mibBuilder.loadTexts: prvtHqosSchedEgrVirtTable.setStatus('current')
prvtHqosSchedEgrVirtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 5, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrVirtName"))
if mibBuilder.loadTexts: prvtHqosSchedEgrVirtEntry.setStatus('current')
prvtHqosSchedEgrVirtName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 5, 1, 1), PrvtHqosNamedItem())
if mibBuilder.loadTexts: prvtHqosSchedEgrVirtName.setStatus('current')
prvtHqosSchedEgrVirtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrVirtRowStatus.setStatus('current')
prvtHqosSchedEgrVirtDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 5, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrVirtDescr.setStatus('current')
prvtHqosSchedEgrVirtParent = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 5, 1, 4), PrvtHqosNamedItem()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrVirtParent.setStatus('current')
prvtHqosSchedEgrVirtLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 5, 1, 5), PrvtHqosLevel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrVirtLevel.setStatus('current')
prvtHqosSchedEgrVirtWfqProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 5, 1, 6), PrvtHqosServSchedWfqIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrVirtWfqProfile.setStatus('current')
prvtHqosSchedEgrVirtShaper = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 5, 1, 7), PrvtHqosL2ShaperId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrVirtShaper.setStatus('current')
prvtHqosSchedEgrRootTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 6), )
if mibBuilder.loadTexts: prvtHqosSchedEgrRootTable.setStatus('current')
prvtHqosSchedEgrRootEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 6, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrRootName"))
if mibBuilder.loadTexts: prvtHqosSchedEgrRootEntry.setStatus('current')
prvtHqosSchedEgrRootName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 6, 1, 1), PrvtHqosNamedItem())
if mibBuilder.loadTexts: prvtHqosSchedEgrRootName.setStatus('current')
prvtHqosSchedEgrRootRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrRootRowStatus.setStatus('current')
prvtHqosSchedEgrRootDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 6, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrRootDescr.setStatus('current')
prvtHqosSchedEgrRootLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 6, 1, 4), PrvtHqosLevel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrRootLevel.setStatus('current')
prvtHqosSchedEgrRootShaper = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 6, 1, 5), PrvtHqosL1ShaperId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrRootShaper.setStatus('current')
wredObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6))
prvtHqosWredPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1), )
if mibBuilder.loadTexts: prvtHqosWredPrfTable.setStatus('current')
prvtHqosWredPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosWredPrfId"))
if mibBuilder.loadTexts: prvtHqosWredPrfEntry.setStatus('current')
prvtHqosWredPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1, 1), PrvtHqosWredIdType())
if mibBuilder.loadTexts: prvtHqosWredPrfId.setStatus('current')
prvtHqosWredPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWredPrfRowStatus.setStatus('current')
prvtHqosWredPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWredPrfDescr.setStatus('current')
prvtHqosWredPrfGreenMinAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1, 4), PrvtHqosWredMinValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWredPrfGreenMinAverage.setStatus('current')
prvtHqosWredPrfGreenMaxAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1, 5), PrvtHqosWredMaxValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWredPrfGreenMaxAverage.setStatus('current')
prvtHqosWredPrfGreenProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1, 6), PrvtHqosWredProbValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWredPrfGreenProbability.setStatus('current')
prvtHqosWredPrfYellowMinAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1, 7), PrvtHqosWredMinValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWredPrfYellowMinAverage.setStatus('current')
prvtHqosWredPrfYellowMaxAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1, 8), PrvtHqosWredMaxValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWredPrfYellowMaxAverage.setStatus('current')
prvtHqosWredPrfYellowProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1, 9), PrvtHqosWredProbValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWredPrfYellowProbability.setStatus('current')
shaperObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7))
prvtHqosShaperL1IngPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 1), )
if mibBuilder.loadTexts: prvtHqosShaperL1IngPrfTable.setStatus('current')
prvtHqosShaperL1IngPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 1, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosShaperL1IngPrfId"))
if mibBuilder.loadTexts: prvtHqosShaperL1IngPrfEntry.setStatus('current')
prvtHqosShaperL1IngPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 1, 1, 1), PrvtHqosL1ShaperId())
if mibBuilder.loadTexts: prvtHqosShaperL1IngPrfId.setStatus('current')
prvtHqosShaperL1IngPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1IngPrfRowStatus.setStatus('current')
prvtHqosShaperL1IngPrfCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 1, 1, 3), PrvtHqosRateValueL1()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1IngPrfCIR.setStatus('current')
prvtHqosShaperL1IngPrfPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 1, 1, 4), PrvtHqosRateValueL1()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1IngPrfPIR.setStatus('current')
prvtHqosShaperL1IngPrfCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 1, 1, 5), PrvtHqosBurstValueL1()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1IngPrfCBS.setStatus('current')
prvtHqosShaperL1IngPrfPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 1, 1, 6), PrvtHqosBurstValueL1()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1IngPrfPBS.setStatus('current')
prvtHqosShaperL1IngPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 1, 1, 7), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1IngPrfDescr.setStatus('current')
prvtHqosShaperL1EgrPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 2), )
if mibBuilder.loadTexts: prvtHqosShaperL1EgrPrfTable.setStatus('current')
prvtHqosShaperL1EgrPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 2, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosShaperL1EgrPrfId"))
if mibBuilder.loadTexts: prvtHqosShaperL1EgrPrfEntry.setStatus('current')
prvtHqosShaperL1EgrPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 2, 1, 1), PrvtHqosL1ShaperId())
if mibBuilder.loadTexts: prvtHqosShaperL1EgrPrfId.setStatus('current')
prvtHqosShaperL1EgrPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1EgrPrfRowStatus.setStatus('current')
prvtHqosShaperL1EgrPrfCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 2, 1, 3), PrvtHqosRateValueL1()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1EgrPrfCIR.setStatus('current')
prvtHqosShaperL1EgrPrfPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 2, 1, 4), PrvtHqosRateValueL1()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1EgrPrfPIR.setStatus('current')
prvtHqosShaperL1EgrPrfCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 2, 1, 5), PrvtHqosBurstValueL1()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1EgrPrfCBS.setStatus('current')
prvtHqosShaperL1EgrPrfPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 2, 1, 6), PrvtHqosBurstValueL1()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1EgrPrfPBS.setStatus('current')
prvtHqosShaperL1EgrPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 2, 1, 7), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1EgrPrfDescr.setStatus('current')
prvtHqosShaperL2IngPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 3), )
if mibBuilder.loadTexts: prvtHqosShaperL2IngPrfTable.setStatus('current')
prvtHqosShaperL2IngPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 3, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosShaperL2IngPrfId"))
if mibBuilder.loadTexts: prvtHqosShaperL2IngPrfEntry.setStatus('current')
prvtHqosShaperL2IngPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 3, 1, 1), PrvtHqosL2ShaperId())
if mibBuilder.loadTexts: prvtHqosShaperL2IngPrfId.setStatus('current')
prvtHqosShaperL2IngPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2IngPrfRowStatus.setStatus('current')
prvtHqosShaperL2IngPrfCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 3, 1, 3), PrvtHqosRateValueL2()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2IngPrfCIR.setStatus('current')
prvtHqosShaperL2IngPrfPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 3, 1, 4), PrvtHqosRateValueL2()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2IngPrfPIR.setStatus('current')
prvtHqosShaperL2IngPrfCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 3, 1, 5), PrvtHqosBurstValueL2()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2IngPrfCBS.setStatus('current')
prvtHqosShaperL2IngPrfPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 3, 1, 6), PrvtHqosBurstValueL2()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2IngPrfPBS.setStatus('current')
prvtHqosShaperL2IngPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 3, 1, 7), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2IngPrfDescr.setStatus('current')
prvtHqosShaperL2EgrPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 4), )
if mibBuilder.loadTexts: prvtHqosShaperL2EgrPrfTable.setStatus('current')
prvtHqosShaperL2EgrPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 4, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosShaperL2EgrPrfId"))
if mibBuilder.loadTexts: prvtHqosShaperL2EgrPrfEntry.setStatus('current')
prvtHqosShaperL2EgrPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 4, 1, 1), PrvtHqosL2ShaperId())
if mibBuilder.loadTexts: prvtHqosShaperL2EgrPrfId.setStatus('current')
prvtHqosShaperL2EgrPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2EgrPrfRowStatus.setStatus('current')
prvtHqosShaperL2EgrPrfCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 4, 1, 3), PrvtHqosRateValueL2()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2EgrPrfCIR.setStatus('current')
prvtHqosShaperL2EgrPrfPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 4, 1, 4), PrvtHqosRateValueL2()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2EgrPrfPIR.setStatus('current')
prvtHqosShaperL2EgrPrfCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 4, 1, 5), PrvtHqosBurstValueL2()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2EgrPrfCBS.setStatus('current')
prvtHqosShaperL2EgrPrfPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 4, 1, 6), PrvtHqosBurstValueL2()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2EgrPrfPBS.setStatus('current')
prvtHqosShaperL2EgrPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 4, 1, 7), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2EgrPrfDescr.setStatus('current')
prvtHqosShaperNetPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 5), )
if mibBuilder.loadTexts: prvtHqosShaperNetPrfTable.setStatus('current')
prvtHqosShaperNetPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 5, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosShaperNetPrfId"))
if mibBuilder.loadTexts: prvtHqosShaperNetPrfEntry.setStatus('current')
prvtHqosShaperNetPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 5, 1, 1), PrvtHqosNetShaperId())
if mibBuilder.loadTexts: prvtHqosShaperNetPrfId.setStatus('current')
prvtHqosShaperNetPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperNetPrfRowStatus.setStatus('current')
prvtHqosShaperNetPrfCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 5, 1, 3), PrvtHqosRateValueNet()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperNetPrfCIR.setStatus('current')
prvtHqosShaperNetPrfPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 5, 1, 4), PrvtHqosRateValueNet()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperNetPrfPIR.setStatus('current')
prvtHqosShaperNetPrfCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 5, 1, 5), PrvtHqosBurstValueNet()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperNetPrfCBS.setStatus('current')
prvtHqosShaperNetPrfPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 5, 1, 6), PrvtHqosBurstValueNet()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperNetPrfPBS.setStatus('current')
prvtHqosShaperNetPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 5, 1, 7), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperNetPrfDescr.setStatus('current')
prvtHqosShaperIfPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 6), )
if mibBuilder.loadTexts: prvtHqosShaperIfPrfTable.setStatus('current')
prvtHqosShaperIfPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 6, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosShaperIfPrfId"))
if mibBuilder.loadTexts: prvtHqosShaperIfPrfEntry.setStatus('current')
prvtHqosShaperIfPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 6, 1, 1), PrvtHqosIfShaperId())
if mibBuilder.loadTexts: prvtHqosShaperIfPrfId.setStatus('current')
prvtHqosShaperIfPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperIfPrfRowStatus.setStatus('current')
prvtHqosShaperIfPrfCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 6, 1, 3), PrvtHqosRateValueNet()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperIfPrfCIR.setStatus('current')
prvtHqosShaperIfPrfPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 6, 1, 4), PrvtHqosRateValueNet()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperIfPrfPIR.setStatus('current')
prvtHqosShaperIfPrfCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 6, 1, 5), PrvtHqosBurstValueIntf()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperIfPrfCBS.setStatus('current')
prvtHqosShaperIfPrfPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 6, 1, 6), PrvtHqosBurstValueIntf()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperIfPrfPBS.setStatus('current')
prvtHqosShaperIfPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 6, 1, 7), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperIfPrfDescr.setStatus('current')
wfqObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8))
prvtHqosWfqSvcIngPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 1), )
if mibBuilder.loadTexts: prvtHqosWfqSvcIngPrfTable.setStatus('current')
prvtHqosWfqSvcIngPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 1, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosWfqSvcIngPrfId"))
if mibBuilder.loadTexts: prvtHqosWfqSvcIngPrfEntry.setStatus('current')
prvtHqosWfqSvcIngPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 1, 1, 1), PrvtHqosServWfqIdType())
if mibBuilder.loadTexts: prvtHqosWfqSvcIngPrfId.setStatus('current')
prvtHqosWfqSvcIngPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSvcIngPrfRowStatus.setStatus('current')
prvtHqosWfqSvcIngPrfCirWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 1, 1, 3), PrvtHqosWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSvcIngPrfCirWeight.setStatus('current')
prvtHqosWfqSvcIngPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 1, 1, 4), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSvcIngPrfDescr.setStatus('current')
prvtHqosWfqSvcEgrPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 2), )
if mibBuilder.loadTexts: prvtHqosWfqSvcEgrPrfTable.setStatus('current')
prvtHqosWfqSvcEgrPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 2, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosWfqSvcEgrPrfId"))
if mibBuilder.loadTexts: prvtHqosWfqSvcEgrPrfEntry.setStatus('current')
prvtHqosWfqSvcEgrPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 2, 1, 1), PrvtHqosServWfqIdType())
if mibBuilder.loadTexts: prvtHqosWfqSvcEgrPrfId.setStatus('current')
prvtHqosWfqSvcEgrPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSvcEgrPrfRowStatus.setStatus('current')
prvtHqosWfqSvcEgrPrfCirWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 2, 1, 3), PrvtHqosWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSvcEgrPrfCirWeight.setStatus('current')
prvtHqosWfqSvcEgrPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 2, 1, 4), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSvcEgrPrfDescr.setStatus('current')
prvtHqosWfqSchedIngPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 3), )
if mibBuilder.loadTexts: prvtHqosWfqSchedIngPrfTable.setStatus('current')
prvtHqosWfqSchedIngPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 3, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosWfqSchedIngPrfId"))
if mibBuilder.loadTexts: prvtHqosWfqSchedIngPrfEntry.setStatus('current')
prvtHqosWfqSchedIngPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 3, 1, 1), PrvtHqosServSchedWfqIdType())
if mibBuilder.loadTexts: prvtHqosWfqSchedIngPrfId.setStatus('current')
prvtHqosWfqSchedIngPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSchedIngPrfRowStatus.setStatus('current')
prvtHqosWfqSchedIngPrfWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 3, 1, 3), PrvtHqosWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSchedIngPrfWeight.setStatus('current')
prvtHqosWfqSchedIngPrfCirWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 3, 1, 4), PrvtHqosWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSchedIngPrfCirWeight.setStatus('current')
prvtHqosWfqSchedIngPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 3, 1, 5), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSchedIngPrfDescr.setStatus('current')
prvtHqosWfqSchedEgrPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 4), )
if mibBuilder.loadTexts: prvtHqosWfqSchedEgrPrfTable.setStatus('current')
prvtHqosWfqSchedEgrPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 4, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosWfqSchedEgrPrfId"))
if mibBuilder.loadTexts: prvtHqosWfqSchedEgrPrfEntry.setStatus('current')
prvtHqosWfqSchedEgrPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 4, 1, 1), PrvtHqosServSchedWfqIdType())
if mibBuilder.loadTexts: prvtHqosWfqSchedEgrPrfId.setStatus('current')
prvtHqosWfqSchedEgrPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSchedEgrPrfRowStatus.setStatus('current')
prvtHqosWfqSchedEgrPrfWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 4, 1, 3), PrvtHqosWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSchedEgrPrfWeight.setStatus('current')
prvtHqosWfqSchedEgrPrfCirWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 4, 1, 4), PrvtHqosWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSchedEgrPrfCirWeight.setStatus('current')
prvtHqosWfqSchedEgrPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 4, 1, 5), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSchedEgrPrfDescr.setStatus('current')
prvtHqosWfqNetworkPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 5), )
if mibBuilder.loadTexts: prvtHqosWfqNetworkPrfTable.setStatus('current')
prvtHqosWfqNetworkPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 5, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosWfqNetworkPrfId"))
if mibBuilder.loadTexts: prvtHqosWfqNetworkPrfEntry.setStatus('current')
prvtHqosWfqNetworkPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 5, 1, 1), PrvtHqosNetWfqIdType())
if mibBuilder.loadTexts: prvtHqosWfqNetworkPrfId.setStatus('current')
prvtHqosWfqNetworkPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqNetworkPrfRowStatus.setStatus('current')
prvtHqosWfqNetworkPrfWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 5, 1, 3), PrvtHqosWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqNetworkPrfWeight.setStatus('current')
prvtHqosWfqNetworkPrfCirWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 5, 1, 4), PrvtHqosWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqNetworkPrfCirWeight.setStatus('current')
prvtHqosWfqNetworkPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 5, 1, 5), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqNetworkPrfDescr.setStatus('current')
ifObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 9))
prvtHqosIfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 9, 1), )
if mibBuilder.loadTexts: prvtHqosIfTable.setStatus('current')
prvtHqosIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 9, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtHqosIfEntry.setStatus('current')
prvtHqosIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 9, 1, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosIfRowStatus.setStatus('current')
prvtHqosIfNetworkPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 9, 1, 1, 2), PrvtHqosNetPolNameOrNoneType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosIfNetworkPolicy.setStatus('current')
prvtHqosIfNetQueueEgrPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 9, 1, 1, 3), PrvtHqosNamedItemOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosIfNetQueueEgrPolicy.setStatus('current')
prvtHqosIfShaperProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 9, 1, 1, 4), PrvtHqosIfShaperIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosIfShaperProfile.setStatus('current')
policerObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10))
prvtHqosPolicerSvcPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10, 1), )
if mibBuilder.loadTexts: prvtHqosPolicerSvcPrfTable.setStatus('current')
prvtHqosPolicerSvcPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10, 1, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosPolicerSvcPrfId"))
if mibBuilder.loadTexts: prvtHqosPolicerSvcPrfEntry.setStatus('current')
prvtHqosPolicerSvcPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10, 1, 1, 1), PrvtHqosPolicerIdType())
if mibBuilder.loadTexts: prvtHqosPolicerSvcPrfId.setStatus('current')
prvtHqosPolicerSvcPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosPolicerSvcPrfRowStatus.setStatus('current')
prvtHqosPolicerSvcPrfCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10, 1, 1, 3), PrvtHqosRateValueNet()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosPolicerSvcPrfCIR.setStatus('current')
prvtHqosPolicerSvcPrfPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10, 1, 1, 4), PrvtHqosRateValueNet()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosPolicerSvcPrfPIR.setStatus('current')
prvtHqosPolicerSvcPrfCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10, 1, 1, 5), PrvtHqosBurstValueIntf()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosPolicerSvcPrfCBS.setStatus('current')
prvtHqosPolicerSvcPrfPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10, 1, 1, 6), PrvtHqosBurstValueIntf()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosPolicerSvcPrfPBS.setStatus('current')
prvtHqosPolicerSvcPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10, 1, 1, 7), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosPolicerSvcPrfDescr.setStatus('current')
mibBuilder.exportSymbols("PRVT-HQOS-MIB", prvtHqosIfShaperProfile=prvtHqosIfShaperProfile, prvtHqosSvcEgrQStatsEntry=prvtHqosSvcEgrQStatsEntry, PrvtHqosBurstValueIntf=PrvtHqosBurstValueIntf, PrvtHqosServWfqIdType=PrvtHqosServWfqIdType, prvtHqosSvcIngQueueEntry=prvtHqosSvcIngQueueEntry, prvtHqosShaperL1IngPrfEntry=prvtHqosShaperL1IngPrfEntry, prvtHqosNetIngLspExpRowStatus=prvtHqosNetIngLspExpRowStatus, prvtHqosIfNetQueueEgrPolicy=prvtHqosIfNetQueueEgrPolicy, prvtHqosShaperL1EgrPrfTable=prvtHqosShaperL1EgrPrfTable, prvtHqosShaperL1IngPrfTable=prvtHqosShaperL1IngPrfTable, prvtHqosSchedIngPolicyName=prvtHqosSchedIngPolicyName, prvtHqosNetEgrQStatsWredYlwPckts=prvtHqosNetEgrQStatsWredYlwPckts, prvtHqosWfqSvcIngPrfId=prvtHqosWfqSvcIngPrfId, hqosMIBObjects=hqosMIBObjects, prvtHqosWfqSchedIngPrfEntry=prvtHqosWfqSchedIngPrfEntry, prvtHqosNetQPolicyFcRowStatus=prvtHqosNetQPolicyFcRowStatus, prvtHqosSvcIngQStatsGrnPckts=prvtHqosSvcIngQStatsGrnPckts, prvtHqosSvcIngFcDefaultRowStatus=prvtHqosSvcIngFcDefaultRowStatus, prvtHqosSvcIngFcDot1pColor=prvtHqosSvcIngFcDot1pColor, prvtHqosWredPrfYellowProbability=prvtHqosWredPrfYellowProbability, prvtHqosWredPrfDescr=prvtHqosWredPrfDescr, prvtHqosSvcEgrQStatsPolDropBytes=prvtHqosSvcEgrQStatsPolDropBytes, prvtHqosShaperL2EgrPrfRowStatus=prvtHqosShaperL2EgrPrfRowStatus, prvtHqosNetEgrQStatsTxBytes=prvtHqosNetEgrQStatsTxBytes, prvtHqosSvcEgrQStatsWredYlwPckts=prvtHqosSvcEgrQStatsWredYlwPckts, prvtHqosSvcIngId=prvtHqosSvcIngId, prvtHqosSvcEgrQStatsWredGrnBytes=prvtHqosSvcEgrQStatsWredGrnBytes, PYSNMP_MODULE_ID=prvtHqosMIB, prvtHqosWfqNetworkPrfDescr=prvtHqosWfqNetworkPrfDescr, prvtHqosMIB=prvtHqosMIB, prvtHqosNetQPolicyFcQueueEntry=prvtHqosNetQPolicyFcQueueEntry, prvtHqosSchedEgrVirtLevel=prvtHqosSchedEgrVirtLevel, prvtHqosPolicerSvcPrfEntry=prvtHqosPolicerSvcPrfEntry, prvtHqosWfqSvcEgrPrfCirWeight=prvtHqosWfqSvcEgrPrfCirWeight, prvtHqosSchedIngVirtName=prvtHqosSchedIngVirtName, prvtHqosSvcEgrQueueId=prvtHqosSvcEgrQueueId, PrvtHqosWredIdType=PrvtHqosWredIdType, PrvtHqosServiceQueueId=PrvtHqosServiceQueueId, prvtHqosNetEgrFcRowStatus=prvtHqosNetEgrFcRowStatus, prvtHqosSvcIngFcDscpTable=prvtHqosSvcIngFcDscpTable, prvtHqosShaperL2EgrPrfCBS=prvtHqosShaperL2EgrPrfCBS, prvtHqosSchedIngRootRowStatus=prvtHqosSchedIngRootRowStatus, prvtHqosSvcIngFcEntry=prvtHqosSvcIngFcEntry, prvtHqosSchedIngPolicyDescr=prvtHqosSchedIngPolicyDescr, prvtHqosSvcEgrFcRowStatus=prvtHqosSvcEgrFcRowStatus, prvtHqosSvcEgrQStatsGrnBytes=prvtHqosSvcEgrQStatsGrnBytes, prvtHqosIfTable=prvtHqosIfTable, prvtHqosPolicerSvcPrfRowStatus=prvtHqosPolicerSvcPrfRowStatus, prvtHqosNetIngLspExpValue=prvtHqosNetIngLspExpValue, prvtHqosSvcEgrQueueServWfq=prvtHqosSvcEgrQueueServWfq, PrvtHqosLspExpValueType=PrvtHqosLspExpValueType, prvtHqosShaperIfPrfDescr=prvtHqosShaperIfPrfDescr, prvtHqosShaperL1IngPrfPIR=prvtHqosShaperL1IngPrfPIR, prvtHqosSvcIngFcDot1pTable=prvtHqosSvcIngFcDot1pTable, prvtHqosShaperL1EgrPrfCBS=prvtHqosShaperL1EgrPrfCBS, PrvtHqosWredMinValue=PrvtHqosWredMinValue, prvtHqosSchedEgrRootRowStatus=prvtHqosSchedEgrRootRowStatus, prvtHqosSchedEgrRootEntry=prvtHqosSchedEgrRootEntry, prvtHqosSvcEgrQueueEntry=prvtHqosSvcEgrQueueEntry, prvtHqosSchedEgrRootName=prvtHqosSchedEgrRootName, prvtHqosWredPrfYellowMaxAverage=prvtHqosWredPrfYellowMaxAverage, prvtHqosShaperL2IngPrfRowStatus=prvtHqosShaperL2IngPrfRowStatus, prvtHqosWredPrfGreenMinAverage=prvtHqosWredPrfGreenMinAverage, prvtHqosNetQPolicyDescr=prvtHqosNetQPolicyDescr, prvtHqosShaperIfPrfPIR=prvtHqosShaperIfPrfPIR, prvtHqosSvcIngFcRowStatus=prvtHqosSvcIngFcRowStatus, prvtHqosSvcEgrFcQueueRowStatus=prvtHqosSvcEgrFcQueueRowStatus, prvtHqosSvcEgrQStatsWredGrnPckts=prvtHqosSvcEgrQStatsWredGrnPckts, prvtHqosShaperNetPrfCBS=prvtHqosShaperNetPrfCBS, prvtHqosShaperL2EgrPrfDescr=prvtHqosShaperL2EgrPrfDescr, prvtHqosSvcEgrFcQueueEntry=prvtHqosSvcEgrFcQueueEntry, PrvtHqosWredMaxValue=PrvtHqosWredMaxValue, prvtHqosShaperNetPrfPIR=prvtHqosShaperNetPrfPIR, prvtHqosSvcEgrFcColorEntry=prvtHqosSvcEgrFcColorEntry, prvtHqosSvcIngFcType=prvtHqosSvcIngFcType, prvtHqosWfqSchedEgrPrfTable=prvtHqosWfqSchedEgrPrfTable, prvtHqosSchedIngVirtEntry=prvtHqosSchedIngVirtEntry, prvtHqosSvcIngQStatsPolDropBytes=prvtHqosSvcIngQStatsPolDropBytes, prvtHqosNetEgrQStatsPolDropPckts=prvtHqosNetEgrQStatsPolDropPckts, prvtHqosSvcIngFcDscpEntry=prvtHqosSvcIngFcDscpEntry, prvtHqosWfqSvcIngPrfCirWeight=prvtHqosWfqSvcIngPrfCirWeight, prvtHqosSvcIngFcDot1pValue=prvtHqosSvcIngFcDot1pValue, prvtHqosSchedIngRootShaper=prvtHqosSchedIngRootShaper, prvtHqosSvcIngQStatsTxPckts=prvtHqosSvcIngQStatsTxPckts, PrvtHqosNamedItemOrNone=PrvtHqosNamedItemOrNone, prvtHqosSvcIngFcDot1pRowStatus=prvtHqosSvcIngFcDot1pRowStatus, prvtHqosWfqSchedEgrPrfEntry=prvtHqosWfqSchedEgrPrfEntry, prvtHqosNetEgrQStatsYlwBytes=prvtHqosNetEgrQStatsYlwBytes, prvtHqosWfqNetworkPrfTable=prvtHqosWfqNetworkPrfTable, prvtHqosNetEgrQStatsWredYlwBytes=prvtHqosNetEgrQStatsWredYlwBytes, prvtHqosWfqSchedEgrPrfDescr=prvtHqosWfqSchedEgrPrfDescr, prvtHqosPolicerSvcPrfCIR=prvtHqosPolicerSvcPrfCIR, prvtHqosNetPolicyTable=prvtHqosNetPolicyTable, prvtHqosShaperL1EgrPrfDescr=prvtHqosShaperL1EgrPrfDescr, prvtHqosWfqSchedIngPrfDescr=prvtHqosWfqSchedIngPrfDescr, PrvtHqosRateValueNet=PrvtHqosRateValueNet, prvtHqosSvcIngQStatsEntry=prvtHqosSvcIngQStatsEntry, PrvtHqosBurstValueL2=PrvtHqosBurstValueL2, prvtHqosPolicerSvcPrfPIR=prvtHqosPolicerSvcPrfPIR, prvtHqosSchedIngRootDescr=prvtHqosSchedIngRootDescr, prvtHqosSvcEgrFcQueueTable=prvtHqosSvcEgrFcQueueTable, prvtHqosSchedIngVirtDescr=prvtHqosSchedIngVirtDescr, PrvtHqosRateValueL2=PrvtHqosRateValueL2, prvtHqosWfqSvcIngPrfTable=prvtHqosWfqSvcIngPrfTable, prvtHqosWfqSchedIngPrfWeight=prvtHqosWfqSchedIngPrfWeight, prvtHqosSvcEgrRowStatus=prvtHqosSvcEgrRowStatus, prvtHqosNetEgrQStatsGrnBytes=prvtHqosNetEgrQStatsGrnBytes, prvtHqosSchedIngPolicyTable=prvtHqosSchedIngPolicyTable, prvtHqosIfRowStatus=prvtHqosIfRowStatus, prvtHqosShaperL1EgrPrfRowStatus=prvtHqosShaperL1EgrPrfRowStatus, prvtHqosShaperL2EgrPrfEntry=prvtHqosShaperL2EgrPrfEntry, prvtHqosShaperIfPrfPBS=prvtHqosShaperIfPrfPBS, prvtHqosShaperL2IngPrfPIR=prvtHqosShaperL2IngPrfPIR, prvtHqosSvcIngDescr=prvtHqosSvcIngDescr, prvtHqosShaperNetPrfDescr=prvtHqosShaperNetPrfDescr, prvtHqosShaperL1EgrPrfPBS=prvtHqosShaperL1EgrPrfPBS, prvtHqosShaperL2IngPrfEntry=prvtHqosShaperL2IngPrfEntry, prvtHqosShaperL2IngPrfCBS=prvtHqosShaperL2IngPrfCBS, prvtHqosNetEgrQStatsEntry=prvtHqosNetEgrQStatsEntry, prvtHqosShaperL1EgrPrfEntry=prvtHqosShaperL1EgrPrfEntry, prvtHqosNetEgrQStatsTxPckts=prvtHqosNetEgrQStatsTxPckts, prvtHqosNetEgrFcColor=prvtHqosNetEgrFcColor, prvtHqosSvcEgrQStatsPolDropPckts=prvtHqosSvcEgrQStatsPolDropPckts, prvtHqosSchedIngVirtShaper=prvtHqosSchedIngVirtShaper, prvtHqosSvcEgrQStatsTxBytes=prvtHqosSvcEgrQStatsTxBytes, prvtHqosNetEgrFcLspExpValue=prvtHqosNetEgrFcLspExpValue, prvtHqosNetQPolicyQueueWfq=prvtHqosNetQPolicyQueueWfq, prvtHqosWfqSchedEgrPrfRowStatus=prvtHqosWfqSchedEgrPrfRowStatus, prvtHqosSvcIngQStatsWredYlwBytes=prvtHqosSvcIngQStatsWredYlwBytes, prvtHqosNetQPolicyQueueShaper=prvtHqosNetQPolicyQueueShaper, prvtHqosNetEgrFcTable=prvtHqosNetEgrFcTable, prvtHqosNetQPolicyFcQueueRStatus=prvtHqosNetQPolicyFcQueueRStatus, prvtHqosSchedIngRootEntry=prvtHqosSchedIngRootEntry, prvtHqosSchedIngVirtWfqProfile=prvtHqosSchedIngVirtWfqProfile, prvtHqosSvcIngQueueId=prvtHqosSvcIngQueueId, prvtHqosSvcIngQueueTable=prvtHqosSvcIngQueueTable, PrvtHqosServSchedWfqIdType=PrvtHqosServSchedWfqIdType, prvtHqosNetPolicyDescr=prvtHqosNetPolicyDescr, PrvtHqosMapType=PrvtHqosMapType, prvtHqosPolicerSvcPrfPBS=prvtHqosPolicerSvcPrfPBS, prvtHqosWfqSchedEgrPrfId=prvtHqosWfqSchedEgrPrfId, prvtHqosShaperNetPrfTable=prvtHqosShaperNetPrfTable, prvtHqosSchedEgrRootTable=prvtHqosSchedEgrRootTable, prvtHqosShaperL1IngPrfId=prvtHqosShaperL1IngPrfId, prvtHqosNetQPolicyEntry=prvtHqosNetQPolicyEntry, PrvtHqosBurstValueL1=PrvtHqosBurstValueL1, prvtHqosSvcEgrQueueWred=prvtHqosSvcEgrQueueWred, prvtHqosSvcIngQStatsWredGrnPckts=prvtHqosSvcIngQStatsWredGrnPckts, prvtHqosPolicerSvcPrfCBS=prvtHqosPolicerSvcPrfCBS, prvtHqosNetQPolicyRowStatus=prvtHqosNetQPolicyRowStatus, prvtHqosShaperL1EgrPrfCIR=prvtHqosShaperL1EgrPrfCIR, prvtHqosShaperL2IngPrfPBS=prvtHqosShaperL2IngPrfPBS, prvtHqosSvcEgrQStatsGrnPckts=prvtHqosSvcEgrQStatsGrnPckts, prvtHqosSchedEgrPolicyTable=prvtHqosSchedEgrPolicyTable, prvtHqosSvcEgrTable=prvtHqosSvcEgrTable, prvtHqosSchedEgrVirtEntry=prvtHqosSchedEgrVirtEntry, prvtHqosWfqSvcEgrPrfDescr=prvtHqosWfqSvcEgrPrfDescr, prvtHqosWfqSchedIngPrfCirWeight=prvtHqosWfqSchedIngPrfCirWeight, prvtHqosNetEgrFcNumber=prvtHqosNetEgrFcNumber, prvtHqosSvcEgrQStatsTable=prvtHqosSvcEgrQStatsTable, prvtHqosWfqSvcEgrPrfRowStatus=prvtHqosWfqSvcEgrPrfRowStatus, PrvtHqosBurstValueNet=PrvtHqosBurstValueNet, PrvtHqosL1ShaperId=PrvtHqosL1ShaperId, prvtHqosNetQPolicyQueueLevel=prvtHqosNetQPolicyQueueLevel, prvtHqosSvcEgrFcColorTable=prvtHqosSvcEgrFcColorTable, prvtHqosSvcEgrFcQueueType=prvtHqosSvcEgrFcQueueType, prvtHqosShaperIfPrfId=prvtHqosShaperIfPrfId, prvtHqosShaperL2IngPrfDescr=prvtHqosShaperL2IngPrfDescr, prvtHqosSchedEgrRootDescr=prvtHqosSchedEgrRootDescr, prvtHqosNetIngLspExpColor=prvtHqosNetIngLspExpColor, prvtHqosSchedEgrVirtRowStatus=prvtHqosSchedEgrVirtRowStatus, prvtHqosSchedIngPolicyEntry=prvtHqosSchedIngPolicyEntry, prvtHqosSvcIngQueuePolicer=prvtHqosSvcIngQueuePolicer, prvtHqosSchedEgrPolicyEntry=prvtHqosSchedEgrPolicyEntry, PrvtHqosPolicerIdType=PrvtHqosPolicerIdType, prvtHqosShaperL2IngPrfTable=prvtHqosShaperL2IngPrfTable, prvtHqosPolicerSvcPrfTable=prvtHqosPolicerSvcPrfTable, prvtHqosNetEgrQStatsWredGrnBytes=prvtHqosNetEgrQStatsWredGrnBytes, PrvtHqosServicePolicyId=PrvtHqosServicePolicyId, prvtHqosSvcIngQueueServWfq=prvtHqosSvcIngQueueServWfq, prvtHqosShaperNetPrfEntry=prvtHqosShaperNetPrfEntry, prvtHqosSvcIngQStatsTxBytes=prvtHqosSvcIngQStatsTxBytes, prvtHqosSvcEgrFcEntry=prvtHqosSvcEgrFcEntry, PrvtHqosNamedItem=PrvtHqosNamedItem, prvtHqosSvcIngQueueWred=prvtHqosSvcIngQueueWred, prvtHqosPolicerSvcPrfId=prvtHqosPolicerSvcPrfId, prvtHqosIfNetworkPolicy=prvtHqosIfNetworkPolicy, prvtHqosWredPrfTable=prvtHqosWredPrfTable, prvtHqosNetPolicyName=prvtHqosNetPolicyName, prvtHqosSchedEgrVirtDescr=prvtHqosSchedEgrVirtDescr, prvtHqosWfqSvcIngPrfDescr=prvtHqosWfqSvcIngPrfDescr, prvtHqosNetIngLspExpEntry=prvtHqosNetIngLspExpEntry, prvtHqosSvcIngQStatsWredGrnBytes=prvtHqosSvcIngQStatsWredGrnBytes, prvtHqosShaperL2EgrPrfId=prvtHqosShaperL2EgrPrfId, prvtHqosSvcEgrQueueTable=prvtHqosSvcEgrQueueTable, prvtHqosSvcIngQStatsYlwPckts=prvtHqosSvcIngQStatsYlwPckts, prvtHqosWfqNetworkPrfWeight=prvtHqosWfqNetworkPrfWeight, policerObjects=policerObjects, PrvtHqosWredProbValue=PrvtHqosWredProbValue, prvtHqosWfqSvcEgrPrfEntry=prvtHqosWfqSvcEgrPrfEntry, PrvtHqosNetPolNameOrNoneType=PrvtHqosNetPolNameOrNoneType, prvtHqosSvcEgrQStatsWredYlwBytes=prvtHqosSvcEgrQStatsWredYlwBytes, PrvtHqosRateValueL1=PrvtHqosRateValueL1, prvtHqosShaperNetPrfCIR=prvtHqosShaperNetPrfCIR, prvtHqosWfqSvcEgrPrfId=prvtHqosWfqSvcEgrPrfId, PrvtHqosNetShaperId=PrvtHqosNetShaperId, prvtHqosNetQPolicyName=prvtHqosNetQPolicyName, prvtHqosSvcIngFcQueueEntry=prvtHqosSvcIngFcQueueEntry, prvtHqosSvcEgrEntry=prvtHqosSvcEgrEntry, prvtHqosShaperL1IngPrfRowStatus=prvtHqosShaperL1IngPrfRowStatus, netObjects=netObjects, PrvtHqosIfShaperIdOrNone=PrvtHqosIfShaperIdOrNone, prvtHqosNetQPolicyQueueId=prvtHqosNetQPolicyQueueId, prvtHqosShaperIfPrfCBS=prvtHqosShaperIfPrfCBS, prvtHqosShaperIfPrfTable=prvtHqosShaperIfPrfTable, prvtHqosNetEgrQStatsTable=prvtHqosNetEgrQStatsTable, PrvtHqosColorType=PrvtHqosColorType, prvtHqosWredPrfYellowMinAverage=prvtHqosWredPrfYellowMinAverage, prvtHqosSchedEgrRootLevel=prvtHqosSchedEgrRootLevel, prvtHqosSchedIngVirtRowStatus=prvtHqosSchedIngVirtRowStatus, prvtHqosShaperIfPrfCIR=prvtHqosShaperIfPrfCIR, prvtHqosSchedEgrPolicyDescr=prvtHqosSchedEgrPolicyDescr, prvtHqosSchedEgrVirtWfqProfile=prvtHqosSchedEgrVirtWfqProfile, prvtHqosSvcIngEntry=prvtHqosSvcIngEntry, prvtHqosSvcIngRowStatus=prvtHqosSvcIngRowStatus, prvtHqosWfqNetworkPrfRowStatus=prvtHqosWfqNetworkPrfRowStatus, prvtHqosShaperL1IngPrfDescr=prvtHqosShaperL1IngPrfDescr, prvtHqosShaperNetPrfRowStatus=prvtHqosShaperNetPrfRowStatus, prvtHqosWfqSchedIngPrfRowStatus=prvtHqosWfqSchedIngPrfRowStatus, prvtHqosSchedEgrRootShaper=prvtHqosSchedEgrRootShaper, prvtHqosShaperL2EgrPrfPBS=prvtHqosShaperL2EgrPrfPBS, prvtHqosNetQPolicyFcEntry=prvtHqosNetQPolicyFcEntry, wredObjects=wredObjects, prvtHqosWredPrfId=prvtHqosWredPrfId, prvtHqosWfqNetworkPrfEntry=prvtHqosWfqNetworkPrfEntry, prvtHqosSchedIngVirtParent=prvtHqosSchedIngVirtParent, prvtHqosNetEgrQStatsPolDropBytes=prvtHqosNetEgrQStatsPolDropBytes, prvtHqosShaperL2EgrPrfPIR=prvtHqosShaperL2EgrPrfPIR, prvtHqosSvcIngQueueRowStatus=prvtHqosSvcIngQueueRowStatus, prvtHqosSvcIngQStatsWredYlwPckts=prvtHqosSvcIngQStatsWredYlwPckts, prvtHqosShaperL1IngPrfCBS=prvtHqosShaperL1IngPrfCBS, prvtHqosNetEgrQStatsGrnPckts=prvtHqosNetEgrQStatsGrnPckts, prvtHqosSvcIngFcQueueType=prvtHqosSvcIngFcQueueType, prvtHqosNetQPolicyFcQueueTable=prvtHqosNetQPolicyFcQueueTable, prvtHqosShaperL2EgrPrfCIR=prvtHqosShaperL2EgrPrfCIR, prvtHqosShaperNetPrfPBS=prvtHqosShaperNetPrfPBS, PrvtHqosNetQueueIdType=PrvtHqosNetQueueIdType, prvtHqosNetQPolicyQueueRowStatus=prvtHqosNetQPolicyQueueRowStatus, prvtHqosSchedIngRootLevel=prvtHqosSchedIngRootLevel, prvtHqosWredPrfEntry=prvtHqosWredPrfEntry, prvtHqosNetPolicyRowStatus=prvtHqosNetPolicyRowStatus, prvtHqosNetIngLspExpTable=prvtHqosNetIngLspExpTable, prvtHqosNetIngLspExpFC=prvtHqosNetIngLspExpFC, prvtHqosSvcIngFcQueueRowStatus=prvtHqosSvcIngFcQueueRowStatus)
mibBuilder.exportSymbols("PRVT-HQOS-MIB", prvtHqosSvcEgrId=prvtHqosSvcEgrId, prvtHqosShaperL1EgrPrfId=prvtHqosShaperL1EgrPrfId, PrvtHqosDescrType=PrvtHqosDescrType, PrvtHqosL2ShaperId=PrvtHqosL2ShaperId, prvtHqosSvcEgrQStatsTxPckts=prvtHqosSvcEgrQStatsTxPckts, prvtHqosShaperIfPrfRowStatus=prvtHqosShaperIfPrfRowStatus, prvtHqosNetQPolicyFcNumber=prvtHqosNetQPolicyFcNumber, PrvtHqosFcType=PrvtHqosFcType, prvtHqosSchedEgrVirtName=prvtHqosSchedEgrVirtName, prvtHqosSvcIngFcDefaultTable=prvtHqosSvcIngFcDefaultTable, prvtHqosSvcIngFcDot1pEntry=prvtHqosSvcIngFcDot1pEntry, prvtHqosNetQPolicyFcTable=prvtHqosNetQPolicyFcTable, prvtHqosWfqSvcIngPrfEntry=prvtHqosWfqSvcIngPrfEntry, prvtHqosNetQPolicyTable=prvtHqosNetQPolicyTable, prvtHqosSchedEgrVirtTable=prvtHqosSchedEgrVirtTable, svcEgrObjects=svcEgrObjects, prvtHqosWredPrfRowStatus=prvtHqosWredPrfRowStatus, prvtHqosShaperL1IngPrfPBS=prvtHqosShaperL1IngPrfPBS, prvtHqosWfqSchedIngPrfId=prvtHqosWfqSchedIngPrfId, prvtHqosSvcEgrDescr=prvtHqosSvcEgrDescr, prvtHqosSvcEgrFcColorDot1PValue=prvtHqosSvcEgrFcColorDot1PValue, prvtHqosSchedEgrVirtParent=prvtHqosSchedEgrVirtParent, prvtHqosSvcIngTable=prvtHqosSvcIngTable, prvtHqosSchedIngRootTable=prvtHqosSchedIngRootTable, netQueueObjects=netQueueObjects, prvtHqosSvcIngFcDscpRowStatus=prvtHqosSvcIngFcDscpRowStatus, prvtHqosShaperIfPrfEntry=prvtHqosShaperIfPrfEntry, prvtHqosShaperL1EgrPrfPIR=prvtHqosShaperL1EgrPrfPIR, prvtHqosSvcEgrQStatsYlwPckts=prvtHqosSvcEgrQStatsYlwPckts, prvtHqosSvcEgrFcTable=prvtHqosSvcEgrFcTable, prvtHqosSvcIngQStatsGrnBytes=prvtHqosSvcIngQStatsGrnBytes, prvtHqosSvcEgrFcNumber=prvtHqosSvcEgrFcNumber, prvtHqosNetQPolicyQueueEntry=prvtHqosNetQPolicyQueueEntry, prvtHqosSvcIngFcTable=prvtHqosSvcIngFcTable, prvtHqosShaperL2EgrPrfTable=prvtHqosShaperL2EgrPrfTable, wfqObjects=wfqObjects, prvtHqosSvcEgrFcColorValue=prvtHqosSvcEgrFcColorValue, PrvtHqosNetPolNameType=PrvtHqosNetPolNameType, prvtHqosNetQPolicyQueueWred=prvtHqosNetQPolicyQueueWred, prvtHqosShaperNetPrfId=prvtHqosShaperNetPrfId, prvtHqosSchedIngVirtTable=prvtHqosSchedIngVirtTable, prvtHqosShaperL2IngPrfId=prvtHqosShaperL2IngPrfId, prvtHqosSvcIngFcDscpValue=prvtHqosSvcIngFcDscpValue, prvtHqosSchedEgrVirtShaper=prvtHqosSchedEgrVirtShaper, prvtHqosNetEgrQStatsYlwPckts=prvtHqosNetEgrQStatsYlwPckts, PrvtHqosDscpValue=PrvtHqosDscpValue, prvtHqosIfEntry=prvtHqosIfEntry, prvtHqosSchedEgrPolicyRowStatus=prvtHqosSchedEgrPolicyRowStatus, prvtHqosNetQPolicyFcQueueType=prvtHqosNetQPolicyFcQueueType, prvtHqosSchedIngRootName=prvtHqosSchedIngRootName, prvtHqosWfqNetworkPrfId=prvtHqosWfqNetworkPrfId, prvtHqosWfqNetworkPrfCirWeight=prvtHqosWfqNetworkPrfCirWeight, ifObjects=ifObjects, prvtHqosNetPolicyEntry=prvtHqosNetPolicyEntry, PrvtHqosIfShaperId=PrvtHqosIfShaperId, svcIngObjects=svcIngObjects, prvtHqosSchedIngPolicyRowStatus=prvtHqosSchedIngPolicyRowStatus, prvtHqosNetEgrFcEntry=prvtHqosNetEgrFcEntry, prvtHqosWfqSvcEgrPrfTable=prvtHqosWfqSvcEgrPrfTable, shaperObjects=shaperObjects, prvtHqosWfqSchedIngPrfTable=prvtHqosWfqSchedIngPrfTable, prvtHqosSvcIngFcQueueTable=prvtHqosSvcIngFcQueueTable, PrvtHqosDot1pPriority=PrvtHqosDot1pPriority, prvtHqosSvcEgrFcColorRowStatus=prvtHqosSvcEgrFcColorRowStatus, prvtHqosNetQPolicyQueueTable=prvtHqosNetQPolicyQueueTable, PrvtHqosStatsCountType=PrvtHqosStatsCountType, PrvtHqosWeight=PrvtHqosWeight, prvtHqosSvcIngQStatsYlwBytes=prvtHqosSvcIngQStatsYlwBytes, schedObjects=schedObjects, prvtHqosWredPrfGreenProbability=prvtHqosWredPrfGreenProbability, prvtHqosWfqSvcIngPrfRowStatus=prvtHqosWfqSvcIngPrfRowStatus, PrvtHqosNetWfqIdType=PrvtHqosNetWfqIdType, prvtHqosSvcIngFcDefaultColor=prvtHqosSvcIngFcDefaultColor, prvtHqosSchedIngVirtLevel=prvtHqosSchedIngVirtLevel, PrvtHqosQueueType=PrvtHqosQueueType, prvtHqosSvcIngFcDefaultMapType=prvtHqosSvcIngFcDefaultMapType, prvtHqosShaperL2IngPrfCIR=prvtHqosShaperL2IngPrfCIR, prvtHqosWfqSchedEgrPrfWeight=prvtHqosWfqSchedEgrPrfWeight, prvtHqosSvcIngFcDscpColor=prvtHqosSvcIngFcDscpColor, prvtHqosShaperL1IngPrfCIR=prvtHqosShaperL1IngPrfCIR, prvtHqosPolicerSvcPrfDescr=prvtHqosPolicerSvcPrfDescr, prvtHqosSvcIngQStatsTable=prvtHqosSvcIngQStatsTable, prvtHqosSvcIngQStatsPolDropPckts=prvtHqosSvcIngQStatsPolDropPckts, prvtHqosNetEgrQStatsWredGrnPckts=prvtHqosNetEgrQStatsWredGrnPckts, prvtHqosSvcEgrQStatsYlwBytes=prvtHqosSvcEgrQStatsYlwBytes, prvtHqosSvcIngFcDefaultEntry=prvtHqosSvcIngFcDefaultEntry, prvtHqosWredPrfGreenMaxAverage=prvtHqosWredPrfGreenMaxAverage, PrvtHqosLevel=PrvtHqosLevel, prvtHqosSvcEgrQueueRowStatus=prvtHqosSvcEgrQueueRowStatus, prvtHqosSchedEgrPolicyName=prvtHqosSchedEgrPolicyName, prvtHqosWfqSchedEgrPrfCirWeight=prvtHqosWfqSchedEgrPrfCirWeight)
