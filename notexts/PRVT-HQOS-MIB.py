#
# PySNMP MIB module PRVT-HQOS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///home/runner/work/mibs/mibs/src/vendor/telco-systems/binox/PRVT-HQOS-MIB
# Produced by pysmi-1.1.3 at Sun Nov 28 14:00:47 2021
# On host fv-az77-612 platform Linux version 5.11.0-1021-azure by user runner
# Using Python version 3.10.0 (default, Oct 18 2021, 13:54:29) [GCC 9.3.0]
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
serviceAccessSwitch, = mibBuilder.importSymbols("PRVT-SWITCH-MIB", "serviceAccessSwitch")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, Unsigned32, NotificationType, ObjectIdentity, Counter32, Gauge32, iso, IpAddress, MibIdentifier, TimeTicks, ModuleIdentity, Counter64, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "Unsigned32", "NotificationType", "ObjectIdentity", "Counter32", "Gauge32", "iso", "IpAddress", "MibIdentifier", "TimeTicks", "ModuleIdentity", "Counter64", "Bits")
DisplayString, RowStatus, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention")
prvtHqosMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 738, 10, 7, 5))
prvtHqosMIB.setRevisions(('2010-08-26 00:00',))
if mibBuilder.loadTexts: prvtHqosMIB.setLastUpdated('201008260000Z')
if mibBuilder.loadTexts: prvtHqosMIB.setOrganization('BATM Advanced Communication')
class PrvtHqosNamedItem(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 6)

class PrvtHqosNamedItemOrNone(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 6)

class PrvtHqosLspExpValueType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 7)

class PrvtHqosDot1pPriority(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 7)

class PrvtHqosFcType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))
    namedValues = NamedValues(("be", 1), ("l2", 2), ("af", 3), ("l1", 4), ("h2", 5), ("ef", 6), ("h1", 7), ("nc", 8))

class PrvtHqosDscpValue(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 63)

class PrvtHqosDescrType(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 30)

class PrvtHqosServiceQueueId(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 24)

class PrvtHqosNetQueueIdType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 24)

class PrvtHqosServicePolicyId(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 64)

class PrvtHqosNetPolNameType(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 6)

class PrvtHqosNetPolNameOrNoneType(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 6)

class PrvtHqosRateValueL1(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(80, 5242875)

class PrvtHqosRateValueL2(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(16, 1048575)

class PrvtHqosRateValueNet(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(160, 1048575)

class PrvtHqosBurstValueL1(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(16, 65535)

class PrvtHqosBurstValueL2(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(16, 16383)

class PrvtHqosBurstValueNet(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 16383)

class PrvtHqosBurstValueIntf(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 32767)

class PrvtHqosWredMinValue(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 32768)

class PrvtHqosWredMaxValue(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(8, 32768)

class PrvtHqosWredProbValue(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 100)

class PrvtHqosLevel(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("low", 1), ("high", 2))

class PrvtHqosWeight(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 220)

class PrvtHqosColorType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("green", 1), ("yellow", 2))

class PrvtHqosIfShaperId(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 2)

class PrvtHqosIfShaperIdOrNone(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 2)

class PrvtHqosL1ShaperId(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 16)

class PrvtHqosNetShaperId(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(17, 64)

class PrvtHqosL2ShaperId(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 255)

class PrvtHqosPolicerIdType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 256)

class PrvtHqosQueueType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("unicast", 1), ("broadcast", 2), ("multicast", 3))

class PrvtHqosServWfqIdType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 64)

class PrvtHqosServSchedWfqIdType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 63)

class PrvtHqosNetWfqIdType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 16)

class PrvtHqosWredIdType(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 32)

class PrvtHqosMapType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("vpt", 1), ("dscp", 2))

class PrvtHqosStatsCountType(TextualConvention, OctetString):
    status = 'current'
    displayHint = '255a'

hqosMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1))
svcIngObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1))
prvtHqosSvcIngTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 1), )
if mibBuilder.loadTexts: prvtHqosSvcIngTable.setStatus('current')
prvtHqosSvcIngEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 1, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcIngId"))
if mibBuilder.loadTexts: prvtHqosSvcIngEntry.setStatus('current')
prvtHqosSvcIngId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 1, 1, 1), PrvtHqosServicePolicyId())
if mibBuilder.loadTexts: prvtHqosSvcIngId.setStatus('current')
prvtHqosSvcIngRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngRowStatus.setStatus('current')
prvtHqosSvcIngDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 1, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngDescr.setStatus('current')
prvtHqosSvcIngQueueTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 2), )
if mibBuilder.loadTexts: prvtHqosSvcIngQueueTable.setStatus('current')
prvtHqosSvcIngQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 2, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcIngId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngQueueId"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedIngPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedIngVirtName"))
if mibBuilder.loadTexts: prvtHqosSvcIngQueueEntry.setStatus('current')
prvtHqosSvcIngQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 2, 1, 1), PrvtHqosServiceQueueId())
if mibBuilder.loadTexts: prvtHqosSvcIngQueueId.setStatus('current')
prvtHqosSvcIngQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngQueueRowStatus.setStatus('current')
prvtHqosSvcIngQueueServWfq = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 2, 1, 3), PrvtHqosServWfqIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngQueueServWfq.setStatus('current')
prvtHqosSvcIngQueueWred = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 2, 1, 4), PrvtHqosWredIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngQueueWred.setStatus('current')
prvtHqosSvcIngQueuePolicer = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 2, 1, 5), PrvtHqosPolicerIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngQueuePolicer.setStatus('current')
prvtHqosSvcIngFcTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 3), )
if mibBuilder.loadTexts: prvtHqosSvcIngFcTable.setStatus('current')
prvtHqosSvcIngFcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 3, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcIngId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngFcType"))
if mibBuilder.loadTexts: prvtHqosSvcIngFcEntry.setStatus('current')
prvtHqosSvcIngFcType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 3, 1, 1), PrvtHqosFcType())
if mibBuilder.loadTexts: prvtHqosSvcIngFcType.setStatus('current')
prvtHqosSvcIngFcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngFcRowStatus.setStatus('current')
prvtHqosSvcIngFcDscpTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 4), )
if mibBuilder.loadTexts: prvtHqosSvcIngFcDscpTable.setStatus('current')
prvtHqosSvcIngFcDscpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 4, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcIngId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngFcType"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngFcDscpValue"))
if mibBuilder.loadTexts: prvtHqosSvcIngFcDscpEntry.setStatus('current')
prvtHqosSvcIngFcDscpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 4, 1, 1), PrvtHqosDscpValue())
if mibBuilder.loadTexts: prvtHqosSvcIngFcDscpValue.setStatus('current')
prvtHqosSvcIngFcDscpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngFcDscpRowStatus.setStatus('current')
prvtHqosSvcIngFcDscpColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 4, 1, 3), PrvtHqosColorType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngFcDscpColor.setStatus('current')
prvtHqosSvcIngFcDot1pTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 5), )
if mibBuilder.loadTexts: prvtHqosSvcIngFcDot1pTable.setStatus('current')
prvtHqosSvcIngFcDot1pEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 5, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcIngId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngFcType"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngFcDot1pValue"))
if mibBuilder.loadTexts: prvtHqosSvcIngFcDot1pEntry.setStatus('current')
prvtHqosSvcIngFcDot1pValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 5, 1, 1), PrvtHqosDot1pPriority())
if mibBuilder.loadTexts: prvtHqosSvcIngFcDot1pValue.setStatus('current')
prvtHqosSvcIngFcDot1pRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngFcDot1pRowStatus.setStatus('current')
prvtHqosSvcIngFcDot1pColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 5, 1, 3), PrvtHqosColorType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngFcDot1pColor.setStatus('current')
prvtHqosSvcIngFcDefaultTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 6), )
if mibBuilder.loadTexts: prvtHqosSvcIngFcDefaultTable.setStatus('current')
prvtHqosSvcIngFcDefaultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 6, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcIngId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngFcType"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngFcDefaultMapType"))
if mibBuilder.loadTexts: prvtHqosSvcIngFcDefaultEntry.setStatus('current')
prvtHqosSvcIngFcDefaultMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 6, 1, 1), PrvtHqosMapType())
if mibBuilder.loadTexts: prvtHqosSvcIngFcDefaultMapType.setStatus('current')
prvtHqosSvcIngFcDefaultRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngFcDefaultRowStatus.setStatus('current')
prvtHqosSvcIngFcDefaultColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 6, 1, 3), PrvtHqosColorType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngFcDefaultColor.setStatus('current')
prvtHqosSvcIngFcQueueTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 7), )
if mibBuilder.loadTexts: prvtHqosSvcIngFcQueueTable.setStatus('current')
prvtHqosSvcIngFcQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 7, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcIngId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngFcType"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngFcQueueType"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngQueueId"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedIngPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedIngVirtName"))
if mibBuilder.loadTexts: prvtHqosSvcIngFcQueueEntry.setStatus('current')
prvtHqosSvcIngFcQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 7, 1, 1), PrvtHqosQueueType())
if mibBuilder.loadTexts: prvtHqosSvcIngFcQueueType.setStatus('current')
prvtHqosSvcIngFcQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcIngFcQueueRowStatus.setStatus('current')
prvtHqosSvcIngQStatsTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8), )
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsTable.setStatus('current')
prvtHqosSvcIngQStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcIngId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcIngQueueId"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedIngPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedIngVirtName"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsEntry.setStatus('current')
prvtHqosSvcIngQStatsGrnBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 2), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsGrnBytes.setStatus('current')
prvtHqosSvcIngQStatsGrnPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 3), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsGrnPckts.setStatus('current')
prvtHqosSvcIngQStatsYlwBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 4), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsYlwBytes.setStatus('current')
prvtHqosSvcIngQStatsYlwPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 5), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsYlwPckts.setStatus('current')
prvtHqosSvcIngQStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 6), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsTxBytes.setStatus('current')
prvtHqosSvcIngQStatsTxPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 7), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsTxPckts.setStatus('current')
prvtHqosSvcIngQStatsWredGrnBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 8), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsWredGrnBytes.setStatus('current')
prvtHqosSvcIngQStatsWredGrnPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 9), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsWredGrnPckts.setStatus('current')
prvtHqosSvcIngQStatsWredYlwBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 10), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsWredYlwBytes.setStatus('current')
prvtHqosSvcIngQStatsWredYlwPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 11), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsWredYlwPckts.setStatus('current')
prvtHqosSvcIngQStatsPolDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 12), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsPolDropBytes.setStatus('current')
prvtHqosSvcIngQStatsPolDropPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 1, 8, 1, 13), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcIngQStatsPolDropPckts.setStatus('current')
svcEgrObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2))
prvtHqosSvcEgrTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 1), )
if mibBuilder.loadTexts: prvtHqosSvcEgrTable.setStatus('current')
prvtHqosSvcEgrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 1, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrId"))
if mibBuilder.loadTexts: prvtHqosSvcEgrEntry.setStatus('current')
prvtHqosSvcEgrId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 1, 1, 1), PrvtHqosServicePolicyId())
if mibBuilder.loadTexts: prvtHqosSvcEgrId.setStatus('current')
prvtHqosSvcEgrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcEgrRowStatus.setStatus('current')
prvtHqosSvcEgrDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 1, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcEgrDescr.setStatus('current')
prvtHqosSvcEgrQueueTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 2), )
if mibBuilder.loadTexts: prvtHqosSvcEgrQueueTable.setStatus('current')
prvtHqosSvcEgrQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 2, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrQueueId"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrVirtName"))
if mibBuilder.loadTexts: prvtHqosSvcEgrQueueEntry.setStatus('current')
prvtHqosSvcEgrQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 2, 1, 1), PrvtHqosServiceQueueId())
if mibBuilder.loadTexts: prvtHqosSvcEgrQueueId.setStatus('current')
prvtHqosSvcEgrQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcEgrQueueRowStatus.setStatus('current')
prvtHqosSvcEgrQueueServWfq = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 2, 1, 3), PrvtHqosServWfqIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcEgrQueueServWfq.setStatus('current')
prvtHqosSvcEgrQueueWred = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 2, 1, 4), PrvtHqosWredIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcEgrQueueWred.setStatus('current')
prvtHqosSvcEgrFcTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 3), )
if mibBuilder.loadTexts: prvtHqosSvcEgrFcTable.setStatus('current')
prvtHqosSvcEgrFcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 3, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrFcNumber"))
if mibBuilder.loadTexts: prvtHqosSvcEgrFcEntry.setStatus('current')
prvtHqosSvcEgrFcNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 3, 1, 1), PrvtHqosFcType())
if mibBuilder.loadTexts: prvtHqosSvcEgrFcNumber.setStatus('current')
prvtHqosSvcEgrFcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcEgrFcRowStatus.setStatus('current')
prvtHqosSvcEgrFcQueueTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 4), )
if mibBuilder.loadTexts: prvtHqosSvcEgrFcQueueTable.setStatus('current')
prvtHqosSvcEgrFcQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 4, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrFcNumber"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrFcQueueType"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrQueueId"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrVirtName"))
if mibBuilder.loadTexts: prvtHqosSvcEgrFcQueueEntry.setStatus('current')
prvtHqosSvcEgrFcQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 4, 1, 1), PrvtHqosQueueType())
if mibBuilder.loadTexts: prvtHqosSvcEgrFcQueueType.setStatus('current')
prvtHqosSvcEgrFcQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcEgrFcQueueRowStatus.setStatus('current')
prvtHqosSvcEgrFcColorTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 5), )
if mibBuilder.loadTexts: prvtHqosSvcEgrFcColorTable.setStatus('current')
prvtHqosSvcEgrFcColorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 5, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrFcNumber"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrFcColorValue"))
if mibBuilder.loadTexts: prvtHqosSvcEgrFcColorEntry.setStatus('current')
prvtHqosSvcEgrFcColorValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 5, 1, 2), PrvtHqosColorType())
if mibBuilder.loadTexts: prvtHqosSvcEgrFcColorValue.setStatus('current')
prvtHqosSvcEgrFcColorRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcEgrFcColorRowStatus.setStatus('current')
prvtHqosSvcEgrFcColorDot1PValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 5, 1, 4), PrvtHqosDot1pPriority()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSvcEgrFcColorDot1PValue.setStatus('current')
prvtHqosSvcEgrQStatsTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6), )
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsTable.setStatus('current')
prvtHqosSvcEgrQStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrId"), (0, "PRVT-HQOS-MIB", "prvtHqosSvcEgrQueueId"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrVirtName"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsEntry.setStatus('current')
prvtHqosSvcEgrQStatsGrnBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 2), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsGrnBytes.setStatus('current')
prvtHqosSvcEgrQStatsGrnPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 3), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsGrnPckts.setStatus('current')
prvtHqosSvcEgrQStatsYlwBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 4), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsYlwBytes.setStatus('current')
prvtHqosSvcEgrQStatsYlwPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 5), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsYlwPckts.setStatus('current')
prvtHqosSvcEgrQStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 6), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsTxBytes.setStatus('current')
prvtHqosSvcEgrQStatsTxPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 7), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsTxPckts.setStatus('current')
prvtHqosSvcEgrQStatsWredGrnBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 8), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsWredGrnBytes.setStatus('current')
prvtHqosSvcEgrQStatsWredGrnPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 9), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsWredGrnPckts.setStatus('current')
prvtHqosSvcEgrQStatsWredYlwBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 10), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsWredYlwBytes.setStatus('current')
prvtHqosSvcEgrQStatsWredYlwPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 11), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsWredYlwPckts.setStatus('current')
prvtHqosSvcEgrQStatsPolDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 12), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsPolDropBytes.setStatus('current')
prvtHqosSvcEgrQStatsPolDropPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 2, 6, 1, 13), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosSvcEgrQStatsPolDropPckts.setStatus('current')
netObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3))
prvtHqosNetPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 1), )
if mibBuilder.loadTexts: prvtHqosNetPolicyTable.setStatus('current')
prvtHqosNetPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 1, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosNetPolicyName"))
if mibBuilder.loadTexts: prvtHqosNetPolicyEntry.setStatus('current')
prvtHqosNetPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 1, 1, 1), PrvtHqosNetPolNameType())
if mibBuilder.loadTexts: prvtHqosNetPolicyName.setStatus('current')
prvtHqosNetPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetPolicyRowStatus.setStatus('current')
prvtHqosNetPolicyDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 1, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetPolicyDescr.setStatus('current')
prvtHqosNetIngLspExpTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 2), )
if mibBuilder.loadTexts: prvtHqosNetIngLspExpTable.setStatus('current')
prvtHqosNetIngLspExpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 2, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosNetPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosNetIngLspExpValue"))
if mibBuilder.loadTexts: prvtHqosNetIngLspExpEntry.setStatus('current')
prvtHqosNetIngLspExpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 2, 1, 1), PrvtHqosLspExpValueType())
if mibBuilder.loadTexts: prvtHqosNetIngLspExpValue.setStatus('current')
prvtHqosNetIngLspExpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetIngLspExpRowStatus.setStatus('current')
prvtHqosNetIngLspExpFC = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 2, 1, 3), PrvtHqosFcType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetIngLspExpFC.setStatus('current')
prvtHqosNetIngLspExpColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 2, 1, 4), PrvtHqosColorType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetIngLspExpColor.setStatus('current')
prvtHqosNetEgrFcTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 3), )
if mibBuilder.loadTexts: prvtHqosNetEgrFcTable.setStatus('current')
prvtHqosNetEgrFcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 3, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosNetPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosNetEgrFcNumber"), (0, "PRVT-HQOS-MIB", "prvtHqosNetEgrFcColor"))
if mibBuilder.loadTexts: prvtHqosNetEgrFcEntry.setStatus('current')
prvtHqosNetEgrFcNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 3, 1, 1), PrvtHqosFcType())
if mibBuilder.loadTexts: prvtHqosNetEgrFcNumber.setStatus('current')
prvtHqosNetEgrFcColor = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 3, 1, 2), PrvtHqosColorType())
if mibBuilder.loadTexts: prvtHqosNetEgrFcColor.setStatus('current')
prvtHqosNetEgrFcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetEgrFcRowStatus.setStatus('current')
prvtHqosNetEgrFcLspExpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 3, 3, 1, 4), PrvtHqosLspExpValueType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetEgrFcLspExpValue.setStatus('current')
netQueueObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4))
prvtHqosNetQPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 1), )
if mibBuilder.loadTexts: prvtHqosNetQPolicyTable.setStatus('current')
prvtHqosNetQPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 1, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyName"))
if mibBuilder.loadTexts: prvtHqosNetQPolicyEntry.setStatus('current')
prvtHqosNetQPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 1, 1, 1), PrvtHqosNamedItem())
if mibBuilder.loadTexts: prvtHqosNetQPolicyName.setStatus('current')
prvtHqosNetQPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetQPolicyRowStatus.setStatus('current')
prvtHqosNetQPolicyDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 1, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetQPolicyDescr.setStatus('current')
prvtHqosNetQPolicyQueueTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 2), )
if mibBuilder.loadTexts: prvtHqosNetQPolicyQueueTable.setStatus('current')
prvtHqosNetQPolicyQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 2, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyQueueId"))
if mibBuilder.loadTexts: prvtHqosNetQPolicyQueueEntry.setStatus('current')
prvtHqosNetQPolicyQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 2, 1, 1), PrvtHqosNetQueueIdType())
if mibBuilder.loadTexts: prvtHqosNetQPolicyQueueId.setStatus('current')
prvtHqosNetQPolicyQueueRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetQPolicyQueueRowStatus.setStatus('current')
prvtHqosNetQPolicyQueueLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 2, 1, 3), PrvtHqosLevel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetQPolicyQueueLevel.setStatus('current')
prvtHqosNetQPolicyQueueWfq = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 2, 1, 4), PrvtHqosNetWfqIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetQPolicyQueueWfq.setStatus('current')
prvtHqosNetQPolicyQueueWred = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 2, 1, 5), PrvtHqosWredIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetQPolicyQueueWred.setStatus('current')
prvtHqosNetQPolicyQueueShaper = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 2, 1, 6), PrvtHqosNetShaperId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetQPolicyQueueShaper.setStatus('current')
prvtHqosNetQPolicyFcTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 3), )
if mibBuilder.loadTexts: prvtHqosNetQPolicyFcTable.setStatus('current')
prvtHqosNetQPolicyFcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 3, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyFcNumber"))
if mibBuilder.loadTexts: prvtHqosNetQPolicyFcEntry.setStatus('current')
prvtHqosNetQPolicyFcNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 3, 1, 1), PrvtHqosFcType())
if mibBuilder.loadTexts: prvtHqosNetQPolicyFcNumber.setStatus('current')
prvtHqosNetQPolicyFcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetQPolicyFcRowStatus.setStatus('current')
prvtHqosNetQPolicyFcQueueTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 4), )
if mibBuilder.loadTexts: prvtHqosNetQPolicyFcQueueTable.setStatus('current')
prvtHqosNetQPolicyFcQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 4, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyFcNumber"), (0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyFcQueueType"), (0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyQueueId"))
if mibBuilder.loadTexts: prvtHqosNetQPolicyFcQueueEntry.setStatus('current')
prvtHqosNetQPolicyFcQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 4, 1, 3), PrvtHqosQueueType())
if mibBuilder.loadTexts: prvtHqosNetQPolicyFcQueueType.setStatus('current')
prvtHqosNetQPolicyFcQueueRStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosNetQPolicyFcQueueRStatus.setStatus('current')
prvtHqosNetEgrQStatsTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5), )
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsTable.setStatus('current')
prvtHqosNetEgrQStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosNetQPolicyQueueId"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsEntry.setStatus('current')
prvtHqosNetEgrQStatsGrnBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 2), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsGrnBytes.setStatus('current')
prvtHqosNetEgrQStatsGrnPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 3), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsGrnPckts.setStatus('current')
prvtHqosNetEgrQStatsYlwBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 4), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsYlwBytes.setStatus('current')
prvtHqosNetEgrQStatsYlwPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 5), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsYlwPckts.setStatus('current')
prvtHqosNetEgrQStatsTxBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 6), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsTxBytes.setStatus('current')
prvtHqosNetEgrQStatsTxPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 7), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsTxPckts.setStatus('current')
prvtHqosNetEgrQStatsWredGrnBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 8), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsWredGrnBytes.setStatus('current')
prvtHqosNetEgrQStatsWredGrnPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 9), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsWredGrnPckts.setStatus('current')
prvtHqosNetEgrQStatsWredYlwBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 10), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsWredYlwBytes.setStatus('current')
prvtHqosNetEgrQStatsWredYlwPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 11), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsWredYlwPckts.setStatus('current')
prvtHqosNetEgrQStatsPolDropBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 12), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsPolDropBytes.setStatus('current')
prvtHqosNetEgrQStatsPolDropPckts = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 4, 5, 1, 13), PrvtHqosStatsCountType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: prvtHqosNetEgrQStatsPolDropPckts.setStatus('current')
schedObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5))
prvtHqosSchedIngPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 1), )
if mibBuilder.loadTexts: prvtHqosSchedIngPolicyTable.setStatus('current')
prvtHqosSchedIngPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 1, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSchedIngPolicyName"))
if mibBuilder.loadTexts: prvtHqosSchedIngPolicyEntry.setStatus('current')
prvtHqosSchedIngPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 1, 1, 1), PrvtHqosNamedItem())
if mibBuilder.loadTexts: prvtHqosSchedIngPolicyName.setStatus('current')
prvtHqosSchedIngPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngPolicyRowStatus.setStatus('current')
prvtHqosSchedIngPolicyDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 1, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngPolicyDescr.setStatus('current')
prvtHqosSchedIngVirtTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 2), )
if mibBuilder.loadTexts: prvtHqosSchedIngVirtTable.setStatus('current')
prvtHqosSchedIngVirtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 2, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSchedIngPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedIngVirtName"))
if mibBuilder.loadTexts: prvtHqosSchedIngVirtEntry.setStatus('current')
prvtHqosSchedIngVirtName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 2, 1, 1), PrvtHqosNamedItem())
if mibBuilder.loadTexts: prvtHqosSchedIngVirtName.setStatus('current')
prvtHqosSchedIngVirtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngVirtRowStatus.setStatus('current')
prvtHqosSchedIngVirtDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 2, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngVirtDescr.setStatus('current')
prvtHqosSchedIngVirtParent = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 2, 1, 4), PrvtHqosNamedItem()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngVirtParent.setStatus('current')
prvtHqosSchedIngVirtLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 2, 1, 5), PrvtHqosLevel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngVirtLevel.setStatus('current')
prvtHqosSchedIngVirtWfqProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 2, 1, 6), PrvtHqosServSchedWfqIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngVirtWfqProfile.setStatus('current')
prvtHqosSchedIngVirtShaper = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 2, 1, 7), PrvtHqosL2ShaperId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngVirtShaper.setStatus('current')
prvtHqosSchedIngRootTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 3), )
if mibBuilder.loadTexts: prvtHqosSchedIngRootTable.setStatus('current')
prvtHqosSchedIngRootEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 3, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSchedIngPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedIngRootName"))
if mibBuilder.loadTexts: prvtHqosSchedIngRootEntry.setStatus('current')
prvtHqosSchedIngRootName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 3, 1, 1), PrvtHqosNamedItem())
if mibBuilder.loadTexts: prvtHqosSchedIngRootName.setStatus('current')
prvtHqosSchedIngRootRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngRootRowStatus.setStatus('current')
prvtHqosSchedIngRootDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 3, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngRootDescr.setStatus('current')
prvtHqosSchedIngRootLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 3, 1, 4), PrvtHqosLevel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngRootLevel.setStatus('current')
prvtHqosSchedIngRootShaper = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 3, 1, 5), PrvtHqosL1ShaperId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedIngRootShaper.setStatus('current')
prvtHqosSchedEgrPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 4), )
if mibBuilder.loadTexts: prvtHqosSchedEgrPolicyTable.setStatus('current')
prvtHqosSchedEgrPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 4, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrPolicyName"))
if mibBuilder.loadTexts: prvtHqosSchedEgrPolicyEntry.setStatus('current')
prvtHqosSchedEgrPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 4, 1, 1), PrvtHqosNamedItem())
if mibBuilder.loadTexts: prvtHqosSchedEgrPolicyName.setStatus('current')
prvtHqosSchedEgrPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrPolicyRowStatus.setStatus('current')
prvtHqosSchedEgrPolicyDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 4, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrPolicyDescr.setStatus('current')
prvtHqosSchedEgrVirtTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 5), )
if mibBuilder.loadTexts: prvtHqosSchedEgrVirtTable.setStatus('current')
prvtHqosSchedEgrVirtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 5, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrVirtName"))
if mibBuilder.loadTexts: prvtHqosSchedEgrVirtEntry.setStatus('current')
prvtHqosSchedEgrVirtName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 5, 1, 1), PrvtHqosNamedItem())
if mibBuilder.loadTexts: prvtHqosSchedEgrVirtName.setStatus('current')
prvtHqosSchedEgrVirtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrVirtRowStatus.setStatus('current')
prvtHqosSchedEgrVirtDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 5, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrVirtDescr.setStatus('current')
prvtHqosSchedEgrVirtParent = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 5, 1, 4), PrvtHqosNamedItem()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrVirtParent.setStatus('current')
prvtHqosSchedEgrVirtLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 5, 1, 5), PrvtHqosLevel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrVirtLevel.setStatus('current')
prvtHqosSchedEgrVirtWfqProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 5, 1, 6), PrvtHqosServSchedWfqIdType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrVirtWfqProfile.setStatus('current')
prvtHqosSchedEgrVirtShaper = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 5, 1, 7), PrvtHqosL2ShaperId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrVirtShaper.setStatus('current')
prvtHqosSchedEgrRootTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 6), )
if mibBuilder.loadTexts: prvtHqosSchedEgrRootTable.setStatus('current')
prvtHqosSchedEgrRootEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 6, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrPolicyName"), (0, "PRVT-HQOS-MIB", "prvtHqosSchedEgrRootName"))
if mibBuilder.loadTexts: prvtHqosSchedEgrRootEntry.setStatus('current')
prvtHqosSchedEgrRootName = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 6, 1, 1), PrvtHqosNamedItem())
if mibBuilder.loadTexts: prvtHqosSchedEgrRootName.setStatus('current')
prvtHqosSchedEgrRootRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrRootRowStatus.setStatus('current')
prvtHqosSchedEgrRootDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 6, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrRootDescr.setStatus('current')
prvtHqosSchedEgrRootLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 6, 1, 4), PrvtHqosLevel()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrRootLevel.setStatus('current')
prvtHqosSchedEgrRootShaper = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 5, 6, 1, 5), PrvtHqosL1ShaperId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosSchedEgrRootShaper.setStatus('current')
wredObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6))
prvtHqosWredPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1), )
if mibBuilder.loadTexts: prvtHqosWredPrfTable.setStatus('current')
prvtHqosWredPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosWredPrfId"))
if mibBuilder.loadTexts: prvtHqosWredPrfEntry.setStatus('current')
prvtHqosWredPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1, 1), PrvtHqosWredIdType())
if mibBuilder.loadTexts: prvtHqosWredPrfId.setStatus('current')
prvtHqosWredPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWredPrfRowStatus.setStatus('current')
prvtHqosWredPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1, 3), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWredPrfDescr.setStatus('current')
prvtHqosWredPrfGreenMinAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1, 4), PrvtHqosWredMinValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWredPrfGreenMinAverage.setStatus('current')
prvtHqosWredPrfGreenMaxAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1, 5), PrvtHqosWredMaxValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWredPrfGreenMaxAverage.setStatus('current')
prvtHqosWredPrfGreenProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1, 6), PrvtHqosWredProbValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWredPrfGreenProbability.setStatus('current')
prvtHqosWredPrfYellowMinAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1, 7), PrvtHqosWredMinValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWredPrfYellowMinAverage.setStatus('current')
prvtHqosWredPrfYellowMaxAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1, 8), PrvtHqosWredMaxValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWredPrfYellowMaxAverage.setStatus('current')
prvtHqosWredPrfYellowProbability = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 6, 1, 1, 9), PrvtHqosWredProbValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWredPrfYellowProbability.setStatus('current')
shaperObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7))
prvtHqosShaperL1IngPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 1), )
if mibBuilder.loadTexts: prvtHqosShaperL1IngPrfTable.setStatus('current')
prvtHqosShaperL1IngPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 1, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosShaperL1IngPrfId"))
if mibBuilder.loadTexts: prvtHqosShaperL1IngPrfEntry.setStatus('current')
prvtHqosShaperL1IngPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 1, 1, 1), PrvtHqosL1ShaperId())
if mibBuilder.loadTexts: prvtHqosShaperL1IngPrfId.setStatus('current')
prvtHqosShaperL1IngPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1IngPrfRowStatus.setStatus('current')
prvtHqosShaperL1IngPrfCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 1, 1, 3), PrvtHqosRateValueL1()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1IngPrfCIR.setStatus('current')
prvtHqosShaperL1IngPrfPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 1, 1, 4), PrvtHqosRateValueL1()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1IngPrfPIR.setStatus('current')
prvtHqosShaperL1IngPrfCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 1, 1, 5), PrvtHqosBurstValueL1()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1IngPrfCBS.setStatus('current')
prvtHqosShaperL1IngPrfPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 1, 1, 6), PrvtHqosBurstValueL1()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1IngPrfPBS.setStatus('current')
prvtHqosShaperL1IngPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 1, 1, 7), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1IngPrfDescr.setStatus('current')
prvtHqosShaperL1EgrPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 2), )
if mibBuilder.loadTexts: prvtHqosShaperL1EgrPrfTable.setStatus('current')
prvtHqosShaperL1EgrPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 2, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosShaperL1EgrPrfId"))
if mibBuilder.loadTexts: prvtHqosShaperL1EgrPrfEntry.setStatus('current')
prvtHqosShaperL1EgrPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 2, 1, 1), PrvtHqosL1ShaperId())
if mibBuilder.loadTexts: prvtHqosShaperL1EgrPrfId.setStatus('current')
prvtHqosShaperL1EgrPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1EgrPrfRowStatus.setStatus('current')
prvtHqosShaperL1EgrPrfCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 2, 1, 3), PrvtHqosRateValueL1()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1EgrPrfCIR.setStatus('current')
prvtHqosShaperL1EgrPrfPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 2, 1, 4), PrvtHqosRateValueL1()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1EgrPrfPIR.setStatus('current')
prvtHqosShaperL1EgrPrfCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 2, 1, 5), PrvtHqosBurstValueL1()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1EgrPrfCBS.setStatus('current')
prvtHqosShaperL1EgrPrfPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 2, 1, 6), PrvtHqosBurstValueL1()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1EgrPrfPBS.setStatus('current')
prvtHqosShaperL1EgrPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 2, 1, 7), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL1EgrPrfDescr.setStatus('current')
prvtHqosShaperL2IngPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 3), )
if mibBuilder.loadTexts: prvtHqosShaperL2IngPrfTable.setStatus('current')
prvtHqosShaperL2IngPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 3, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosShaperL2IngPrfId"))
if mibBuilder.loadTexts: prvtHqosShaperL2IngPrfEntry.setStatus('current')
prvtHqosShaperL2IngPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 3, 1, 1), PrvtHqosL2ShaperId())
if mibBuilder.loadTexts: prvtHqosShaperL2IngPrfId.setStatus('current')
prvtHqosShaperL2IngPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2IngPrfRowStatus.setStatus('current')
prvtHqosShaperL2IngPrfCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 3, 1, 3), PrvtHqosRateValueL2()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2IngPrfCIR.setStatus('current')
prvtHqosShaperL2IngPrfPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 3, 1, 4), PrvtHqosRateValueL2()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2IngPrfPIR.setStatus('current')
prvtHqosShaperL2IngPrfCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 3, 1, 5), PrvtHqosBurstValueL2()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2IngPrfCBS.setStatus('current')
prvtHqosShaperL2IngPrfPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 3, 1, 6), PrvtHqosBurstValueL2()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2IngPrfPBS.setStatus('current')
prvtHqosShaperL2IngPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 3, 1, 7), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2IngPrfDescr.setStatus('current')
prvtHqosShaperL2EgrPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 4), )
if mibBuilder.loadTexts: prvtHqosShaperL2EgrPrfTable.setStatus('current')
prvtHqosShaperL2EgrPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 4, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosShaperL2EgrPrfId"))
if mibBuilder.loadTexts: prvtHqosShaperL2EgrPrfEntry.setStatus('current')
prvtHqosShaperL2EgrPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 4, 1, 1), PrvtHqosL2ShaperId())
if mibBuilder.loadTexts: prvtHqosShaperL2EgrPrfId.setStatus('current')
prvtHqosShaperL2EgrPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2EgrPrfRowStatus.setStatus('current')
prvtHqosShaperL2EgrPrfCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 4, 1, 3), PrvtHqosRateValueL2()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2EgrPrfCIR.setStatus('current')
prvtHqosShaperL2EgrPrfPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 4, 1, 4), PrvtHqosRateValueL2()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2EgrPrfPIR.setStatus('current')
prvtHqosShaperL2EgrPrfCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 4, 1, 5), PrvtHqosBurstValueL2()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2EgrPrfCBS.setStatus('current')
prvtHqosShaperL2EgrPrfPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 4, 1, 6), PrvtHqosBurstValueL2()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2EgrPrfPBS.setStatus('current')
prvtHqosShaperL2EgrPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 4, 1, 7), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperL2EgrPrfDescr.setStatus('current')
prvtHqosShaperNetPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 5), )
if mibBuilder.loadTexts: prvtHqosShaperNetPrfTable.setStatus('current')
prvtHqosShaperNetPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 5, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosShaperNetPrfId"))
if mibBuilder.loadTexts: prvtHqosShaperNetPrfEntry.setStatus('current')
prvtHqosShaperNetPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 5, 1, 1), PrvtHqosNetShaperId())
if mibBuilder.loadTexts: prvtHqosShaperNetPrfId.setStatus('current')
prvtHqosShaperNetPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperNetPrfRowStatus.setStatus('current')
prvtHqosShaperNetPrfCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 5, 1, 3), PrvtHqosRateValueNet()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperNetPrfCIR.setStatus('current')
prvtHqosShaperNetPrfPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 5, 1, 4), PrvtHqosRateValueNet()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperNetPrfPIR.setStatus('current')
prvtHqosShaperNetPrfCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 5, 1, 5), PrvtHqosBurstValueNet()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperNetPrfCBS.setStatus('current')
prvtHqosShaperNetPrfPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 5, 1, 6), PrvtHqosBurstValueNet()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperNetPrfPBS.setStatus('current')
prvtHqosShaperNetPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 5, 1, 7), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperNetPrfDescr.setStatus('current')
prvtHqosShaperIfPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 6), )
if mibBuilder.loadTexts: prvtHqosShaperIfPrfTable.setStatus('current')
prvtHqosShaperIfPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 6, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosShaperIfPrfId"))
if mibBuilder.loadTexts: prvtHqosShaperIfPrfEntry.setStatus('current')
prvtHqosShaperIfPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 6, 1, 1), PrvtHqosIfShaperId())
if mibBuilder.loadTexts: prvtHqosShaperIfPrfId.setStatus('current')
prvtHqosShaperIfPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperIfPrfRowStatus.setStatus('current')
prvtHqosShaperIfPrfCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 6, 1, 3), PrvtHqosRateValueNet()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperIfPrfCIR.setStatus('current')
prvtHqosShaperIfPrfPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 6, 1, 4), PrvtHqosRateValueNet()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperIfPrfPIR.setStatus('current')
prvtHqosShaperIfPrfCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 6, 1, 5), PrvtHqosBurstValueIntf()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperIfPrfCBS.setStatus('current')
prvtHqosShaperIfPrfPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 6, 1, 6), PrvtHqosBurstValueIntf()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperIfPrfPBS.setStatus('current')
prvtHqosShaperIfPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 7, 6, 1, 7), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosShaperIfPrfDescr.setStatus('current')
wfqObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8))
prvtHqosWfqSvcIngPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 1), )
if mibBuilder.loadTexts: prvtHqosWfqSvcIngPrfTable.setStatus('current')
prvtHqosWfqSvcIngPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 1, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosWfqSvcIngPrfId"))
if mibBuilder.loadTexts: prvtHqosWfqSvcIngPrfEntry.setStatus('current')
prvtHqosWfqSvcIngPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 1, 1, 1), PrvtHqosServWfqIdType())
if mibBuilder.loadTexts: prvtHqosWfqSvcIngPrfId.setStatus('current')
prvtHqosWfqSvcIngPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSvcIngPrfRowStatus.setStatus('current')
prvtHqosWfqSvcIngPrfCirWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 1, 1, 3), PrvtHqosWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSvcIngPrfCirWeight.setStatus('current')
prvtHqosWfqSvcIngPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 1, 1, 4), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSvcIngPrfDescr.setStatus('current')
prvtHqosWfqSvcEgrPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 2), )
if mibBuilder.loadTexts: prvtHqosWfqSvcEgrPrfTable.setStatus('current')
prvtHqosWfqSvcEgrPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 2, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosWfqSvcEgrPrfId"))
if mibBuilder.loadTexts: prvtHqosWfqSvcEgrPrfEntry.setStatus('current')
prvtHqosWfqSvcEgrPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 2, 1, 1), PrvtHqosServWfqIdType())
if mibBuilder.loadTexts: prvtHqosWfqSvcEgrPrfId.setStatus('current')
prvtHqosWfqSvcEgrPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSvcEgrPrfRowStatus.setStatus('current')
prvtHqosWfqSvcEgrPrfCirWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 2, 1, 3), PrvtHqosWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSvcEgrPrfCirWeight.setStatus('current')
prvtHqosWfqSvcEgrPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 2, 1, 4), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSvcEgrPrfDescr.setStatus('current')
prvtHqosWfqSchedIngPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 3), )
if mibBuilder.loadTexts: prvtHqosWfqSchedIngPrfTable.setStatus('current')
prvtHqosWfqSchedIngPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 3, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosWfqSchedIngPrfId"))
if mibBuilder.loadTexts: prvtHqosWfqSchedIngPrfEntry.setStatus('current')
prvtHqosWfqSchedIngPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 3, 1, 1), PrvtHqosServSchedWfqIdType())
if mibBuilder.loadTexts: prvtHqosWfqSchedIngPrfId.setStatus('current')
prvtHqosWfqSchedIngPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSchedIngPrfRowStatus.setStatus('current')
prvtHqosWfqSchedIngPrfWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 3, 1, 3), PrvtHqosWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSchedIngPrfWeight.setStatus('current')
prvtHqosWfqSchedIngPrfCirWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 3, 1, 4), PrvtHqosWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSchedIngPrfCirWeight.setStatus('current')
prvtHqosWfqSchedIngPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 3, 1, 5), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSchedIngPrfDescr.setStatus('current')
prvtHqosWfqSchedEgrPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 4), )
if mibBuilder.loadTexts: prvtHqosWfqSchedEgrPrfTable.setStatus('current')
prvtHqosWfqSchedEgrPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 4, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosWfqSchedEgrPrfId"))
if mibBuilder.loadTexts: prvtHqosWfqSchedEgrPrfEntry.setStatus('current')
prvtHqosWfqSchedEgrPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 4, 1, 1), PrvtHqosServSchedWfqIdType())
if mibBuilder.loadTexts: prvtHqosWfqSchedEgrPrfId.setStatus('current')
prvtHqosWfqSchedEgrPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSchedEgrPrfRowStatus.setStatus('current')
prvtHqosWfqSchedEgrPrfWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 4, 1, 3), PrvtHqosWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSchedEgrPrfWeight.setStatus('current')
prvtHqosWfqSchedEgrPrfCirWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 4, 1, 4), PrvtHqosWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSchedEgrPrfCirWeight.setStatus('current')
prvtHqosWfqSchedEgrPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 4, 1, 5), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqSchedEgrPrfDescr.setStatus('current')
prvtHqosWfqNetworkPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 5), )
if mibBuilder.loadTexts: prvtHqosWfqNetworkPrfTable.setStatus('current')
prvtHqosWfqNetworkPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 5, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosWfqNetworkPrfId"))
if mibBuilder.loadTexts: prvtHqosWfqNetworkPrfEntry.setStatus('current')
prvtHqosWfqNetworkPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 5, 1, 1), PrvtHqosNetWfqIdType())
if mibBuilder.loadTexts: prvtHqosWfqNetworkPrfId.setStatus('current')
prvtHqosWfqNetworkPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqNetworkPrfRowStatus.setStatus('current')
prvtHqosWfqNetworkPrfWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 5, 1, 3), PrvtHqosWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqNetworkPrfWeight.setStatus('current')
prvtHqosWfqNetworkPrfCirWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 5, 1, 4), PrvtHqosWeight()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqNetworkPrfCirWeight.setStatus('current')
prvtHqosWfqNetworkPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 8, 5, 1, 5), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosWfqNetworkPrfDescr.setStatus('current')
ifObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 9))
prvtHqosIfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 9, 1), )
if mibBuilder.loadTexts: prvtHqosIfTable.setStatus('current')
prvtHqosIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 9, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: prvtHqosIfEntry.setStatus('current')
prvtHqosIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 9, 1, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosIfRowStatus.setStatus('current')
prvtHqosIfNetworkPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 9, 1, 1, 2), PrvtHqosNetPolNameOrNoneType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosIfNetworkPolicy.setStatus('current')
prvtHqosIfNetQueueEgrPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 9, 1, 1, 3), PrvtHqosNamedItemOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosIfNetQueueEgrPolicy.setStatus('current')
prvtHqosIfShaperProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 9, 1, 1, 4), PrvtHqosIfShaperIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosIfShaperProfile.setStatus('current')
policerObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10))
prvtHqosPolicerSvcPrfTable = MibTable((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10, 1), )
if mibBuilder.loadTexts: prvtHqosPolicerSvcPrfTable.setStatus('current')
prvtHqosPolicerSvcPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10, 1, 1), ).setIndexNames((0, "PRVT-HQOS-MIB", "prvtHqosPolicerSvcPrfId"))
if mibBuilder.loadTexts: prvtHqosPolicerSvcPrfEntry.setStatus('current')
prvtHqosPolicerSvcPrfId = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10, 1, 1, 1), PrvtHqosPolicerIdType())
if mibBuilder.loadTexts: prvtHqosPolicerSvcPrfId.setStatus('current')
prvtHqosPolicerSvcPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosPolicerSvcPrfRowStatus.setStatus('current')
prvtHqosPolicerSvcPrfCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10, 1, 1, 3), PrvtHqosRateValueNet()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosPolicerSvcPrfCIR.setStatus('current')
prvtHqosPolicerSvcPrfPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10, 1, 1, 4), PrvtHqosRateValueNet()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosPolicerSvcPrfPIR.setStatus('current')
prvtHqosPolicerSvcPrfCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10, 1, 1, 5), PrvtHqosBurstValueIntf()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosPolicerSvcPrfCBS.setStatus('current')
prvtHqosPolicerSvcPrfPBS = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10, 1, 1, 6), PrvtHqosBurstValueIntf()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosPolicerSvcPrfPBS.setStatus('current')
prvtHqosPolicerSvcPrfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 738, 10, 7, 5, 1, 10, 1, 1, 7), PrvtHqosDescrType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: prvtHqosPolicerSvcPrfDescr.setStatus('current')
mibBuilder.exportSymbols("PRVT-HQOS-MIB", prvtHqosSvcIngQueueRowStatus=prvtHqosSvcIngQueueRowStatus, prvtHqosSchedEgrPolicyRowStatus=prvtHqosSchedEgrPolicyRowStatus, prvtHqosSvcIngQueueId=prvtHqosSvcIngQueueId, prvtHqosSvcIngFcDefaultRowStatus=prvtHqosSvcIngFcDefaultRowStatus, prvtHqosPolicerSvcPrfDescr=prvtHqosPolicerSvcPrfDescr, prvtHqosSchedIngRootDescr=prvtHqosSchedIngRootDescr, prvtHqosSchedEgrRootShaper=prvtHqosSchedEgrRootShaper, PrvtHqosColorType=PrvtHqosColorType, prvtHqosWfqSchedIngPrfWeight=prvtHqosWfqSchedIngPrfWeight, prvtHqosSvcIngTable=prvtHqosSvcIngTable, prvtHqosNetQPolicyQueueLevel=prvtHqosNetQPolicyQueueLevel, prvtHqosShaperL1IngPrfId=prvtHqosShaperL1IngPrfId, prvtHqosPolicerSvcPrfPIR=prvtHqosPolicerSvcPrfPIR, prvtHqosNetEgrFcTable=prvtHqosNetEgrFcTable, prvtHqosSchedIngVirtWfqProfile=prvtHqosSchedIngVirtWfqProfile, prvtHqosShaperL1EgrPrfCIR=prvtHqosShaperL1EgrPrfCIR, prvtHqosSvcEgrQStatsWredYlwBytes=prvtHqosSvcEgrQStatsWredYlwBytes, prvtHqosSchedEgrPolicyName=prvtHqosSchedEgrPolicyName, prvtHqosNetQPolicyQueueRowStatus=prvtHqosNetQPolicyQueueRowStatus, prvtHqosSvcIngFcDot1pColor=prvtHqosSvcIngFcDot1pColor, prvtHqosSvcEgrFcColorValue=prvtHqosSvcEgrFcColorValue, prvtHqosShaperNetPrfCBS=prvtHqosShaperNetPrfCBS, prvtHqosPolicerSvcPrfTable=prvtHqosPolicerSvcPrfTable, prvtHqosWfqSvcEgrPrfTable=prvtHqosWfqSvcEgrPrfTable, prvtHqosShaperL1EgrPrfId=prvtHqosShaperL1EgrPrfId, prvtHqosSvcEgrFcColorDot1PValue=prvtHqosSvcEgrFcColorDot1PValue, prvtHqosShaperL1EgrPrfCBS=prvtHqosShaperL1EgrPrfCBS, prvtHqosSchedIngVirtTable=prvtHqosSchedIngVirtTable, prvtHqosWfqNetworkPrfWeight=prvtHqosWfqNetworkPrfWeight, prvtHqosShaperL2EgrPrfRowStatus=prvtHqosShaperL2EgrPrfRowStatus, PrvtHqosBurstValueL2=PrvtHqosBurstValueL2, prvtHqosWfqSvcIngPrfTable=prvtHqosWfqSvcIngPrfTable, prvtHqosWfqSvcEgrPrfRowStatus=prvtHqosWfqSvcEgrPrfRowStatus, PrvtHqosServSchedWfqIdType=PrvtHqosServSchedWfqIdType, PrvtHqosDscpValue=PrvtHqosDscpValue, prvtHqosNetEgrFcNumber=prvtHqosNetEgrFcNumber, prvtHqosNetPolicyTable=prvtHqosNetPolicyTable, PrvtHqosWredMinValue=PrvtHqosWredMinValue, prvtHqosSvcIngFcDscpColor=prvtHqosSvcIngFcDscpColor, prvtHqosSvcEgrQStatsTable=prvtHqosSvcEgrQStatsTable, prvtHqosNetEgrQStatsGrnPckts=prvtHqosNetEgrQStatsGrnPckts, wredObjects=wredObjects, prvtHqosSvcIngQueuePolicer=prvtHqosSvcIngQueuePolicer, prvtHqosNetQPolicyQueueTable=prvtHqosNetQPolicyQueueTable, prvtHqosSchedEgrRootDescr=prvtHqosSchedEgrRootDescr, prvtHqosShaperL2EgrPrfTable=prvtHqosShaperL2EgrPrfTable, prvtHqosWfqSchedIngPrfId=prvtHqosWfqSchedIngPrfId, prvtHqosSvcEgrQStatsEntry=prvtHqosSvcEgrQStatsEntry, prvtHqosShaperIfPrfPBS=prvtHqosShaperIfPrfPBS, PrvtHqosNetWfqIdType=PrvtHqosNetWfqIdType, prvtHqosSvcIngFcDefaultMapType=prvtHqosSvcIngFcDefaultMapType, prvtHqosIfShaperProfile=prvtHqosIfShaperProfile, prvtHqosSchedIngRootName=prvtHqosSchedIngRootName, prvtHqosNetEgrQStatsPolDropPckts=prvtHqosNetEgrQStatsPolDropPckts, prvtHqosShaperIfPrfRowStatus=prvtHqosShaperIfPrfRowStatus, prvtHqosWredPrfGreenProbability=prvtHqosWredPrfGreenProbability, prvtHqosNetQPolicyQueueWred=prvtHqosNetQPolicyQueueWred, prvtHqosShaperL2IngPrfDescr=prvtHqosShaperL2IngPrfDescr, ifObjects=ifObjects, prvtHqosSvcIngFcDscpRowStatus=prvtHqosSvcIngFcDscpRowStatus, PrvtHqosDescrType=PrvtHqosDescrType, prvtHqosWfqSchedIngPrfRowStatus=prvtHqosWfqSchedIngPrfRowStatus, prvtHqosSvcEgrQStatsWredGrnBytes=prvtHqosSvcEgrQStatsWredGrnBytes, prvtHqosSvcEgrFcColorTable=prvtHqosSvcEgrFcColorTable, PYSNMP_MODULE_ID=prvtHqosMIB, prvtHqosSvcEgrFcEntry=prvtHqosSvcEgrFcEntry, PrvtHqosLevel=PrvtHqosLevel, prvtHqosSvcEgrFcTable=prvtHqosSvcEgrFcTable, PrvtHqosWredIdType=PrvtHqosWredIdType, prvtHqosSvcEgrQStatsGrnPckts=prvtHqosSvcEgrQStatsGrnPckts, prvtHqosWfqNetworkPrfDescr=prvtHqosWfqNetworkPrfDescr, prvtHqosWfqSvcEgrPrfDescr=prvtHqosWfqSvcEgrPrfDescr, prvtHqosShaperNetPrfId=prvtHqosShaperNetPrfId, prvtHqosSvcIngQStatsEntry=prvtHqosSvcIngQStatsEntry, prvtHqosNetEgrQStatsEntry=prvtHqosNetEgrQStatsEntry, prvtHqosSchedEgrRootName=prvtHqosSchedEgrRootName, PrvtHqosQueueType=PrvtHqosQueueType, prvtHqosIfEntry=prvtHqosIfEntry, prvtHqosWfqSchedEgrPrfId=prvtHqosWfqSchedEgrPrfId, prvtHqosSchedIngPolicyDescr=prvtHqosSchedIngPolicyDescr, PrvtHqosNetShaperId=PrvtHqosNetShaperId, prvtHqosNetEgrFcRowStatus=prvtHqosNetEgrFcRowStatus, prvtHqosNetEgrQStatsYlwPckts=prvtHqosNetEgrQStatsYlwPckts, prvtHqosSchedIngRootTable=prvtHqosSchedIngRootTable, PrvtHqosBurstValueL1=PrvtHqosBurstValueL1, PrvtHqosIfShaperIdOrNone=PrvtHqosIfShaperIdOrNone, prvtHqosShaperL2IngPrfTable=prvtHqosShaperL2IngPrfTable, prvtHqosPolicerSvcPrfId=prvtHqosPolicerSvcPrfId, prvtHqosSvcEgrId=prvtHqosSvcEgrId, prvtHqosSchedEgrVirtTable=prvtHqosSchedEgrVirtTable, prvtHqosNetQPolicyFcTable=prvtHqosNetQPolicyFcTable, prvtHqosSchedIngPolicyTable=prvtHqosSchedIngPolicyTable, prvtHqosShaperL2IngPrfEntry=prvtHqosShaperL2IngPrfEntry, prvtHqosMIB=prvtHqosMIB, prvtHqosSchedEgrPolicyEntry=prvtHqosSchedEgrPolicyEntry, prvtHqosSvcEgrFcColorEntry=prvtHqosSvcEgrFcColorEntry, prvtHqosShaperL1EgrPrfPBS=prvtHqosShaperL1EgrPrfPBS, prvtHqosPolicerSvcPrfEntry=prvtHqosPolicerSvcPrfEntry, prvtHqosSvcEgrQueueTable=prvtHqosSvcEgrQueueTable, prvtHqosShaperNetPrfTable=prvtHqosShaperNetPrfTable, prvtHqosNetQPolicyFcQueueTable=prvtHqosNetQPolicyFcQueueTable, prvtHqosSchedIngRootShaper=prvtHqosSchedIngRootShaper, prvtHqosSvcIngQStatsWredGrnBytes=prvtHqosSvcIngQStatsWredGrnBytes, prvtHqosSvcIngFcQueueEntry=prvtHqosSvcIngFcQueueEntry, prvtHqosPolicerSvcPrfCIR=prvtHqosPolicerSvcPrfCIR, prvtHqosShaperL2EgrPrfPBS=prvtHqosShaperL2EgrPrfPBS, prvtHqosSvcEgrQStatsTxPckts=prvtHqosSvcEgrQStatsTxPckts, prvtHqosSchedEgrVirtName=prvtHqosSchedEgrVirtName, hqosMIBObjects=hqosMIBObjects, PrvtHqosIfShaperId=PrvtHqosIfShaperId, prvtHqosSvcEgrFcColorRowStatus=prvtHqosSvcEgrFcColorRowStatus, prvtHqosNetEgrQStatsWredGrnPckts=prvtHqosNetEgrQStatsWredGrnPckts, prvtHqosShaperIfPrfDescr=prvtHqosShaperIfPrfDescr, PrvtHqosDot1pPriority=PrvtHqosDot1pPriority, prvtHqosNetIngLspExpEntry=prvtHqosNetIngLspExpEntry, prvtHqosSchedEgrVirtWfqProfile=prvtHqosSchedEgrVirtWfqProfile, prvtHqosNetEgrQStatsTable=prvtHqosNetEgrQStatsTable, prvtHqosWfqSchedEgrPrfEntry=prvtHqosWfqSchedEgrPrfEntry, prvtHqosWfqSchedEgrPrfTable=prvtHqosWfqSchedEgrPrfTable, prvtHqosSvcEgrQStatsPolDropPckts=prvtHqosSvcEgrQStatsPolDropPckts, prvtHqosSvcIngQueueTable=prvtHqosSvcIngQueueTable, prvtHqosShaperL1EgrPrfEntry=prvtHqosShaperL1EgrPrfEntry, prvtHqosSvcEgrQueueServWfq=prvtHqosSvcEgrQueueServWfq, prvtHqosSchedIngPolicyRowStatus=prvtHqosSchedIngPolicyRowStatus, prvtHqosSvcIngFcDot1pEntry=prvtHqosSvcIngFcDot1pEntry, prvtHqosSvcEgrFcQueueType=prvtHqosSvcEgrFcQueueType, prvtHqosNetPolicyRowStatus=prvtHqosNetPolicyRowStatus, prvtHqosWfqNetworkPrfEntry=prvtHqosWfqNetworkPrfEntry, prvtHqosWfqSvcIngPrfEntry=prvtHqosWfqSvcIngPrfEntry, prvtHqosSchedIngRootRowStatus=prvtHqosSchedIngRootRowStatus, prvtHqosSchedEgrVirtLevel=prvtHqosSchedEgrVirtLevel, prvtHqosSvcIngQStatsPolDropPckts=prvtHqosSvcIngQStatsPolDropPckts, prvtHqosWredPrfYellowProbability=prvtHqosWredPrfYellowProbability, prvtHqosNetEgrQStatsWredGrnBytes=prvtHqosNetEgrQStatsWredGrnBytes, prvtHqosSchedIngVirtParent=prvtHqosSchedIngVirtParent, prvtHqosSvcEgrQueueEntry=prvtHqosSvcEgrQueueEntry, prvtHqosWredPrfYellowMaxAverage=prvtHqosWredPrfYellowMaxAverage, prvtHqosShaperL1IngPrfPIR=prvtHqosShaperL1IngPrfPIR, prvtHqosSvcEgrRowStatus=prvtHqosSvcEgrRowStatus, prvtHqosShaperL2EgrPrfPIR=prvtHqosShaperL2EgrPrfPIR, prvtHqosSvcIngQStatsTxBytes=prvtHqosSvcIngQStatsTxBytes, prvtHqosSchedEgrVirtRowStatus=prvtHqosSchedEgrVirtRowStatus, prvtHqosWfqSchedIngPrfCirWeight=prvtHqosWfqSchedIngPrfCirWeight, prvtHqosNetPolicyName=prvtHqosNetPolicyName, prvtHqosWfqNetworkPrfTable=prvtHqosWfqNetworkPrfTable, PrvtHqosStatsCountType=PrvtHqosStatsCountType, prvtHqosSchedEgrVirtDescr=prvtHqosSchedEgrVirtDescr, prvtHqosSchedEgrRootTable=prvtHqosSchedEgrRootTable, PrvtHqosNamedItem=PrvtHqosNamedItem, prvtHqosNetEgrQStatsTxPckts=prvtHqosNetEgrQStatsTxPckts, prvtHqosSvcIngFcDscpTable=prvtHqosSvcIngFcDscpTable, prvtHqosShaperL2EgrPrfId=prvtHqosShaperL2EgrPrfId, prvtHqosSchedIngVirtEntry=prvtHqosSchedIngVirtEntry, netObjects=netObjects, prvtHqosWredPrfGreenMinAverage=prvtHqosWredPrfGreenMinAverage, prvtHqosWredPrfDescr=prvtHqosWredPrfDescr, prvtHqosNetPolicyDescr=prvtHqosNetPolicyDescr, prvtHqosNetQPolicyFcQueueRStatus=prvtHqosNetQPolicyFcQueueRStatus, prvtHqosSvcIngId=prvtHqosSvcIngId, prvtHqosShaperL1IngPrfCBS=prvtHqosShaperL1IngPrfCBS, prvtHqosPolicerSvcPrfCBS=prvtHqosPolicerSvcPrfCBS, prvtHqosSchedIngPolicyName=prvtHqosSchedIngPolicyName, prvtHqosNetQPolicyQueueId=prvtHqosNetQPolicyQueueId, prvtHqosShaperL2IngPrfPIR=prvtHqosShaperL2IngPrfPIR, prvtHqosShaperIfPrfEntry=prvtHqosShaperIfPrfEntry, PrvtHqosL2ShaperId=PrvtHqosL2ShaperId, prvtHqosShaperL2IngPrfRowStatus=prvtHqosShaperL2IngPrfRowStatus, prvtHqosNetQPolicyFcNumber=prvtHqosNetQPolicyFcNumber, prvtHqosSvcEgrFcRowStatus=prvtHqosSvcEgrFcRowStatus, prvtHqosNetEgrFcColor=prvtHqosNetEgrFcColor, prvtHqosWredPrfId=prvtHqosWredPrfId, prvtHqosShaperIfPrfTable=prvtHqosShaperIfPrfTable, prvtHqosWfqSchedEgrPrfDescr=prvtHqosWfqSchedEgrPrfDescr, netQueueObjects=netQueueObjects, prvtHqosShaperNetPrfPIR=prvtHqosShaperNetPrfPIR, prvtHqosSvcIngFcDscpValue=prvtHqosSvcIngFcDscpValue, PrvtHqosNetPolNameOrNoneType=PrvtHqosNetPolNameOrNoneType, prvtHqosSvcEgrFcQueueEntry=prvtHqosSvcEgrFcQueueEntry, PrvtHqosFcType=PrvtHqosFcType, PrvtHqosBurstValueNet=PrvtHqosBurstValueNet, prvtHqosNetQPolicyName=prvtHqosNetQPolicyName, prvtHqosShaperL2IngPrfId=prvtHqosShaperL2IngPrfId, PrvtHqosRateValueL1=PrvtHqosRateValueL1, prvtHqosNetIngLspExpColor=prvtHqosNetIngLspExpColor, prvtHqosShaperL1EgrPrfDescr=prvtHqosShaperL1EgrPrfDescr, prvtHqosWfqSchedIngPrfDescr=prvtHqosWfqSchedIngPrfDescr, prvtHqosShaperL2EgrPrfDescr=prvtHqosShaperL2EgrPrfDescr, prvtHqosSchedIngVirtRowStatus=prvtHqosSchedIngVirtRowStatus, prvtHqosNetEgrQStatsPolDropBytes=prvtHqosNetEgrQStatsPolDropBytes, prvtHqosShaperNetPrfDescr=prvtHqosShaperNetPrfDescr, wfqObjects=wfqObjects, prvtHqosSvcIngFcDot1pRowStatus=prvtHqosSvcIngFcDot1pRowStatus, prvtHqosIfRowStatus=prvtHqosIfRowStatus, prvtHqosShaperL1IngPrfPBS=prvtHqosShaperL1IngPrfPBS, prvtHqosSvcIngFcDscpEntry=prvtHqosSvcIngFcDscpEntry, prvtHqosWredPrfTable=prvtHqosWredPrfTable, prvtHqosSvcEgrTable=prvtHqosSvcEgrTable, prvtHqosWfqSchedIngPrfTable=prvtHqosWfqSchedIngPrfTable, PrvtHqosNetQueueIdType=PrvtHqosNetQueueIdType, prvtHqosShaperIfPrfPIR=prvtHqosShaperIfPrfPIR, prvtHqosSvcIngQStatsWredYlwPckts=prvtHqosSvcIngQStatsWredYlwPckts, shaperObjects=shaperObjects, PrvtHqosPolicerIdType=PrvtHqosPolicerIdType, PrvtHqosServiceQueueId=PrvtHqosServiceQueueId, prvtHqosSvcEgrQStatsTxBytes=prvtHqosSvcEgrQStatsTxBytes, prvtHqosSvcIngQStatsGrnPckts=prvtHqosSvcIngQStatsGrnPckts, prvtHqosShaperIfPrfId=prvtHqosShaperIfPrfId, prvtHqosSvcIngQStatsYlwBytes=prvtHqosSvcIngQStatsYlwBytes, PrvtHqosRateValueNet=PrvtHqosRateValueNet, prvtHqosSchedIngVirtShaper=prvtHqosSchedIngVirtShaper, PrvtHqosRateValueL2=PrvtHqosRateValueL2, prvtHqosShaperNetPrfCIR=prvtHqosShaperNetPrfCIR, prvtHqosSvcEgrQStatsWredGrnPckts=prvtHqosSvcEgrQStatsWredGrnPckts, prvtHqosShaperL2EgrPrfCBS=prvtHqosShaperL2EgrPrfCBS, prvtHqosSvcIngQStatsWredGrnPckts=prvtHqosSvcIngQStatsWredGrnPckts, prvtHqosSvcIngDescr=prvtHqosSvcIngDescr, prvtHqosShaperNetPrfPBS=prvtHqosShaperNetPrfPBS, prvtHqosWfqNetworkPrfCirWeight=prvtHqosWfqNetworkPrfCirWeight, prvtHqosSvcIngFcType=prvtHqosSvcIngFcType, prvtHqosSvcIngEntry=prvtHqosSvcIngEntry, prvtHqosNetQPolicyQueueEntry=prvtHqosNetQPolicyQueueEntry, prvtHqosWredPrfEntry=prvtHqosWredPrfEntry, PrvtHqosL1ShaperId=PrvtHqosL1ShaperId, prvtHqosWfqSchedEgrPrfCirWeight=prvtHqosWfqSchedEgrPrfCirWeight, prvtHqosSvcIngFcDefaultColor=prvtHqosSvcIngFcDefaultColor, prvtHqosSvcIngFcEntry=prvtHqosSvcIngFcEntry, prvtHqosSvcIngFcTable=prvtHqosSvcIngFcTable, prvtHqosNetQPolicyFcRowStatus=prvtHqosNetQPolicyFcRowStatus, prvtHqosSvcIngQueueEntry=prvtHqosSvcIngQueueEntry, prvtHqosSvcEgrEntry=prvtHqosSvcEgrEntry, prvtHqosSvcIngFcDefaultTable=prvtHqosSvcIngFcDefaultTable, prvtHqosSchedEgrVirtEntry=prvtHqosSchedEgrVirtEntry, prvtHqosSchedEgrPolicyTable=prvtHqosSchedEgrPolicyTable, prvtHqosNetIngLspExpFC=prvtHqosNetIngLspExpFC, prvtHqosNetQPolicyEntry=prvtHqosNetQPolicyEntry, prvtHqosIfNetQueueEgrPolicy=prvtHqosIfNetQueueEgrPolicy, prvtHqosShaperL2IngPrfCBS=prvtHqosShaperL2IngPrfCBS, prvtHqosSchedIngRootEntry=prvtHqosSchedIngRootEntry, prvtHqosSvcIngRowStatus=prvtHqosSvcIngRowStatus, prvtHqosNetIngLspExpValue=prvtHqosNetIngLspExpValue, PrvtHqosWeight=PrvtHqosWeight, prvtHqosNetQPolicyFcEntry=prvtHqosNetQPolicyFcEntry, PrvtHqosServicePolicyId=PrvtHqosServicePolicyId, prvtHqosSchedIngPolicyEntry=prvtHqosSchedIngPolicyEntry, prvtHqosWfqSvcIngPrfRowStatus=prvtHqosWfqSvcIngPrfRowStatus, prvtHqosWfqSvcEgrPrfEntry=prvtHqosWfqSvcEgrPrfEntry, prvtHqosWredPrfGreenMaxAverage=prvtHqosWredPrfGreenMaxAverage, prvtHqosIfTable=prvtHqosIfTable, prvtHqosSchedEgrVirtShaper=prvtHqosSchedEgrVirtShaper, prvtHqosSvcIngQueueServWfq=prvtHqosSvcIngQueueServWfq, prvtHqosSvcEgrFcQueueTable=prvtHqosSvcEgrFcQueueTable, prvtHqosNetQPolicyQueueShaper=prvtHqosNetQPolicyQueueShaper, prvtHqosShaperL1IngPrfCIR=prvtHqosShaperL1IngPrfCIR, prvtHqosSvcEgrQStatsPolDropBytes=prvtHqosSvcEgrQStatsPolDropBytes)
mibBuilder.exportSymbols("PRVT-HQOS-MIB", prvtHqosShaperIfPrfCBS=prvtHqosShaperIfPrfCBS, prvtHqosSchedEgrRootLevel=prvtHqosSchedEgrRootLevel, prvtHqosShaperL1EgrPrfRowStatus=prvtHqosShaperL1EgrPrfRowStatus, prvtHqosShaperIfPrfCIR=prvtHqosShaperIfPrfCIR, prvtHqosWfqNetworkPrfRowStatus=prvtHqosWfqNetworkPrfRowStatus, prvtHqosWfqSchedIngPrfEntry=prvtHqosWfqSchedIngPrfEntry, prvtHqosNetEgrQStatsWredYlwPckts=prvtHqosNetEgrQStatsWredYlwPckts, prvtHqosSvcIngQStatsYlwPckts=prvtHqosSvcIngQStatsYlwPckts, prvtHqosNetPolicyEntry=prvtHqosNetPolicyEntry, prvtHqosSvcEgrQueueId=prvtHqosSvcEgrQueueId, prvtHqosNetEgrFcLspExpValue=prvtHqosNetEgrFcLspExpValue, prvtHqosSchedEgrPolicyDescr=prvtHqosSchedEgrPolicyDescr, prvtHqosWfqSchedEgrPrfRowStatus=prvtHqosWfqSchedEgrPrfRowStatus, prvtHqosSvcIngFcQueueRowStatus=prvtHqosSvcIngFcQueueRowStatus, prvtHqosNetEgrQStatsTxBytes=prvtHqosNetEgrQStatsTxBytes, prvtHqosShaperNetPrfRowStatus=prvtHqosShaperNetPrfRowStatus, prvtHqosShaperL2IngPrfCIR=prvtHqosShaperL2IngPrfCIR, PrvtHqosBurstValueIntf=PrvtHqosBurstValueIntf, prvtHqosWfqSvcIngPrfId=prvtHqosWfqSvcIngPrfId, prvtHqosNetQPolicyFcQueueType=prvtHqosNetQPolicyFcQueueType, prvtHqosWfqNetworkPrfId=prvtHqosWfqNetworkPrfId, prvtHqosWredPrfYellowMinAverage=prvtHqosWredPrfYellowMinAverage, prvtHqosSvcEgrQueueWred=prvtHqosSvcEgrQueueWred, prvtHqosNetEgrQStatsGrnBytes=prvtHqosNetEgrQStatsGrnBytes, prvtHqosWfqSvcIngPrfDescr=prvtHqosWfqSvcIngPrfDescr, prvtHqosNetQPolicyQueueWfq=prvtHqosNetQPolicyQueueWfq, prvtHqosShaperL1EgrPrfTable=prvtHqosShaperL1EgrPrfTable, prvtHqosShaperL2IngPrfPBS=prvtHqosShaperL2IngPrfPBS, prvtHqosSvcEgrQStatsYlwBytes=prvtHqosSvcEgrQStatsYlwBytes, PrvtHqosWredMaxValue=PrvtHqosWredMaxValue, PrvtHqosNamedItemOrNone=PrvtHqosNamedItemOrNone, prvtHqosSchedIngVirtLevel=prvtHqosSchedIngVirtLevel, PrvtHqosServWfqIdType=PrvtHqosServWfqIdType, prvtHqosNetIngLspExpTable=prvtHqosNetIngLspExpTable, PrvtHqosWredProbValue=PrvtHqosWredProbValue, prvtHqosWfqSvcIngPrfCirWeight=prvtHqosWfqSvcIngPrfCirWeight, svcEgrObjects=svcEgrObjects, prvtHqosShaperL1IngPrfDescr=prvtHqosShaperL1IngPrfDescr, prvtHqosPolicerSvcPrfPBS=prvtHqosPolicerSvcPrfPBS, prvtHqosSvcIngFcRowStatus=prvtHqosSvcIngFcRowStatus, prvtHqosShaperL2EgrPrfEntry=prvtHqosShaperL2EgrPrfEntry, prvtHqosSvcIngQStatsTxPckts=prvtHqosSvcIngQStatsTxPckts, prvtHqosNetQPolicyRowStatus=prvtHqosNetQPolicyRowStatus, svcIngObjects=svcIngObjects, prvtHqosSvcIngQStatsGrnBytes=prvtHqosSvcIngQStatsGrnBytes, prvtHqosWredPrfRowStatus=prvtHqosWredPrfRowStatus, prvtHqosShaperL2EgrPrfCIR=prvtHqosShaperL2EgrPrfCIR, prvtHqosShaperL1IngPrfTable=prvtHqosShaperL1IngPrfTable, PrvtHqosMapType=PrvtHqosMapType, prvtHqosSvcIngFcQueueTable=prvtHqosSvcIngFcQueueTable, prvtHqosSchedEgrRootEntry=prvtHqosSchedEgrRootEntry, prvtHqosWfqSvcEgrPrfId=prvtHqosWfqSvcEgrPrfId, prvtHqosPolicerSvcPrfRowStatus=prvtHqosPolicerSvcPrfRowStatus, prvtHqosSvcEgrQStatsWredYlwPckts=prvtHqosSvcEgrQStatsWredYlwPckts, prvtHqosShaperNetPrfEntry=prvtHqosShaperNetPrfEntry, prvtHqosShaperL1IngPrfEntry=prvtHqosShaperL1IngPrfEntry, prvtHqosSvcEgrFcNumber=prvtHqosSvcEgrFcNumber, prvtHqosSchedIngVirtName=prvtHqosSchedIngVirtName, prvtHqosSchedEgrVirtParent=prvtHqosSchedEgrVirtParent, prvtHqosSvcIngQStatsTable=prvtHqosSvcIngQStatsTable, prvtHqosSvcIngQueueWred=prvtHqosSvcIngQueueWred, prvtHqosIfNetworkPolicy=prvtHqosIfNetworkPolicy, prvtHqosSvcEgrQueueRowStatus=prvtHqosSvcEgrQueueRowStatus, prvtHqosSvcIngFcDefaultEntry=prvtHqosSvcIngFcDefaultEntry, prvtHqosNetEgrQStatsWredYlwBytes=prvtHqosNetEgrQStatsWredYlwBytes, prvtHqosSchedEgrRootRowStatus=prvtHqosSchedEgrRootRowStatus, schedObjects=schedObjects, prvtHqosSvcIngQStatsWredYlwBytes=prvtHqosSvcIngQStatsWredYlwBytes, prvtHqosNetIngLspExpRowStatus=prvtHqosNetIngLspExpRowStatus, prvtHqosShaperL1EgrPrfPIR=prvtHqosShaperL1EgrPrfPIR, prvtHqosSvcEgrFcQueueRowStatus=prvtHqosSvcEgrFcQueueRowStatus, prvtHqosSchedIngRootLevel=prvtHqosSchedIngRootLevel, policerObjects=policerObjects, prvtHqosWfqSvcEgrPrfCirWeight=prvtHqosWfqSvcEgrPrfCirWeight, prvtHqosSvcEgrQStatsYlwPckts=prvtHqosSvcEgrQStatsYlwPckts, prvtHqosSvcIngFcDot1pValue=prvtHqosSvcIngFcDot1pValue, prvtHqosWfqSchedEgrPrfWeight=prvtHqosWfqSchedEgrPrfWeight, prvtHqosSchedIngVirtDescr=prvtHqosSchedIngVirtDescr, PrvtHqosNetPolNameType=PrvtHqosNetPolNameType, prvtHqosNetQPolicyDescr=prvtHqosNetQPolicyDescr, prvtHqosNetEgrQStatsYlwBytes=prvtHqosNetEgrQStatsYlwBytes, prvtHqosNetEgrFcEntry=prvtHqosNetEgrFcEntry, prvtHqosNetQPolicyTable=prvtHqosNetQPolicyTable, prvtHqosSvcEgrDescr=prvtHqosSvcEgrDescr, prvtHqosSvcIngFcQueueType=prvtHqosSvcIngFcQueueType, prvtHqosShaperL1IngPrfRowStatus=prvtHqosShaperL1IngPrfRowStatus, prvtHqosSvcIngFcDot1pTable=prvtHqosSvcIngFcDot1pTable, prvtHqosSvcIngQStatsPolDropBytes=prvtHqosSvcIngQStatsPolDropBytes, prvtHqosSvcEgrQStatsGrnBytes=prvtHqosSvcEgrQStatsGrnBytes, PrvtHqosLspExpValueType=PrvtHqosLspExpValueType, prvtHqosNetQPolicyFcQueueEntry=prvtHqosNetQPolicyFcQueueEntry)
